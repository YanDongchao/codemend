(dp1
S'val'
p2
(dp3
(S'stem'
p4
S'basefmt'
p5
S"'r-'"
p6
tp7
(icodemend.demo.code_suggest
Element
p8
(dp9
S'count'
p10
I2
sS'doc'
p11
S''
sS'item_id'
p12
Vstem.basefmt.'r-'
p13
sS'children'
p14
(lp15
sg2
g6
sbs(S'bar'
p16
S'width'
p17
S'10'
p18
tp19
(icodemend.demo.code_suggest
Element
p20
(dp21
g10
I3
sg11
S''
sg12
Vbar.width.10
p22
sg14
(lp23
sg2
g18
sbs(S'tricontourf'
p24
S'N'
tp25
(icodemend.demo.code_suggest
Element
p26
(dp27
g10
I0
sg11
S'contour n automatically-chosen levels .'
p28
sg12
Vtricontourf.N
p29
sg14
(lp30
sg2
S'N'
sbs(S'get_sparse_matrix'
p31
S'N'
tp32
(icodemend.demo.code_suggest
Element
p33
(dp34
g10
I0
sg11
S'return a m x n sparse matrix with frac elements randomly filled .'
p35
sg12
Vget_sparse_matrix.N
p36
sg14
(lp37
sg2
S'N'
sbs(S'set_xscale'
p38
S'nonpos'
p39
tp40
(icodemend.demo.code_suggest
Element
p41
(dp42
g10
I0
sg11
S'values beyond ] 0 , 1 [ can be masked as invalid , or clipped to a number very close to 0 or 1'
p43
sg12
Vset_xscale.nonpos
p44
sg14
(lp45
sg2
g39
sbs(S'barbs'
p46
S'anchor'
p47
tp48
(icodemend.demo.code_suggest
Element
p49
(dp50
g10
I0
sg11
S'anchor'
p51
sg12
Vbarbs.anchor
p52
sg14
(lp53
sg2
g47
sbs(S'quotes_historical_yahoo_ohlc'
p54
S'date2'
p55
tp56
(icodemend.demo.code_suggest
Element
p57
(dp58
g10
I0
sg11
S'end date'
p59
sg12
Vquotes_historical_yahoo_ohlc.date2
p60
sg14
(lp61
sg2
g55
sbs(S'grid'
p62
S'figure'
p63
tp64
(icodemend.demo.code_suggest
Element
p65
(dp66
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p67
sg12
Vgrid.figure
p68
sg14
(lp69
sg2
g63
sbs(S'set_linewidth'
p70
S'lw'
p71
tp72
(icodemend.demo.code_suggest
Element
p73
(dp74
g10
I0
sg11
S'set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence'
p75
sg12
Vset_linewidth.lw
p76
sg14
(lp77
sg2
g71
sbs(S'get_xyz_where'
p78
S'Z'
tp79
(icodemend.demo.code_suggest
Element
p80
(dp81
g10
I0
sg11
S'z and cond are m x n matrices . z are data and cond is a boolean matrix where some condition is satisfied . return value is ( x , y , z ) where x and y are the indices into z and z are the values of z at those indices . x , y , and z are 1d arrays .'
p82
sg12
Vget_xyz_where.Z
p83
sg14
(lp84
sg2
S'Z'
sbs(S'grid'
p85
S'prop_cycle'
p86
tp87
(icodemend.demo.code_suggest
Element
p88
(dp89
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p90
sg12
Vgrid.prop_cycle
p91
sg14
(lp92
sg2
g86
sbs(S'annotate'
p93
S'xycoords'
p94
S"('figure fraction', 'data')"
p95
tp96
(icodemend.demo.code_suggest
Element
p97
(dp98
g10
I1
sg11
S''
sg12
Vannotate.xycoords.('figure fraction', 'data')
p99
sg14
(lp100
sg2
g95
sbs(S'scatter'
p101
S'alpha'
p102
S'0.8'
p103
tp104
(icodemend.demo.code_suggest
Element
p105
(dp106
g10
I2
sg11
S''
sg12
Vscatter.alpha.0/8
p107
sg14
(lp108
sg2
g103
sbs(S'savefig'
p109
S'edgecolor'
p110
S"'none'"
p111
tp112
(icodemend.demo.code_suggest
Element
p113
(dp114
g10
I3
sg11
S''
sg12
Vsavefig.edgecolor.'none'
p115
sg14
(lp116
sg2
g111
sbs(S'plot'
p117
S'label'
p118
S"'Point 2'"
p119
tp120
(icodemend.demo.code_suggest
Element
p121
(dp122
g10
I1
sg11
S''
sg12
Vplot.label.'Point 2'
p123
sg14
(lp124
sg2
g119
sbs(S'axvline'
p125
S'ymin'
p126
S'1'
tp127
(icodemend.demo.code_suggest
Element
p128
(dp129
g10
I1
sg11
S''
sg12
Vaxvline.ymin.1
p130
sg14
(lp131
sg2
S'1'
sbs(g117
S'color'
p132
S"['red', 'blue', 'green']"
p133
tp134
(icodemend.demo.code_suggest
Element
p135
(dp136
g10
I1
sg11
S''
sg12
Vplot.color.['red', 'blue', 'green']
p137
sg14
(lp138
sg2
g133
sbs(S'subplots'
p139
S'figsize'
p140
S'(figw, figh)'
p141
tp142
(icodemend.demo.code_suggest
Element
p143
(dp144
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(figw, figh)
p145
sg14
(lp146
sg2
g141
sbs(S'render_rect_filled'
p147
S'y1'
p148
tp149
(icodemend.demo.code_suggest
Element
p150
(dp151
g10
I0
sg11
S'draw a filled rectangle from ( x1 , y1 ) to ( x2 , y2 ) . draw a filled black rectangle from ( x1 , y1 ) to ( x2 , y2 ) .'
p152
sg12
Vrender_rect_filled.y1
p153
sg14
(lp154
sg2
g148
sbsS'window_hanning'
p155
(icodemend.demo.code_suggest
Element
p156
(dp157
g10
I0
sg11
S'return x times the hanning window of len(x ) .'
p158
sg12
Vwindow_hanning
p159
sg14
(lp160
sg2
g155
sbs(g93
S'xy'
p161
S'(xpos, (length / 2.0))'
p162
tp163
(icodemend.demo.code_suggest
Element
p164
(dp165
g10
I1
sg11
S''
sg12
Vannotate.xy.(xpos, (length / 2/0))
p166
sg14
(lp167
sg2
g162
sbs(S'xkcd'
p168
S'scale'
p169
tp170
(icodemend.demo.code_suggest
Element
p171
(dp172
g10
I1
sg11
S'the amplitude of the wiggle perpendicular to the source line .'
p173
sg12
Vxkcd.scale
p174
sg14
(lp175
(icodemend.demo.code_suggest
Element
p176
(dp177
g10
I1
sg11
S''
sg12
Vxkcd.scale.1
p178
sg14
(lp179
sg2
S'1'
sbasg2
g169
sbs(S'legend'
p180
S'fontsize'
p181
tp182
(icodemend.demo.code_suggest
Element
p183
(dp184
g10
I17
sg11
S'controls the font size of the legend . if the value is numeric the size will be the absolute font size in points . string values are relative to the current default font size . this argument is only used if prop is not specified .'
p185
sg12
Vlegend.fontsize
p186
sg14
(lp187
(icodemend.demo.code_suggest
Element
p188
(dp189
g10
I8
sg11
S''
sg12
Vlegend.fontsize.8
p190
sg14
(lp191
sg2
S'8'
sba(icodemend.demo.code_suggest
Element
p192
(dp193
g10
I2
sg11
S''
sg12
Vlegend.fontsize.'medium'
p194
sg14
(lp195
sg2
S"'medium'"
p196
sba(icodemend.demo.code_suggest
Element
p197
(dp198
g10
I2
sg11
S''
sg12
Vlegend.fontsize.'small'
p199
sg14
(lp200
sg2
S"'small'"
p201
sba(icodemend.demo.code_suggest
Element
p202
(dp203
g10
I1
sg11
S''
sg12
Vlegend.fontsize.'x-large'
p204
sg14
(lp205
sg2
S"'x-large'"
p206
sba(icodemend.demo.code_suggest
Element
p207
(dp208
g10
I1
sg11
S''
sg12
Vlegend.fontsize.10
p209
sg14
(lp210
sg2
S'10'
p211
sba(icodemend.demo.code_suggest
Element
p212
(dp213
g10
I1
sg11
S''
sg12
Vlegend.fontsize.11
p214
sg14
(lp215
sg2
S'11'
p216
sba(icodemend.demo.code_suggest
Element
p217
(dp218
g10
I1
sg11
S''
sg12
Vlegend.fontsize.5
p219
sg14
(lp220
sg2
S'5'
sba(icodemend.demo.code_suggest
Element
p221
(dp222
g10
I1
sg11
S''
sg12
Vlegend.fontsize.7
p223
sg14
(lp224
sg2
S'7'
sbasg2
g181
sbs(S'arrow'
p225
S'xmargin'
p226
tp227
(icodemend.demo.code_suggest
Element
p228
(dp229
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p230
sg12
Varrow.xmargin
p231
sg14
(lp232
sg2
g226
sbsS'yaxis_inverted'
p233
(icodemend.demo.code_suggest
Element
p234
(dp235
g10
I0
sg11
S'returns true if the y-axis is inverted .'
p236
sg12
Vyaxis_inverted
p237
sg14
(lp238
sg2
g233
sbs(g117
g118
S"'BA'"
p239
tp240
(icodemend.demo.code_suggest
Element
p241
(dp242
g10
I1
sg11
S''
sg12
Vplot.label.'BA'
p243
sg14
(lp244
sg2
g239
sbs(S'figure'
p245
g140
S'(20.48, 10.24)'
p246
tp247
(icodemend.demo.code_suggest
Element
p248
(dp249
g10
I1
sg11
S''
sg12
Vfigure.figsize.(20/48, 10/24)
p250
sg14
(lp251
sg2
g246
sbs(S'legend'
p252
S'bbox_to_anchor'
p253
S'(0.75, (-1.0))'
p254
tp255
(icodemend.demo.code_suggest
Element
p256
(dp257
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/75, (-1/0))
p258
sg14
(lp259
sg2
g254
sbs(S'loglog'
p260
S'markeredgecolor'
p261
tp262
(icodemend.demo.code_suggest
Element
p263
(dp264
g10
I0
sg11
S'set the marker edge color'
p265
sg12
Vloglog.markeredgecolor
p266
sg14
(lp267
sg2
g261
sbs(S'pcolormesh'
p268
S'_interpolation_steps'
p269
tp270
(icodemend.demo.code_suggest
Element
p271
(dp272
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p273
sg12
Vpcolormesh._interpolation_steps
p274
sg14
(lp275
sg2
g269
sbs(S'loglog'
p276
S'figure'
p277
tp278
(icodemend.demo.code_suggest
Element
p279
(dp280
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p281
sg12
Vloglog.figure
p282
sg14
(lp283
sg2
g277
sbsS'figlegend'
p284
(icodemend.demo.code_suggest
Element
p285
(dp286
g10
I8
sg11
S'place a legend in the figure .'
p287
sg12
Vfiglegend
p288
sg14
(lp289
sg2
g284
sbs(S'text'
p290
S'style'
p291
tp292
(icodemend.demo.code_suggest
Element
p293
(dp294
g10
I1
sg11
S'set the font style .'
p295
sg12
Vtext.style
p296
sg14
(lp297
(icodemend.demo.code_suggest
Element
p298
(dp299
g10
I1
sg11
S''
sg12
Vtext.style.'italic'
p300
sg14
(lp301
sg2
S"'italic'"
p302
sbasg2
g291
sbs(S'contourf'
p303
S'Y'
tp304
(icodemend.demo.code_suggest
Element
p305
(dp306
g10
I0
sg11
S'x , y specify the ( x , y ) coordinates of the surface|||x and y must both be 2-d with the same shape as z , or they must both be 1-d such that len(x ) is the number of columns in z and len(y ) is the number of rows in z .'
p307
sg12
Vcontourf.Y
p308
sg14
(lp309
sg2
S'Y'
sbs(g252
g253
S'(0, (-0.21), 1.0, 0.102)'
p310
tp311
(icodemend.demo.code_suggest
Element
p312
(dp313
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0, (-0/21), 1/0, 0/102)
p314
sg14
(lp315
sg2
g310
sbs(S'add_axes'
p316
S'yscale'
p317
tp318
(icodemend.demo.code_suggest
Element
p319
(dp320
g10
I0
sg11
S'set the scaling of the y-axis'
p321
sg12
Vadd_axes.yscale
p322
sg14
(lp323
sg2
g317
sbs(S'imshow'
p324
S'cmap'
p325
S"'gray_r'"
p326
tp327
(icodemend.demo.code_suggest
Element
p328
(dp329
g10
I2
sg11
S''
sg12
Vimshow.cmap.'gray_r'
p330
sg14
(lp331
sg2
g326
sbs(S'text'
p332
S'bbox'
p333
S"{'facecolor': 'white', 'alpha': 0.6}"
p334
tp335
(icodemend.demo.code_suggest
Element
p336
(dp337
g10
I1
sg11
S''
sg12
Vtext.bbox.{'facecolor': 'white', 'alpha': 0/6}
p338
sg14
(lp339
sg2
g334
sbs(S'streamplot'
p340
S'cmap'
p341
tp342
(icodemend.demo.code_suggest
Element
p343
(dp344
g10
I3
sg11
S'colormap used to plot streamlines and arrows . only necessary when using an array input for color .'
p345
sg12
Vstreamplot.cmap
p346
sg14
(lp347
sg2
g341
sbs(g117
S'markeredgecolor'
p348
S"'none'"
p349
tp350
(icodemend.demo.code_suggest
Element
p351
(dp352
g10
I3
sg11
S''
sg12
Vplot.markeredgecolor.'none'
p353
sg14
(lp354
sg2
g349
sbs(S'distances_along_curve'
p355
S'M'
tp356
(icodemend.demo.code_suggest
Element
p357
(dp358
g10
I0
sg11
S'where x is an m x n array or matrix . the distances between successive rows is computed . distance is the standard euclidean distance .'
p359
sg12
Vdistances_along_curve.M
p360
sg14
(lp361
sg2
S'M'
sbs(S'gca'
p362
S'alpha'
p363
tp364
(icodemend.demo.code_suggest
Element
p365
(dp366
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p367
sg12
Vgca.alpha
p368
sg14
(lp369
sg2
g363
sbs(g139
S'nrows'
p370
S'1'
tp371
(icodemend.demo.code_suggest
Element
p372
(dp373
g10
I11
sg11
S''
sg12
Vsubplots.nrows.1
p374
sg14
(lp375
sg2
S'1'
sbsS'get_extent'
p376
(icodemend.demo.code_suggest
Element
p377
(dp378
g10
I5
sg11
S'get the image extent return with , height , xdescent , ydescent of box'
p379
sg12
Vget_extent
p380
sg14
(lp381
sg2
g376
sbsS'invert_yaxis'
p382
(icodemend.demo.code_suggest
Element
p383
(dp384
g10
I30
sg11
S'invert the y-axis .'
p385
sg12
Vinvert_yaxis
p386
sg14
(lp387
sg2
g382
sbs(S'set_xticklabels'
p388
S'rotation'
p389
S'30'
p390
tp391
(icodemend.demo.code_suggest
Element
p392
(dp393
g10
I1
sg11
S''
sg12
Vset_xticklabels.rotation.30
p394
sg14
(lp395
sg2
g390
sbs(S'clabel'
p396
S'manual'
p397
tp398
(icodemend.demo.code_suggest
Element
p399
(dp400
g10
I1
sg11
S'if true , contour labels will be placed manually using mouse clicks . click the first button near a contour to add a label , click the second button ( or potentially both mouse buttons at once ) to finish adding labels . the third button can be used to remove the last label added , but only if labels are not inline . alternatively , the keyboard can be used to select label locations ( enter to end label placement , delete or backspace act like the third mouse button , and any other key will select a label location ) . manual can be an iterable object of x,y tuples . contour labels will be created as if mouse is clicked at each x,y positions .'
p401
sg12
Vclabel.manual
p402
sg14
(lp403
(icodemend.demo.code_suggest
Element
p404
(dp405
g10
I1
sg11
S''
sg12
Vclabel.manual.manual_locations
p406
sg14
(lp407
sg2
S'manual_locations'
p408
sbasg2
g397
sbs(g125
g132
S"'blue'"
p409
tp410
(icodemend.demo.code_suggest
Element
p411
(dp412
g10
I3
sg11
S''
sg12
Vaxvline.color.'blue'
p413
sg14
(lp414
sg2
g409
sbsS'pchanged'
p415
(icodemend.demo.code_suggest
Element
p416
(dp417
g10
I0
sg11
S'fire an event when property changed , calling all of the registered callbacks .'
p418
sg12
Vpchanged
p419
sg14
(lp420
sg2
g415
sbs(S'fill'
p421
g110
S"'blue'"
p422
tp423
(icodemend.demo.code_suggest
Element
p424
(dp425
g10
I1
sg11
S''
sg12
Vfill.edgecolor.'blue'
p426
sg14
(lp427
sg2
g422
sbs(S'loglog'
p428
S'agg_filter'
p429
tp430
(icodemend.demo.code_suggest
Element
p431
(dp432
g10
I0
sg11
S'set agg_filter fuction .'
p433
sg12
Vloglog.agg_filter
p434
sg14
(lp435
sg2
g429
sbs(S'hist2d'
p436
S'normed'
p437
S'True'
p438
tp439
(icodemend.demo.code_suggest
Element
p440
(dp441
g10
I1
sg11
S''
sg12
Vhist2d.normed.True
p442
sg14
(lp443
sg2
g438
sbs(S'set_boxstyle'
p444
S'boxstyle'
p445
tp446
(icodemend.demo.code_suggest
Element
p447
(dp448
g10
I0
sg11
S'boxstyle can be a string with boxstyle name with optional comma-separated attributes . alternatively , the attrs can be provided as keywords :|||without argument ( or with boxstyle = none ) , it returns available box styles .'
p449
sg12
Vset_boxstyle.boxstyle
p450
sg14
(lp451
sg2
g445
sbs(S'errorbar'
p452
S'yerr'
p453
S'z1'
p454
tp455
(icodemend.demo.code_suggest
Element
p456
(dp457
g10
I1
sg11
S''
sg12
Verrorbar.yerr.z1
p458
sg14
(lp459
sg2
g454
sbsS'set_xy'
p460
(icodemend.demo.code_suggest
Element
p461
(dp462
g10
I14
sg11
S'set the left and bottom coords of the rectangle set the vertices of the polygon'
p463
sg12
Vset_xy
p464
sg14
(lp465
(icodemend.demo.code_suggest
Element
p466
(dp467
g10
I0
sg11
S'the coordinates of the vertices as a nx2 ndarray or iterable of pairs .'
p468
sg12
Vset_xy.xy
p469
sg14
(lp470
sg2
S'xy'
p471
sbasg2
g460
sbsS'l2norm'
p472
(icodemend.demo.code_suggest
Element
p473
(dp474
g10
I0
sg11
S'return the l2 norm of a , flattened out .'
p475
sg12
Vl2norm
p476
sg14
(lp477
(icodemend.demo.code_suggest
Element
p478
(dp479
g10
I0
sg11
S'return the l2 norm of a , flattened out .'
p480
sg12
Vl2norm.a
p481
sg14
(lp482
sg2
S'a'
sba(icodemend.demo.code_suggest
Element
p483
(dp484
g10
I0
sg11
S'return the l2 norm of a , flattened out .'
p485
sg12
Vl2norm.l2
p486
sg14
(lp487
sg2
S'l2'
p488
sbasg2
g472
sbs(g16
S'bottom'
p489
S'meta_second'
p490
tp491
(icodemend.demo.code_suggest
Element
p492
(dp493
g10
I1
sg11
S''
sg12
Vbar.bottom.meta_second
p494
sg14
(lp495
sg2
g490
sbsS'get_underline_thickness'
p496
(icodemend.demo.code_suggest
Element
p497
(dp498
g10
I0
sg11
S'get the line thickness that matches the given font . return the underline thickness as float'
p499
sg12
Vget_underline_thickness
p500
sg14
(lp501
sg2
g496
sbs(g252
g253
S'[0.5, 0.5]'
p502
tp503
(icodemend.demo.code_suggest
Element
p504
(dp505
g10
I2
sg11
S''
sg12
Vlegend.bbox_to_anchor.[0/5, 0/5]
p506
sg14
(lp507
sg2
g502
sbs(g93
g132
S"'b'"
p508
tp509
(icodemend.demo.code_suggest
Element
p510
(dp511
g10
I1
sg11
S''
sg12
Vannotate.color.'b'
p512
sg14
(lp513
sg2
g508
sbs(S'pcolor'
p514
S'norm'
p515
g515
tp516
(icodemend.demo.code_suggest
Element
p517
(dp518
g10
I3
sg11
S''
sg12
Vpcolor.norm.norm
p519
sg14
(lp520
sg2
g515
sbs(S'barh'
p521
S'anchor'
p522
tp523
(icodemend.demo.code_suggest
Element
p524
(dp525
g10
I0
sg11
S'anchor'
p526
sg12
Vbarh.anchor
p527
sg14
(lp528
sg2
g522
sbs(S'legend'
p529
S'title'
p530
tp531
(icodemend.demo.code_suggest
Element
p532
(dp533
g10
I11
sg11
S"the legend 's title . default is no title ( none ) ."
p534
sg12
Vlegend.title
p535
sg14
(lp536
(icodemend.demo.code_suggest
Element
p537
(dp538
g10
I2
sg11
S''
sg12
Vlegend.title.'Legend'
p539
sg14
(lp540
sg2
S"'Legend'"
p541
sba(icodemend.demo.code_suggest
Element
p542
(dp543
g10
I2
sg11
S''
sg12
Vlegend.title.'sample'
p544
sg14
(lp545
sg2
S"'sample'"
p546
sba(icodemend.demo.code_suggest
Element
p547
(dp548
g10
I1
sg11
S''
sg12
Vlegend.title.'$\u005c\u005cbf{Title}$'
p549
sg14
(lp550
sg2
S"'$\\\\bf{Title}$'"
p551
sba(icodemend.demo.code_suggest
Element
p552
(dp553
g10
I1
sg11
S''
sg12
Vlegend.title.'LEGEND'
p554
sg14
(lp555
sg2
S"'LEGEND'"
p556
sba(icodemend.demo.code_suggest
Element
p557
(dp558
g10
I1
sg11
S''
sg12
Vlegend.title.'Series'
p559
sg14
(lp560
sg2
S"'Series'"
p561
sba(icodemend.demo.code_suggest
Element
p562
(dp563
g10
I1
sg11
S''
sg12
Vlegend.title.'Spectral classes'
p564
sg14
(lp565
sg2
S"'Spectral classes'"
p566
sba(icodemend.demo.code_suggest
Element
p567
(dp568
g10
I1
sg11
S''
sg12
Vlegend.title.'Title'
p569
sg14
(lp570
sg2
S"'Title'"
p571
sba(icodemend.demo.code_suggest
Element
p572
(dp573
g10
I1
sg11
S''
sg12
Vlegend.title.'test'
p574
sg14
(lp575
sg2
S"'test'"
p576
sba(icodemend.demo.code_suggest
Element
p577
(dp578
g10
I1
sg11
S''
sg12
Vlegend.title.labelE
p579
sg14
(lp580
sg2
S'labelE'
p581
sbasg2
g530
sbs(S'axhline'
p582
S'xmax'
p583
S'1'
tp584
(icodemend.demo.code_suggest
Element
p585
(dp586
g10
I2
sg11
S''
sg12
Vaxhline.xmax.1
p587
sg14
(lp588
sg2
S'1'
sbs(S'rc_params_from_file'
p589
S'fail_on_error'
p590
tp591
(icodemend.demo.code_suggest
Element
p592
(dp593
g10
I0
sg11
S'if true , raise an error when the parser fails to convert a parameter .'
p594
sg12
Vrc_params_from_file.fail_on_error
p595
sg14
(lp596
sg2
g590
sbs(S'broken_barh'
p597
S'offset_position'
p598
tp599
(icodemend.demo.code_suggest
Element
p600
(dp601
g10
I0
sg11
S'set how offsets are applied .'
p602
sg12
Vbroken_barh.offset_position
p603
sg14
(lp604
sg2
g598
sbs(S'imshow'
p605
S'vmin, vmax'
p606
tp607
(icodemend.demo.code_suggest
Element
p608
(dp609
g10
I0
sg11
S'vmin and vmax are used in conjunction with norm to normalize luminance data . note if you pass a norm instance , your settings for vmin and vmax will be ignored .'
p610
sg12
Vimshow.vmin, vmax
p611
sg14
(lp612
sg2
g606
sbs(S'semilogy'
p613
S'xticks'
p614
tp615
(icodemend.demo.code_suggest
Element
p616
(dp617
g10
I0
sg11
S'set the x ticks with list of ticks'
p618
sg12
Vsemilogy.xticks
p619
sg14
(lp620
sg2
g614
sbsS'as_list'
p621
(icodemend.demo.code_suggest
Element
p622
(dp623
g10
I0
sg11
S'return a list of the axes instances that have been added to the figure'
p624
sg12
Vas_list
p625
sg14
(lp626
sg2
g621
sbs(g332
S'size'
p627
S'16'
p628
tp629
(icodemend.demo.code_suggest
Element
p630
(dp631
g10
I1
sg11
S''
sg12
Vtext.size.16
p632
sg14
(lp633
sg2
g628
sbs(S'thumbnail'
p634
S'scale'
p635
tp636
(icodemend.demo.code_suggest
Element
p637
(dp638
g10
I0
sg11
S'the scale factor for the thumbnail'
p639
sg12
Vthumbnail.scale
p640
sg14
(lp641
sg2
g635
sbsS'get_width'
p642
(icodemend.demo.code_suggest
Element
p643
(dp644
g10
I10
sg11
S'return the width of the rectangle'
p645
sg12
Vget_width
p646
sg14
(lp647
sg2
g642
sbs(g139
g140
S'(10, 5)'
p648
tp649
(icodemend.demo.code_suggest
Element
p650
(dp651
g10
I10
sg11
S''
sg12
Vsubplots.figsize.(10, 5)
p652
sg14
(lp653
sg2
g648
sbs(S'tricontourf'
p654
S'levels'
p655
tp656
(icodemend.demo.code_suggest
Element
p657
(dp658
g10
I2
sg11
S'a list of floating point numbers indicating the level curves to draw , in increasing order ; e.g. , to draw just the zero contour pass levels=[0 ]'
p659
sg12
Vtricontourf.levels
p660
sg14
(lp661
(icodemend.demo.code_suggest
Element
p662
(dp663
g10
I2
sg11
S''
sg12
Vtricontourf.levels.levels
p664
sg14
(lp665
sg2
S'levels'
p666
sbasg2
g655
sbs(g101
S'picker'
p667
S'3'
tp668
(icodemend.demo.code_suggest
Element
p669
(dp670
g10
I1
sg11
S''
sg12
Vscatter.picker.3
p671
sg14
(lp672
sg2
S'3'
sbs(S'annotate'
p673
S'text'
p674
tp675
(icodemend.demo.code_suggest
Element
p676
(dp677
g10
I0
sg11
S'set the text string s'
p678
sg12
Vannotate.text
p679
sg14
(lp680
sg2
g674
sbs(S'ispower2'
p681
S'n'
tp682
(icodemend.demo.code_suggest
Element
p683
(dp684
g10
I0
sg11
S'returns the log base 2 of n if n is a power of 2 , zero otherwise .|||note the potential ambiguity if n = = 1 : 2**0 = = 1 , interpret accordingly .'
p685
sg12
Vispower2.n
p686
sg14
(lp687
sg2
S'n'
sbs(g16
g110
S"'gray'"
p688
tp689
(icodemend.demo.code_suggest
Element
p690
(dp691
g10
I1
sg11
S''
sg12
Vbar.edgecolor.'gray'
p692
sg14
(lp693
sg2
g688
sbs(S'csd'
p694
S'closed'
p695
tp696
(icodemend.demo.code_suggest
Element
p697
(dp698
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p699
sg12
Vcsd.closed
p700
sg14
(lp701
sg2
g695
sbs(g252
S'handletextpad'
p702
S'0.05'
p703
tp704
(icodemend.demo.code_suggest
Element
p705
(dp706
g10
I1
sg11
S''
sg12
Vlegend.handletextpad.0/05
p707
sg14
(lp708
sg2
g703
sbs(S'tricontourf'
p709
S'xunits'
p710
tp711
(icodemend.demo.code_suggest
Element
p712
(dp713
g10
I0
sg11
S'override axis units by specifying an instance of a matplotlib.units.conversioninterface .'
p714
sg12
Vtricontourf.xunits
p715
sg14
(lp716
sg2
g710
sbs(S'axvspan'
p717
S'zorder'
p718
tp719
(icodemend.demo.code_suggest
Element
p720
(dp721
g10
I0
sg11
S'set the zorder for the artist .'
p722
sg12
Vaxvspan.zorder
p723
sg14
(lp724
sg2
g718
sbs(S'barbs'
p725
S'clip_path'
p726
tp727
(icodemend.demo.code_suggest
Element
p728
(dp729
g10
I0
sg11
S"set the artist 's clip path , which may be"
p730
sg12
Vbarbs.clip_path
p731
sg14
(lp732
sg2
g726
sbs(S'save'
p733
S'metadata'
p734
tp735
(icodemend.demo.code_suggest
Element
p736
(dp737
g10
I1
sg11
S'metadata is a dictionary of keys and values for metadata to include in the output file . some keys that may be of use include : title , artist , genre , subject , copyright , srcform , comment .'
p738
sg12
Vsave.metadata
p739
sg14
(lp740
(icodemend.demo.code_suggest
Element
p741
(dp742
g10
I1
sg11
S''
sg12
Vsave.metadata.{'artist': 'Guido'}
p743
sg14
(lp744
sg2
S"{'artist': 'Guido'}"
p745
sbasg2
g734
sbs(g125
g132
S"'g'"
p746
tp747
(icodemend.demo.code_suggest
Element
p748
(dp749
g10
I2
sg11
S''
sg12
Vaxvline.color.'g'
p750
sg14
(lp751
sg2
g746
sbs(S'plotting'
p752
S'cursor_props'
p753
tp754
(icodemend.demo.code_suggest
Element
p755
(dp756
g10
I0
sg11
S'set the cursor property as'
p757
sg12
Vplotting.cursor_props
p758
sg14
(lp759
sg2
g753
sbsS'on_mappable_changed'
p760
(icodemend.demo.code_suggest
Element
p761
(dp762
g10
I0
sg11
S"updates this colorbar to match the mappable 's properties ."
p763
sg12
Von_mappable_changed
p764
sg14
(lp765
sg2
g760
sbs(S'contourf'
p766
g102
S'0.2'
p767
tp768
(icodemend.demo.code_suggest
Element
p769
(dp770
g10
I4
sg11
S''
sg12
Vcontourf.alpha.0/2
p771
sg14
(lp772
sg2
g767
sbsS'get_solid_joinstyle'
p773
(icodemend.demo.code_suggest
Element
p774
(dp775
g10
I0
sg11
S'get the join style for solid linestyles'
p776
sg12
Vget_solid_joinstyle
p777
sg14
(lp778
sg2
g773
sbsS'set_axis_off'
p779
(icodemend.demo.code_suggest
Element
p780
(dp781
g10
I35
sg11
S'turn off the axis'
p782
sg12
Vset_axis_off
p783
sg14
(lp784
sg2
g779
sbs(g324
S'extent'
p785
S'(min(x), max(x), max(y), min(y))'
p786
tp787
(icodemend.demo.code_suggest
Element
p788
(dp789
g10
I1
sg11
S''
sg12
Vimshow.extent.(min(x), max(x), max(y), min(y))
p790
sg14
(lp791
sg2
g786
sbs(g117
g118
S"'Heap'"
p792
tp793
(icodemend.demo.code_suggest
Element
p794
(dp795
g10
I1
sg11
S''
sg12
Vplot.label.'Heap'
p796
sg14
(lp797
sg2
g792
sbs(S'hist'
p798
S'range'
p799
tp800
(icodemend.demo.code_suggest
Element
p801
(dp802
g10
I17
sg11
S'the lower and upper range of the bins . lower and upper outliers are ignored . if not provided , range is ( x.min ( ) , x.max ( ) ) . range has no effect if bins is a sequence .'
p803
sg12
Vhist.range
p804
sg14
(lp805
(icodemend.demo.code_suggest
Element
p806
(dp807
g10
I3
sg11
S''
sg12
Vhist.range.((-3), 3)
p808
sg14
(lp809
sg2
S'((-3), 3)'
p810
sba(icodemend.demo.code_suggest
Element
p811
(dp812
g10
I2
sg11
S''
sg12
Vhist.range.[(-0/5), 10/5]
p813
sg14
(lp814
sg2
S'[(-0.5), 10.5]'
p815
sba(icodemend.demo.code_suggest
Element
p816
(dp817
g10
I2
sg11
S''
sg12
Vhist.range.[0, 180]
p818
sg14
(lp819
sg2
S'[0, 180]'
p820
sba(icodemend.demo.code_suggest
Element
p821
(dp822
g10
I1
sg11
S''
sg12
Vhist.range.((-50), 50)
p823
sg14
(lp824
sg2
S'((-50), 50)'
p825
sba(icodemend.demo.code_suggest
Element
p826
(dp827
g10
I1
sg11
S''
sg12
Vhist.range.(0, 200)
p828
sg14
(lp829
sg2
S'(0, 200)'
p830
sba(icodemend.demo.code_suggest
Element
p831
(dp832
g10
I1
sg11
S''
sg12
Vhist.range.(0, 30)
p833
sg14
(lp834
sg2
S'(0, 30)'
p835
sba(icodemend.demo.code_suggest
Element
p836
(dp837
g10
I1
sg11
S''
sg12
Vhist.range.(0, samples/max())
p838
sg14
(lp839
sg2
S'(0, samples.max())'
p840
sba(icodemend.demo.code_suggest
Element
p841
(dp842
g10
I1
sg11
S''
sg12
Vhist.range.(1, 100)
p843
sg14
(lp844
sg2
S'(1, 100)'
p845
sba(icodemend.demo.code_suggest
Element
p846
(dp847
g10
I1
sg11
S''
sg12
Vhist.range.(a, b)
p848
sg14
(lp849
sg2
S'(a, b)'
p850
sba(icodemend.demo.code_suggest
Element
p851
(dp852
g10
I1
sg11
S''
sg12
Vhist.range.(minimum, maximum)
p853
sg14
(lp854
sg2
S'(minimum, maximum)'
p855
sba(icodemend.demo.code_suggest
Element
p856
(dp857
g10
I1
sg11
S''
sg12
Vhist.range.(minval, maxval)
p858
sg14
(lp859
sg2
S'(minval, maxval)'
p860
sba(icodemend.demo.code_suggest
Element
p861
(dp862
g10
I1
sg11
S''
sg12
Vhist.range.None
p863
sg14
(lp864
sg2
S'None'
p865
sba(icodemend.demo.code_suggest
Element
p866
(dp867
g10
I1
sg11
S''
sg12
Vhist.range.[6/5, 12/5]
p868
sg14
(lp869
sg2
S'[6.5, 12.5]'
p870
sbasg2
g799
sbs(S'pcolormesh'
p871
S'animated'
p872
tp873
(icodemend.demo.code_suggest
Element
p874
(dp875
g10
I0
sg11
S"set the artist 's animation state ."
p876
sg12
Vpcolormesh.animated
p877
sg14
(lp878
sg2
g872
sbs(S'fill'
p879
S'ylim'
p880
tp881
(icodemend.demo.code_suggest
Element
p882
(dp883
g10
I0
sg11
S'set the data limits for the yaxis'
p884
sg12
Vfill.ylim
p885
sg14
(lp886
sg2
g880
sbs(S'axvspan'
p887
S'visible'
p888
tp889
(icodemend.demo.code_suggest
Element
p890
(dp891
g10
I0
sg11
S"set the artist 's visiblity ."
p892
sg12
Vaxvspan.visible
p893
sg14
(lp894
sg2
g888
sbs(S'arrow'
p895
S'aspect'
p896
tp897
(icodemend.demo.code_suggest
Element
p898
(dp899
g10
I0
sg11
S'aspect'
p900
sg12
Varrow.aspect
p901
sg14
(lp902
sg2
g896
sbs(g117
g118
S"'Some curve'"
p903
tp904
(icodemend.demo.code_suggest
Element
p905
(dp906
g10
I1
sg11
S''
sg12
Vplot.label.'Some curve'
p907
sg14
(lp908
sg2
g903
sbs(g125
S'zorder'
p909
S'0'
tp910
(icodemend.demo.code_suggest
Element
p911
(dp912
g10
I5
sg11
S''
sg12
Vaxvline.zorder.0
p913
sg14
(lp914
sg2
S'0'
sbs(g93
g627
S'25'
p915
tp916
(icodemend.demo.code_suggest
Element
p917
(dp918
g10
I1
sg11
S''
sg12
Vannotate.size.25
p919
sg14
(lp920
sg2
g915
sbsS'hold'
p921
(icodemend.demo.code_suggest
Element
p922
(dp923
g10
I49
sg11
S'set the hold state .'
p924
sg12
Vhold
p925
sg14
(lp926
(icodemend.demo.code_suggest
Element
p927
(dp928
g10
I0
sg11
S'set the hold state . if hold is none ( default ) , toggle the hold state . else set the hold state to boolean value b . set the hold state . if b is none ( default ) , toggle the hold state , else set the hold state to boolean value b :'
p929
sg12
Vhold.b
p930
sg14
(lp931
sg2
S'b'
sba(icodemend.demo.code_suggest
Element
p932
(dp933
g10
I0
sg11
S'when hold is true , subsequent plot commands will be added to the current axes . when hold is false , the current axes and figure will be cleared on the next plot command . set the hold state . if hold is none ( default ) , toggle the hold state . else set the hold state to boolean value b .'
p934
sg12
Vhold.hold
p935
sg14
(lp936
sg2
S'hold'
p937
sbasg2
g921
sbsS'locked'
p938
(icodemend.demo.code_suggest
Element
p939
(dp940
g10
I2
sg11
S'return true if the lock is currently held by an owner'
p941
sg12
Vlocked
p942
sg14
(lp943
sg2
g938
sbs(S'barh'
p944
S'height'
p945
S'0.8'
p946
tp947
(icodemend.demo.code_suggest
Element
p948
(dp949
g10
I1
sg11
S''
sg12
Vbarh.height.0/8
p950
sg14
(lp951
sg2
g946
sbs(g93
g627
S'15'
p952
tp953
(icodemend.demo.code_suggest
Element
p954
(dp955
g10
I3
sg11
S''
sg12
Vannotate.size.15
p956
sg14
(lp957
sg2
g952
sbs(S'subplot2grid'
p958
S'rowspan'
p959
S'1'
tp960
(icodemend.demo.code_suggest
Element
p961
(dp962
g10
I5
sg11
S''
sg12
Vsubplot2grid.rowspan.1
p963
sg14
(lp964
sg2
S'1'
sbs(S'add_axes'
p965
S'projection'
p966
S"'3d'"
p967
tp968
(icodemend.demo.code_suggest
Element
p969
(dp970
g10
I3
sg11
S''
sg12
Vadd_axes.projection.'3d'
p971
sg14
(lp972
sg2
g967
sbs(S'phase_spectrum'
p973
S'sides'
p974
tp975
(icodemend.demo.code_suggest
Element
p976
(dp977
g10
I0
sg11
S"specifies which sides of the spectrum to return . default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided ."
p978
sg12
Vphase_spectrum.sides
p979
sg14
(lp980
sg2
g974
sbs(g101
g102
S'0.1'
p981
tp982
(icodemend.demo.code_suggest
Element
p983
(dp984
g10
I1
sg11
S''
sg12
Vscatter.alpha.0/1
p985
sg14
(lp986
sg2
g981
sbs(S'cohere_pairs'
p987
S'preferSpeedOverMemory'
p988
tp989
(icodemend.demo.code_suggest
Element
p990
(dp991
g10
I0
sg11
S'preferspeedovermemory is an optional bool . defaults to true . if false , limits the caching by only making one , rather than two , complex cache arrays . this is useful if memory becomes critical . even when preferspeedovermemory is false , cohere_pairs ( ) will still give significant performace gains over calling cohere ( ) for each pair , and will use subtantially less memory than if preferspeedovermemory is true . in my tests with a 43000,64 array over all nonredundant pairs , preferspeedovermemory = true delivered a 33% performance boost on a 1.7ghz athlon with 512mb ram compared with preferspeedovermemory = false . but both solutions were more than 10x faster than naively crunching all possible pairs through cohere ( ) .'
p992
sg12
Vcohere_pairs.preferSpeedOverMemory
p993
sg14
(lp994
sg2
g988
sbs(S'quiver'
p995
S'clip_path'
p996
tp997
(icodemend.demo.code_suggest
Element
p998
(dp999
g10
I0
sg11
S"set the artist 's clip path , which may be"
p1000
sg12
Vquiver.clip_path
p1001
sg14
(lp1002
sg2
g996
sbs(S'boxplot'
p1003
S'vert'
p1004
S'1'
tp1005
(icodemend.demo.code_suggest
Element
p1006
(dp1007
g10
I1
sg11
S''
sg12
Vboxplot.vert.1
p1008
sg14
(lp1009
sg2
S'1'
sbs(g252
S'loc'
p1010
S'(pad_xaxis, 0.6)'
p1011
tp1012
(icodemend.demo.code_suggest
Element
p1013
(dp1014
g10
I1
sg11
S''
sg12
Vlegend.loc.(pad_xaxis, 0/6)
p1015
sg14
(lp1016
sg2
g1011
sbsS'update_positions'
p1017
(icodemend.demo.code_suggest
Element
p1018
(dp1019
g10
I2
sg11
S'update the pixel positions of the annotated point and the text . " update the pixel positions of the annotated point and the text .'
p1020
sg12
Vupdate_positions
p1021
sg14
(lp1022
sg2
g1017
sbsS'set_position'
p1023
(icodemend.demo.code_suggest
Element
p1024
(dp1025
g10
I138
sg11
S'set the position of the spine set the axes position with set the ( x , y ) position of the textwithdash . set the ( x , y ) position of the text'
p1026
sg12
Vset_position
p1027
sg14
(lp1028
(icodemend.demo.code_suggest
Element
p1029
(dp1030
g10
I0
sg11
S'in relative 0,1 coords , or pos can be a bbox'
p1031
sg12
Vset_position.pos
p1032
sg14
(lp1033
sg2
S'pos'
p1034
sba(icodemend.demo.code_suggest
Element
p1035
(dp1036
g10
I0
sg11
S'set the ( x , y ) position of the textwithdash . set the ( x , y ) position of the text'
p1037
sg12
Vset_position.x
p1038
sg14
(lp1039
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p1040
(dp1041
g10
I0
sg11
S'set the ( x , y ) position of the textwithdash . set the ( x , y ) position of the text'
p1042
sg12
Vset_position.y
p1043
sg14
(lp1044
sg2
S'y'
sbasg2
g1023
sbs(S'contour'
p1045
S'linewidths'
p1046
tp1047
(icodemend.demo.code_suggest
Element
p1048
(dp1049
g10
I42
sg11
S'if linewidths is none , the default width in lines.linewidth in matplotlibrc is used . if a number , all levels will be plotted with this linewidth . if a tuple , different levels will be plotted with different linewidths in the order specified .'
p1050
sg12
Vcontour.linewidths
p1051
sg14
(lp1052
(icodemend.demo.code_suggest
Element
p1053
(dp1054
g10
I16
sg11
S''
sg12
Vcontour.linewidths.0/5
p1055
sg14
(lp1056
sg2
S'0.5'
p1057
sba(icodemend.demo.code_suggest
Element
p1058
(dp1059
g10
I9
sg11
S''
sg12
Vcontour.linewidths.2
p1060
sg14
(lp1061
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p1062
(dp1063
g10
I4
sg11
S''
sg12
Vcontour.linewidths.1
p1064
sg14
(lp1065
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p1066
(dp1067
g10
I4
sg11
S''
sg12
Vcontour.linewidths.4
p1068
sg14
(lp1069
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p1070
(dp1071
g10
I3
sg11
S''
sg12
Vcontour.linewidths.3
p1072
sg14
(lp1073
sg2
S'3'
sba(icodemend.demo.code_suggest
Element
p1074
(dp1075
g10
I1
sg11
S''
sg12
Vcontour.linewidths.(2,)
p1076
sg14
(lp1077
sg2
S'(2,)'
p1078
sba(icodemend.demo.code_suggest
Element
p1079
(dp1080
g10
I1
sg11
S''
sg12
Vcontour.linewidths.0/1
p1081
sg14
(lp1082
sg2
S'0.1'
p1083
sba(icodemend.demo.code_suggest
Element
p1084
(dp1085
g10
I1
sg11
S''
sg12
Vcontour.linewidths.0/7
p1086
sg14
(lp1087
sg2
S'0.7'
p1088
sba(icodemend.demo.code_suggest
Element
p1089
(dp1090
g10
I1
sg11
S''
sg12
Vcontour.linewidths.10
p1091
sg14
(lp1092
sg2
S'10'
p1093
sba(icodemend.demo.code_suggest
Element
p1094
(dp1095
g10
I1
sg11
S''
sg12
Vcontour.linewidths.7
p1096
sg14
(lp1097
sg2
S'7'
sba(icodemend.demo.code_suggest
Element
p1098
(dp1099
g10
I1
sg11
S''
sg12
Vcontour.linewidths.[2, 2]
p1100
sg14
(lp1101
sg2
S'[2, 2]'
p1102
sbasg2
g1046
sbs(S'getp'
p1103
S'color_cycle'
p1104
tp1105
(icodemend.demo.code_suggest
Element
p1106
(dp1107
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p1108
sg12
Vgetp.color_cycle
p1109
sg14
(lp1110
sg2
g1104
sbs(S'score_size'
p1111
S'size2'
p1112
tp1113
(icodemend.demo.code_suggest
Element
p1114
(dp1115
g10
I0
sg11
S"otherwise , the result is the absolute distance between size1 and size2 , normalized so that the usual range of font sizes ( 6pt - 72pt ) will lie between 0.0 and 1.0 .|||returns a match score between size1 and size2 .|||if size2 ( the size specified in the font file ) is ' scalable ' , this function always returns 0.0 , since any font size can be generated ."
p1116
sg12
Vscore_size.size2
p1117
sg14
(lp1118
sg2
g1112
sbs(S'set_xlabel'
p1119
S'rotation_mode'
p1120
tp1121
(icodemend.demo.code_suggest
Element
p1122
(dp1123
g10
I0
sg11
S'set text rotation mode .'
p1124
sg12
Vset_xlabel.rotation_mode
p1125
sg14
(lp1126
sg2
g1120
sbs(S'get_extents'
p1127
S'ymin'
p1128
tp1129
(icodemend.demo.code_suggest
Element
p1130
(dp1131
g10
I0
sg11
S'returns the extents ( xmin , ymin , xmax , ymax ) of the path .'
p1132
sg12
Vget_extents.ymin
p1133
sg14
(lp1134
sg2
g1128
sbsS'hot'
p1135
(icodemend.demo.code_suggest
Element
p1136
(dp1137
g10
I6
sg11
S'set the default colormap to hot and apply to current image if any .'
p1138
sg12
Vhot
p1139
sg14
(lp1140
sg2
g1135
sbs(S'xcorr'
p1141
S'marker'
p1142
tp1143
(icodemend.demo.code_suggest
Element
p1144
(dp1145
g10
I0
sg11
S'set the line marker'
p1146
sg12
Vxcorr.marker
p1147
sg14
(lp1148
sg2
g1142
sbs(g452
S'ecolor'
p1149
S"'red'"
p1150
tp1151
(icodemend.demo.code_suggest
Element
p1152
(dp1153
g10
I2
sg11
S''
sg12
Verrorbar.ecolor.'red'
p1154
sg14
(lp1155
sg2
g1150
sbsS'get_ygridlines'
p1156
(icodemend.demo.code_suggest
Element
p1157
(dp1158
g10
I0
sg11
S'get the y grid lines as a list of line2d instances'
p1159
sg12
Vget_ygridlines
p1160
sg14
(lp1161
sg2
g1156
sbs(S'csd'
p1162
S'dashes'
p1163
tp1164
(icodemend.demo.code_suggest
Element
p1165
(dp1166
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p1167
sg12
Vcsd.dashes
p1168
sg14
(lp1169
sg2
g1163
sbs(S'hist'
p1170
g118
S"'Dataset 2'"
p1171
tp1172
(icodemend.demo.code_suggest
Element
p1173
(dp1174
g10
I1
sg11
S''
sg12
Vhist.label.'Dataset 2'
p1175
sg14
(lp1176
sg2
g1171
sbs(S'set_xticklabels'
p1177
S'ymargin'
p1178
tp1179
(icodemend.demo.code_suggest
Element
p1180
(dp1181
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p1182
sg12
Vset_xticklabels.ymargin
p1183
sg14
(lp1184
sg2
g1178
sbs(g101
S's'
S'ms_scatter'
p1185
tp1186
(icodemend.demo.code_suggest
Element
p1187
(dp1188
g10
I2
sg11
S''
sg12
Vscatter.s.ms_scatter
p1189
sg14
(lp1190
sg2
g1185
sbsS'onRemove'
p1191
(icodemend.demo.code_suggest
Element
p1192
(dp1193
g10
I0
sg11
S'mouse event processor which removes the top artist under the cursor .'
p1194
sg12
VonRemove
p1195
sg14
(lp1196
sg2
g1191
sbs(S'arrow'
p1197
S'cursor_props'
p1198
tp1199
(icodemend.demo.code_suggest
Element
p1200
(dp1201
g10
I0
sg11
S'set the cursor property as'
p1202
sg12
Varrow.cursor_props
p1203
sg14
(lp1204
sg2
g1198
sbs(S'set_xlim'
p1205
S'right'
p1206
S'1'
tp1207
(icodemend.demo.code_suggest
Element
p1208
(dp1209
g10
I1
sg11
S''
sg12
Vset_xlim.right.1
p1210
sg14
(lp1211
sg2
S'1'
sbs(S'fill'
p1212
S'color'
p1213
tp1214
(icodemend.demo.code_suggest
Element
p1215
(dp1216
g10
I4
sg11
S'an arbitrary number of x , y , color groups can be specified :|||set both the edgecolor and the facecolor .'
p1217
sg12
Vfill.color
p1218
sg14
(lp1219
(icodemend.demo.code_suggest
Element
p1220
(dp1221
g10
I2
sg11
S''
sg12
Vfill.color.'blue'
p1222
sg14
(lp1223
sg2
S"'blue'"
p1224
sba(icodemend.demo.code_suggest
Element
p1225
(dp1226
g10
I1
sg11
S''
sg12
Vfill.color.'None'
p1227
sg14
(lp1228
sg2
S"'None'"
p1229
sba(icodemend.demo.code_suggest
Element
p1230
(dp1231
g10
I1
sg11
S''
sg12
Vfill.color.'g'
p1232
sg14
(lp1233
sg2
S"'g'"
p1234
sbasg2
g1213
sbs(S'bar'
p1235
S'left'
p1236
tp1237
(icodemend.demo.code_suggest
Element
p1238
(dp1239
g10
I9
sg11
S'the x coordinates of the left sides of the bars'
p1240
sg12
Vbar.left
p1241
sg14
(lp1242
(icodemend.demo.code_suggest
Element
p1243
(dp1244
g10
I2
sg11
S''
sg12
Vbar.left.ind
p1245
sg14
(lp1246
sg2
S'ind'
p1247
sba(icodemend.demo.code_suggest
Element
p1248
(dp1249
g10
I1
sg11
S''
sg12
Vbar.left.[0, 4, 5]
p1250
sg14
(lp1251
sg2
S'[0, 4, 5]'
p1252
sba(icodemend.demo.code_suggest
Element
p1253
(dp1254
g10
I1
sg11
S''
sg12
Vbar.left.bins
p1255
sg14
(lp1256
sg2
S'bins'
p1257
sba(icodemend.demo.code_suggest
Element
p1258
(dp1259
g10
I1
sg11
S''
sg12
Vbar.left.left
p1260
sg14
(lp1261
sg2
S'left'
p1262
sba(icodemend.demo.code_suggest
Element
p1263
(dp1264
g10
I1
sg11
S''
sg12
Vbar.left.x
p1265
sg14
(lp1266
sg2
S'x'
sbasg2
g1236
sbs(S'axvspan'
p1267
S'agg_filter'
p1268
tp1269
(icodemend.demo.code_suggest
Element
p1270
(dp1271
g10
I0
sg11
S'set agg_filter fuction .'
p1272
sg12
Vaxvspan.agg_filter
p1273
sg14
(lp1274
sg2
g1268
sbs(S'csd'
p1275
S'line'
p1276
tp1277
(icodemend.demo.code_suggest
Element
p1278
(dp1279
g10
I0
sg11
S'if return_line is false , returns the tuple ( pxy , freqs ) . if return_line is true , returns the tuple ( pxy , freqs . line ) :'
p1280
sg12
Vcsd.line
p1281
sg14
(lp1282
sg2
g1276
sbs(g139
S'ncols'
p1283
S'1'
tp1284
(icodemend.demo.code_suggest
Element
p1285
(dp1286
g10
I15
sg11
S''
sg12
Vsubplots.ncols.1
p1287
sg14
(lp1288
sg2
S'1'
sbs(S'twinx'
p1289
S'ax2'
p1290
tp1291
(icodemend.demo.code_suggest
Element
p1292
(dp1293
g10
I0
sg11
S'make a second axes that shares the x - axis . the new axes will overlay ax ( or the current axes if ax is none ) . the ticks for ax2 will be placed on the right , and the ax2 instance is returned .'
p1294
sg12
Vtwinx.ax2
p1295
sg14
(lp1296
sg2
g1290
sbs(S'plot_date'
p1297
S'title'
p1298
tp1299
(icodemend.demo.code_suggest
Element
p1300
(dp1301
g10
I0
sg11
S'set a title for the axes .'
p1302
sg12
Vplot_date.title
p1303
sg14
(lp1304
sg2
g1298
sbsS'tricontour'
p1305
(icodemend.demo.code_suggest
Element
p1306
(dp1307
g10
I4
sg11
S'draw contours on an unstructured triangular grid .'
p1308
sg12
Vtricontour
p1309
sg14
(lp1310
(icodemend.demo.code_suggest
Element
p1311
(dp1312
g10
I2
sg11
S"if none , the colormap specified by cmap will be used . if a string , like ' r ' or ' red ' , all levels will be plotted in this color . if a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified ."
p1313
sg12
Vtricontour.colors
p1314
sg14
(lp1315
(icodemend.demo.code_suggest
Element
p1316
(dp1317
g10
I1
sg11
S''
sg12
Vtricontour.colors.'k'
p1318
sg14
(lp1319
sg2
S"'k'"
p1320
sba(icodemend.demo.code_suggest
Element
p1321
(dp1322
g10
I1
sg11
S''
sg12
Vtricontour.colors.['black']
p1323
sg14
(lp1324
sg2
S"['black']"
p1325
sbasg2
S'colors'
p1326
sba(icodemend.demo.code_suggest
Element
p1327
(dp1328
g10
I1
sg11
S'a list of floating point numbers indicating the level curves to draw , in increasing order ; e.g. , to draw just the zero contour pass levels=[0 ]'
p1329
sg12
Vtricontour.levels
p1330
sg14
(lp1331
(icodemend.demo.code_suggest
Element
p1332
(dp1333
g10
I1
sg11
S''
sg12
Vtricontour.levels.levels
p1334
sg14
(lp1335
sg2
g666
sbasg2
S'levels'
p1336
sba(icodemend.demo.code_suggest
Element
p1337
(dp1338
g10
I1
sg11
S'if linewidths is none , the default width in lines.linewidth in matplotlibrc is used . if a number , all levels will be plotted with this linewidth . if a tuple , different levels will be plotted with different linewidths in the order specified'
p1339
sg12
Vtricontour.linewidths
p1340
sg14
(lp1341
(icodemend.demo.code_suggest
Element
p1342
(dp1343
g10
I1
sg11
S''
sg12
Vtricontour.linewidths.0/5
p1344
sg14
(lp1345
sg2
S'0.5'
p1346
sbasg2
S'linewidths'
p1347
sba(icodemend.demo.code_suggest
Element
p1348
(dp1349
g10
I0
sg11
S'enable antialiasing'
p1350
sg12
Vtricontour.False
p1351
sg14
(lp1352
sg2
S'False'
p1353
sba(icodemend.demo.code_suggest
Element
p1354
(dp1355
g10
I0
sg11
S'contour n automatically-chosen levels .'
p1356
sg12
Vtricontour.N
p1357
sg14
(lp1358
sg2
S'N'
sba(icodemend.demo.code_suggest
Element
p1359
(dp1360
g10
I0
sg11
S"if linewidths is none , the default width in lines.linewidth in matplotlibrc is used . if a number , all levels will be plotted with this linewidth . if a tuple , different levels will be plotted with different linewidths in the order specified|||if none , the colormap specified by cmap will be used . if a string , like ' r ' or ' red ' , all levels will be plotted in this color . if a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||if locator is none , the default maxnlocator is used . the locator is used to determine the contour levels if they are not given explicitly via the v argument .|||a matplotlib.colors.normalize instance for scaling data values to colors . if norm is none and colors is none , the default linear scaling is used .|||if none , the first value of z will correspond to the lower left corner , location ( 0,0 ) . if ' image ' , the rc value for image.origin will be used . this keyword is not active if x and y are specified in the call to contour .|||override axis units by specifying an instance of a matplotlib.units.conversioninterface .|||if linestyles is none , the ' solid ' is used . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . if this iterable is shorter than the number of contour levels it will be repeated as necessary . if contour is using a monochrome colormap and the contour level is less than 0 , then the linestyle specified in contour.negative_linestyle in matplotlibrc will be used .|||a cm colormap instance or none . if cmap is none and colors is none , a default colormap is used ."
p1361
sg12
Vtricontour.None
p1362
sg14
(lp1363
sg2
S'None'
p1364
sba(icodemend.demo.code_suggest
Element
p1365
(dp1366
g10
I0
sg11
S'enable antialiasing'
p1367
sg12
Vtricontour.True
p1368
sg14
(lp1369
sg2
S'True'
p1370
sba(icodemend.demo.code_suggest
Element
p1371
(dp1372
g10
I0
sg11
S'draw contour lines at the values specified in sequence v , which must be in increasing order .|||fill the ( len(v ) - 1 ) regions between the values in v , which must be in increasing order .'
p1373
sg12
Vtricontour.V
p1374
sg14
(lp1375
sg2
S'V'
sba(icodemend.demo.code_suggest
Element
p1376
(dp1377
g10
I0
sg11
S'where z is the array of values to contour , one per point in the triangulation . the level values are chosen automatically .'
p1378
sg12
Vtricontour.Z
p1379
sg14
(lp1380
sg2
S'Z'
sba(icodemend.demo.code_suggest
Element
p1381
(dp1382
g10
I0
sg11
S'the alpha blending value'
p1383
sg12
Vtricontour.alpha
p1384
sg14
(lp1385
sg2
S'alpha'
p1386
sba(icodemend.demo.code_suggest
Element
p1387
(dp1388
g10
I0
sg11
S'enable antialiasing'
p1389
sg12
Vtricontour.antialiased
p1390
sg14
(lp1391
sg2
S'antialiased'
p1392
sba(icodemend.demo.code_suggest
Element
p1393
(dp1394
g10
I0
sg11
S'a cm colormap instance or none . if cmap is none and colors is none , a default colormap is used .'
p1395
sg12
Vtricontour.cmap
p1396
sg14
(lp1397
sg2
S'cmap'
p1398
sba(icodemend.demo.code_suggest
Element
p1399
(dp1400
g10
I0
sg11
S"unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included . these added ranges are then mapped to the special colormap values which default to the ends of the colormap range , but can be set via matplotlib.colors.colormap.set_under ( ) and matplotlib.colors.colormap.set_over ( ) methods ."
p1401
sg12
Vtricontour.extend
p1402
sg14
(lp1403
sg2
S'extend'
p1404
sba(icodemend.demo.code_suggest
Element
p1405
(dp1406
g10
I0
sg11
S"if linestyles is none , the ' solid ' is used . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . if this iterable is shorter than the number of contour levels it will be repeated as necessary . if contour is using a monochrome colormap and the contour level is less than 0 , then the linestyle specified in contour.negative_linestyle in matplotlibrc will be used ."
p1407
sg12
Vtricontour.linestyles
p1408
sg14
(lp1409
sg2
S'linestyles'
p1410
sba(icodemend.demo.code_suggest
Element
p1411
(dp1412
g10
I0
sg11
S'if locator is none , the default maxnlocator is used . the locator is used to determine the contour levels if they are not given explicitly via the v argument .'
p1413
sg12
Vtricontour.locator
p1414
sg14
(lp1415
sg2
S'locator'
p1416
sba(icodemend.demo.code_suggest
Element
p1417
(dp1418
g10
I0
sg11
S'a matplotlib.colors.normalize instance for scaling data values to colors . if norm is none and colors is none , the default linear scaling is used .'
p1419
sg12
Vtricontour.norm
p1420
sg14
(lp1421
sg2
S'norm'
p1422
sba(icodemend.demo.code_suggest
Element
p1423
(dp1424
g10
I0
sg11
S"if none , the first value of z will correspond to the lower left corner , location ( 0,0 ) . if ' image ' , the rc value for image.origin will be used . this keyword is not active if x and y are specified in the call to contour ."
p1425
sg12
Vtricontour.origin
p1426
sg14
(lp1427
sg2
S'origin'
p1428
sba(icodemend.demo.code_suggest
Element
p1429
(dp1430
g10
I0
sg11
S'override axis units by specifying an instance of a matplotlib.units.conversioninterface .'
p1431
sg12
Vtricontour.xunits
p1432
sg14
(lp1433
sg2
S'xunits'
p1434
sba(icodemend.demo.code_suggest
Element
p1435
(dp1436
g10
I0
sg11
S'override axis units by specifying an instance of a matplotlib.units.conversioninterface .'
p1437
sg12
Vtricontour.yunits
p1438
sg14
(lp1439
sg2
S'yunits'
p1440
sba(icodemend.demo.code_suggest
Element
p1441
(dp1442
g10
I0
sg11
S'there is one exception : if the lowest boundary coincides with the minimum value of the z array , then that minimum value will be included in the lowest interval .'
p1443
sg12
Vtricontour.z
p1444
sg14
(lp1445
sg2
S'z'
sba(icodemend.demo.code_suggest
Element
p1446
(dp1447
g10
I0
sg11
S'note : tricontourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :'
p1448
sg12
Vtricontour.z1
p1449
sg14
(lp1450
sg2
S'z1'
p1451
sba(icodemend.demo.code_suggest
Element
p1452
(dp1453
g10
I0
sg11
S'note : tricontourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :'
p1454
sg12
Vtricontour.z2
p1455
sg14
(lp1456
sg2
S'z2'
p1457
sbasg2
g1305
sbsS'subplots'
p1458
(icodemend.demo.code_suggest
Element
p1459
(dp1460
g10
I1127
sg11
S'create a figure with a set of subplots already made .'
p1461
sg12
Vsubplots
p1462
sg14
(lp1463
(icodemend.demo.code_suggest
Element
p1464
(dp1465
g10
I165
sg11
S'width , height in inches . if not provided , defaults to rc figure.figsize .'
p1466
sg12
Vsubplots.figsize
p1467
sg14
(lp1468
(icodemend.demo.code_suggest
Element
p1469
(dp1470
g10
I14
sg11
S''
sg12
Vsubplots.figsize.(6, 6)
p1471
sg14
(lp1472
sg2
S'(6, 6)'
p1473
sba(icodemend.demo.code_suggest
Element
p1474
(dp1475
g10
I13
sg11
S''
sg12
Vsubplots.figsize.(8, 8)
p1476
sg14
(lp1477
sg2
S'(8, 8)'
p1478
sbag650
a(icodemend.demo.code_suggest
Element
p1479
(dp1480
g10
I8
sg11
S''
sg12
Vsubplots.figsize.(10, 4)
p1481
sg14
(lp1482
sg2
S'(10, 4)'
p1483
sba(icodemend.demo.code_suggest
Element
p1484
(dp1485
g10
I6
sg11
S''
sg12
Vsubplots.figsize.(12, 6)
p1486
sg14
(lp1487
sg2
S'(12, 6)'
p1488
sba(icodemend.demo.code_suggest
Element
p1489
(dp1490
g10
I6
sg11
S''
sg12
Vsubplots.figsize.(8, 6)
p1491
sg14
(lp1492
sg2
S'(8, 6)'
p1493
sba(icodemend.demo.code_suggest
Element
p1494
(dp1495
g10
I4
sg11
S''
sg12
Vsubplots.figsize.(10, 10)
p1496
sg14
(lp1497
sg2
S'(10, 10)'
p1498
sba(icodemend.demo.code_suggest
Element
p1499
(dp1500
g10
I4
sg11
S''
sg12
Vsubplots.figsize.(12, 4)
p1501
sg14
(lp1502
sg2
S'(12, 4)'
p1503
sba(icodemend.demo.code_suggest
Element
p1504
(dp1505
g10
I4
sg11
S''
sg12
Vsubplots.figsize.(15, 5)
p1506
sg14
(lp1507
sg2
S'(15, 5)'
p1508
sba(icodemend.demo.code_suggest
Element
p1509
(dp1510
g10
I4
sg11
S''
sg12
Vsubplots.figsize.(8, 4)
p1511
sg14
(lp1512
sg2
S'(8, 4)'
p1513
sba(icodemend.demo.code_suggest
Element
p1514
(dp1515
g10
I4
sg11
S''
sg12
Vsubplots.figsize.(9, 5)
p1516
sg14
(lp1517
sg2
S'(9, 5)'
p1518
sba(icodemend.demo.code_suggest
Element
p1519
(dp1520
g10
I3
sg11
S''
sg12
Vsubplots.figsize.(10, 2)
p1521
sg14
(lp1522
sg2
S'(10, 2)'
p1523
sba(icodemend.demo.code_suggest
Element
p1524
(dp1525
g10
I3
sg11
S''
sg12
Vsubplots.figsize.(10, 6)
p1526
sg14
(lp1527
sg2
S'(10, 6)'
p1528
sba(icodemend.demo.code_suggest
Element
p1529
(dp1530
g10
I3
sg11
S''
sg12
Vsubplots.figsize.(12, 8)
p1531
sg14
(lp1532
sg2
S'(12, 8)'
p1533
sba(icodemend.demo.code_suggest
Element
p1534
(dp1535
g10
I3
sg11
S''
sg12
Vsubplots.figsize.(20, 10)
p1536
sg14
(lp1537
sg2
S'(20, 10)'
p1538
sba(icodemend.demo.code_suggest
Element
p1539
(dp1540
g10
I3
sg11
S''
sg12
Vsubplots.figsize.(5, 4)
p1541
sg14
(lp1542
sg2
S'(5, 4)'
p1543
sba(icodemend.demo.code_suggest
Element
p1544
(dp1545
g10
I3
sg11
S''
sg12
Vsubplots.figsize.(5, 5)
p1546
sg14
(lp1547
sg2
S'(5, 5)'
p1548
sba(icodemend.demo.code_suggest
Element
p1549
(dp1550
g10
I2
sg11
S''
sg12
Vsubplots.figsize.(10, 3)
p1551
sg14
(lp1552
sg2
S'(10, 3)'
p1553
sba(icodemend.demo.code_suggest
Element
p1554
(dp1555
g10
I2
sg11
S''
sg12
Vsubplots.figsize.(12, 5)
p1556
sg14
(lp1557
sg2
S'(12, 5)'
p1558
sba(icodemend.demo.code_suggest
Element
p1559
(dp1560
g10
I2
sg11
S''
sg12
Vsubplots.figsize.(18, 10)
p1561
sg14
(lp1562
sg2
S'(18, 10)'
p1563
sba(icodemend.demo.code_suggest
Element
p1564
(dp1565
g10
I2
sg11
S''
sg12
Vsubplots.figsize.(20, 11)
p1566
sg14
(lp1567
sg2
S'(20, 11)'
p1568
sba(icodemend.demo.code_suggest
Element
p1569
(dp1570
g10
I2
sg11
S''
sg12
Vsubplots.figsize.(5, 6)
p1571
sg14
(lp1572
sg2
S'(5, 6)'
p1573
sba(icodemend.demo.code_suggest
Element
p1574
(dp1575
g10
I2
sg11
S''
sg12
Vsubplots.figsize.(5/5, 3)
p1576
sg14
(lp1577
sg2
S'(5.5, 3)'
p1578
sba(icodemend.demo.code_suggest
Element
p1579
(dp1580
g10
I2
sg11
S''
sg12
Vsubplots.figsize.(6, 10)
p1581
sg14
(lp1582
sg2
S'(6, 10)'
p1583
sba(icodemend.demo.code_suggest
Element
p1584
(dp1585
g10
I2
sg11
S''
sg12
Vsubplots.figsize.(7, 7)
p1586
sg14
(lp1587
sg2
S'(7, 7)'
p1588
sba(icodemend.demo.code_suggest
Element
p1589
(dp1590
g10
I2
sg11
S''
sg12
Vsubplots.figsize.(8, 3)
p1591
sg14
(lp1592
sg2
S'(8, 3)'
p1593
sba(icodemend.demo.code_suggest
Element
p1594
(dp1595
g10
I2
sg11
S''
sg12
Vsubplots.figsize.(8, 5)
p1596
sg14
(lp1597
sg2
S'(8, 5)'
p1598
sba(icodemend.demo.code_suggest
Element
p1599
(dp1600
g10
I2
sg11
S''
sg12
Vsubplots.figsize.(9, 2)
p1601
sg14
(lp1602
sg2
S'(9, 2)'
p1603
sba(icodemend.demo.code_suggest
Element
p1604
(dp1605
g10
I2
sg11
S''
sg12
Vsubplots.figsize.(9, 3)
p1606
sg14
(lp1607
sg2
S'(9, 3)'
p1608
sba(icodemend.demo.code_suggest
Element
p1609
(dp1610
g10
I2
sg11
S''
sg12
Vsubplots.figsize.fig_size
p1611
sg14
(lp1612
sg2
S'fig_size'
p1613
sba(icodemend.demo.code_suggest
Element
p1614
(dp1615
g10
I2
sg11
S''
sg12
Vsubplots.figsize.figsize
p1616
sg14
(lp1617
sg2
g140
sba(icodemend.demo.code_suggest
Element
p1618
(dp1619
g10
I1
sg11
S''
sg12
Vsubplots.figsize.((dxs * nx), (dys * ny))
p1620
sg14
(lp1621
sg2
S'((dxs * nx), (dys * ny))'
p1622
sba(icodemend.demo.code_suggest
Element
p1623
(dp1624
g10
I1
sg11
S''
sg12
Vsubplots.figsize.((n * size), size)
p1625
sg14
(lp1626
sg2
S'((n * size), size)'
p1627
sba(icodemend.demo.code_suggest
Element
p1628
(dp1629
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(0/5, 5)
p1630
sg14
(lp1631
sg2
S'(0.5, 5)'
p1632
sba(icodemend.demo.code_suggest
Element
p1633
(dp1634
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(10, 8)
p1635
sg14
(lp1636
sg2
S'(10, 8)'
p1637
sba(icodemend.demo.code_suggest
Element
p1638
(dp1639
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(10, 9)
p1640
sg14
(lp1641
sg2
S'(10, 9)'
p1642
sba(icodemend.demo.code_suggest
Element
p1643
(dp1644
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(12, 10)
p1645
sg14
(lp1646
sg2
S'(12, 10)'
p1647
sba(icodemend.demo.code_suggest
Element
p1648
(dp1649
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(12, 12)
p1650
sg14
(lp1651
sg2
S'(12, 12)'
p1652
sba(icodemend.demo.code_suggest
Element
p1653
(dp1654
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(12, 16)
p1655
sg14
(lp1656
sg2
S'(12, 16)'
p1657
sba(icodemend.demo.code_suggest
Element
p1658
(dp1659
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(12, 3)
p1660
sg14
(lp1661
sg2
S'(12, 3)'
p1662
sba(icodemend.demo.code_suggest
Element
p1663
(dp1664
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(12, 9)
p1665
sg14
(lp1666
sg2
S'(12, 9)'
p1667
sba(icodemend.demo.code_suggest
Element
p1668
(dp1669
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(14, 14)
p1670
sg14
(lp1671
sg2
S'(14, 14)'
p1672
sba(icodemend.demo.code_suggest
Element
p1673
(dp1674
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(15, 10)
p1675
sg14
(lp1676
sg2
S'(15, 10)'
p1677
sba(icodemend.demo.code_suggest
Element
p1678
(dp1679
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(15, 15)
p1680
sg14
(lp1681
sg2
S'(15, 15)'
p1682
sba(icodemend.demo.code_suggest
Element
p1683
(dp1684
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(15, 6)
p1685
sg14
(lp1686
sg2
S'(15, 6)'
p1687
sba(icodemend.demo.code_suggest
Element
p1688
(dp1689
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(15/0, 15/0)
p1690
sg14
(lp1691
sg2
S'(15.0, 15.0)'
p1692
sba(icodemend.demo.code_suggest
Element
p1693
(dp1694
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(16, 12)
p1695
sg14
(lp1696
sg2
S'(16, 12)'
p1697
sba(icodemend.demo.code_suggest
Element
p1698
(dp1699
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(16, 8)
p1700
sg14
(lp1701
sg2
S'(16, 8)'
p1702
sba(icodemend.demo.code_suggest
Element
p1703
(dp1704
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(16, 9)
p1705
sg14
(lp1706
sg2
S'(16, 9)'
p1707
sba(icodemend.demo.code_suggest
Element
p1708
(dp1709
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(16/2, 10)
p1710
sg14
(lp1711
sg2
S'(16.2, 10)'
p1712
sba(icodemend.demo.code_suggest
Element
p1713
(dp1714
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(17, 10)
p1715
sg14
(lp1716
sg2
S'(17, 10)'
p1717
sba(icodemend.demo.code_suggest
Element
p1718
(dp1719
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(18, 2)
p1720
sg14
(lp1721
sg2
S'(18, 2)'
p1722
sba(icodemend.demo.code_suggest
Element
p1723
(dp1724
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(18/0, 11/0)
p1725
sg14
(lp1726
sg2
S'(18.0, 11.0)'
p1727
sba(icodemend.demo.code_suggest
Element
p1728
(dp1729
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(2, 2)
p1730
sg14
(lp1731
sg2
S'(2, 2)'
p1732
sba(icodemend.demo.code_suggest
Element
p1733
(dp1734
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(3, 3)
p1735
sg14
(lp1736
sg2
S'(3, 3)'
p1737
sba(icodemend.demo.code_suggest
Element
p1738
(dp1739
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(4, 3)
p1740
sg14
(lp1741
sg2
S'(4, 3)'
p1742
sba(icodemend.demo.code_suggest
Element
p1743
(dp1744
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(4, 4)
p1745
sg14
(lp1746
sg2
S'(4, 4)'
p1747
sba(icodemend.demo.code_suggest
Element
p1748
(dp1749
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(5, 1)
p1750
sg14
(lp1751
sg2
S'(5, 1)'
p1752
sba(icodemend.demo.code_suggest
Element
p1753
(dp1754
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(5, 2)
p1755
sg14
(lp1756
sg2
S'(5, 2)'
p1757
sba(icodemend.demo.code_suggest
Element
p1758
(dp1759
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(5, 3)
p1760
sg14
(lp1761
sg2
S'(5, 3)'
p1762
sba(icodemend.demo.code_suggest
Element
p1763
(dp1764
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(50, 100)
p1765
sg14
(lp1766
sg2
S'(50, 100)'
p1767
sba(icodemend.demo.code_suggest
Element
p1768
(dp1769
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(6, 2)
p1770
sg14
(lp1771
sg2
S'(6, 2)'
p1772
sba(icodemend.demo.code_suggest
Element
p1773
(dp1774
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(6, 5)
p1775
sg14
(lp1776
sg2
S'(6, 5)'
p1777
sba(icodemend.demo.code_suggest
Element
p1778
(dp1779
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(6, 8)
p1780
sg14
(lp1781
sg2
S'(6, 8)'
p1782
sba(icodemend.demo.code_suggest
Element
p1783
(dp1784
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(6/83, 9/19)
p1785
sg14
(lp1786
sg2
S'(6.83, 9.19)'
p1787
sba(icodemend.demo.code_suggest
Element
p1788
(dp1789
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(7, 4)
p1790
sg14
(lp1791
sg2
S'(7, 4)'
p1792
sba(icodemend.demo.code_suggest
Element
p1793
(dp1794
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(8, 11)
p1795
sg14
(lp1796
sg2
S'(8, 11)'
p1797
sba(icodemend.demo.code_suggest
Element
p1798
(dp1799
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(8, 12)
p1800
sg14
(lp1801
sg2
S'(8, 12)'
p1802
sba(icodemend.demo.code_suggest
Element
p1803
(dp1804
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(9/0, 6/1)
p1805
sg14
(lp1806
sg2
S'(9.0, 6.1)'
p1807
sba(icodemend.demo.code_suggest
Element
p1808
(dp1809
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(N, M)
p1810
sg14
(lp1811
sg2
S'(N, M)'
p1812
sba(icodemend.demo.code_suggest
Element
p1813
(dp1814
g10
I1
sg11
S''
sg12
Vsubplots.figsize.(WIDTH, (WIDTH / 3))
p1815
sg14
(lp1816
sg2
S'(WIDTH, (WIDTH / 3))'
p1817
sbag143
a(icodemend.demo.code_suggest
Element
p1818
(dp1819
g10
I1
sg11
S''
sg12
Vsubplots.figsize.[3/375, 3/375]
p1820
sg14
(lp1821
sg2
S'[3.375, 3.375]'
p1822
sbasg2
S'figsize'
p1823
sba(icodemend.demo.code_suggest
Element
p1824
(dp1825
g10
I115
sg11
S'number of rows of the subplot grid . defaults to 1 .'
p1826
sg12
Vsubplots.nrows
p1827
sg14
(lp1828
(icodemend.demo.code_suggest
Element
p1829
(dp1830
g10
I53
sg11
S''
sg12
Vsubplots.nrows.2
p1831
sg14
(lp1832
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p1833
(dp1834
g10
I21
sg11
S''
sg12
Vsubplots.nrows.3
p1835
sg14
(lp1836
sg2
S'3'
sbag372
a(icodemend.demo.code_suggest
Element
p1837
(dp1838
g10
I10
sg11
S''
sg12
Vsubplots.nrows.4
p1839
sg14
(lp1840
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p1841
(dp1842
g10
I4
sg11
S''
sg12
Vsubplots.nrows.5
p1843
sg14
(lp1844
sg2
S'5'
sba(icodemend.demo.code_suggest
Element
p1845
(dp1846
g10
I3
sg11
S''
sg12
Vsubplots.nrows.6
p1847
sg14
(lp1848
sg2
S'6'
sba(icodemend.demo.code_suggest
Element
p1849
(dp1850
g10
I2
sg11
S''
sg12
Vsubplots.nrows.7
p1851
sg14
(lp1852
sg2
S'7'
sba(icodemend.demo.code_suggest
Element
p1853
(dp1854
g10
I2
sg11
S''
sg12
Vsubplots.nrows.nrow
p1855
sg14
(lp1856
sg2
S'nrow'
p1857
sba(icodemend.demo.code_suggest
Element
p1858
(dp1859
g10
I2
sg11
S''
sg12
Vsubplots.nrows.numRows
p1860
sg14
(lp1861
sg2
S'numRows'
p1862
sba(icodemend.demo.code_suggest
Element
p1863
(dp1864
g10
I2
sg11
S''
sg12
Vsubplots.nrows.numvars
p1865
sg14
(lp1866
sg2
S'numvars'
p1867
sba(icodemend.demo.code_suggest
Element
p1868
(dp1869
g10
I1
sg11
S''
sg12
Vsubplots.nrows.20
p1870
sg14
(lp1871
sg2
S'20'
p1872
sba(icodemend.demo.code_suggest
Element
p1873
(dp1874
g10
I1
sg11
S''
sg12
Vsubplots.nrows.nb_channels
p1875
sg14
(lp1876
sg2
S'nb_channels'
p1877
sba(icodemend.demo.code_suggest
Element
p1878
(dp1879
g10
I1
sg11
S''
sg12
Vsubplots.nrows.nplots
p1880
sg14
(lp1881
sg2
S'nplots'
p1882
sba(icodemend.demo.code_suggest
Element
p1883
(dp1884
g10
I1
sg11
S''
sg12
Vsubplots.nrows.nrows
p1885
sg14
(lp1886
sg2
g370
sbasg2
S'nrows'
p1887
sba(icodemend.demo.code_suggest
Element
p1888
(dp1889
g10
I100
sg11
S'number of columns of the subplot grid . defaults to 1 .'
p1890
sg12
Vsubplots.ncols
p1891
sg14
(lp1892
(icodemend.demo.code_suggest
Element
p1893
(dp1894
g10
I44
sg11
S''
sg12
Vsubplots.ncols.2
p1895
sg14
(lp1896
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p1897
(dp1898
g10
I22
sg11
S''
sg12
Vsubplots.ncols.3
p1899
sg14
(lp1900
sg2
S'3'
sbag1285
a(icodemend.demo.code_suggest
Element
p1901
(dp1902
g10
I7
sg11
S''
sg12
Vsubplots.ncols.4
p1903
sg14
(lp1904
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p1905
(dp1906
g10
I3
sg11
S''
sg12
Vsubplots.ncols.5
p1907
sg14
(lp1908
sg2
S'5'
sba(icodemend.demo.code_suggest
Element
p1909
(dp1910
g10
I2
sg11
S''
sg12
Vsubplots.ncols.nrow
p1911
sg14
(lp1912
sg2
g1857
sba(icodemend.demo.code_suggest
Element
p1913
(dp1914
g10
I2
sg11
S''
sg12
Vsubplots.ncols.numvars
p1915
sg14
(lp1916
sg2
g1867
sba(icodemend.demo.code_suggest
Element
p1917
(dp1918
g10
I1
sg11
S''
sg12
Vsubplots.ncols.6
p1919
sg14
(lp1920
sg2
S'6'
sba(icodemend.demo.code_suggest
Element
p1921
(dp1922
g10
I1
sg11
S''
sg12
Vsubplots.ncols.ncols
p1923
sg14
(lp1924
sg2
g1283
sba(icodemend.demo.code_suggest
Element
p1925
(dp1926
g10
I1
sg11
S''
sg12
Vsubplots.ncols.numdatasets
p1927
sg14
(lp1928
sg2
S'numdatasets'
p1929
sbasg2
S'ncols'
p1930
sba(icodemend.demo.code_suggest
Element
p1931
(dp1932
g10
I69
sg11
S'if true , the x axis will be shared amongst all subplots . if true and you have multiple rows , the x tick labels on all but the last row of plots will have visible set to false if a string must be one of " row " , " col " , " all " , or " none " . " all " has the same effect as true , " none " has the same effect as false . if " row " , each subplot row will share a x axis . if " col " , each subplot column will share a x axis and the x tick labels on all but the last row will have visible set to false .'
p1933
sg12
Vsubplots.sharex
p1934
sg14
(lp1935
(icodemend.demo.code_suggest
Element
p1936
(dp1937
g10
I65
sg11
S''
sg12
Vsubplots.sharex.True
p1938
sg14
(lp1939
sg2
g438
sba(icodemend.demo.code_suggest
Element
p1940
(dp1941
g10
I3
sg11
S''
sg12
Vsubplots.sharex.False
p1942
sg14
(lp1943
sg2
S'False'
p1944
sba(icodemend.demo.code_suggest
Element
p1945
(dp1946
g10
I1
sg11
S''
sg12
Vsubplots.sharex.'col'
p1947
sg14
(lp1948
sg2
S"'col'"
p1949
sbasg2
S'sharex'
p1950
sba(icodemend.demo.code_suggest
Element
p1951
(dp1952
g10
I67
sg11
S'if true , the y axis will be shared amongst all subplots . if true and you have multiple columns , the y tick labels on all but the first column of plots will have visible set to false if a string must be one of " row " , " col " , " all " , or " none " . " all " has the same effect as true , " none " has the same effect as false . if " row " , each subplot row will share a y axis and the y tick labels on all but the first column will have visible set to false . if " col " , each subplot column will share a y axis .'
p1953
sg12
Vsubplots.sharey
p1954
sg14
(lp1955
(icodemend.demo.code_suggest
Element
p1956
(dp1957
g10
I57
sg11
S''
sg12
Vsubplots.sharey.True
p1958
sg14
(lp1959
sg2
g438
sba(icodemend.demo.code_suggest
Element
p1960
(dp1961
g10
I9
sg11
S''
sg12
Vsubplots.sharey.False
p1962
sg14
(lp1963
sg2
g1944
sba(icodemend.demo.code_suggest
Element
p1964
(dp1965
g10
I1
sg11
S''
sg12
Vsubplots.sharey.'row'
p1966
sg14
(lp1967
sg2
S"'row'"
p1968
sbasg2
S'sharey'
p1969
sba(icodemend.demo.code_suggest
Element
p1970
(dp1971
g10
I54
sg11
S'dict with keywords passed to the add_subplot ( ) call used to create each subplots .'
p1972
sg12
Vsubplots.subplot_kw
p1973
sg14
(lp1974
(icodemend.demo.code_suggest
Element
p1975
(dp1976
g10
I5
sg11
S''
sg12
Vsubplots.subplot_kw.{'aspect': 1}
p1977
sg14
(lp1978
sg2
S"{'aspect': 1}"
p1979
sba(icodemend.demo.code_suggest
Element
p1980
(dp1981
g10
I5
sg11
S''
sg12
Vsubplots.subplot_kw.{'xticks': [], 'yticks': []}
p1982
sg14
(lp1983
sg2
S"{'xticks': [], 'yticks': []}"
p1984
sba(icodemend.demo.code_suggest
Element
p1985
(dp1986
g10
I3
sg11
S''
sg12
Vsubplots.subplot_kw.params
p1987
sg14
(lp1988
sg2
S'params'
p1989
sba(icodemend.demo.code_suggest
Element
p1990
(dp1991
g10
I2
sg11
S''
sg12
Vsubplots.subplot_kw.{'aspect': 'equal'}
p1992
sg14
(lp1993
sg2
S"{'aspect': 'equal'}"
p1994
sba(icodemend.demo.code_suggest
Element
p1995
(dp1996
g10
I2
sg11
S''
sg12
Vsubplots.subplot_kw.{'aspect': 1/0, 'xlim': [(-0/2), 1/2], 'ylim': [(-0/2), 1/2]}
p1997
sg14
(lp1998
sg2
S"{'aspect': 1.0, 'xlim': [(-0.2), 1.2], 'ylim': [(-0.2), 1.2]}"
p1999
sba(icodemend.demo.code_suggest
Element
p2000
(dp2001
g10
I2
sg11
S''
sg12
Vsubplots.subplot_kw.{'projection': '3d'}
p2002
sg14
(lp2003
sg2
S"{'projection': '3d'}"
p2004
sba(icodemend.demo.code_suggest
Element
p2005
(dp2006
g10
I1
sg11
S''
sg12
Vsubplots.subplot_kw.{'aspect': 1, 'xlim': [0, 1], 'ylim': [0, 1]}
p2007
sg14
(lp2008
sg2
S"{'aspect': 1, 'xlim': [0, 1], 'ylim': [0, 1]}"
p2009
sba(icodemend.demo.code_suggest
Element
p2010
(dp2011
g10
I1
sg11
S''
sg12
Vsubplots.subplot_kw.{'aspect': 1/0, 'xlim': [(-1), 2], 'ylim': [(-1), 2]}
p2012
sg14
(lp2013
sg2
S"{'aspect': 1.0, 'xlim': [(-1), 2], 'ylim': [(-1), 2]}"
p2014
sba(icodemend.demo.code_suggest
Element
p2015
(dp2016
g10
I1
sg11
S''
sg12
Vsubplots.subplot_kw.{'aspect': 1/0}
p2017
sg14
(lp2018
sg2
S"{'aspect': 1.0}"
p2019
sba(icodemend.demo.code_suggest
Element
p2020
(dp2021
g10
I1
sg11
S''
sg12
Vsubplots.subplot_kw.{'polar': True}
p2022
sg14
(lp2023
sg2
S"{'polar': True}"
p2024
sba(icodemend.demo.code_suggest
Element
p2025
(dp2026
g10
I1
sg11
S''
sg12
Vsubplots.subplot_kw.{'projection': ccrs/PlateCarree()}
p2027
sg14
(lp2028
sg2
S"{'projection': ccrs.PlateCarree()}"
p2029
sba(icodemend.demo.code_suggest
Element
p2030
(dp2031
g10
I1
sg11
S''
sg12
Vsubplots.subplot_kw.{'xticks': [], 'yticks': [], 'frameon': False}
p2032
sg14
(lp2033
sg2
S"{'xticks': [], 'yticks': [], 'frameon': False}"
p2034
sba(icodemend.demo.code_suggest
Element
p2035
(dp2036
g10
I1
sg11
S''
sg12
Vsubplots.subplot_kw.{'xticks': tcks, 'yticks': tcks}
p2037
sg14
(lp2038
sg2
S"{'xticks': tcks, 'yticks': tcks}"
p2039
sbasg2
S'subplot_kw'
p2040
sba(icodemend.demo.code_suggest
Element
p2041
(dp2042
g10
I8
sg11
S'resolution of the figure . if not provided , defaults to rc figure.dpi .'
p2043
sg12
Vsubplots.dpi
p2044
sg14
(lp2045
(icodemend.demo.code_suggest
Element
p2046
(dp2047
g10
I2
sg11
S''
sg12
Vsubplots.dpi.100
p2048
sg14
(lp2049
sg2
S'100'
p2050
sba(icodemend.demo.code_suggest
Element
p2051
(dp2052
g10
I2
sg11
S''
sg12
Vsubplots.dpi.200
p2053
sg14
(lp2054
sg2
S'200'
p2055
sba(icodemend.demo.code_suggest
Element
p2056
(dp2057
g10
I2
sg11
S''
sg12
Vsubplots.dpi.80
p2058
sg14
(lp2059
sg2
S'80'
p2060
sba(icodemend.demo.code_suggest
Element
p2061
(dp2062
g10
I1
sg11
S''
sg12
Vsubplots.dpi.150
p2063
sg14
(lp2064
sg2
S'150'
p2065
sba(icodemend.demo.code_suggest
Element
p2066
(dp2067
g10
I1
sg11
S''
sg12
Vsubplots.dpi.300
p2068
sg14
(lp2069
sg2
S'300'
p2070
sbasg2
S'dpi'
p2071
sba(icodemend.demo.code_suggest
Element
p2072
(dp2073
g10
I5
sg11
S"if not provided , a new figure will be created , and the figure number will be incremented . the figure objects holds this number in a number attribute . if num is provided , and a figure with this id already exists , make it active , and returns a reference to it . if this figure does not exists , create it and returns it . if num is a string , the window title will be set to this figure 's num ."
p2074
sg12
Vsubplots.num
p2075
sg14
(lp2076
(icodemend.demo.code_suggest
Element
p2077
(dp2078
g10
I3
sg11
S''
sg12
Vsubplots.num.1
p2079
sg14
(lp2080
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p2081
(dp2082
g10
I1
sg11
S''
sg12
Vsubplots.num.'Event loop demo'
p2083
sg14
(lp2084
sg2
S"'Event loop demo'"
p2085
sba(icodemend.demo.code_suggest
Element
p2086
(dp2087
g10
I1
sg11
S''
sg12
Vsubplots.num.'Press "h" to highlight pixels < 0'
p2088
sg14
(lp2089
sg2
S'\'Press "h" to highlight pixels < 0\''
p2090
sbasg2
S'num'
p2091
sba(icodemend.demo.code_suggest
Element
p2092
(dp2093
g10
I3
sg11
S'if true , extra dimensions are squeezed out from the returned axis object : if only one subplot is constructed ( nrows=ncols=1 ) , the resulting single axis object is returned as a scalar . for nx1 or 1xn subplots , the returned object is a 1-d numpy object array of axis objects are returned as numpy 1-d arrays . for nxm subplots with n>1 and m>1 are returned as a 2d array . if false , no squeezing at all is done : the returned axis object is always a 2-d array containing axis instances , even if it ends up being 1x1 .'
p2094
sg12
Vsubplots.squeeze
p2095
sg14
(lp2096
(icodemend.demo.code_suggest
Element
p2097
(dp2098
g10
I3
sg11
S''
sg12
Vsubplots.squeeze.True
p2099
sg14
(lp2100
sg2
g438
sbasg2
S'squeeze'
p2101
sba(icodemend.demo.code_suggest
Element
p2102
(dp2103
g10
I2
sg11
S'dict with keywords passed to the gridspec constructor used to create the grid the subplots are placed on .'
p2104
sg12
Vsubplots.gridspec_kw
p2105
sg14
(lp2106
sg2
S'gridspec_kw'
p2107
sba(icodemend.demo.code_suggest
Element
p2108
(dp2109
g10
I1
sg11
S"in addition to projection , the following kwargs are supported :|||kwargs are legal axes kwargs plus projection , which chooses a projection type for the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) .|||add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal axes kwargs plus projection which sets the projection type of the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) . typical usage :"
p2110
sg12
Vsubplots.projection
p2111
sg14
(lp2112
(icodemend.demo.code_suggest
Element
p2113
(dp2114
g10
I1
sg11
S''
sg12
Vsubplots.projection.'equal_area'
p2115
sg14
(lp2116
sg2
S"'equal_area'"
p2117
sbasg2
S'projection'
p2118
sba(icodemend.demo.code_suggest
Element
p2119
(dp2120
g10
I0
sg11
S'if the figure already has a subplot with key ( args , kwargs ) then it will simply make that subplot current and return it .'
p2121
sg12
Vsubplots.args
p2122
sg14
(lp2123
sg2
S'args'
p2124
sba(icodemend.demo.code_suggest
Element
p2125
(dp2126
g10
I0
sg11
S'the border color . if not provided , defaults to rc figure.edgecolor'
p2127
sg12
Vsubplots.edgecolor :
p2128
sg14
(lp2129
sg2
S'edgecolor :'
p2130
sba(icodemend.demo.code_suggest
Element
p2131
(dp2132
g10
I0
sg11
S'the background color . if not provided , defaults to rc figure.facecolor'
p2133
sg12
Vsubplots.facecolor :
p2134
sg14
(lp2135
sg2
S'facecolor :'
p2136
sba(icodemend.demo.code_suggest
Element
p2137
(dp2138
g10
I0
sg11
S'dict with keywords passed to the figure ( ) call . note that all keywords not recognized above will be automatically included here .'
p2139
sg12
Vsubplots.fig_kw
p2140
sg14
(lp2141
sg2
S'fig_kw'
p2142
sba(icodemend.demo.code_suggest
Element
p2143
(dp2144
g10
I0
sg11
S"kwargs are legal axes kwargs plus projection , which chooses a projection type for the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) ."
p2145
sg12
Vsubplots.polar=True
p2146
sg14
(lp2147
sg2
S'polar=True'
p2148
sba(icodemend.demo.code_suggest
Element
p2149
(dp2150
g10
I0
sg11
S"kwargs are legal axes kwargs plus projection , which chooses a projection type for the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) ."
p2151
sg12
Vsubplots.projection='polar'
p2152
sg14
(lp2153
sg2
S"projection='polar'"
p2154
sbasg2
g1458
sbs(g117
S'xlim'
p2155
S'(0, None)'
p2156
tp2157
(icodemend.demo.code_suggest
Element
p2158
(dp2159
g10
I1
sg11
S''
sg12
Vplot.xlim.(0, None)
p2160
sg14
(lp2161
sg2
g2156
sbs(g16
g489
g489
tp2162
(icodemend.demo.code_suggest
Element
p2163
(dp2164
g10
I4
sg11
S''
sg12
Vbar.bottom.bottom
p2165
sg14
(lp2166
sg2
g489
sbs(S'table'
p2167
S'prop_cycle'
p2168
tp2169
(icodemend.demo.code_suggest
Element
p2170
(dp2171
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p2172
sg12
Vtable.prop_cycle
p2173
sg14
(lp2174
sg2
g2168
sbs(g109
S'pad_inches'
p2175
S'0.1'
p2176
tp2177
(icodemend.demo.code_suggest
Element
p2178
(dp2179
g10
I1
sg11
S''
sg12
Vsavefig.pad_inches.0/1
p2180
sg14
(lp2181
sg2
g2176
sbs(S'matshow'
p2182
S'origin'
p2183
S"'lower'"
p2184
tp2185
(icodemend.demo.code_suggest
Element
p2186
(dp2187
g10
I2
sg11
S''
sg12
Vmatshow.origin.'lower'
p2188
sg14
(lp2189
sg2
g2184
sbsS'xlim'
p2190
(icodemend.demo.code_suggest
Element
p2191
(dp2192
g10
I265
sg11
S'get or set the x limits of the current axes .'
p2193
sg12
Vxlim
p2194
sg14
(lp2195
(icodemend.demo.code_suggest
Element
p2196
(dp2197
g10
I0
sg11
S'get or set the x limits of the current axes .'
p2198
sg12
Vxlim.x
p2199
sg14
(lp2200
sg2
S'x'
sbasg2
g2190
sbs(S'hexbin'
p2201
S'color'
p2202
tp2203
(icodemend.demo.code_suggest
Element
p2204
(dp2205
g10
I0
sg11
S'set both the edgecolor and the facecolor .'
p2206
sg12
Vhexbin.color
p2207
sg14
(lp2208
sg2
g2202
sbs(S'add'
p2209
S'xscale'
p2210
tp2211
(icodemend.demo.code_suggest
Element
p2212
(dp2213
g10
I0
sg11
S'set the scaling of the x-axis'
p2214
sg12
Vadd.xscale
p2215
sg14
(lp2216
sg2
g2210
sbs(g245
g140
S'(15, 15)'
p2217
tp2218
(icodemend.demo.code_suggest
Element
p2219
(dp2220
g10
I1
sg11
S''
sg12
Vfigure.figsize.(15, 15)
p2221
sg14
(lp2222
sg2
g2217
sbs(S'eventplot'
p2223
S'_interpolation_steps'
p2224
tp2225
(icodemend.demo.code_suggest
Element
p2226
(dp2227
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p2228
sg12
Veventplot._interpolation_steps
p2229
sg14
(lp2230
sg2
g2224
sbs(g452
g453
S'(ybot, ytop)'
p2231
tp2232
(icodemend.demo.code_suggest
Element
p2233
(dp2234
g10
I1
sg11
S''
sg12
Verrorbar.yerr.(ybot, ytop)
p2235
sg14
(lp2236
sg2
g2231
sbsS'add_collection'
p2237
(icodemend.demo.code_suggest
Element
p2238
(dp2239
g10
I92
sg11
S'add a collection instance to the axes .'
p2240
sg12
Vadd_collection
p2241
sg14
(lp2242
sg2
g2237
sbs(S'pcolor'
p2243
S'x'
tp2244
(icodemend.demo.code_suggest
Element
p2245
(dp2246
g10
I0
sg11
S'the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .|||note that the column index corresponds to the x - coordinate , and the row index corresponds to y ; for details , see the grid orientation section below .|||x and y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for c[i,j ] has corners at :'
p2247
sg12
Vpcolor.x
p2248
sg14
(lp2249
sg2
S'x'
sbs(S'quiver'
p2250
S'linestyle'
p2251
S"'dashed'"
p2252
tp2253
(icodemend.demo.code_suggest
Element
p2254
(dp2255
g10
I2
sg11
S''
sg12
Vquiver.linestyle.'dashed'
p2256
sg14
(lp2257
sg2
g2252
sbs(S'broken_barh'
p2258
S'cursor_props'
p2259
tp2260
(icodemend.demo.code_suggest
Element
p2261
(dp2262
g10
I0
sg11
S'set the cursor property as'
p2263
sg12
Vbroken_barh.cursor_props
p2264
sg14
(lp2265
sg2
g2259
sbs(S'semilogy'
p2266
S'y'
tp2267
(icodemend.demo.code_suggest
Element
p2268
(dp2269
g10
I0
sg11
S'make a plot with log scaling on the y axis .'
p2270
sg12
Vsemilogy.y
p2271
sg14
(lp2272
sg2
S'y'
sbs(g1170
g1257
S'7'
tp2273
(icodemend.demo.code_suggest
Element
p2274
(dp2275
g10
I1
sg11
S''
sg12
Vhist.bins.7
p2276
sg14
(lp2277
sg2
S'7'
sbs(S'set_xticklabels'
p2278
S'closed'
p2279
tp2280
(icodemend.demo.code_suggest
Element
p2281
(dp2282
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p2283
sg12
Vset_xticklabels.closed
p2284
sg14
(lp2285
sg2
g2279
sbs(S'rgrids'
p2286
S'lines'
p2287
tp2288
(icodemend.demo.code_suggest
Element
p2289
(dp2290
g10
I0
sg11
S'when called with no arguments , rgrid ( ) simply returns the tuple ( lines , labels ) , where lines is an array of radial gridlines ( line2d instances ) and labels is an array of tick labels ( text instances ) . when called with arguments , the labels will appear at the specified radial distances and angles .'
p2291
sg12
Vrgrids.lines
p2292
sg14
(lp2293
sg2
g2287
sbs(S'barbs'
p2294
S'clim'
p2295
tp2296
(icodemend.demo.code_suggest
Element
p2297
(dp2298
g10
I0
sg11
S'set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp'
p2299
sg12
Vbarbs.clim
p2300
sg14
(lp2301
sg2
g2295
sbsS'get_xheight'
p2302
(icodemend.demo.code_suggest
Element
p2303
(dp2304
g10
I0
sg11
S'return the xheight as float get the xheight for the given font and fontsize .'
p2305
sg12
Vget_xheight
p2306
sg14
(lp2307
(icodemend.demo.code_suggest
Element
p2308
(dp2309
g10
I0
sg11
S'get the xheight for the given font and fontsize .'
p2310
sg12
Vget_xheight.font
p2311
sg14
(lp2312
sg2
S'font'
p2313
sba(icodemend.demo.code_suggest
Element
p2314
(dp2315
g10
I0
sg11
S'get the xheight for the given font and fontsize .'
p2316
sg12
Vget_xheight.fontsize
p2317
sg14
(lp2318
sg2
S'fontsize'
p2319
sbasg2
g2302
sbs(S'cohere'
p2320
S'sketch_params'
p2321
tp2322
(icodemend.demo.code_suggest
Element
p2323
(dp2324
g10
I0
sg11
S'sets the sketch parameters .'
p2325
sg12
Vcohere.sketch_params
p2326
sg14
(lp2327
sg2
g2321
sbs(S'set_yscale'
p2328
S'nonposy'
p2329
tp2330
(icodemend.demo.code_suggest
Element
p2331
(dp2332
g10
I5
sg11
S'non-positive values in x or y can be masked as invalid , or clipped to a very small positive number'
p2333
sg12
Vset_yscale.nonposy
p2334
sg14
(lp2335
(icodemend.demo.code_suggest
Element
p2336
(dp2337
g10
I5
sg11
S''
sg12
Vset_yscale.nonposy.'clip'
p2338
sg14
(lp2339
sg2
S"'clip'"
p2340
sbasg2
g2329
sbs(S'figimage'
p2341
S'yo'
p2342
tp2343
(icodemend.demo.code_suggest
Element
p2344
(dp2345
g10
I0
sg11
S'with pixel offsets xo , yo ,'
p2346
sg12
Vfigimage.yo
p2347
sg14
(lp2348
sg2
g2342
sbs(g388
S'rotation_mode'
p2349
S"'anchor'"
p2350
tp2351
(icodemend.demo.code_suggest
Element
p2352
(dp2353
g10
I1
sg11
S''
sg12
Vset_xticklabels.rotation_mode.'anchor'
p2354
sg14
(lp2355
sg2
g2350
sbs(S'axhspan'
p2356
S'ylabel'
p2357
tp2358
(icodemend.demo.code_suggest
Element
p2359
(dp2360
g10
I0
sg11
S'set the label for the yaxis'
p2361
sg12
Vaxhspan.ylabel
p2362
sg14
(lp2363
sg2
g2357
sbs(g452
S'xerr'
p2364
g865
tp2365
(icodemend.demo.code_suggest
Element
p2366
(dp2367
g10
I1
sg11
S''
sg12
Verrorbar.xerr.None
p2368
sg14
(lp2369
sg2
g865
sbs(g93
g161
S'((-12), (-12))'
p2370
tp2371
(icodemend.demo.code_suggest
Element
p2372
(dp2373
g10
I1
sg11
S''
sg12
Vannotate.xy.((-12), (-12))
p2374
sg14
(lp2375
sg2
g2370
sbs(S'subplot'
p2376
S'ncols'
p2377
tp2378
(icodemend.demo.code_suggest
Element
p2379
(dp2380
g10
I0
sg11
S'where nrows and ncols are used to notionally split the figure into nrows * ncols sub-axes , and plot_number is used to identify the particular subplot that this function is to create within the notional grid . plot_number starts at 1 , increments across rows first and has a maximum of nrows * ncols .|||in the case when nrows , ncols and plot_number are all less than 10 , a convenience exists , such that the a 3 digit number can be given instead , where the hundreds represent nrows , the tens represent ncols and the units represent plot_number . for instance :'
p2381
sg12
Vsubplot.ncols
p2382
sg14
(lp2383
sg2
g2377
sbs(S'plot_day_summary2_ohlc'
p2384
S'highs'
p2385
tp2386
(icodemend.demo.code_suggest
Element
p2387
(dp2388
g10
I0
sg11
S'represent the time , open , high , low , close as a vertical line ranging from low to high . the left tick is the open and the right tick is the close . opens , highs , lows and closes must have the same length . note : this code assumes if any value open , high , low , close is missing ( - 1 ) they all are missing|||sequence of high values'
p2389
sg12
Vplot_day_summary2_ohlc.highs
p2390
sg14
(lp2391
sg2
g2385
sbs(g117
S'linewidth'
p2392
S'1.0'
p2393
tp2394
(icodemend.demo.code_suggest
Element
p2395
(dp2396
g10
I13
sg11
S''
sg12
Vplot.linewidth.1/0
p2397
sg14
(lp2398
sg2
g2393
sbsS'arrow'
p2399
(icodemend.demo.code_suggest
Element
p2400
(dp2401
g10
I32
sg11
S'add an arrow to the axes .'
p2402
sg12
Varrow
p2403
sg14
(lp2404
(icodemend.demo.code_suggest
Element
p2405
(dp2406
g10
I13
sg11
S'set both the edgecolor and the facecolor .'
p2407
sg12
Varrow.color
p2408
sg14
(lp2409
(icodemend.demo.code_suggest
Element
p2410
(dp2411
g10
I4
sg11
S''
sg12
Varrow.color.'k'
p2412
sg14
(lp2413
sg2
S"'k'"
p2414
sba(icodemend.demo.code_suggest
Element
p2415
(dp2416
g10
I2
sg11
S''
sg12
Varrow.color.'red'
p2417
sg14
(lp2418
sg2
S"'red'"
p2419
sba(icodemend.demo.code_suggest
Element
p2420
(dp2421
g10
I2
sg11
S''
sg12
Varrow.color.colorVal
p2422
sg14
(lp2423
sg2
S'colorVal'
p2424
sba(icodemend.demo.code_suggest
Element
p2425
(dp2426
g10
I1
sg11
S''
sg12
Varrow.color.(0, 0, 1)
p2427
sg14
(lp2428
sg2
S'(0, 0, 1)'
p2429
sba(icodemend.demo.code_suggest
Element
p2430
(dp2431
g10
I1
sg11
S''
sg12
Varrow.color.(0, 1, 0)
p2432
sg14
(lp2433
sg2
S'(0, 1, 0)'
p2434
sba(icodemend.demo.code_suggest
Element
p2435
(dp2436
g10
I1
sg11
S''
sg12
Varrow.color.(1, 0, 0)
p2437
sg14
(lp2438
sg2
S'(1, 0, 0)'
p2439
sba(icodemend.demo.code_suggest
Element
p2440
(dp2441
g10
I1
sg11
S''
sg12
Varrow.color.c
p2442
sg14
(lp2443
sg2
S'c'
sba(icodemend.demo.code_suggest
Element
p2444
(dp2445
g10
I1
sg11
S''
sg12
Varrow.color.color
p2446
sg14
(lp2447
sg2
g132
sbasg2
S'color'
p2448
sba(icodemend.demo.code_suggest
Element
p2449
(dp2450
g10
I6
sg11
S'set whether artist uses clipping .'
p2451
sg12
Varrow.clip_on
p2452
sg14
(lp2453
(icodemend.demo.code_suggest
Element
p2454
(dp2455
g10
I6
sg11
S''
sg12
Varrow.clip_on.False
p2456
sg14
(lp2457
sg2
g1944
sbasg2
S'clip_on'
p2458
sba(icodemend.demo.code_suggest
Element
p2459
(dp2460
g10
I5
sg11
S'set the alpha tranparency of the patch .'
p2461
sg12
Varrow.alpha
p2462
sg14
(lp2463
(icodemend.demo.code_suggest
Element
p2464
(dp2465
g10
I2
sg11
S''
sg12
Varrow.alpha.0/3
p2466
sg14
(lp2467
sg2
S'0.3'
p2468
sba(icodemend.demo.code_suggest
Element
p2469
(dp2470
g10
I2
sg11
S''
sg12
Varrow.alpha.0/5
p2471
sg14
(lp2472
sg2
S'0.5'
p2473
sba(icodemend.demo.code_suggest
Element
p2474
(dp2475
g10
I1
sg11
S''
sg12
Varrow.alpha.0/8
p2476
sg14
(lp2477
sg2
S'0.8'
p2478
sbasg2
S'alpha'
p2479
sba(icodemend.demo.code_suggest
Element
p2480
(dp2481
g10
I4
sg11
S'set the zorder for the artist .'
p2482
sg12
Varrow.zorder
p2483
sg14
(lp2484
(icodemend.demo.code_suggest
Element
p2485
(dp2486
g10
I2
sg11
S''
sg12
Varrow.zorder.0
p2487
sg14
(lp2488
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p2489
(dp2490
g10
I2
sg11
S''
sg12
Varrow.zorder.5
p2491
sg14
(lp2492
sg2
S'5'
sbasg2
S'zorder'
p2493
sba(icodemend.demo.code_suggest
Element
p2494
(dp2495
g10
I2
sg11
S'set the patch edge color'
p2496
sg12
Varrow.edgecolor
p2497
sg14
(lp2498
(icodemend.demo.code_suggest
Element
p2499
(dp2500
g10
I2
sg11
S''
sg12
Varrow.edgecolor.'black'
p2501
sg14
(lp2502
sg2
S"'black'"
p2503
sbasg2
S'edgecolor'
p2504
sba(icodemend.demo.code_suggest
Element
p2505
(dp2506
g10
I2
sg11
S'set the patch face color'
p2507
sg12
Varrow.facecolor
p2508
sg14
(lp2509
(icodemend.demo.code_suggest
Element
p2510
(dp2511
g10
I2
sg11
S''
sg12
Varrow.facecolor.'green'
p2512
sg14
(lp2513
sg2
S"'green'"
p2514
sbasg2
S'facecolor'
p2515
sba(icodemend.demo.code_suggest
Element
p2516
(dp2517
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p2518
sg12
Varrow._interpolation_steps
p2519
sg14
(lp2520
sg2
S'_interpolation_steps'
p2521
sba(icodemend.demo.code_suggest
Element
p2522
(dp2523
g10
I0
sg11
S'set agg_filter fuction .'
p2524
sg12
Varrow.agg_filter
p2525
sg14
(lp2526
sg2
S'agg_filter'
p2527
sba(icodemend.demo.code_suggest
Element
p2528
(dp2529
g10
I0
sg11
S'anchor'
p2530
sg12
Varrow.anchor
p2531
sg14
(lp2532
sg2
S'anchor'
p2533
sba(icodemend.demo.code_suggest
Element
p2534
(dp2535
g10
I0
sg11
S"set the artist 's animation state ."
p2536
sg12
Varrow.animated
p2537
sg14
(lp2538
sg2
S'animated'
p2539
sba(icodemend.demo.code_suggest
Element
p2540
(dp2541
g10
I0
sg11
S'set whether to use antialiased rendering'
p2542
sg12
Varrow.antialiased
p2543
sg14
(lp2544
sg2
S'antialiased'
p2545
sbag898
a(icodemend.demo.code_suggest
Element
p2546
(dp2547
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p2548
sg12
Varrow.axes
p2549
sg14
(lp2550
sg2
S'axes'
p2551
sba(icodemend.demo.code_suggest
Element
p2552
(dp2553
g10
I0
sg11
S'set the patch capstyle'
p2554
sg12
Varrow.capstyle
p2555
sg14
(lp2556
sg2
S'capstyle'
p2557
sba(icodemend.demo.code_suggest
Element
p2558
(dp2559
g10
I0
sg11
S"set the artist 's clip bbox ."
p2560
sg12
Varrow.clip_box
p2561
sg14
(lp2562
sg2
S'clip_box'
p2563
sba(icodemend.demo.code_suggest
Element
p2564
(dp2565
g10
I0
sg11
S"set the artist 's clip path , which may be"
p2566
sg12
Varrow.clip_path
p2567
sg14
(lp2568
sg2
S'clip_path'
p2569
sba(icodemend.demo.code_suggest
Element
p2570
(dp2571
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p2572
sg12
Varrow.closed
p2573
sg14
(lp2574
sg2
S'closed'
p2575
sba(icodemend.demo.code_suggest
Element
p2576
(dp2577
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p2578
sg12
Varrow.codes
p2579
sg14
(lp2580
sg2
S'codes'
p2581
sba(icodemend.demo.code_suggest
Element
p2582
(dp2583
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p2584
sg12
Varrow.color_cycle
p2585
sg14
(lp2586
sg2
S'color_cycle'
p2587
sba(icodemend.demo.code_suggest
Element
p2588
(dp2589
g10
I0
sg11
S'replace the contains test used by this artist .'
p2590
sg12
Varrow.contains
p2591
sg14
(lp2592
sg2
S'contains'
p2593
sbag1200
a(icodemend.demo.code_suggest
Element
p2594
(dp2595
g10
I0
sg11
S'draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) . uses fancyarrow patch to construct the arrow .'
p2596
sg12
Varrow.dx
p2597
sg14
(lp2598
sg2
S'dx'
p2599
sba(icodemend.demo.code_suggest
Element
p2600
(dp2601
g10
I0
sg11
S'draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) . uses fancyarrow patch to construct the arrow .'
p2602
sg12
Varrow.dy
p2603
sg14
(lp2604
sg2
S'dy'
p2605
sba(icodemend.demo.code_suggest
Element
p2606
(dp2607
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p2608
sg12
Varrow.figure
p2609
sg14
(lp2610
sg2
S'figure'
p2611
sba(icodemend.demo.code_suggest
Element
p2612
(dp2613
g10
I0
sg11
S'set whether to fill the patch'
p2614
sg12
Varrow.fill
p2615
sg14
(lp2616
sg2
S'fill'
p2617
sba(icodemend.demo.code_suggest
Element
p2618
(dp2619
g10
I0
sg11
S'sets the ( group ) id for the artist'
p2620
sg12
Varrow.gid
p2621
sg14
(lp2622
sg2
S'gid'
p2623
sba(icodemend.demo.code_suggest
Element
p2624
(dp2625
g10
I0
sg11
S'set the hatching pattern'
p2626
sg12
Varrow.hatch
p2627
sg14
(lp2628
sg2
S'hatch'
p2629
sba(icodemend.demo.code_suggest
Element
p2630
(dp2631
g10
I0
sg11
S'set the patch joinstyle'
p2632
sg12
Varrow.joinstyle
p2633
sg14
(lp2634
sg2
S'joinstyle'
p2635
sba(icodemend.demo.code_suggest
Element
p2636
(dp2637
g10
I0
sg11
S'set the label to s for auto legend .'
p2638
sg12
Varrow.label
p2639
sg14
(lp2640
sg2
S'label'
p2641
sba(icodemend.demo.code_suggest
Element
p2642
(dp2643
g10
I0
sg11
S'set the patch linestyle'
p2644
sg12
Varrow.linestyle
p2645
sg14
(lp2646
sg2
S'linestyle'
p2647
sba(icodemend.demo.code_suggest
Element
p2648
(dp2649
g10
I0
sg11
S'set the patch linewidth in points'
p2650
sg12
Varrow.linewidth
p2651
sg14
(lp2652
sg2
S'linewidth'
p2653
sba(icodemend.demo.code_suggest
Element
p2654
(dp2655
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p2656
sg12
Varrow.path_effects
p2657
sg14
(lp2658
sg2
S'path_effects'
p2659
sba(icodemend.demo.code_suggest
Element
p2660
(dp2661
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p2662
sg12
Varrow.picker
p2663
sg14
(lp2664
sg2
S'picker'
p2665
sba(icodemend.demo.code_suggest
Element
p2666
(dp2667
g10
I0
sg11
S'set the axes position with'
p2668
sg12
Varrow.position
p2669
sg14
(lp2670
sg2
S'position'
p2671
sba(icodemend.demo.code_suggest
Element
p2672
(dp2673
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p2674
sg12
Varrow.prop_cycle
p2675
sg14
(lp2676
sg2
S'prop_cycle'
p2677
sba(icodemend.demo.code_suggest
Element
p2678
(dp2679
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p2680
sg12
Varrow.rasterized
p2681
sg14
(lp2682
sg2
S'rasterized'
p2683
sba(icodemend.demo.code_suggest
Element
p2684
(dp2685
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p2686
sg12
Varrow.readonly
p2687
sg14
(lp2688
sg2
S'readonly'
p2689
sba(icodemend.demo.code_suggest
Element
p2690
(dp2691
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p2692
sg12
Varrow.size_inches
p2693
sg14
(lp2694
sg2
S'size_inches'
p2695
sba(icodemend.demo.code_suggest
Element
p2696
(dp2697
g10
I0
sg11
S'sets the sketch parameters .'
p2698
sg12
Varrow.sketch_params
p2699
sg14
(lp2700
sg2
S'sketch_params'
p2701
sba(icodemend.demo.code_suggest
Element
p2702
(dp2703
g10
I0
sg11
S'sets the snap setting which may be'
p2704
sg12
Varrow.snap
p2705
sg14
(lp2706
sg2
S'snap'
p2707
sba(icodemend.demo.code_suggest
Element
p2708
(dp2709
g10
I0
sg11
S'set a title for the axes .'
p2710
sg12
Varrow.title
p2711
sg14
(lp2712
sg2
S'title'
p2713
sba(icodemend.demo.code_suggest
Element
p2714
(dp2715
g10
I0
sg11
S'set the transform instance used by this artist .'
p2716
sg12
Varrow.transform
p2717
sg14
(lp2718
sg2
S'transform'
p2719
sba(icodemend.demo.code_suggest
Element
p2720
(dp2721
g10
I0
sg11
S'sets the url for the artist'
p2722
sg12
Varrow.url
p2723
sg14
(lp2724
sg2
S'url'
p2725
sba(icodemend.demo.code_suggest
Element
p2726
(dp2727
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p2728
sg12
Varrow.vertices
p2729
sg14
(lp2730
sg2
S'vertices'
p2731
sba(icodemend.demo.code_suggest
Element
p2732
(dp2733
g10
I0
sg11
S"set the artist 's visiblity ."
p2734
sg12
Varrow.visible
p2735
sg14
(lp2736
sg2
S'visible'
p2737
sba(icodemend.demo.code_suggest
Element
p2738
(dp2739
g10
I0
sg11
S'draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) . uses fancyarrow patch to construct the arrow .'
p2740
sg12
Varrow.x
p2741
sg14
(lp2742
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p2743
(dp2744
g10
I0
sg11
S'set the label for the xaxis .'
p2745
sg12
Varrow.xlabel
p2746
sg14
(lp2747
sg2
S'xlabel'
p2748
sba(icodemend.demo.code_suggest
Element
p2749
(dp2750
g10
I0
sg11
S'set the data limits for the xaxis'
p2751
sg12
Varrow.xlim
p2752
sg14
(lp2753
sg2
S'xlim'
p2754
sbag228
a(icodemend.demo.code_suggest
Element
p2755
(dp2756
g10
I0
sg11
S'set the scaling of the x-axis'
p2757
sg12
Varrow.xscale
p2758
sg14
(lp2759
sg2
S'xscale'
p2760
sba(icodemend.demo.code_suggest
Element
p2761
(dp2762
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p2763
sg12
Varrow.xticklabels
p2764
sg14
(lp2765
sg2
S'xticklabels'
p2766
sba(icodemend.demo.code_suggest
Element
p2767
(dp2768
g10
I0
sg11
S'set the x ticks with list of ticks'
p2769
sg12
Varrow.xticks
p2770
sg14
(lp2771
sg2
S'xticks'
p2772
sba(icodemend.demo.code_suggest
Element
p2773
(dp2774
g10
I0
sg11
S'draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) . uses fancyarrow patch to construct the arrow .'
p2775
sg12
Varrow.y
p2776
sg14
(lp2777
sg2
S'y'
sba(icodemend.demo.code_suggest
Element
p2778
(dp2779
g10
I0
sg11
S'set the label for the yaxis'
p2780
sg12
Varrow.ylabel
p2781
sg14
(lp2782
sg2
S'ylabel'
p2783
sba(icodemend.demo.code_suggest
Element
p2784
(dp2785
g10
I0
sg11
S'set the data limits for the yaxis'
p2786
sg12
Varrow.ylim
p2787
sg14
(lp2788
sg2
S'ylim'
p2789
sba(icodemend.demo.code_suggest
Element
p2790
(dp2791
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p2792
sg12
Varrow.ymargin
p2793
sg14
(lp2794
sg2
S'ymargin'
p2795
sba(icodemend.demo.code_suggest
Element
p2796
(dp2797
g10
I0
sg11
S'set the scaling of the y-axis'
p2798
sg12
Varrow.yscale
p2799
sg14
(lp2800
sg2
S'yscale'
p2801
sba(icodemend.demo.code_suggest
Element
p2802
(dp2803
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p2804
sg12
Varrow.yticklabels
p2805
sg14
(lp2806
sg2
S'yticklabels'
p2807
sba(icodemend.demo.code_suggest
Element
p2808
(dp2809
g10
I0
sg11
S'set the y ticks with list of ticks'
p2810
sg12
Varrow.yticks
p2811
sg14
(lp2812
sg2
S'yticks'
p2813
sbasg2
g2399
sbs(S'add'
p2814
S'prior'
p2815
S'0'
tp2816
(icodemend.demo.code_suggest
Element
p2817
(dp2818
g10
I3
sg11
S''
sg12
Vadd.prior.0
p2819
sg14
(lp2820
sg2
S'0'
sbs(g117
g102
S'0.33'
p2821
tp2822
(icodemend.demo.code_suggest
Element
p2823
(dp2824
g10
I2
sg11
S''
sg12
Vplot.alpha.0/33
p2825
sg14
(lp2826
sg2
g2821
sbs(g16
g132
S'clrs'
p2827
tp2828
(icodemend.demo.code_suggest
Element
p2829
(dp2830
g10
I1
sg11
S''
sg12
Vbar.color.clrs
p2831
sg14
(lp2832
sg2
g2827
sbs(S'angle_spectrum'
p2833
S'clip_box'
p2834
tp2835
(icodemend.demo.code_suggest
Element
p2836
(dp2837
g10
I0
sg11
S"set the artist 's clip bbox ."
p2838
sg12
Vangle_spectrum.clip_box
p2839
sg14
(lp2840
sg2
g2834
sbs(g452
S'fmt'
p2841
S"'bo'"
p2842
tp2843
(icodemend.demo.code_suggest
Element
p2844
(dp2845
g10
I1
sg11
S''
sg12
Verrorbar.fmt.'bo'
p2846
sg14
(lp2847
sg2
g2842
sbs(g324
g325
S'dropout_high'
p2848
tp2849
(icodemend.demo.code_suggest
Element
p2850
(dp2851
g10
I1
sg11
S''
sg12
Vimshow.cmap.dropout_high
p2852
sg14
(lp2853
sg2
g2848
sbs(S'eventplot'
p2854
S'size_inches'
p2855
tp2856
(icodemend.demo.code_suggest
Element
p2857
(dp2858
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p2859
sg12
Veventplot.size_inches
p2860
sg14
(lp2861
sg2
g2855
sbs(S'broken_barh'
p2862
S'gid'
p2863
tp2864
(icodemend.demo.code_suggest
Element
p2865
(dp2866
g10
I0
sg11
S'sets the ( group ) id for the artist'
p2867
sg12
Vbroken_barh.gid
p2868
sg14
(lp2869
sg2
g2863
sbs(S'barh'
p2870
S'xticklabels'
p2871
tp2872
(icodemend.demo.code_suggest
Element
p2873
(dp2874
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p2875
sg12
Vbarh.xticklabels
p2876
sg14
(lp2877
sg2
g2871
sbs(g117
S'markeredgewidth'
p2878
S'0.0'
p2879
tp2880
(icodemend.demo.code_suggest
Element
p2881
(dp2882
g10
I1
sg11
S''
sg12
Vplot.markeredgewidth.0/0
p2883
sg14
(lp2884
sg2
g2879
sbs(S'axhline'
p2885
S'size_inches'
p2886
tp2887
(icodemend.demo.code_suggest
Element
p2888
(dp2889
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p2890
sg12
Vaxhline.size_inches
p2891
sg14
(lp2892
sg2
g2886
sbs(S'phase_spectrum'
p2893
S'axes'
p2894
tp2895
(icodemend.demo.code_suggest
Element
p2896
(dp2897
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p2898
sg12
Vphase_spectrum.axes
p2899
sg14
(lp2900
sg2
g2894
sbs(S'get_metrics'
p2901
S'font_class'
p2902
tp2903
(icodemend.demo.code_suggest
Element
p2904
(dp2905
g10
I0
sg11
S'font_class : todo'
p2906
sg12
Vget_metrics.font_class
p2907
sg14
(lp2908
sg2
g2902
sbs(S'fill'
p2909
S'contains'
p2910
tp2911
(icodemend.demo.code_suggest
Element
p2912
(dp2913
g10
I0
sg11
S'replace the contains test used by this artist .'
p2914
sg12
Vfill.contains
p2915
sg14
(lp2916
sg2
g2910
sbsS'safe_isnan'
p2917
(icodemend.demo.code_suggest
Element
p2918
(dp2919
g10
I0
sg11
S'numpy.isnan ( ) for arbitrary types'
p2920
sg12
Vsafe_isnan
p2921
sg14
(lp2922
sg2
g2917
sbs(g101
S'c'
S'z1_vals'
p2923
tp2924
(icodemend.demo.code_suggest
Element
p2925
(dp2926
g10
I1
sg11
S''
sg12
Vscatter.c.z1_vals
p2927
sg14
(lp2928
sg2
g2923
sbs(S'axhline'
p2929
S'clip_path'
p2930
tp2931
(icodemend.demo.code_suggest
Element
p2932
(dp2933
g10
I0
sg11
S"set the artist 's clip path , which may be"
p2934
sg12
Vaxhline.clip_path
p2935
sg14
(lp2936
sg2
g2930
sbs(g117
S'x'
S"'carat'"
p2937
tp2938
(icodemend.demo.code_suggest
Element
p2939
(dp2940
g10
I1
sg11
S''
sg12
Vplot.x.'carat'
p2941
sg14
(lp2942
sg2
g2937
sbs(S'add_axes'
p2943
S'xlim'
p2944
tp2945
(icodemend.demo.code_suggest
Element
p2946
(dp2947
g10
I1
sg11
S'set the data limits for the xaxis'
p2948
sg12
Vadd_axes.xlim
p2949
sg14
(lp2950
(icodemend.demo.code_suggest
Element
p2951
(dp2952
g10
I1
sg11
S''
sg12
Vadd_axes.xlim.(args/avg_window, args/posts_limit)
p2953
sg14
(lp2954
sg2
S'(args.avg_window, args.posts_limit)'
p2955
sbasg2
g2944
sbs(g452
g453
S'0.4'
p2956
tp2957
(icodemend.demo.code_suggest
Element
p2958
(dp2959
g10
I1
sg11
S''
sg12
Verrorbar.yerr.0/4
p2960
sg14
(lp2961
sg2
g2956
sbs(S'Colormap'
p2962
S'N'
tp2963
(icodemend.demo.code_suggest
Element
p2964
(dp2965
g10
I0
sg11
S'the number of rgb quantization levels .'
p2966
sg12
VColormap.N
p2967
sg14
(lp2968
sg2
S'N'
sbsS'rc'
p2969
(icodemend.demo.code_suggest
Element
p2970
(dp2971
g10
I130
sg11
S'set the current rc params .'
p2972
sg12
Vrc
p2973
sg14
(lp2974
(icodemend.demo.code_suggest
Element
p2975
(dp2976
g10
I0
sg11
S'set the current rc params . group is the grouping for the rc , e.g. , for lines.linewidth the group is lines , for axes.facecolor , the group is axes , and so on . group may also be a list or tuple of group names , e.g. , ( xtick , ytick ) . kwargs is a dictionary attribute name/value pairs , e.g. , :'
p2977
sg12
Vrc.xtick
p2978
sg14
(lp2979
sg2
S'xtick'
p2980
sba(icodemend.demo.code_suggest
Element
p2981
(dp2982
g10
I0
sg11
S'set the current rc params . group is the grouping for the rc , e.g. , for lines.linewidth the group is lines , for axes.facecolor , the group is axes , and so on . group may also be a list or tuple of group names , e.g. , ( xtick , ytick ) . kwargs is a dictionary attribute name/value pairs , e.g. , :'
p2983
sg12
Vrc.ytick
p2984
sg14
(lp2985
sg2
S'ytick'
p2986
sbasg2
g2969
sbs(g117
g118
S"'D simulated'"
p2987
tp2988
(icodemend.demo.code_suggest
Element
p2989
(dp2990
g10
I1
sg11
S''
sg12
Vplot.label.'D simulated'
p2991
sg14
(lp2992
sg2
g2987
sbsS'add_tools_to_manager'
p2993
(icodemend.demo.code_suggest
Element
p2994
(dp2995
g10
I0
sg11
S'add multiple tools to toolmanager'
p2996
sg12
Vadd_tools_to_manager
p2997
sg14
(lp2998
(icodemend.demo.code_suggest
Element
p2999
(dp3000
g10
I0
sg11
S'backend_managers.toolmanager object that will get the tools added'
p3001
sg12
Vadd_tools_to_manager.toolmanager: ToolManager
p3002
sg14
(lp3003
sg2
S'toolmanager: ToolManager'
p3004
sba(icodemend.demo.code_suggest
Element
p3005
(dp3006
g10
I0
sg11
S'the tools to add in a { name : tool } dict , see add_tool for more info .'
p3007
sg12
Vadd_tools_to_manager.tools
p3008
sg14
(lp3009
sg2
S'tools'
p3010
sbasg2
g2993
sbs(S'add'
p3011
S'vertices'
p3012
tp3013
(icodemend.demo.code_suggest
Element
p3014
(dp3015
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p3016
sg12
Vadd.vertices
p3017
sg14
(lp3018
sg2
g3012
sbs(S'loglog'
p3019
S'None'
p3020
tp3021
(icodemend.demo.code_suggest
Element
p3022
(dp3023
g10
I0
sg11
S'the location of the minor x /y ticks ; none defaults to autosubs , which depend on the number of decades in the plot ; see matplotlib.axes.axes.set_xscale ( ) / matplotlib.axes.axes.set_yscale ( ) for details'
p3024
sg12
Vloglog.None
p3025
sg14
(lp3026
sg2
g3020
sbs(S'magnitude_spectrum'
p3027
S'linewidth'
p3028
tp3029
(icodemend.demo.code_suggest
Element
p3030
(dp3031
g10
I0
sg11
S'set the line width in points'
p3032
sg12
Vmagnitude_spectrum.linewidth
p3033
sg14
(lp3034
sg2
g3028
sbs(S'clabel'
p3035
S'fontsize'
p3036
tp3037
(icodemend.demo.code_suggest
Element
p3038
(dp3039
g10
I32
sg11
S"size in points or relative size e.g. , ' smaller ' , ' x-large '"
p3040
sg12
Vclabel.fontsize
p3041
sg14
(lp3042
(icodemend.demo.code_suggest
Element
p3043
(dp3044
g10
I25
sg11
S''
sg12
Vclabel.fontsize.10
p3045
sg14
(lp3046
sg2
S'10'
p3047
sba(icodemend.demo.code_suggest
Element
p3048
(dp3049
g10
I3
sg11
S''
sg12
Vclabel.fontsize.9
p3050
sg14
(lp3051
sg2
S'9'
sba(icodemend.demo.code_suggest
Element
p3052
(dp3053
g10
I2
sg11
S''
sg12
Vclabel.fontsize.14
p3054
sg14
(lp3055
sg2
S'14'
p3056
sba(icodemend.demo.code_suggest
Element
p3057
(dp3058
g10
I1
sg11
S''
sg12
Vclabel.fontsize.12
p3059
sg14
(lp3060
sg2
S'12'
p3061
sba(icodemend.demo.code_suggest
Element
p3062
(dp3063
g10
I1
sg11
S''
sg12
Vclabel.fontsize.20
p3064
sg14
(lp3065
sg2
S'20'
p3066
sbasg2
g3036
sbs(S'stem'
p3067
S'stemlines'
p3068
tp3069
(icodemend.demo.code_suggest
Element
p3070
(dp3071
g10
I0
sg11
S'return value is a tuple ( markerline , stemlines , baseline ) .'
p3072
sg12
Vstem.stemlines
p3073
sg14
(lp3074
sg2
g3068
sbs(g245
S'dpi'
p3075
S'200'
p3076
tp3077
(icodemend.demo.code_suggest
Element
p3078
(dp3079
g10
I2
sg11
S''
sg12
Vfigure.dpi.200
p3080
sg14
(lp3081
sg2
g3076
sbs(S'arrow'
p3082
g2533
tp3083
g2528
s(g332
S'fontproperties'
p3084
S'ChineseFont2'
p3085
tp3086
(icodemend.demo.code_suggest
Element
p3087
(dp3088
g10
I1
sg11
S''
sg12
Vtext.fontproperties.ChineseFont2
p3089
sg14
(lp3090
sg2
g3085
sbs(S'barh'
p3091
S'capstyle'
p3092
tp3093
(icodemend.demo.code_suggest
Element
p3094
(dp3095
g10
I0
sg11
S'set the patch capstyle'
p3096
sg12
Vbarh.capstyle
p3097
sg14
(lp3098
sg2
g3092
sbs(g245
g140
S'(5.5, 5.5)'
p3099
tp3100
(icodemend.demo.code_suggest
Element
p3101
(dp3102
g10
I1
sg11
S''
sg12
Vfigure.figsize.(5/5, 5/5)
p3103
sg14
(lp3104
sg2
g3099
sbs(g117
g909
S'5'
tp3105
(icodemend.demo.code_suggest
Element
p3106
(dp3107
g10
I6
sg11
S''
sg12
Vplot.zorder.5
p3108
sg14
(lp3109
sg2
S'5'
sbs(S'contourf'
p3110
S'nchunk'
p3111
tp3112
(icodemend.demo.code_suggest
Element
p3113
(dp3114
g10
I0
sg11
S'if 0 , no subdivision of the domain . specify a positive integer to divide the domain into subdomains of nchunk by nchunk quads . chunking reduces the maximum length of polygons generated by the contouring algorithm which reduces the rendering workload passed on to the backend and also requires slightly less ram . it can however introduce rendering artifacts at chunk boundaries depending on the backend , the antialiased flag and value of alpha .'
p3115
sg12
Vcontourf.nchunk
p3116
sg14
(lp3117
sg2
g3111
sbsS'figaspect'
p3118
(icodemend.demo.code_suggest
Element
p3119
(dp3120
g10
I2
sg11
S'create a figure with specified aspect ratio .'
p3121
sg12
Vfigaspect
p3122
sg14
(lp3123
(icodemend.demo.code_suggest
Element
p3124
(dp3125
g10
I0
sg11
S'create a figure with specified aspect ratio . if arg is a number , use that aspect ratio . if arg is an array , figaspect will determine the width and height for a figure that would fit array preserving aspect ratio . the figure width , height in inches are returned . be sure to create an axes with equal with and height , e.g. ,'
p3126
sg12
Vfigaspect.arg
p3127
sg14
(lp3128
sg2
S'arg'
p3129
sbasg2
g3118
sbs(S'get_xticklabels'
p3130
S'which'
p3131
tp3132
(icodemend.demo.code_suggest
Element
p3133
(dp3134
g10
I0
sg11
S'overrides minor .'
p3135
sg12
Vget_xticklabels.which
p3136
sg14
(lp3137
sg2
g3131
sbs(g117
g132
S"'yellow'"
p3138
tp3139
(icodemend.demo.code_suggest
Element
p3140
(dp3141
g10
I8
sg11
S''
sg12
Vplot.color.'yellow'
p3142
sg14
(lp3143
sg2
g3138
sbs(S'gca'
p3144
S'cursor_props'
p3145
tp3146
(icodemend.demo.code_suggest
Element
p3147
(dp3148
g10
I0
sg11
S'set the cursor property as'
p3149
sg12
Vgca.cursor_props
p3150
sg14
(lp3151
sg2
g3145
sbs(S'barh'
p3152
S'barsabove'
p3153
tp3154
(icodemend.demo.code_suggest
Element
p3155
(dp3156
g10
I0
sg11
S'if true , will plot the errorbars above the plot symbols . default is below .'
p3157
sg12
Vbarh.barsabove
p3158
sg14
(lp3159
sg2
g3153
sbs(g514
g325
S'mycm'
p3160
tp3161
(icodemend.demo.code_suggest
Element
p3162
(dp3163
g10
I1
sg11
S''
sg12
Vpcolor.cmap.mycm
p3164
sg14
(lp3165
sg2
g3160
sbs(g252
g253
S'(x, y)'
p3166
tp3167
(icodemend.demo.code_suggest
Element
p3168
(dp3169
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(x, y)
p3170
sg14
(lp3171
sg2
g3166
sbs(S'bar'
p3172
S'align'
p3173
tp3174
(icodemend.demo.code_suggest
Element
p3175
(dp3176
g10
I89
sg11
S"if ' edge ' , aligns bars by their left edges ( for vertical bars ) and by their bottom edges ( for horizontal bars ) . if ' center ' , interpret the left argument as the coordinates of the centers of the bars . to align on the align bars on the right edge pass a negative width ."
p3177
sg12
Vbar.align
p3178
sg14
(lp3179
(icodemend.demo.code_suggest
Element
p3180
(dp3181
g10
I86
sg11
S''
sg12
Vbar.align.'center'
p3182
sg14
(lp3183
sg2
S"'center'"
p3184
sba(icodemend.demo.code_suggest
Element
p3185
(dp3186
g10
I3
sg11
S''
sg12
Vbar.align.'edge'
p3187
sg14
(lp3188
sg2
S"'edge'"
p3189
sbasg2
g3173
sbs(S'axhspan'
p3190
S'clip_path'
p3191
tp3192
(icodemend.demo.code_suggest
Element
p3193
(dp3194
g10
I0
sg11
S"set the artist 's clip path , which may be"
p3195
sg12
Vaxhspan.clip_path
p3196
sg14
(lp3197
sg2
g3191
sbs(g965
g966
S"'polar'"
p3198
tp3199
(icodemend.demo.code_suggest
Element
p3200
(dp3201
g10
I4
sg11
S''
sg12
Vadd_axes.projection.'polar'
p3202
sg14
(lp3203
sg2
g3198
sbs(S'shade'
p3204
S'dx'
p3205
tp3206
(icodemend.demo.code_suggest
Element
p3207
(dp3208
g10
I0
sg11
S'the x-spacing ( columns ) of the input elevation grid .'
p3209
sg12
Vshade.dx
p3210
sg14
(lp3211
sg2
g3205
sbs(g117
g2392
S'2.0'
p3212
tp3213
(icodemend.demo.code_suggest
Element
p3214
(dp3215
g10
I5
sg11
S''
sg12
Vplot.linewidth.2/0
p3216
sg14
(lp3217
sg2
g3212
sbs(S'axvline'
p3218
S'markerfacecolor'
p3219
tp3220
(icodemend.demo.code_suggest
Element
p3221
(dp3222
g10
I0
sg11
S'set the marker face color .'
p3223
sg12
Vaxvline.markerfacecolor
p3224
sg14
(lp3225
sg2
g3219
sbs(S'psd'
p3226
S'xlim'
p3227
tp3228
(icodemend.demo.code_suggest
Element
p3229
(dp3230
g10
I0
sg11
S'set the data limits for the xaxis'
p3231
sg12
Vpsd.xlim
p3232
sg14
(lp3233
sg2
g3227
sbs(S'phase_spectrum'
p3234
S'alpha'
p3235
tp3236
(icodemend.demo.code_suggest
Element
p3237
(dp3238
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p3239
sg12
Vphase_spectrum.alpha
p3240
sg14
(lp3241
sg2
g3235
sbsS'figimage'
p3242
(icodemend.demo.code_suggest
Element
p3243
(dp3244
g10
I10
sg11
S'adds a non-resampled image to the figure .'
p3245
sg12
Vfigimage
p3246
sg14
(lp3247
(icodemend.demo.code_suggest
Element
p3248
(dp3249
g10
I0
sg11
S'x must be a float array :|||adds a non-resampled array x to the figure .'
p3250
sg12
Vfigimage.X
p3251
sg14
(lp3252
sg2
S'X'
sba(icodemend.demo.code_suggest
Element
p3253
(dp3254
g10
I0
sg11
S'with pixel offsets xo , yo ,'
p3255
sg12
Vfigimage.xo
p3256
sg14
(lp3257
sg2
S'xo'
p3258
sbag2344
asg2
g3242
sbs(S'plot_date'
p3259
S'aspect'
p3260
tp3261
(icodemend.demo.code_suggest
Element
p3262
(dp3263
g10
I0
sg11
S'aspect'
p3264
sg12
Vplot_date.aspect
p3265
sg14
(lp3266
sg2
g3260
sbs(g139
g370
S'2'
tp3267
g1829
s(S'quiver'
p3268
S'sizes'
p3269
tp3270
(icodemend.demo.code_suggest
Element
p3271
(dp3272
g10
I0
sg11
S'set the sizes of each member of the collection .'
p3273
sg12
Vquiver.sizes
p3274
sg14
(lp3275
sg2
g3269
sbsS'axhline'
p3276
(icodemend.demo.code_suggest
Element
p3277
(dp3278
g10
I62
sg11
S'add a horizontal line across the axis .'
p3279
sg12
Vaxhline
p3280
sg14
(lp3281
(icodemend.demo.code_suggest
Element
p3282
(dp3283
g10
I43
sg11
S'set the color of the line'
p3284
sg12
Vaxhline.color
p3285
sg14
(lp3286
(icodemend.demo.code_suggest
Element
p3287
(dp3288
g10
I12
sg11
S''
sg12
Vaxhline.color.'black'
p3289
sg14
(lp3290
sg2
S"'black'"
p3291
sba(icodemend.demo.code_suggest
Element
p3292
(dp3293
g10
I10
sg11
S''
sg12
Vaxhline.color.'k'
p3294
sg14
(lp3295
sg2
S"'k'"
p3296
sba(icodemend.demo.code_suggest
Element
p3297
(dp3298
g10
I5
sg11
S''
sg12
Vaxhline.color.'r'
p3299
sg14
(lp3300
sg2
S"'r'"
p3301
sba(icodemend.demo.code_suggest
Element
p3302
(dp3303
g10
I4
sg11
S''
sg12
Vaxhline.color.'gray'
p3304
sg14
(lp3305
sg2
S"'gray'"
p3306
sba(icodemend.demo.code_suggest
Element
p3307
(dp3308
g10
I4
sg11
S''
sg12
Vaxhline.color.'red'
p3309
sg14
(lp3310
sg2
S"'red'"
p3311
sba(icodemend.demo.code_suggest
Element
p3312
(dp3313
g10
I2
sg11
S''
sg12
Vaxhline.color.'white'
p3314
sg14
(lp3315
sg2
S"'white'"
p3316
sba(icodemend.demo.code_suggest
Element
p3317
(dp3318
g10
I1
sg11
S''
sg12
Vaxhline.color.'ForestGreen'
p3319
sg14
(lp3320
sg2
S"'ForestGreen'"
p3321
sba(icodemend.demo.code_suggest
Element
p3322
(dp3323
g10
I1
sg11
S''
sg12
Vaxhline.color.'b'
p3324
sg14
(lp3325
sg2
S"'b'"
p3326
sba(icodemend.demo.code_suggest
Element
p3327
(dp3328
g10
I1
sg11
S''
sg12
Vaxhline.color.'blue'
p3329
sg14
(lp3330
sg2
S"'blue'"
p3331
sba(icodemend.demo.code_suggest
Element
p3332
(dp3333
g10
I1
sg11
S''
sg12
Vaxhline.color.'g'
p3334
sg14
(lp3335
sg2
S"'g'"
p3336
sba(icodemend.demo.code_suggest
Element
p3337
(dp3338
g10
I1
sg11
S''
sg12
Vaxhline.color.'grey'
p3339
sg14
(lp3340
sg2
S"'grey'"
p3341
sba(icodemend.demo.code_suggest
Element
p3342
(dp3343
g10
I1
sg11
S''
sg12
Vaxhline.color.(0, 0, 0, 0/75)
p3344
sg14
(lp3345
sg2
S'(0, 0, 0, 0.75)'
p3346
sbasg2
S'color'
p3347
sba(icodemend.demo.code_suggest
Element
p3348
(dp3349
g10
I15
sg11
S'y position in data coordinates of the horizontal line .'
p3350
sg12
Vaxhline.y
p3351
sg14
(lp3352
(icodemend.demo.code_suggest
Element
p3353
(dp3354
g10
I4
sg11
S''
sg12
Vaxhline.y.0/002
p3355
sg14
(lp3356
sg2
S'0.002'
p3357
sba(icodemend.demo.code_suggest
Element
p3358
(dp3359
g10
I1
sg11
S''
sg12
Vaxhline.y.0
p3360
sg14
(lp3361
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p3362
(dp3363
g10
I1
sg11
S''
sg12
Vaxhline.y.0/5
p3364
sg14
(lp3365
sg2
S'0.5'
p3366
sba(icodemend.demo.code_suggest
Element
p3367
(dp3368
g10
I1
sg11
S''
sg12
Vaxhline.y.20
p3369
sg14
(lp3370
sg2
S'20'
p3371
sba(icodemend.demo.code_suggest
Element
p3372
(dp3373
g10
I1
sg11
S''
sg12
Vaxhline.y.n
p3374
sg14
(lp3375
sg2
S'n'
sba(icodemend.demo.code_suggest
Element
p3376
(dp3377
g10
I1
sg11
S''
sg12
Vaxhline.y.threshold
p3378
sg14
(lp3379
sg2
S'threshold'
p3380
sba(icodemend.demo.code_suggest
Element
p3381
(dp3382
g10
I1
sg11
S''
sg12
Vaxhline.y.xmaj
p3383
sg14
(lp3384
sg2
S'xmaj'
p3385
sba(icodemend.demo.code_suggest
Element
p3386
(dp3387
g10
I1
sg11
S''
sg12
Vaxhline.y.yline
p3388
sg14
(lp3389
sg2
S'yline'
p3390
sba(icodemend.demo.code_suggest
Element
p3391
(dp3392
g10
I1
sg11
S''
sg12
Vaxhline.y.yy
p3393
sg14
(lp3394
sg2
S'yy'
p3395
sbasg2
S'y'
sba(icodemend.demo.code_suggest
Element
p3396
(dp3397
g10
I14
sg11
S'set the line width in points'
p3398
sg12
Vaxhline.linewidth
p3399
sg14
(lp3400
(icodemend.demo.code_suggest
Element
p3401
(dp3402
g10
I3
sg11
S''
sg12
Vaxhline.linewidth.0/5
p3403
sg14
(lp3404
sg2
S'0.5'
p3405
sba(icodemend.demo.code_suggest
Element
p3406
(dp3407
g10
I3
sg11
S''
sg12
Vaxhline.linewidth.4
p3408
sg14
(lp3409
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p3410
(dp3411
g10
I2
sg11
S''
sg12
Vaxhline.linewidth.2
p3412
sg14
(lp3413
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p3414
(dp3415
g10
I2
sg11
S''
sg12
Vaxhline.linewidth.5
p3416
sg14
(lp3417
sg2
S'5'
sba(icodemend.demo.code_suggest
Element
p3418
(dp3419
g10
I1
sg11
S''
sg12
Vaxhline.linewidth.0/3
p3420
sg14
(lp3421
sg2
S'0.3'
p3422
sba(icodemend.demo.code_suggest
Element
p3423
(dp3424
g10
I1
sg11
S''
sg12
Vaxhline.linewidth.1/7
p3425
sg14
(lp3426
sg2
S'1.7'
p3427
sba(icodemend.demo.code_suggest
Element
p3428
(dp3429
g10
I1
sg11
S''
sg12
Vaxhline.linewidth.2/0
p3430
sg14
(lp3431
sg2
S'2.0'
p3432
sba(icodemend.demo.code_suggest
Element
p3433
(dp3434
g10
I1
sg11
S''
sg12
Vaxhline.linewidth.3
p3435
sg14
(lp3436
sg2
S'3'
sbasg2
S'linewidth'
p3437
sba(icodemend.demo.code_suggest
Element
p3438
(dp3439
g10
I11
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p3440
sg12
Vaxhline.linestyle
p3441
sg14
(lp3442
(icodemend.demo.code_suggest
Element
p3443
(dp3444
g10
I10
sg11
S''
sg12
Vaxhline.linestyle.'--'
p3445
sg14
(lp3446
sg2
S"'--'"
p3447
sba(icodemend.demo.code_suggest
Element
p3448
(dp3449
g10
I1
sg11
S''
sg12
Vaxhline.linestyle.'-'
p3450
sg14
(lp3451
sg2
S"'-'"
p3452
sbasg2
S'linestyle'
p3453
sba(icodemend.demo.code_suggest
Element
p3454
(dp3455
g10
I7
sg11
S'set the zorder for the artist .'
p3456
sg12
Vaxhline.zorder
p3457
sg14
(lp3458
(icodemend.demo.code_suggest
Element
p3459
(dp3460
g10
I5
sg11
S''
sg12
Vaxhline.zorder.0
p3461
sg14
(lp3462
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p3463
(dp3464
g10
I1
sg11
S''
sg12
Vaxhline.zorder.3
p3465
sg14
(lp3466
sg2
S'3'
sba(icodemend.demo.code_suggest
Element
p3467
(dp3468
g10
I1
sg11
S''
sg12
Vaxhline.zorder.5
p3469
sg14
(lp3470
sg2
S'5'
sbasg2
S'zorder'
p3471
sba(icodemend.demo.code_suggest
Element
p3472
(dp3473
g10
I6
sg11
S'should be between 0 and 1 , 0 being the far left of the plot , 1 the far right of the plot .'
p3474
sg12
Vaxhline.xmax
p3475
sg14
(lp3476
(icodemend.demo.code_suggest
Element
p3477
(dp3478
g10
I3
sg11
S''
sg12
Vaxhline.xmax.3
p3479
sg14
(lp3480
sg2
S'3'
sbag585
asg2
S'xmax'
p3481
sba(icodemend.demo.code_suggest
Element
p3482
(dp3483
g10
I6
sg11
S'should be between 0 and 1 , 0 being the far left of the plot , 1 the far right of the plot .'
p3484
sg12
Vaxhline.xmin
p3485
sg14
(lp3486
(icodemend.demo.code_suggest
Element
p3487
(dp3488
g10
I5
sg11
S''
sg12
Vaxhline.xmin.0
p3489
sg14
(lp3490
sg2
S'0'
sbasg2
S'xmin'
p3491
sba(icodemend.demo.code_suggest
Element
p3492
(dp3493
g10
I1
sg11
S'set the alpha value used for blending - not supported on all backends .'
p3494
sg12
Vaxhline.alpha
p3495
sg14
(lp3496
(icodemend.demo.code_suggest
Element
p3497
(dp3498
g10
I1
sg11
S''
sg12
Vaxhline.alpha.0/5
p3499
sg14
(lp3500
sg2
S'0.5'
p3501
sbasg2
S'alpha'
p3502
sba(icodemend.demo.code_suggest
Element
p3503
(dp3504
g10
I1
sg11
S'set the label to s for auto legend .'
p3505
sg12
Vaxhline.label
p3506
sg14
(lp3507
(icodemend.demo.code_suggest
Element
p3508
(dp3509
g10
I1
sg11
S''
sg12
Vaxhline.label.'Old'
p3510
sg14
(lp3511
sg2
S"'Old'"
p3512
sbasg2
S'label'
p3513
sba(icodemend.demo.code_suggest
Element
p3514
(dp3515
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p3516
sg12
Vaxhline._interpolation_steps
p3517
sg14
(lp3518
sg2
S'_interpolation_steps'
p3519
sba(icodemend.demo.code_suggest
Element
p3520
(dp3521
g10
I0
sg11
S'set agg_filter fuction .'
p3522
sg12
Vaxhline.agg_filter
p3523
sg14
(lp3524
sg2
S'agg_filter'
p3525
sba(icodemend.demo.code_suggest
Element
p3526
(dp3527
g10
I0
sg11
S'anchor'
p3528
sg12
Vaxhline.anchor
p3529
sg14
(lp3530
sg2
S'anchor'
p3531
sba(icodemend.demo.code_suggest
Element
p3532
(dp3533
g10
I0
sg11
S"set the artist 's animation state ."
p3534
sg12
Vaxhline.animated
p3535
sg14
(lp3536
sg2
S'animated'
p3537
sba(icodemend.demo.code_suggest
Element
p3538
(dp3539
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p3540
sg12
Vaxhline.antialiased
p3541
sg14
(lp3542
sg2
S'antialiased'
p3543
sba(icodemend.demo.code_suggest
Element
p3544
(dp3545
g10
I0
sg11
S'aspect'
p3546
sg12
Vaxhline.aspect
p3547
sg14
(lp3548
sg2
S'aspect'
p3549
sba(icodemend.demo.code_suggest
Element
p3550
(dp3551
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p3552
sg12
Vaxhline.axes
p3553
sg14
(lp3554
sg2
S'axes'
p3555
sba(icodemend.demo.code_suggest
Element
p3556
(dp3557
g10
I0
sg11
S"set the artist 's clip bbox ."
p3558
sg12
Vaxhline.clip_box
p3559
sg14
(lp3560
sg2
S'clip_box'
p3561
sba(icodemend.demo.code_suggest
Element
p3562
(dp3563
g10
I0
sg11
S'set whether artist uses clipping .'
p3564
sg12
Vaxhline.clip_on
p3565
sg14
(lp3566
sg2
S'clip_on'
p3567
sbag2932
a(icodemend.demo.code_suggest
Element
p3568
(dp3569
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p3570
sg12
Vaxhline.closed
p3571
sg14
(lp3572
sg2
S'closed'
p3573
sba(icodemend.demo.code_suggest
Element
p3574
(dp3575
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p3576
sg12
Vaxhline.codes
p3577
sg14
(lp3578
sg2
S'codes'
p3579
sba(icodemend.demo.code_suggest
Element
p3580
(dp3581
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p3582
sg12
Vaxhline.color_cycle
p3583
sg14
(lp3584
sg2
S'color_cycle'
p3585
sba(icodemend.demo.code_suggest
Element
p3586
(dp3587
g10
I0
sg11
S'replace the contains test used by this artist .'
p3588
sg12
Vaxhline.contains
p3589
sg14
(lp3590
sg2
S'contains'
p3591
sba(icodemend.demo.code_suggest
Element
p3592
(dp3593
g10
I0
sg11
S'set the cursor property as'
p3594
sg12
Vaxhline.cursor_props
p3595
sg14
(lp3596
sg2
S'cursor_props'
p3597
sba(icodemend.demo.code_suggest
Element
p3598
(dp3599
g10
I0
sg11
S'set the cap style for dashed linestyles'
p3600
sg12
Vaxhline.dash_capstyle
p3601
sg14
(lp3602
sg2
S'dash_capstyle'
p3603
sba(icodemend.demo.code_suggest
Element
p3604
(dp3605
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p3606
sg12
Vaxhline.dash_joinstyle
p3607
sg14
(lp3608
sg2
S'dash_joinstyle'
p3609
sba(icodemend.demo.code_suggest
Element
p3610
(dp3611
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p3612
sg12
Vaxhline.dashes
p3613
sg14
(lp3614
sg2
S'dashes'
p3615
sba(icodemend.demo.code_suggest
Element
p3616
(dp3617
g10
I0
sg11
S'set the drawstyle of the plot'
p3618
sg12
Vaxhline.drawstyle
p3619
sg14
(lp3620
sg2
S'drawstyle'
p3621
sba(icodemend.demo.code_suggest
Element
p3622
(dp3623
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p3624
sg12
Vaxhline.figure
p3625
sg14
(lp3626
sg2
S'figure'
p3627
sba(icodemend.demo.code_suggest
Element
p3628
(dp3629
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p3630
sg12
Vaxhline.fillstyle
p3631
sg14
(lp3632
sg2
S'fillstyle'
p3633
sba(icodemend.demo.code_suggest
Element
p3634
(dp3635
g10
I0
sg11
S'sets the ( group ) id for the artist'
p3636
sg12
Vaxhline.gid
p3637
sg14
(lp3638
sg2
S'gid'
p3639
sba(icodemend.demo.code_suggest
Element
p3640
(dp3641
g10
I0
sg11
S'set the hatching pattern'
p3642
sg12
Vaxhline.hatch
p3643
sg14
(lp3644
sg2
S'hatch'
p3645
sba(icodemend.demo.code_suggest
Element
p3646
(dp3647
g10
I0
sg11
S'set the line marker'
p3648
sg12
Vaxhline.marker
p3649
sg14
(lp3650
sg2
S'marker'
p3651
sba(icodemend.demo.code_suggest
Element
p3652
(dp3653
g10
I0
sg11
S'set the marker edge color'
p3654
sg12
Vaxhline.markeredgecolor
p3655
sg14
(lp3656
sg2
S'markeredgecolor'
p3657
sba(icodemend.demo.code_suggest
Element
p3658
(dp3659
g10
I0
sg11
S'set the marker edge width in points'
p3660
sg12
Vaxhline.markeredgewidth
p3661
sg14
(lp3662
sg2
S'markeredgewidth'
p3663
sba(icodemend.demo.code_suggest
Element
p3664
(dp3665
g10
I0
sg11
S'set the marker face color .'
p3666
sg12
Vaxhline.markerfacecolor
p3667
sg14
(lp3668
sg2
S'markerfacecolor'
p3669
sba(icodemend.demo.code_suggest
Element
p3670
(dp3671
g10
I0
sg11
S'set the alternate marker face color .'
p3672
sg12
Vaxhline.markerfacecoloralt
p3673
sg14
(lp3674
sg2
S'markerfacecoloralt'
p3675
sba(icodemend.demo.code_suggest
Element
p3676
(dp3677
g10
I0
sg11
S'set the marker size in points'
p3678
sg12
Vaxhline.markersize
p3679
sg14
(lp3680
sg2
S'markersize'
p3681
sba(icodemend.demo.code_suggest
Element
p3682
(dp3683
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p3684
sg12
Vaxhline.markevery
p3685
sg14
(lp3686
sg2
S'markevery'
p3687
sba(icodemend.demo.code_suggest
Element
p3688
(dp3689
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p3690
sg12
Vaxhline.path_effects
p3691
sg14
(lp3692
sg2
S'path_effects'
p3693
sba(icodemend.demo.code_suggest
Element
p3694
(dp3695
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p3696
sg12
Vaxhline.picker
p3697
sg14
(lp3698
sg2
S'picker'
p3699
sba(icodemend.demo.code_suggest
Element
p3700
(dp3701
g10
I0
sg11
S'sets the pick radius used for containment tests'
p3702
sg12
Vaxhline.pickradius
p3703
sg14
(lp3704
sg2
S'pickradius'
p3705
sba(icodemend.demo.code_suggest
Element
p3706
(dp3707
g10
I0
sg11
S'set the axes position with'
p3708
sg12
Vaxhline.position
p3709
sg14
(lp3710
sg2
S'position'
p3711
sba(icodemend.demo.code_suggest
Element
p3712
(dp3713
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p3714
sg12
Vaxhline.prop_cycle
p3715
sg14
(lp3716
sg2
S'prop_cycle'
p3717
sba(icodemend.demo.code_suggest
Element
p3718
(dp3719
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p3720
sg12
Vaxhline.rasterized
p3721
sg14
(lp3722
sg2
S'rasterized'
p3723
sba(icodemend.demo.code_suggest
Element
p3724
(dp3725
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p3726
sg12
Vaxhline.readonly
p3727
sg14
(lp3728
sg2
S'readonly'
p3729
sbag2888
a(icodemend.demo.code_suggest
Element
p3730
(dp3731
g10
I0
sg11
S'sets the sketch parameters .'
p3732
sg12
Vaxhline.sketch_params
p3733
sg14
(lp3734
sg2
S'sketch_params'
p3735
sba(icodemend.demo.code_suggest
Element
p3736
(dp3737
g10
I0
sg11
S'sets the snap setting which may be'
p3738
sg12
Vaxhline.snap
p3739
sg14
(lp3740
sg2
S'snap'
p3741
sba(icodemend.demo.code_suggest
Element
p3742
(dp3743
g10
I0
sg11
S'set the cap style for solid linestyles'
p3744
sg12
Vaxhline.solid_capstyle
p3745
sg14
(lp3746
sg2
S'solid_capstyle'
p3747
sba(icodemend.demo.code_suggest
Element
p3748
(dp3749
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p3750
sg12
Vaxhline.solid_joinstyle
p3751
sg14
(lp3752
sg2
S'solid_joinstyle'
p3753
sba(icodemend.demo.code_suggest
Element
p3754
(dp3755
g10
I0
sg11
S'set a title for the axes .'
p3756
sg12
Vaxhline.title
p3757
sg14
(lp3758
sg2
S'title'
p3759
sba(icodemend.demo.code_suggest
Element
p3760
(dp3761
g10
I0
sg11
S'set the transformation instance used by this artist'
p3762
sg12
Vaxhline.transform
p3763
sg14
(lp3764
sg2
S'transform'
p3765
sba(icodemend.demo.code_suggest
Element
p3766
(dp3767
g10
I0
sg11
S'sets the url for the artist'
p3768
sg12
Vaxhline.url
p3769
sg14
(lp3770
sg2
S'url'
p3771
sba(icodemend.demo.code_suggest
Element
p3772
(dp3773
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p3774
sg12
Vaxhline.vertices
p3775
sg14
(lp3776
sg2
S'vertices'
p3777
sba(icodemend.demo.code_suggest
Element
p3778
(dp3779
g10
I0
sg11
S"set the artist 's visiblity ."
p3780
sg12
Vaxhline.visible
p3781
sg14
(lp3782
sg2
S'visible'
p3783
sba(icodemend.demo.code_suggest
Element
p3784
(dp3785
g10
I0
sg11
S'set the data np.array for x'
p3786
sg12
Vaxhline.xdata
p3787
sg14
(lp3788
sg2
S'xdata'
p3789
sba(icodemend.demo.code_suggest
Element
p3790
(dp3791
g10
I0
sg11
S'set the label for the xaxis .'
p3792
sg12
Vaxhline.xlabel
p3793
sg14
(lp3794
sg2
S'xlabel'
p3795
sba(icodemend.demo.code_suggest
Element
p3796
(dp3797
g10
I0
sg11
S'set the data limits for the xaxis'
p3798
sg12
Vaxhline.xlim
p3799
sg14
(lp3800
sg2
S'xlim'
p3801
sba(icodemend.demo.code_suggest
Element
p3802
(dp3803
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p3804
sg12
Vaxhline.xmargin
p3805
sg14
(lp3806
sg2
S'xmargin'
p3807
sba(icodemend.demo.code_suggest
Element
p3808
(dp3809
g10
I0
sg11
S'set the scaling of the x-axis'
p3810
sg12
Vaxhline.xscale
p3811
sg14
(lp3812
sg2
S'xscale'
p3813
sba(icodemend.demo.code_suggest
Element
p3814
(dp3815
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p3816
sg12
Vaxhline.xticklabels
p3817
sg14
(lp3818
sg2
S'xticklabels'
p3819
sba(icodemend.demo.code_suggest
Element
p3820
(dp3821
g10
I0
sg11
S'set the x ticks with list of ticks'
p3822
sg12
Vaxhline.xticks
p3823
sg14
(lp3824
sg2
S'xticks'
p3825
sba(icodemend.demo.code_suggest
Element
p3826
(dp3827
g10
I0
sg11
S'set the data np.array for y'
p3828
sg12
Vaxhline.ydata
p3829
sg14
(lp3830
sg2
S'ydata'
p3831
sba(icodemend.demo.code_suggest
Element
p3832
(dp3833
g10
I0
sg11
S'set the label for the yaxis'
p3834
sg12
Vaxhline.ylabel
p3835
sg14
(lp3836
sg2
S'ylabel'
p3837
sba(icodemend.demo.code_suggest
Element
p3838
(dp3839
g10
I0
sg11
S'set the data limits for the yaxis'
p3840
sg12
Vaxhline.ylim
p3841
sg14
(lp3842
sg2
S'ylim'
p3843
sba(icodemend.demo.code_suggest
Element
p3844
(dp3845
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p3846
sg12
Vaxhline.ymargin
p3847
sg14
(lp3848
sg2
S'ymargin'
p3849
sba(icodemend.demo.code_suggest
Element
p3850
(dp3851
g10
I0
sg11
S'set the scaling of the y-axis'
p3852
sg12
Vaxhline.yscale
p3853
sg14
(lp3854
sg2
S'yscale'
p3855
sba(icodemend.demo.code_suggest
Element
p3856
(dp3857
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p3858
sg12
Vaxhline.yticklabels
p3859
sg14
(lp3860
sg2
S'yticklabels'
p3861
sba(icodemend.demo.code_suggest
Element
p3862
(dp3863
g10
I0
sg11
S'set the y ticks with list of ticks'
p3864
sg12
Vaxhline.yticks
p3865
sg14
(lp3866
sg2
S'yticks'
p3867
sbasg2
g3276
sbs(g93
g161
S'(newData[0][0], newData[1][0])'
p3868
tp3869
(icodemend.demo.code_suggest
Element
p3870
(dp3871
g10
I1
sg11
S''
sg12
Vannotate.xy.(newData[0][0], newData[1][0])
p3872
sg14
(lp3873
sg2
g3868
sbs(S'candlestick2_ochl'
p3874
S'opens'
p3875
tp3876
(icodemend.demo.code_suggest
Element
p3877
(dp3878
g10
I0
sg11
S'sequence of opening values'
p3879
sg12
Vcandlestick2_ochl.opens
p3880
sg14
(lp3881
sg2
g3875
sbs(S'axhline'
p3882
g3681
tp3883
g3676
s(S'hist'
p3884
S'x'
tp3885
(icodemend.demo.code_suggest
Element
p3886
(dp3887
g10
I0
sg11
S'compute and draw the histogram of x . the return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ... ] ) , or as a 2-d ndarray in which each column is a dataset . note that the ndarray form is transposed relative to the list form .|||input values , this takes either a single array or a sequency of arrays which are not required to be of the same length'
p3888
sg12
Vhist.x
p3889
sg14
(lp3890
sg2
S'x'
sbs(g16
g453
S'[2, 3]'
p3891
tp3892
(icodemend.demo.code_suggest
Element
p3893
(dp3894
g10
I1
sg11
S''
sg12
Vbar.yerr.[2, 3]
p3895
sg14
(lp3896
sg2
g3891
sbs(g16
g132
S"'orange'"
p3897
tp3898
(icodemend.demo.code_suggest
Element
p3899
(dp3900
g10
I1
sg11
S''
sg12
Vbar.color.'orange'
p3901
sg14
(lp3902
sg2
g3897
sbs(S'pcolormesh'
p3903
S'xticks'
p3904
tp3905
(icodemend.demo.code_suggest
Element
p3906
(dp3907
g10
I0
sg11
S'set the x ticks with list of ticks'
p3908
sg12
Vpcolormesh.xticks
p3909
sg14
(lp3910
sg2
g3904
sbs(g101
S'c'
S'zi'
p3911
tp3912
(icodemend.demo.code_suggest
Element
p3913
(dp3914
g10
I1
sg11
S''
sg12
Vscatter.c.zi
p3915
sg14
(lp3916
sg2
g3911
sbs(S'get_fontext_synonyms'
p3917
S'fileext'
p3918
tp3919
(icodemend.demo.code_suggest
Element
p3920
(dp3921
g10
I0
sg11
S'return a list of file extensions extensions that are synonyms for the given file extension fileext .'
p3922
sg12
Vget_fontext_synonyms.fileext
p3923
sg14
(lp3924
sg2
g3918
sbs(S'candlestick_ohlc'
p3925
S'quotes'
p3926
tp3927
(icodemend.demo.code_suggest
Element
p3928
(dp3929
g10
I0
sg11
S'as long as the first 5 elements are these values , the record can be as long as you want ( e.g. , it may store volume ) .'
p3930
sg12
Vcandlestick_ohlc.quotes
p3931
sg14
(lp3932
sg2
g3926
sbsS'set_sketch_params'
p3933
(icodemend.demo.code_suggest
Element
p3934
(dp3935
g10
I0
sg11
S'sets the sketch parameters .'
p3936
sg12
Vset_sketch_params
p3937
sg14
(lp3938
(icodemend.demo.code_suggest
Element
p3939
(dp3940
g10
I0
sg11
S'the length of the wiggle along the line , in pixels ( default 128.0 )'
p3941
sg12
Vset_sketch_params.length
p3942
sg14
(lp3943
sg2
S'length'
p3944
sba(icodemend.demo.code_suggest
Element
p3945
(dp3946
g10
I0
sg11
S'the scale factor by which the length is shrunken or expanded ( default 16.0 )'
p3947
sg12
Vset_sketch_params.randomness
p3948
sg14
(lp3949
sg2
S'randomness'
p3950
sba(icodemend.demo.code_suggest
Element
p3951
(dp3952
g10
I0
sg11
S'the amplitude of the wiggle perpendicular to the source line , in pixels . if scale is none , or not provided , no sketch filter will be provided .'
p3953
sg12
Vset_sketch_params.scale
p3954
sg14
(lp3955
sg2
S'scale'
p3956
sbasg2
g3933
sbs(S'contourf'
p3957
S'levels'
p3958
tp3959
(icodemend.demo.code_suggest
Element
p3960
(dp3961
g10
I40
sg11
S'a list of floating point numbers indicating the level curves to draw , in increasing order ; e.g. , to draw just the zero contour pass levels=[0 ]'
p3962
sg12
Vcontourf.levels
p3963
sg14
(lp3964
(icodemend.demo.code_suggest
Element
p3965
(dp3966
g10
I9
sg11
S''
sg12
Vcontourf.levels.levels
p3967
sg14
(lp3968
sg2
g666
sba(icodemend.demo.code_suggest
Element
p3969
(dp3970
g10
I2
sg11
S''
sg12
Vcontourf.levels.[(-10000000000/0), 0]
p3971
sg14
(lp3972
sg2
S'[(-10000000000.0), 0]'
p3973
sba(icodemend.demo.code_suggest
Element
p3974
(dp3975
g10
I2
sg11
S''
sg12
Vcontourf.levels.[0, 10000000000/0]
p3976
sg14
(lp3977
sg2
S'[0, 10000000000.0]'
p3978
sba(icodemend.demo.code_suggest
Element
p3979
(dp3980
g10
I2
sg11
S''
sg12
Vcontourf.levels.lvls
p3981
sg14
(lp3982
sg2
S'lvls'
p3983
sba(icodemend.demo.code_suggest
Element
p3984
(dp3985
g10
I1
sg11
S''
sg12
Vcontourf.levels.(0, 2/5, 5, 7/5, 10)
p3986
sg14
(lp3987
sg2
S'(0, 2.5, 5, 7.5, 10)'
p3988
sba(icodemend.demo.code_suggest
Element
p3989
(dp3990
g10
I1
sg11
S''
sg12
Vcontourf.levels.[(-1), 0, 1]
p3991
sg14
(lp3992
sg2
S'[(-1), 0, 1]'
p3993
sba(icodemend.demo.code_suggest
Element
p3994
(dp3995
g10
I1
sg11
S''
sg12
Vcontourf.levels.[0, 0/1, 0/3, 0/5, 1, 3]
p3996
sg14
(lp3997
sg2
S'[0, 0.1, 0.3, 0.5, 1, 3]'
p3998
sba(icodemend.demo.code_suggest
Element
p3999
(dp4000
g10
I1
sg11
S''
sg12
Vcontourf.levels.[0, 1, 2]
p4001
sg14
(lp4002
sg2
S'[0, 1, 2]'
p4003
sba(icodemend.demo.code_suggest
Element
p4004
(dp4005
g10
I1
sg11
S''
sg12
Vcontourf.levels.[0/001, 0/01, 0/1, 1/0]
p4006
sg14
(lp4007
sg2
S'[0.001, 0.01, 0.1, 1.0]'
p4008
sba(icodemend.demo.code_suggest
Element
p4009
(dp4010
g10
I1
sg11
S''
sg12
Vcontourf.levels.[1, 4, 8, 10]
p4011
sg14
(lp4012
sg2
S'[1, 4, 8, 10]'
p4013
sba(icodemend.demo.code_suggest
Element
p4014
(dp4015
g10
I1
sg11
S''
sg12
Vcontourf.levels.[1, 4, 8]
p4016
sg14
(lp4017
sg2
S'[1, 4, 8]'
p4018
sba(icodemend.demo.code_suggest
Element
p4019
(dp4020
g10
I1
sg11
S''
sg12
Vcontourf.levels.[1, 5, 10, 15]
p4021
sg14
(lp4022
sg2
S'[1, 5, 10, 15]'
p4023
sba(icodemend.demo.code_suggest
Element
p4024
(dp4025
g10
I1
sg11
S''
sg12
Vcontourf.levels.[2, 3, 4, 6]
p4026
sg14
(lp4027
sg2
S'[2, 3, 4, 6]'
p4028
sba(icodemend.demo.code_suggest
Element
p4029
(dp4030
g10
I1
sg11
S''
sg12
Vcontourf.levels.clevs
p4031
sg14
(lp4032
sg2
S'clevs'
p4033
sba(icodemend.demo.code_suggest
Element
p4034
(dp4035
g10
I1
sg11
S''
sg12
Vcontourf.levels.lev
p4036
sg14
(lp4037
sg2
S'lev'
p4038
sba(icodemend.demo.code_suggest
Element
p4039
(dp4040
g10
I1
sg11
S''
sg12
Vcontourf.levels.levls
p4041
sg14
(lp4042
sg2
S'levls'
p4043
sba(icodemend.demo.code_suggest
Element
p4044
(dp4045
g10
I1
sg11
S''
sg12
Vcontourf.levels.levs
p4046
sg14
(lp4047
sg2
S'levs'
p4048
sba(icodemend.demo.code_suggest
Element
p4049
(dp4050
g10
I1
sg11
S''
sg12
Vcontourf.levels.tick
p4051
sg14
(lp4052
sg2
S'tick'
p4053
sbasg2
g3958
sbsS'set_multilinebaseline'
p4054
(icodemend.demo.code_suggest
Element
p4055
(dp4056
g10
I0
sg11
S'set multilinebaseline .'
p4057
sg12
Vset_multilinebaseline
p4058
sg14
(lp4059
sg2
g4054
sbs(g944
g110
S"'red'"
p4060
tp4061
(icodemend.demo.code_suggest
Element
p4062
(dp4063
g10
I1
sg11
S''
sg12
Vbarh.edgecolor.'red'
p4064
sg14
(lp4065
sg2
g4060
sbs(g109
g3075
S'75'
p4066
tp4067
(icodemend.demo.code_suggest
Element
p4068
(dp4069
g10
I4
sg11
S''
sg12
Vsavefig.dpi.75
p4070
sg14
(lp4071
sg2
g4066
sbs(g2250
g132
S"'red'"
p4072
tp4073
(icodemend.demo.code_suggest
Element
p4074
(dp4075
g10
I1
sg11
S''
sg12
Vquiver.color.'red'
p4076
sg14
(lp4077
sg2
g4072
sbs(g324
g2183
S"'upper'"
p4078
tp4079
(icodemend.demo.code_suggest
Element
p4080
(dp4081
g10
I8
sg11
S''
sg12
Vimshow.origin.'upper'
p4082
sg14
(lp4083
sg2
g4078
sbsS'project'
p4084
(icodemend.demo.code_suggest
Element
p4085
(dp4086
g10
I2
sg11
S'project x onto the principle axes , dropping any axes where fraction of variance<minfrac'
p4087
sg12
Vproject
p4088
sg14
(lp4089
sg2
g4084
sbs(S'set_yticks'
p4090
S'minor'
p4091
g1944
tp4092
(icodemend.demo.code_suggest
Element
p4093
(dp4094
g10
I10
sg11
S''
sg12
Vset_yticks.minor.False
p4095
sg14
(lp4096
sg2
g1944
sbs(g101
g102
S'0'
tp4097
(icodemend.demo.code_suggest
Element
p4098
(dp4099
g10
I1
sg11
S''
sg12
Vscatter.alpha.0
p4100
sg14
(lp4101
sg2
S'0'
sbs(g1003
g1004
g1944
tp4102
(icodemend.demo.code_suggest
Element
p4103
(dp4104
g10
I3
sg11
S''
sg12
Vboxplot.vert.False
p4105
sg14
(lp4106
sg2
g1944
sbs(g117
g2392
S'1.2'
p4107
tp4108
(icodemend.demo.code_suggest
Element
p4109
(dp4110
g10
I2
sg11
S''
sg12
Vplot.linewidth.1/2
p4111
sg14
(lp4112
sg2
g4107
sbs(S'set_yticklabels'
p4113
S'xmargin'
p4114
tp4115
(icodemend.demo.code_suggest
Element
p4116
(dp4117
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p4118
sg12
Vset_yticklabels.xmargin
p4119
sg14
(lp4120
sg2
g4114
sbs(S'add_axes'
p4121
S'snap'
p4122
tp4123
(icodemend.demo.code_suggest
Element
p4124
(dp4125
g10
I0
sg11
S'sets the snap setting which may be'
p4126
sg12
Vadd_axes.snap
p4127
sg14
(lp4128
sg2
g4122
sbs(S'plot_date'
p4129
S'markerfacecoloralt'
p4130
tp4131
(icodemend.demo.code_suggest
Element
p4132
(dp4133
g10
I0
sg11
S'set the alternate marker face color .'
p4134
sg12
Vplot_date.markerfacecoloralt
p4135
sg14
(lp4136
sg2
g4130
sbsS'get_aliases'
p4137
(icodemend.demo.code_suggest
Element
p4138
(dp4139
g10
I0
sg11
S'get a dict mapping fullname - > alias for each alias in the artistinspector .'
p4140
sg12
Vget_aliases
p4141
sg14
(lp4142
(icodemend.demo.code_suggest
Element
p4143
(dp4144
g10
I0
sg11
S'get a dict mapping fullname - > alias for each alias in the artistinspector .'
p4145
sg12
Vget_aliases.alias
p4146
sg14
(lp4147
sg2
S'alias'
p4148
sba(icodemend.demo.code_suggest
Element
p4149
(dp4150
g10
I0
sg11
S'get a dict mapping fullname - > alias for each alias in the artistinspector .'
p4151
sg12
Vget_aliases.fullname
p4152
sg14
(lp4153
sg2
S'fullname'
p4154
sbasg2
g4137
sbs(S'set_ticklabels'
p4155
S'update_ticks'
p4156
tp4157
(icodemend.demo.code_suggest
Element
p4158
(dp4159
g10
I0
sg11
S'set tick labels . tick labels are updated immediately unless update_ticks is false . to manually update the ticks , call update_ticks method explicitly .'
p4160
sg12
Vset_ticklabels.update_ticks
p4161
sg14
(lp4162
sg2
g4156
sbs(g117
S'markersize'
p4163
S'2'
tp4164
(icodemend.demo.code_suggest
Element
p4165
(dp4166
g10
I2
sg11
S''
sg12
Vplot.markersize.2
p4167
sg14
(lp4168
sg2
S'2'
sbs(S'barbs'
p4169
S'transform'
p4170
tp4171
(icodemend.demo.code_suggest
Element
p4172
(dp4173
g10
I0
sg11
S'set the transform instance used by this artist .'
p4174
sg12
Vbarbs.transform
p4175
sg14
(lp4176
sg2
g4170
sbs(g139
g140
g1598
tp4177
g1594
s(S'psd'
p4178
S'yticks'
p4179
tp4180
(icodemend.demo.code_suggest
Element
p4181
(dp4182
g10
I0
sg11
S'set the y ticks with list of ticks'
p4183
sg12
Vpsd.yticks
p4184
sg14
(lp4185
sg2
g4179
sbs(S'semilogy'
p4186
S'_interpolation_steps'
p4187
tp4188
(icodemend.demo.code_suggest
Element
p4189
(dp4190
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p4191
sg12
Vsemilogy._interpolation_steps
p4192
sg14
(lp4193
sg2
g4187
sbs(S'add_axes'
p4194
S'title'
p4195
tp4196
(icodemend.demo.code_suggest
Element
p4197
(dp4198
g10
I1
sg11
S'set a title for the axes .'
p4199
sg12
Vadd_axes.title
p4200
sg14
(lp4201
(icodemend.demo.code_suggest
Element
p4202
(dp4203
g10
I1
sg11
S''
sg12
Vadd_axes.title.'whatever title'
p4204
sg14
(lp4205
sg2
S"'whatever title'"
p4206
sbasg2
g4195
sbs(g117
g245
S'f'
tp4207
(icodemend.demo.code_suggest
Element
p4208
(dp4209
g10
I1
sg11
S''
sg12
Vplot.figure.f
p4210
sg14
(lp4211
sg2
S'f'
sbsS'get_path_in_displaycoord'
p4212
(icodemend.demo.code_suggest
Element
p4213
(dp4214
g10
I0
sg11
S'return the mutated path of the arrow in the display coord'
p4215
sg12
Vget_path_in_displaycoord
p4216
sg14
(lp4217
sg2
g4212
sbs(S'cohere'
p4218
S'x'
tp4219
(icodemend.demo.code_suggest
Element
p4220
(dp4221
g10
I0
sg11
S'plot the coherence between x and y .|||plot the coherence between x and y . coherence is the normalized cross spectral density :'
p4222
sg12
Vcohere.x
p4223
sg14
(lp4224
sg2
S'x'
sbs(g117
S'position'
p4225
S'0'
tp4226
(icodemend.demo.code_suggest
Element
p4227
(dp4228
g10
I1
sg11
S''
sg12
Vplot.position.0
p4229
sg14
(lp4230
sg2
S'0'
sbs(S'set_xscale'
p4231
S'basex'
p4232
tp4233
(icodemend.demo.code_suggest
Element
p4234
(dp4235
g10
I6
sg11
S'the base of the logarithm'
p4236
sg12
Vset_xscale.basex
p4237
sg14
(lp4238
(icodemend.demo.code_suggest
Element
p4239
(dp4240
g10
I6
sg11
S''
sg12
Vset_xscale.basex.2
p4241
sg14
(lp4242
sg2
S'2'
sbasg2
g4232
sbsS'set_frameon'
p4243
(icodemend.demo.code_suggest
Element
p4244
(dp4245
g10
I0
sg11
S'set whether the figure frame ( background ) is displayed or invisible'
p4246
sg12
Vset_frameon
p4247
sg14
(lp4248
sg2
g4243
sbs(S'axvspan'
p4249
S'codes'
p4250
tp4251
(icodemend.demo.code_suggest
Element
p4252
(dp4253
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p4254
sg12
Vaxvspan.codes
p4255
sg14
(lp4256
sg2
g4250
sbs(S'axvline'
p4257
S'axes'
p4258
tp4259
(icodemend.demo.code_suggest
Element
p4260
(dp4261
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p4262
sg12
Vaxvline.axes
p4263
sg14
(lp4264
sg2
g4258
sbs(g139
g140
g1508
tp4265
g1504
s(S'loglog'
p4266
S'closed'
p4267
tp4268
(icodemend.demo.code_suggest
Element
p4269
(dp4270
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p4271
sg12
Vloglog.closed
p4272
sg14
(lp4273
sg2
g4267
sbs(g117
S'marker'
p4274
S"'^'"
p4275
tp4276
(icodemend.demo.code_suggest
Element
p4277
(dp4278
g10
I4
sg11
S''
sg12
Vplot.marker.'^'
p4279
sg14
(lp4280
sg2
g4275
sbsS'PackerBase'
p4281
(icodemend.demo.code_suggest
Element
p4282
(dp4283
g10
I0
sg11
S''
sg12
VPackerBase
p4284
sg14
(lp4285
(icodemend.demo.code_suggest
Element
p4286
(dp4287
g10
I0
sg11
S'alignment of boxes . can be one of top , bottom , left , right , center and baseline'
p4288
sg12
VPackerBase.align
p4289
sg14
(lp4290
sg2
S'align'
p4291
sba(icodemend.demo.code_suggest
Element
p4292
(dp4293
g10
I0
sg11
S'width and height of the container box , calculated if none .'
p4294
sg12
VPackerBase.height
p4295
sg14
(lp4296
sg2
S'height'
p4297
sba(icodemend.demo.code_suggest
Element
p4298
(dp4299
g10
I0
sg11
S'packing mode .'
p4300
sg12
VPackerBase.mode
p4301
sg14
(lp4302
sg2
S'mode'
p4303
sba(icodemend.demo.code_suggest
Element
p4304
(dp4305
g10
I0
sg11
S'boundary pad .'
p4306
sg12
VPackerBase.pad
p4307
sg14
(lp4308
sg2
S'pad'
p4309
sba(icodemend.demo.code_suggest
Element
p4310
(dp4311
g10
I0
sg11
S'spacing between items .'
p4312
sg12
VPackerBase.sep
p4313
sg14
(lp4314
sg2
S'sep'
p4315
sbasg2
g4281
sbs(g139
g140
g1692
tp4316
g1688
sS'to_rgba_array'
p4317
(icodemend.demo.code_suggest
Element
p4318
(dp4319
g10
I0
sg11
S'returns a numpy array of rgba tuples .'
p4320
sg12
Vto_rgba_array
p4321
sg14
(lp4322
(icodemend.demo.code_suggest
Element
p4323
(dp4324
g10
I0
sg11
S'returns a numpy array of rgba tuples .'
p4325
sg12
Vto_rgba_array.RGBA
p4326
sg14
(lp4327
sg2
S'RGBA'
p4328
sba(icodemend.demo.code_suggest
Element
p4329
(dp4330
g10
I0
sg11
S'special case to handle " no color " : if c is " none " ( case-insensitive ) , then an empty array will be returned . same for an empty list .'
p4331
sg12
Vto_rgba_array.c
p4332
sg14
(lp4333
sg2
S'c'
sbasg2
g4317
sbs(g252
S'shadow'
p4334
g1944
tp4335
(icodemend.demo.code_suggest
Element
p4336
(dp4337
g10
I3
sg11
S''
sg12
Vlegend.shadow.False
p4338
sg14
(lp4339
sg2
g1944
sbs(g117
S'title'
p4340
S"'ranking'"
p4341
tp4342
(icodemend.demo.code_suggest
Element
p4343
(dp4344
g10
I1
sg11
S''
sg12
Vplot.title.'ranking'
p4345
sg14
(lp4346
sg2
g4341
sbs(S'figtext'
p4347
S'anchor'
p4348
tp4349
(icodemend.demo.code_suggest
Element
p4350
(dp4351
g10
I0
sg11
S'anchor'
p4352
sg12
Vfigtext.anchor
p4353
sg14
(lp4354
sg2
g4348
sbs(S'fill_between'
p4355
S'where'
p4356
S'y1positive'
p4357
tp4358
(icodemend.demo.code_suggest
Element
p4359
(dp4360
g10
I1
sg11
S''
sg12
Vfill_between.where.y1positive
p4361
sg14
(lp4362
sg2
g4357
sbs(S'loglog'
p4363
S'xscale'
p4364
tp4365
(icodemend.demo.code_suggest
Element
p4366
(dp4367
g10
I0
sg11
S'set the scaling of the x-axis'
p4368
sg12
Vloglog.xscale
p4369
sg14
(lp4370
sg2
g4364
sbs(S'contour'
p4371
g666
S'[0.5]'
p4372
tp4373
(icodemend.demo.code_suggest
Element
p4374
(dp4375
g10
I1
sg11
S''
sg12
Vcontour.levels.[0/5]
p4376
sg14
(lp4377
sg2
g4372
sbs(S'quiver'
p4378
S'anchor'
p4379
tp4380
(icodemend.demo.code_suggest
Element
p4381
(dp4382
g10
I0
sg11
S'anchor'
p4383
sg12
Vquiver.anchor
p4384
sg14
(lp4385
sg2
g4379
sbsS'get_dpi_cor'
p4386
(icodemend.demo.code_suggest
Element
p4387
(dp4388
g10
I0
sg11
S'dpi_cor is currently used for linewidth-related things and shink factor .'
p4389
sg12
Vget_dpi_cor
p4390
sg14
(lp4391
sg2
g4386
sbs(S'subplots'
p4392
g1887
tp4393
g1824
s(g16
g1262
g1252
tp4394
g1248
s(S'get'
p4395
S'cursor_props'
p4396
tp4397
(icodemend.demo.code_suggest
Element
p4398
(dp4399
g10
I0
sg11
S'set the cursor property as'
p4400
sg12
Vget.cursor_props
p4401
sg14
(lp4402
sg2
g4396
sbs(g1003
S'sym'
p4403
S"'+'"
p4404
tp4405
(icodemend.demo.code_suggest
Element
p4406
(dp4407
g10
I2
sg11
S''
sg12
Vboxplot.sym.'+'
p4408
sg14
(lp4409
sg2
g4404
sbsS'set_font_properties'
p4410
(icodemend.demo.code_suggest
Element
p4411
(dp4412
g10
I2
sg11
S'alias for set_fontproperties'
p4413
sg12
Vset_font_properties
p4414
sg14
(lp4415
sg2
g4410
sbs(S'set_xticklabels'
p4416
S'animated'
p4417
tp4418
(icodemend.demo.code_suggest
Element
p4419
(dp4420
g10
I0
sg11
S"set the artist 's animation state ."
p4421
sg12
Vset_xticklabels.animated
p4422
sg14
(lp4423
sg2
g4417
sbs(S'pcolor'
p4424
S'size_inches'
p4425
tp4426
(icodemend.demo.code_suggest
Element
p4427
(dp4428
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p4429
sg12
Vpcolor.size_inches
p4430
sg14
(lp4431
sg2
g4425
sbs(S'axhline'
p4432
g3687
tp4433
g3682
s(S'thetagrids'
p4434
S'rotation_mode'
p4435
tp4436
(icodemend.demo.code_suggest
Element
p4437
(dp4438
g10
I0
sg11
S'set text rotation mode .'
p4439
sg12
Vthetagrids.rotation_mode
p4440
sg14
(lp4441
sg2
g4435
sbsS'pts_to_prestep'
p4442
(icodemend.demo.code_suggest
Element
p4443
(dp4444
g10
I0
sg11
S'covert continuous line to pre-steps'
p4445
sg12
Vpts_to_prestep
p4446
sg14
(lp4447
(icodemend.demo.code_suggest
Element
p4448
(dp4449
g10
I0
sg11
S'the x location of the steps'
p4450
sg12
Vpts_to_prestep.x
p4451
sg14
(lp4452
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p4453
(dp4454
g10
I0
sg11
S'any number of y arrays to be turned into steps . all must be the same length as x'
p4455
sg12
Vpts_to_prestep.y1, y2, ///
p4456
sg14
(lp4457
sg2
S'y1, y2, ...'
p4458
sbasg2
g4442
sbs(g766
S'vmin'
p4459
S'v_min'
p4460
tp4461
(icodemend.demo.code_suggest
Element
p4462
(dp4463
g10
I1
sg11
S''
sg12
Vcontourf.vmin.v_min
p4464
sg14
(lp4465
sg2
g4460
sbs(S'grid'
p4466
S'xticklabels'
p4467
tp4468
(icodemend.demo.code_suggest
Element
p4469
(dp4470
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p4471
sg12
Vgrid.xticklabels
p4472
sg14
(lp4473
sg2
g4467
sbs(g117
g102
S'0.8'
p4474
tp4475
(icodemend.demo.code_suggest
Element
p4476
(dp4477
g10
I1
sg11
S''
sg12
Vplot.alpha.0/8
p4478
sg14
(lp4479
sg2
g4474
sbs(S'axhline'
p4480
g3621
tp4481
g3616
s(g766
g666
g4038
tp4482
g4034
sS'center_matrix'
p4483
(icodemend.demo.code_suggest
Element
p4484
(dp4485
g10
I0
sg11
S'return the matrix m with each row having zero mean and unit std .'
p4486
sg12
Vcenter_matrix
p4487
sg14
(lp4488
(icodemend.demo.code_suggest
Element
p4489
(dp4490
g10
I0
sg11
S'return the matrix m with each row having zero mean and unit std .'
p4491
sg12
Vcenter_matrix.M
p4492
sg14
(lp4493
sg2
S'M'
sba(icodemend.demo.code_suggest
Element
p4494
(dp4495
g10
I0
sg11
S'if dim = 1 operate on columns instead of rows . ( dim is opposite to the numpy axis kwarg . )'
p4496
sg12
Vcenter_matrix.dim
p4497
sg14
(lp4498
sg2
S'dim'
p4499
sbasg2
g4483
sbs(g117
g132
S'(0.0, 0.5, T[i])'
p4500
tp4501
(icodemend.demo.code_suggest
Element
p4502
(dp4503
g10
I1
sg11
S''
sg12
Vplot.color.(0/0, 0/5, T[i])
p4504
sg14
(lp4505
sg2
g4500
sbs(g16
g17
S'2'
tp4506
(icodemend.demo.code_suggest
Element
p4507
(dp4508
g10
I1
sg11
S''
sg12
Vbar.width.2
p4509
sg14
(lp4510
sg2
S'2'
sbsS'set_xlim'
p4511
(icodemend.demo.code_suggest
Element
p4512
(dp4513
g10
I420
sg11
S'set the data limits for the xaxis'
p4514
sg12
Vset_xlim
p4515
sg14
(lp4516
(icodemend.demo.code_suggest
Element
p4517
(dp4518
g10
I5
sg11
S'the left xlim ; xmin , the previous name , may still be used|||note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) . for example , suppose x is years before present . then one might use :'
p4519
sg12
Vset_xlim.left
p4520
sg14
(lp4521
(icodemend.demo.code_suggest
Element
p4522
(dp4523
g10
I2
sg11
S''
sg12
Vset_xlim.left.0
p4524
sg14
(lp4525
sg2
S'0'
sbasg2
S'left'
p4526
sba(icodemend.demo.code_suggest
Element
p4527
(dp4528
g10
I5
sg11
S'note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) . for example , suppose x is years before present . then one might use :|||the right xlim ; xmax , the previous name , may still be used'
p4529
sg12
Vset_xlim.right
p4530
sg14
(lp4531
g1208
a(icodemend.demo.code_suggest
Element
p4532
(dp4533
g10
I1
sg11
S''
sg12
Vset_xlim.right.640
p4534
sg14
(lp4535
sg2
S'640'
p4536
sba(icodemend.demo.code_suggest
Element
p4537
(dp4538
g10
I1
sg11
S''
sg12
Vset_xlim.right.xend
p4539
sg14
(lp4540
sg2
S'xend'
p4541
sbasg2
S'right'
p4542
sba(icodemend.demo.code_suggest
Element
p4543
(dp4544
g10
I5
sg11
S'note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) . for example , suppose x is years before present . then one might use :'
p4545
sg12
Vset_xlim.xmin
p4546
sg14
(lp4547
(icodemend.demo.code_suggest
Element
p4548
(dp4549
g10
I1
sg11
S''
sg12
Vset_xlim.xmin.-1/0
p4550
sg14
(lp4551
sg2
S'-1.0'
p4552
sba(icodemend.demo.code_suggest
Element
p4553
(dp4554
g10
I1
sg11
S''
sg12
Vset_xlim.xmin.0/0
p4555
sg14
(lp4556
sg2
S'0.0'
p4557
sba(icodemend.demo.code_suggest
Element
p4558
(dp4559
g10
I1
sg11
S''
sg12
Vset_xlim.xmin.1
p4560
sg14
(lp4561
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p4562
(dp4563
g10
I1
sg11
S''
sg12
Vset_xlim.xmin.7
p4564
sg14
(lp4565
sg2
S'7'
sbasg2
S'xmin'
p4566
sba(icodemend.demo.code_suggest
Element
p4567
(dp4568
g10
I4
sg11
S'note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) . for example , suppose x is years before present . then one might use :'
p4569
sg12
Vset_xlim.xmax
p4570
sg14
(lp4571
(icodemend.demo.code_suggest
Element
p4572
(dp4573
g10
I1
sg11
S''
sg12
Vset_xlim.xmax.100
p4574
sg14
(lp4575
sg2
S'100'
p4576
sba(icodemend.demo.code_suggest
Element
p4577
(dp4578
g10
I1
sg11
S''
sg12
Vset_xlim.xmax.1000
p4579
sg14
(lp4580
sg2
S'1000'
p4581
sba(icodemend.demo.code_suggest
Element
p4582
(dp4583
g10
I1
sg11
S''
sg12
Vset_xlim.xmax.35086
p4584
sg14
(lp4585
sg2
S'35086'
p4586
sbasg2
S'xmax'
p4587
sba(icodemend.demo.code_suggest
Element
p4588
(dp4589
g10
I2
sg11
S'notify observers of limit change'
p4590
sg12
Vset_xlim.emit
p4591
sg14
(lp4592
(icodemend.demo.code_suggest
Element
p4593
(dp4594
g10
I1
sg11
S''
sg12
Vset_xlim.emit.False
p4595
sg14
(lp4596
sg2
g1944
sba(icodemend.demo.code_suggest
Element
p4597
(dp4598
g10
I1
sg11
S''
sg12
Vset_xlim.emit.True
p4599
sg14
(lp4600
sg2
g438
sbasg2
S'emit'
p4601
sba(icodemend.demo.code_suggest
Element
p4602
(dp4603
g10
I1
sg11
S'turn x autoscaling on ( true ) , off ( false ; default ) , or leave unchanged ( none )'
p4604
sg12
Vset_xlim.auto
p4605
sg14
(lp4606
(icodemend.demo.code_suggest
Element
p4607
(dp4608
g10
I1
sg11
S''
sg12
Vset_xlim.auto.False
p4609
sg14
(lp4610
sg2
g1944
sbasg2
S'auto'
p4611
sba(icodemend.demo.code_suggest
Element
p4612
(dp4613
g10
I0
sg11
S'turn x autoscaling on ( true ) , off ( false ; default ) , or leave unchanged ( none )|||notify observers of limit change'
p4614
sg12
Vset_xlim.False
p4615
sg14
(lp4616
sg2
S'False'
p4617
sba(icodemend.demo.code_suggest
Element
p4618
(dp4619
g10
I0
sg11
S'turn x autoscaling on ( true ) , off ( false ; default ) , or leave unchanged ( none )'
p4620
sg12
Vset_xlim.None
p4621
sg14
(lp4622
sg2
S'None'
p4623
sba(icodemend.demo.code_suggest
Element
p4624
(dp4625
g10
I0
sg11
S'turn x autoscaling on ( true ) , off ( false ; default ) , or leave unchanged ( none )|||notify observers of limit change'
p4626
sg12
Vset_xlim.True
p4627
sg14
(lp4628
sg2
S'True'
p4629
sba(icodemend.demo.code_suggest
Element
p4630
(dp4631
g10
I0
sg11
S'note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) . for example , suppose x is years before present . then one might use :'
p4632
sg12
Vset_xlim.x
p4633
sg14
(lp4634
sg2
S'x'
sbasg2
g4511
sbs(g324
g785
S'(lonra[1], lonra[0], latra[0], latra[1])'
p4635
tp4636
(icodemend.demo.code_suggest
Element
p4637
(dp4638
g10
I1
sg11
S''
sg12
Vimshow.extent.(lonra[1], lonra[0], latra[0], latra[1])
p4639
sg14
(lp4640
sg2
g4635
sbs(S'axhline'
p4641
g3807
tp4642
g3802
s(S'barh'
p4643
S'transform'
p4644
tp4645
(icodemend.demo.code_suggest
Element
p4646
(dp4647
g10
I0
sg11
S'set the transform instance used by this artist .'
p4648
sg12
Vbarh.transform
p4649
sg14
(lp4650
sg2
g4644
sbs(g1003
S'positions'
p4651
g865
tp4652
(icodemend.demo.code_suggest
Element
p4653
(dp4654
g10
I1
sg11
S''
sg12
Vboxplot.positions.None
p4655
sg14
(lp4656
sg2
g865
sbs(g117
g4163
S'10'
p4657
tp4658
(icodemend.demo.code_suggest
Element
p4659
(dp4660
g10
I33
sg11
S''
sg12
Vplot.markersize.10
p4661
sg14
(lp4662
sg2
g4657
sbs(S'loglog'
p4663
S'cursor_props'
p4664
tp4665
(icodemend.demo.code_suggest
Element
p4666
(dp4667
g10
I0
sg11
S'set the cursor property as'
p4668
sg12
Vloglog.cursor_props
p4669
sg14
(lp4670
sg2
g4664
sbs(S'violin'
p4671
S'showextrema'
p4672
tp4673
(icodemend.demo.code_suggest
Element
p4674
(dp4675
g10
I0
sg11
S'if true , will toggle rendering of the extrema .'
p4676
sg12
Vviolin.showextrema
p4677
sg14
(lp4678
sg2
g4672
sbsS'mpl_connect'
p4679
(icodemend.demo.code_suggest
Element
p4680
(dp4681
g10
I165
sg11
S'connect event with string s to func .'
p4682
sg12
Vmpl_connect
p4683
sg14
(lp4684
(icodemend.demo.code_suggest
Element
p4685
(dp4686
g10
I0
sg11
S'connect event with string s to func . the signature of func is :'
p4687
sg12
Vmpl_connect.func
p4688
sg14
(lp4689
sg2
S'func'
p4690
sba(icodemend.demo.code_suggest
Element
p4691
(dp4692
g10
I0
sg11
S'connect event with string s to func . the signature of func is :'
p4693
sg12
Vmpl_connect.s
p4694
sg14
(lp4695
sg2
S's'
sbasg2
g4679
sbs(g582
g2392
S'5'
tp4696
g3414
s(S'grid'
p4697
S'solid_capstyle'
p4698
tp4699
(icodemend.demo.code_suggest
Element
p4700
(dp4701
g10
I0
sg11
S'set the cap style for solid linestyles'
p4702
sg12
Vgrid.solid_capstyle
p4703
sg14
(lp4704
sg2
g4698
sbs(S'semilogy'
p4705
S'codes'
p4706
tp4707
(icodemend.demo.code_suggest
Element
p4708
(dp4709
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p4710
sg12
Vsemilogy.codes
p4711
sg14
(lp4712
sg2
g4706
sbs(g252
g1010
S'(1.05, 0.05)'
p4713
tp4714
(icodemend.demo.code_suggest
Element
p4715
(dp4716
g10
I1
sg11
S''
sg12
Vlegend.loc.(1/05, 0/05)
p4717
sg14
(lp4718
sg2
g4713
sbsS'set_variant'
p4719
(icodemend.demo.code_suggest
Element
p4720
(dp4721
g10
I0
sg11
S"set the font variant , either ' normal ' or ' small-caps ' . set the font variant ."
p4722
sg12
Vset_variant
p4723
sg14
(lp4724
sg2
g4719
sbs(S'cohere'
p4725
S'dash_joinstyle'
p4726
tp4727
(icodemend.demo.code_suggest
Element
p4728
(dp4729
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p4730
sg12
Vcohere.dash_joinstyle
p4731
sg14
(lp4732
sg2
g4726
sbs(S'axvspan'
p4733
S'animated'
p4734
tp4735
(icodemend.demo.code_suggest
Element
p4736
(dp4737
g10
I0
sg11
S"set the artist 's animation state ."
p4738
sg12
Vaxvspan.animated
p4739
sg14
(lp4740
sg2
g4734
sbsS'release'
p4741
(icodemend.demo.code_suggest
Element
p4742
(dp4743
g10
I2
sg11
S'this will be called whenever mouse button is released release the lock'
p4744
sg12
Vrelease
p4745
sg14
(lp4746
sg2
g4741
sbs(g324
g785
S'[(-10), 0, (-10), 0]'
p4747
tp4748
(icodemend.demo.code_suggest
Element
p4749
(dp4750
g10
I2
sg11
S''
sg12
Vimshow.extent.[(-10), 0, (-10), 0]
p4751
sg14
(lp4752
sg2
g4747
sbs(S'grid'
p4753
S'yticks'
p4754
tp4755
(icodemend.demo.code_suggest
Element
p4756
(dp4757
g10
I0
sg11
S'set the y ticks with list of ticks'
p4758
sg12
Vgrid.yticks
p4759
sg14
(lp4760
sg2
g4754
sbs(S'update_from'
p4761
S'linestyle'
p4762
tp4763
(icodemend.demo.code_suggest
Element
p4764
(dp4765
g10
I0
sg11
S'set the patch linestyle'
p4766
sg12
Vupdate_from.linestyle
p4767
sg14
(lp4768
sg2
g4762
sbs(S'semilogx'
p4769
S'scaley'
p4770
tp4771
(icodemend.demo.code_suggest
Element
p4772
(dp4773
g10
I0
sg11
S'kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true . autoscale the view limits using the data limits . you can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to false . the autoscaling preserves any axis direction reversal that has already been done .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p4774
sg12
Vsemilogx.scaley
p4775
sg14
(lp4776
sg2
g4770
sbs(S'barh'
p4777
S'cursor_props'
p4778
tp4779
(icodemend.demo.code_suggest
Element
p4780
(dp4781
g10
I0
sg11
S'set the cursor property as'
p4782
sg12
Vbarh.cursor_props
p4783
sg14
(lp4784
sg2
g4778
sbs(S'figtext'
p4785
S'axes'
p4786
tp4787
(icodemend.demo.code_suggest
Element
p4788
(dp4789
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p4790
sg12
Vfigtext.axes
p4791
sg14
(lp4792
sg2
g4786
sbs(S'prctile_rank'
p4793
S'p'
tp4794
(icodemend.demo.code_suggest
Element
p4795
(dp4796
g10
I0
sg11
S'return the rank for each element in x , return the rank 0..len(p ) . e.g. , if p =( 25 , 50 , 75 ) , the return value will be a len(x ) array with values in [ 0,1,2,3 ] where 0 indicates the value is less than the 25th percentile , 1 indicates the value is > = the 25th and < 50th percentile , ... and 3 indicates the value is above the 75th percentile cutoff .|||p is either an array of percentiles in [ 0..100 ] or a scalar which indicates how many quantiles of data you want ranked .'
p4797
sg12
Vprctile_rank.p
p4798
sg14
(lp4799
sg2
S'p'
sbs(g93
S'xytext'
p4800
S'((np.pi / 4.2), (1.2 * max(r)))'
p4801
tp4802
(icodemend.demo.code_suggest
Element
p4803
(dp4804
g10
I1
sg11
S''
sg12
Vannotate.xytext.((np/pi / 4/2), (1/2 * max(r)))
p4805
sg14
(lp4806
sg2
g4801
sbsS'new_subplotspec'
p4807
(icodemend.demo.code_suggest
Element
p4808
(dp4809
g10
I1
sg11
S'create and return a suplotspec instance .'
p4810
sg12
Vnew_subplotspec
p4811
sg14
(lp4812
sg2
g4807
sbs(S'set_ylim'
p4813
S'ymin'
p4814
tp4815
(icodemend.demo.code_suggest
Element
p4816
(dp4817
g10
I2
sg11
S'note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) . for example , suppose y is depth in the ocean . then one might use :'
p4818
sg12
Vset_ylim.ymin
p4819
sg14
(lp4820
(icodemend.demo.code_suggest
Element
p4821
(dp4822
g10
I2
sg11
S''
sg12
Vset_ylim.ymin.0
p4823
sg14
(lp4824
sg2
S'0'
sbasg2
g4814
sbs(S'add_axes'
p4825
S'_interpolation_steps'
p4826
tp4827
(icodemend.demo.code_suggest
Element
p4828
(dp4829
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p4830
sg12
Vadd_axes._interpolation_steps
p4831
sg14
(lp4832
sg2
g4826
sbs(g4371
S'linestyles'
p4833
S"('-',)"
p4834
tp4835
(icodemend.demo.code_suggest
Element
p4836
(dp4837
g10
I1
sg11
S''
sg12
Vcontour.linestyles.('-',)
p4838
sg14
(lp4839
sg2
g4834
sbs(S'shade_rgb'
p4840
S'vert_exag'
p4841
tp4842
(icodemend.demo.code_suggest
Element
p4843
(dp4844
g10
I0
sg11
S'the amount to exaggerate the elevation values by when calculating illumination . this can be used either to correct for differences in units between the x-y coordinate system and the elevation coordinate system ( e.g. decimal degrees vs meters ) or to exaggerate or de-emphasize topography .'
p4845
sg12
Vshade_rgb.vert_exag
p4846
sg14
(lp4847
sg2
g4841
sbs(S'barbs'
p4848
S'_interpolation_steps'
p4849
tp4850
(icodemend.demo.code_suggest
Element
p4851
(dp4852
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p4853
sg12
Vbarbs._interpolation_steps
p4854
sg14
(lp4855
sg2
g4849
sbs(S'axhline'
p4856
g3567
tp4857
g3562
s(S'contains_point'
p4858
S'transform'
p4859
tp4860
(icodemend.demo.code_suggest
Element
p4861
(dp4862
g10
I0
sg11
S'if transform is not none , the path will be transformed before performing the test .'
p4863
sg12
Vcontains_point.transform
p4864
sg14
(lp4865
sg2
g4859
sbs(S'get_sparse_matrix'
p4866
S'frac'
p4867
tp4868
(icodemend.demo.code_suggest
Element
p4869
(dp4870
g10
I0
sg11
S'return a m x n sparse matrix with frac elements randomly filled .'
p4871
sg12
Vget_sparse_matrix.frac
p4872
sg14
(lp4873
sg2
g4867
sbs(S'set_yticklabels'
p4874
S'backgroundcolor'
p4875
tp4876
(icodemend.demo.code_suggest
Element
p4877
(dp4878
g10
I0
sg11
S'set the background color of the text by updating the bbox .'
p4879
sg12
Vset_yticklabels.backgroundcolor
p4880
sg14
(lp4881
sg2
g4875
sbs(S'barh'
p4882
S'url'
p4883
tp4884
(icodemend.demo.code_suggest
Element
p4885
(dp4886
g10
I0
sg11
S'sets the url for the artist'
p4887
sg12
Vbarh.url
p4888
sg14
(lp4889
sg2
g4883
sbs(S'axhspan'
p4890
S'xlabel'
p4891
tp4892
(icodemend.demo.code_suggest
Element
p4893
(dp4894
g10
I0
sg11
S'set the label for the xaxis .'
p4895
sg12
Vaxhspan.xlabel
p4896
sg14
(lp4897
sg2
g4891
sbs(S'csd'
p4898
S'title'
p4899
tp4900
(icodemend.demo.code_suggest
Element
p4901
(dp4902
g10
I0
sg11
S'set a title for the axes .'
p4903
sg12
Vcsd.title
p4904
sg14
(lp4905
sg2
g4899
sbs(S'set_yticks'
p4906
S'minor'
p4907
tp4908
(icodemend.demo.code_suggest
Element
p4909
(dp4910
g10
I19
sg11
S'sets the minor ticks if true'
p4911
sg12
Vset_yticks.minor
p4912
sg14
(lp4913
g4093
a(icodemend.demo.code_suggest
Element
p4914
(dp4915
g10
I8
sg11
S''
sg12
Vset_yticks.minor.True
p4916
sg14
(lp4917
sg2
g438
sba(icodemend.demo.code_suggest
Element
p4918
(dp4919
g10
I1
sg11
S''
sg12
Vset_yticks.minor.'true'
p4920
sg14
(lp4921
sg2
S"'true'"
p4922
sbasg2
g4907
sbs(S'distances_along_curve'
p4923
S'X'
tp4924
(icodemend.demo.code_suggest
Element
p4925
(dp4926
g10
I0
sg11
S'where x is an m x n array or matrix . the distances between successive rows is computed . distance is the standard euclidean distance .'
p4927
sg12
Vdistances_along_curve.X
p4928
sg14
(lp4929
sg2
S'X'
sbs(S'phase_spectrum'
p4930
S'yscale'
p4931
tp4932
(icodemend.demo.code_suggest
Element
p4933
(dp4934
g10
I0
sg11
S'set the scaling of the y-axis'
p4935
sg12
Vphase_spectrum.yscale
p4936
sg14
(lp4937
sg2
g4931
sbs(S'hlines'
p4938
S'sketch_params'
p4939
tp4940
(icodemend.demo.code_suggest
Element
p4941
(dp4942
g10
I0
sg11
S'sets the sketch parameters .'
p4943
sg12
Vhlines.sketch_params
p4944
sg14
(lp4945
sg2
g4939
sbsS'detrend_mean'
p4946
(icodemend.demo.code_suggest
Element
p4947
(dp4948
g10
I0
sg11
S'return x minus the mean(x ) .'
p4949
sg12
Vdetrend_mean
p4950
sg14
(lp4951
sg2
g4946
sbsS'switch_backends'
p4952
(icodemend.demo.code_suggest
Element
p4953
(dp4954
g10
I1
sg11
S'instantiate an instance of figurecanvasclass'
p4955
sg12
Vswitch_backends
p4956
sg14
(lp4957
sg2
g4952
sbsS'detrend_linear'
p4958
(icodemend.demo.code_suggest
Element
p4959
(dp4960
g10
I0
sg11
S"return x minus best fit line ; ' linear ' detrending ."
p4961
sg12
Vdetrend_linear
p4962
sg14
(lp4963
sg2
g4958
sbs(g117
g118
S"'Observations'"
p4964
tp4965
(icodemend.demo.code_suggest
Element
p4966
(dp4967
g10
I1
sg11
S''
sg12
Vplot.label.'Observations'
p4968
sg14
(lp4969
sg2
g4964
sbs(g117
g118
S"'Label'"
p4970
tp4971
(icodemend.demo.code_suggest
Element
p4972
(dp4973
g10
I1
sg11
S''
sg12
Vplot.label.'Label'
p4974
sg14
(lp4975
sg2
g4970
sbs(S'tricontourf'
p4976
S'z1'
p4977
tp4978
(icodemend.demo.code_suggest
Element
p4979
(dp4980
g10
I0
sg11
S'note : tricontourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :'
p4981
sg12
Vtricontourf.z1
p4982
sg14
(lp4983
sg2
g4977
sbs(g252
S'ncol'
p4984
S'3'
tp4985
(icodemend.demo.code_suggest
Element
p4986
(dp4987
g10
I11
sg11
S''
sg12
Vlegend.ncol.3
p4988
sg14
(lp4989
sg2
S'3'
sbs(S'normpdf'
p4990
S'sigma'
p4991
tp4992
(icodemend.demo.code_suggest
Element
p4993
(dp4994
g10
I0
sg11
S'return the normal pdf evaluated at x ; args provides mu , sigma'
p4995
sg12
Vnormpdf.sigma
p4996
sg14
(lp4997
sg2
g4991
sbs(S'pcolormesh'
p4998
g4459
S'0.5'
p4999
tp5000
(icodemend.demo.code_suggest
Element
p5001
(dp5002
g10
I1
sg11
S''
sg12
Vpcolormesh.vmin.0/5
p5003
sg14
(lp5004
sg2
g4999
sbs(g93
g161
S'(pointsx[i], pointsy[i])'
p5005
tp5006
(icodemend.demo.code_suggest
Element
p5007
(dp5008
g10
I1
sg11
S''
sg12
Vannotate.xy.(pointsx[i], pointsy[i])
p5009
sg14
(lp5010
sg2
g5005
sbs(g93
g4800
S'(0, ypos)'
p5011
tp5012
(icodemend.demo.code_suggest
Element
p5013
(dp5014
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0, ypos)
p5015
sg14
(lp5016
sg2
g5011
sbs(S'set_yscale'
p5017
S'linscaley'
p5018
tp5019
(icodemend.demo.code_suggest
Element
p5020
(dp5021
g10
I0
sg11
S'this allows the linear range ( - linthresh to linthresh ) to be stretched relative to the logarithmic range . its value is the number of decades to use for each half of the linear range . for example , when linscale = = 1.0 ( the default ) , the space used for the positive and negative halves of the linear range will be equal to one decade in the logarithmic range .'
p5022
sg12
Vset_yscale.linscaley
p5023
sg14
(lp5024
sg2
g5018
sbs(g514
S'vmax'
p5025
S'1.0'
p5026
tp5027
(icodemend.demo.code_suggest
Element
p5028
(dp5029
g10
I2
sg11
S''
sg12
Vpcolor.vmax.1/0
p5030
sg14
(lp5031
sg2
g5026
sbs(g245
g140
S'((columns * 0.01), (rows * 0.01))'
p5032
tp5033
(icodemend.demo.code_suggest
Element
p5034
(dp5035
g10
I1
sg11
S''
sg12
Vfigure.figsize.((columns * 0/01), (rows * 0/01))
p5036
sg14
(lp5037
sg2
g5032
sbs(g93
g161
S'(tX[i], tY[i])'
p5038
tp5039
(icodemend.demo.code_suggest
Element
p5040
(dp5041
g10
I1
sg11
S''
sg12
Vannotate.xy.(tX[i], tY[i])
p5042
sg14
(lp5043
sg2
g5038
sbs(S'get_xaxis_text1_transform'
p5044
S'halign'
p5045
tp5046
(icodemend.demo.code_suggest
Element
p5047
(dp5048
g10
I0
sg11
S'where valign and halign are requested alignments for the text .'
p5049
sg12
Vget_xaxis_text1_transform.halign
p5050
sg14
(lp5051
sg2
g5045
sbs(S'gca'
p5052
g2155
S'((- pi), pi)'
p5053
tp5054
(icodemend.demo.code_suggest
Element
p5055
(dp5056
g10
I1
sg11
S''
sg12
Vgca.xlim.((- pi), pi)
p5057
sg14
(lp5058
sg2
g5053
sbs(g1003
g4651
S'[0, 1, 2, 0, 1]'
p5059
tp5060
(icodemend.demo.code_suggest
Element
p5061
(dp5062
g10
I1
sg11
S''
sg12
Vboxplot.positions.[0, 1, 2, 0, 1]
p5063
sg14
(lp5064
sg2
g5059
sbs(S'pcolorfast'
p5065
S'x'
tp5066
(icodemend.demo.code_suggest
Element
p5067
(dp5068
g10
I0
sg11
S'xr , yr specify the ranges of x and y corresponding to the rectangular region bounding c . if :|||then x goes from x0 to x1 as the second index of c goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . all cells are rectangles of the same size . this is the fastest version .|||x , y are 1d arrays of length nc + 1 and nr + 1 , respectively , giving the x and y boundaries of the cells . hence the cells are rectangular but the grid may be nonuniform . the speed is intermediate . ( the grid is checked , and if found to be uniform the fast version is used . )'
p5069
sg12
Vpcolorfast.x
p5070
sg14
(lp5071
sg2
S'x'
sbs(S'add'
p5072
S'clip_path'
p5073
tp5074
(icodemend.demo.code_suggest
Element
p5075
(dp5076
g10
I0
sg11
S"set the artist 's clip path , which may be"
p5077
sg12
Vadd.clip_path
p5078
sg14
(lp5079
sg2
g5073
sbs(g117
g118
S"'Data \\\\cite{<key>}'"
p5080
tp5081
(icodemend.demo.code_suggest
Element
p5082
(dp5083
g10
I1
sg11
S''
sg12
Vplot.label.'Data \u005c\u005ccite{<key>}'
p5084
sg14
(lp5085
sg2
g5080
sbs(g93
g161
S'((x + 0.008), (y - 0.003))'
p5086
tp5087
(icodemend.demo.code_suggest
Element
p5088
(dp5089
g10
I1
sg11
S''
sg12
Vannotate.xy.((x + 0/008), (y - 0/003))
p5090
sg14
(lp5091
sg2
g5086
sbs(g117
g118
S"'x1'"
p5092
tp5093
(icodemend.demo.code_suggest
Element
p5094
(dp5095
g10
I1
sg11
S''
sg12
Vplot.label.'x1'
p5096
sg14
(lp5097
sg2
g5092
sbs(g101
g102
S'0.05'
p5098
tp5099
(icodemend.demo.code_suggest
Element
p5100
(dp5101
g10
I3
sg11
S''
sg12
Vscatter.alpha.0/05
p5102
sg14
(lp5103
sg2
g5098
sbs(S'score_stretch'
p5104
S'stretch1'
p5105
tp5106
(icodemend.demo.code_suggest
Element
p5107
(dp5108
g10
I0
sg11
S'the result is the absolute value of the difference between the css numeric values of stretch1 and stretch2 , normalized between 0.0 and 1.0 .|||returns a match score between stretch1 and stretch2 .'
p5109
sg12
Vscore_stretch.stretch1
p5110
sg14
(lp5111
sg2
g5105
sbs(S'acorr'
p5112
S'usevlines'
p5113
g438
tp5114
(icodemend.demo.code_suggest
Element
p5115
(dp5116
g10
I1
sg11
S''
sg12
Vacorr.usevlines.True
p5117
sg14
(lp5118
sg2
g438
sbsS'normpdf'
p5119
(icodemend.demo.code_suggest
Element
p5120
(dp5121
g10
I6
sg11
S'return the normal pdf evaluated at x ; args provides mu , sigma'
p5122
sg12
Vnormpdf
p5123
sg14
(lp5124
(icodemend.demo.code_suggest
Element
p5125
(dp5126
g10
I0
sg11
S'return the normal pdf evaluated at x ; args provides mu , sigma'
p5127
sg12
Vnormpdf.mu
p5128
sg14
(lp5129
sg2
S'mu'
p5130
sbag4993
a(icodemend.demo.code_suggest
Element
p5131
(dp5132
g10
I0
sg11
S'return the normal pdf evaluated at x ; args provides mu , sigma'
p5133
sg12
Vnormpdf.x
p5134
sg14
(lp5135
sg2
S'x'
sbasg2
g5119
sbsS'iterable'
p5136
(icodemend.demo.code_suggest
Element
p5137
(dp5138
g10
I6
sg11
S'return true if obj is iterable'
p5139
sg12
Viterable
p5140
sg14
(lp5141
(icodemend.demo.code_suggest
Element
p5142
(dp5143
g10
I0
sg11
S'return true if obj is iterable'
p5144
sg12
Viterable.obj
p5145
sg14
(lp5146
sg2
S'obj'
p5147
sbasg2
g5136
sbs(S'grid'
p5148
S'clip_path'
p5149
tp5150
(icodemend.demo.code_suggest
Element
p5151
(dp5152
g10
I0
sg11
S"set the artist 's clip path , which may be"
p5153
sg12
Vgrid.clip_path
p5154
sg14
(lp5155
sg2
g5149
sbs(S'phase_spectrum'
p5156
S'agg_filter'
p5157
tp5158
(icodemend.demo.code_suggest
Element
p5159
(dp5160
g10
I0
sg11
S'set agg_filter fuction .'
p5161
sg12
Vphase_spectrum.agg_filter
p5162
sg14
(lp5163
sg2
g5157
sbs(S'cohere'
p5164
S'solid_joinstyle'
p5165
tp5166
(icodemend.demo.code_suggest
Element
p5167
(dp5168
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p5169
sg12
Vcohere.solid_joinstyle
p5170
sg14
(lp5171
sg2
g5165
sbs(S'bar'
p5172
S'error_kw'
p5173
tp5174
(icodemend.demo.code_suggest
Element
p5175
(dp5176
g10
I8
sg11
S'dictionary of kwargs to be passed to errorbar method . ecolor and capsize may be specified here rather than as independent kwargs .'
p5177
sg12
Vbar.error_kw
p5178
sg14
(lp5179
(icodemend.demo.code_suggest
Element
p5180
(dp5181
g10
I3
sg11
S''
sg12
Vbar.error_kw.error_config
p5182
sg14
(lp5183
sg2
S'error_config'
p5184
sba(icodemend.demo.code_suggest
Element
p5185
(dp5186
g10
I2
sg11
S''
sg12
Vbar.error_kw.{'barsabove': False, 'zorder': 0, 'capsize': 0}
p5187
sg14
(lp5188
sg2
S"{'barsabove': False, 'zorder': 0, 'capsize': 0}"
p5189
sbasg2
g5173
sbs(g16
g1149
S"'black'"
p5190
tp5191
(icodemend.demo.code_suggest
Element
p5192
(dp5193
g10
I1
sg11
S''
sg12
Vbar.ecolor.'black'
p5194
sg14
(lp5195
sg2
g5190
sbs(S'legend'
p5196
S'mode'
p5197
tp5198
(icodemend.demo.code_suggest
Element
p5199
(dp5200
g10
I3
sg11
S'if mode is set to " expand " the legend will be horizontally expanded to fill the axes area ( or bbox_to_anchor if defines the legend \'s size ) .'
p5201
sg12
Vlegend.mode
p5202
sg14
(lp5203
(icodemend.demo.code_suggest
Element
p5204
(dp5205
g10
I3
sg11
S''
sg12
Vlegend.mode.'expand'
p5206
sg14
(lp5207
sg2
S"'expand'"
p5208
sbasg2
g5197
sbs(S'add_subplot'
p5209
S'yscale'
p5210
tp5211
(icodemend.demo.code_suggest
Element
p5212
(dp5213
g10
I0
sg11
S'set the scaling of the y-axis'
p5214
sg12
Vadd_subplot.yscale
p5215
sg14
(lp5216
sg2
g5210
sbs(S'angle_spectrum'
p5217
S'visible'
p5218
tp5219
(icodemend.demo.code_suggest
Element
p5220
(dp5221
g10
I0
sg11
S"set the artist 's visiblity ."
p5222
sg12
Vangle_spectrum.visible
p5223
sg14
(lp5224
sg2
g5218
sbs(S'getp'
p5225
S'text'
p5226
tp5227
(icodemend.demo.code_suggest
Element
p5228
(dp5229
g10
I0
sg11
S'set the text string s'
p5230
sg12
Vgetp.text
p5231
sg14
(lp5232
sg2
g5226
sbsS'longest_ones'
p5233
(icodemend.demo.code_suggest
Element
p5234
(dp5235
g10
I0
sg11
S'alias for longest_contiguous_ones'
p5236
sg12
Vlongest_ones
p5237
sg14
(lp5238
sg2
g5233
sbs(g93
S'clip_box'
p5239
S'box'
p5240
tp5241
(icodemend.demo.code_suggest
Element
p5242
(dp5243
g10
I2
sg11
S''
sg12
Vannotate.clip_box.box
p5244
sg14
(lp5245
sg2
g5240
sbs(S'hexbin'
p5246
S'clip_on'
p5247
tp5248
(icodemend.demo.code_suggest
Element
p5249
(dp5250
g10
I0
sg11
S'set whether artist uses clipping .'
p5251
sg12
Vhexbin.clip_on
p5252
sg14
(lp5253
sg2
g5247
sbsS'hlines'
p5254
(icodemend.demo.code_suggest
Element
p5255
(dp5256
g10
I28
sg11
S'plot horizontal lines at each y from xmin to xmax .'
p5257
sg12
Vhlines
p5258
sg14
(lp5259
(icodemend.demo.code_suggest
Element
p5260
(dp5261
g10
I7
sg11
S'set the color(s ) of the line collection .'
p5262
sg12
Vhlines.color
p5263
sg14
(lp5264
(icodemend.demo.code_suggest
Element
p5265
(dp5266
g10
I3
sg11
S''
sg12
Vhlines.color.'red'
p5267
sg14
(lp5268
sg2
S"'red'"
p5269
sba(icodemend.demo.code_suggest
Element
p5270
(dp5271
g10
I1
sg11
S''
sg12
Vhlines.color.'0/5'
p5272
sg14
(lp5273
sg2
S"'0.5'"
p5274
sba(icodemend.demo.code_suggest
Element
p5275
(dp5276
g10
I1
sg11
S''
sg12
Vhlines.color.'blue'
p5277
sg14
(lp5278
sg2
S"'blue'"
p5279
sba(icodemend.demo.code_suggest
Element
p5280
(dp5281
g10
I1
sg11
S''
sg12
Vhlines.color.'k'
p5282
sg14
(lp5283
sg2
S"'k'"
p5284
sba(icodemend.demo.code_suggest
Element
p5285
(dp5286
g10
I1
sg11
S''
sg12
Vhlines.color.'r'
p5287
sg14
(lp5288
sg2
S"'r'"
p5289
sbasg2
S'color'
p5290
sba(icodemend.demo.code_suggest
Element
p5291
(dp5292
g10
I2
sg11
S'set the linewidth(s ) for the collection .'
p5293
sg12
Vhlines.linewidth
p5294
sg14
(lp5295
(icodemend.demo.code_suggest
Element
p5296
(dp5297
g10
I1
sg11
S''
sg12
Vhlines.linewidth.1/2
p5298
sg14
(lp5299
sg2
S'1.2'
p5300
sba(icodemend.demo.code_suggest
Element
p5301
(dp5302
g10
I1
sg11
S''
sg12
Vhlines.linewidth.10
p5303
sg14
(lp5304
sg2
S'10'
p5305
sbasg2
S'linewidth'
p5306
sba(icodemend.demo.code_suggest
Element
p5307
(dp5308
g10
I1
sg11
S'set the alpha tranparencies of the collection .'
p5309
sg12
Vhlines.alpha
p5310
sg14
(lp5311
(icodemend.demo.code_suggest
Element
p5312
(dp5313
g10
I1
sg11
S''
sg12
Vhlines.alpha.0/0
p5314
sg14
(lp5315
sg2
S'0.0'
p5316
sbasg2
S'alpha'
p5317
sba(icodemend.demo.code_suggest
Element
p5318
(dp5319
g10
I1
sg11
S'set the label to s for auto legend .'
p5320
sg12
Vhlines.label
p5321
sg14
(lp5322
(icodemend.demo.code_suggest
Element
p5323
(dp5324
g10
I1
sg11
S''
sg12
Vhlines.label.'Other Plot'
p5325
sg14
(lp5326
sg2
S"'Other Plot'"
p5327
sbasg2
S'label'
p5328
sba(icodemend.demo.code_suggest
Element
p5329
(dp5330
g10
I1
sg11
S'set the linestyle(s ) for the collection .'
p5331
sg12
Vhlines.linestyle
p5332
sg14
(lp5333
(icodemend.demo.code_suggest
Element
p5334
(dp5335
g10
I1
sg11
S''
sg12
Vhlines.linestyle.'--'
p5336
sg14
(lp5337
sg2
S"'--'"
p5338
sbasg2
S'linestyle'
p5339
sba(icodemend.demo.code_suggest
Element
p5340
(dp5341
g10
I1
sg11
S'y-indexes where to plot the lines .'
p5342
sg12
Vhlines.y
p5343
sg14
(lp5344
(icodemend.demo.code_suggest
Element
p5345
(dp5346
g10
I1
sg11
S''
sg12
Vhlines.y.horiz_line
p5347
sg14
(lp5348
sg2
S'horiz_line'
p5349
sbasg2
S'y'
sba(icodemend.demo.code_suggest
Element
p5350
(dp5351
g10
I0
sg11
S'set the image array from numpy array a'
p5352
sg12
Vhlines.array
p5353
sg14
(lp5354
sg2
S'array'
p5355
sba(icodemend.demo.code_suggest
Element
p5356
(dp5357
g10
I0
sg11
S'set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp'
p5358
sg12
Vhlines.clim
p5359
sg14
(lp5360
sg2
S'clim'
p5361
sba(icodemend.demo.code_suggest
Element
p5362
(dp5363
g10
I0
sg11
S'replace the contains test used by this artist .'
p5364
sg12
Vhlines.contains
p5365
sg14
(lp5366
sg2
S'contains'
p5367
sba(icodemend.demo.code_suggest
Element
p5368
(dp5369
g10
I0
sg11
S'set the edgecolor(s ) of the collection .'
p5370
sg12
Vhlines.edgecolor
p5371
sg14
(lp5372
sg2
S'edgecolor'
p5373
sba(icodemend.demo.code_suggest
Element
p5374
(dp5375
g10
I0
sg11
S'set the facecolor(s ) of the collection .'
p5376
sg12
Vhlines.facecolor
p5377
sg14
(lp5378
sg2
S'facecolor'
p5379
sba(icodemend.demo.code_suggest
Element
p5380
(dp5381
g10
I0
sg11
S'set the hatching pattern'
p5382
sg12
Vhlines.hatch
p5383
sg14
(lp5384
sg2
S'hatch'
p5385
sba(icodemend.demo.code_suggest
Element
p5386
(dp5387
g10
I0
sg11
S'set how offsets are applied .'
p5388
sg12
Vhlines.offset_position
p5389
sg14
(lp5390
sg2
S'offset_position'
p5391
sba(icodemend.demo.code_suggest
Element
p5392
(dp5393
g10
I0
sg11
S'set the offsets for the collection .'
p5394
sg12
Vhlines.offsets
p5395
sg14
(lp5396
sg2
S'offsets'
p5397
sba(icodemend.demo.code_suggest
Element
p5398
(dp5399
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p5400
sg12
Vhlines.picker
p5401
sg14
(lp5402
sg2
S'picker'
p5403
sbag4941
a(icodemend.demo.code_suggest
Element
p5404
(dp5405
g10
I0
sg11
S'respective beginning and end of each line . if scalars are provided , all lines will have same length .'
p5406
sg12
Vhlines.xmin, xmax
p5407
sg14
(lp5408
sg2
S'xmin, xmax'
p5409
sbasg2
g5254
sbsS'get_width_height'
p5410
(icodemend.demo.code_suggest
Element
p5411
(dp5412
g10
I9
sg11
S'return the figure width and height in points or pixels ( depending on the backend ) , truncated to integers'
p5413
sg12
Vget_width_height
p5414
sg14
(lp5415
sg2
g5410
sbs(S'quiver'
p5416
S'ymargin'
p5417
tp5418
(icodemend.demo.code_suggest
Element
p5419
(dp5420
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p5421
sg12
Vquiver.ymargin
p5422
sg14
(lp5423
sg2
g5417
sbs(S'grid'
p5424
g4274
S"'o'"
p5425
tp5426
(icodemend.demo.code_suggest
Element
p5427
(dp5428
g10
I1
sg11
S''
sg12
Vgrid.marker.'o'
p5429
sg14
(lp5430
sg2
g5425
sbs(S'text'
p5431
S'ylim'
p5432
tp5433
(icodemend.demo.code_suggest
Element
p5434
(dp5435
g10
I0
sg11
S'set the data limits for the yaxis'
p5436
sg12
Vtext.ylim
p5437
sg14
(lp5438
sg2
g5432
sbs(S'hex2color'
p5439
S's'
tp5440
(icodemend.demo.code_suggest
Element
p5441
(dp5442
g10
I0
sg11
S'take a hex string s and return the corresponding rgb 3-tuple example : # efefef - > ( 0.93725 , 0.93725 , 0.93725 )'
p5443
sg12
Vhex2color.s
p5444
sg14
(lp5445
sg2
S's'
sbs(S'csd'
p5446
S'size_inches'
p5447
tp5448
(icodemend.demo.code_suggest
Element
p5449
(dp5450
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p5451
sg12
Vcsd.size_inches
p5452
sg14
(lp5453
sg2
g5447
sbs(g93
g627
S'26'
p5454
tp5455
(icodemend.demo.code_suggest
Element
p5456
(dp5457
g10
I1
sg11
S''
sg12
Vannotate.size.26
p5458
sg14
(lp5459
sg2
g5454
sbs(g101
g4274
S'(verts_function(i, i, 0.3), 0)'
p5460
tp5461
(icodemend.demo.code_suggest
Element
p5462
(dp5463
g10
I1
sg11
S''
sg12
Vscatter.marker.(verts_function(i, i, 0/3), 0)
p5464
sg14
(lp5465
sg2
g5460
sbs(S'broken_barh'
p5466
S'color'
p5467
tp5468
(icodemend.demo.code_suggest
Element
p5469
(dp5470
g10
I0
sg11
S'set both the edgecolor and the facecolor .'
p5471
sg12
Vbroken_barh.color
p5472
sg14
(lp5473
sg2
g5467
sbs(g139
g140
g1583
tp5474
g1579
s(g1205
g1206
g4541
tp5475
g4537
s(g332
g3084
S'f0'
p5476
tp5477
(icodemend.demo.code_suggest
Element
p5478
(dp5479
g10
I2
sg11
S''
sg12
Vtext.fontproperties.f0
p5480
sg14
(lp5481
sg2
g5476
sbs(S'text'
p5482
S'_interpolation_steps'
p5483
tp5484
(icodemend.demo.code_suggest
Element
p5485
(dp5486
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p5487
sg12
Vtext._interpolation_steps
p5488
sg14
(lp5489
sg2
g5483
sbs(S'pcolor'
p5490
S'snap'
p5491
tp5492
(icodemend.demo.code_suggest
Element
p5493
(dp5494
g10
I0
sg11
S'whether to snap the mesh to pixel boundaries .|||sets the snap setting which may be'
p5495
sg12
Vpcolor.snap
p5496
sg14
(lp5497
sg2
g5491
sbs(g117
g118
S"'second'"
p5498
tp5499
(icodemend.demo.code_suggest
Element
p5500
(dp5501
g10
I2
sg11
S''
sg12
Vplot.label.'second'
p5502
sg14
(lp5503
sg2
g5498
sbs(S'annotate'
p5504
S'xycoords'
p5505
tp5506
(icodemend.demo.code_suggest
Element
p5507
(dp5508
g10
I73
sg11
S'the annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area . if true , the annotation will only be drawn when the xy is inside the axes . if false , the annotation will always be drawn regardless of its position . the default is none , which behave as true only if xycoords is " data " .|||xycoords and textcoords are strings that indicate the coordinates of xy and xytext , and may be one of the following values :|||string that indicates what type of coordinates xy is . examples : " figure points " , " figure pixels " , " figure fraction " , " axes points " , ... see matplotlib.text.annotation for more details .'
p5509
sg12
Vannotate.xycoords
p5510
sg14
(lp5511
(icodemend.demo.code_suggest
Element
p5512
(dp5513
g10
I28
sg11
S''
sg12
Vannotate.xycoords.'data'
p5514
sg14
(lp5515
sg2
S"'data'"
p5516
sba(icodemend.demo.code_suggest
Element
p5517
(dp5518
g10
I22
sg11
S''
sg12
Vannotate.xycoords.'axes fraction'
p5519
sg14
(lp5520
sg2
S"'axes fraction'"
p5521
sba(icodemend.demo.code_suggest
Element
p5522
(dp5523
g10
I7
sg11
S''
sg12
Vannotate.xycoords.('data', 'axes fraction')
p5524
sg14
(lp5525
sg2
S"('data', 'axes fraction')"
p5526
sba(icodemend.demo.code_suggest
Element
p5527
(dp5528
g10
I4
sg11
S''
sg12
Vannotate.xycoords.'figure fraction'
p5529
sg14
(lp5530
sg2
S"'figure fraction'"
p5531
sba(icodemend.demo.code_suggest
Element
p5532
(dp5533
g10
I4
sg11
S''
sg12
Vannotate.xycoords.('axes fraction', 'data')
p5534
sg14
(lp5535
sg2
S"('axes fraction', 'data')"
p5536
sba(icodemend.demo.code_suggest
Element
p5537
(dp5538
g10
I2
sg11
S''
sg12
Vannotate.xycoords.'figure pixels'
p5539
sg14
(lp5540
sg2
S"'figure pixels'"
p5541
sba(icodemend.demo.code_suggest
Element
p5542
(dp5543
g10
I2
sg11
S''
sg12
Vannotate.xycoords.transform
p5544
sg14
(lp5545
sg2
S'transform'
p5546
sba(icodemend.demo.code_suggest
Element
p5547
(dp5548
g10
I1
sg11
S''
sg12
Vannotate.xycoords.'axes points'
p5549
sg14
(lp5550
sg2
S"'axes points'"
p5551
sbag97
a(icodemend.demo.code_suggest
Element
p5552
(dp5553
g10
I1
sg11
S''
sg12
Vannotate.xycoords.trans
p5554
sg14
(lp5555
sg2
S'trans'
p5556
sbasg2
g5505
sbs(g252
g4984
S'4'
tp5557
(icodemend.demo.code_suggest
Element
p5558
(dp5559
g10
I4
sg11
S''
sg12
Vlegend.ncol.4
p5560
sg14
(lp5561
sg2
S'4'
sbs(S'ScalarMappable'
p5562
g325
g325
tp5563
(icodemend.demo.code_suggest
Element
p5564
(dp5565
g10
I8
sg11
S''
sg12
VScalarMappable.cmap.cmap
p5566
sg14
(lp5567
sg2
g325
sbs(S'grid'
p5568
S'markerfacecolor'
p5569
tp5570
(icodemend.demo.code_suggest
Element
p5571
(dp5572
g10
I0
sg11
S'set the marker face color .'
p5573
sg12
Vgrid.markerfacecolor
p5574
sg14
(lp5575
sg2
g5569
sbs(S'plotfile'
p5576
S'cols'
p5577
S'(3, 5)'
p5578
tp5579
(icodemend.demo.code_suggest
Element
p5580
(dp5581
g10
I1
sg11
S''
sg12
Vplotfile.cols.(3, 5)
p5582
sg14
(lp5583
sg2
g5578
sbsS'violin'
p5584
(icodemend.demo.code_suggest
Element
p5585
(dp5586
g10
I0
sg11
S'drawing function for violin plots .'
p5587
sg12
Vviolin
p5588
sg14
(lp5589
(icodemend.demo.code_suggest
Element
p5590
(dp5591
g10
I0
sg11
S'sets the positions of the violins . the ticks and limits are automatically set to match the positions .'
p5592
sg12
Vviolin.positions
p5593
sg14
(lp5594
sg2
S'positions'
p5595
sbag4674
a(icodemend.demo.code_suggest
Element
p5596
(dp5597
g10
I0
sg11
S'if true , will toggle rendering of the means .'
p5598
sg12
Vviolin.showmeans
p5599
sg14
(lp5600
sg2
S'showmeans'
p5601
sba(icodemend.demo.code_suggest
Element
p5602
(dp5603
g10
I0
sg11
S'if true , will toggle rendering of the medians .'
p5604
sg12
Vviolin.showmedians
p5605
sg14
(lp5606
sg2
S'showmedians'
p5607
sba(icodemend.demo.code_suggest
Element
p5608
(dp5609
g10
I0
sg11
S'if true , plots the violins veritcally . otherwise , plots the violins horizontally .'
p5610
sg12
Vviolin.vert
p5611
sg14
(lp5612
sg2
S'vert'
p5613
sba(icodemend.demo.code_suggest
Element
p5614
(dp5615
g10
I0
sg11
S'a list of dictionaries containing stats for each violin plot . required keys are :'
p5616
sg12
Vviolin.vpstats
p5617
sg14
(lp5618
sg2
S'vpstats'
p5619
sba(icodemend.demo.code_suggest
Element
p5620
(dp5621
g10
I0
sg11
S'either a scalar or a vector that sets the maximal width of each violin . the default is 0.5 , which uses about half of the available horizontal space .'
p5622
sg12
Vviolin.widths
p5623
sg14
(lp5624
sg2
S'widths'
p5625
sbasg2
g5584
sbs(S'get_path_collection_extents'
p5626
S'paths'
p5627
tp5628
(icodemend.demo.code_suggest
Element
p5629
(dp5630
g10
I0
sg11
S'paths is a sequence of path instances .|||the way that paths , transforms and offsets are combined follows the same method as for collections . each is iterated over independently , so if you have 3 paths , 2 transforms and 1 offset , their combinations are as follows :'
p5631
sg12
Vget_path_collection_extents.paths
p5632
sg14
(lp5633
sg2
g5627
sbs(g1170
g132
S"['r', 'g']"
p5634
tp5635
(icodemend.demo.code_suggest
Element
p5636
(dp5637
g10
I1
sg11
S''
sg12
Vhist.color.['r', 'g']
p5638
sg14
(lp5639
sg2
g5634
sbs(S'colorbar'
p5640
S'cax'
p5641
S'colorAx'
p5642
tp5643
(icodemend.demo.code_suggest
Element
p5644
(dp5645
g10
I1
sg11
S''
sg12
Vcolorbar.cax.colorAx
p5646
sg14
(lp5647
sg2
g5642
sbs(g139
g370
g1882
tp5648
g1878
s(S'barbs'
p5649
S'sizes'
p5650
tp5651
(icodemend.demo.code_suggest
Element
p5652
(dp5653
g10
I0
sg11
S"a dictionary of coefficients specifying the ratio of a given feature to the length of the barb . only those values one wishes to override need to be included . these features include : ' spacing ' - space between features ( flags , full/half barbs ) ' height ' - height ( distance from shaft to top ) of a flag or full barb ' width ' - width of a flag , twice the width of a full barb ' emptybarb ' - radius of the circle used for low magnitudes|||set the sizes of each member of the collection ."
p5654
sg12
Vbarbs.sizes
p5655
sg14
(lp5656
sg2
g5650
sbs(S'gca'
p5657
S'gid'
p5658
tp5659
(icodemend.demo.code_suggest
Element
p5660
(dp5661
g10
I0
sg11
S'sets the ( group ) id for the artist'
p5662
sg12
Vgca.gid
p5663
sg14
(lp5664
sg2
g5658
sbs(g117
g4274
S'(3, 0, (i * 90))'
p5665
tp5666
(icodemend.demo.code_suggest
Element
p5667
(dp5668
g10
I1
sg11
S''
sg12
Vplot.marker.(3, 0, (i * 90))
p5669
sg14
(lp5670
sg2
g5665
sbs(S'get_aliases'
p5671
g4154
tp5672
g4149
s(S'streamplot'
p5673
g132
S"'c'"
p5674
tp5675
(icodemend.demo.code_suggest
Element
p5676
(dp5677
g10
I4
sg11
S''
sg12
Vstreamplot.color.'c'
p5678
sg14
(lp5679
sg2
g5674
sbsS'to_png'
p5680
(icodemend.demo.code_suggest
Element
p5681
(dp5682
g10
I0
sg11
S'writes a tex expression to a png file .'
p5683
sg12
Vto_png
p5684
sg14
(lp5685
sg2
g5680
sbs(g117
g118
S"'Random Data'"
p5686
tp5687
(icodemend.demo.code_suggest
Element
p5688
(dp5689
g10
I1
sg11
S''
sg12
Vplot.label.'Random Data'
p5690
sg14
(lp5691
sg2
g5686
sbs(S'update'
p5692
S'picker'
p5693
tp5694
(icodemend.demo.code_suggest
Element
p5695
(dp5696
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p5697
sg12
Vupdate.picker
p5698
sg14
(lp5699
sg2
g5693
sbs(S'hexbin'
p5700
S'yticklabels'
p5701
tp5702
(icodemend.demo.code_suggest
Element
p5703
(dp5704
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p5705
sg12
Vhexbin.yticklabels
p5706
sg14
(lp5707
sg2
g5701
sbsS'binary_repr'
p5708
(icodemend.demo.code_suggest
Element
p5709
(dp5710
g10
I0
sg11
S'return the binary representation of the input number as a string .'
p5711
sg12
Vbinary_repr
p5712
sg14
(lp5713
(icodemend.demo.code_suggest
Element
p5714
(dp5715
g10
I0
sg11
S'return the binary representation of the input number as a string .'
p5716
sg12
Vbinary_repr.number
p5717
sg14
(lp5718
sg2
S'number'
p5719
sbasg2
g5708
sbs(g93
g161
S'(xmean, ymean)'
p5720
tp5721
(icodemend.demo.code_suggest
Element
p5722
(dp5723
g10
I1
sg11
S''
sg12
Vannotate.xy.(xmean, ymean)
p5724
sg14
(lp5725
sg2
g5720
sbs(S'errorbar'
p5726
S'visible'
p5727
tp5728
(icodemend.demo.code_suggest
Element
p5729
(dp5730
g10
I0
sg11
S"set the artist 's visiblity ."
p5731
sg12
Verrorbar.visible
p5732
sg14
(lp5733
sg2
g5727
sbs(S'imshow'
p5734
S'shape'
p5735
tp5736
(icodemend.demo.code_suggest
Element
p5737
(dp5738
g10
I0
sg11
S'for raw buffer images'
p5739
sg12
Vimshow.shape
p5740
sg14
(lp5741
sg2
g5735
sbs(S'set_xticklabels'
p5742
S'transform'
p5743
tp5744
(icodemend.demo.code_suggest
Element
p5745
(dp5746
g10
I0
sg11
S'set the transform instance used by this artist .'
p5747
sg12
Vset_xticklabels.transform
p5748
sg14
(lp5749
sg2
g5743
sbs(S'axvspan'
p5750
S'axes'
p5751
tp5752
(icodemend.demo.code_suggest
Element
p5753
(dp5754
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p5755
sg12
Vaxvspan.axes
p5756
sg14
(lp5757
sg2
g5751
sbs(g5424
g909
S'0'
tp5758
(icodemend.demo.code_suggest
Element
p5759
(dp5760
g10
I4
sg11
S''
sg12
Vgrid.zorder.0
p5761
sg14
(lp5762
sg2
S'0'
sbs(S'imshow'
p5763
S'picker'
p5764
tp5765
(icodemend.demo.code_suggest
Element
p5766
(dp5767
g10
I1
sg11
S'set the epsilon for picking used by this artist'
p5768
sg12
Vimshow.picker
p5769
sg14
(lp5770
(icodemend.demo.code_suggest
Element
p5771
(dp5772
g10
I1
sg11
S''
sg12
Vimshow.picker.5
p5773
sg14
(lp5774
sg2
S'5'
sbasg2
g5764
sbs(g117
S'markerfacecolor'
p5775
S"'r'"
p5776
tp5777
(icodemend.demo.code_suggest
Element
p5778
(dp5779
g10
I2
sg11
S''
sg12
Vplot.markerfacecolor.'r'
p5780
sg14
(lp5781
sg2
g5776
sbs(g252
S'labelspacing'
p5782
S'1.2'
p5783
tp5784
(icodemend.demo.code_suggest
Element
p5785
(dp5786
g10
I1
sg11
S''
sg12
Vlegend.labelspacing.1/2
p5787
sg14
(lp5788
sg2
g5783
sbsS'get_fill'
p5789
(icodemend.demo.code_suggest
Element
p5790
(dp5791
g10
I0
sg11
S'return whether fill is set'
p5792
sg12
Vget_fill
p5793
sg14
(lp5794
sg2
g5789
sbs(S'rgrids'
p5795
S'markevery'
p5796
tp5797
(icodemend.demo.code_suggest
Element
p5798
(dp5799
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p5800
sg12
Vrgrids.markevery
p5801
sg14
(lp5802
sg2
g5796
sbs(S'hlines'
p5803
g5397
tp5804
g5392
s(S'plot_date'
p5805
S'markerfacecolor'
p5806
tp5807
(icodemend.demo.code_suggest
Element
p5808
(dp5809
g10
I1
sg11
S'set the marker face color .'
p5810
sg12
Vplot_date.markerfacecolor
p5811
sg14
(lp5812
(icodemend.demo.code_suggest
Element
p5813
(dp5814
g10
I1
sg11
S''
sg12
Vplot_date.markerfacecolor.'CornflowerBlue'
p5815
sg14
(lp5816
sg2
S"'CornflowerBlue'"
p5817
sbasg2
g5806
sbs(S'pcolor'
p5818
S'antialiased'
p5819
tp5820
(icodemend.demo.code_suggest
Element
p5821
(dp5822
g10
I0
sg11
S'set the antialiasing state for rendering .'
p5823
sg12
Vpcolor.antialiased
p5824
sg14
(lp5825
sg2
g5819
sbs(S'semilogx'
p5826
S'animated'
p5827
tp5828
(icodemend.demo.code_suggest
Element
p5829
(dp5830
g10
I0
sg11
S"set the artist 's animation state ."
p5831
sg12
Vsemilogx.animated
p5832
sg14
(lp5833
sg2
g5827
sbs(g245
g140
S'(6, 4)'
p5834
tp5835
(icodemend.demo.code_suggest
Element
p5836
(dp5837
g10
I5
sg11
S''
sg12
Vfigure.figsize.(6, 4)
p5838
sg14
(lp5839
sg2
g5834
sbs(S'semilogx'
p5840
S'title'
p5841
tp5842
(icodemend.demo.code_suggest
Element
p5843
(dp5844
g10
I0
sg11
S'set a title for the axes .'
p5845
sg12
Vsemilogx.title
p5846
sg14
(lp5847
sg2
g5841
sbs(S'Slider'
p5848
S'valinit'
p5849
S'0'
tp5850
(icodemend.demo.code_suggest
Element
p5851
(dp5852
g10
I4
sg11
S''
sg12
VSlider.valinit.0
p5853
sg14
(lp5854
sg2
S'0'
sbs(S'movavg'
p5855
S'x'
tp5856
(icodemend.demo.code_suggest
Element
p5857
(dp5858
g10
I0
sg11
S'compute the len(n ) moving average of x .'
p5859
sg12
Vmovavg.x
p5860
sg14
(lp5861
sg2
S'x'
sbs(g117
g4340
S'i'
tp5862
(icodemend.demo.code_suggest
Element
p5863
(dp5864
g10
I1
sg11
S''
sg12
Vplot.title.i
p5865
sg14
(lp5866
sg2
S'i'
sbs(S'set_xticklabels'
p5867
S'xticks'
p5868
tp5869
(icodemend.demo.code_suggest
Element
p5870
(dp5871
g10
I0
sg11
S'set the x ticks with list of ticks'
p5872
sg12
Vset_xticklabels.xticks
p5873
sg14
(lp5874
sg2
g5868
sbs(S'candlestick2_ohlc'
p5875
S'ticksize'
p5876
tp5877
(icodemend.demo.code_suggest
Element
p5878
(dp5879
g10
I0
sg11
S'size of open and close ticks in points'
p5880
sg12
Vcandlestick2_ohlc.ticksize
p5881
sg14
(lp5882
sg2
g5876
sbs(S'fill'
p5883
S'axes'
p5884
tp5885
(icodemend.demo.code_suggest
Element
p5886
(dp5887
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p5888
sg12
Vfill.axes
p5889
sg14
(lp5890
sg2
g5884
sbs(g245
g140
S'(6.5, 6.5)'
p5891
tp5892
(icodemend.demo.code_suggest
Element
p5893
(dp5894
g10
I1
sg11
S''
sg12
Vfigure.figsize.(6/5, 6/5)
p5895
sg14
(lp5896
sg2
g5891
sbsS'contains_path'
p5897
(icodemend.demo.code_suggest
Element
p5898
(dp5899
g10
I0
sg11
S'returns true if this path completely contains the given path .'
p5900
sg12
Vcontains_path
p5901
sg14
(lp5902
(icodemend.demo.code_suggest
Element
p5903
(dp5904
g10
I0
sg11
S'if transform is not none , the path will be transformed before performing the test .'
p5905
sg12
Vcontains_path.transform
p5906
sg14
(lp5907
sg2
S'transform'
p5908
sbasg2
g5897
sbs(g93
g4800
S'(3, 1.5)'
p5909
tp5910
(icodemend.demo.code_suggest
Element
p5911
(dp5912
g10
I2
sg11
S''
sg12
Vannotate.xytext.(3, 1/5)
p5913
sg14
(lp5914
sg2
g5909
sbsS'set_major_formatter'
p5915
(icodemend.demo.code_suggest
Element
p5916
(dp5917
g10
I249
sg11
S'set the formatter of the major ticker'
p5918
sg12
Vset_major_formatter
p5919
sg14
(lp5920
sg2
g5915
sbs(S'errorbar'
p5921
S'hatch'
p5922
tp5923
(icodemend.demo.code_suggest
Element
p5924
(dp5925
g10
I0
sg11
S'set the hatching pattern'
p5926
sg12
Verrorbar.hatch
p5927
sg14
(lp5928
sg2
g5922
sbs(S'magnitude_spectrum'
p5929
S'xscale'
p5930
tp5931
(icodemend.demo.code_suggest
Element
p5932
(dp5933
g10
I0
sg11
S'set the scaling of the x-axis'
p5934
sg12
Vmagnitude_spectrum.xscale
p5935
sg14
(lp5936
sg2
g5930
sbs(S'figtext'
p5937
S'ymargin'
p5938
tp5939
(icodemend.demo.code_suggest
Element
p5940
(dp5941
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p5942
sg12
Vfigtext.ymargin
p5943
sg14
(lp5944
sg2
g5938
sbs(S'set_yticklabels'
p5945
S'family'
p5946
tp5947
(icodemend.demo.code_suggest
Element
p5948
(dp5949
g10
I0
sg11
S'set the font family .'
p5950
sg12
Vset_yticklabels.family
p5951
sg14
(lp5952
sg2
g5946
sbs(S'pcolor'
p5953
S'label'
p5954
tp5955
(icodemend.demo.code_suggest
Element
p5956
(dp5957
g10
I0
sg11
S'set the label to s for auto legend .'
p5958
sg12
Vpcolor.label
p5959
sg14
(lp5960
sg2
g5954
sbs(g93
g161
S'(0.75, (-2.7))'
p5961
tp5962
(icodemend.demo.code_suggest
Element
p5963
(dp5964
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/75, (-2/7))
p5965
sg14
(lp5966
sg2
g5961
sbs(S'parse'
p5967
S'fontsize'
p5968
tp5969
(icodemend.demo.code_suggest
Element
p5970
(dp5971
g10
I0
sg11
S'parse expression s using the given fonts_object for output , at the given fontsize and dpi .'
p5972
sg12
Vparse.fontsize
p5973
sg14
(lp5974
sg2
g5968
sbs(S'plot_date'
p5975
g2251
S"'--'"
p5976
tp5977
(icodemend.demo.code_suggest
Element
p5978
(dp5979
g10
I1
sg11
S''
sg12
Vplot_date.linestyle.'--'
p5980
sg14
(lp5981
sg2
g5976
sbs(S'tripcolor'
p5982
S'alpha'
p5983
tp5984
(icodemend.demo.code_suggest
Element
p5985
(dp5986
g10
I1
sg11
S'the alpha blending value|||set the alpha tranparencies of the collection .'
p5987
sg12
Vtripcolor.alpha
p5988
sg14
(lp5989
(icodemend.demo.code_suggest
Element
p5990
(dp5991
g10
I1
sg11
S''
sg12
Vtripcolor.alpha.0/2
p5992
sg14
(lp5993
sg2
S'0.2'
p5994
sbasg2
g5983
sbs(g332
g627
S"'small'"
p5995
tp5996
(icodemend.demo.code_suggest
Element
p5997
(dp5998
g10
I1
sg11
S''
sg12
Vtext.size.'small'
p5999
sg14
(lp6000
sg2
g5995
sbsS'set_axis_bgcolor'
p6001
(icodemend.demo.code_suggest
Element
p6002
(dp6003
g10
I13
sg11
S'set the axes background color'
p6004
sg12
Vset_axis_bgcolor
p6005
sg14
(lp6006
sg2
g6001
sbs(S'magnitude_spectrum'
p6007
S'linestyle'
p6008
tp6009
(icodemend.demo.code_suggest
Element
p6010
(dp6011
g10
I0
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p6012
sg12
Vmagnitude_spectrum.linestyle
p6013
sg14
(lp6014
sg2
g6008
sbsS'unique'
p6015
(icodemend.demo.code_suggest
Element
p6016
(dp6017
g10
I37
sg11
S'return a list of unique elements of x'
p6018
sg12
Vunique
p6019
sg14
(lp6020
(icodemend.demo.code_suggest
Element
p6021
(dp6022
g10
I0
sg11
S'return a list of unique elements of x'
p6023
sg12
Vunique.x
p6024
sg14
(lp6025
sg2
S'x'
sbasg2
g6015
sbs(S'barh'
p6026
S'markerfacecolor'
p6027
tp6028
(icodemend.demo.code_suggest
Element
p6029
(dp6030
g10
I0
sg11
S'where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p6031
sg12
Vbarh.markerfacecolor
p6032
sg14
(lp6033
sg2
g6027
sbs(g5640
g5641
S'ax_cb2'
p6034
tp6035
(icodemend.demo.code_suggest
Element
p6036
(dp6037
g10
I1
sg11
S''
sg12
Vcolorbar.cax.ax_cb2
p6038
sg14
(lp6039
sg2
g6034
sbs(g93
g4800
S'(20, 10)'
p6040
tp6041
(icodemend.demo.code_suggest
Element
p6042
(dp6043
g10
I1
sg11
S''
sg12
Vannotate.xytext.(20, 10)
p6044
sg14
(lp6045
sg2
g6040
sbsS'auto_adjust_subplotpars'
p6046
(icodemend.demo.code_suggest
Element
p6047
(dp6048
g10
I0
sg11
S'return a dictionary of subplot parameters so that spacing between subplots are adjusted .'
p6049
sg12
Vauto_adjust_subplotpars
p6050
sg14
(lp6051
(icodemend.demo.code_suggest
Element
p6052
(dp6053
g10
I0
sg11
S'return a dictionary of subplot parameters so that spacing between subplots are adjusted . note that this function ignore geometry information of subplot itself , but uses what is given by nrows_ncols and num1num2_list parameteres . also , the results could be incorrect if some subplots have adjustable=datalim .'
p6054
sg12
Vauto_adjust_subplotpars.nrows_ncols
p6055
sg14
(lp6056
sg2
S'nrows_ncols'
p6057
sba(icodemend.demo.code_suggest
Element
p6058
(dp6059
g10
I0
sg11
S'return a dictionary of subplot parameters so that spacing between subplots are adjusted . note that this function ignore geometry information of subplot itself , but uses what is given by nrows_ncols and num1num2_list parameteres . also , the results could be incorrect if some subplots have adjustable=datalim .'
p6060
sg12
Vauto_adjust_subplotpars.num1num2_list
p6061
sg14
(lp6062
sg2
S'num1num2_list'
p6063
sbasg2
g6046
sbs(g2250
S'headlength'
p6064
S'500'
p6065
tp6066
(icodemend.demo.code_suggest
Element
p6067
(dp6068
g10
I1
sg11
S''
sg12
Vquiver.headlength.500
p6069
sg14
(lp6070
sg2
g6065
sbs(S'axvspan'
p6071
S'aspect'
p6072
tp6073
(icodemend.demo.code_suggest
Element
p6074
(dp6075
g10
I0
sg11
S'aspect'
p6076
sg12
Vaxvspan.aspect
p6077
sg14
(lp6078
sg2
g6072
sbs(S'contourf'
p6079
S'vmin'
p6080
tp6081
(icodemend.demo.code_suggest
Element
p6082
(dp6083
g10
I8
sg11
S'if not none , either or both of these values will be supplied to the matplotlib.colors.normalize instance , overriding the default color scaling based on levels .'
p6084
sg12
Vcontourf.vmin
p6085
sg14
(lp6086
(icodemend.demo.code_suggest
Element
p6087
(dp6088
g10
I1
sg11
S''
sg12
Vcontourf.vmin.0
p6089
sg14
(lp6090
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p6091
(dp6092
g10
I1
sg11
S''
sg12
Vcontourf.vmin.2
p6093
sg14
(lp6094
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p6095
(dp6096
g10
I1
sg11
S''
sg12
Vcontourf.vmin.m
p6097
sg14
(lp6098
sg2
S'm'
sbag4462
asg2
g6080
sbs(g125
S'x'
S'x'
tp6099
(icodemend.demo.code_suggest
Element
p6100
(dp6101
g10
I3
sg11
S''
sg12
Vaxvline.x.x
p6102
sg14
(lp6103
sg2
S'x'
sbs(S'eventplot'
p6104
S'agg_filter'
p6105
tp6106
(icodemend.demo.code_suggest
Element
p6107
(dp6108
g10
I0
sg11
S'set agg_filter fuction .'
p6109
sg12
Veventplot.agg_filter
p6110
sg14
(lp6111
sg2
g6105
sbs(S'axhspan'
p6112
S'ymax'
p6113
tp6114
(icodemend.demo.code_suggest
Element
p6115
(dp6116
g10
I0
sg11
S'draw a horizontal span ( rectangle ) from ymin to ymax . with the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . that is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .'
p6117
sg12
Vaxhspan.ymax
p6118
sg14
(lp6119
sg2
g6113
sbs(g117
g118
S"'2'"
p6120
tp6121
(icodemend.demo.code_suggest
Element
p6122
(dp6123
g10
I2
sg11
S''
sg12
Vplot.label.'2'
p6124
sg14
(lp6125
sg2
g6120
sbs(g16
g17
S'0.4'
p6126
tp6127
(icodemend.demo.code_suggest
Element
p6128
(dp6129
g10
I6
sg11
S''
sg12
Vbar.width.0/4
p6130
sg14
(lp6131
sg2
g6126
sbs(g117
g118
S"'dummy-empty'"
p6132
tp6133
(icodemend.demo.code_suggest
Element
p6134
(dp6135
g10
I1
sg11
S''
sg12
Vplot.label.'dummy-empty'
p6136
sg14
(lp6137
sg2
g6132
sbs(S'quiver'
p6138
S'path_effects'
p6139
tp6140
(icodemend.demo.code_suggest
Element
p6141
(dp6142
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p6143
sg12
Vquiver.path_effects
p6144
sg14
(lp6145
sg2
g6139
sbs(S'clabel'
p6146
S'inline'
p6147
g438
tp6148
(icodemend.demo.code_suggest
Element
p6149
(dp6150
g10
I5
sg11
S''
sg12
Vclabel.inline.True
p6151
sg14
(lp6152
sg2
g438
sbsS'get_clim'
p6153
(icodemend.demo.code_suggest
Element
p6154
(dp6155
g10
I5
sg11
S'return the min , max of the color limits for image scaling'
p6156
sg12
Vget_clim
p6157
sg14
(lp6158
sg2
g6153
sbs(S'barh'
p6159
S'path_effects'
p6160
tp6161
(icodemend.demo.code_suggest
Element
p6162
(dp6163
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p6164
sg12
Vbarh.path_effects
p6165
sg14
(lp6166
sg2
g6160
sbs(S'semilogx'
p6167
S'readonly'
p6168
tp6169
(icodemend.demo.code_suggest
Element
p6170
(dp6171
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p6172
sg12
Vsemilogx.readonly
p6173
sg14
(lp6174
sg2
g6168
sbs(g324
g325
S"'binary'"
p6175
tp6176
(icodemend.demo.code_suggest
Element
p6177
(dp6178
g10
I4
sg11
S''
sg12
Vimshow.cmap.'binary'
p6179
sg14
(lp6180
sg2
g6175
sbs(S'identity'
p6181
S'n'
tp6182
(icodemend.demo.code_suggest
Element
p6183
(dp6184
g10
I0
sg11
S'since rank defaults to 2 , this function behaves in the default case ( when only n is given ) like numpy.identity(n ) - - but surprisingly , it is much faster .|||returns the identity matrix of shape ( n , n , ... , n ) ( rank r ) .'
p6185
sg12
Videntity.n
p6186
sg14
(lp6187
sg2
S'n'
sbs(S'annotate'
p6188
S'readonly'
p6189
tp6190
(icodemend.demo.code_suggest
Element
p6191
(dp6192
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p6193
sg12
Vannotate.readonly
p6194
sg14
(lp6195
sg2
g6189
sbs(S'streamplot'
p6196
S'linewidth'
p6197
tp6198
(icodemend.demo.code_suggest
Element
p6199
(dp6200
g10
I6
sg11
S'vary linewidth when given a 2d array with the same shape as velocities .'
p6201
sg12
Vstreamplot.linewidth
p6202
sg14
(lp6203
(icodemend.demo.code_suggest
Element
p6204
(dp6205
g10
I2
sg11
S''
sg12
Vstreamplot.linewidth.1
p6206
sg14
(lp6207
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p6208
(dp6209
g10
I1
sg11
S''
sg12
Vstreamplot.linewidth.2
p6210
sg14
(lp6211
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p6212
(dp6213
g10
I1
sg11
S''
sg12
Vstreamplot.linewidth.lw
p6214
sg14
(lp6215
sg2
S'lw'
p6216
sbasg2
g6197
sbs(S'arrow'
p6217
g132
g2419
tp6218
g2415
s(S'grid'
p6219
S'marker'
p6220
tp6221
(icodemend.demo.code_suggest
Element
p6222
(dp6223
g10
I1
sg11
S'set the line marker'
p6224
sg12
Vgrid.marker
p6225
sg14
(lp6226
g5427
asg2
g6220
sbs(S'add'
p6227
S'xmargin'
p6228
tp6229
(icodemend.demo.code_suggest
Element
p6230
(dp6231
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p6232
sg12
Vadd.xmargin
p6233
sg14
(lp6234
sg2
g6228
sbs(S'broken_barh'
p6235
S'yticklabels'
p6236
tp6237
(icodemend.demo.code_suggest
Element
p6238
(dp6239
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p6240
sg12
Vbroken_barh.yticklabels
p6241
sg14
(lp6242
sg2
g6236
sbs(S'phase_spectrum'
p6243
S'ydata'
p6244
tp6245
(icodemend.demo.code_suggest
Element
p6246
(dp6247
g10
I0
sg11
S'set the data np.array for y'
p6248
sg12
Vphase_spectrum.ydata
p6249
sg14
(lp6250
sg2
g6244
sbs(S'axhspan'
p6251
S'zorder'
p6252
tp6253
(icodemend.demo.code_suggest
Element
p6254
(dp6255
g10
I2
sg11
S'set the zorder for the artist .'
p6256
sg12
Vaxhspan.zorder
p6257
sg14
(lp6258
(icodemend.demo.code_suggest
Element
p6259
(dp6260
g10
I2
sg11
S''
sg12
Vaxhspan.zorder.-5
p6261
sg14
(lp6262
sg2
S'-5'
p6263
sbasg2
g6252
sbs(g93
g4800
S'(0.0, 0.7)'
p6264
tp6265
(icodemend.demo.code_suggest
Element
p6266
(dp6267
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0/0, 0/7)
p6268
sg14
(lp6269
sg2
g6264
sbs(S'angle_spectrum'
p6270
S'marker'
p6271
tp6272
(icodemend.demo.code_suggest
Element
p6273
(dp6274
g10
I0
sg11
S'set the line marker'
p6275
sg12
Vangle_spectrum.marker
p6276
sg14
(lp6277
sg2
g6271
sbs(g101
S's'
S'150'
p6278
tp6279
(icodemend.demo.code_suggest
Element
p6280
(dp6281
g10
I9
sg11
S''
sg12
Vscatter.s.150
p6282
sg14
(lp6283
sg2
g6278
sbs(S'pcolormesh'
p6284
S'xlim'
p6285
tp6286
(icodemend.demo.code_suggest
Element
p6287
(dp6288
g10
I0
sg11
S'set the data limits for the xaxis'
p6289
sg12
Vpcolormesh.xlim
p6290
sg14
(lp6291
sg2
g6285
sbs(S'to_mask'
p6292
S'depth'
p6293
tp6294
(icodemend.demo.code_suggest
Element
p6295
(dp6296
g10
I0
sg11
S'returns a tuple ( array , depth )'
p6297
sg12
Vto_mask.depth
p6298
sg14
(lp6299
sg2
g6293
sbs(S'xticks'
p6300
g4225
S'(0, 0.5)'
p6301
tp6302
(icodemend.demo.code_suggest
Element
p6303
(dp6304
g10
I1
sg11
S''
sg12
Vxticks.position.(0, 0/5)
p6305
sg14
(lp6306
sg2
g6301
sbs(S'hist2d'
p6307
S'range'
p6308
tp6309
(icodemend.demo.code_suggest
Element
p6310
(dp6311
g10
I2
sg11
S'the leftmost and rightmost edges of the bins along each dimension ( if not specified explicitly in the bins parameters ) :[ [ xmin , xmax ] , [ ymin , ymax ] ] . all values outside of this range will be considered outliers and not tallied in the histogram .'
p6312
sg12
Vhist2d.range
p6313
sg14
(lp6314
(icodemend.demo.code_suggest
Element
p6315
(dp6316
g10
I1
sg11
S''
sg12
Vhist2d.range.[[(-200), 200], [4, 20]]
p6317
sg14
(lp6318
sg2
S'[[(-200), 200], [4, 20]]'
p6319
sbasg2
g6308
sbs(g16
g489
S'property1_2'
p6320
tp6321
(icodemend.demo.code_suggest
Element
p6322
(dp6323
g10
I1
sg11
S''
sg12
Vbar.bottom.property1_2
p6324
sg14
(lp6325
sg2
g6320
sbsS'exp_safe'
p6326
(icodemend.demo.code_suggest
Element
p6327
(dp6328
g10
I0
sg11
S'compute exponentials which safely underflow to zero .'
p6329
sg12
Vexp_safe
p6330
sg14
(lp6331
sg2
g6326
sbs(S'add_axes'
p6332
S'clip_path'
p6333
tp6334
(icodemend.demo.code_suggest
Element
p6335
(dp6336
g10
I0
sg11
S"set the artist 's clip path , which may be"
p6337
sg12
Vadd_axes.clip_path
p6338
sg14
(lp6339
sg2
g6333
sbs(S'xticks'
p6340
S'rotation_mode'
p6341
tp6342
(icodemend.demo.code_suggest
Element
p6343
(dp6344
g10
I0
sg11
S'set text rotation mode .'
p6345
sg12
Vxticks.rotation_mode
p6346
sg14
(lp6347
sg2
g6341
sbs(S'acorr'
p6348
S'marker'
p6349
tp6350
(icodemend.demo.code_suggest
Element
p6351
(dp6352
g10
I2
sg11
S'set the line marker'
p6353
sg12
Vacorr.marker
p6354
sg14
(lp6355
(icodemend.demo.code_suggest
Element
p6356
(dp6357
g10
I1
sg11
S''
sg12
Vacorr.marker.''
p6358
sg14
(lp6359
sg2
S"''"
p6360
sba(icodemend.demo.code_suggest
Element
p6361
(dp6362
g10
I1
sg11
S''
sg12
Vacorr.marker.None
p6363
sg14
(lp6364
sg2
g865
sbasg2
g6349
sbs(S'bivariate_normal'
p6365
S'Y'
tp6366
(icodemend.demo.code_suggest
Element
p6367
(dp6368
g10
I0
sg11
S'bivariate gaussian distribution for equal shape x , y .'
p6369
sg12
Vbivariate_normal.Y
p6370
sg14
(lp6371
sg2
S'Y'
sbs(g101
S'c'
S'ecc_100'
p6372
tp6373
(icodemend.demo.code_suggest
Element
p6374
(dp6375
g10
I1
sg11
S''
sg12
Vscatter.c.ecc_100
p6376
sg14
(lp6377
sg2
g6372
sbsS'finddir'
p6378
(icodemend.demo.code_suggest
Element
p6379
(dp6380
g10
I0
sg11
S'return all attributes of o which match string in match .'
p6381
sg12
Vfinddir
p6382
sg14
(lp6383
(icodemend.demo.code_suggest
Element
p6384
(dp6385
g10
I0
sg11
S'return all attributes of o which match string in match . if case is true require an exact case match .'
p6386
sg12
Vfinddir.o
p6387
sg14
(lp6388
sg2
S'o'
sbasg2
g6378
sbsS'wrap'
p6389
(icodemend.demo.code_suggest
Element
p6390
(dp6391
g10
I2
sg11
S'wrap text with prefix at length cols'
p6392
sg12
Vwrap
p6393
sg14
(lp6394
(icodemend.demo.code_suggest
Element
p6395
(dp6396
g10
I0
sg11
S'wrap text with prefix at length cols'
p6397
sg12
Vwrap.cols
p6398
sg14
(lp6399
sg2
S'cols'
p6400
sba(icodemend.demo.code_suggest
Element
p6401
(dp6402
g10
I0
sg11
S'wrap text with prefix at length cols'
p6403
sg12
Vwrap.prefix
p6404
sg14
(lp6405
sg2
S'prefix'
p6406
sba(icodemend.demo.code_suggest
Element
p6407
(dp6408
g10
I0
sg11
S'wrap text with prefix at length cols'
p6409
sg12
Vwrap.text
p6410
sg14
(lp6411
sg2
S'text'
p6412
sbasg2
g6389
sbs(g4371
g666
g666
tp6413
(icodemend.demo.code_suggest
Element
p6414
(dp6415
g10
I4
sg11
S''
sg12
Vcontour.levels.levels
p6416
sg14
(lp6417
sg2
g666
sbs(g93
g4800
S'((-45), 0)'
p6418
tp6419
(icodemend.demo.code_suggest
Element
p6420
(dp6421
g10
I1
sg11
S''
sg12
Vannotate.xytext.((-45), 0)
p6422
sg14
(lp6423
sg2
g6418
sbs(g582
g132
g3291
tp6424
g3287
s(S'semilogx'
p6425
g909
S'5'
tp6426
(icodemend.demo.code_suggest
Element
p6427
(dp6428
g10
I1
sg11
S''
sg12
Vsemilogx.zorder.5
p6429
sg14
(lp6430
sg2
S'5'
sbs(S'plot_date'
p6431
S'visible'
p6432
tp6433
(icodemend.demo.code_suggest
Element
p6434
(dp6435
g10
I0
sg11
S"set the artist 's visiblity ."
p6436
sg12
Vplot_date.visible
p6437
sg14
(lp6438
sg2
g6432
sbs(S'rc_params_from_file'
p6439
S'use_default_template'
p6440
tp6441
(icodemend.demo.code_suggest
Element
p6442
(dp6443
g10
I0
sg11
S'if true , initialize with default parameters before updating with those in the given file . if false , the configuration class only contains the parameters specified in the file . ( useful for updating dicts . )'
p6444
sg12
Vrc_params_from_file.use_default_template
p6445
sg14
(lp6446
sg2
g6440
sbs(S'plot'
p6447
S'_interpolation_steps'
p6448
tp6449
(icodemend.demo.code_suggest
Element
p6450
(dp6451
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p6452
sg12
Vplot._interpolation_steps
p6453
sg14
(lp6454
sg2
g6448
sbs(S'xticks'
p6455
S'position'
p6456
tp6457
(icodemend.demo.code_suggest
Element
p6458
(dp6459
g10
I1
sg11
S'set the ( x , y ) position of the text'
p6460
sg12
Vxticks.position
p6461
sg14
(lp6462
g6303
asg2
g6456
sbs(g1170
g1257
S'300'
p6463
tp6464
(icodemend.demo.code_suggest
Element
p6465
(dp6466
g10
I2
sg11
S''
sg12
Vhist.bins.300
p6467
sg14
(lp6468
sg2
g6463
sbs(g245
g140
S'(22.0, 15.5)'
p6469
tp6470
(icodemend.demo.code_suggest
Element
p6471
(dp6472
g10
I1
sg11
S''
sg12
Vfigure.figsize.(22/0, 15/5)
p6473
sg14
(lp6474
sg2
g6469
sbsS'hillshade'
p6475
(icodemend.demo.code_suggest
Element
p6476
(dp6477
g10
I0
sg11
S'calculates the illumination intensity for a surface using the defined azimuth and elevation for the light source .'
p6478
sg12
Vhillshade
p6479
sg14
(lp6480
(icodemend.demo.code_suggest
Element
p6481
(dp6482
g10
I0
sg11
S'the x-spacing ( columns ) of the input elevation grid .'
p6483
sg12
Vhillshade.dx
p6484
sg14
(lp6485
sg2
S'dx'
p6486
sba(icodemend.demo.code_suggest
Element
p6487
(dp6488
g10
I0
sg11
S'the y-spacing ( rows ) of the input elevation grid .'
p6489
sg12
Vhillshade.dy
p6490
sg14
(lp6491
sg2
S'dy'
p6492
sba(icodemend.demo.code_suggest
Element
p6493
(dp6494
g10
I0
sg11
S'a 2d array ( or equivalent ) of the height values used to generate an illumination map'
p6495
sg12
Vhillshade.elevation
p6496
sg14
(lp6497
sg2
S'elevation'
p6498
sba(icodemend.demo.code_suggest
Element
p6499
(dp6500
g10
I0
sg11
S'increases or decreases the contrast of the hillshade . values greater than one will cause intermediate values to move closer to full illumination or shadow ( and clipping any values that move beyond 0 or 1 ) . note that this is not visually or mathematically the same as vertical exaggeration .'
p6501
sg12
Vhillshade.fraction
p6502
sg14
(lp6503
sg2
S'fraction'
p6504
sba(icodemend.demo.code_suggest
Element
p6505
(dp6506
g10
I0
sg11
S'a 2d array of illumination values between 0-1 , where 0 is completely in shadow and 1 is completely illuminated .'
p6507
sg12
Vhillshade.intensity
p6508
sg14
(lp6509
sg2
S'intensity'
p6510
sba(icodemend.demo.code_suggest
Element
p6511
(dp6512
g10
I0
sg11
S'the amount to exaggerate the elevation values by when calculating illumination . this can be used either to correct for differences in units between the x-y coordinate system and the elevation coordinate system ( e.g. decimal degrees vs meters ) or to exaggerate or de-emphasize topographic effects .'
p6513
sg12
Vhillshade.vert_exag
p6514
sg14
(lp6515
sg2
S'vert_exag'
p6516
sbasg2
g6475
sbs(g4998
g2392
S'0'
tp6517
(icodemend.demo.code_suggest
Element
p6518
(dp6519
g10
I3
sg11
S''
sg12
Vpcolormesh.linewidth.0
p6520
sg14
(lp6521
sg2
S'0'
sbs(S'iter_segments'
p6522
S'vertices'
p6523
tp6524
(icodemend.demo.code_suggest
Element
p6525
(dp6526
g10
I0
sg11
S'iterates over all of the curve segments in the path . each iteration returns a 2-tuple ( vertices , code ) , where vertices is a sequence of 1 - 3 coordinate pairs , and code is one of the path codes .'
p6527
sg12
Viter_segments.vertices
p6528
sg14
(lp6529
sg2
g6523
sbsS'back'
p6530
(icodemend.demo.code_suggest
Element
p6531
(dp6532
g10
I0
sg11
S'move back up the view lim stack move the position back and return the current element back one step in the stack of views and positions'
p6533
sg12
Vback
p6534
sg14
(lp6535
sg2
g6530
sbs(S'loglog'
p6536
S'args'
p6537
tp6538
(icodemend.demo.code_suggest
Element
p6539
(dp6540
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :'
p6541
sg12
Vloglog.args
p6542
sg14
(lp6543
sg2
g6537
sbs(g6146
g2841
S"'%1.1f'"
p6544
tp6545
(icodemend.demo.code_suggest
Element
p6546
(dp6547
g10
I3
sg11
S''
sg12
Vclabel.fmt.'%1/1f'
p6548
sg14
(lp6549
sg2
g6544
sbs(g117
g118
S"'data2'"
p6550
tp6551
(icodemend.demo.code_suggest
Element
p6552
(dp6553
g10
I2
sg11
S''
sg12
Vplot.label.'data2'
p6554
sg14
(lp6555
sg2
g6550
sbs(S'vlines'
p6556
g132
S"'k'"
p6557
tp6558
(icodemend.demo.code_suggest
Element
p6559
(dp6560
g10
I1
sg11
S''
sg12
Vvlines.color.'k'
p6561
sg14
(lp6562
sg2
g6557
sbs(S'errorbar'
p6563
S'mfc'
p6564
tp6565
(icodemend.demo.code_suggest
Element
p6566
(dp6567
g10
I1
sg11
S'where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p6568
sg12
Verrorbar.mfc
p6569
sg14
(lp6570
(icodemend.demo.code_suggest
Element
p6571
(dp6572
g10
I1
sg11
S''
sg12
Verrorbar.mfc.'white'
p6573
sg14
(lp6574
sg2
S"'white'"
p6575
sbasg2
g6564
sbs(S'barh'
p6576
S'log'
p6577
tp6578
(icodemend.demo.code_suggest
Element
p6579
(dp6580
g10
I2
sg11
S'if true , sets the axis to be log scale'
p6581
sg12
Vbarh.log
p6582
sg14
(lp6583
(icodemend.demo.code_suggest
Element
p6584
(dp6585
g10
I2
sg11
S''
sg12
Vbarh.log.True
p6586
sg14
(lp6587
sg2
g438
sbasg2
g6577
sbs(S'add'
p6588
S'_interpolation_steps'
p6589
tp6590
(icodemend.demo.code_suggest
Element
p6591
(dp6592
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p6593
sg12
Vadd._interpolation_steps
p6594
sg14
(lp6595
sg2
g6589
sbs(S'loglog'
p6596
g132
S"'black'"
p6597
tp6598
(icodemend.demo.code_suggest
Element
p6599
(dp6600
g10
I2
sg11
S''
sg12
Vloglog.color.'black'
p6601
sg14
(lp6602
sg2
g6597
sbs(S'xcorr'
p6603
g5113
g438
tp6604
(icodemend.demo.code_suggest
Element
p6605
(dp6606
g10
I2
sg11
S''
sg12
Vxcorr.usevlines.True
p6607
sg14
(lp6608
sg2
g438
sbs(S'hexbin'
p6609
S'array'
p6610
tp6611
(icodemend.demo.code_suggest
Element
p6612
(dp6613
g10
I0
sg11
S'set the image array from numpy array a'
p6614
sg12
Vhexbin.array
p6615
sg14
(lp6616
sg2
g6610
sbs(S'fill'
p6617
S'y'
tp6618
(icodemend.demo.code_suggest
Element
p6619
(dp6620
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||an arbitrary number of x , y , color groups can be specified :|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||if you would like to fill below a curve , e.g. , shade a region between 0 and y along x , use fill_between ( )|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing . for example , to plot a polygon with vertices at x , y in blue . :'
p6621
sg12
Vfill.y
p6622
sg14
(lp6623
sg2
S'y'
sbs(S'quiver'
p6624
S'closed'
p6625
tp6626
(icodemend.demo.code_suggest
Element
p6627
(dp6628
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p6629
sg12
Vquiver.closed
p6630
sg14
(lp6631
sg2
g6625
sbs(S'add_subplot'
p6632
g4340
S"'Vereinfachtes Kraftwerksmodell'"
p6633
tp6634
(icodemend.demo.code_suggest
Element
p6635
(dp6636
g10
I1
sg11
S''
sg12
Vadd_subplot.title.'Vereinfachtes Kraftwerksmodell'
p6637
sg14
(lp6638
sg2
g6633
sbs(S'magnitude_spectrum'
p6639
S'dashes'
p6640
tp6641
(icodemend.demo.code_suggest
Element
p6642
(dp6643
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p6644
sg12
Vmagnitude_spectrum.dashes
p6645
sg14
(lp6646
sg2
g6640
sbs(g245
g140
S'(xsize, ysize)'
p6647
tp6648
(icodemend.demo.code_suggest
Element
p6649
(dp6650
g10
I1
sg11
S''
sg12
Vfigure.figsize.(xsize, ysize)
p6651
sg14
(lp6652
sg2
g6647
sbs(S'add'
p6653
S'transform'
p6654
tp6655
(icodemend.demo.code_suggest
Element
p6656
(dp6657
g10
I1
sg11
S'set the transform instance used by this artist .'
p6658
sg12
Vadd.transform
p6659
sg14
(lp6660
(icodemend.demo.code_suggest
Element
p6661
(dp6662
g10
I1
sg11
S''
sg12
Vadd.transform.new_transform
p6663
sg14
(lp6664
sg2
S'new_transform'
p6665
sbasg2
g6654
sbs(S'plot'
p6666
S'clip_box'
p6667
tp6668
(icodemend.demo.code_suggest
Element
p6669
(dp6670
g10
I0
sg11
S"set the artist 's clip bbox ."
p6671
sg12
Vplot.clip_box
p6672
sg14
(lp6673
sg2
g6667
sbs(S'psd'
p6674
S'marker'
p6675
tp6676
(icodemend.demo.code_suggest
Element
p6677
(dp6678
g10
I0
sg11
S'set the line marker'
p6679
sg12
Vpsd.marker
p6680
sg14
(lp6681
sg2
g6675
sbs(g452
g118
S"'Interpolated data'"
p6682
tp6683
(icodemend.demo.code_suggest
Element
p6684
(dp6685
g10
I1
sg11
S''
sg12
Verrorbar.label.'Interpolated data'
p6686
sg14
(lp6687
sg2
g6682
sbsS'get_data_ratio'
p6688
(icodemend.demo.code_suggest
Element
p6689
(dp6690
g10
I2
sg11
S'returns the aspect ratio of the raw data .'
p6691
sg12
Vget_data_ratio
p6692
sg14
(lp6693
sg2
g6688
sbs(g2182
S'fignum'
p6694
S'0'
tp6695
(icodemend.demo.code_suggest
Element
p6696
(dp6697
g10
I1
sg11
S''
sg12
Vmatshow.fignum.0
p6698
sg14
(lp6699
sg2
S'0'
sbs(S'cleaned'
p6700
S'stroke_width'
p6701
tp6702
(icodemend.demo.code_suggest
Element
p6703
(dp6704
g10
I0
sg11
S'as a hint for the snapping algorithm .'
p6705
sg12
Vcleaned.stroke_width
p6706
sg14
(lp6707
sg2
g6701
sbsS'mpl_disconnect'
p6708
(icodemend.demo.code_suggest
Element
p6709
(dp6710
g10
I16
sg11
S'disconnect callback id cid'
p6711
sg12
Vmpl_disconnect
p6712
sg14
(lp6713
sg2
g6708
sbs(g93
g4800
S'((d - 1), (h + 0.003))'
p6714
tp6715
(icodemend.demo.code_suggest
Element
p6716
(dp6717
g10
I1
sg11
S''
sg12
Vannotate.xytext.((d - 1), (h + 0/003))
p6718
sg14
(lp6719
sg2
g6714
sbs(g245
g140
S'(xinch, yinch)'
p6720
tp6721
(icodemend.demo.code_suggest
Element
p6722
(dp6723
g10
I2
sg11
S''
sg12
Vfigure.figsize.(xinch, yinch)
p6724
sg14
(lp6725
sg2
g6720
sbs(S'shade'
p6726
S'dy'
p6727
tp6728
(icodemend.demo.code_suggest
Element
p6729
(dp6730
g10
I0
sg11
S'the y-spacing ( rows ) of the input elevation grid .'
p6731
sg12
Vshade.dy
p6732
sg14
(lp6733
sg2
g6727
sbs(S'hexbin'
p6734
S'agg_filter'
p6735
tp6736
(icodemend.demo.code_suggest
Element
p6737
(dp6738
g10
I0
sg11
S'set agg_filter fuction .'
p6739
sg12
Vhexbin.agg_filter
p6740
sg14
(lp6741
sg2
g6735
sbs(S'semilogy'
p6742
S'marker'
p6743
tp6744
(icodemend.demo.code_suggest
Element
p6745
(dp6746
g10
I0
sg11
S'set the line marker'
p6747
sg12
Vsemilogy.marker
p6748
sg14
(lp6749
sg2
g6743
sbs(g245
g140
S'(((2 * image_circle_radius) / DPI), ((2 * image_circle_radius) / DPI))'
p6750
tp6751
(icodemend.demo.code_suggest
Element
p6752
(dp6753
g10
I1
sg11
S''
sg12
Vfigure.figsize.(((2 * image_circle_radius) / DPI), ((2 * image_circle_radius) / DPI))
p6754
sg14
(lp6755
sg2
g6750
sbs(S'pcolormesh'
p6756
S'color_cycle'
p6757
tp6758
(icodemend.demo.code_suggest
Element
p6759
(dp6760
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p6761
sg12
Vpcolormesh.color_cycle
p6762
sg14
(lp6763
sg2
g6757
sbs(S'loglog'
p6764
S'xmargin'
p6765
tp6766
(icodemend.demo.code_suggest
Element
p6767
(dp6768
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p6769
sg12
Vloglog.xmargin
p6770
sg14
(lp6771
sg2
g6765
sbs(S'eventplot'
p6772
S'url'
p6773
tp6774
(icodemend.demo.code_suggest
Element
p6775
(dp6776
g10
I0
sg11
S'sets the url for the artist'
p6777
sg12
Veventplot.url
p6778
sg14
(lp6779
sg2
g6773
sbs(S'plot_date'
p6780
S'linestyle'
p6781
tp6782
(icodemend.demo.code_suggest
Element
p6783
(dp6784
g10
I12
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p6785
sg12
Vplot_date.linestyle
p6786
sg14
(lp6787
(icodemend.demo.code_suggest
Element
p6788
(dp6789
g10
I9
sg11
S''
sg12
Vplot_date.linestyle.'-'
p6790
sg14
(lp6791
sg2
S"'-'"
p6792
sbag5978
a(icodemend.demo.code_suggest
Element
p6793
(dp6794
g10
I1
sg11
S''
sg12
Vplot_date.linestyle.'dashed'
p6795
sg14
(lp6796
sg2
S"'dashed'"
p6797
sba(icodemend.demo.code_suggest
Element
p6798
(dp6799
g10
I1
sg11
S''
sg12
Vplot_date.linestyle.'solid'
p6800
sg14
(lp6801
sg2
S"'solid'"
p6802
sbasg2
g6781
sbsS'set_url'
p6803
(icodemend.demo.code_suggest
Element
p6804
(dp6805
g10
I0
sg11
S'sets the url for the artist'
p6806
sg12
Vset_url
p6807
sg14
(lp6808
sg2
g6803
sbs(S'set_xticklabels'
p6809
S'y'
tp6810
(icodemend.demo.code_suggest
Element
p6811
(dp6812
g10
I0
sg11
S'set the y position of the text'
p6813
sg12
Vset_xticklabels.y
p6814
sg14
(lp6815
sg2
S'y'
sbs(g1003
S'meanprops'
p6816
S"{'marker': '_', 'color': 'w', 'markersize': 6, 'markeredgewidth': 1.5}"
p6817
tp6818
(icodemend.demo.code_suggest
Element
p6819
(dp6820
g10
I1
sg11
S''
sg12
Vboxplot.meanprops.{'marker': '_', 'color': 'w', 'markersize': 6, 'markeredgewidth': 1/5}
p6821
sg14
(lp6822
sg2
g6817
sbsS'set_fontstyle'
p6823
(icodemend.demo.code_suggest
Element
p6824
(dp6825
g10
I0
sg11
S'alias for set_style'
p6826
sg12
Vset_fontstyle
p6827
sg14
(lp6828
sg2
g6823
sbs(S'hexbin'
p6829
S'codes'
p6830
tp6831
(icodemend.demo.code_suggest
Element
p6832
(dp6833
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p6834
sg12
Vhexbin.codes
p6835
sg14
(lp6836
sg2
g6830
sbsS'allequal'
p6837
(icodemend.demo.code_suggest
Element
p6838
(dp6839
g10
I0
sg11
S'return true if all elements of seq compare equal .'
p6840
sg12
Vallequal
p6841
sg14
(lp6842
(icodemend.demo.code_suggest
Element
p6843
(dp6844
g10
I0
sg11
S'return true if all elements of seq compare equal . if seq is 0 or 1 length , return true'
p6845
sg12
Vallequal.seq
p6846
sg14
(lp6847
sg2
S'seq'
p6848
sbasg2
g6837
sbs(S'psd'
p6849
S'ylabel'
p6850
tp6851
(icodemend.demo.code_suggest
Element
p6852
(dp6853
g10
I0
sg11
S'set the label for the yaxis'
p6854
sg12
Vpsd.ylabel
p6855
sg14
(lp6856
sg2
g6850
sbsS'movavg'
p6857
(icodemend.demo.code_suggest
Element
p6858
(dp6859
g10
I0
sg11
S'compute the len(n ) moving average of x .'
p6860
sg12
Vmovavg
p6861
sg14
(lp6862
(icodemend.demo.code_suggest
Element
p6863
(dp6864
g10
I0
sg11
S'compute the len(n ) moving average of x .'
p6865
sg12
Vmovavg.n
p6866
sg14
(lp6867
sg2
S'n'
sbag5857
asg2
g6857
sbs(S'text'
p6868
S'zorder'
p6869
tp6870
(icodemend.demo.code_suggest
Element
p6871
(dp6872
g10
I7
sg11
S'set the zorder for the artist .'
p6873
sg12
Vtext.zorder
p6874
sg14
(lp6875
(icodemend.demo.code_suggest
Element
p6876
(dp6877
g10
I3
sg11
S''
sg12
Vtext.zorder.10
p6878
sg14
(lp6879
sg2
S'10'
p6880
sba(icodemend.demo.code_suggest
Element
p6881
(dp6882
g10
I1
sg11
S''
sg12
Vtext.zorder.-1
p6883
sg14
(lp6884
sg2
S'-1'
p6885
sba(icodemend.demo.code_suggest
Element
p6886
(dp6887
g10
I1
sg11
S''
sg12
Vtext.zorder.-2
p6888
sg14
(lp6889
sg2
S'-2'
p6890
sba(icodemend.demo.code_suggest
Element
p6891
(dp6892
g10
I1
sg11
S''
sg12
Vtext.zorder.0
p6893
sg14
(lp6894
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p6895
(dp6896
g10
I1
sg11
S''
sg12
Vtext.zorder.5
p6897
sg14
(lp6898
sg2
S'5'
sbasg2
g6869
sbs(g332
g909
g6885
tp6899
g6881
s(S'plot_date'
p6900
S'x'
tp6901
(icodemend.demo.code_suggest
Element
p6902
(dp6903
g10
I6
sg11
S'similar to the plot ( ) command , except the x or y ( or both ) data is considered to be dates , and the axis is labeled accordingly .|||x and/or y can be a sequence of dates represented as float days since 0001-01-01 utc .'
p6904
sg12
Vplot_date.x
p6905
sg14
(lp6906
(icodemend.demo.code_suggest
Element
p6907
(dp6908
g10
I2
sg11
S''
sg12
Vplot_date.x.date
p6909
sg14
(lp6910
sg2
S'date'
p6911
sba(icodemend.demo.code_suggest
Element
p6912
(dp6913
g10
I1
sg11
S''
sg12
Vplot_date.x.datestamp
p6914
sg14
(lp6915
sg2
S'datestamp'
p6916
sba(icodemend.demo.code_suggest
Element
p6917
(dp6918
g10
I1
sg11
S''
sg12
Vplot_date.x.days
p6919
sg14
(lp6920
sg2
S'days'
p6921
sba(icodemend.demo.code_suggest
Element
p6922
(dp6923
g10
I1
sg11
S''
sg12
Vplot_date.x.xaxis
p6924
sg14
(lp6925
sg2
S'xaxis'
p6926
sbasg2
S'x'
sbsS'base_repr'
p6927
(icodemend.demo.code_suggest
Element
p6928
(dp6929
g10
I0
sg11
S'return the representation of a number in any given base .'
p6930
sg12
Vbase_repr
p6931
sg14
(lp6932
(icodemend.demo.code_suggest
Element
p6933
(dp6934
g10
I0
sg11
S'return the representation of a number in any given base .'
p6935
sg12
Vbase_repr.base
p6936
sg14
(lp6937
sg2
S'base'
p6938
sba(icodemend.demo.code_suggest
Element
p6939
(dp6940
g10
I0
sg11
S'return the representation of a number in any given base .'
p6941
sg12
Vbase_repr.number
p6942
sg14
(lp6943
sg2
S'number'
p6944
sbasg2
g6927
sbs(g582
S'y'
g3385
tp6945
g3381
s(S'axhspan'
p6946
S'linestyle'
p6947
tp6948
(icodemend.demo.code_suggest
Element
p6949
(dp6950
g10
I0
sg11
S'set the patch linestyle'
p6951
sg12
Vaxhspan.linestyle
p6952
sg14
(lp6953
sg2
g6947
sbs(S'tricontour'
p6954
g1336
tp6955
g1327
sS'push'
p6956
(icodemend.demo.code_suggest
Element
p6957
(dp6958
g10
I0
sg11
S'push object onto stack at current position - all elements occurring later than the current position are discarded'
p6959
sg12
Vpush
p6960
sg14
(lp6961
sg2
g6956
sbs(S'set_xticklabels'
p6962
S'family'
p6963
tp6964
(icodemend.demo.code_suggest
Element
p6965
(dp6966
g10
I0
sg11
S'set the font family .'
p6967
sg12
Vset_xticklabels.family
p6968
sg14
(lp6969
sg2
g6963
sbs(g93
g4800
S'(0.1, 0.8)'
p6970
tp6971
(icodemend.demo.code_suggest
Element
p6972
(dp6973
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0/1, 0/8)
p6974
sg14
(lp6975
sg2
g6970
sbs(g101
S'c'
S"'w'"
p6976
tp6977
(icodemend.demo.code_suggest
Element
p6978
(dp6979
g10
I3
sg11
S''
sg12
Vscatter.c.'w'
p6980
sg14
(lp6981
sg2
g6976
sbs(S'quiver'
p6982
S'gid'
p6983
tp6984
(icodemend.demo.code_suggest
Element
p6985
(dp6986
g10
I0
sg11
S'sets the ( group ) id for the artist'
p6987
sg12
Vquiver.gid
p6988
sg14
(lp6989
sg2
g6983
sbs(g109
g3075
S'50'
p6990
tp6991
(icodemend.demo.code_suggest
Element
p6992
(dp6993
g10
I3
sg11
S''
sg12
Vsavefig.dpi.50
p6994
sg14
(lp6995
sg2
g6990
sbs(g101
S'c'
S'data_values'
p6996
tp6997
(icodemend.demo.code_suggest
Element
p6998
(dp6999
g10
I1
sg11
S''
sg12
Vscatter.c.data_values
p7000
sg14
(lp7001
sg2
g6996
sbs(g93
g4800
S'(0.2, 0.4)'
p7002
tp7003
(icodemend.demo.code_suggest
Element
p7004
(dp7005
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0/2, 0/4)
p7006
sg14
(lp7007
sg2
g7002
sbs(S'add'
p7008
S'sketch_params'
p7009
tp7010
(icodemend.demo.code_suggest
Element
p7011
(dp7012
g10
I0
sg11
S'sets the sketch parameters .'
p7013
sg12
Vadd.sketch_params
p7014
sg14
(lp7015
sg2
g7009
sbs(S'magnitude_spectrum'
p7016
S'xdata'
p7017
tp7018
(icodemend.demo.code_suggest
Element
p7019
(dp7020
g10
I0
sg11
S'set the data np.array for x'
p7021
sg12
Vmagnitude_spectrum.xdata
p7022
sg14
(lp7023
sg2
g7017
sbs(S'joined'
p7024
S'b'
tp7025
(icodemend.demo.code_suggest
Element
p7026
(dp7027
g10
I0
sg11
S'returns true if a and b are members of the same set .'
p7028
sg12
Vjoined.b
p7029
sg14
(lp7030
sg2
S'b'
sbs(g139
g370
g1862
tp7031
g1858
s(g4371
S'colors'
p7032
S"'k'"
p7033
tp7034
(icodemend.demo.code_suggest
Element
p7035
(dp7036
g10
I38
sg11
S''
sg12
Vcontour.colors.'k'
p7037
sg14
(lp7038
sg2
g7033
sbs(S'axvline'
p7039
S'url'
p7040
tp7041
(icodemend.demo.code_suggest
Element
p7042
(dp7043
g10
I0
sg11
S'sets the url for the artist'
p7044
sg12
Vaxvline.url
p7045
sg14
(lp7046
sg2
g7040
sbs(g93
g4800
S'(6, 6)'
p7047
tp7048
(icodemend.demo.code_suggest
Element
p7049
(dp7050
g10
I1
sg11
S''
sg12
Vannotate.xytext.(6, 6)
p7051
sg14
(lp7052
sg2
g7047
sbs(S'magnitude_spectrum'
p7053
S'figure'
p7054
tp7055
(icodemend.demo.code_suggest
Element
p7056
(dp7057
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p7058
sg12
Vmagnitude_spectrum.figure
p7059
sg14
(lp7060
sg2
g7054
sbs(S'semilogy'
p7061
S'ymargin'
p7062
tp7063
(icodemend.demo.code_suggest
Element
p7064
(dp7065
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p7066
sg12
Vsemilogy.ymargin
p7067
sg14
(lp7068
sg2
g7062
sbs(g958
S'shape'
p7069
S'(2, 6)'
p7070
tp7071
(icodemend.demo.code_suggest
Element
p7072
(dp7073
g10
I1
sg11
S''
sg12
Vsubplot2grid.shape.(2, 6)
p7074
sg14
(lp7075
sg2
g7070
sbs(S'fill_between'
p7076
S'x'
tp7077
(icodemend.demo.code_suggest
Element
p7078
(dp7079
g10
I0
sg11
S'an n-length array of the x data'
p7080
sg12
Vfill_between.x
p7081
sg14
(lp7082
sg2
S'x'
sbs(g117
g132
S'blue'
p7083
tp7084
(icodemend.demo.code_suggest
Element
p7085
(dp7086
g10
I1
sg11
S''
sg12
Vplot.color.blue
p7087
sg14
(lp7088
sg2
g7083
sbs(S'subplot'
p7089
S'rect'
p7090
tp7091
(icodemend.demo.code_suggest
Element
p7092
(dp7093
g10
I0
sg11
S'the axes is added at position rect specified by :'
p7094
sg12
Vsubplot.rect
p7095
sg14
(lp7096
sg2
g7090
sbs(S'plot_date'
p7097
S'True'
p7098
tp7099
(icodemend.demo.code_suggest
Element
p7100
(dp7101
g10
I0
sg11
S'if true , the x - axis will be labeled with dates .|||if true , the y - axis will be labeled with dates .'
p7102
sg12
Vplot_date.True
p7103
sg14
(lp7104
sg2
g7098
sbs(S'text'
p7105
S'title'
p7106
tp7107
(icodemend.demo.code_suggest
Element
p7108
(dp7109
g10
I0
sg11
S'set a title for the axes .'
p7110
sg12
Vtext.title
p7111
sg14
(lp7112
sg2
g7106
sbs(g16
g132
S"'w'"
p7113
tp7114
(icodemend.demo.code_suggest
Element
p7115
(dp7116
g10
I3
sg11
S''
sg12
Vbar.color.'w'
p7117
sg14
(lp7118
sg2
g7113
sbs(g139
g140
g1513
tp7119
g1509
s(g245
g140
S'(xinch, (yinch / 0.8))'
p7120
tp7121
(icodemend.demo.code_suggest
Element
p7122
(dp7123
g10
I1
sg11
S''
sg12
Vfigure.figsize.(xinch, (yinch / 0/8))
p7124
sg14
(lp7125
sg2
g7120
sbs(S'parse'
p7126
S'pattern'
p7127
tp7128
(icodemend.demo.code_suggest
Element
p7129
(dp7130
g10
I0
sg11
S'parse the given fontconfig pattern and return a dictionary of key/value pairs useful for initializing a font_manager.fontproperties object .'
p7131
sg12
Vparse.pattern
p7132
sg14
(lp7133
sg2
g7127
sbs(S'contourf'
p7134
S'hatches'
p7135
tp7136
(icodemend.demo.code_suggest
Element
p7137
(dp7138
g10
I0
sg11
S'a list of cross hatch patterns to use on the filled areas . if none , no hatching will be added to the contour . hatching is supported in the postscript , pdf , svg and agg backends only .'
p7139
sg12
Vcontourf.hatches
p7140
sg14
(lp7141
sg2
g7135
sbs(S'getp'
p7142
S'position'
p7143
tp7144
(icodemend.demo.code_suggest
Element
p7145
(dp7146
g10
I0
sg11
S'set the axes position with|||set the ( x , y ) position of the text'
p7147
sg12
Vgetp.position
p7148
sg14
(lp7149
sg2
g7143
sbs(S'phase_spectrum'
p7150
S'rasterized'
p7151
tp7152
(icodemend.demo.code_suggest
Element
p7153
(dp7154
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p7155
sg12
Vphase_spectrum.rasterized
p7156
sg14
(lp7157
sg2
g7151
sbs(S'errorbar'
p7158
S'yerr'
p7159
tp7160
(icodemend.demo.code_suggest
Element
p7161
(dp7162
g10
I74
sg11
S'if a scalar number , len(n ) array-like object , or an nx1 array-like object , errorbars are drawn at + /-value relative to the data . if a sequence of shape 2xn , errorbars are drawn at - row1 and + row2 relative to the data .|||plot x versus y with error deltas in yerr and xerr . vertical errorbars are plotted if yerr is not none . horizontal errorbars are plotted if xerr is not none .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y .'
p7163
sg12
Verrorbar.yerr
p7164
sg14
(lp7165
(icodemend.demo.code_suggest
Element
p7166
(dp7167
g10
I9
sg11
S''
sg12
Verrorbar.yerr.yerr
p7168
sg14
(lp7169
sg2
g453
sba(icodemend.demo.code_suggest
Element
p7170
(dp7171
g10
I7
sg11
S''
sg12
Verrorbar.yerr.err
p7172
sg14
(lp7173
sg2
S'err'
p7174
sba(icodemend.demo.code_suggest
Element
p7175
(dp7176
g10
I4
sg11
S''
sg12
Verrorbar.yerr.0/1
p7177
sg14
(lp7178
sg2
S'0.1'
p7179
sba(icodemend.demo.code_suggest
Element
p7180
(dp7181
g10
I4
sg11
S''
sg12
Verrorbar.yerr.1
p7182
sg14
(lp7183
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p7184
(dp7185
g10
I3
sg11
S''
sg12
Verrorbar.yerr.[0/2, 0/2, 0/2]
p7186
sg14
(lp7187
sg2
S'[0.2, 0.2, 0.2]'
p7188
sba(icodemend.demo.code_suggest
Element
p7189
(dp7190
g10
I3
sg11
S''
sg12
Verrorbar.yerr.yerr2
p7191
sg14
(lp7192
sg2
S'yerr2'
p7193
sba(icodemend.demo.code_suggest
Element
p7194
(dp7195
g10
I2
sg11
S''
sg12
Verrorbar.yerr.y_err
p7196
sg14
(lp7197
sg2
S'y_err'
p7198
sba(icodemend.demo.code_suggest
Element
p7199
(dp7200
g10
I2
sg11
S''
sg12
Verrorbar.yerr.yerr1
p7201
sg14
(lp7202
sg2
S'yerr1'
p7203
sba(icodemend.demo.code_suggest
Element
p7204
(dp7205
g10
I2
sg11
S''
sg12
Verrorbar.yerr.yerr_dat
p7206
sg14
(lp7207
sg2
S'yerr_dat'
p7208
sbag2233
a(icodemend.demo.code_suggest
Element
p7209
(dp7210
g10
I1
sg11
S''
sg12
Verrorbar.yerr.0
p7211
sg14
(lp7212
sg2
S'0'
sbag2958
a(icodemend.demo.code_suggest
Element
p7213
(dp7214
g10
I1
sg11
S''
sg12
Verrorbar.yerr.ERR
p7215
sg14
(lp7216
sg2
S'ERR'
p7217
sba(icodemend.demo.code_suggest
Element
p7218
(dp7219
g10
I1
sg11
S''
sg12
Verrorbar.yerr.None
p7220
sg14
(lp7221
sg2
g865
sba(icodemend.demo.code_suggest
Element
p7222
(dp7223
g10
I1
sg11
S''
sg12
Verrorbar.yerr.[0/1, 0/2, 0/3, 0/4, 0/5]
p7224
sg14
(lp7225
sg2
S'[0.1, 0.2, 0.3, 0.4, 0.5]'
p7226
sba(icodemend.demo.code_suggest
Element
p7227
(dp7228
g10
I1
sg11
S''
sg12
Verrorbar.yerr.[1]
p7229
sg14
(lp7230
sg2
S'[1]'
p7231
sba(icodemend.demo.code_suggest
Element
p7232
(dp7233
g10
I1
sg11
S''
sg12
Verrorbar.yerr.[6]
p7234
sg14
(lp7235
sg2
S'[6]'
p7236
sba(icodemend.demo.code_suggest
Element
p7237
(dp7238
g10
I1
sg11
S''
sg12
Verrorbar.yerr.[verr2, verr]
p7239
sg14
(lp7240
sg2
S'[verr2, verr]'
p7241
sba(icodemend.demo.code_suggest
Element
p7242
(dp7243
g10
I1
sg11
S''
sg12
Verrorbar.yerr.[y1, y2]
p7244
sg14
(lp7245
sg2
S'[y1, y2]'
p7246
sba(icodemend.demo.code_suggest
Element
p7247
(dp7248
g10
I1
sg11
S''
sg12
Verrorbar.yerr.c
p7249
sg14
(lp7250
sg2
S'c'
sba(icodemend.demo.code_suggest
Element
p7251
(dp7252
g10
I1
sg11
S''
sg12
Verrorbar.yerr.e
p7253
sg14
(lp7254
sg2
S'e'
sba(icodemend.demo.code_suggest
Element
p7255
(dp7256
g10
I1
sg11
S''
sg12
Verrorbar.yerr.error
p7257
sg14
(lp7258
sg2
S'error'
p7259
sba(icodemend.demo.code_suggest
Element
p7260
(dp7261
g10
I1
sg11
S''
sg12
Verrorbar.yerr.menStd
p7262
sg14
(lp7263
sg2
S'menStd'
p7264
sba(icodemend.demo.code_suggest
Element
p7265
(dp7266
g10
I1
sg11
S''
sg12
Verrorbar.yerr.se1
p7267
sg14
(lp7268
sg2
S'se1'
p7269
sba(icodemend.demo.code_suggest
Element
p7270
(dp7271
g10
I1
sg11
S''
sg12
Verrorbar.yerr.se2
p7272
sg14
(lp7273
sg2
S'se2'
p7274
sba(icodemend.demo.code_suggest
Element
p7275
(dp7276
g10
I1
sg11
S''
sg12
Verrorbar.yerr.series_blue_err
p7277
sg14
(lp7278
sg2
S'series_blue_err'
p7279
sba(icodemend.demo.code_suggest
Element
p7280
(dp7281
g10
I1
sg11
S''
sg12
Verrorbar.yerr.stdev_D1
p7282
sg14
(lp7283
sg2
S'stdev_D1'
p7284
sba(icodemend.demo.code_suggest
Element
p7285
(dp7286
g10
I1
sg11
S''
sg12
Verrorbar.yerr.stdev_D2
p7287
sg14
(lp7288
sg2
S'stdev_D2'
p7289
sba(icodemend.demo.code_suggest
Element
p7290
(dp7291
g10
I1
sg11
S''
sg12
Verrorbar.yerr.z
p7292
sg14
(lp7293
sg2
S'z'
sbag456
asg2
g7159
sbsS'score_family'
p7294
(icodemend.demo.code_suggest
Element
p7295
(dp7296
g10
I0
sg11
S'returns a match score between the list of font families in families and the font family name family2 .'
p7297
sg12
Vscore_family
p7298
sg14
(lp7299
(icodemend.demo.code_suggest
Element
p7300
(dp7301
g10
I0
sg11
S'returns a match score between the list of font families in families and the font family name family2 .'
p7302
sg12
Vscore_family.families
p7303
sg14
(lp7304
sg2
S'families'
p7305
sba(icodemend.demo.code_suggest
Element
p7306
(dp7307
g10
I0
sg11
S'returns a match score between the list of font families in families and the font family name family2 .'
p7308
sg12
Vscore_family.family2
p7309
sg14
(lp7310
sg2
S'family2'
p7311
sbasg2
g7294
sbs(g245
g140
S'(10, 3)'
p7312
tp7313
(icodemend.demo.code_suggest
Element
p7314
(dp7315
g10
I2
sg11
S''
sg12
Vfigure.figsize.(10, 3)
p7316
sg14
(lp7317
sg2
g7312
sbs(g252
g4984
S'6'
tp7318
(icodemend.demo.code_suggest
Element
p7319
(dp7320
g10
I1
sg11
S''
sg12
Vlegend.ncol.6
p7321
sg14
(lp7322
sg2
S'6'
sbs(g117
g132
S'velocity_color'
p7323
tp7324
(icodemend.demo.code_suggest
Element
p7325
(dp7326
g10
I1
sg11
S''
sg12
Vplot.color.velocity_color
p7327
sg14
(lp7328
sg2
g7323
sbs(g252
g253
S'(1.2, 1)'
p7329
tp7330
(icodemend.demo.code_suggest
Element
p7331
(dp7332
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/2, 1)
p7333
sg14
(lp7334
sg2
g7329
sbs(S'grid'
p7335
S'solid_joinstyle'
p7336
tp7337
(icodemend.demo.code_suggest
Element
p7338
(dp7339
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p7340
sg12
Vgrid.solid_joinstyle
p7341
sg14
(lp7342
sg2
g7336
sbsS'unmasked_index_ranges'
p7343
(icodemend.demo.code_suggest
Element
p7344
(dp7345
g10
I0
sg11
S'find index ranges where mask is false .'
p7346
sg12
Vunmasked_index_ranges
p7347
sg14
(lp7348
(icodemend.demo.code_suggest
Element
p7349
(dp7350
g10
I0
sg11
S'returns nx2 numpy.ndarray with each row the start and stop indices for slices of the compressed numpy.ndarray corresponding to each of n uninterrupted runs of unmasked values . if optional argument compressed is false , it returns the start and stop indices into the original numpy.ndarray , not the compressed numpy.ndarray . returns none if there are no unmasked values .'
p7351
sg12
Vunmasked_index_ranges.N
p7352
sg14
(lp7353
sg2
S'N'
sba(icodemend.demo.code_suggest
Element
p7354
(dp7355
g10
I0
sg11
S'returns nx2 numpy.ndarray with each row the start and stop indices for slices of the compressed numpy.ndarray corresponding to each of n uninterrupted runs of unmasked values . if optional argument compressed is false , it returns the start and stop indices into the original numpy.ndarray , not the compressed numpy.ndarray . returns none if there are no unmasked values .'
p7356
sg12
Vunmasked_index_ranges.compressed
p7357
sg14
(lp7358
sg2
S'compressed'
p7359
sba(icodemend.demo.code_suggest
Element
p7360
(dp7361
g10
I0
sg11
S'mask will be flattened if it is not already 1-d .|||find index ranges where mask is false .'
p7362
sg12
Vunmasked_index_ranges.mask
p7363
sg14
(lp7364
sg2
S'mask'
p7365
sbasg2
g7343
sbs(S'broken_barh'
p7366
S'sizes'
p7367
tp7368
(icodemend.demo.code_suggest
Element
p7369
(dp7370
g10
I0
sg11
S'set the sizes of each member of the collection .'
p7371
sg12
Vbroken_barh.sizes
p7372
sg14
(lp7373
sg2
g7367
sbs(S'identity'
p7374
S'r'
tp7375
(icodemend.demo.code_suggest
Element
p7376
(dp7377
g10
I0
sg11
S'returns the identity matrix of shape ( n , n , ... , n ) ( rank r ) .'
p7378
sg12
Videntity.r
p7379
sg14
(lp7380
sg2
S'r'
sbs(g139
g140
g1642
tp7381
g1638
sS'get_xticklabels'
p7382
(icodemend.demo.code_suggest
Element
p7383
(dp7384
g10
I40
sg11
S'get the x tick labels as a list of text instances .'
p7385
sg12
Vget_xticklabels
p7386
sg14
(lp7387
(icodemend.demo.code_suggest
Element
p7388
(dp7389
g10
I0
sg11
S'if true return the minor ticklabels , else return the major ticklabels'
p7390
sg12
Vget_xticklabels.minor
p7391
sg14
(lp7392
sg2
S'minor'
p7393
sbag3133
asg2
g7382
sbs(S'barbs'
p7394
S'xticks'
p7395
tp7396
(icodemend.demo.code_suggest
Element
p7397
(dp7398
g10
I0
sg11
S'set the x ticks with list of ticks'
p7399
sg12
Vbarbs.xticks
p7400
sg14
(lp7401
sg2
g7395
sbsS'axes'
p7402
(icodemend.demo.code_suggest
Element
p7403
(dp7404
g10
I224
sg11
S'add an axes to the figure .'
p7405
sg12
Vaxes
p7406
sg14
(lp7407
(icodemend.demo.code_suggest
Element
p7408
(dp7409
g10
I0
sg11
S'the axes is added at position rect specified by :'
p7410
sg12
Vaxes.rect
p7411
sg14
(lp7412
sg2
S'rect'
p7413
sbasg2
g7402
sbs(S'angle_spectrum'
p7414
S'solid_joinstyle'
p7415
tp7416
(icodemend.demo.code_suggest
Element
p7417
(dp7418
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p7419
sg12
Vangle_spectrum.solid_joinstyle
p7420
sg14
(lp7421
sg2
g7415
sbs(S'axhspan'
p7422
S'agg_filter'
p7423
tp7424
(icodemend.demo.code_suggest
Element
p7425
(dp7426
g10
I0
sg11
S'set agg_filter fuction .'
p7427
sg12
Vaxhspan.agg_filter
p7428
sg14
(lp7429
sg2
g7423
sbs(S'candlestick_ochl'
p7430
S'colorup'
p7431
tp7432
(icodemend.demo.code_suggest
Element
p7433
(dp7434
g10
I0
sg11
S'the color of the rectangle where close > = open'
p7435
sg12
Vcandlestick_ochl.colorup
p7436
sg14
(lp7437
sg2
g7431
sbs(S'csd'
p7438
S'markerfacecoloralt'
p7439
tp7440
(icodemend.demo.code_suggest
Element
p7441
(dp7442
g10
I0
sg11
S'set the alternate marker face color .'
p7443
sg12
Vcsd.markerfacecoloralt
p7444
sg14
(lp7445
sg2
g7439
sbs(g93
g161
S'(0.8, 0.92)'
p7446
tp7447
(icodemend.demo.code_suggest
Element
p7448
(dp7449
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/8, 0/92)
p7450
sg14
(lp7451
sg2
g7446
sbs(g252
S'prop'
p7452
S"{'size': axisLabelFontSize}"
p7453
tp7454
(icodemend.demo.code_suggest
Element
p7455
(dp7456
g10
I1
sg11
S''
sg12
Vlegend.prop.{'size': axisLabelFontSize}
p7457
sg14
(lp7458
sg2
g7453
sbs(g16
g132
S"'red'"
p7459
tp7460
(icodemend.demo.code_suggest
Element
p7461
(dp7462
g10
I9
sg11
S''
sg12
Vbar.color.'red'
p7463
sg14
(lp7464
sg2
g7459
sbs(g5673
g132
S'U'
tp7465
(icodemend.demo.code_suggest
Element
p7466
(dp7467
g10
I1
sg11
S''
sg12
Vstreamplot.color.U
p7468
sg14
(lp7469
sg2
S'U'
sbs(S'barbs'
p7470
S'linewidth'
p7471
tp7472
(icodemend.demo.code_suggest
Element
p7473
(dp7474
g10
I0
sg11
S'set the linewidth(s ) for the collection .'
p7475
sg12
Vbarbs.linewidth
p7476
sg14
(lp7477
sg2
g7471
sbs(g101
S's'
S'[5, 50, 500, 1000, 1500, 2000]'
p7478
tp7479
(icodemend.demo.code_suggest
Element
p7480
(dp7481
g10
I1
sg11
S''
sg12
Vscatter.s.[5, 50, 500, 1000, 1500, 2000]
p7482
sg14
(lp7483
sg2
g7478
sbs(S'hexbin'
p7484
g325
g325
tp7485
(icodemend.demo.code_suggest
Element
p7486
(dp7487
g10
I2
sg11
S''
sg12
Vhexbin.cmap.cmap
p7488
sg14
(lp7489
sg2
g325
sbs(g16
g132
S'colours'
p7490
tp7491
(icodemend.demo.code_suggest
Element
p7492
(dp7493
g10
I1
sg11
S''
sg12
Vbar.color.colours
p7494
sg14
(lp7495
sg2
g7490
sbs(S'psd'
p7496
S'rasterized'
p7497
tp7498
(icodemend.demo.code_suggest
Element
p7499
(dp7500
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p7501
sg12
Vpsd.rasterized
p7502
sg14
(lp7503
sg2
g7497
sbs(S'set_title'
p7504
S'rotation_mode'
p7505
tp7506
(icodemend.demo.code_suggest
Element
p7507
(dp7508
g10
I0
sg11
S'set text rotation mode .'
p7509
sg12
Vset_title.rotation_mode
p7510
sg14
(lp7511
sg2
g7505
sbs(g16
g132
S"'0.5'"
p7512
tp7513
(icodemend.demo.code_suggest
Element
p7514
(dp7515
g10
I1
sg11
S''
sg12
Vbar.color.'0/5'
p7516
sg14
(lp7517
sg2
g7512
sbs(S'scatter'
p7518
S's'
tp7519
(icodemend.demo.code_suggest
Element
p7520
(dp7521
g10
I282
sg11
S'size in points^2 .'
p7522
sg12
Vscatter.s
p7523
sg14
(lp7524
(icodemend.demo.code_suggest
Element
p7525
(dp7526
g10
I30
sg11
S''
sg12
Vscatter.s.20
p7527
sg14
(lp7528
sg2
S'20'
p7529
sba(icodemend.demo.code_suggest
Element
p7530
(dp7531
g10
I26
sg11
S''
sg12
Vscatter.s.100
p7532
sg14
(lp7533
sg2
S'100'
p7534
sba(icodemend.demo.code_suggest
Element
p7535
(dp7536
g10
I19
sg11
S''
sg12
Vscatter.s.50
p7537
sg14
(lp7538
sg2
S'50'
p7539
sba(icodemend.demo.code_suggest
Element
p7540
(dp7541
g10
I12
sg11
S''
sg12
Vscatter.s.200
p7542
sg14
(lp7543
sg2
S'200'
p7544
sba(icodemend.demo.code_suggest
Element
p7545
(dp7546
g10
I11
sg11
S''
sg12
Vscatter.s.500
p7547
sg14
(lp7548
sg2
S'500'
p7549
sba(icodemend.demo.code_suggest
Element
p7550
(dp7551
g10
I10
sg11
S''
sg12
Vscatter.s.10
p7552
sg14
(lp7553
sg2
S'10'
p7554
sba(icodemend.demo.code_suggest
Element
p7555
(dp7556
g10
I9
sg11
S''
sg12
Vscatter.s.1
p7557
sg14
(lp7558
sg2
S'1'
sbag6280
a(icodemend.demo.code_suggest
Element
p7559
(dp7560
g10
I9
sg11
S''
sg12
Vscatter.s.60
p7561
sg14
(lp7562
sg2
S'60'
p7563
sba(icodemend.demo.code_suggest
Element
p7564
(dp7565
g10
I8
sg11
S''
sg12
Vscatter.s.15
p7566
sg14
(lp7567
sg2
S'15'
p7568
sba(icodemend.demo.code_suggest
Element
p7569
(dp7570
g10
I8
sg11
S''
sg12
Vscatter.s.30
p7571
sg14
(lp7572
sg2
S'30'
p7573
sba(icodemend.demo.code_suggest
Element
p7574
(dp7575
g10
I8
sg11
S''
sg12
Vscatter.s.40
p7576
sg14
(lp7577
sg2
S'40'
p7578
sba(icodemend.demo.code_suggest
Element
p7579
(dp7580
g10
I7
sg11
S''
sg12
Vscatter.s.5
p7581
sg14
(lp7582
sg2
S'5'
sba(icodemend.demo.code_suggest
Element
p7583
(dp7584
g10
I7
sg11
S''
sg12
Vscatter.s.s
p7585
sg14
(lp7586
sg2
S's'
sba(icodemend.demo.code_suggest
Element
p7587
(dp7588
g10
I7
sg11
S''
sg12
Vscatter.s.size
p7589
sg14
(lp7590
sg2
g627
sba(icodemend.demo.code_suggest
Element
p7591
(dp7592
g10
I6
sg11
S''
sg12
Vscatter.s.130
p7593
sg14
(lp7594
sg2
S'130'
p7595
sba(icodemend.demo.code_suggest
Element
p7596
(dp7597
g10
I4
sg11
S''
sg12
Vscatter.s.120
p7598
sg14
(lp7599
sg2
S'120'
p7600
sba(icodemend.demo.code_suggest
Element
p7601
(dp7602
g10
I4
sg11
S''
sg12
Vscatter.s.35
p7603
sg14
(lp7604
sg2
S'35'
p7605
sba(icodemend.demo.code_suggest
Element
p7606
(dp7607
g10
I3
sg11
S''
sg12
Vscatter.s.100/0
p7608
sg14
(lp7609
sg2
S'100.0'
p7610
sba(icodemend.demo.code_suggest
Element
p7611
(dp7612
g10
I3
sg11
S''
sg12
Vscatter.s.r
p7613
sg14
(lp7614
sg2
S'r'
sba(icodemend.demo.code_suggest
Element
p7615
(dp7616
g10
I2
sg11
S''
sg12
Vscatter.s.0/5
p7617
sg14
(lp7618
sg2
S'0.5'
p7619
sba(icodemend.demo.code_suggest
Element
p7620
(dp7621
g10
I2
sg11
S''
sg12
Vscatter.s.2
p7622
sg14
(lp7623
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p7624
(dp7625
g10
I2
sg11
S''
sg12
Vscatter.s.25
p7626
sg14
(lp7627
sg2
S'25'
p7628
sba(icodemend.demo.code_suggest
Element
p7629
(dp7630
g10
I2
sg11
S''
sg12
Vscatter.s.3
p7631
sg14
(lp7632
sg2
S'3'
sba(icodemend.demo.code_suggest
Element
p7633
(dp7634
g10
I2
sg11
S''
sg12
Vscatter.s.300
p7635
sg14
(lp7636
sg2
S'300'
p7637
sba(icodemend.demo.code_suggest
Element
p7638
(dp7639
g10
I2
sg11
S''
sg12
Vscatter.s.330
p7640
sg14
(lp7641
sg2
S'330'
p7642
sba(icodemend.demo.code_suggest
Element
p7643
(dp7644
g10
I2
sg11
S''
sg12
Vscatter.s.4
p7645
sg14
(lp7646
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p7647
(dp7648
g10
I2
sg11
S''
sg12
Vscatter.s.400
p7649
sg14
(lp7650
sg2
S'400'
p7651
sba(icodemend.demo.code_suggest
Element
p7652
(dp7653
g10
I2
sg11
S''
sg12
Vscatter.s.70
p7654
sg14
(lp7655
sg2
S'70'
p7656
sba(icodemend.demo.code_suggest
Element
p7657
(dp7658
g10
I2
sg11
S''
sg12
Vscatter.s.80
p7659
sg14
(lp7660
sg2
S'80'
p7661
sba(icodemend.demo.code_suggest
Element
p7662
(dp7663
g10
I2
sg11
S''
sg12
Vscatter.s.area
p7664
sg14
(lp7665
sg2
S'area'
p7666
sbag1187
a(icodemend.demo.code_suggest
Element
p7667
(dp7668
g10
I1
sg11
S''
sg12
Vscatter.s.0/6
p7669
sg14
(lp7670
sg2
S'0.6'
p7671
sba(icodemend.demo.code_suggest
Element
p7672
(dp7673
g10
I1
sg11
S''
sg12
Vscatter.s.1000
p7674
sg14
(lp7675
sg2
S'1000'
p7676
sba(icodemend.demo.code_suggest
Element
p7677
(dp7678
g10
I1
sg11
S''
sg12
Vscatter.s.100000
p7679
sg14
(lp7680
sg2
S'100000'
p7681
sba(icodemend.demo.code_suggest
Element
p7682
(dp7683
g10
I1
sg11
S''
sg12
Vscatter.s.15/0
p7684
sg14
(lp7685
sg2
S'15.0'
p7686
sba(icodemend.demo.code_suggest
Element
p7687
(dp7688
g10
I1
sg11
S''
sg12
Vscatter.s.1500
p7689
sg14
(lp7690
sg2
S'1500'
p7691
sba(icodemend.demo.code_suggest
Element
p7692
(dp7693
g10
I1
sg11
S''
sg12
Vscatter.s.160
p7694
sg14
(lp7695
sg2
S'160'
p7696
sba(icodemend.demo.code_suggest
Element
p7697
(dp7698
g10
I1
sg11
S''
sg12
Vscatter.s.175
p7699
sg14
(lp7700
sg2
S'175'
p7701
sba(icodemend.demo.code_suggest
Element
p7702
(dp7703
g10
I1
sg11
S''
sg12
Vscatter.s.200/0
p7704
sg14
(lp7705
sg2
S'200.0'
p7706
sba(icodemend.demo.code_suggest
Element
p7707
(dp7708
g10
I1
sg11
S''
sg12
Vscatter.s.2000
p7709
sg14
(lp7710
sg2
S'2000'
p7711
sba(icodemend.demo.code_suggest
Element
p7712
(dp7713
g10
I1
sg11
S''
sg12
Vscatter.s.25/0
p7714
sg14
(lp7715
sg2
S'25.0'
p7716
sba(icodemend.demo.code_suggest
Element
p7717
(dp7718
g10
I1
sg11
S''
sg12
Vscatter.s.250
p7719
sg14
(lp7720
sg2
S'250'
p7721
sba(icodemend.demo.code_suggest
Element
p7722
(dp7723
g10
I1
sg11
S''
sg12
Vscatter.s.36
p7724
sg14
(lp7725
sg2
S'36'
p7726
sba(icodemend.demo.code_suggest
Element
p7727
(dp7728
g10
I1
sg11
S''
sg12
Vscatter.s.45
p7729
sg14
(lp7730
sg2
S'45'
p7731
sba(icodemend.demo.code_suggest
Element
p7732
(dp7733
g10
I1
sg11
S''
sg12
Vscatter.s.64
p7734
sg14
(lp7735
sg2
S'64'
p7736
sba(icodemend.demo.code_suggest
Element
p7737
(dp7738
g10
I1
sg11
S''
sg12
Vscatter.s.75
p7739
sg14
(lp7740
sg2
S'75'
p7741
sba(icodemend.demo.code_suggest
Element
p7742
(dp7743
g10
I1
sg11
S''
sg12
Vscatter.s.90
p7744
sg14
(lp7745
sg2
S'90'
p7746
sba(icodemend.demo.code_suggest
Element
p7747
(dp7748
g10
I1
sg11
S''
sg12
Vscatter.s.SIZE
p7749
sg14
(lp7750
sg2
S'SIZE'
p7751
sbag7480
a(icodemend.demo.code_suggest
Element
p7752
(dp7753
g10
I1
sg11
S''
sg12
Vscatter.s.arrow_size
p7754
sg14
(lp7755
sg2
S'arrow_size'
p7756
sba(icodemend.demo.code_suggest
Element
p7757
(dp7758
g10
I1
sg11
S''
sg12
Vscatter.s.counts
p7759
sg14
(lp7760
sg2
S'counts'
p7761
sba(icodemend.demo.code_suggest
Element
p7762
(dp7763
g10
I1
sg11
S''
sg12
Vscatter.s.hail_sev
p7764
sg14
(lp7765
sg2
S'hail_sev'
p7766
sba(icodemend.demo.code_suggest
Element
p7767
(dp7768
g10
I1
sg11
S''
sg12
Vscatter.s.lwidths
p7769
sg14
(lp7770
sg2
S'lwidths'
p7771
sba(icodemend.demo.code_suggest
Element
p7772
(dp7773
g10
I1
sg11
S''
sg12
Vscatter.s.marker_size
p7774
sg14
(lp7775
sg2
S'marker_size'
p7776
sba(icodemend.demo.code_suggest
Element
p7777
(dp7778
g10
I1
sg11
S''
sg12
Vscatter.s.size_r
p7779
sg14
(lp7780
sg2
S'size_r'
p7781
sba(icodemend.demo.code_suggest
Element
p7782
(dp7783
g10
I1
sg11
S''
sg12
Vscatter.s.sizes
p7784
sg14
(lp7785
sg2
S'sizes'
p7786
sba(icodemend.demo.code_suggest
Element
p7787
(dp7788
g10
I1
sg11
S''
sg12
Vscatter.s.sz
p7789
sg14
(lp7790
sg2
S'sz'
p7791
sba(icodemend.demo.code_suggest
Element
p7792
(dp7793
g10
I1
sg11
S''
sg12
Vscatter.s.values_scaled
p7794
sg14
(lp7795
sg2
S'values_scaled'
p7796
sba(icodemend.demo.code_suggest
Element
p7797
(dp7798
g10
I1
sg11
S''
sg12
Vscatter.s.volume
p7799
sg14
(lp7800
sg2
S'volume'
p7801
sba(icodemend.demo.code_suggest
Element
p7802
(dp7803
g10
I1
sg11
S''
sg12
Vscatter.s.z1
p7804
sg14
(lp7805
sg2
g454
sbasg2
S's'
sbs(g4998
g5025
S'100.0'
p7806
tp7807
(icodemend.demo.code_suggest
Element
p7808
(dp7809
g10
I2
sg11
S''
sg12
Vpcolormesh.vmax.100/0
p7810
sg14
(lp7811
sg2
g7806
sbs(S'tricontour'
p7812
S'N'
tp7813
g1354
s(S'angle_spectrum'
p7814
S'Fs'
p7815
g7815
tp7816
(icodemend.demo.code_suggest
Element
p7817
(dp7818
g10
I1
sg11
S''
sg12
Vangle_spectrum.Fs.Fs
p7819
sg14
(lp7820
sg2
g7815
sbs(S'annotate'
p7821
S'style'
p7822
tp7823
(icodemend.demo.code_suggest
Element
p7824
(dp7825
g10
I0
sg11
S'set the font style .'
p7826
sg12
Vannotate.style
p7827
sg14
(lp7828
sg2
g7822
sbs(g245
g3075
S'400'
p7829
tp7830
(icodemend.demo.code_suggest
Element
p7831
(dp7832
g10
I1
sg11
S''
sg12
Vfigure.dpi.400
p7833
sg14
(lp7834
sg2
g7829
sbs(S'angle_spectrum'
p7835
S'color'
p7836
tp7837
(icodemend.demo.code_suggest
Element
p7838
(dp7839
g10
I0
sg11
S'set the color of the line'
p7840
sg12
Vangle_spectrum.color
p7841
sg14
(lp7842
sg2
g7836
sbs(g766
g666
g4043
tp7843
g4039
s(g452
g1149
S"'r'"
p7844
tp7845
(icodemend.demo.code_suggest
Element
p7846
(dp7847
g10
I1
sg11
S''
sg12
Verrorbar.ecolor.'r'
p7848
sg14
(lp7849
sg2
g7844
sbs(g117
g2392
S'1'
tp7850
(icodemend.demo.code_suggest
Element
p7851
(dp7852
g10
I21
sg11
S''
sg12
Vplot.linewidth.1
p7853
sg14
(lp7854
sg2
S'1'
sbs(g1170
g1257
S'500'
p7855
tp7856
(icodemend.demo.code_suggest
Element
p7857
(dp7858
g10
I2
sg11
S''
sg12
Vhist.bins.500
p7859
sg14
(lp7860
sg2
g7855
sbs(g101
g110
S"'face'"
p7861
tp7862
(icodemend.demo.code_suggest
Element
p7863
(dp7864
g10
I1
sg11
S''
sg12
Vscatter.edgecolor.'face'
p7865
sg14
(lp7866
sg2
g7861
sbs(S'specgram'
p7867
S'x'
tp7868
(icodemend.demo.code_suggest
Element
p7869
(dp7870
g10
I0
sg11
S'compute and plot a spectrogram of data in x . data are split into nfft length segments and the spectrum of each section is computed . the windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap . the spectrogram is plotted as a colormap ( using imshow ) .'
p7871
sg12
Vspecgram.x
p7872
sg14
(lp7873
sg2
S'x'
sbsS'get_active'
p7874
(icodemend.demo.code_suggest
Element
p7875
(dp7876
g10
I1
sg11
S'get whether the widget is active .'
p7877
sg12
Vget_active
p7878
sg14
(lp7879
sg2
g7874
sbs(g324
g785
S'(0, width, 0, height)'
p7880
tp7881
(icodemend.demo.code_suggest
Element
p7882
(dp7883
g10
I2
sg11
S''
sg12
Vimshow.extent.(0, width, 0, height)
p7884
sg14
(lp7885
sg2
g7880
sbs(S'draw_path_collection'
p7886
S'offset_position'
p7887
tp7888
(icodemend.demo.code_suggest
Element
p7889
(dp7890
g10
I0
sg11
S'draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . the offsets in offsets are first transformed by offsettrans before being applied . offset_position may be either " screen " or " data " depending on the space that the offsets are in .'
p7891
sg12
Vdraw_path_collection.offset_position
p7892
sg14
(lp7893
sg2
g7887
sbs(S'set_xlim'
p7894
g4542
tp7895
g4527
s(g117
g118
S"'Data'"
p7896
tp7897
(icodemend.demo.code_suggest
Element
p7898
(dp7899
g10
I3
sg11
S''
sg12
Vplot.label.'Data'
p7900
sg14
(lp7901
sg2
g7896
sbs(S'render_glyph'
p7902
S'oy'
p7903
tp7904
(icodemend.demo.code_suggest
Element
p7905
(dp7906
g10
I0
sg11
S'draw a glyph described by info to the reference point ( ox , oy ) .'
p7907
sg12
Vrender_glyph.oy
p7908
sg14
(lp7909
sg2
g7903
sbs(g4998
g325
S"'coolwarm'"
p7910
tp7911
(icodemend.demo.code_suggest
Element
p7912
(dp7913
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.'coolwarm'
p7914
sg14
(lp7915
sg2
g7910
sbs(g139
g140
g1697
tp7916
g1693
sS'get_geometry'
p7917
(icodemend.demo.code_suggest
Element
p7918
(dp7919
g10
I0
sg11
S'get the subplot geometry , e.g. , 2,2,3 . get the geometry of the grid , e.g. , 2,3'
p7920
sg12
Vget_geometry
p7921
sg14
(lp7922
sg2
g7917
sbs(g93
g4800
S'(3, 4)'
p7923
tp7924
(icodemend.demo.code_suggest
Element
p7925
(dp7926
g10
I1
sg11
S''
sg12
Vannotate.xytext.(3, 4)
p7927
sg14
(lp7928
sg2
g7923
sbs(S'unmasked_index_ranges'
p7929
g7359
tp7930
g7354
sS'strip_math'
p7931
(icodemend.demo.code_suggest
Element
p7932
(dp7933
g10
I0
sg11
S'remove latex formatting from mathtext'
p7934
sg12
Vstrip_math
p7935
sg14
(lp7936
sg2
g7931
sbsS'get_dashpush'
p7937
(icodemend.demo.code_suggest
Element
p7938
(dp7939
g10
I0
sg11
S'get the extra spacing between the dash and the specified text position , in canvas units .'
p7940
sg12
Vget_dashpush
p7941
sg14
(lp7942
sg2
g7937
sbs(S'hexbin'
p7943
S'xticklabels'
p7944
tp7945
(icodemend.demo.code_suggest
Element
p7946
(dp7947
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p7948
sg12
Vhexbin.xticklabels
p7949
sg14
(lp7950
sg2
g7944
sbs(S'semilogy'
p7951
S'xlabel'
p7952
tp7953
(icodemend.demo.code_suggest
Element
p7954
(dp7955
g10
I0
sg11
S'set the label for the xaxis .'
p7956
sg12
Vsemilogy.xlabel
p7957
sg14
(lp7958
sg2
g7952
sbs(S'mkdirs'
p7959
S'newdir'
p7960
tp7961
(icodemend.demo.code_suggest
Element
p7962
(dp7963
g10
I0
sg11
S'make directory newdir recursively , and set mode . equivalent to'
p7964
sg12
Vmkdirs.newdir
p7965
sg14
(lp7966
sg2
g7960
sbs(S'grid'
p7967
S'snap'
p7968
tp7969
(icodemend.demo.code_suggest
Element
p7970
(dp7971
g10
I0
sg11
S'sets the snap setting which may be'
p7972
sg12
Vgrid.snap
p7973
sg14
(lp7974
sg2
g7968
sbs(S'annotate'
p7975
S'usetex'
p7976
tp7977
(icodemend.demo.code_suggest
Element
p7978
(dp7979
g10
I0
sg11
S'set this text object to render using tex ( or not ) .'
p7980
sg12
Vannotate.usetex
p7981
sg14
(lp7982
sg2
g7976
sbs(S'yscale'
p7983
S'y'
tp7984
(icodemend.demo.code_suggest
Element
p7985
(dp7986
g10
I0
sg11
S'set the scaling of the y - axis .'
p7987
sg12
Vyscale.y
p7988
sg14
(lp7989
sg2
S'y'
sbs(g93
g4800
S'(xpos, length)'
p7990
tp7991
(icodemend.demo.code_suggest
Element
p7992
(dp7993
g10
I1
sg11
S''
sg12
Vannotate.xytext.(xpos, length)
p7994
sg14
(lp7995
sg2
g7990
sbs(g101
S'c'
S'time'
p7996
tp7997
(icodemend.demo.code_suggest
Element
p7998
(dp7999
g10
I2
sg11
S''
sg12
Vscatter.c.time
p8000
sg14
(lp8001
sg2
g7996
sbs(S'angle_spectrum'
p8002
S'prop_cycle'
p8003
tp8004
(icodemend.demo.code_suggest
Element
p8005
(dp8006
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p8007
sg12
Vangle_spectrum.prop_cycle
p8008
sg14
(lp8009
sg2
g8003
sbs(g944
g909
S'10'
p8010
tp8011
(icodemend.demo.code_suggest
Element
p8012
(dp8013
g10
I2
sg11
S''
sg12
Vbarh.zorder.10
p8014
sg14
(lp8015
sg2
g8010
sbs(S'semilogx'
p8016
S'clip_path'
p8017
tp8018
(icodemend.demo.code_suggest
Element
p8019
(dp8020
g10
I0
sg11
S"set the artist 's clip path , which may be"
p8021
sg12
Vsemilogx.clip_path
p8022
sg14
(lp8023
sg2
g8017
sbs(S'tricontour'
p8024
g1347
tp8025
g1337
s(S'plotfile'
p8026
S'newfig'
p8027
tp8028
(icodemend.demo.code_suggest
Element
p8029
(dp8030
g10
I0
sg11
S'if newfig is true , the plot always will be made in a new figure ; if false , it will be made in the current figure if one exists , else in a new figure .'
p8031
sg12
Vplotfile.newfig
p8032
sg14
(lp8033
sg2
g8027
sbs(S'cohere'
p8034
S'color_cycle'
p8035
tp8036
(icodemend.demo.code_suggest
Element
p8037
(dp8038
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p8039
sg12
Vcohere.color_cycle
p8040
sg14
(lp8041
sg2
g8035
sbs(g252
g1010
S"'center left'"
p8042
tp8043
(icodemend.demo.code_suggest
Element
p8044
(dp8045
g10
I15
sg11
S''
sg12
Vlegend.loc.'center left'
p8046
sg14
(lp8047
sg2
g8042
sbsS'get_capstyle'
p8048
(icodemend.demo.code_suggest
Element
p8049
(dp8050
g10
I0
sg11
S"return the current capstyle return the capstyle as a string in ( ' butt ' , ' round ' , ' projecting ' )"
p8051
sg12
Vget_capstyle
p8052
sg14
(lp8053
sg2
g8048
sbs(g324
g325
S"'Greys_r'"
p8054
tp8055
(icodemend.demo.code_suggest
Element
p8056
(dp8057
g10
I1
sg11
S''
sg12
Vimshow.cmap.'Greys_r'
p8058
sg14
(lp8059
sg2
g8054
sbs(S'get_xydata'
p8060
S'xy'
p8061
tp8062
(icodemend.demo.code_suggest
Element
p8063
(dp8064
g10
I0
sg11
S'return the xy data as a nx2 numpy array .'
p8065
sg12
Vget_xydata.xy
p8066
sg14
(lp8067
sg2
g8061
sbs(g5640
S'mappable'
p8068
g8068
tp8069
(icodemend.demo.code_suggest
Element
p8070
(dp8071
g10
I1
sg11
S''
sg12
Vcolorbar.mappable.mappable
p8072
sg14
(lp8073
sg2
g8068
sbs(g5640
g8068
S'pc'
p8074
tp8075
(icodemend.demo.code_suggest
Element
p8076
(dp8077
g10
I1
sg11
S''
sg12
Vcolorbar.mappable.pc
p8078
sg14
(lp8079
sg2
g8074
sbs(g101
g118
S'i'
tp8080
(icodemend.demo.code_suggest
Element
p8081
(dp8082
g10
I2
sg11
S''
sg12
Vscatter.label.i
p8083
sg14
(lp8084
sg2
S'i'
sbsS'on_clicked'
p8085
(icodemend.demo.code_suggest
Element
p8086
(dp8087
g10
I20
sg11
S'when the button is clicked , call func with button label'
p8088
sg12
Von_clicked
p8089
sg14
(lp8090
(icodemend.demo.code_suggest
Element
p8091
(dp8092
g10
I0
sg11
S'when the button is clicked , call func with button label'
p8093
sg12
Von_clicked.func
p8094
sg14
(lp8095
sg2
S'func'
p8096
sbasg2
g8085
sbs(S'text'
p8097
S'aspect'
p8098
tp8099
(icodemend.demo.code_suggest
Element
p8100
(dp8101
g10
I0
sg11
S'aspect'
p8102
sg12
Vtext.aspect
p8103
sg14
(lp8104
sg2
g8098
sbs(S'plotting'
p8105
S'contains'
p8106
tp8107
(icodemend.demo.code_suggest
Element
p8108
(dp8109
g10
I0
sg11
S'replace the contains test used by this artist .'
p8110
sg12
Vplotting.contains
p8111
sg14
(lp8112
sg2
g8106
sbs(S'figtext'
p8113
S's'
tp8114
(icodemend.demo.code_suggest
Element
p8115
(dp8116
g10
I0
sg11
S'text'
p8117
sg12
Vfigtext.s
p8118
sg14
(lp8119
sg2
S's'
sbs(S'evaluate'
p8120
S'points'
p8121
tp8122
(icodemend.demo.code_suggest
Element
p8123
(dp8124
g10
I0
sg11
S'alternatively , a ( # of dimensions , ) vector can be passed in and treated as a single point .'
p8125
sg12
Vevaluate.points
p8126
sg14
(lp8127
sg2
g8121
sbsS'switch_orientation'
p8128
(icodemend.demo.code_suggest
Element
p8129
(dp8130
g10
I0
sg11
S'switch the orientation of the event line , either from vertical to horizontal or vice versus'
p8131
sg12
Vswitch_orientation
p8132
sg14
(lp8133
sg2
g8128
sbs(S'axvspan'
p8134
S'facecolor'
p8135
tp8136
(icodemend.demo.code_suggest
Element
p8137
(dp8138
g10
I11
sg11
S'set the patch face color'
p8139
sg12
Vaxvspan.facecolor
p8140
sg14
(lp8141
(icodemend.demo.code_suggest
Element
p8142
(dp8143
g10
I4
sg11
S''
sg12
Vaxvspan.facecolor.'g'
p8144
sg14
(lp8145
sg2
S"'g'"
p8146
sba(icodemend.demo.code_suggest
Element
p8147
(dp8148
g10
I1
sg11
S''
sg12
Vaxvspan.facecolor.'#FFCC66'
p8149
sg14
(lp8150
sg2
S"'#FFCC66'"
p8151
sba(icodemend.demo.code_suggest
Element
p8152
(dp8153
g10
I1
sg11
S''
sg12
Vaxvspan.facecolor.'0/5'
p8154
sg14
(lp8155
sg2
S"'0.5'"
p8156
sba(icodemend.demo.code_suggest
Element
p8157
(dp8158
g10
I1
sg11
S''
sg12
Vaxvspan.facecolor.'b'
p8159
sg14
(lp8160
sg2
S"'b'"
p8161
sba(icodemend.demo.code_suggest
Element
p8162
(dp8163
g10
I1
sg11
S''
sg12
Vaxvspan.facecolor.'green'
p8164
sg14
(lp8165
sg2
S"'green'"
p8166
sba(icodemend.demo.code_suggest
Element
p8167
(dp8168
g10
I1
sg11
S''
sg12
Vaxvspan.facecolor.'none'
p8169
sg14
(lp8170
sg2
S"'none'"
p8171
sba(icodemend.demo.code_suggest
Element
p8172
(dp8173
g10
I1
sg11
S''
sg12
Vaxvspan.facecolor.'y'
p8174
sg14
(lp8175
sg2
S"'y'"
p8176
sba(icodemend.demo.code_suggest
Element
p8177
(dp8178
g10
I1
sg11
S''
sg12
Vaxvspan.facecolor.(1/0, 0/5, 0/5)
p8179
sg14
(lp8180
sg2
S'(1.0, 0.5, 0.5)'
p8181
sbasg2
g8135
sbs(g324
g785
S'(left, right, bottom, top)'
p8182
tp8183
(icodemend.demo.code_suggest
Element
p8184
(dp8185
g10
I1
sg11
S''
sg12
Vimshow.extent.(left, right, bottom, top)
p8186
sg14
(lp8187
sg2
g8182
sbsS'winter'
p8188
(icodemend.demo.code_suggest
Element
p8189
(dp8190
g10
I1
sg11
S'set the default colormap to winter and apply to current image if any .'
p8191
sg12
Vwinter
p8192
sg14
(lp8193
sg2
g8188
sbs(g6217
g102
g2468
tp8194
g2464
s(S'cohere'
p8195
S'prop_cycle'
p8196
tp8197
(icodemend.demo.code_suggest
Element
p8198
(dp8199
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p8200
sg12
Vcohere.prop_cycle
p8201
sg14
(lp8202
sg2
g8196
sbs(S'semilogx'
p8203
S'y'
tp8204
(icodemend.demo.code_suggest
Element
p8205
(dp8206
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .'
p8207
sg12
Vsemilogx.y
p8208
sg14
(lp8209
sg2
S'y'
sbs(g6146
S'fontsize'
p8210
g3061
tp8211
g3057
s(S'rec2txt'
p8212
S'header'
p8213
tp8214
(icodemend.demo.code_suggest
Element
p8215
(dp8216
g10
I0
sg11
S'header : list of column headers'
p8217
sg12
Vrec2txt.header
p8218
sg14
(lp8219
sg2
g8213
sbs(g93
g4800
S'(0.25, 0.35)'
p8220
tp8221
(icodemend.demo.code_suggest
Element
p8222
(dp8223
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0/25, 0/35)
p8224
sg14
(lp8225
sg2
g8220
sbs(S'semilogy'
p8226
S'anchor'
p8227
tp8228
(icodemend.demo.code_suggest
Element
p8229
(dp8230
g10
I0
sg11
S'anchor'
p8231
sg12
Vsemilogy.anchor
p8232
sg14
(lp8233
sg2
g8227
sbs(S'phase_spectrum'
p8234
S'aspect'
p8235
tp8236
(icodemend.demo.code_suggest
Element
p8237
(dp8238
g10
I0
sg11
S'aspect'
p8239
sg12
Vphase_spectrum.aspect
p8240
sg14
(lp8241
sg2
g8235
sbs(g245
g140
S'[12, 4]'
p8242
tp8243
(icodemend.demo.code_suggest
Element
p8244
(dp8245
g10
I1
sg11
S''
sg12
Vfigure.figsize.[12, 4]
p8246
sg14
(lp8247
sg2
g8242
sbsS'set_hatch'
p8248
(icodemend.demo.code_suggest
Element
p8249
(dp8250
g10
I6
sg11
S'set the hatching pattern'
p8251
sg12
Vset_hatch
p8252
sg14
(lp8253
(icodemend.demo.code_suggest
Element
p8254
(dp8255
g10
I0
sg11
S'hatch can be one of :'
p8256
sg12
Vset_hatch.hatch
p8257
sg14
(lp8258
sg2
S'hatch'
p8259
sbasg2
g8248
sbs(g452
g118
S"'data'"
p8260
tp8261
(icodemend.demo.code_suggest
Element
p8262
(dp8263
g10
I1
sg11
S''
sg12
Verrorbar.label.'data'
p8264
sg14
(lp8265
sg2
g8260
sbs(S'axvspan'
p8266
S'facecolor'
p8267
g8181
tp8268
g8177
s(S'axhspan'
p8269
S'alpha'
p8270
tp8271
(icodemend.demo.code_suggest
Element
p8272
(dp8273
g10
I3
sg11
S'set the alpha tranparency of the patch .'
p8274
sg12
Vaxhspan.alpha
p8275
sg14
(lp8276
(icodemend.demo.code_suggest
Element
p8277
(dp8278
g10
I3
sg11
S''
sg12
Vaxhspan.alpha.0/5
p8279
sg14
(lp8280
sg2
S'0.5'
p8281
sbasg2
g8270
sbs(g93
g4800
S'(0, (-8))'
p8282
tp8283
(icodemend.demo.code_suggest
Element
p8284
(dp8285
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0, (-8))
p8286
sg14
(lp8287
sg2
g8282
sbs(S'axvspan'
p8288
S'capstyle'
p8289
tp8290
(icodemend.demo.code_suggest
Element
p8291
(dp8292
g10
I0
sg11
S'set the patch capstyle'
p8293
sg12
Vaxvspan.capstyle
p8294
sg14
(lp8295
sg2
g8289
sbsS'index_bar'
p8296
(icodemend.demo.code_suggest
Element
p8297
(dp8298
g10
I0
sg11
S'add a bar collection graph with height vals ( - 1 is missing ) .'
p8299
sg12
Vindex_bar
p8300
sg14
(lp8301
(icodemend.demo.code_suggest
Element
p8302
(dp8303
g10
I0
sg11
S'bar transparency'
p8304
sg12
Vindex_bar.alpha
p8305
sg14
(lp8306
sg2
S'alpha'
p8307
sba(icodemend.demo.code_suggest
Element
p8308
(dp8309
g10
I0
sg11
S'an axes instance to plot to'
p8310
sg12
Vindex_bar.ax
p8311
sg14
(lp8312
sg2
S'ax'
p8313
sba(icodemend.demo.code_suggest
Element
p8314
(dp8315
g10
I0
sg11
S'the color of the bar edges'
p8316
sg12
Vindex_bar.edgecolor
p8317
sg14
(lp8318
sg2
S'edgecolor'
p8319
sba(icodemend.demo.code_suggest
Element
p8320
(dp8321
g10
I0
sg11
S'the color of the bar face'
p8322
sg12
Vindex_bar.facecolor
p8323
sg14
(lp8324
sg2
S'facecolor'
p8325
sba(icodemend.demo.code_suggest
Element
p8326
(dp8327
g10
I0
sg11
S'a sequence of values'
p8328
sg12
Vindex_bar.vals
p8329
sg14
(lp8330
sg2
S'vals'
p8331
sba(icodemend.demo.code_suggest
Element
p8332
(dp8333
g10
I0
sg11
S'the bar width in points'
p8334
sg12
Vindex_bar.width
p8335
sg14
(lp8336
sg2
S'width'
p8337
sbasg2
g8296
sbs(g93
g161
S'(0.6, (-0.1))'
p8338
tp8339
(icodemend.demo.code_suggest
Element
p8340
(dp8341
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/6, (-0/1))
p8342
sg14
(lp8343
sg2
g8338
sbs(S'plotting'
p8344
S'aspect'
p8345
tp8346
(icodemend.demo.code_suggest
Element
p8347
(dp8348
g10
I0
sg11
S'aspect'
p8349
sg12
Vplotting.aspect
p8350
sg14
(lp8351
sg2
g8345
sbs(g5424
S'axis'
p8352
S"'both'"
p8353
tp8354
(icodemend.demo.code_suggest
Element
p8355
(dp8356
g10
I3
sg11
S''
sg12
Vgrid.axis.'both'
p8357
sg14
(lp8358
sg2
g8353
sbsS'get_sizes'
p8359
(icodemend.demo.code_suggest
Element
p8360
(dp8361
g10
I0
sg11
S'returns the sizes of the elements in the collection .'
p8362
sg12
Vget_sizes
p8363
sg14
(lp8364
sg2
g8359
sbs(S'text'
p8365
S'contains'
p8366
tp8367
(icodemend.demo.code_suggest
Element
p8368
(dp8369
g10
I0
sg11
S'replace the contains test used by this artist .'
p8370
sg12
Vtext.contains
p8371
sg14
(lp8372
sg2
g8366
sbsS'family_escape'
p8373
(icodemend.demo.code_suggest
Element
p8374
(dp8375
g10
I0
sg11
S'sub(repl , string [ , count = 0 ] ) - - > newstring return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl .'
p8376
sg12
Vfamily_escape
p8377
sg14
(lp8378
sg2
g8373
sbs(S'semilogx'
p8379
S'markerfacecolor'
p8380
tp8381
(icodemend.demo.code_suggest
Element
p8382
(dp8383
g10
I0
sg11
S'set the marker face color .'
p8384
sg12
Vsemilogx.markerfacecolor
p8385
sg14
(lp8386
sg2
g8380
sbs(S'stem'
p8387
S'markerline'
p8388
tp8389
(icodemend.demo.code_suggest
Element
p8390
(dp8391
g10
I0
sg11
S'return value is a tuple ( markerline , stemlines , baseline ) .'
p8392
sg12
Vstem.markerline
p8393
sg14
(lp8394
sg2
g8388
sbs(g252
g253
S'(0.5, (-0.05))'
p8395
tp8396
(icodemend.demo.code_suggest
Element
p8397
(dp8398
g10
I2
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/5, (-0/05))
p8399
sg14
(lp8400
sg2
g8395
sbs(S'magnitude_spectrum'
p8401
S'readonly'
p8402
tp8403
(icodemend.demo.code_suggest
Element
p8404
(dp8405
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p8406
sg12
Vmagnitude_spectrum.readonly
p8407
sg14
(lp8408
sg2
g8402
sbs(g332
g5546
S't'
tp8409
(icodemend.demo.code_suggest
Element
p8410
(dp8411
g10
I4
sg11
S''
sg12
Vtext.transform.t
p8412
sg14
(lp8413
sg2
S't'
sbs(g101
g4274
S'_s'
p8414
tp8415
(icodemend.demo.code_suggest
Element
p8416
(dp8417
g10
I1
sg11
S''
sg12
Vscatter.marker._s
p8418
sg14
(lp8419
sg2
g8414
sbsS'plot_day_summary2_ohlc'
p8420
(icodemend.demo.code_suggest
Element
p8421
(dp8422
g10
I0
sg11
S'represent the time , open , high , low , close as a vertical line ranging from low to high .'
p8423
sg12
Vplot_day_summary2_ohlc
p8424
sg14
(lp8425
(icodemend.demo.code_suggest
Element
p8426
(dp8427
g10
I0
sg11
S'represent the time , open , high , low , close as a vertical line ranging from low to high . the left tick is the open and the right tick is the close . opens , highs , lows and closes must have the same length . note : this code assumes if any value open , high , low , close is missing ( - 1 ) they all are missing'
p8428
sg12
Vplot_day_summary2_ohlc.-1
p8429
sg14
(lp8430
sg2
S'-1'
p8431
sba(icodemend.demo.code_suggest
Element
p8432
(dp8433
g10
I0
sg11
S'an axes instance to plot to'
p8434
sg12
Vplot_day_summary2_ohlc.ax
p8435
sg14
(lp8436
sg2
S'ax'
p8437
sba(icodemend.demo.code_suggest
Element
p8438
(dp8439
g10
I0
sg11
S'represent the time , open , high , low , close as a vertical line ranging from low to high . the left tick is the open and the right tick is the close . opens , highs , lows and closes must have the same length . note : this code assumes if any value open , high , low , close is missing ( - 1 ) they all are missing|||sequence of closing values'
p8440
sg12
Vplot_day_summary2_ohlc.closes
p8441
sg14
(lp8442
sg2
S'closes'
p8443
sba(icodemend.demo.code_suggest
Element
p8444
(dp8445
g10
I0
sg11
S'the color of the lines where close < open'
p8446
sg12
Vplot_day_summary2_ohlc.colordown
p8447
sg14
(lp8448
sg2
S'colordown'
p8449
sba(icodemend.demo.code_suggest
Element
p8450
(dp8451
g10
I0
sg11
S'the color of the lines where close > = open'
p8452
sg12
Vplot_day_summary2_ohlc.colorup
p8453
sg14
(lp8454
sg2
S'colorup'
p8455
sbag2387
a(icodemend.demo.code_suggest
Element
p8456
(dp8457
g10
I0
sg11
S'sequence of low values|||represent the time , open , high , low , close as a vertical line ranging from low to high . the left tick is the open and the right tick is the close . opens , highs , lows and closes must have the same length . note : this code assumes if any value open , high , low , close is missing ( - 1 ) they all are missing'
p8458
sg12
Vplot_day_summary2_ohlc.lows
p8459
sg14
(lp8460
sg2
S'lows'
p8461
sba(icodemend.demo.code_suggest
Element
p8462
(dp8463
g10
I0
sg11
S'represent the time , open , high , low , close as a vertical line ranging from low to high . the left tick is the open and the right tick is the close . opens , highs , lows and closes must have the same length . note : this code assumes if any value open , high , low , close is missing ( - 1 ) they all are missing|||sequence of opening values'
p8464
sg12
Vplot_day_summary2_ohlc.opens
p8465
sg14
(lp8466
sg2
S'opens'
p8467
sba(icodemend.demo.code_suggest
Element
p8468
(dp8469
g10
I0
sg11
S'size of open and close ticks in points'
p8470
sg12
Vplot_day_summary2_ohlc.ticksize
p8471
sg14
(lp8472
sg2
S'ticksize'
p8473
sbasg2
g8420
sbs(S'add_axes'
p8474
S'hatch'
p8475
tp8476
(icodemend.demo.code_suggest
Element
p8477
(dp8478
g10
I0
sg11
S'set the hatching pattern'
p8479
sg12
Vadd_axes.hatch
p8480
sg14
(lp8481
sg2
g8475
sbs(S'plot'
p8482
S'aspect'
p8483
tp8484
(icodemend.demo.code_suggest
Element
p8485
(dp8486
g10
I0
sg11
S'aspect'
p8487
sg12
Vplot.aspect
p8488
sg14
(lp8489
sg2
g8483
sbsS'remove_rubberband'
p8490
(icodemend.demo.code_suggest
Element
p8491
(dp8492
g10
I0
sg11
S'remove rubberband remove the rubberband'
p8493
sg12
Vremove_rubberband
p8494
sg14
(lp8495
sg2
g8490
sbs(S'magnitude_spectrum'
p8496
S'transform'
p8497
tp8498
(icodemend.demo.code_suggest
Element
p8499
(dp8500
g10
I0
sg11
S'set the transformation instance used by this artist'
p8501
sg12
Vmagnitude_spectrum.transform
p8502
sg14
(lp8503
sg2
g8497
sbsS'flipy'
p8504
(icodemend.demo.code_suggest
Element
p8505
(dp8506
g10
I0
sg11
S'return true if y small numbers are top for renderer is used for drawing text ( matplotlib.text ) and images ( matplotlib.image ) only'
p8507
sg12
Vflipy
p8508
sg14
(lp8509
sg2
g8504
sbs(S'entropy'
p8510
S'bins'
p8511
tp8512
(icodemend.demo.code_suggest
Element
p8513
(dp8514
g10
I0
sg11
S'where is the probability of observing y in the bin of bins . bins can be a number of bins or a range of bins ; see numpy.histogram ( ) .'
p8515
sg12
Ventropy.bins
p8516
sg14
(lp8517
sg2
g8511
sbs(S'to_rgb'
p8518
S'arg'
p8519
tp8520
(icodemend.demo.code_suggest
Element
p8521
(dp8522
g10
I0
sg11
S'if arg is rgba , the a will simply be discarded .|||arg can be an rgb or rgba sequence or a string in any of several forms :'
p8523
sg12
Vto_rgb.arg
p8524
sg14
(lp8525
sg2
g8519
sbsS'disconnect'
p8526
(icodemend.demo.code_suggest
Element
p8527
(dp8528
g10
I1
sg11
S'remove the observer with connection id cid'
p8529
sg12
Vdisconnect
p8530
sg14
(lp8531
(icodemend.demo.code_suggest
Element
p8532
(dp8533
g10
I0
sg11
S'remove the observer with connection id cid'
p8534
sg12
Vdisconnect.cid
p8535
sg14
(lp8536
sg2
S'cid'
p8537
sbasg2
g8526
sbs(g101
S'edgecolors'
p8538
S"'r'"
p8539
tp8540
(icodemend.demo.code_suggest
Element
p8541
(dp8542
g10
I2
sg11
S''
sg12
Vscatter.edgecolors.'r'
p8543
sg14
(lp8544
sg2
g8539
sbs(g4371
S'linewidths'
p8545
S'4'
tp8546
g1066
s(S'pie'
p8547
S'labels'
p8548
S'data'
p8549
tp8550
(icodemend.demo.code_suggest
Element
p8551
(dp8552
g10
I2
sg11
S''
sg12
Vpie.labels.data
p8553
sg14
(lp8554
sg2
g8549
sbs(g421
g909
S'1'
tp8555
(icodemend.demo.code_suggest
Element
p8556
(dp8557
g10
I1
sg11
S''
sg12
Vfill.zorder.1
p8558
sg14
(lp8559
sg2
S'1'
sbsS'set_dash_capstyle'
p8560
(icodemend.demo.code_suggest
Element
p8561
(dp8562
g10
I0
sg11
S'set the cap style for dashed linestyles'
p8563
sg12
Vset_dash_capstyle
p8564
sg14
(lp8565
sg2
g8560
sbs(g332
g333
g333
tp8566
(icodemend.demo.code_suggest
Element
p8567
(dp8568
g10
I4
sg11
S''
sg12
Vtext.bbox.bbox
p8569
sg14
(lp8570
sg2
g333
sbs(S'eventplot'
p8571
S'linestyle'
p8572
tp8573
(icodemend.demo.code_suggest
Element
p8574
(dp8575
g10
I0
sg11
S'set the patch linestyle|||set the linestyle(s ) for the collection .'
p8576
sg12
Veventplot.linestyle
p8577
sg14
(lp8578
sg2
g8572
sbs(S'axvspan'
p8579
S'yticklabels'
p8580
tp8581
(icodemend.demo.code_suggest
Element
p8582
(dp8583
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p8584
sg12
Vaxvspan.yticklabels
p8585
sg14
(lp8586
sg2
g8580
sbs(g4371
g4833
S"['solid', 'dashed']"
p8587
tp8588
(icodemend.demo.code_suggest
Element
p8589
(dp8590
g10
I1
sg11
S''
sg12
Vcontour.linestyles.['solid', 'dashed']
p8591
sg14
(lp8592
sg2
g8587
sbs(g5975
g118
S"'response times'"
p8593
tp8594
(icodemend.demo.code_suggest
Element
p8595
(dp8596
g10
I1
sg11
S''
sg12
Vplot_date.label.'response times'
p8597
sg14
(lp8598
sg2
g8593
sbs(S'axvline'
p8599
S'gid'
p8600
tp8601
(icodemend.demo.code_suggest
Element
p8602
(dp8603
g10
I0
sg11
S'sets the ( group ) id for the artist'
p8604
sg12
Vaxvline.gid
p8605
sg14
(lp8606
sg2
g8600
sbs(g1205
S'emit'
p8607
g1944
tp8608
g4593
s(S'cohere'
p8609
S'position'
p8610
tp8611
(icodemend.demo.code_suggest
Element
p8612
(dp8613
g10
I0
sg11
S'set the axes position with'
p8614
sg12
Vcohere.position
p8615
sg14
(lp8616
sg2
g8610
sbs(g139
g140
g1558
tp8617
g1554
s(g139
g140
g1573
tp8618
g1569
s(g117
g118
S"'exp'"
p8619
tp8620
(icodemend.demo.code_suggest
Element
p8621
(dp8622
g10
I1
sg11
S''
sg12
Vplot.label.'exp'
p8623
sg14
(lp8624
sg2
g8619
sbs(g6632
S'animated'
p8625
S'TRUE'
p8626
tp8627
(icodemend.demo.code_suggest
Element
p8628
(dp8629
g10
I1
sg11
S''
sg12
Vadd_subplot.animated.TRUE
p8630
sg14
(lp8631
sg2
g8626
sbs(g117
g118
S"'class1'"
p8632
tp8633
(icodemend.demo.code_suggest
Element
p8634
(dp8635
g10
I2
sg11
S''
sg12
Vplot.label.'class1'
p8636
sg14
(lp8637
sg2
g8632
sbs(S'set_ylim'
p8638
S'y'
tp8639
(icodemend.demo.code_suggest
Element
p8640
(dp8641
g10
I0
sg11
S'note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) . for example , suppose y is depth in the ocean . then one might use :'
p8642
sg12
Vset_ylim.y
p8643
sg14
(lp8644
sg2
S'y'
sbs(S'set_alpha'
p8645
S'alpha'
p8646
tp8647
(icodemend.demo.code_suggest
Element
p8648
(dp8649
g10
I0
sg11
S'set the alpha tranparencies of the collection . alpha must be a float or none .'
p8650
sg12
Vset_alpha.alpha
p8651
sg14
(lp8652
sg2
g8646
sbs(S'phase_spectrum'
p8653
S'markevery'
p8654
tp8655
(icodemend.demo.code_suggest
Element
p8656
(dp8657
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p8658
sg12
Vphase_spectrum.markevery
p8659
sg14
(lp8660
sg2
g8654
sbs(S'set_yticklabels'
p8661
S'label'
p8662
tp8663
(icodemend.demo.code_suggest
Element
p8664
(dp8665
g10
I0
sg11
S'set the label to s for auto legend .'
p8666
sg12
Vset_yticklabels.label
p8667
sg14
(lp8668
sg2
g8662
sbs(g245
g140
S'(12, 5)'
p8669
tp8670
(icodemend.demo.code_suggest
Element
p8671
(dp8672
g10
I2
sg11
S''
sg12
Vfigure.figsize.(12, 5)
p8673
sg14
(lp8674
sg2
g8669
sbs(S'joined'
p8675
S'a'
tp8676
(icodemend.demo.code_suggest
Element
p8677
(dp8678
g10
I0
sg11
S'returns true if a and b are members of the same set .'
p8679
sg12
Vjoined.a
p8680
sg14
(lp8681
sg2
S'a'
sbs(S'tripcolor'
p8682
S'shading'
p8683
S"'gouraud'"
p8684
tp8685
(icodemend.demo.code_suggest
Element
p8686
(dp8687
g10
I1
sg11
S''
sg12
Vtripcolor.shading.'gouraud'
p8688
sg14
(lp8689
sg2
g8684
sbs(S'plot_date'
p8690
S'animated'
p8691
tp8692
(icodemend.demo.code_suggest
Element
p8693
(dp8694
g10
I0
sg11
S"set the artist 's animation state ."
p8695
sg12
Vplot_date.animated
p8696
sg14
(lp8697
sg2
g8691
sbsS'get_recursive_filelist'
p8698
(icodemend.demo.code_suggest
Element
p8699
(dp8700
g10
I0
sg11
S'recurse all the files and dirs in args ignoring symbolic links and return the files as a list of strings'
p8701
sg12
Vget_recursive_filelist
p8702
sg14
(lp8703
(icodemend.demo.code_suggest
Element
p8704
(dp8705
g10
I0
sg11
S'recurse all the files and dirs in args ignoring symbolic links and return the files as a list of strings'
p8706
sg12
Vget_recursive_filelist.args
p8707
sg14
(lp8708
sg2
S'args'
p8709
sbasg2
g8698
sbs(S'hexbin'
p8710
S'clim'
p8711
tp8712
(icodemend.demo.code_suggest
Element
p8713
(dp8714
g10
I0
sg11
S'set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp'
p8715
sg12
Vhexbin.clim
p8716
sg14
(lp8717
sg2
g8711
sbs(S'set_yticks'
p8718
S'False'
p8719
tp8720
(icodemend.demo.code_suggest
Element
p8721
(dp8722
g10
I0
sg11
S'sets the minor ticks if true'
p8723
sg12
Vset_yticks.False
p8724
sg14
(lp8725
sg2
g8719
sbs(g245
g140
S'((width / dpi), (height / dpi))'
p8726
tp8727
(icodemend.demo.code_suggest
Element
p8728
(dp8729
g10
I1
sg11
S''
sg12
Vfigure.figsize.((width / dpi), (height / dpi))
p8730
sg14
(lp8731
sg2
g8726
sbs(S'annotate'
p8732
S'zorder'
p8733
tp8734
(icodemend.demo.code_suggest
Element
p8735
(dp8736
g10
I4
sg11
S'set the zorder for the artist .'
p8737
sg12
Vannotate.zorder
p8738
sg14
(lp8739
(icodemend.demo.code_suggest
Element
p8740
(dp8741
g10
I2
sg11
S''
sg12
Vannotate.zorder.100
p8742
sg14
(lp8743
sg2
S'100'
p8744
sba(icodemend.demo.code_suggest
Element
p8745
(dp8746
g10
I1
sg11
S''
sg12
Vannotate.zorder.10
p8747
sg14
(lp8748
sg2
S'10'
p8749
sba(icodemend.demo.code_suggest
Element
p8750
(dp8751
g10
I1
sg11
S''
sg12
Vannotate.zorder.9
p8752
sg14
(lp8753
sg2
S'9'
sbasg2
g8733
sbsS'set_orientation'
p8754
(icodemend.demo.code_suggest
Element
p8755
(dp8756
g10
I0
sg11
S"set the orientation of the event line [ ' horizontal ' | ' vertical ' | none ] defaults to ' horizontal ' if not specified or none"
p8757
sg12
Vset_orientation
p8758
sg14
(lp8759
sg2
g8754
sbs(S'hexbin'
p8760
S'picker'
p8761
tp8762
(icodemend.demo.code_suggest
Element
p8763
(dp8764
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p8765
sg12
Vhexbin.picker
p8766
sg14
(lp8767
sg2
g8761
sbs(g514
S'clip_on'
p8768
g1944
tp8769
(icodemend.demo.code_suggest
Element
p8770
(dp8771
g10
I1
sg11
S''
sg12
Vpcolor.clip_on.False
p8772
sg14
(lp8773
sg2
g1944
sbs(g101
g4274
S'um'
p8774
tp8775
(icodemend.demo.code_suggest
Element
p8776
(dp8777
g10
I1
sg11
S''
sg12
Vscatter.marker.um
p8778
sg14
(lp8779
sg2
g8774
sbs(g324
S'aspect'
p8780
S'1.5'
p8781
tp8782
(icodemend.demo.code_suggest
Element
p8783
(dp8784
g10
I2
sg11
S''
sg12
Vimshow.aspect.1/5
p8785
sg14
(lp8786
sg2
g8781
sbs(S'show'
p8787
S'block'
p8788
g1944
tp8789
(icodemend.demo.code_suggest
Element
p8790
(dp8791
g10
I13
sg11
S''
sg12
Vshow.block.False
p8792
sg14
(lp8793
sg2
g1944
sbs(g16
g17
S'1'
tp8794
(icodemend.demo.code_suggest
Element
p8795
(dp8796
g10
I12
sg11
S''
sg12
Vbar.width.1
p8797
sg14
(lp8798
sg2
S'1'
sbs(S'csd'
p8799
S'xmargin'
p8800
tp8801
(icodemend.demo.code_suggest
Element
p8802
(dp8803
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p8804
sg12
Vcsd.xmargin
p8805
sg14
(lp8806
sg2
g8800
sbs(S'loglog'
p8807
S'y'
tp8808
(icodemend.demo.code_suggest
Element
p8809
(dp8810
g10
I0
sg11
S'make a plot with log scaling on both the x and y axis .|||plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .'
p8811
sg12
Vloglog.y
p8812
sg14
(lp8813
sg2
S'y'
sbs(g117
S'y'
S"'HEIGHT'"
p8814
tp8815
(icodemend.demo.code_suggest
Element
p8816
(dp8817
g10
I1
sg11
S''
sg12
Vplot.y.'HEIGHT'
p8818
sg14
(lp8819
sg2
g8814
sbsS'writeInfoDict'
p8820
(icodemend.demo.code_suggest
Element
p8821
(dp8822
g10
I0
sg11
S'write out the info dictionary , checking it for good form'
p8823
sg12
VwriteInfoDict
p8824
sg14
(lp8825
sg2
g8820
sbs(S'axhspan'
p8826
S'y'
tp8827
(icodemend.demo.code_suggest
Element
p8828
(dp8829
g10
I0
sg11
S'draw a horizontal span ( rectangle ) from ymin to ymax . with the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . that is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .|||y coords are in data units and x coords are in axes ( relative 0-1 ) units .'
p8830
sg12
Vaxhspan.y
p8831
sg14
(lp8832
sg2
S'y'
sbs(g1170
S'cumulative'
p8833
S'-1'
p8834
tp8835
(icodemend.demo.code_suggest
Element
p8836
(dp8837
g10
I1
sg11
S''
sg12
Vhist.cumulative.-1
p8838
sg14
(lp8839
sg2
g8834
sbs(g101
g325
g865
tp8840
(icodemend.demo.code_suggest
Element
p8841
(dp8842
g10
I1
sg11
S''
sg12
Vscatter.cmap.None
p8843
sg14
(lp8844
sg2
g865
sbs(g117
g118
S"'test'"
p8845
tp8846
(icodemend.demo.code_suggest
Element
p8847
(dp8848
g10
I2
sg11
S''
sg12
Vplot.label.'test'
p8849
sg14
(lp8850
sg2
g8845
sbs(g93
g161
S'(xs[:, i][j], ys[:, i][j])'
p8851
tp8852
(icodemend.demo.code_suggest
Element
p8853
(dp8854
g10
I1
sg11
S''
sg12
Vannotate.xy.(xs[:, i][j], ys[:, i][j])
p8855
sg14
(lp8856
sg2
g8851
sbs(g452
S'errorevery'
p8857
S'3'
tp8858
(icodemend.demo.code_suggest
Element
p8859
(dp8860
g10
I1
sg11
S''
sg12
Verrorbar.errorevery.3
p8861
sg14
(lp8862
sg2
S'3'
sbs(g101
S'c'
S'Z'
tp8863
(icodemend.demo.code_suggest
Element
p8864
(dp8865
g10
I4
sg11
S''
sg12
Vscatter.c.Z
p8866
sg14
(lp8867
sg2
S'Z'
sbs(S'eventplot'
p8868
S'picker'
p8869
tp8870
(icodemend.demo.code_suggest
Element
p8871
(dp8872
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p8873
sg12
Veventplot.picker
p8874
sg14
(lp8875
sg2
g8869
sbs(S'pcolorfast'
p8876
S'nr'
p8877
tp8878
(icodemend.demo.code_suggest
Element
p8879
(dp8880
g10
I0
sg11
S'then x goes from x0 to x1 as the second index of c goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . all cells are rectangles of the same size . this is the fastest version .|||x , y are 1d arrays of length nc + 1 and nr + 1 , respectively , giving the x and y boundaries of the cells . hence the cells are rectangular but the grid may be nonuniform . the speed is intermediate . ( the grid is checked , and if found to be uniform the fast version is used . )|||x and y are 2d arrays with shape ( nr + 1 , nc + 1 ) that specify the ( x,y ) coordinates of the corners of the colored quadrilaterals ; the quadrilateral for c[i,j ] has corners at ( x[i,j],y[i,j ] ) , ( x[i,j+1],y[i,j+1 ] ) , ( x[i+1,j],y[i+1,j ] ) , ( x[i+1,j+1],y[i+1,j+1 ] ) . the cells need not be rectangular . this is the most general , but the slowest to render . it may produce faster and more compact output using ps , pdf , and svg backends , however .'
p8881
sg12
Vpcolorfast.nr
p8882
sg14
(lp8883
sg2
g8877
sbsS'get_frameon'
p8884
(icodemend.demo.code_suggest
Element
p8885
(dp8886
g10
I0
sg11
S'get the boolean indicating frameon'
p8887
sg12
Vget_frameon
p8888
sg14
(lp8889
sg2
g8884
sbs(g958
S'colspan'
p8890
S'2'
tp8891
(icodemend.demo.code_suggest
Element
p8892
(dp8893
g10
I20
sg11
S''
sg12
Vsubplot2grid.colspan.2
p8894
sg14
(lp8895
sg2
S'2'
sbsS'saving'
p8896
(icodemend.demo.code_suggest
Element
p8897
(dp8898
g10
I1
sg11
S'context manager to facilitate writing the movie file .'
p8899
sg12
Vsaving
p8900
sg14
(lp8901
sg2
g8896
sbsS'subplots_adjust'
p8902
(icodemend.demo.code_suggest
Element
p8903
(dp8904
g10
I233
sg11
S'update the subplotparams with kwargs ( defaulting to rc when none ) and update the subplot locations tune the subplot layout .'
p8905
sg12
Vsubplots_adjust
p8906
sg14
(lp8907
sg2
g8902
sbs(S'plotfile'
p8908
S'plotfuncs'
p8909
tp8910
(icodemend.demo.code_suggest
Element
p8911
(dp8912
g10
I0
sg11
S"plotfuncs , if not none , is a dictionary mapping identifier to an axes plotting function as a string . default is ' plot ' , other choices are ' semilogy ' , ' fill ' , ' bar ' , etc. you must use the same type of identifier in the cols vector as you use in the plotfuncs dictionary , e.g. , integer column numbers in both or column names in both . if subplots is false , then including any function such as ' semilogy ' that changes the axis scaling will set the scaling for all columns ."
p8913
sg12
Vplotfile.plotfuncs
p8914
sg14
(lp8915
sg2
g8909
sbs(g139
g140
g1727
tp8916
g1723
s(S'pcolormesh'
p8917
S'gid'
p8918
tp8919
(icodemend.demo.code_suggest
Element
p8920
(dp8921
g10
I0
sg11
S'sets the ( group ) id for the artist'
p8922
sg12
Vpcolormesh.gid
p8923
sg14
(lp8924
sg2
g8918
sbs(g125
g132
S"'green'"
p8925
tp8926
(icodemend.demo.code_suggest
Element
p8927
(dp8928
g10
I2
sg11
S''
sg12
Vaxvline.color.'green'
p8929
sg14
(lp8930
sg2
g8925
sbs(g93
g4800
S'(10, (-5))'
p8931
tp8932
(icodemend.demo.code_suggest
Element
p8933
(dp8934
g10
I1
sg11
S''
sg12
Vannotate.xytext.(10, (-5))
p8935
sg14
(lp8936
sg2
g8931
sbs(g4371
g515
S'newcnorm'
p8937
tp8938
(icodemend.demo.code_suggest
Element
p8939
(dp8940
g10
I1
sg11
S''
sg12
Vcontour.norm.newcnorm
p8941
sg14
(lp8942
sg2
g8937
sbs(S'subplot'
p8943
g966
S"'3d'"
p8944
tp8945
(icodemend.demo.code_suggest
Element
p8946
(dp8947
g10
I10
sg11
S''
sg12
Vsubplot.projection.'3d'
p8948
sg14
(lp8949
sg2
g8944
sbs(S'barh'
p8950
S'axes'
p8951
tp8952
(icodemend.demo.code_suggest
Element
p8953
(dp8954
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p8955
sg12
Vbarh.axes
p8956
sg14
(lp8957
sg2
g8951
sbs(g2182
g785
S'[0, 6, 0, 6]'
p8958
tp8959
(icodemend.demo.code_suggest
Element
p8960
(dp8961
g10
I1
sg11
S''
sg12
Vmatshow.extent.[0, 6, 0, 6]
p8962
sg14
(lp8963
sg2
g8958
sbs(S'csd'
p8964
S'antialiased'
p8965
tp8966
(icodemend.demo.code_suggest
Element
p8967
(dp8968
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p8969
sg12
Vcsd.antialiased
p8970
sg14
(lp8971
sg2
g8965
sbs(S'shade'
p8972
S'fraction'
p8973
tp8974
(icodemend.demo.code_suggest
Element
p8975
(dp8976
g10
I0
sg11
S'increases or decreases the contrast of the hillshade . values greater than one will cause intermediate values to move closer to full illumination or shadow ( and clipping any values that move beyond 0 or 1 ) . note that this is not visually or mathematically the same as vertical exaggeration .'
p8977
sg12
Vshade.fraction
p8978
sg14
(lp8979
sg2
g8973
sbsS'imshow'
p8980
(icodemend.demo.code_suggest
Element
p8981
(dp8982
g10
I887
sg11
S'display an image on the axes .'
p8983
sg12
Vimshow
p8984
sg14
(lp8985
(icodemend.demo.code_suggest
Element
p8986
(dp8987
g10
I359
sg11
S"acceptable values are ' none ' , ' nearest ' , ' bilinear ' , ' bicubic ' , ' spline16 ' , ' spline36 ' , ' hanning ' , ' hamming ' , ' hermite ' , ' kaiser ' , ' quadric ' , ' catrom ' , ' gaussian ' , ' bessel ' , ' mitchell ' , ' sinc ' , ' lanczos '"
p8988
sg12
Vimshow.interpolation
p8989
sg14
(lp8990
(icodemend.demo.code_suggest
Element
p8991
(dp8992
g10
I216
sg11
S''
sg12
Vimshow.interpolation.'nearest'
p8993
sg14
(lp8994
sg2
S"'nearest'"
p8995
sba(icodemend.demo.code_suggest
Element
p8996
(dp8997
g10
I110
sg11
S''
sg12
Vimshow.interpolation.'none'
p8998
sg14
(lp8999
sg2
S"'none'"
p9000
sba(icodemend.demo.code_suggest
Element
p9001
(dp9002
g10
I12
sg11
S''
sg12
Vimshow.interpolation.'bilinear'
p9003
sg14
(lp9004
sg2
S"'bilinear'"
p9005
sba(icodemend.demo.code_suggest
Element
p9006
(dp9007
g10
I4
sg11
S''
sg12
Vimshow.interpolation.'bicubic'
p9008
sg14
(lp9009
sg2
S"'bicubic'"
p9010
sba(icodemend.demo.code_suggest
Element
p9011
(dp9012
g10
I4
sg11
S''
sg12
Vimshow.interpolation.None
p9013
sg14
(lp9014
sg2
g865
sba(icodemend.demo.code_suggest
Element
p9015
(dp9016
g10
I3
sg11
S''
sg12
Vimshow.interpolation.'None'
p9017
sg14
(lp9018
sg2
S"'None'"
p9019
sba(icodemend.demo.code_suggest
Element
p9020
(dp9021
g10
I3
sg11
S''
sg12
Vimshow.interpolation.'gaussian'
p9022
sg14
(lp9023
sg2
S"'gaussian'"
p9024
sba(icodemend.demo.code_suggest
Element
p9025
(dp9026
g10
I2
sg11
S''
sg12
Vimshow.interpolation.'Nearest'
p9027
sg14
(lp9028
sg2
S"'Nearest'"
p9029
sba(icodemend.demo.code_suggest
Element
p9030
(dp9031
g10
I2
sg11
S''
sg12
Vimshow.interpolation.'lanczos'
p9032
sg14
(lp9033
sg2
S"'lanczos'"
p9034
sba(icodemend.demo.code_suggest
Element
p9035
(dp9036
g10
I2
sg11
S''
sg12
Vimshow.interpolation.interp
p9037
sg14
(lp9038
sg2
S'interp'
p9039
sba(icodemend.demo.code_suggest
Element
p9040
(dp9041
g10
I1
sg11
S''
sg12
Vimshow.interpolation.'quadric'
p9042
sg14
(lp9043
sg2
S"'quadric'"
p9044
sbasg2
S'interpolation'
p9045
sba(icodemend.demo.code_suggest
Element
p9046
(dp9047
g10
I347
sg11
S'if none , default to rc image.cmap value . cmap is ignored when x has rgb(a ) information'
p9048
sg12
Vimshow.cmap
p9049
sg14
(lp9050
(icodemend.demo.code_suggest
Element
p9051
(dp9052
g10
I50
sg11
S''
sg12
Vimshow.cmap.cmap
p9053
sg14
(lp9054
sg2
g325
sba(icodemend.demo.code_suggest
Element
p9055
(dp9056
g10
I20
sg11
S''
sg12
Vimshow.cmap.'gray'
p9057
sg14
(lp9058
sg2
S"'gray'"
p9059
sba(icodemend.demo.code_suggest
Element
p9060
(dp9061
g10
I16
sg11
S''
sg12
Vimshow.cmap.'hot'
p9062
sg14
(lp9063
sg2
S"'hot'"
p9064
sba(icodemend.demo.code_suggest
Element
p9065
(dp9066
g10
I13
sg11
S''
sg12
Vimshow.cmap.'jet'
p9067
sg14
(lp9068
sg2
S"'jet'"
p9069
sba(icodemend.demo.code_suggest
Element
p9070
(dp9071
g10
I10
sg11
S''
sg12
Vimshow.cmap.my_cmap
p9072
sg14
(lp9073
sg2
S'my_cmap'
p9074
sba(icodemend.demo.code_suggest
Element
p9075
(dp9076
g10
I6
sg11
S''
sg12
Vimshow.cmap.cmap1
p9077
sg14
(lp9078
sg2
S'cmap1'
p9079
sba(icodemend.demo.code_suggest
Element
p9080
(dp9081
g10
I6
sg11
S''
sg12
Vimshow.cmap.cmap2
p9082
sg14
(lp9083
sg2
S'cmap2'
p9084
sbag6177
a(icodemend.demo.code_suggest
Element
p9085
(dp9086
g10
I4
sg11
S''
sg12
Vimshow.cmap.'spectral'
p9087
sg14
(lp9088
sg2
S"'spectral'"
p9089
sba(icodemend.demo.code_suggest
Element
p9090
(dp9091
g10
I3
sg11
S''
sg12
Vimshow.cmap.cm
p9092
sg14
(lp9093
sg2
S'cm'
p9094
sba(icodemend.demo.code_suggest
Element
p9095
(dp9096
g10
I2
sg11
S''
sg12
Vimshow.cmap.'Blues'
p9097
sg14
(lp9098
sg2
S"'Blues'"
p9099
sba(icodemend.demo.code_suggest
Element
p9100
(dp9101
g10
I2
sg11
S''
sg12
Vimshow.cmap.'RdBu_r'
p9102
sg14
(lp9103
sg2
S"'RdBu_r'"
p9104
sbag328
a(icodemend.demo.code_suggest
Element
p9105
(dp9106
g10
I2
sg11
S''
sg12
Vimshow.cmap.c
p9107
sg14
(lp9108
sg2
S'c'
sba(icodemend.demo.code_suggest
Element
p9109
(dp9110
g10
I2
sg11
S''
sg12
Vimshow.cmap.cmap3
p9111
sg14
(lp9112
sg2
S'cmap3'
p9113
sba(icodemend.demo.code_suggest
Element
p9114
(dp9115
g10
I2
sg11
S''
sg12
Vimshow.cmap.histeq_cmap
p9116
sg14
(lp9117
sg2
S'histeq_cmap'
p9118
sba(icodemend.demo.code_suggest
Element
p9119
(dp9120
g10
I2
sg11
S''
sg12
Vimshow.cmap.new_cmap
p9121
sg14
(lp9122
sg2
S'new_cmap'
p9123
sba(icodemend.demo.code_suggest
Element
p9124
(dp9125
g10
I2
sg11
S''
sg12
Vimshow.cmap.orig_cmap
p9126
sg14
(lp9127
sg2
S'orig_cmap'
p9128
sba(icodemend.demo.code_suggest
Element
p9129
(dp9130
g10
I1
sg11
S''
sg12
Vimshow.cmap.'Greys'
p9131
sg14
(lp9132
sg2
S"'Greys'"
p9133
sbag8056
a(icodemend.demo.code_suggest
Element
p9134
(dp9135
g10
I1
sg11
S''
sg12
Vimshow.cmap.'YlGnBu_r'
p9136
sg14
(lp9137
sg2
S"'YlGnBu_r'"
p9138
sba(icodemend.demo.code_suggest
Element
p9139
(dp9140
g10
I1
sg11
S''
sg12
Vimshow.cmap.'binary_r'
p9141
sg14
(lp9142
sg2
S"'binary_r'"
p9143
sba(icodemend.demo.code_suggest
Element
p9144
(dp9145
g10
I1
sg11
S''
sg12
Vimshow.cmap.'bone'
p9146
sg14
(lp9147
sg2
S"'bone'"
p9148
sba(icodemend.demo.code_suggest
Element
p9149
(dp9150
g10
I1
sg11
S''
sg12
Vimshow.cmap.'bwr'
p9151
sg14
(lp9152
sg2
S"'bwr'"
p9153
sba(icodemend.demo.code_suggest
Element
p9154
(dp9155
g10
I1
sg11
S''
sg12
Vimshow.cmap.'copper'
p9156
sg14
(lp9157
sg2
S"'copper'"
p9158
sba(icodemend.demo.code_suggest
Element
p9159
(dp9160
g10
I1
sg11
S''
sg12
Vimshow.cmap.'cubehelix'
p9161
sg14
(lp9162
sg2
S"'cubehelix'"
p9163
sba(icodemend.demo.code_suggest
Element
p9164
(dp9165
g10
I1
sg11
S''
sg12
Vimshow.cmap.'gist_gray_r'
p9166
sg14
(lp9167
sg2
S"'gist_gray_r'"
p9168
sba(icodemend.demo.code_suggest
Element
p9169
(dp9170
g10
I1
sg11
S''
sg12
Vimshow.cmap.'gnuplot'
p9171
sg14
(lp9172
sg2
S"'gnuplot'"
p9173
sba(icodemend.demo.code_suggest
Element
p9174
(dp9175
g10
I1
sg11
S''
sg12
Vimshow.cmap.'rainbow'
p9176
sg14
(lp9177
sg2
S"'rainbow'"
p9178
sba(icodemend.demo.code_suggest
Element
p9179
(dp9180
g10
I1
sg11
S''
sg12
Vimshow.cmap.Amap
p9181
sg14
(lp9182
sg2
S'Amap'
p9183
sba(icodemend.demo.code_suggest
Element
p9184
(dp9185
g10
I1
sg11
S''
sg12
Vimshow.cmap.Greys
p9186
sg14
(lp9187
sg2
S'Greys'
p9188
sba(icodemend.demo.code_suggest
Element
p9189
(dp9190
g10
I1
sg11
S''
sg12
Vimshow.cmap.None
p9191
sg14
(lp9192
sg2
g865
sba(icodemend.demo.code_suggest
Element
p9193
(dp9194
g10
I1
sg11
S''
sg12
Vimshow.cmap.TEMPE
p9195
sg14
(lp9196
sg2
S'TEMPE'
p9197
sba(icodemend.demo.code_suggest
Element
p9198
(dp9199
g10
I1
sg11
S''
sg12
Vimshow.cmap.cmap4
p9200
sg14
(lp9201
sg2
S'cmap4'
p9202
sba(icodemend.demo.code_suggest
Element
p9203
(dp9204
g10
I1
sg11
S''
sg12
Vimshow.cmap.cmap_custom
p9205
sg14
(lp9206
sg2
S'cmap_custom'
p9207
sba(icodemend.demo.code_suggest
Element
p9208
(dp9209
g10
I1
sg11
S''
sg12
Vimshow.cmap.colmap
p9210
sg14
(lp9211
sg2
S'colmap'
p9212
sba(icodemend.demo.code_suggest
Element
p9213
(dp9214
g10
I1
sg11
S''
sg12
Vimshow.cmap.confmatmap
p9215
sg14
(lp9216
sg2
S'confmatmap'
p9217
sba(icodemend.demo.code_suggest
Element
p9218
(dp9219
g10
I1
sg11
S''
sg12
Vimshow.cmap.custom_cmap
p9220
sg14
(lp9221
sg2
S'custom_cmap'
p9222
sbag2850
a(icodemend.demo.code_suggest
Element
p9223
(dp9224
g10
I1
sg11
S''
sg12
Vimshow.cmap.greys
p9225
sg14
(lp9226
sg2
S'greys'
p9227
sba(icodemend.demo.code_suggest
Element
p9228
(dp9229
g10
I1
sg11
S''
sg12
Vimshow.cmap.jet
p9230
sg14
(lp9231
sg2
S'jet'
p9232
sba(icodemend.demo.code_suggest
Element
p9233
(dp9234
g10
I1
sg11
S''
sg12
Vimshow.cmap.myblue
p9235
sg14
(lp9236
sg2
S'myblue'
p9237
sba(icodemend.demo.code_suggest
Element
p9238
(dp9239
g10
I1
sg11
S''
sg12
Vimshow.cmap.new_map
p9240
sg14
(lp9241
sg2
S'new_map'
p9242
sba(icodemend.demo.code_suggest
Element
p9243
(dp9244
g10
I1
sg11
S''
sg12
Vimshow.cmap.seamap
p9245
sg14
(lp9246
sg2
S'seamap'
p9247
sba(icodemend.demo.code_suggest
Element
p9248
(dp9249
g10
I1
sg11
S''
sg12
Vimshow.cmap.shifted_cmap
p9250
sg14
(lp9251
sg2
S'shifted_cmap'
p9252
sba(icodemend.demo.code_suggest
Element
p9253
(dp9254
g10
I1
sg11
S''
sg12
Vimshow.cmap.shrunk_cmap
p9255
sg14
(lp9256
sg2
S'shrunk_cmap'
p9257
sba(icodemend.demo.code_suggest
Element
p9258
(dp9259
g10
I1
sg11
S''
sg12
Vimshow.cmap.xcm
p9260
sg14
(lp9261
sg2
S'xcm'
p9262
sbasg2
S'cmap'
p9263
sba(icodemend.demo.code_suggest
Element
p9264
(dp9265
g10
I204
sg11
S'the location , in data-coordinates , of the lower-left and upper-right corners . if none , the image is positioned such that the pixel centers fall on zero-based ( row , column ) indices .'
p9266
sg12
Vimshow.extent
p9267
sg14
(lp9268
(icodemend.demo.code_suggest
Element
p9269
(dp9270
g10
I41
sg11
S''
sg12
Vimshow.extent.extent
p9271
sg14
(lp9272
sg2
g785
sba(icodemend.demo.code_suggest
Element
p9273
(dp9274
g10
I9
sg11
S''
sg12
Vimshow.extent.[0, 1, 0, 1]
p9275
sg14
(lp9276
sg2
S'[0, 1, 0, 1]'
p9277
sba(icodemend.demo.code_suggest
Element
p9278
(dp9279
g10
I6
sg11
S''
sg12
Vimshow.extent.[x/min(), x/max(), y/min(), y/max()]
p9280
sg14
(lp9281
sg2
S'[x.min(), x.max(), y.min(), y.max()]'
p9282
sba(icodemend.demo.code_suggest
Element
p9283
(dp9284
g10
I5
sg11
S''
sg12
Vimshow.extent.[xmin, xmax, ymin, ymax]
p9285
sg14
(lp9286
sg2
S'[xmin, xmax, ymin, ymax]'
p9287
sba(icodemend.demo.code_suggest
Element
p9288
(dp9289
g10
I4
sg11
S''
sg12
Vimshow.extent.((-1), 1, (-1), 1)
p9290
sg14
(lp9291
sg2
S'((-1), 1, (-1), 1)'
p9292
sba(icodemend.demo.code_suggest
Element
p9293
(dp9294
g10
I3
sg11
S''
sg12
Vimshow.extent.(x0, x1, y0, y1)
p9295
sg14
(lp9296
sg2
S'(x0, x1, y0, y1)'
p9297
sba(icodemend.demo.code_suggest
Element
p9298
(dp9299
g10
I3
sg11
S''
sg12
Vimshow.extent.[(-3), 3, (-3), 3]
p9300
sg14
(lp9301
sg2
S'[(-3), 3, (-3), 3]'
p9302
sba(icodemend.demo.code_suggest
Element
p9303
(dp9304
g10
I3
sg11
S''
sg12
Vimshow.extent.[0, 100, 0, 1]
p9305
sg14
(lp9306
sg2
S'[0, 100, 0, 1]'
p9307
sba(icodemend.demo.code_suggest
Element
p9308
(dp9309
g10
I3
sg11
S''
sg12
Vimshow.extent.[0, 360, 0, 20]
p9310
sg14
(lp9311
sg2
S'[0, 360, 0, 20]'
p9312
sba(icodemend.demo.code_suggest
Element
p9313
(dp9314
g10
I3
sg11
S''
sg12
Vimshow.extent.[x0, x1, y0, y1]
p9315
sg14
(lp9316
sg2
S'[x0, x1, y0, y1]'
p9317
sba(icodemend.demo.code_suggest
Element
p9318
(dp9319
g10
I2
sg11
S''
sg12
Vimshow.extent.(0, 32, 0, 32)
p9320
sg14
(lp9321
sg2
S'(0, 32, 0, 32)'
p9322
sbag7882
a(icodemend.demo.code_suggest
Element
p9323
(dp9324
g10
I2
sg11
S''
sg12
Vimshow.extent.(1, 15, 0/3, 0/7)
p9325
sg14
(lp9326
sg2
S'(1, 15, 0.3, 0.7)'
p9327
sba(icodemend.demo.code_suggest
Element
p9328
(dp9329
g10
I2
sg11
S''
sg12
Vimshow.extent.(x/min(), x/max(), y/max(), y/min())
p9330
sg14
(lp9331
sg2
S'(x.min(), x.max(), y.max(), y.min())'
p9332
sba(icodemend.demo.code_suggest
Element
p9333
(dp9334
g10
I2
sg11
S''
sg12
Vimshow.extent.(xmin, xmax, ymin, ymax)
p9335
sg14
(lp9336
sg2
S'(xmin, xmax, ymin, ymax)'
p9337
sbag4749
a(icodemend.demo.code_suggest
Element
p9338
(dp9339
g10
I2
sg11
S''
sg12
Vimshow.extent.[(-10), 10, (-10), 10]
p9340
sg14
(lp9341
sg2
S'[(-10), 10, (-10), 10]'
p9342
sba(icodemend.demo.code_suggest
Element
p9343
(dp9344
g10
I2
sg11
S''
sg12
Vimshow.extent.[(-2), 1, (-1/5), 1/5]
p9345
sg14
(lp9346
sg2
S'[(-2), 1, (-1.5), 1.5]'
p9347
sba(icodemend.demo.code_suggest
Element
p9348
(dp9349
g10
I2
sg11
S''
sg12
Vimshow.extent.[(-2), 2, 0, 2]
p9350
sg14
(lp9351
sg2
S'[(-2), 2, 0, 2]'
p9352
sba(icodemend.demo.code_suggest
Element
p9353
(dp9354
g10
I2
sg11
S''
sg12
Vimshow.extent.[(-5), 5, (-5), 5]
p9355
sg14
(lp9356
sg2
S'[(-5), 5, (-5), 5]'
p9357
sba(icodemend.demo.code_suggest
Element
p9358
(dp9359
g10
I2
sg11
S''
sg12
Vimshow.extent.[0, 0/5, 0, 0/5]
p9360
sg14
(lp9361
sg2
S'[0, 0.5, 0, 0.5]'
p9362
sba(icodemend.demo.code_suggest
Element
p9363
(dp9364
g10
I2
sg11
S''
sg12
Vimshow.extent.[0, 800, 1000, 32700]
p9365
sg14
(lp9366
sg2
S'[0, 800, 1000, 32700]'
p9367
sba(icodemend.demo.code_suggest
Element
p9368
(dp9369
g10
I2
sg11
S''
sg12
Vimshow.extent.[0, data/cols, data/rows, 0]
p9370
sg14
(lp9371
sg2
S'[0, data.cols, data.rows, 0]'
p9372
sba(icodemend.demo.code_suggest
Element
p9373
(dp9374
g10
I2
sg11
S''
sg12
Vimshow.extent.[0, z/shape[0], 0, z/shape[1]]
p9375
sg14
(lp9376
sg2
S'[0, z.shape[0], 0, z.shape[1]]'
p9377
sba(icodemend.demo.code_suggest
Element
p9378
(dp9379
g10
I2
sg11
S''
sg12
Vimshow.extent.[10, 20, 10, 20]
p9380
sg14
(lp9381
sg2
S'[10, 20, 10, 20]'
p9382
sba(icodemend.demo.code_suggest
Element
p9383
(dp9384
g10
I2
sg11
S''
sg12
Vimshow.extent.[xedges[0], xedges[(-1)], yedges[0], yedges[(-1)]]
p9385
sg14
(lp9386
sg2
S'[xedges[0], xedges[(-1)], yedges[0], yedges[(-1)]]'
p9387
sba(icodemend.demo.code_suggest
Element
p9388
(dp9389
g10
I1
sg11
S''
sg12
Vimshow.extent.((-1), 25, 0/3, 0/7)
p9390
sg14
(lp9391
sg2
S'((-1), 25, 0.3, 0.7)'
p9392
sba(icodemend.demo.code_suggest
Element
p9393
(dp9394
g10
I1
sg11
S''
sg12
Vimshow.extent.((-2), 2, (-2), 2)
p9395
sg14
(lp9396
sg2
S'((-2), 2, (-2), 2)'
p9397
sba(icodemend.demo.code_suggest
Element
p9398
(dp9399
g10
I1
sg11
S''
sg12
Vimshow.extent.((-3), 3, 3, (-3))
p9400
sg14
(lp9401
sg2
S'((-3), 3, 3, (-3))'
p9402
sba(icodemend.demo.code_suggest
Element
p9403
(dp9404
g10
I1
sg11
S''
sg12
Vimshow.extent.((-5), 25, 0/3, 0/7)
p9405
sg14
(lp9406
sg2
S'((-5), 25, 0.3, 0.7)'
p9407
sba(icodemend.demo.code_suggest
Element
p9408
(dp9409
g10
I1
sg11
S''
sg12
Vimshow.extent.((-5), 5, (-5), 5)
p9410
sg14
(lp9411
sg2
S'((-5), 5, (-5), 5)'
p9412
sba(icodemend.demo.code_suggest
Element
p9413
(dp9414
g10
I1
sg11
S''
sg12
Vimshow.extent.((-50), 50, (-50), 50)
p9415
sg14
(lp9416
sg2
S'((-50), 50, (-50), 50)'
p9417
sba(icodemend.demo.code_suggest
Element
p9418
(dp9419
g10
I1
sg11
S''
sg12
Vimshow.extent.(0, (ydim - 1), (ydim - 1), 0)
p9420
sg14
(lp9421
sg2
S'(0, (ydim - 1), (ydim - 1), 0)'
p9422
sba(icodemend.demo.code_suggest
Element
p9423
(dp9424
g10
I1
sg11
S''
sg12
Vimshow.extent.(0, 1, 1, 0)
p9425
sg14
(lp9426
sg2
S'(0, 1, 1, 0)'
p9427
sba(icodemend.demo.code_suggest
Element
p9428
(dp9429
g10
I1
sg11
S''
sg12
Vimshow.extent.(0, 1, mindate, maxdate)
p9430
sg14
(lp9431
sg2
S'(0, 1, mindate, maxdate)'
p9432
sba(icodemend.demo.code_suggest
Element
p9433
(dp9434
g10
I1
sg11
S''
sg12
Vimshow.extent.(0, 10, 0, 2)
p9435
sg14
(lp9436
sg2
S'(0, 10, 0, 2)'
p9437
sba(icodemend.demo.code_suggest
Element
p9438
(dp9439
g10
I1
sg11
S''
sg12
Vimshow.extent.(0, 10, 2, 6)
p9440
sg14
(lp9441
sg2
S'(0, 10, 2, 6)'
p9442
sba(icodemend.demo.code_suggest
Element
p9443
(dp9444
g10
I1
sg11
S''
sg12
Vimshow.extent.(0, 10/5, 2, 4/7)
p9445
sg14
(lp9446
sg2
S'(0, 10.5, 2, 4.7)'
p9447
sba(icodemend.demo.code_suggest
Element
p9448
(dp9449
g10
I1
sg11
S''
sg12
Vimshow.extent.(0, 100, 0, 1/0)
p9450
sg14
(lp9451
sg2
S'(0, 100, 0, 1.0)'
p9452
sba(icodemend.demo.code_suggest
Element
p9453
(dp9454
g10
I1
sg11
S''
sg12
Vimshow.extent.(0, 1600, 0, 1200)
p9455
sg14
(lp9456
sg2
S'(0, 1600, 0, 1200)'
p9457
sba(icodemend.demo.code_suggest
Element
p9458
(dp9459
g10
I1
sg11
S''
sg12
Vimshow.extent.(0, 5, 0, 2/5)
p9460
sg14
(lp9461
sg2
S'(0, 5, 0, 2.5)'
p9462
sba(icodemend.demo.code_suggest
Element
p9463
(dp9464
g10
I1
sg11
S''
sg12
Vimshow.extent.(0, xaxis, 0, yaxis)
p9465
sg14
(lp9466
sg2
S'(0, xaxis, 0, yaxis)'
p9467
sba(icodemend.demo.code_suggest
Element
p9468
(dp9469
g10
I1
sg11
S''
sg12
Vimshow.extent.(0/5, (numpy/shape(matrix)[0] + 0/5), 0/5, (numpy/shape(matrix)[1] + 0/5))
p9470
sg14
(lp9471
sg2
S'(0.5, (numpy.shape(matrix)[0] + 0.5), 0.5, (numpy.shape(matrix)[1] + 0.5))'
p9472
sba(icodemend.demo.code_suggest
Element
p9473
(dp9474
g10
I1
sg11
S''
sg12
Vimshow.extent.(0/5, 10/5, 0/5, 10/5)
p9475
sg14
(lp9476
sg2
S'(0.5, 10.5, 0.5, 10.5)'
p9477
sba(icodemend.demo.code_suggest
Element
p9478
(dp9479
g10
I1
sg11
S''
sg12
Vimshow.extent.(2, 6, (-1), 1)
p9480
sg14
(lp9481
sg2
S'(2, 6, (-1), 1)'
p9482
sba(icodemend.demo.code_suggest
Element
p9483
(dp9484
g10
I1
sg11
S''
sg12
Vimshow.extent.(4, 4/5746, 42/5448, 43/3791)
p9485
sg14
(lp9486
sg2
S'(4, 4.5746, 42.5448, 43.3791)'
p9487
sba(icodemend.demo.code_suggest
Element
p9488
(dp9489
g10
I1
sg11
S''
sg12
Vimshow.extent.(X/min(), X/max(), Y/min(), Y/max())
p9490
sg14
(lp9491
sg2
S'(X.min(), X.max(), Y.min(), Y.max())'
p9492
sba(icodemend.demo.code_suggest
Element
p9493
(dp9494
g10
I1
sg11
S''
sg12
Vimshow.extent.(ff/min(), ff/max(), AA/min(), AA/max())
p9495
sg14
(lp9496
sg2
S'(ff.min(), ff.max(), AA.min(), AA.max())'
p9497
sbag8184
ag4637
ag788
a(icodemend.demo.code_suggest
Element
p9498
(dp9499
g10
I1
sg11
S''
sg12
Vimshow.extent.(min(x), max(x), min(y), max(y))
p9500
sg14
(lp9501
sg2
S'(min(x), max(x), min(y), max(y))'
p9502
sba(icodemend.demo.code_suggest
Element
p9503
(dp9504
g10
I1
sg11
S''
sg12
Vimshow.extent.(np/amin(x), np/amax(x), np/amin(y), np/amax(y))
p9505
sg14
(lp9506
sg2
S'(np.amin(x), np.amax(x), np.amin(y), np.amax(y))'
p9507
sba(icodemend.demo.code_suggest
Element
p9508
(dp9509
g10
I1
sg11
S''
sg12
Vimshow.extent.(x/min(), x/max(), y/min(), y/max())
p9510
sg14
(lp9511
sg2
S'(x.min(), x.max(), y.min(), y.max())'
p9512
sba(icodemend.demo.code_suggest
Element
p9513
(dp9514
g10
I1
sg11
S''
sg12
Vimshow.extent.(x1/min(), x1/max(), y1/min(), y1/max())
p9515
sg14
(lp9516
sg2
S'(x1.min(), x1.max(), y1.min(), y1.max())'
p9517
sba(icodemend.demo.code_suggest
Element
p9518
(dp9519
g10
I1
sg11
S''
sg12
Vimshow.extent.(xAxis[0], xAxis[(-1)], yAxis[0], yAxis[(-1)])
p9520
sg14
(lp9521
sg2
S'(xAxis[0], xAxis[(-1)], yAxis[0], yAxis[(-1)])'
p9522
sba(icodemend.demo.code_suggest
Element
p9523
(dp9524
g10
I1
sg11
S''
sg12
Vimshow.extent.(x_min, x_max, y_min, y_max)
p9525
sg14
(lp9526
sg2
S'(x_min, x_max, y_min, y_max)'
p9527
sba(icodemend.demo.code_suggest
Element
p9528
(dp9529
g10
I1
sg11
S''
sg12
Vimshow.extent.(xb[0], xb[1], yb[0], yb[1])
p9530
sg14
(lp9531
sg2
S'(xb[0], xb[1], yb[0], yb[1])'
p9532
sba(icodemend.demo.code_suggest
Element
p9533
(dp9534
g10
I1
sg11
S''
sg12
Vimshow.extent.None
p9535
sg14
(lp9536
sg2
g865
sba(icodemend.demo.code_suggest
Element
p9537
(dp9538
g10
I1
sg11
S''
sg12
Vimshow.extent.[(-1), 1, (-1), 1]
p9539
sg14
(lp9540
sg2
S'[(-1), 1, (-1), 1]'
p9541
sba(icodemend.demo.code_suggest
Element
p9542
(dp9543
g10
I1
sg11
S''
sg12
Vimshow.extent.[(-1/9), 1/9, 0, 1]
p9544
sg14
(lp9545
sg2
S'[(-1.9), 1.9, 0, 1]'
p9546
sba(icodemend.demo.code_suggest
Element
p9547
(dp9548
g10
I1
sg11
S''
sg12
Vimshow.extent.[(-100), 100, (-75), 75]
p9549
sg14
(lp9550
sg2
S'[(-100), 100, (-75), 75]'
p9551
sba(icodemend.demo.code_suggest
Element
p9552
(dp9553
g10
I1
sg11
S''
sg12
Vimshow.extent.[(-130), 130, 0, 77]
p9554
sg14
(lp9555
sg2
S'[(-130), 130, 0, 77]'
p9556
sba(icodemend.demo.code_suggest
Element
p9557
(dp9558
g10
I1
sg11
S''
sg12
Vimshow.extent.[(-15), 15, (-110), 0/0]
p9559
sg14
(lp9560
sg2
S'[(-15), 15, (-110), 0.0]'
p9561
sba(icodemend.demo.code_suggest
Element
p9562
(dp9563
g10
I1
sg11
S''
sg12
Vimshow.extent.[(-180), 180, (-90), 90]
p9564
sg14
(lp9565
sg2
S'[(-180), 180, (-90), 90]'
p9566
sba(icodemend.demo.code_suggest
Element
p9567
(dp9568
g10
I1
sg11
S''
sg12
Vimshow.extent.[(-2), 2, (-2), 2]
p9569
sg14
(lp9570
sg2
S'[(-2), 2, (-2), 2]'
p9571
sba(icodemend.demo.code_suggest
Element
p9572
(dp9573
g10
I1
sg11
S''
sg12
Vimshow.extent.[(-2), 2, 0, 3]
p9574
sg14
(lp9575
sg2
S'[(-2), 2, 0, 3]'
p9576
sba(icodemend.demo.code_suggest
Element
p9577
(dp9578
g10
I1
sg11
S''
sg12
Vimshow.extent.[(-2), 4, (-2), 4]
p9579
sg14
(lp9580
sg2
S'[(-2), 4, (-2), 4]'
p9581
sba(icodemend.demo.code_suggest
Element
p9582
(dp9583
g10
I1
sg11
S''
sg12
Vimshow.extent.[(-3), 3, (-10), 10]
p9584
sg14
(lp9585
sg2
S'[(-3), 3, (-10), 10]'
p9586
sba(icodemend.demo.code_suggest
Element
p9587
(dp9588
g10
I1
sg11
S''
sg12
Vimshow.extent.[(-4), 4, (-1), 1]
p9589
sg14
(lp9590
sg2
S'[(-4), 4, (-1), 1]'
p9591
sba(icodemend.demo.code_suggest
Element
p9592
(dp9593
g10
I1
sg11
S''
sg12
Vimshow.extent.[(-4/5), 4/5, 0, 3]
p9594
sg14
(lp9595
sg2
S'[(-4.5), 4.5, 0, 3]'
p9596
sba(icodemend.demo.code_suggest
Element
p9597
(dp9598
g10
I1
sg11
S''
sg12
Vimshow.extent.[(j - w), (j + w), (-4), 4]
p9599
sg14
(lp9600
sg2
S'[(j - w), (j + w), (-4), 4]'
p9601
sba(icodemend.demo.code_suggest
Element
p9602
(dp9603
g10
I1
sg11
S''
sg12
Vimshow.extent.[(min(poro) - EPS), (max(poro) + EPS), (min(sw) - EPS), (max(sw) + EPS)]
p9604
sg14
(lp9605
sg2
S'[(min(poro) - EPS), (max(poro) + EPS), (min(sw) - EPS), (max(sw) + EPS)]'
p9606
sba(icodemend.demo.code_suggest
Element
p9607
(dp9608
g10
I1
sg11
S''
sg12
Vimshow.extent.[(x0 - (dx / 2)), (x1 + (dx / 2)), (w0 - (dw / 2)), (w1 + (dw / 2))]
p9609
sg14
(lp9610
sg2
S'[(x0 - (dx / 2)), (x1 + (dx / 2)), (w0 - (dw / 2)), (w1 + (dw / 2))]'
p9611
sba(icodemend.demo.code_suggest
Element
p9612
(dp9613
g10
I1
sg11
S''
sg12
Vimshow.extent.[(x0 - (dx / 2)), (x1 + (dx / 2)), (y0 - (dy / 2)), (y1 + (dy / 2))]
p9614
sg14
(lp9615
sg2
S'[(x0 - (dx / 2)), (x1 + (dx / 2)), (y0 - (dy / 2)), (y1 + (dy / 2))]'
p9616
sba(icodemend.demo.code_suggest
Element
p9617
(dp9618
g10
I1
sg11
S''
sg12
Vimshow.extent.[0, (1/5 * np/pi), 0, np/pi]
p9619
sg14
(lp9620
sg2
S'[0, (1.5 * np.pi), 0, np.pi]'
p9621
sba(icodemend.demo.code_suggest
Element
p9622
(dp9623
g10
I1
sg11
S''
sg12
Vimshow.extent.[0, 1, bottom, (bottom + scale)]
p9624
sg14
(lp9625
sg2
S'[0, 1, bottom, (bottom + scale)]'
p9626
sba(icodemend.demo.code_suggest
Element
p9627
(dp9628
g10
I1
sg11
S''
sg12
Vimshow.extent.[0, 1/5, 0, 3/78]
p9629
sg14
(lp9630
sg2
S'[0, 1.5, 0, 3.78]'
p9631
sba(icodemend.demo.code_suggest
Element
p9632
(dp9633
g10
I1
sg11
S''
sg12
Vimshow.extent.[0, 10, 0, 10]
p9634
sg14
(lp9635
sg2
S'[0, 10, 0, 10]'
p9636
sba(icodemend.demo.code_suggest
Element
p9637
(dp9638
g10
I1
sg11
S''
sg12
Vimshow.extent.[0, 10/4, 0, 4/2]
p9639
sg14
(lp9640
sg2
S'[0, 10.4, 0, 4.2]'
p9641
sba(icodemend.demo.code_suggest
Element
p9642
(dp9643
g10
I1
sg11
S''
sg12
Vimshow.extent.[0, 3, 0, 2]
p9644
sg14
(lp9645
sg2
S'[0, 3, 0, 2]'
p9646
sba(icodemend.demo.code_suggest
Element
p9647
(dp9648
g10
I1
sg11
S''
sg12
Vimshow.extent.[0, 360, 0, 1]
p9649
sg14
(lp9650
sg2
S'[0, 360, 0, 1]'
p9651
sba(icodemend.demo.code_suggest
Element
p9652
(dp9653
g10
I1
sg11
S''
sg12
Vimshow.extent.[0, 50, 100, 0]
p9654
sg14
(lp9655
sg2
S'[0, 50, 100, 0]'
p9656
sba(icodemend.demo.code_suggest
Element
p9657
(dp9658
g10
I1
sg11
S''
sg12
Vimshow.extent.[0, N, 0, N]
p9659
sg14
(lp9660
sg2
S'[0, N, 0, N]'
p9661
sba(icodemend.demo.code_suggest
Element
p9662
(dp9663
g10
I1
sg11
S''
sg12
Vimshow.extent.[0, classification_mean/cols, classification_mean/rows, 0]
p9664
sg14
(lp9665
sg2
S'[0, classification_mean.cols, classification_mean.rows, 0]'
p9666
sba(icodemend.demo.code_suggest
Element
p9667
(dp9668
g10
I1
sg11
S''
sg12
Vimshow.extent.[0, max(X), 0, max(Y)]
p9669
sg14
(lp9670
sg2
S'[0, max(X), 0, max(Y)]'
p9671
sba(icodemend.demo.code_suggest
Element
p9672
(dp9673
g10
I1
sg11
S''
sg12
Vimshow.extent.[0/0, 0/1, 0/0, 0/1]
p9674
sg14
(lp9675
sg2
S'[0.0, 0.1, 0.0, 0.1]'
p9676
sba(icodemend.demo.code_suggest
Element
p9677
(dp9678
g10
I1
sg11
S''
sg12
Vimshow.extent.[0/3, 0/9, 0/0, 3/5]
p9679
sg14
(lp9680
sg2
S'[0.3, 0.9, 0.0, 3.5]'
p9681
sba(icodemend.demo.code_suggest
Element
p9682
(dp9683
g10
I1
sg11
S''
sg12
Vimshow.extent.[0/5, 1, 0/5, 1]
p9684
sg14
(lp9685
sg2
S'[0.5, 1, 0.5, 1]'
p9686
sba(icodemend.demo.code_suggest
Element
p9687
(dp9688
g10
I1
sg11
S''
sg12
Vimshow.extent.[0/5, 8/0, 1/0, 7/0]
p9689
sg14
(lp9690
sg2
S'[0.5, 8.0, 1.0, 7.0]'
p9691
sba(icodemend.demo.code_suggest
Element
p9692
(dp9693
g10
I1
sg11
S''
sg12
Vimshow.extent.[10, 1000, 0, 1]
p9694
sg14
(lp9695
sg2
S'[10, 1000, 0, 1]'
p9696
sba(icodemend.demo.code_suggest
Element
p9697
(dp9698
g10
I1
sg11
S''
sg12
Vimshow.extent.[100, 103, 100, 102]
p9699
sg14
(lp9700
sg2
S'[100, 103, 100, 102]'
p9701
sba(icodemend.demo.code_suggest
Element
p9702
(dp9703
g10
I1
sg11
S''
sg12
Vimshow.extent.[10000, 10010, 0, 1]
p9704
sg14
(lp9705
sg2
S'[10000, 10010, 0, 1]'
p9706
sba(icodemend.demo.code_suggest
Element
p9707
(dp9708
g10
I1
sg11
S''
sg12
Vimshow.extent.[12, 22, 0, 10]
p9709
sg14
(lp9710
sg2
S'[12, 22, 0, 10]'
p9711
sba(icodemend.demo.code_suggest
Element
p9712
(dp9713
g10
I1
sg11
S''
sg12
Vimshow.extent.[3, 6, 6, 9]
p9714
sg14
(lp9715
sg2
S'[3, 6, 6, 9]'
p9716
sba(icodemend.demo.code_suggest
Element
p9717
(dp9718
g10
I1
sg11
S''
sg12
Vimshow.extent.[35, 75, 0, 16]
p9719
sg14
(lp9720
sg2
S'[35, 75, 0, 16]'
p9721
sba(icodemend.demo.code_suggest
Element
p9722
(dp9723
g10
I1
sg11
S''
sg12
Vimshow.extent.[5, 20, 0/3, 0/8]
p9724
sg14
(lp9725
sg2
S'[5, 20, 0.3, 0.8]'
p9726
sba(icodemend.demo.code_suggest
Element
p9727
(dp9728
g10
I1
sg11
S''
sg12
Vimshow.extent.[80, 120, 32, 0]
p9729
sg14
(lp9730
sg2
S'[80, 120, 32, 0]'
p9731
sba(icodemend.demo.code_suggest
Element
p9732
(dp9733
g10
I1
sg11
S''
sg12
Vimshow.extent.[X/min(), X/max(), Y/min(), Y/max()]
p9734
sg14
(lp9735
sg2
S'[X.min(), X.max(), Y.min(), Y.max()]'
p9736
sba(icodemend.demo.code_suggest
Element
p9737
(dp9738
g10
I1
sg11
S''
sg12
Vimshow.extent.[left, right, bottom, top]
p9739
sg14
(lp9740
sg2
S'[left, right, bottom, top]'
p9741
sba(icodemend.demo.code_suggest
Element
p9742
(dp9743
g10
I1
sg11
S''
sg12
Vimshow.extent.[min(lambd), max(lambd), 0, 1/1]
p9744
sg14
(lp9745
sg2
S'[min(lambd), max(lambd), 0, 1.1]'
p9746
sba(icodemend.demo.code_suggest
Element
p9747
(dp9748
g10
I1
sg11
S''
sg12
Vimshow.extent.[min(x), max(x), min(y), max(y)]
p9749
sg14
(lp9750
sg2
S'[min(x), max(x), min(y), max(y)]'
p9751
sba(icodemend.demo.code_suggest
Element
p9752
(dp9753
g10
I1
sg11
S''
sg12
Vimshow.extent.[min(xlon), max(xlon), min(xlat), max(xlat)]
p9754
sg14
(lp9755
sg2
S'[min(xlon), max(xlon), min(xlat), max(xlat)]'
p9756
sba(icodemend.demo.code_suggest
Element
p9757
(dp9758
g10
I1
sg11
S''
sg12
Vimshow.extent.[np/min(X), np/max(X), np/min(Y), np/max(Y)]
p9759
sg14
(lp9760
sg2
S'[np.min(X), np.max(X), np.min(Y), np.max(Y)]'
p9761
sba(icodemend.demo.code_suggest
Element
p9762
(dp9763
g10
I1
sg11
S''
sg12
Vimshow.extent.[x/min(), x/max(), data/min(), data/max()]
p9764
sg14
(lp9765
sg2
S'[x.min(), x.max(), data.min(), data.max()]'
p9766
sba(icodemend.demo.code_suggest
Element
p9767
(dp9768
g10
I1
sg11
S''
sg12
Vimshow.extent.[x1, x2, y1, y2]
p9769
sg14
(lp9770
sg2
S'[x1, x2, y1, y2]'
p9771
sba(icodemend.demo.code_suggest
Element
p9772
(dp9773
g10
I1
sg11
S''
sg12
Vimshow.extent.[x_lims[0], x_lims[1], y_lims[0], y_lims[1]]
p9774
sg14
(lp9775
sg2
S'[x_lims[0], x_lims[1], y_lims[0], y_lims[1]]'
p9776
sba(icodemend.demo.code_suggest
Element
p9777
(dp9778
g10
I1
sg11
S''
sg12
Vimshow.extent.[xedge[0], xedge[(-1)], yedge[0], yedge[(-1)]]
p9779
sg14
(lp9780
sg2
S'[xedge[0], xedge[(-1)], yedge[0], yedge[(-1)]]'
p9781
sba(icodemend.demo.code_suggest
Element
p9782
(dp9783
g10
I1
sg11
S''
sg12
Vimshow.extent.[xedges/min(), xedges/max(), yedges/min(), yedges/max()]
p9784
sg14
(lp9785
sg2
S'[xedges.min(), xedges.max(), yedges.min(), yedges.max()]'
p9786
sba(icodemend.demo.code_suggest
Element
p9787
(dp9788
g10
I1
sg11
S''
sg12
Vimshow.extent.[xlims[0], xlims[1], ydata/min(), ydata/max()]
p9789
sg14
(lp9790
sg2
S'[xlims[0], xlims[1], ydata.min(), ydata.max()]'
p9791
sba(icodemend.demo.code_suggest
Element
p9792
(dp9793
g10
I1
sg11
S''
sg12
Vimshow.extent.[xx/min(), xx/max(), yy/min(), yy/max()]
p9794
sg14
(lp9795
sg2
S'[xx.min(), xx.max(), yy.min(), yy.max()]'
p9796
sba(icodemend.demo.code_suggest
Element
p9797
(dp9798
g10
I1
sg11
S''
sg12
Vimshow.extent.plotlim
p9799
sg14
(lp9800
sg2
S'plotlim'
p9801
sbasg2
S'extent'
p9802
sba(icodemend.demo.code_suggest
Element
p9803
(dp9804
g10
I122
sg11
S'place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes . if none , default to rc image.origin .'
p9805
sg12
Vimshow.origin
p9806
sg14
(lp9807
(icodemend.demo.code_suggest
Element
p9808
(dp9809
g10
I102
sg11
S''
sg12
Vimshow.origin.'lower'
p9810
sg14
(lp9811
sg2
S"'lower'"
p9812
sba(icodemend.demo.code_suggest
Element
p9813
(dp9814
g10
I8
sg11
S''
sg12
Vimshow.origin.'bottom'
p9815
sg14
(lp9816
sg2
S"'bottom'"
p9817
sbag4080
a(icodemend.demo.code_suggest
Element
p9818
(dp9819
g10
I2
sg11
S''
sg12
Vimshow.origin.'low'
p9820
sg14
(lp9821
sg2
S"'low'"
p9822
sba(icodemend.demo.code_suggest
Element
p9823
(dp9824
g10
I1
sg11
S''
sg12
Vimshow.origin.'centre'
p9825
sg14
(lp9826
sg2
S"'centre'"
p9827
sba(icodemend.demo.code_suggest
Element
p9828
(dp9829
g10
I1
sg11
S''
sg12
Vimshow.origin.None
p9830
sg14
(lp9831
sg2
g865
sbasg2
S'origin'
p9832
sba(icodemend.demo.code_suggest
Element
p9833
(dp9834
g10
I119
sg11
S"if ' auto ' , changes the image aspect ratio to match that of the axes ."
p9835
sg12
Vimshow.aspect
p9836
sg14
(lp9837
(icodemend.demo.code_suggest
Element
p9838
(dp9839
g10
I90
sg11
S''
sg12
Vimshow.aspect.'auto'
p9840
sg14
(lp9841
sg2
S"'auto'"
p9842
sba(icodemend.demo.code_suggest
Element
p9843
(dp9844
g10
I5
sg11
S''
sg12
Vimshow.aspect.'equal'
p9845
sg14
(lp9846
sg2
S"'equal'"
p9847
sba(icodemend.demo.code_suggest
Element
p9848
(dp9849
g10
I4
sg11
S''
sg12
Vimshow.aspect.1
p9850
sg14
(lp9851
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p9852
(dp9853
g10
I3
sg11
S''
sg12
Vimshow.aspect.'normal'
p9854
sg14
(lp9855
sg2
S"'normal'"
p9856
sbag8783
a(icodemend.demo.code_suggest
Element
p9857
(dp9858
g10
I2
sg11
S''
sg12
Vimshow.aspect.aspect
p9859
sg14
(lp9860
sg2
g8780
sba(icodemend.demo.code_suggest
Element
p9861
(dp9862
g10
I1
sg11
S''
sg12
Vimshow.aspect.0/1
p9863
sg14
(lp9864
sg2
S'0.1'
p9865
sba(icodemend.demo.code_suggest
Element
p9866
(dp9867
g10
I1
sg11
S''
sg12
Vimshow.aspect.0/5
p9868
sg14
(lp9869
sg2
S'0.5'
p9870
sba(icodemend.demo.code_suggest
Element
p9871
(dp9872
g10
I1
sg11
S''
sg12
Vimshow.aspect.100
p9873
sg14
(lp9874
sg2
S'100'
p9875
sba(icodemend.demo.code_suggest
Element
p9876
(dp9877
g10
I1
sg11
S''
sg12
Vimshow.aspect.150
p9878
sg14
(lp9879
sg2
S'150'
p9880
sba(icodemend.demo.code_suggest
Element
p9881
(dp9882
g10
I1
sg11
S''
sg12
Vimshow.aspect.2
p9883
sg14
(lp9884
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p9885
(dp9886
g10
I1
sg11
S''
sg12
Vimshow.aspect.4
p9887
sg14
(lp9888
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p9889
(dp9890
g10
I1
sg11
S''
sg12
Vimshow.aspect.6/0
p9891
sg14
(lp9892
sg2
S'6.0'
p9893
sba(icodemend.demo.code_suggest
Element
p9894
(dp9895
g10
I1
sg11
S''
sg12
Vimshow.aspect.None
p9896
sg14
(lp9897
sg2
g865
sbasg2
S'aspect'
p9898
sba(icodemend.demo.code_suggest
Element
p9899
(dp9900
g10
I35
sg11
S'a normalize instance is used to scale luminance data to 0 , 1 . if none , use the default func:normalize . norm is only used if x is an array of floats .'
p9901
sg12
Vimshow.norm
p9902
sg14
(lp9903
(icodemend.demo.code_suggest
Element
p9904
(dp9905
g10
I18
sg11
S''
sg12
Vimshow.norm.norm
p9906
sg14
(lp9907
sg2
g515
sba(icodemend.demo.code_suggest
Element
p9908
(dp9909
g10
I1
sg11
S''
sg12
Vimshow.norm.None
p9910
sg14
(lp9911
sg2
g865
sba(icodemend.demo.code_suggest
Element
p9912
(dp9913
g10
I1
sg11
S''
sg12
Vimshow.norm.log_norm
p9914
sg14
(lp9915
sg2
S'log_norm'
p9916
sba(icodemend.demo.code_suggest
Element
p9917
(dp9918
g10
I1
sg11
S''
sg12
Vimshow.norm.my_norm
p9919
sg14
(lp9920
sg2
S'my_norm'
p9921
sbasg2
S'norm'
p9922
sba(icodemend.demo.code_suggest
Element
p9923
(dp9924
g10
I24
sg11
S'the alpha blending value , between 0 ( transparent ) and 1 ( opaque )'
p9925
sg12
Vimshow.alpha
p9926
sg14
(lp9927
(icodemend.demo.code_suggest
Element
p9928
(dp9929
g10
I8
sg11
S''
sg12
Vimshow.alpha.0/5
p9930
sg14
(lp9931
sg2
S'0.5'
p9932
sba(icodemend.demo.code_suggest
Element
p9933
(dp9934
g10
I5
sg11
S''
sg12
Vimshow.alpha.0/6
p9935
sg14
(lp9936
sg2
S'0.6'
p9937
sba(icodemend.demo.code_suggest
Element
p9938
(dp9939
g10
I3
sg11
S''
sg12
Vimshow.alpha.1
p9940
sg14
(lp9941
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p9942
(dp9943
g10
I2
sg11
S''
sg12
Vimshow.alpha.0/3
p9944
sg14
(lp9945
sg2
S'0.3'
p9946
sba(icodemend.demo.code_suggest
Element
p9947
(dp9948
g10
I2
sg11
S''
sg12
Vimshow.alpha.1/0
p9949
sg14
(lp9950
sg2
S'1.0'
p9951
sba(icodemend.demo.code_suggest
Element
p9952
(dp9953
g10
I1
sg11
S''
sg12
Vimshow.alpha.0/1
p9954
sg14
(lp9955
sg2
S'0.1'
p9956
sba(icodemend.demo.code_suggest
Element
p9957
(dp9958
g10
I1
sg11
S''
sg12
Vimshow.alpha.0/4
p9959
sg14
(lp9960
sg2
S'0.4'
p9961
sba(icodemend.demo.code_suggest
Element
p9962
(dp9963
g10
I1
sg11
S''
sg12
Vimshow.alpha.0/9
p9964
sg14
(lp9965
sg2
S'0.9'
p9966
sba(icodemend.demo.code_suggest
Element
p9967
(dp9968
g10
I1
sg11
S''
sg12
Vimshow.alpha.None
p9969
sg14
(lp9970
sg2
g865
sbasg2
S'alpha'
p9971
sbag5766
a(icodemend.demo.code_suggest
Element
p9972
(dp9973
g10
I0
sg11
S'display the image in x to current axes . x may be a float array , a uint8 array or a pil image . if x is an array , it can have the following shapes :'
p9974
sg12
Vimshow.X
p9975
sg14
(lp9976
sg2
S'X'
sba(icodemend.demo.code_suggest
Element
p9977
(dp9978
g10
I0
sg11
S'replace the contains test used by this artist .'
p9979
sg12
Vimshow.contains
p9980
sg14
(lp9981
sg2
S'contains'
p9982
sba(icodemend.demo.code_suggest
Element
p9983
(dp9984
g10
I0
sg11
S"a parameter for the antigrain image resize filter . from the antigrain documentation , if filternorm = 1 , the filter normalizes integer values and corrects the rounding errors . it does n't do anything with the source floating point values , it corrects only integers according to the rule of 1.0 which means that any sum of pixel weights must be equal to 1.0 . so , the filter function must produce a graph of the proper shape ."
p9985
sg12
Vimshow.filternorm
p9986
sg14
(lp9987
sg2
S'filternorm'
p9988
sba(icodemend.demo.code_suggest
Element
p9989
(dp9990
g10
I0
sg11
S"the filter radius for filters that have a radius parameter , i.e. when interpolation is one of : ' sinc ' , ' lanczos ' or ' blackman '"
p9991
sg12
Vimshow.filterrad
p9992
sg14
(lp9993
sg2
S'filterrad'
p9994
sba(icodemend.demo.code_suggest
Element
p9995
(dp9996
g10
I0
sg11
S'set the label to s for auto legend .'
p9997
sg12
Vimshow.label
p9998
sg14
(lp9999
sg2
S'label'
p10000
sbag5737
a(icodemend.demo.code_suggest
Element
p10001
(dp10002
g10
I0
sg11
S'sets the sketch parameters .'
p10003
sg12
Vimshow.sketch_params
p10004
sg14
(lp10005
sg2
S'sketch_params'
p10006
sbag608
asg2
g8980
sbs(g5640
g5641
S'cax3'
p10007
tp10008
(icodemend.demo.code_suggest
Element
p10009
(dp10010
g10
I2
sg11
S''
sg12
Vcolorbar.cax.cax3
p10011
sg14
(lp10012
sg2
g10007
sbs(S'phase_spectrum'
p10013
g7815
g7815
tp10014
(icodemend.demo.code_suggest
Element
p10015
(dp10016
g10
I1
sg11
S''
sg12
Vphase_spectrum.Fs.Fs
p10017
sg14
(lp10018
sg2
g7815
sbs(g766
g2183
g2183
tp10019
(icodemend.demo.code_suggest
Element
p10020
(dp10021
g10
I3
sg11
S''
sg12
Vcontourf.origin.origin
p10022
sg14
(lp10023
sg2
g2183
sbs(g101
g118
S"'larger'"
p10024
tp10025
(icodemend.demo.code_suggest
Element
p10026
(dp10027
g10
I1
sg11
S''
sg12
Vscatter.label.'larger'
p10028
sg14
(lp10029
sg2
g10024
sbs(g93
g4800
S'(arrow_length, 0)'
p10030
tp10031
(icodemend.demo.code_suggest
Element
p10032
(dp10033
g10
I2
sg11
S''
sg12
Vannotate.xytext.(arrow_length, 0)
p10034
sg14
(lp10035
sg2
g10030
sbs(g93
g161
S'((m - s), p1)'
p10036
tp10037
(icodemend.demo.code_suggest
Element
p10038
(dp10039
g10
I1
sg11
S''
sg12
Vannotate.xy.((m - s), p1)
p10040
sg14
(lp10041
sg2
g10036
sbs(g452
g118
S"'abw_down'"
p10042
tp10043
(icodemend.demo.code_suggest
Element
p10044
(dp10045
g10
I1
sg11
S''
sg12
Verrorbar.label.'abw_down'
p10046
sg14
(lp10047
sg2
g10042
sbs(g101
S'c'
S'BT2'
p10048
tp10049
(icodemend.demo.code_suggest
Element
p10050
(dp10051
g10
I1
sg11
S''
sg12
Vscatter.c.BT2
p10052
sg14
(lp10053
sg2
g10048
sbs(S'table'
p10054
S'yticklabels'
p10055
tp10056
(icodemend.demo.code_suggest
Element
p10057
(dp10058
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p10059
sg12
Vtable.yticklabels
p10060
sg14
(lp10061
sg2
g10055
sbs(S'add_subplot'
p10062
S'picker'
p10063
tp10064
(icodemend.demo.code_suggest
Element
p10065
(dp10066
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p10067
sg12
Vadd_subplot.picker
p10068
sg14
(lp10069
sg2
g10063
sbs(S'axhline'
p10070
g3783
tp10071
g3778
s(S'bxp'
p10072
S'capprops'
p10073
tp10074
(icodemend.demo.code_suggest
Element
p10075
(dp10076
g10
I0
sg11
S'if provided , will set the plotting style of the caps'
p10077
sg12
Vbxp.capprops
p10078
sg14
(lp10079
sg2
g10073
sbs(g452
g453
g7284
tp10080
g7280
s(g324
g785
g9362
tp10081
g9358
s(S'axvspan'
p10082
S'yticks'
p10083
tp10084
(icodemend.demo.code_suggest
Element
p10085
(dp10086
g10
I0
sg11
S'set the y ticks with list of ticks'
p10087
sg12
Vaxvspan.yticks
p10088
sg14
(lp10089
sg2
g10083
sbs(g252
g253
S'(1.0, 0.5)'
p10090
tp10091
(icodemend.demo.code_suggest
Element
p10092
(dp10093
g10
I3
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/0, 0/5)
p10094
sg14
(lp10095
sg2
g10090
sbs(S'onetrue'
p10096
S'seq'
p10097
tp10098
(icodemend.demo.code_suggest
Element
p10099
(dp10100
g10
I0
sg11
S'return true if one element of seq is true . it seq is empty , return false .'
p10101
sg12
Vonetrue.seq
p10102
sg14
(lp10103
sg2
g10097
sbs(g452
g118
S"'Normal'"
p10104
tp10105
(icodemend.demo.code_suggest
Element
p10106
(dp10107
g10
I1
sg11
S''
sg12
Verrorbar.label.'Normal'
p10108
sg14
(lp10109
sg2
g10104
sbs(g421
g110
S"'#348ABD'"
p10110
tp10111
(icodemend.demo.code_suggest
Element
p10112
(dp10113
g10
I1
sg11
S''
sg12
Vfill.edgecolor.'#348ABD'
p10114
sg14
(lp10115
sg2
g10110
sbs(g324
S'interpolation'
p10116
g9044
tp10117
g9040
s(g93
S'verticalalignment'
p10118
S"'top'"
p10119
tp10120
(icodemend.demo.code_suggest
Element
p10121
(dp10122
g10
I7
sg11
S''
sg12
Vannotate.verticalalignment.'top'
p10123
sg14
(lp10124
sg2
g10119
sbs(S'grid'
p10125
S'axis'
p10126
tp10127
(icodemend.demo.code_suggest
Element
p10128
(dp10129
g10
I20
sg11
S"axis can be ' both ' ( default ) , ' x ' , or ' y ' to control which set of gridlines are drawn ."
p10130
sg12
Vgrid.axis
p10131
sg14
(lp10132
(icodemend.demo.code_suggest
Element
p10133
(dp10134
g10
I13
sg11
S''
sg12
Vgrid.axis.'y'
p10135
sg14
(lp10136
sg2
S"'y'"
p10137
sba(icodemend.demo.code_suggest
Element
p10138
(dp10139
g10
I4
sg11
S''
sg12
Vgrid.axis.'x'
p10140
sg14
(lp10141
sg2
S"'x'"
p10142
sbag8355
asg2
g10126
sbs(S'quotes_historical_yahoo_ohlc'
p10143
S'asobject'
p10144
tp10145
(icodemend.demo.code_suggest
Element
p10146
(dp10147
g10
I0
sg11
S'see parse_yahoo_historical ( ) for explanation of output formats and the asobject and adjusted kwargs .'
p10148
sg12
Vquotes_historical_yahoo_ohlc.asobject
p10149
sg14
(lp10150
sg2
g10144
sbs(S'boxplot'
p10151
S'medianprops'
p10152
tp10153
(icodemend.demo.code_suggest
Element
p10154
(dp10155
g10
I1
sg11
S'if provided , will set the plotting style of the medians'
p10156
sg12
Vboxplot.medianprops
p10157
sg14
(lp10158
(icodemend.demo.code_suggest
Element
p10159
(dp10160
g10
I1
sg11
S''
sg12
Vboxplot.medianprops.{'linewidth': 0}
p10161
sg14
(lp10162
sg2
S"{'linewidth': 0}"
p10163
sbasg2
g10152
sbs(g324
g325
g9178
tp10164
g9174
s(S'errorbar'
p10165
S'xuplims'
p10166
tp10167
(icodemend.demo.code_suggest
Element
p10168
(dp10169
g10
I1
sg11
S'these arguments can be used to indicate that a value gives only upper/lower limits . in that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . to use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .'
p10170
sg12
Verrorbar.xuplims
p10171
sg14
(lp10172
(icodemend.demo.code_suggest
Element
p10173
(dp10174
g10
I1
sg11
S''
sg12
Verrorbar.xuplims.False
p10175
sg14
(lp10176
sg2
g1944
sbasg2
g10166
sbs(g252
g1010
S'loca'
p10177
tp10178
(icodemend.demo.code_suggest
Element
p10179
(dp10180
g10
I1
sg11
S''
sg12
Vlegend.loc.loca
p10181
sg14
(lp10182
sg2
g10177
sbs(g117
g102
S'0.1'
p10183
tp10184
(icodemend.demo.code_suggest
Element
p10185
(dp10186
g10
I6
sg11
S''
sg12
Vplot.alpha.0/1
p10187
sg14
(lp10188
sg2
g10183
sbs(g117
g4274
S"'H'"
p10189
tp10190
(icodemend.demo.code_suggest
Element
p10191
(dp10192
g10
I2
sg11
S''
sg12
Vplot.marker.'H'
p10193
sg14
(lp10194
sg2
g10189
sbs(S'eventplot'
p10195
S'xlabel'
p10196
tp10197
(icodemend.demo.code_suggest
Element
p10198
(dp10199
g10
I0
sg11
S'set the label for the xaxis .'
p10200
sg12
Veventplot.xlabel
p10201
sg14
(lp10202
sg2
g10196
sbs(S'add_subplot'
p10203
S'clip_path'
p10204
tp10205
(icodemend.demo.code_suggest
Element
p10206
(dp10207
g10
I0
sg11
S"set the artist 's clip path , which may be"
p10208
sg12
Vadd_subplot.clip_path
p10209
sg14
(lp10210
sg2
g10204
sbs(g1170
S'range'
p10211
g855
tp10212
g851
s(g101
g118
S"'Reversed Greys, default norm'"
p10213
tp10214
(icodemend.demo.code_suggest
Element
p10215
(dp10216
g10
I1
sg11
S''
sg12
Vscatter.label.'Reversed Greys, default norm'
p10217
sg14
(lp10218
sg2
g10213
sbs(S'barh'
p10219
S'tick_label'
p10220
tp10221
(icodemend.demo.code_suggest
Element
p10222
(dp10223
g10
I0
sg11
S'the tick labels of the bars'
p10224
sg12
Vbarh.tick_label
p10225
sg14
(lp10226
sg2
g10220
sbs(g766
g666
g4018
tp10227
g4014
sS'destroy'
p10228
(icodemend.demo.code_suggest
Element
p10229
(dp10230
g10
I12
sg11
S'destroy the tool fix any cyclical references before the object is about to be destroyed .'
p10231
sg12
Vdestroy
p10232
sg14
(lp10233
sg2
g10228
sbs(g1170
g1257
S'100'
p10234
tp10235
(icodemend.demo.code_suggest
Element
p10236
(dp10237
g10
I7
sg11
S''
sg12
Vhist.bins.100
p10238
sg14
(lp10239
sg2
g10234
sbs(S'semilogx'
p10240
S'picker'
p10241
tp10242
(icodemend.demo.code_suggest
Element
p10243
(dp10244
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p10245
sg12
Vsemilogx.picker
p10246
sg14
(lp10247
sg2
g10241
sbs(g4998
g110
S"'w'"
p10248
tp10249
(icodemend.demo.code_suggest
Element
p10250
(dp10251
g10
I1
sg11
S''
sg12
Vpcolormesh.edgecolor.'w'
p10252
sg14
(lp10253
sg2
g10248
sbs(g245
g140
S'(8, 5)'
p10254
tp10255
(icodemend.demo.code_suggest
Element
p10256
(dp10257
g10
I1
sg11
S''
sg12
Vfigure.figsize.(8, 5)
p10258
sg14
(lp10259
sg2
g10254
sbs(S'angle_spectrum'
p10260
S'sketch_params'
p10261
tp10262
(icodemend.demo.code_suggest
Element
p10263
(dp10264
g10
I0
sg11
S'sets the sketch parameters .'
p10265
sg12
Vangle_spectrum.sketch_params
p10266
sg14
(lp10267
sg2
g10261
sbs(S'poly_below'
p10268
S'xmin'
p10269
tp10270
(icodemend.demo.code_suggest
Element
p10271
(dp10272
g10
I0
sg11
S'given a sequence of xs and ys , return the vertices of a polygon that has a horizontal base at xmin and an upper bound at the ys . xmin is a scalar .'
p10273
sg12
Vpoly_below.xmin
p10274
sg14
(lp10275
sg2
g10269
sbs(S'barbs'
p10276
S'axes'
p10277
tp10278
(icodemend.demo.code_suggest
Element
p10279
(dp10280
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p10281
sg12
Vbarbs.axes
p10282
sg14
(lp10283
sg2
g10277
sbs(g139
g140
g1702
tp10284
g1698
s(S'poly_below'
p10285
S'ys'
p10286
tp10287
(icodemend.demo.code_suggest
Element
p10288
(dp10289
g10
I0
sg11
S'given a sequence of xs and ys , return the vertices of a polygon that has a horizontal base at xmin and an upper bound at the ys . xmin is a scalar .'
p10290
sg12
Vpoly_below.ys
p10291
sg14
(lp10292
sg2
g10286
sbsS'get_fontsize'
p10293
(icodemend.demo.code_suggest
Element
p10294
(dp10295
g10
I4
sg11
S'return fontsize in points alias for get_size'
p10296
sg12
Vget_fontsize
p10297
sg14
(lp10298
sg2
g10293
sbs(S'phase_spectrum'
p10299
S'xlim'
p10300
tp10301
(icodemend.demo.code_suggest
Element
p10302
(dp10303
g10
I0
sg11
S'set the data limits for the xaxis'
p10304
sg12
Vphase_spectrum.xlim
p10305
sg14
(lp10306
sg2
g10300
sbs(g332
g627
S'9'
tp10307
(icodemend.demo.code_suggest
Element
p10308
(dp10309
g10
I2
sg11
S''
sg12
Vtext.size.9
p10310
sg14
(lp10311
sg2
S'9'
sbs(g452
g453
g7217
tp10312
g7213
s(S'barbs'
p10313
S'C'
tp10314
(icodemend.demo.code_suggest
Element
p10315
(dp10316
g10
I0
sg11
S'u , v , c may be masked arrays , but masked x , y are not supported at present .'
p10317
sg12
Vbarbs.C
p10318
sg14
(lp10319
sg2
S'C'
sbs(g101
S's'
g7721
tp10320
g7717
s(S'poly_below'
p10321
S'xs'
p10322
tp10323
(icodemend.demo.code_suggest
Element
p10324
(dp10325
g10
I0
sg11
S'given a sequence of xs and ys , return the vertices of a polygon that has a horizontal base at xmin and an upper bound at the ys . xmin is a scalar .'
p10326
sg12
Vpoly_below.xs
p10327
sg14
(lp10328
sg2
g10322
sbsS'set_ticklabels'
p10329
(icodemend.demo.code_suggest
Element
p10330
(dp10331
g10
I51
sg11
S'set tick labels . set the text values of the tick labels .'
p10332
sg12
Vset_ticklabels
p10333
sg14
(lp10334
(icodemend.demo.code_suggest
Element
p10335
(dp10336
g10
I0
sg11
S'set the text values of the tick labels . return a list of text instances . use kwarg minor=true to select minor ticks . all other kwargs are used to update the text object properties . as for get_ticklabels , label1 ( left or bottom ) is affected for a given tick only if its label1on attribute is true , and similarly for label2 . the list of returned label text objects consists of all such label1 objects followed by all such label2 objects .'
p10337
sg12
Vset_ticklabels.kwarg
p10338
sg14
(lp10339
sg2
S'kwarg'
p10340
sba(icodemend.demo.code_suggest
Element
p10341
(dp10342
g10
I0
sg11
S'set the text values of the tick labels . return a list of text instances . use kwarg minor=true to select minor ticks . all other kwargs are used to update the text object properties . as for get_ticklabels , label1 ( left or bottom ) is affected for a given tick only if its label1on attribute is true , and similarly for label2 . the list of returned label text objects consists of all such label1 objects followed by all such label2 objects .'
p10343
sg12
Vset_ticklabels.minor=True
p10344
sg14
(lp10345
sg2
S'minor=True'
p10346
sba(icodemend.demo.code_suggest
Element
p10347
(dp10348
g10
I0
sg11
S'the input ticklabels is assumed to match the set of tick locations , regardless of the state of label1on and label2on .'
p10349
sg12
Vset_ticklabels.ticklabels
p10350
sg14
(lp10351
sg2
S'ticklabels'
p10352
sbag4158
asg2
g10329
sbs(S'csd'
p10353
S'alpha'
p10354
tp10355
(icodemend.demo.code_suggest
Element
p10356
(dp10357
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p10358
sg12
Vcsd.alpha
p10359
sg14
(lp10360
sg2
g10354
sbs(S'contains_points'
p10361
S'radius'
p10362
tp10363
(icodemend.demo.code_suggest
Element
p10364
(dp10365
g10
I0
sg11
S'radius allows the path to be made slightly larger or smaller .'
p10366
sg12
Vcontains_points.radius
p10367
sg14
(lp10368
sg2
g10362
sbs(S'save'
p10369
S'fps'
p10370
S'1'
tp10371
(icodemend.demo.code_suggest
Element
p10372
(dp10373
g10
I1
sg11
S''
sg12
Vsave.fps.1
p10374
sg14
(lp10375
sg2
S'1'
sbs(g8943
S'axisbg'
p10376
S"'#dfdfdf'"
p10377
tp10378
(icodemend.demo.code_suggest
Element
p10379
(dp10380
g10
I1
sg11
S''
sg12
Vsubplot.axisbg.'#dfdfdf'
p10381
sg14
(lp10382
sg2
g10377
sbs(g117
g2392
S'3.5'
p10383
tp10384
(icodemend.demo.code_suggest
Element
p10385
(dp10386
g10
I3
sg11
S''
sg12
Vplot.linewidth.3/5
p10387
sg14
(lp10388
sg2
g10383
sbsS'set_linestyles'
p10389
(icodemend.demo.code_suggest
Element
p10390
(dp10391
g10
I0
sg11
S'alias for set_linestyle'
p10392
sg12
Vset_linestyles
p10393
sg14
(lp10394
sg2
g10389
sbs(g766
g515
g515
tp10395
(icodemend.demo.code_suggest
Element
p10396
(dp10397
g10
I8
sg11
S''
sg12
Vcontourf.norm.norm
p10398
sg14
(lp10399
sg2
g515
sbs(S'figtext'
p10400
S'ylim'
p10401
tp10402
(icodemend.demo.code_suggest
Element
p10403
(dp10404
g10
I0
sg11
S'set the data limits for the yaxis'
p10405
sg12
Vfigtext.ylim
p10406
sg14
(lp10407
sg2
g10401
sbs(S'magnitude_spectrum'
p10408
S'markerfacecolor'
p10409
tp10410
(icodemend.demo.code_suggest
Element
p10411
(dp10412
g10
I0
sg11
S'set the marker face color .'
p10413
sg12
Vmagnitude_spectrum.markerfacecolor
p10414
sg14
(lp10415
sg2
g10409
sbs(g117
g132
S"'.3'"
p10416
tp10417
(icodemend.demo.code_suggest
Element
p10418
(dp10419
g10
I2
sg11
S''
sg12
Vplot.color.'/3'
p10420
sg14
(lp10421
sg2
g10416
sbsS'stackplot'
p10422
(icodemend.demo.code_suggest
Element
p10423
(dp10424
g10
I10
sg11
S'draws a stacked area plot .'
p10425
sg12
Vstackplot
p10426
sg14
(lp10427
(icodemend.demo.code_suggest
Element
p10428
(dp10429
g10
I1
sg11
S"method used to calculate the baseline . ' zero ' is just a simple stacked plot . ' sym ' is symmetric around zero and is sometimes called themeriver . ' wiggle ' minimizes the sum of the squared slopes . ' weighted_wiggle ' does the same but weights to account for size of each layer . it is also called streamgraph-layout . more details can be found at http://www.leebyron.com/else/streamgraph/ ."
p10430
sg12
Vstackplot.baseline
p10431
sg14
(lp10432
(icodemend.demo.code_suggest
Element
p10433
(dp10434
g10
I1
sg11
S''
sg12
Vstackplot.baseline.v
p10435
sg14
(lp10436
sg2
S'v'
sbasg2
S'baseline'
p10437
sba(icodemend.demo.code_suggest
Element
p10438
(dp10439
g10
I1
sg11
S'used to colour the stacked areas . all other keyword arguments are passed to fill_between ( )'
p10440
sg12
Vstackplot.colors
p10441
sg14
(lp10442
(icodemend.demo.code_suggest
Element
p10443
(dp10444
g10
I1
sg11
S''
sg12
Vstackplot.colors.colormap
p10445
sg14
(lp10446
sg2
S'colormap'
p10447
sbasg2
S'colors'
p10448
sba(icodemend.demo.code_suggest
Element
p10449
(dp10450
g10
I0
sg11
S'labels : a list or tuple of labels to assign to each data series .'
p10451
sg12
Vstackplot.labels
p10452
sg14
(lp10453
sg2
S'labels'
p10454
sba(icodemend.demo.code_suggest
Element
p10455
(dp10456
g10
I0
sg11
S'returns r : a list of polycollection , one for each element in the stacked area plot .'
p10457
sg12
Vstackplot.r
p10458
sg14
(lp10459
sg2
S'r'
sba(icodemend.demo.code_suggest
Element
p10460
(dp10461
g10
I0
sg11
S'x : 1d array of dimension n'
p10462
sg12
Vstackplot.x
p10463
sg14
(lp10464
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p10465
(dp10466
g10
I0
sg11
S'1xn . the data is assumed to be unstacked . each of the following calls is legal : stackplot(x , y ) # where y is mxn stackplot(x , y1 , y2 , y3 , y4 ) # where y1 , y2 , y3 , y4 , are all 1xnm'
p10467
sg12
Vstackplot.y
p10468
sg14
(lp10469
sg2
S'y'
sbasg2
g10422
sbs(S'colorbar'
p10470
S'ax'
p10471
tp10472
(icodemend.demo.code_suggest
Element
p10473
(dp10474
g10
I42
sg11
S'none | parent axes object(s ) from which space for a new colorbar axes will be stolen . if a list of axes is given they will all be resized to make room for the colorbar axes .'
p10475
sg12
Vcolorbar.ax
p10476
sg14
(lp10477
(icodemend.demo.code_suggest
Element
p10478
(dp10479
g10
I19
sg11
S''
sg12
Vcolorbar.ax.ax
p10480
sg14
(lp10481
sg2
S'ax'
p10482
sba(icodemend.demo.code_suggest
Element
p10483
(dp10484
g10
I8
sg11
S''
sg12
Vcolorbar.ax.ax1
p10485
sg14
(lp10486
sg2
S'ax1'
p10487
sba(icodemend.demo.code_suggest
Element
p10488
(dp10489
g10
I1
sg11
S''
sg12
Vcolorbar.ax.None
p10490
sg14
(lp10491
sg2
g865
sba(icodemend.demo.code_suggest
Element
p10492
(dp10493
g10
I1
sg11
S''
sg12
Vcolorbar.ax.ax2
p10494
sg14
(lp10495
sg2
S'ax2'
p10496
sba(icodemend.demo.code_suggest
Element
p10497
(dp10498
g10
I1
sg11
S''
sg12
Vcolorbar.ax.ax3
p10499
sg14
(lp10500
sg2
S'ax3'
p10501
sba(icodemend.demo.code_suggest
Element
p10502
(dp10503
g10
I1
sg11
S''
sg12
Vcolorbar.ax.ax_left
p10504
sg14
(lp10505
sg2
S'ax_left'
p10506
sba(icodemend.demo.code_suggest
Element
p10507
(dp10508
g10
I1
sg11
S''
sg12
Vcolorbar.ax.ax_right
p10509
sg14
(lp10510
sg2
S'ax_right'
p10511
sbasg2
g10471
sbs(g1170
g132
S"'k'"
p10512
tp10513
(icodemend.demo.code_suggest
Element
p10514
(dp10515
g10
I3
sg11
S''
sg12
Vhist.color.'k'
p10516
sg14
(lp10517
sg2
g10512
sbs(g324
g2183
g9822
tp10518
g9818
s(S'plot_date'
p10519
S'None'
p10520
tp10521
(icodemend.demo.code_suggest
Element
p10522
(dp10523
g10
I0
sg11
S'the time zone to use in labeling dates . if none , defaults to rc value .'
p10524
sg12
Vplot_date.None
p10525
sg14
(lp10526
sg2
g10520
sbs(S'set_annotation_clip'
p10527
S'annotation_clip'
p10528
tp10529
(icodemend.demo.code_suggest
Element
p10530
(dp10531
g10
I0
sg11
S'set annotation_clip attribute .'
p10532
sg12
Vset_annotation_clip.annotation_clip
p10533
sg14
(lp10534
sg2
g10528
sbs(S'semilogy'
p10535
S'hatch'
p10536
tp10537
(icodemend.demo.code_suggest
Element
p10538
(dp10539
g10
I0
sg11
S'set the hatching pattern'
p10540
sg12
Vsemilogy.hatch
p10541
sg14
(lp10542
sg2
g10536
sbs(S'pcolor'
p10543
S'vmax'
p10544
tp10545
(icodemend.demo.code_suggest
Element
p10546
(dp10547
g10
I11
sg11
S'vmin and vmax are used in conjunction with norm to normalize luminance data . if either is none , it is autoscaled to the respective min or max of the color array c . if not none , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .'
p10548
sg12
Vpcolor.vmax
p10549
sg14
(lp10550
(icodemend.demo.code_suggest
Element
p10551
(dp10552
g10
I3
sg11
S''
sg12
Vpcolor.vmax.1
p10553
sg14
(lp10554
sg2
S'1'
sbag5028
a(icodemend.demo.code_suggest
Element
p10555
(dp10556
g10
I1
sg11
S''
sg12
Vpcolor.vmax.0/99
p10557
sg14
(lp10558
sg2
S'0.99'
p10559
sba(icodemend.demo.code_suggest
Element
p10560
(dp10561
g10
I1
sg11
S''
sg12
Vpcolor.vmax.4
p10562
sg14
(lp10563
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p10564
(dp10565
g10
I1
sg11
S''
sg12
Vpcolor.vmax.vmax
p10566
sg14
(lp10567
sg2
g5025
sbasg2
g10544
sbs(S'get'
p10568
S'title'
p10569
tp10570
(icodemend.demo.code_suggest
Element
p10571
(dp10572
g10
I0
sg11
S'set a title for the axes .'
p10573
sg12
Vget.title
p10574
sg14
(lp10575
sg2
g10569
sbs(g1170
S'stacked'
p10576
g438
tp10577
(icodemend.demo.code_suggest
Element
p10578
(dp10579
g10
I11
sg11
S''
sg12
Vhist.stacked.True
p10580
sg14
(lp10581
sg2
g438
sbs(S'hlines'
p10582
g5328
tp10583
g5318
sS'get_name_char'
p10584
(icodemend.demo.code_suggest
Element
p10585
(dp10586
g10
I0
sg11
S"get the name of the character , i.e. , ' ; ' is ' semicolon '"
p10587
sg12
Vget_name_char
p10588
sg14
(lp10589
sg2
g10584
sbs(g452
S'ms'
p10590
S'6'
tp10591
(icodemend.demo.code_suggest
Element
p10592
(dp10593
g10
I1
sg11
S''
sg12
Verrorbar.ms.6
p10594
sg14
(lp10595
sg2
S'6'
sbs(S'annotate'
p10596
S'agg_filter'
p10597
tp10598
(icodemend.demo.code_suggest
Element
p10599
(dp10600
g10
I0
sg11
S'set agg_filter fuction .'
p10601
sg12
Vannotate.agg_filter
p10602
sg14
(lp10603
sg2
g10597
sbs(S'suptitle'
p10604
S'text'
p10605
tp10606
(icodemend.demo.code_suggest
Element
p10607
(dp10608
g10
I0
sg11
S'set the text string s'
p10609
sg12
Vsuptitle.text
p10610
sg14
(lp10611
sg2
g10605
sbs(S'axvspan'
p10612
S'url'
p10613
tp10614
(icodemend.demo.code_suggest
Element
p10615
(dp10616
g10
I0
sg11
S'sets the url for the artist'
p10617
sg12
Vaxvspan.url
p10618
sg14
(lp10619
sg2
g10613
sbs(g16
g17
S'0.002'
p10620
tp10621
(icodemend.demo.code_suggest
Element
p10622
(dp10623
g10
I1
sg11
S''
sg12
Vbar.width.0/002
p10624
sg14
(lp10625
sg2
g10620
sbsS'get_loc'
p10626
(icodemend.demo.code_suggest
Element
p10627
(dp10628
g10
I1
sg11
S'return the tick location ( data coords ) as a scalar'
p10629
sg12
Vget_loc
p10630
sg14
(lp10631
sg2
g10626
sbs(g101
g102
g102
tp10632
(icodemend.demo.code_suggest
Element
p10633
(dp10634
g10
I1
sg11
S''
sg12
Vscatter.alpha.alpha
p10635
sg14
(lp10636
sg2
g102
sbs(g1170
g118
S"'Dataset 1'"
p10637
tp10638
(icodemend.demo.code_suggest
Element
p10639
(dp10640
g10
I1
sg11
S''
sg12
Vhist.label.'Dataset 1'
p10641
sg14
(lp10642
sg2
g10637
sbs(g1003
g4651
S'[7, 8]'
p10643
tp10644
(icodemend.demo.code_suggest
Element
p10645
(dp10646
g10
I1
sg11
S''
sg12
Vboxplot.positions.[7, 8]
p10647
sg14
(lp10648
sg2
g10643
sbs(S'angle_spectrum'
p10649
S'yticklabels'
p10650
tp10651
(icodemend.demo.code_suggest
Element
p10652
(dp10653
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p10654
sg12
Vangle_spectrum.yticklabels
p10655
sg14
(lp10656
sg2
g10650
sbsS'set_capstyle'
p10657
(icodemend.demo.code_suggest
Element
p10658
(dp10659
g10
I0
sg11
S"set the capstyle as a string in ( ' butt ' , ' round ' , ' projecting ' ) set the patch capstyle"
p10660
sg12
Vset_capstyle
p10661
sg14
(lp10662
sg2
g10657
sbs(S'isvector'
p10663
S'X'
tp10664
(icodemend.demo.code_suggest
Element
p10665
(dp10666
g10
I0
sg11
S'like the matlab function with the same name , returns true if the supplied numpy array or matrix x looks like a vector , meaning it has a one non-singleton axis ( i.e. , it can have multiple axes , but all must have length 1 , except for one of them ) .'
p10667
sg12
Visvector.X
p10668
sg14
(lp10669
sg2
S'X'
sbs(S'cohere'
p10670
S'dash_capstyle'
p10671
tp10672
(icodemend.demo.code_suggest
Element
p10673
(dp10674
g10
I0
sg11
S'set the cap style for dashed linestyles'
p10675
sg12
Vcohere.dash_capstyle
p10676
sg14
(lp10677
sg2
g10671
sbs(g139
g370
g1867
tp10678
g1863
s(S'hlines'
p10679
g132
g5279
tp10680
g5275
s(S'annotate'
p10681
S'figure'
p10682
tp10683
(icodemend.demo.code_suggest
Element
p10684
(dp10685
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p10686
sg12
Vannotate.figure
p10687
sg14
(lp10688
sg2
g10682
sbs(S'get_paths_extents'
p10689
S'paths'
p10690
tp10691
(icodemend.demo.code_suggest
Element
p10692
(dp10693
g10
I0
sg11
S'paths is a sequence of path instances .'
p10694
sg12
Vget_paths_extents.paths
p10695
sg14
(lp10696
sg2
g10690
sbs(S'magnitude_spectrum'
p10697
S'clip_path'
p10698
tp10699
(icodemend.demo.code_suggest
Element
p10700
(dp10701
g10
I0
sg11
S"set the artist 's clip path , which may be"
p10702
sg12
Vmagnitude_spectrum.clip_path
p10703
sg14
(lp10704
sg2
g10698
sbs(g324
g8780
g9865
tp10705
g9861
s(S'figtext'
p10706
S'verticalalignment'
p10707
tp10708
(icodemend.demo.code_suggest
Element
p10709
(dp10710
g10
I0
sg11
S'set the vertical alignment'
p10711
sg12
Vfigtext.verticalalignment
p10712
sg14
(lp10713
sg2
g10707
sbsS'prctile'
p10714
(icodemend.demo.code_suggest
Element
p10715
(dp10716
g10
I1
sg11
S'return the percentiles of x .'
p10717
sg12
Vprctile
p10718
sg14
(lp10719
(icodemend.demo.code_suggest
Element
p10720
(dp10721
g10
I1
sg11
S'return the percentiles of x . p can either be a sequence of percentile values or a scalar . if p is a sequence , the ith element of the return sequence is the p*(i)-th percentile of * x . if p is a scalar , the largest value of x less than or equal to the p percentage point in the sequence is returned .'
p10722
sg12
Vprctile.p
p10723
sg14
(lp10724
(icodemend.demo.code_suggest
Element
p10725
(dp10726
g10
I1
sg11
S''
sg12
Vprctile.p.p
p10727
sg14
(lp10728
sg2
S'p'
sbasg2
S'p'
sba(icodemend.demo.code_suggest
Element
p10729
(dp10730
g10
I0
sg11
S'return the percentiles of x . p can either be a sequence of percentile values or a scalar . if p is a sequence , the ith element of the return sequence is the p*(i)-th percentile of * x . if p is a scalar , the largest value of x less than or equal to the p percentage point in the sequence is returned .'
p10731
sg12
Vprctile.p*(i)-th percentile of *x
p10732
sg14
(lp10733
sg2
S'p*(i)-th percentile of *x'
p10734
sba(icodemend.demo.code_suggest
Element
p10735
(dp10736
g10
I0
sg11
S'return the percentiles of x . p can either be a sequence of percentile values or a scalar . if p is a sequence , the ith element of the return sequence is the p*(i)-th percentile of * x . if p is a scalar , the largest value of x less than or equal to the p percentage point in the sequence is returned .'
p10737
sg12
Vprctile.x
p10738
sg14
(lp10739
sg2
S'x'
sbasg2
g10714
sbsS'get_ticklabels'
p10740
(icodemend.demo.code_suggest
Element
p10741
(dp10742
g10
I10
sg11
S'get the x tick labels as a list of text instances .'
p10743
sg12
Vget_ticklabels
p10744
sg14
(lp10745
(icodemend.demo.code_suggest
Element
p10746
(dp10747
g10
I0
sg11
S'if true return the minor ticklabels , else return the major ticklabels'
p10748
sg12
Vget_ticklabels.minor
p10749
sg14
(lp10750
sg2
S'minor'
p10751
sba(icodemend.demo.code_suggest
Element
p10752
(dp10753
g10
I0
sg11
S'overrides minor .'
p10754
sg12
Vget_ticklabels.which
p10755
sg14
(lp10756
sg2
S'which'
p10757
sbasg2
g10740
sbs(S'refine_field'
p10758
S'subdiv'
p10759
g10759
tp10760
(icodemend.demo.code_suggest
Element
p10761
(dp10762
g10
I4
sg11
S''
sg12
Vrefine_field.subdiv.subdiv
p10763
sg14
(lp10764
sg2
g10759
sbs(g245
g140
S'(i, j)'
p10765
tp10766
(icodemend.demo.code_suggest
Element
p10767
(dp10768
g10
I1
sg11
S''
sg12
Vfigure.figsize.(i, j)
p10769
sg14
(lp10770
sg2
g10765
sbs(S'set_yticklabels'
p10771
S'size_inches'
p10772
tp10773
(icodemend.demo.code_suggest
Element
p10774
(dp10775
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p10776
sg12
Vset_yticklabels.size_inches
p10777
sg14
(lp10778
sg2
g10772
sbs(g101
g110
S"'r'"
p10779
tp10780
(icodemend.demo.code_suggest
Element
p10781
(dp10782
g10
I1
sg11
S''
sg12
Vscatter.edgecolor.'r'
p10783
sg14
(lp10784
sg2
g10779
sbs(S'broken_barh'
p10785
S'snap'
p10786
tp10787
(icodemend.demo.code_suggest
Element
p10788
(dp10789
g10
I0
sg11
S'sets the snap setting which may be'
p10790
sg12
Vbroken_barh.snap
p10791
sg14
(lp10792
sg2
g10786
sbsS'set_fillstyle'
p10793
(icodemend.demo.code_suggest
Element
p10794
(dp10795
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker . sets fillstyle"
p10796
sg12
Vset_fillstyle
p10797
sg14
(lp10798
sg2
g10793
sbsS'ScalarMappable'
p10799
(icodemend.demo.code_suggest
Element
p10800
(dp10801
g10
I47
sg11
S''
sg12
VScalarMappable
p10802
sg14
(lp10803
(icodemend.demo.code_suggest
Element
p10804
(dp10805
g10
I38
sg11
S'the colormap used to map normalized data values to rgba colors .'
p10806
sg12
VScalarMappable.cmap
p10807
sg14
(lp10808
g5564
a(icodemend.demo.code_suggest
Element
p10809
(dp10810
g10
I5
sg11
S''
sg12
VScalarMappable.cmap.my_cmap
p10811
sg14
(lp10812
sg2
g9074
sba(icodemend.demo.code_suggest
Element
p10813
(dp10814
g10
I2
sg11
S''
sg12
VScalarMappable.cmap.cm
p10815
sg14
(lp10816
sg2
g9094
sba(icodemend.demo.code_suggest
Element
p10817
(dp10818
g10
I2
sg11
S''
sg12
VScalarMappable.cmap.jet
p10819
sg14
(lp10820
sg2
g9232
sba(icodemend.demo.code_suggest
Element
p10821
(dp10822
g10
I1
sg11
S''
sg12
VScalarMappable.cmap.'gray'
p10823
sg14
(lp10824
sg2
S"'gray'"
p10825
sba(icodemend.demo.code_suggest
Element
p10826
(dp10827
g10
I1
sg11
S''
sg12
VScalarMappable.cmap.'hsv'
p10828
sg14
(lp10829
sg2
S"'hsv'"
p10830
sba(icodemend.demo.code_suggest
Element
p10831
(dp10832
g10
I1
sg11
S''
sg12
VScalarMappable.cmap.PuOr
p10833
sg14
(lp10834
sg2
S'PuOr'
p10835
sba(icodemend.demo.code_suggest
Element
p10836
(dp10837
g10
I1
sg11
S''
sg12
VScalarMappable.cmap.c_m
p10838
sg14
(lp10839
sg2
S'c_m'
p10840
sba(icodemend.demo.code_suggest
Element
p10841
(dp10842
g10
I1
sg11
S''
sg12
VScalarMappable.cmap.cm1
p10843
sg14
(lp10844
sg2
S'cm1'
p10845
sba(icodemend.demo.code_suggest
Element
p10846
(dp10847
g10
I1
sg11
S''
sg12
VScalarMappable.cmap.hot
p10848
sg14
(lp10849
sg2
S'hot'
p10850
sbasg2
S'cmap'
p10851
sba(icodemend.demo.code_suggest
Element
p10852
(dp10853
g10
I21
sg11
S'the normalizing object which scales data , typically into the interval [ 0 , 1 ] . if none , norm defaults to a colors.normalize object which initializes its scaling based on the first data processed .'
p10854
sg12
VScalarMappable.norm
p10855
sg14
(lp10856
(icodemend.demo.code_suggest
Element
p10857
(dp10858
g10
I6
sg11
S''
sg12
VScalarMappable.norm.cNorm
p10859
sg14
(lp10860
sg2
S'cNorm'
p10861
sba(icodemend.demo.code_suggest
Element
p10862
(dp10863
g10
I6
sg11
S''
sg12
VScalarMappable.norm.norm
p10864
sg14
(lp10865
sg2
g515
sba(icodemend.demo.code_suggest
Element
p10866
(dp10867
g10
I1
sg11
S''
sg12
VScalarMappable.norm.cnorm
p10868
sg14
(lp10869
sg2
S'cnorm'
p10870
sba(icodemend.demo.code_suggest
Element
p10871
(dp10872
g10
I1
sg11
S''
sg12
VScalarMappable.norm.color_norm
p10873
sg14
(lp10874
sg2
S'color_norm'
p10875
sba(icodemend.demo.code_suggest
Element
p10876
(dp10877
g10
I1
sg11
S''
sg12
VScalarMappable.norm.n
p10878
sg14
(lp10879
sg2
S'n'
sbasg2
S'norm'
p10880
sbasg2
g10799
sbs(g332
g132
S"'red'"
p10881
tp10882
(icodemend.demo.code_suggest
Element
p10883
(dp10884
g10
I8
sg11
S''
sg12
Vtext.color.'red'
p10885
sg14
(lp10886
sg2
g10881
sbsS'get_navigate'
p10887
(icodemend.demo.code_suggest
Element
p10888
(dp10889
g10
I0
sg11
S'get whether the axes responds to navigation commands'
p10890
sg12
Vget_navigate
p10891
sg14
(lp10892
sg2
g10887
sbs(g101
S'c'
S'colordata'
p10893
tp10894
(icodemend.demo.code_suggest
Element
p10895
(dp10896
g10
I1
sg11
S''
sg12
Vscatter.c.colordata
p10897
sg14
(lp10898
sg2
g10893
sbsS'new_figure_manager_given_figure'
p10899
(icodemend.demo.code_suggest
Element
p10900
(dp10901
g10
I2
sg11
S'create a new figure manager instance for the given figure .'
p10902
sg12
Vnew_figure_manager_given_figure
p10903
sg14
(lp10904
sg2
g10899
sbs(g766
g666
g4013
tp10905
g4009
s(g109
g110
S"'r'"
p10906
tp10907
(icodemend.demo.code_suggest
Element
p10908
(dp10909
g10
I1
sg11
S''
sg12
Vsavefig.edgecolor.'r'
p10910
sg14
(lp10911
sg2
g10906
sbs(S'draw_gouraud_triangle'
p10912
S'colors'
p10913
tp10914
(icodemend.demo.code_suggest
Element
p10915
(dp10916
g10
I0
sg11
S'colors is a 3x4 array of rgba colors for each point of the triangle .'
p10917
sg12
Vdraw_gouraud_triangle.colors
p10918
sg14
(lp10919
sg2
g10913
sbs(g324
g102
g9946
tp10920
g9942
s(g117
g118
S"'line2'"
p10921
tp10922
(icodemend.demo.code_suggest
Element
p10923
(dp10924
g10
I1
sg11
S''
sg12
Vplot.label.'line2'
p10925
sg14
(lp10926
sg2
g10921
sbs(S'magnitude_spectrum'
p10927
S'path_effects'
p10928
tp10929
(icodemend.demo.code_suggest
Element
p10930
(dp10931
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p10932
sg12
Vmagnitude_spectrum.path_effects
p10933
sg14
(lp10934
sg2
g10928
sbs(g139
g140
g1802
tp10935
g1798
s(g2814
S'flows'
p10936
S'[(-0.25), 0.15, 0.1]'
p10937
tp10938
(icodemend.demo.code_suggest
Element
p10939
(dp10940
g10
I1
sg11
S''
sg12
Vadd.flows.[(-0/25), 0/15, 0/1]
p10941
sg14
(lp10942
sg2
g10937
sbs(S'boxplot'
p10943
S'vert'
p10944
tp10945
(icodemend.demo.code_suggest
Element
p10946
(dp10947
g10
I7
sg11
S'if true ( default ) , makes the boxes vertical . if false , makes horizontal boxes .'
p10948
sg12
Vboxplot.vert
p10949
sg14
(lp10950
g4103
a(icodemend.demo.code_suggest
Element
p10951
(dp10952
g10
I2
sg11
S''
sg12
Vboxplot.vert.0
p10953
sg14
(lp10954
sg2
S'0'
sbag1006
a(icodemend.demo.code_suggest
Element
p10955
(dp10956
g10
I1
sg11
S''
sg12
Vboxplot.vert.True
p10957
sg14
(lp10958
sg2
g438
sbasg2
g10944
sbs(g117
g118
S"'square root'"
p10959
tp10960
(icodemend.demo.code_suggest
Element
p10961
(dp10962
g10
I1
sg11
S''
sg12
Vplot.label.'square root'
p10963
sg14
(lp10964
sg2
g10959
sbs(S'getp'
p10965
S'xlim'
p10966
tp10967
(icodemend.demo.code_suggest
Element
p10968
(dp10969
g10
I0
sg11
S'set the data limits for the xaxis'
p10970
sg12
Vgetp.xlim
p10971
sg14
(lp10972
sg2
g10966
sbs(g514
g325
S"'jet'"
p10973
tp10974
(icodemend.demo.code_suggest
Element
p10975
(dp10976
g10
I2
sg11
S''
sg12
Vpcolor.cmap.'jet'
p10977
sg14
(lp10978
sg2
g10973
sbs(S'gca'
p10979
S'vertices'
p10980
tp10981
(icodemend.demo.code_suggest
Element
p10982
(dp10983
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p10984
sg12
Vgca.vertices
p10985
sg14
(lp10986
sg2
g10980
sbs(g117
g2392
S'50'
p10987
tp10988
(icodemend.demo.code_suggest
Element
p10989
(dp10990
g10
I3
sg11
S''
sg12
Vplot.linewidth.50
p10991
sg14
(lp10992
sg2
g10987
sbs(g93
g4800
S'(right, (y - pad))'
p10993
tp10994
(icodemend.demo.code_suggest
Element
p10995
(dp10996
g10
I1
sg11
S''
sg12
Vannotate.xytext.(right, (y - pad))
p10997
sg14
(lp10998
sg2
g10993
sbs(g10679
g132
g5289
tp10999
g5285
s(S'plot'
p11000
S'markersize'
p11001
tp11002
(icodemend.demo.code_suggest
Element
p11003
(dp11004
g10
I117
sg11
S'set the marker size in points'
p11005
sg12
Vplot.markersize
p11006
sg14
(lp11007
g4659
a(icodemend.demo.code_suggest
Element
p11008
(dp11009
g10
I13
sg11
S''
sg12
Vplot.markersize.20
p11010
sg14
(lp11011
sg2
S'20'
p11012
sba(icodemend.demo.code_suggest
Element
p11013
(dp11014
g10
I9
sg11
S''
sg12
Vplot.markersize.7
p11015
sg14
(lp11016
sg2
S'7'
sba(icodemend.demo.code_suggest
Element
p11017
(dp11018
g10
I7
sg11
S''
sg12
Vplot.markersize.5
p11019
sg14
(lp11020
sg2
S'5'
sba(icodemend.demo.code_suggest
Element
p11021
(dp11022
g10
I6
sg11
S''
sg12
Vplot.markersize.12
p11023
sg14
(lp11024
sg2
S'12'
p11025
sba(icodemend.demo.code_suggest
Element
p11026
(dp11027
g10
I6
sg11
S''
sg12
Vplot.markersize.30
p11028
sg14
(lp11029
sg2
S'30'
p11030
sba(icodemend.demo.code_suggest
Element
p11031
(dp11032
g10
I6
sg11
S''
sg12
Vplot.markersize.8
p11033
sg14
(lp11034
sg2
S'8'
sba(icodemend.demo.code_suggest
Element
p11035
(dp11036
g10
I4
sg11
S''
sg12
Vplot.markersize.18
p11037
sg14
(lp11038
sg2
S'18'
p11039
sba(icodemend.demo.code_suggest
Element
p11040
(dp11041
g10
I4
sg11
S''
sg12
Vplot.markersize.6
p11042
sg14
(lp11043
sg2
S'6'
sba(icodemend.demo.code_suggest
Element
p11044
(dp11045
g10
I3
sg11
S''
sg12
Vplot.markersize.23
p11046
sg14
(lp11047
sg2
S'23'
p11048
sba(icodemend.demo.code_suggest
Element
p11049
(dp11050
g10
I3
sg11
S''
sg12
Vplot.markersize.3
p11051
sg14
(lp11052
sg2
S'3'
sba(icodemend.demo.code_suggest
Element
p11053
(dp11054
g10
I3
sg11
S''
sg12
Vplot.markersize.4
p11055
sg14
(lp11056
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p11057
(dp11058
g10
I2
sg11
S''
sg12
Vplot.markersize.0
p11059
sg14
(lp11060
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p11061
(dp11062
g10
I2
sg11
S''
sg12
Vplot.markersize.1
p11063
sg14
(lp11064
sg2
S'1'
sbag4165
a(icodemend.demo.code_suggest
Element
p11065
(dp11066
g10
I2
sg11
S''
sg12
Vplot.markersize.20/0
p11067
sg14
(lp11068
sg2
S'20.0'
p11069
sba(icodemend.demo.code_suggest
Element
p11070
(dp11071
g10
I2
sg11
S''
sg12
Vplot.markersize.25
p11072
sg14
(lp11073
sg2
S'25'
p11074
sba(icodemend.demo.code_suggest
Element
p11075
(dp11076
g10
I1
sg11
S''
sg12
Vplot.markersize.100
p11077
sg14
(lp11078
sg2
S'100'
p11079
sba(icodemend.demo.code_suggest
Element
p11080
(dp11081
g10
I1
sg11
S''
sg12
Vplot.markersize.14
p11082
sg14
(lp11083
sg2
S'14'
p11084
sba(icodemend.demo.code_suggest
Element
p11085
(dp11086
g10
I1
sg11
S''
sg12
Vplot.markersize.17
p11087
sg14
(lp11088
sg2
S'17'
p11089
sba(icodemend.demo.code_suggest
Element
p11090
(dp11091
g10
I1
sg11
S''
sg12
Vplot.markersize.24
p11092
sg14
(lp11093
sg2
S'24'
p11094
sba(icodemend.demo.code_suggest
Element
p11095
(dp11096
g10
I1
sg11
S''
sg12
Vplot.markersize.5/0
p11097
sg14
(lp11098
sg2
S'5.0'
p11099
sba(icodemend.demo.code_suggest
Element
p11100
(dp11101
g10
I1
sg11
S''
sg12
Vplot.markersize.7/0
p11102
sg14
(lp11103
sg2
S'7.0'
p11104
sba(icodemend.demo.code_suggest
Element
p11105
(dp11106
g10
I1
sg11
S''
sg12
Vplot.markersize.9
p11107
sg14
(lp11108
sg2
S'9'
sbasg2
g11001
sbsS'rec_drop_fields'
p11109
(icodemend.demo.code_suggest
Element
p11110
(dp11111
g10
I0
sg11
S'return a new numpy record array with fields in names dropped .'
p11112
sg12
Vrec_drop_fields
p11113
sg14
(lp11114
(icodemend.demo.code_suggest
Element
p11115
(dp11116
g10
I0
sg11
S'return a new numpy record array with fields in names dropped .'
p11117
sg12
Vrec_drop_fields.names
p11118
sg14
(lp11119
sg2
S'names'
p11120
sbasg2
g11109
sbs(S'have_units'
p11121
S'x'
tp11122
(icodemend.demo.code_suggest
Element
p11123
(dp11124
g10
I0
sg11
S'return true if units are set on the x or y axes'
p11125
sg12
Vhave_units.x
p11126
sg14
(lp11127
sg2
S'x'
sbs(g245
g140
S'[7, 5]'
p11128
tp11129
(icodemend.demo.code_suggest
Element
p11130
(dp11131
g10
I1
sg11
S''
sg12
Vfigure.figsize.[7, 5]
p11132
sg14
(lp11133
sg2
g11128
sbs(S'set_xscale'
p11134
S'nonposy'
p11135
tp11136
(icodemend.demo.code_suggest
Element
p11137
(dp11138
g10
I0
sg11
S'non-positive values in x or y can be masked as invalid , or clipped to a very small positive number'
p11139
sg12
Vset_xscale.nonposy
p11140
sg14
(lp11141
sg2
g11135
sbsS'apply_window'
p11142
(icodemend.demo.code_suggest
Element
p11143
(dp11144
g10
I0
sg11
S'apply the given window to the given 1d or 2d array along the given axis .'
p11145
sg12
Vapply_window
p11146
sg14
(lp11147
sg2
g11142
sbsS'figtext'
p11148
(icodemend.demo.code_suggest
Element
p11149
(dp11150
g10
I17
sg11
S'add text to figure .'
p11151
sg12
Vfigtext
p11152
sg14
(lp11153
(icodemend.demo.code_suggest
Element
p11154
(dp11155
g10
I3
sg11
S'set the foreground color of the text'
p11156
sg12
Vfigtext.color
p11157
sg14
(lp11158
(icodemend.demo.code_suggest
Element
p11159
(dp11160
g10
I1
sg11
S''
sg12
Vfigtext.color.'b'
p11161
sg14
(lp11162
sg2
S"'b'"
p11163
sba(icodemend.demo.code_suggest
Element
p11164
(dp11165
g10
I1
sg11
S''
sg12
Vfigtext.color.'k'
p11166
sg14
(lp11167
sg2
S"'k'"
p11168
sba(icodemend.demo.code_suggest
Element
p11169
(dp11170
g10
I1
sg11
S''
sg12
Vfigtext.color.'r'
p11171
sg14
(lp11172
sg2
S"'r'"
p11173
sbasg2
S'color'
p11174
sba(icodemend.demo.code_suggest
Element
p11175
(dp11176
g10
I1
sg11
S'set the rotation of the text'
p11177
sg12
Vfigtext.rotation
p11178
sg14
(lp11179
(icodemend.demo.code_suggest
Element
p11180
(dp11181
g10
I1
sg11
S''
sg12
Vfigtext.rotation.'vertical'
p11182
sg14
(lp11183
sg2
S"'vertical'"
p11184
sbasg2
S'rotation'
p11185
sba(icodemend.demo.code_suggest
Element
p11186
(dp11187
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p11188
sg12
Vfigtext._interpolation_steps
p11189
sg14
(lp11190
sg2
S'_interpolation_steps'
p11191
sba(icodemend.demo.code_suggest
Element
p11192
(dp11193
g10
I0
sg11
S'set agg_filter fuction .'
p11194
sg12
Vfigtext.agg_filter
p11195
sg14
(lp11196
sg2
S'agg_filter'
p11197
sba(icodemend.demo.code_suggest
Element
p11198
(dp11199
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p11200
sg12
Vfigtext.alpha
p11201
sg14
(lp11202
sg2
S'alpha'
p11203
sbag4350
a(icodemend.demo.code_suggest
Element
p11204
(dp11205
g10
I0
sg11
S"set the artist 's animation state ."
p11206
sg12
Vfigtext.animated
p11207
sg14
(lp11208
sg2
S'animated'
p11209
sba(icodemend.demo.code_suggest
Element
p11210
(dp11211
g10
I0
sg11
S'aspect'
p11212
sg12
Vfigtext.aspect
p11213
sg14
(lp11214
sg2
S'aspect'
p11215
sbag4788
a(icodemend.demo.code_suggest
Element
p11216
(dp11217
g10
I0
sg11
S'set the background color of the text by updating the bbox .'
p11218
sg12
Vfigtext.backgroundcolor
p11219
sg14
(lp11220
sg2
S'backgroundcolor'
p11221
sba(icodemend.demo.code_suggest
Element
p11222
(dp11223
g10
I0
sg11
S'draw a bounding box around self .'
p11224
sg12
Vfigtext.bbox
p11225
sg14
(lp11226
sg2
S'bbox'
p11227
sba(icodemend.demo.code_suggest
Element
p11228
(dp11229
g10
I0
sg11
S"set the artist 's clip bbox ."
p11230
sg12
Vfigtext.clip_box
p11231
sg14
(lp11232
sg2
S'clip_box'
p11233
sba(icodemend.demo.code_suggest
Element
p11234
(dp11235
g10
I0
sg11
S'set whether artist uses clipping .'
p11236
sg12
Vfigtext.clip_on
p11237
sg14
(lp11238
sg2
S'clip_on'
p11239
sba(icodemend.demo.code_suggest
Element
p11240
(dp11241
g10
I0
sg11
S"set the artist 's clip path , which may be"
p11242
sg12
Vfigtext.clip_path
p11243
sg14
(lp11244
sg2
S'clip_path'
p11245
sba(icodemend.demo.code_suggest
Element
p11246
(dp11247
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p11248
sg12
Vfigtext.closed
p11249
sg14
(lp11250
sg2
S'closed'
p11251
sba(icodemend.demo.code_suggest
Element
p11252
(dp11253
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p11254
sg12
Vfigtext.codes
p11255
sg14
(lp11256
sg2
S'codes'
p11257
sba(icodemend.demo.code_suggest
Element
p11258
(dp11259
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p11260
sg12
Vfigtext.color_cycle
p11261
sg14
(lp11262
sg2
S'color_cycle'
p11263
sba(icodemend.demo.code_suggest
Element
p11264
(dp11265
g10
I0
sg11
S'replace the contains test used by this artist .'
p11266
sg12
Vfigtext.contains
p11267
sg14
(lp11268
sg2
S'contains'
p11269
sba(icodemend.demo.code_suggest
Element
p11270
(dp11271
g10
I0
sg11
S'set the cursor property as'
p11272
sg12
Vfigtext.cursor_props
p11273
sg14
(lp11274
sg2
S'cursor_props'
p11275
sba(icodemend.demo.code_suggest
Element
p11276
(dp11277
g10
I0
sg11
S'set the font family .'
p11278
sg12
Vfigtext.family
p11279
sg14
(lp11280
sg2
S'family'
p11281
sba(icodemend.demo.code_suggest
Element
p11282
(dp11283
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p11284
sg12
Vfigtext.figure
p11285
sg14
(lp11286
sg2
S'figure'
p11287
sba(icodemend.demo.code_suggest
Element
p11288
(dp11289
g10
I0
sg11
S'set the properties by parsing a fontconfig pattern .'
p11290
sg12
Vfigtext.fontconfig_pattern
p11291
sg14
(lp11292
sg2
S'fontconfig_pattern'
p11293
sba(icodemend.demo.code_suggest
Element
p11294
(dp11295
g10
I0
sg11
S'a dictionary to override the default text properties . if fontdict is none , the defaults are determined by your rc parameters .'
p11296
sg12
Vfigtext.fontdict
p11297
sg14
(lp11298
sg2
S'fontdict'
p11299
sba(icodemend.demo.code_suggest
Element
p11300
(dp11301
g10
I0
sg11
S'set the font properties that control the text .'
p11302
sg12
Vfigtext.fontproperties
p11303
sg14
(lp11304
sg2
S'fontproperties'
p11305
sba(icodemend.demo.code_suggest
Element
p11306
(dp11307
g10
I0
sg11
S'sets the ( group ) id for the artist'
p11308
sg12
Vfigtext.gid
p11309
sg14
(lp11310
sg2
S'gid'
p11311
sba(icodemend.demo.code_suggest
Element
p11312
(dp11313
g10
I0
sg11
S'set the hatching pattern'
p11314
sg12
Vfigtext.hatch
p11315
sg14
(lp11316
sg2
S'hatch'
p11317
sba(icodemend.demo.code_suggest
Element
p11318
(dp11319
g10
I0
sg11
S'set the horizontal alignment to one of'
p11320
sg12
Vfigtext.horizontalalignment
p11321
sg14
(lp11322
sg2
S'horizontalalignment'
p11323
sba(icodemend.demo.code_suggest
Element
p11324
(dp11325
g10
I0
sg11
S'other miscellaneous text parameters .'
p11326
sg12
Vfigtext.kwargs
p11327
sg14
(lp11328
sg2
S'kwargs'
p11329
sba(icodemend.demo.code_suggest
Element
p11330
(dp11331
g10
I0
sg11
S'set the label to s for auto legend .'
p11332
sg12
Vfigtext.label
p11333
sg14
(lp11334
sg2
S'label'
p11335
sba(icodemend.demo.code_suggest
Element
p11336
(dp11337
g10
I0
sg11
S'set the line spacing as a multiple of the font size .'
p11338
sg12
Vfigtext.linespacing
p11339
sg14
(lp11340
sg2
S'linespacing'
p11341
sba(icodemend.demo.code_suggest
Element
p11342
(dp11343
g10
I0
sg11
S'set the patch linestyle'
p11344
sg12
Vfigtext.linestyle
p11345
sg14
(lp11346
sg2
S'linestyle'
p11347
sba(icodemend.demo.code_suggest
Element
p11348
(dp11349
g10
I0
sg11
S'set the alignment for multiple lines layout .'
p11350
sg12
Vfigtext.multialignment
p11351
sg14
(lp11352
sg2
S'multialignment'
p11353
sba(icodemend.demo.code_suggest
Element
p11354
(dp11355
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p11356
sg12
Vfigtext.path_effects
p11357
sg14
(lp11358
sg2
S'path_effects'
p11359
sba(icodemend.demo.code_suggest
Element
p11360
(dp11361
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p11362
sg12
Vfigtext.picker
p11363
sg14
(lp11364
sg2
S'picker'
p11365
sba(icodemend.demo.code_suggest
Element
p11366
(dp11367
g10
I0
sg11
S'set the axes position with|||set the ( x , y ) position of the text'
p11368
sg12
Vfigtext.position
p11369
sg14
(lp11370
sg2
S'position'
p11371
sba(icodemend.demo.code_suggest
Element
p11372
(dp11373
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p11374
sg12
Vfigtext.prop_cycle
p11375
sg14
(lp11376
sg2
S'prop_cycle'
p11377
sba(icodemend.demo.code_suggest
Element
p11378
(dp11379
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p11380
sg12
Vfigtext.rasterized
p11381
sg14
(lp11382
sg2
S'rasterized'
p11383
sba(icodemend.demo.code_suggest
Element
p11384
(dp11385
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p11386
sg12
Vfigtext.readonly
p11387
sg14
(lp11388
sg2
S'readonly'
p11389
sba(icodemend.demo.code_suggest
Element
p11390
(dp11391
g10
I0
sg11
S'set text rotation mode .'
p11392
sg12
Vfigtext.rotation_mode
p11393
sg14
(lp11394
sg2
S'rotation_mode'
p11395
sbag8115
a(icodemend.demo.code_suggest
Element
p11396
(dp11397
g10
I0
sg11
S'set the font size .'
p11398
sg12
Vfigtext.size
p11399
sg14
(lp11400
sg2
S'size'
p11401
sba(icodemend.demo.code_suggest
Element
p11402
(dp11403
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p11404
sg12
Vfigtext.size_inches
p11405
sg14
(lp11406
sg2
S'size_inches'
p11407
sba(icodemend.demo.code_suggest
Element
p11408
(dp11409
g10
I0
sg11
S'sets the sketch parameters .'
p11410
sg12
Vfigtext.sketch_params
p11411
sg14
(lp11412
sg2
S'sketch_params'
p11413
sba(icodemend.demo.code_suggest
Element
p11414
(dp11415
g10
I0
sg11
S'sets the snap setting which may be'
p11416
sg12
Vfigtext.snap
p11417
sg14
(lp11418
sg2
S'snap'
p11419
sba(icodemend.demo.code_suggest
Element
p11420
(dp11421
g10
I0
sg11
S'set the font stretch ( horizontal condensation or expansion ) .'
p11422
sg12
Vfigtext.stretch
p11423
sg14
(lp11424
sg2
S'stretch'
p11425
sba(icodemend.demo.code_suggest
Element
p11426
(dp11427
g10
I0
sg11
S'set the font style .'
p11428
sg12
Vfigtext.style
p11429
sg14
(lp11430
sg2
S'style'
p11431
sba(icodemend.demo.code_suggest
Element
p11432
(dp11433
g10
I0
sg11
S'set the text string s'
p11434
sg12
Vfigtext.text
p11435
sg14
(lp11436
sg2
S'text'
p11437
sba(icodemend.demo.code_suggest
Element
p11438
(dp11439
g10
I0
sg11
S'set a title for the axes .'
p11440
sg12
Vfigtext.title
p11441
sg14
(lp11442
sg2
S'title'
p11443
sba(icodemend.demo.code_suggest
Element
p11444
(dp11445
g10
I0
sg11
S'set the transform instance used by this artist .'
p11446
sg12
Vfigtext.transform
p11447
sg14
(lp11448
sg2
S'transform'
p11449
sba(icodemend.demo.code_suggest
Element
p11450
(dp11451
g10
I0
sg11
S'sets the url for the artist'
p11452
sg12
Vfigtext.url
p11453
sg14
(lp11454
sg2
S'url'
p11455
sba(icodemend.demo.code_suggest
Element
p11456
(dp11457
g10
I0
sg11
S'set this text object to render using tex ( or not ) .'
p11458
sg12
Vfigtext.usetex
p11459
sg14
(lp11460
sg2
S'usetex'
p11461
sba(icodemend.demo.code_suggest
Element
p11462
(dp11463
g10
I0
sg11
S"set the font variant , either ' normal ' or ' small-caps ' ."
p11464
sg12
Vfigtext.variant
p11465
sg14
(lp11466
sg2
S'variant'
p11467
sbag10709
a(icodemend.demo.code_suggest
Element
p11468
(dp11469
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p11470
sg12
Vfigtext.vertices
p11471
sg14
(lp11472
sg2
S'vertices'
p11473
sba(icodemend.demo.code_suggest
Element
p11474
(dp11475
g10
I0
sg11
S"set the artist 's visiblity ."
p11476
sg12
Vfigtext.visible
p11477
sg14
(lp11478
sg2
S'visible'
p11479
sba(icodemend.demo.code_suggest
Element
p11480
(dp11481
g10
I0
sg11
S'set the font weight .'
p11482
sg12
Vfigtext.weight
p11483
sg14
(lp11484
sg2
S'weight'
p11485
sba(icodemend.demo.code_suggest
Element
p11486
(dp11487
g10
I0
sg11
S'creates a textwithdash instance instead of a text instance .'
p11488
sg12
Vfigtext.withdash
p11489
sg14
(lp11490
sg2
S'withdash'
p11491
sba(icodemend.demo.code_suggest
Element
p11492
(dp11493
g10
I0
sg11
S'sets the wrapping state for the text .'
p11494
sg12
Vfigtext.wrap
p11495
sg14
(lp11496
sg2
S'wrap'
p11497
sba(icodemend.demo.code_suggest
Element
p11498
(dp11499
g10
I0
sg11
S'set the x position of the text|||add text to figure at location x , y ( relative 0-1 coords ) . see text ( ) for the meaning of the other arguments .'
p11500
sg12
Vfigtext.x
p11501
sg14
(lp11502
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p11503
(dp11504
g10
I0
sg11
S'data coordinates'
p11505
sg12
Vfigtext.x, y
p11506
sg14
(lp11507
sg2
S'x, y'
p11508
sba(icodemend.demo.code_suggest
Element
p11509
(dp11510
g10
I0
sg11
S'set the label for the xaxis .'
p11511
sg12
Vfigtext.xlabel
p11512
sg14
(lp11513
sg2
S'xlabel'
p11514
sba(icodemend.demo.code_suggest
Element
p11515
(dp11516
g10
I0
sg11
S'set the data limits for the xaxis'
p11517
sg12
Vfigtext.xlim
p11518
sg14
(lp11519
sg2
S'xlim'
p11520
sba(icodemend.demo.code_suggest
Element
p11521
(dp11522
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p11523
sg12
Vfigtext.xmargin
p11524
sg14
(lp11525
sg2
S'xmargin'
p11526
sba(icodemend.demo.code_suggest
Element
p11527
(dp11528
g10
I0
sg11
S'set the scaling of the x-axis'
p11529
sg12
Vfigtext.xscale
p11530
sg14
(lp11531
sg2
S'xscale'
p11532
sba(icodemend.demo.code_suggest
Element
p11533
(dp11534
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p11535
sg12
Vfigtext.xticklabels
p11536
sg14
(lp11537
sg2
S'xticklabels'
p11538
sba(icodemend.demo.code_suggest
Element
p11539
(dp11540
g10
I0
sg11
S'set the x ticks with list of ticks'
p11541
sg12
Vfigtext.xticks
p11542
sg14
(lp11543
sg2
S'xticks'
p11544
sba(icodemend.demo.code_suggest
Element
p11545
(dp11546
g10
I0
sg11
S'set the y position of the text|||add text to figure at location x , y ( relative 0-1 coords ) . see text ( ) for the meaning of the other arguments .'
p11547
sg12
Vfigtext.y
p11548
sg14
(lp11549
sg2
S'y'
sba(icodemend.demo.code_suggest
Element
p11550
(dp11551
g10
I0
sg11
S'set the label for the yaxis'
p11552
sg12
Vfigtext.ylabel
p11553
sg14
(lp11554
sg2
S'ylabel'
p11555
sbag10403
ag5940
a(icodemend.demo.code_suggest
Element
p11556
(dp11557
g10
I0
sg11
S'set the scaling of the y-axis'
p11558
sg12
Vfigtext.yscale
p11559
sg14
(lp11560
sg2
S'yscale'
p11561
sba(icodemend.demo.code_suggest
Element
p11562
(dp11563
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p11564
sg12
Vfigtext.yticklabels
p11565
sg14
(lp11566
sg2
S'yticklabels'
p11567
sba(icodemend.demo.code_suggest
Element
p11568
(dp11569
g10
I0
sg11
S'set the y ticks with list of ticks'
p11570
sg12
Vfigtext.yticks
p11571
sg14
(lp11572
sg2
S'yticks'
p11573
sba(icodemend.demo.code_suggest
Element
p11574
(dp11575
g10
I0
sg11
S'set the zorder for the artist .'
p11576
sg12
Vfigtext.zorder
p11577
sg14
(lp11578
sg2
S'zorder'
p11579
sbasg2
g11148
sbs(g93
g161
S'(timeNow, y)'
p11580
tp11581
(icodemend.demo.code_suggest
Element
p11582
(dp11583
g10
I1
sg11
S''
sg12
Vannotate.xy.(timeNow, y)
p11584
sg14
(lp11585
sg2
g11580
sbsS'tricontourf'
p11586
(icodemend.demo.code_suggest
Element
p11587
(dp11588
g10
I7
sg11
S'draw contours on an unstructured triangular grid .'
p11589
sg12
Vtricontourf
p11590
sg14
(lp11591
(icodemend.demo.code_suggest
Element
p11592
(dp11593
g10
I3
sg11
S'a cm colormap instance or none . if cmap is none and colors is none , a default colormap is used .'
p11594
sg12
Vtricontourf.cmap
p11595
sg14
(lp11596
(icodemend.demo.code_suggest
Element
p11597
(dp11598
g10
I1
sg11
S''
sg12
Vtricontourf.cmap.cmap
p11599
sg14
(lp11600
sg2
g325
sbasg2
S'cmap'
p11601
sbag657
a(icodemend.demo.code_suggest
Element
p11602
(dp11603
g10
I1
sg11
S'a matplotlib.colors.normalize instance for scaling data values to colors . if norm is none and colors is none , the default linear scaling is used .'
p11604
sg12
Vtricontourf.norm
p11605
sg14
(lp11606
sg2
S'norm'
p11607
sba(icodemend.demo.code_suggest
Element
p11608
(dp11609
g10
I1
sg11
S"if none , the first value of z will correspond to the lower left corner , location ( 0,0 ) . if ' image ' , the rc value for image.origin will be used . this keyword is not active if x and y are specified in the call to contour ."
p11610
sg12
Vtricontourf.origin
p11611
sg14
(lp11612
(icodemend.demo.code_suggest
Element
p11613
(dp11614
g10
I1
sg11
S''
sg12
Vtricontourf.origin.'lower'
p11615
sg14
(lp11616
sg2
S"'lower'"
p11617
sbasg2
S'origin'
p11618
sba(icodemend.demo.code_suggest
Element
p11619
(dp11620
g10
I0
sg11
S'enable antialiasing'
p11621
sg12
Vtricontourf.False
p11622
sg14
(lp11623
sg2
S'False'
p11624
sbag26
a(icodemend.demo.code_suggest
Element
p11625
(dp11626
g10
I0
sg11
S"if linewidths is none , the default width in lines.linewidth in matplotlibrc is used . if a number , all levels will be plotted with this linewidth . if a tuple , different levels will be plotted with different linewidths in the order specified|||if none , the colormap specified by cmap will be used . if a string , like ' r ' or ' red ' , all levels will be plotted in this color . if a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||if locator is none , the default maxnlocator is used . the locator is used to determine the contour levels if they are not given explicitly via the v argument .|||a matplotlib.colors.normalize instance for scaling data values to colors . if norm is none and colors is none , the default linear scaling is used .|||if none , the first value of z will correspond to the lower left corner , location ( 0,0 ) . if ' image ' , the rc value for image.origin will be used . this keyword is not active if x and y are specified in the call to contour .|||override axis units by specifying an instance of a matplotlib.units.conversioninterface .|||if linestyles is none , the ' solid ' is used . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . if this iterable is shorter than the number of contour levels it will be repeated as necessary . if contour is using a monochrome colormap and the contour level is less than 0 , then the linestyle specified in contour.negative_linestyle in matplotlibrc will be used .|||a cm colormap instance or none . if cmap is none and colors is none , a default colormap is used ."
p11627
sg12
Vtricontourf.None
p11628
sg14
(lp11629
sg2
S'None'
p11630
sba(icodemend.demo.code_suggest
Element
p11631
(dp11632
g10
I0
sg11
S'enable antialiasing'
p11633
sg12
Vtricontourf.True
p11634
sg14
(lp11635
sg2
S'True'
p11636
sba(icodemend.demo.code_suggest
Element
p11637
(dp11638
g10
I0
sg11
S'draw contour lines at the values specified in sequence v , which must be in increasing order .|||fill the ( len(v ) - 1 ) regions between the values in v , which must be in increasing order .'
p11639
sg12
Vtricontourf.V
p11640
sg14
(lp11641
sg2
S'V'
sba(icodemend.demo.code_suggest
Element
p11642
(dp11643
g10
I0
sg11
S'where z is the array of values to contour , one per point in the triangulation . the level values are chosen automatically .'
p11644
sg12
Vtricontourf.Z
p11645
sg14
(lp11646
sg2
S'Z'
sba(icodemend.demo.code_suggest
Element
p11647
(dp11648
g10
I0
sg11
S'the alpha blending value'
p11649
sg12
Vtricontourf.alpha
p11650
sg14
(lp11651
sg2
S'alpha'
p11652
sba(icodemend.demo.code_suggest
Element
p11653
(dp11654
g10
I0
sg11
S'enable antialiasing'
p11655
sg12
Vtricontourf.antialiased
p11656
sg14
(lp11657
sg2
S'antialiased'
p11658
sba(icodemend.demo.code_suggest
Element
p11659
(dp11660
g10
I0
sg11
S"if none , the colormap specified by cmap will be used . if a string , like ' r ' or ' red ' , all levels will be plotted in this color . if a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified ."
p11661
sg12
Vtricontourf.colors
p11662
sg14
(lp11663
sg2
S'colors'
p11664
sba(icodemend.demo.code_suggest
Element
p11665
(dp11666
g10
I0
sg11
S"unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included . these added ranges are then mapped to the special colormap values which default to the ends of the colormap range , but can be set via matplotlib.colors.colormap.set_under ( ) and matplotlib.colors.colormap.set_over ( ) methods ."
p11667
sg12
Vtricontourf.extend
p11668
sg14
(lp11669
sg2
S'extend'
p11670
sba(icodemend.demo.code_suggest
Element
p11671
(dp11672
g10
I0
sg11
S"if linestyles is none , the ' solid ' is used . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . if this iterable is shorter than the number of contour levels it will be repeated as necessary . if contour is using a monochrome colormap and the contour level is less than 0 , then the linestyle specified in contour.negative_linestyle in matplotlibrc will be used ."
p11673
sg12
Vtricontourf.linestyles
p11674
sg14
(lp11675
sg2
S'linestyles'
p11676
sba(icodemend.demo.code_suggest
Element
p11677
(dp11678
g10
I0
sg11
S'if linewidths is none , the default width in lines.linewidth in matplotlibrc is used . if a number , all levels will be plotted with this linewidth . if a tuple , different levels will be plotted with different linewidths in the order specified'
p11679
sg12
Vtricontourf.linewidths
p11680
sg14
(lp11681
sg2
S'linewidths'
p11682
sba(icodemend.demo.code_suggest
Element
p11683
(dp11684
g10
I0
sg11
S'if locator is none , the default maxnlocator is used . the locator is used to determine the contour levels if they are not given explicitly via the v argument .'
p11685
sg12
Vtricontourf.locator
p11686
sg14
(lp11687
sg2
S'locator'
p11688
sbag712
a(icodemend.demo.code_suggest
Element
p11689
(dp11690
g10
I0
sg11
S'override axis units by specifying an instance of a matplotlib.units.conversioninterface .'
p11691
sg12
Vtricontourf.yunits
p11692
sg14
(lp11693
sg2
S'yunits'
p11694
sba(icodemend.demo.code_suggest
Element
p11695
(dp11696
g10
I0
sg11
S'there is one exception : if the lowest boundary coincides with the minimum value of the z array , then that minimum value will be included in the lowest interval .'
p11697
sg12
Vtricontourf.z
p11698
sg14
(lp11699
sg2
S'z'
sbag4979
a(icodemend.demo.code_suggest
Element
p11700
(dp11701
g10
I0
sg11
S'note : tricontourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :'
p11702
sg12
Vtricontourf.z2
p11703
sg14
(lp11704
sg2
S'z2'
p11705
sbasg2
g11586
sbs(g245
g140
S'(12, 10)'
p11706
tp11707
(icodemend.demo.code_suggest
Element
p11708
(dp11709
g10
I2
sg11
S''
sg12
Vfigure.figsize.(12, 10)
p11710
sg14
(lp11711
sg2
g11706
sbs(g16
g453
g7174
tp11712
(icodemend.demo.code_suggest
Element
p11713
(dp11714
g10
I1
sg11
S''
sg12
Vbar.yerr.err
p11715
sg14
(lp11716
sg2
g7174
sbs(S'pcolor'
p11717
S'figure'
p11718
tp11719
(icodemend.demo.code_suggest
Element
p11720
(dp11721
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p11722
sg12
Vpcolor.figure
p11723
sg14
(lp11724
sg2
g11718
sbs(g1205
S'auto'
p11725
g1944
tp11726
g4607
sS'get_annotation_clip'
p11727
(icodemend.demo.code_suggest
Element
p11728
(dp11729
g10
I0
sg11
S'return annotation_clip attribute .'
p11730
sg12
Vget_annotation_clip
p11731
sg14
(lp11732
(icodemend.demo.code_suggest
Element
p11733
(dp11734
g10
I0
sg11
S'return annotation_clip attribute . see set_annotation_clip ( ) for the meaning of return values .'
p11735
sg12
Vget_annotation_clip.annotation_clip
p11736
sg14
(lp11737
sg2
S'annotation_clip'
p11738
sbasg2
g11727
sbs(S'pcolor'
p11739
S'xmargin'
p11740
tp11741
(icodemend.demo.code_suggest
Element
p11742
(dp11743
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p11744
sg12
Vpcolor.xmargin
p11745
sg14
(lp11746
sg2
g11740
sbs(S'axvline'
p11747
S'xscale'
p11748
tp11749
(icodemend.demo.code_suggest
Element
p11750
(dp11751
g10
I0
sg11
S'set the scaling of the x-axis'
p11752
sg12
Vaxvline.xscale
p11753
sg14
(lp11754
sg2
g11748
sbsS'enable'
p11755
(icodemend.demo.code_suggest
Element
p11756
(dp11757
g10
I1
sg11
S'enable the toggle tool connect press/release events and lock the canvas'
p11758
sg12
Venable
p11759
sg14
(lp11760
sg2
g11755
sbs(g16
g132
S'clr'
p11761
tp11762
(icodemend.demo.code_suggest
Element
p11763
(dp11764
g10
I1
sg11
S''
sg12
Vbar.color.clr
p11765
sg14
(lp11766
sg2
g11761
sbs(g324
g325
g9212
tp11767
g9208
s(g4998
g8538
S"'k'"
p11768
tp11769
(icodemend.demo.code_suggest
Element
p11770
(dp11771
g10
I2
sg11
S''
sg12
Vpcolormesh.edgecolors.'k'
p11772
sg14
(lp11773
sg2
g11768
sbs(S'plot_date'
p11774
S'fillstyle'
p11775
tp11776
(icodemend.demo.code_suggest
Element
p11777
(dp11778
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p11779
sg12
Vplot_date.fillstyle
p11780
sg14
(lp11781
sg2
g11775
sbs(S'add_axes'
p11782
S'contains'
p11783
tp11784
(icodemend.demo.code_suggest
Element
p11785
(dp11786
g10
I0
sg11
S'replace the contains test used by this artist .'
p11787
sg12
Vadd_axes.contains
p11788
sg14
(lp11789
sg2
g11783
sbsS'Path'
p11790
(icodemend.demo.code_suggest
Element
p11791
(dp11792
g10
I28
sg11
S''
sg12
VPath
p11793
sg14
(lp11794
(icodemend.demo.code_suggest
Element
p11795
(dp11796
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p11797
sg12
VPath._interpolation_steps
p11798
sg14
(lp11799
sg2
S'_interpolation_steps'
p11800
sba(icodemend.demo.code_suggest
Element
p11801
(dp11802
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p11803
sg12
VPath.closed
p11804
sg14
(lp11805
sg2
S'closed'
p11806
sba(icodemend.demo.code_suggest
Element
p11807
(dp11808
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p11809
sg12
VPath.codes
p11810
sg14
(lp11811
sg2
S'codes'
p11812
sba(icodemend.demo.code_suggest
Element
p11813
(dp11814
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p11815
sg12
VPath.readonly
p11816
sg14
(lp11817
sg2
S'readonly'
p11818
sba(icodemend.demo.code_suggest
Element
p11819
(dp11820
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p11821
sg12
VPath.vertices
p11822
sg14
(lp11823
sg2
S'vertices'
p11824
sbasg2
g11790
sbsS'new_figure_manager'
p11825
(icodemend.demo.code_suggest
Element
p11826
(dp11827
g10
I2
sg11
S'create a new figure manager instance'
p11828
sg12
Vnew_figure_manager
p11829
sg14
(lp11830
sg2
g11825
sbs(S'thumbnail'
p11831
S'preview'
p11832
tp11833
(icodemend.demo.code_suggest
Element
p11834
(dp11835
g10
I0
sg11
S"if true , the default backend ( presumably a user interface backend ) will be used which will cause a figure to be raised if show ( ) is called . if it is false , a pure image backend will be used depending on the extension , ' png'->figurecanvasagg , ' pdf'->figurecanvaspdf , ' svg'->figurecanvassvg"
p11836
sg12
Vthumbnail.preview
p11837
sg14
(lp11838
sg2
g11832
sbs(S'psd'
p11839
S'markersize'
p11840
tp11841
(icodemend.demo.code_suggest
Element
p11842
(dp11843
g10
I0
sg11
S'set the marker size in points'
p11844
sg12
Vpsd.markersize
p11845
sg14
(lp11846
sg2
g11840
sbs(S'cleaned'
p11847
S'simplify'
p11848
tp11849
(icodemend.demo.code_suggest
Element
p11850
(dp11851
g10
I0
sg11
S'vertices that do not affect the appearance of the path . if false , perform no simplification . if none , use the should_simplify member variable .'
p11852
sg12
Vcleaned.simplify
p11853
sg14
(lp11854
sg2
g11848
sbs(S'tricontourf'
p11855
S'Z'
tp11856
g11642
s(g117
g118
S"'data1'"
p11857
tp11858
(icodemend.demo.code_suggest
Element
p11859
(dp11860
g10
I2
sg11
S''
sg12
Vplot.label.'data1'
p11861
sg14
(lp11862
sg2
g11857
sbs(g1170
g118
S"'0'"
p11863
tp11864
(icodemend.demo.code_suggest
Element
p11865
(dp11866
g10
I1
sg11
S''
sg12
Vhist.label.'0'
p11867
sg14
(lp11868
sg2
g11863
sbsS'colorbar'
p11869
(icodemend.demo.code_suggest
Element
p11870
(dp11871
g10
I548
sg11
S'add a colorbar to a plot . create a colorbar for a scalarmappable instance , mappable .'
p11872
sg12
Vcolorbar
p11873
sg14
(lp11874
(icodemend.demo.code_suggest
Element
p11875
(dp11876
g10
I77
sg11
S'none | axes object into which the colorbar will be drawn'
p11877
sg12
Vcolorbar.cax
p11878
sg14
(lp11879
(icodemend.demo.code_suggest
Element
p11880
(dp11881
g10
I25
sg11
S''
sg12
Vcolorbar.cax.cax
p11882
sg14
(lp11883
sg2
g5641
sba(icodemend.demo.code_suggest
Element
p11884
(dp11885
g10
I8
sg11
S''
sg12
Vcolorbar.cax.cbar_ax
p11886
sg14
(lp11887
sg2
S'cbar_ax'
p11888
sba(icodemend.demo.code_suggest
Element
p11889
(dp11890
g10
I5
sg11
S''
sg12
Vcolorbar.cax.ax2
p11891
sg14
(lp11892
sg2
g10496
sba(icodemend.demo.code_suggest
Element
p11893
(dp11894
g10
I4
sg11
S''
sg12
Vcolorbar.cax.cax1
p11895
sg14
(lp11896
sg2
S'cax1'
p11897
sba(icodemend.demo.code_suggest
Element
p11898
(dp11899
g10
I4
sg11
S''
sg12
Vcolorbar.cax.cbaxes
p11900
sg14
(lp11901
sg2
S'cbaxes'
p11902
sba(icodemend.demo.code_suggest
Element
p11903
(dp11904
g10
I3
sg11
S''
sg12
Vcolorbar.cax.ax3
p11905
sg14
(lp11906
sg2
g10501
sba(icodemend.demo.code_suggest
Element
p11907
(dp11908
g10
I3
sg11
S''
sg12
Vcolorbar.cax.cax2
p11909
sg14
(lp11910
sg2
S'cax2'
p11911
sba(icodemend.demo.code_suggest
Element
p11912
(dp11913
g10
I2
sg11
S''
sg12
Vcolorbar.cax.axcolor
p11914
sg14
(lp11915
sg2
S'axcolor'
p11916
sba(icodemend.demo.code_suggest
Element
p11917
(dp11918
g10
I2
sg11
S''
sg12
Vcolorbar.cax.axes
p11919
sg14
(lp11920
sg2
S'axes'
p11921
sbag10009
a(icodemend.demo.code_suggest
Element
p11922
(dp11923
g10
I2
sg11
S''
sg12
Vcolorbar.cax.cax4
p11924
sg14
(lp11925
sg2
S'cax4'
p11926
sba(icodemend.demo.code_suggest
Element
p11927
(dp11928
g10
I1
sg11
S''
sg12
Vcolorbar.cax.axColor
p11929
sg14
(lp11930
sg2
S'axColor'
p11931
sba(icodemend.demo.code_suggest
Element
p11932
(dp11933
g10
I1
sg11
S''
sg12
Vcolorbar.cax.ax_cb
p11934
sg14
(lp11935
sg2
S'ax_cb'
p11936
sba(icodemend.demo.code_suggest
Element
p11937
(dp11938
g10
I1
sg11
S''
sg12
Vcolorbar.cax.ax_cb1
p11939
sg14
(lp11940
sg2
S'ax_cb1'
p11941
sbag6036
a(icodemend.demo.code_suggest
Element
p11942
(dp11943
g10
I1
sg11
S''
sg12
Vcolorbar.cax.bar_ax
p11944
sg14
(lp11945
sg2
S'bar_ax'
p11946
sba(icodemend.demo.code_suggest
Element
p11947
(dp11948
g10
I1
sg11
S''
sg12
Vcolorbar.cax.cax5
p11949
sg14
(lp11950
sg2
S'cax5'
p11951
sba(icodemend.demo.code_suggest
Element
p11952
(dp11953
g10
I1
sg11
S''
sg12
Vcolorbar.cax.cax6
p11954
sg14
(lp11955
sg2
S'cax6'
p11956
sba(icodemend.demo.code_suggest
Element
p11957
(dp11958
g10
I1
sg11
S''
sg12
Vcolorbar.cax.cax7
p11959
sg14
(lp11960
sg2
S'cax7'
p11961
sba(icodemend.demo.code_suggest
Element
p11962
(dp11963
g10
I1
sg11
S''
sg12
Vcolorbar.cax.cax8
p11964
sg14
(lp11965
sg2
S'cax8'
p11966
sba(icodemend.demo.code_suggest
Element
p11967
(dp11968
g10
I1
sg11
S''
sg12
Vcolorbar.cax.cax9
p11969
sg14
(lp11970
sg2
S'cax9'
p11971
sbag5644
a(icodemend.demo.code_suggest
Element
p11972
(dp11973
g10
I1
sg11
S''
sg12
Vcolorbar.cax.position
p11974
sg14
(lp11975
sg2
g4225
sbasg2
S'cax'
p11976
sbag10473
a(icodemend.demo.code_suggest
Element
p11977
(dp11978
g10
I30
sg11
S'note that the shrink kwarg provides a simple way to keep a vertical colorbar , for example , from being taller than the axes of the mappable to which the colorbar is attached ; but it is a manual method requiring some trial and error . if the colorbar is too tall ( or a horizontal colorbar is too wide ) use a smaller value of shrink .'
p11979
sg12
Vcolorbar.shrink
p11980
sg14
(lp11981
(icodemend.demo.code_suggest
Element
p11982
(dp11983
g10
I19
sg11
S''
sg12
Vcolorbar.shrink.0/5
p11984
sg14
(lp11985
sg2
S'0.5'
p11986
sba(icodemend.demo.code_suggest
Element
p11987
(dp11988
g10
I4
sg11
S''
sg12
Vcolorbar.shrink.0/75
p11989
sg14
(lp11990
sg2
S'0.75'
p11991
sba(icodemend.demo.code_suggest
Element
p11992
(dp11993
g10
I2
sg11
S''
sg12
Vcolorbar.shrink.0/25
p11994
sg14
(lp11995
sg2
S'0.25'
p11996
sba(icodemend.demo.code_suggest
Element
p11997
(dp11998
g10
I2
sg11
S''
sg12
Vcolorbar.shrink.0/8
p11999
sg14
(lp12000
sg2
S'0.8'
p12001
sba(icodemend.demo.code_suggest
Element
p12002
(dp12003
g10
I1
sg11
S''
sg12
Vcolorbar.shrink.0/4
p12004
sg14
(lp12005
sg2
S'0.4'
p12006
sba(icodemend.demo.code_suggest
Element
p12007
(dp12008
g10
I1
sg11
S''
sg12
Vcolorbar.shrink.0/9
p12009
sg14
(lp12010
sg2
S'0.9'
p12011
sba(icodemend.demo.code_suggest
Element
p12012
(dp12013
g10
I1
sg11
S''
sg12
Vcolorbar.shrink.1
p12014
sg14
(lp12015
sg2
S'1'
sbasg2
S'shrink'
p12016
sba(icodemend.demo.code_suggest
Element
p12017
(dp12018
g10
I10
sg11
S'if mappable is a contourset , its extend kwarg is included automatically .'
p12019
sg12
Vcolorbar.extend
p12020
sg14
(lp12021
(icodemend.demo.code_suggest
Element
p12022
(dp12023
g10
I4
sg11
S''
sg12
Vcolorbar.extend.'both'
p12024
sg14
(lp12025
sg2
S"'both'"
p12026
sba(icodemend.demo.code_suggest
Element
p12027
(dp12028
g10
I3
sg11
S''
sg12
Vcolorbar.extend.'max'
p12029
sg14
(lp12030
sg2
S"'max'"
p12031
sba(icodemend.demo.code_suggest
Element
p12032
(dp12033
g10
I3
sg11
S''
sg12
Vcolorbar.extend.'min'
p12034
sg14
(lp12035
sg2
S"'min'"
p12036
sbasg2
S'extend'
p12037
sba(icodemend.demo.code_suggest
Element
p12038
(dp12039
g10
I5
sg11
S'the image , contourset , etc. to which the colorbar applies ; this argument is mandatory for the colorbar ( ) method but optional for the colorbar ( ) function , which sets the default to the current image .|||if mappable is a contourset , its extend kwarg is included automatically .|||create a colorbar for a scalarmappable instance , mappable .'
p12040
sg12
Vcolorbar.mappable
p12041
sg14
(lp12042
(icodemend.demo.code_suggest
Element
p12043
(dp12044
g10
I2
sg11
S''
sg12
Vcolorbar.mappable.s
p12045
sg14
(lp12046
sg2
S's'
sba(icodemend.demo.code_suggest
Element
p12047
(dp12048
g10
I1
sg11
S''
sg12
Vcolorbar.mappable.heatmap
p12049
sg14
(lp12050
sg2
S'heatmap'
p12051
sbag8070
ag8076
asg2
S'mappable'
p12052
sba(icodemend.demo.code_suggest
Element
p12053
(dp12054
g10
I1
sg11
S'false | if cax is none , a new cax is created as an instance of axes . if ax is an instance of subplot and use_gridspec is true , cax is created as an instance of subplot using the grid_spec module .'
p12055
sg12
Vcolorbar.use_gridspec
p12056
sg14
(lp12057
(icodemend.demo.code_suggest
Element
p12058
(dp12059
g10
I1
sg11
S''
sg12
Vcolorbar.use_gridspec.True
p12060
sg14
(lp12061
sg2
g438
sbasg2
S'use_gridspec'
p12062
sbasg2
g11869
sbs(g252
g253
S'(0.5, (-0.1))'
p12063
tp12064
(icodemend.demo.code_suggest
Element
p12065
(dp12066
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/5, (-0/1))
p12067
sg14
(lp12068
sg2
g12063
sbs(g766
g666
g3993
tp12069
g3989
s(S'SimplePatchShadow'
p12070
S'shadow_rgbFace'
p12071
tp12072
(icodemend.demo.code_suggest
Element
p12073
(dp12074
g10
I0
sg11
S'the shadow color .'
p12075
sg12
VSimplePatchShadow.shadow_rgbFace
p12076
sg14
(lp12077
sg2
g12071
sbs(S'rec_groupby'
p12078
S'groupby'
p12079
tp12080
(icodemend.demo.code_suggest
Element
p12081
(dp12082
g10
I0
sg11
S"return record array has dtype names for each attribute name in the groupby argument , with the associated group values , and for each outname name in the stats argument , with the associated stat summary output .|||groupby is a sequence of record array attribute names that together form the grouping key . e.g. , ( ' date ' , ' productcode ' )"
p12083
sg12
Vrec_groupby.groupby
p12084
sg14
(lp12085
sg2
g12079
sbs(S'psd'
p12086
S'contains'
p12087
tp12088
(icodemend.demo.code_suggest
Element
p12089
(dp12090
g10
I0
sg11
S'replace the contains test used by this artist .'
p12091
sg12
Vpsd.contains
p12092
sg14
(lp12093
sg2
g12087
sbs(g117
g118
S"'Prop (a)'"
p12094
tp12095
(icodemend.demo.code_suggest
Element
p12096
(dp12097
g10
I1
sg11
S''
sg12
Vplot.label.'Prop (a)'
p12098
sg14
(lp12099
sg2
g12094
sbs(S'errorbar'
p12100
S'marker'
p12101
tp12102
(icodemend.demo.code_suggest
Element
p12103
(dp12104
g10
I13
sg11
S'set the line marker'
p12105
sg12
Verrorbar.marker
p12106
sg14
(lp12107
(icodemend.demo.code_suggest
Element
p12108
(dp12109
g10
I4
sg11
S''
sg12
Verrorbar.marker.'/'
p12110
sg14
(lp12111
sg2
S"'.'"
p12112
sba(icodemend.demo.code_suggest
Element
p12113
(dp12114
g10
I4
sg11
S''
sg12
Verrorbar.marker.'o'
p12115
sg14
(lp12116
sg2
S"'o'"
p12117
sba(icodemend.demo.code_suggest
Element
p12118
(dp12119
g10
I3
sg11
S''
sg12
Verrorbar.marker.None
p12120
sg14
(lp12121
sg2
g865
sba(icodemend.demo.code_suggest
Element
p12122
(dp12123
g10
I1
sg11
S''
sg12
Verrorbar.marker.''
p12124
sg14
(lp12125
sg2
S"''"
p12126
sba(icodemend.demo.code_suggest
Element
p12127
(dp12128
g10
I1
sg11
S''
sg12
Verrorbar.marker.'^'
p12129
sg14
(lp12130
sg2
S"'^'"
p12131
sbasg2
g12101
sbs(S'barh'
p12132
S'gid'
p12133
tp12134
(icodemend.demo.code_suggest
Element
p12135
(dp12136
g10
I0
sg11
S'sets the ( group ) id for the artist'
p12137
sg12
Vbarh.gid
p12138
sg14
(lp12139
sg2
g12133
sbs(S'revcmap'
p12140
S'data'
p12141
tp12142
(icodemend.demo.code_suggest
Element
p12143
(dp12144
g10
I0
sg11
S'can only handle specification data in dictionary format .'
p12145
sg12
Vrevcmap.data
p12146
sg14
(lp12147
sg2
g12141
sbs(S'candlestick2_ochl'
p12148
S'ticksize'
p12149
tp12150
(icodemend.demo.code_suggest
Element
p12151
(dp12152
g10
I0
sg11
S'size of open and close ticks in points'
p12153
sg12
Vcandlestick2_ochl.ticksize
p12154
sg14
(lp12155
sg2
g12149
sbs(g117
g132
S'[1, 0, 0, 0.2]'
p12156
tp12157
(icodemend.demo.code_suggest
Element
p12158
(dp12159
g10
I1
sg11
S''
sg12
Vplot.color.[1, 0, 0, 0/2]
p12160
sg14
(lp12161
sg2
g12156
sbs(g1003
S'patch_artist'
p12162
g1944
tp12163
(icodemend.demo.code_suggest
Element
p12164
(dp12165
g10
I1
sg11
S''
sg12
Vboxplot.patch_artist.False
p12166
sg14
(lp12167
sg2
g1944
sbs(S'semilogx'
p12168
S'cursor_props'
p12169
tp12170
(icodemend.demo.code_suggest
Element
p12171
(dp12172
g10
I0
sg11
S'set the cursor property as'
p12173
sg12
Vsemilogx.cursor_props
p12174
sg14
(lp12175
sg2
g12169
sbs(S'axhspan'
p12176
g102
g8281
tp12177
g8277
s(S'get'
p12178
S'property'
p12179
tp12180
(icodemend.demo.code_suggest
Element
p12181
(dp12182
g10
I0
sg11
S"return the value of object 's property . property is an optional string for the property you want to return|||obj is a artist instance , e.g. , line2d or an instance of a axes or matplotlib.text.text . if the property is ' somename ' , this function returns"
p12183
sg12
Vget.property
p12184
sg14
(lp12185
sg2
g12179
sbsS'toolmanager_connect'
p12186
(icodemend.demo.code_suggest
Element
p12187
(dp12188
g10
I0
sg11
S'connect event with string s to func .'
p12189
sg12
Vtoolmanager_connect
p12190
sg14
(lp12191
(icodemend.demo.code_suggest
Element
p12192
(dp12193
g10
I0
sg11
S'connect event with string s to func .|||function to be called with signature def func(event )'
p12194
sg12
Vtoolmanager_connect.func
p12195
sg14
(lp12196
sg2
S'func'
p12197
sba(icodemend.demo.code_suggest
Element
p12198
(dp12199
g10
I0
sg11
S'name of the event|||connect event with string s to func .'
p12200
sg12
Vtoolmanager_connect.s
p12201
sg14
(lp12202
sg2
S's'
sbasg2
g12186
sbs(g93
g4800
S'(dt, 25)'
p12203
tp12204
(icodemend.demo.code_suggest
Element
p12205
(dp12206
g10
I1
sg11
S''
sg12
Vannotate.xytext.(dt, 25)
p12207
sg14
(lp12208
sg2
g12203
sbsS'set_gamma'
p12209
(icodemend.demo.code_suggest
Element
p12210
(dp12211
g10
I0
sg11
S'set a new gamma value and regenerate color map .'
p12212
sg12
Vset_gamma
p12213
sg14
(lp12214
sg2
g12209
sbsS'value_unescape'
p12215
(icodemend.demo.code_suggest
Element
p12216
(dp12217
g10
I0
sg11
S'sub(repl , string [ , count = 0 ] ) - - > newstring return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl .'
p12218
sg12
Vvalue_unescape
p12219
sg14
(lp12220
sg2
g12215
sbs(S'errorbar'
p12221
S'args'
p12222
tp12223
(icodemend.demo.code_suggest
Element
p12224
(dp12225
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :'
p12226
sg12
Verrorbar.args
p12227
sg14
(lp12228
sg2
g12222
sbs(S'semilogy'
p12229
S'closed'
p12230
tp12231
(icodemend.demo.code_suggest
Element
p12232
(dp12233
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p12234
sg12
Vsemilogy.closed
p12235
sg14
(lp12236
sg2
g12230
sbsS'set_label_text'
p12237
(icodemend.demo.code_suggest
Element
p12238
(dp12239
g10
I2
sg11
S'sets the text value of the axis label'
p12240
sg12
Vset_label_text
p12241
sg14
(lp12242
sg2
g12237
sbsS'mkdirs'
p12243
(icodemend.demo.code_suggest
Element
p12244
(dp12245
g10
I0
sg11
S'make directory newdir recursively , and set mode .'
p12246
sg12
Vmkdirs
p12247
sg14
(lp12248
(icodemend.demo.code_suggest
Element
p12249
(dp12250
g10
I0
sg11
S'make directory newdir recursively , and set mode . equivalent to'
p12251
sg12
Vmkdirs.mode
p12252
sg14
(lp12253
sg2
S'mode'
p12254
sbag7962
asg2
g12243
sbs(g117
g118
S"'This is \\\\textit{line 2}'"
p12255
tp12256
(icodemend.demo.code_suggest
Element
p12257
(dp12258
g10
I1
sg11
S''
sg12
Vplot.label.'This is \u005c\u005ctextit{line 2}'
p12259
sg14
(lp12260
sg2
g12255
sbs(S'axhspan'
p12261
S'gid'
p12262
tp12263
(icodemend.demo.code_suggest
Element
p12264
(dp12265
g10
I0
sg11
S'sets the ( group ) id for the artist'
p12266
sg12
Vaxhspan.gid
p12267
sg14
(lp12268
sg2
g12262
sbs(S'to_filehandle'
p12269
S'fname'
p12270
tp12271
(icodemend.demo.code_suggest
Element
p12272
(dp12273
g10
I0
sg11
S'fname can be a filename or a file handle . support for gzipped files is automatic , if the filename ends in .gz . flag is a read/write flag for file ( )'
p12274
sg12
Vto_filehandle.fname
p12275
sg14
(lp12276
sg2
g12270
sbs(g16
g17
S'bar_width'
p12277
tp12278
(icodemend.demo.code_suggest
Element
p12279
(dp12280
g10
I2
sg11
S''
sg12
Vbar.width.bar_width
p12281
sg14
(lp12282
sg2
g12277
sbsS'set_joinstyle'
p12283
(icodemend.demo.code_suggest
Element
p12284
(dp12285
g10
I0
sg11
S"set the join style to be one of ( ' miter ' , ' round ' , ' bevel ' ) set the patch joinstyle"
p12286
sg12
Vset_joinstyle
p12287
sg14
(lp12288
sg2
g12283
sbs(g117
g132
S"'#112233'"
p12289
tp12290
(icodemend.demo.code_suggest
Element
p12291
(dp12292
g10
I1
sg11
S''
sg12
Vplot.color.'#112233'
p12293
sg14
(lp12294
sg2
g12289
sbs(S'shade'
p12295
S'vmax'
p12296
tp12297
(icodemend.demo.code_suggest
Element
p12298
(dp12299
g10
I0
sg11
S'the maximum value used in colormapping data . if none the maximum value in data is used . if norm is specified , then this argument will be ignored .'
p12300
sg12
Vshade.vmax
p12301
sg14
(lp12302
sg2
g12296
sbsS'get_ticklabel_extents'
p12303
(icodemend.demo.code_suggest
Element
p12304
(dp12305
g10
I0
sg11
S'get the extents of the tick labels on either side of the axes .'
p12306
sg12
Vget_ticklabel_extents
p12307
sg14
(lp12308
sg2
g12303
sbs(S'set_xticklabels'
p12309
S'gid'
p12310
tp12311
(icodemend.demo.code_suggest
Element
p12312
(dp12313
g10
I0
sg11
S'sets the ( group ) id for the artist'
p12314
sg12
Vset_xticklabels.gid
p12315
sg14
(lp12316
sg2
g12310
sbs(S'pcolormesh'
p12317
S'color'
p12318
tp12319
(icodemend.demo.code_suggest
Element
p12320
(dp12321
g10
I0
sg11
S'set both the edgecolor and the facecolor .'
p12322
sg12
Vpcolormesh.color
p12323
sg14
(lp12324
sg2
g12318
sbsS'summer'
p12325
(icodemend.demo.code_suggest
Element
p12326
(dp12327
g10
I0
sg11
S'set the default colormap to summer and apply to current image if any .'
p12328
sg12
Vsummer
p12329
sg14
(lp12330
sg2
g12325
sbs(S'csd'
p12331
S'return_line'
p12332
tp12333
(icodemend.demo.code_suggest
Element
p12334
(dp12335
g10
I0
sg11
S'if return_line is false , returns the tuple ( pxy , freqs ) . if return_line is true , returns the tuple ( pxy , freqs . line ) :'
p12336
sg12
Vcsd.return_line
p12337
sg14
(lp12338
sg2
g12332
sbs(S'barbs'
p12339
S'visible'
p12340
tp12341
(icodemend.demo.code_suggest
Element
p12342
(dp12343
g10
I0
sg11
S"set the artist 's visiblity ."
p12344
sg12
Vbarbs.visible
p12345
sg14
(lp12346
sg2
g12340
sbs(g117
g118
S"'Average Age'"
p12347
tp12348
(icodemend.demo.code_suggest
Element
p12349
(dp12350
g10
I2
sg11
S''
sg12
Vplot.label.'Average Age'
p12351
sg14
(lp12352
sg2
g12347
sbsS'set_canvas'
p12353
(icodemend.demo.code_suggest
Element
p12354
(dp12355
g10
I5
sg11
S'set the canvas that contains the figure'
p12356
sg12
Vset_canvas
p12357
sg14
(lp12358
sg2
g12353
sbs(S'magnitude_spectrum'
p12359
S'drawstyle'
p12360
tp12361
(icodemend.demo.code_suggest
Element
p12362
(dp12363
g10
I0
sg11
S'set the drawstyle of the plot'
p12364
sg12
Vmagnitude_spectrum.drawstyle
p12365
sg14
(lp12366
sg2
g12360
sbs(g16
g132
S"'darkgray'"
p12367
tp12368
(icodemend.demo.code_suggest
Element
p12369
(dp12370
g10
I1
sg11
S''
sg12
Vbar.color.'darkgray'
p12371
sg14
(lp12372
sg2
g12367
sbs(g10679
g132
g5284
tp12373
g5280
s(S'draw_path_collection'
p12374
S'facecolors'
p12375
tp12376
(icodemend.demo.code_suggest
Element
p12377
(dp12378
g10
I0
sg11
S'draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . the offsets in offsets are first transformed by offsettrans before being applied . offset_position may be either " screen " or " data " depending on the space that the offsets are in .'
p12379
sg12
Vdraw_path_collection.facecolors
p12380
sg14
(lp12381
sg2
g12375
sbs(S'register_cmap'
p12382
S'name'
p12383
tp12384
(icodemend.demo.code_suggest
Element
p12385
(dp12386
g10
I1
sg11
S'in the first case , cmap must be a matplotlib.colors.colormap instance . the name is optional ; if absent , the name will be the name attribute of the cmap .'
p12387
sg12
Vregister_cmap.name
p12388
sg14
(lp12389
(icodemend.demo.code_suggest
Element
p12390
(dp12391
g10
I1
sg11
S''
sg12
Vregister_cmap.name.'temp'
p12392
sg14
(lp12393
sg2
S"'temp'"
p12394
sbasg2
g12383
sbsS'set_va'
p12395
(icodemend.demo.code_suggest
Element
p12396
(dp12397
g10
I0
sg11
S'alias for set_verticalalignment'
p12398
sg12
Vset_va
p12399
sg14
(lp12400
sg2
g12395
sbs(g4371
g8545
g1057
tp12401
g1053
s(g117
g118
S'name'
p12402
tp12403
(icodemend.demo.code_suggest
Element
p12404
(dp12405
g10
I7
sg11
S''
sg12
Vplot.label.name
p12406
sg14
(lp12407
sg2
g12402
sbs(g117
g132
S"'brown'"
p12408
tp12409
(icodemend.demo.code_suggest
Element
p12410
(dp12411
g10
I1
sg11
S''
sg12
Vplot.color.'brown'
p12412
sg14
(lp12413
sg2
g12408
sbs(g5424
g2392
S'2'
tp12414
(icodemend.demo.code_suggest
Element
p12415
(dp12416
g10
I9
sg11
S''
sg12
Vgrid.linewidth.2
p12417
sg14
(lp12418
sg2
S'2'
sbs(S'num2epoch'
p12419
S'd'
tp12420
(icodemend.demo.code_suggest
Element
p12421
(dp12422
g10
I0
sg11
S'convert days since 0001 to epoch . d can be a number or sequence .'
p12423
sg12
Vnum2epoch.d
p12424
sg14
(lp12425
sg2
S'd'
sbs(g452
g2841
S"''"
p12426
tp12427
(icodemend.demo.code_suggest
Element
p12428
(dp12429
g10
I1
sg11
S''
sg12
Verrorbar.fmt.''
p12430
sg14
(lp12431
sg2
g12426
sbsS'is_scalar'
p12432
(icodemend.demo.code_suggest
Element
p12433
(dp12434
g10
I0
sg11
S'return true if obj is not string like and is not iterable'
p12435
sg12
Vis_scalar
p12436
sg14
(lp12437
(icodemend.demo.code_suggest
Element
p12438
(dp12439
g10
I0
sg11
S'return true if obj is not string like and is not iterable'
p12440
sg12
Vis_scalar.obj
p12441
sg14
(lp12442
sg2
S'obj'
p12443
sbasg2
g12432
sbs(g101
g118
S"'col3 <= 300'"
p12444
tp12445
(icodemend.demo.code_suggest
Element
p12446
(dp12447
g10
I1
sg11
S''
sg12
Vscatter.label.'col3 <= 300'
p12448
sg14
(lp12449
sg2
g12444
sbsS'get_bounds'
p12450
(icodemend.demo.code_suggest
Element
p12451
(dp12452
g10
I0
sg11
S'get the bounds of the spine .'
p12453
sg12
Vget_bounds
p12454
sg14
(lp12455
sg2
g12450
sbs(g252
g702
S'0.0'
p12456
tp12457
(icodemend.demo.code_suggest
Element
p12458
(dp12459
g10
I1
sg11
S''
sg12
Vlegend.handletextpad.0/0
p12460
sg14
(lp12461
sg2
g12456
sbs(S'fill'
p12462
S'xmargin'
p12463
tp12464
(icodemend.demo.code_suggest
Element
p12465
(dp12466
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p12467
sg12
Vfill.xmargin
p12468
sg14
(lp12469
sg2
g12463
sbs(S'barbs'
p12470
S'clip_on'
p12471
tp12472
(icodemend.demo.code_suggest
Element
p12473
(dp12474
g10
I0
sg11
S'set whether artist uses clipping .'
p12475
sg12
Vbarbs.clip_on
p12476
sg14
(lp12477
sg2
g12471
sbs(S'broken_barh'
p12478
S'cmap'
p12479
tp12480
(icodemend.demo.code_suggest
Element
p12481
(dp12482
g10
I0
sg11
S'set the colormap for luminance data'
p12483
sg12
Vbroken_barh.cmap
p12484
sg14
(lp12485
sg2
g12479
sbs(g245
g140
S'(6, 3.2)'
p12486
tp12487
(icodemend.demo.code_suggest
Element
p12488
(dp12489
g10
I1
sg11
S''
sg12
Vfigure.figsize.(6, 3/2)
p12490
sg14
(lp12491
sg2
g12486
sbs(S'grid'
p12492
S'visible'
p12493
tp12494
(icodemend.demo.code_suggest
Element
p12495
(dp12496
g10
I0
sg11
S"set the artist 's visiblity ."
p12497
sg12
Vgrid.visible
p12498
sg14
(lp12499
sg2
g12493
sbs(g1170
g1257
S'25'
p12500
tp12501
(icodemend.demo.code_suggest
Element
p12502
(dp12503
g10
I1
sg11
S''
sg12
Vhist.bins.25
p12504
sg14
(lp12505
sg2
g12500
sbs(S'l1norm'
p12506
S'l1'
p12507
tp12508
(icodemend.demo.code_suggest
Element
p12509
(dp12510
g10
I0
sg11
S'return the l1 norm of a , flattened out .'
p12511
sg12
Vl1norm.l1
p12512
sg14
(lp12513
sg2
g12507
sbs(g117
S'y'
S"'Power'"
p12514
tp12515
(icodemend.demo.code_suggest
Element
p12516
(dp12517
g10
I1
sg11
S''
sg12
Vplot.y.'Power'
p12518
sg14
(lp12519
sg2
g12514
sbs(g139
g1283
g1283
tp12520
g1921
s(g101
S's'
g7686
tp12521
g7682
s(S'semilogy'
p12522
S'basey'
p12523
tp12524
(icodemend.demo.code_suggest
Element
p12525
(dp12526
g10
I0
sg11
S'base of the y logarithm'
p12527
sg12
Vsemilogy.basey
p12528
sg14
(lp12529
sg2
g12523
sbs(g117
g4163
S'8'
tp12530
g11031
s(g101
g110
S"'none'"
p12531
tp12532
(icodemend.demo.code_suggest
Element
p12533
(dp12534
g10
I7
sg11
S''
sg12
Vscatter.edgecolor.'none'
p12535
sg14
(lp12536
sg2
g12531
sbsS'can_pan'
p12537
(icodemend.demo.code_suggest
Element
p12538
(dp12539
g10
I0
sg11
S'return true if this axes supports any pan/zoom button functionality .'
p12540
sg12
Vcan_pan
p12541
sg14
(lp12542
sg2
g12537
sbs(g93
g4800
S'(3, 3)'
p12543
tp12544
(icodemend.demo.code_suggest
Element
p12545
(dp12546
g10
I1
sg11
S''
sg12
Vannotate.xytext.(3, 3)
p12547
sg14
(lp12548
sg2
g12543
sbs(S'set_xticklabels'
p12549
S'xscale'
p12550
tp12551
(icodemend.demo.code_suggest
Element
p12552
(dp12553
g10
I0
sg11
S'set the scaling of the x-axis'
p12554
sg12
Vset_xticklabels.xscale
p12555
sg14
(lp12556
sg2
g12550
sbs(S'annotate'
p12557
S'xmargin'
p12558
tp12559
(icodemend.demo.code_suggest
Element
p12560
(dp12561
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p12562
sg12
Vannotate.xmargin
p12563
sg14
(lp12564
sg2
g12558
sbsS'set_multialignment'
p12565
(icodemend.demo.code_suggest
Element
p12566
(dp12567
g10
I0
sg11
S'set the alignment for multiple lines layout .'
p12568
sg12
Vset_multialignment
p12569
sg14
(lp12570
sg2
g12565
sbs(S'LightSource'
p12571
S'altdeg'
p12572
tp12573
(icodemend.demo.code_suggest
Element
p12574
(dp12575
g10
I0
sg11
S'the altitude ( 0-90 , degrees up from horizontal ) of the light source . defaults to 45 degrees from horizontal .'
p12576
sg12
VLightSource.altdeg
p12577
sg14
(lp12578
sg2
g12572
sbs(S'boxplot_stats'
p12579
S'bootstrap'
p12580
tp12581
(icodemend.demo.code_suggest
Element
p12582
(dp12583
g10
I0
sg11
S'number of times the confidence intervals around the median should be bootstrapped ( percentile method ) .'
p12584
sg12
Vboxplot_stats.bootstrap
p12585
sg14
(lp12586
sg2
g12580
sbs(g252
g1010
S"'lower left'"
p12587
tp12588
(icodemend.demo.code_suggest
Element
p12589
(dp12590
g10
I15
sg11
S''
sg12
Vlegend.loc.'lower left'
p12591
sg14
(lp12592
sg2
g12587
sbs(g944
g2364
g7259
tp12593
(icodemend.demo.code_suggest
Element
p12594
(dp12595
g10
I1
sg11
S''
sg12
Vbarh.xerr.error
p12596
sg14
(lp12597
sg2
g7259
sbs(S'set_ylim'
p12598
S'True'
p12599
tp12600
(icodemend.demo.code_suggest
Element
p12601
(dp12602
g10
I0
sg11
S'turn y autoscaling on ( true ) , off ( false ; default ) , or leave unchanged ( none )|||notify observers of limit change'
p12603
sg12
Vset_ylim.True
p12604
sg14
(lp12605
sg2
g12599
sbsS'magma'
p12606
(icodemend.demo.code_suggest
Element
p12607
(dp12608
g10
I0
sg11
S'set the default colormap to magma and apply to current image if any .'
p12609
sg12
Vmagma
p12610
sg14
(lp12611
sg2
g12606
sbs(S'axvline'
p12612
S'clip_path'
p12613
tp12614
(icodemend.demo.code_suggest
Element
p12615
(dp12616
g10
I0
sg11
S"set the artist 's clip path , which may be"
p12617
sg12
Vaxvline.clip_path
p12618
sg14
(lp12619
sg2
g12613
sbs(g5848
g5849
S'-3'
p12620
tp12621
(icodemend.demo.code_suggest
Element
p12622
(dp12623
g10
I1
sg11
S''
sg12
VSlider.valinit.-3
p12624
sg14
(lp12625
sg2
g12620
sbs(S'add_subplot'
p12626
S'hatch'
p12627
tp12628
(icodemend.demo.code_suggest
Element
p12629
(dp12630
g10
I0
sg11
S'set the hatching pattern'
p12631
sg12
Vadd_subplot.hatch
p12632
sg14
(lp12633
sg2
g12627
sbs(S'annotate'
p12634
S'arrowstyle'
p12635
tp12636
(icodemend.demo.code_suggest
Element
p12637
(dp12638
g10
I0
sg11
S'if the dictionary has a key arrowstyle , a fancyarrowpatch instance is created with the given dictionary and is drawn . otherwise , a yaarrow patch instance is created and drawn . valid keys for yaarrow are :'
p12639
sg12
Vannotate.arrowstyle
p12640
sg14
(lp12641
sg2
g12635
sbs(S'cohere'
p12642
S'yticks'
p12643
tp12644
(icodemend.demo.code_suggest
Element
p12645
(dp12646
g10
I0
sg11
S'set the y ticks with list of ticks'
p12647
sg12
Vcohere.yticks
p12648
sg14
(lp12649
sg2
g12643
sbs(g452
S'capsize'
p12650
S'4'
tp12651
(icodemend.demo.code_suggest
Element
p12652
(dp12653
g10
I1
sg11
S''
sg12
Verrorbar.capsize.4
p12654
sg14
(lp12655
sg2
S'4'
sbs(S'LinearTriInterpolator'
p12656
S'z'
tp12657
(icodemend.demo.code_suggest
Element
p12658
(dp12659
g10
I0
sg11
S'array of values , defined at grid points , to interpolate between .'
p12660
sg12
VLinearTriInterpolator.z
p12661
sg14
(lp12662
sg2
S'z'
sbsS'update_bruteforce'
p12663
(icodemend.demo.code_suggest
Element
p12664
(dp12665
g10
I0
sg11
S'destroy and rebuild the colorbar .'
p12666
sg12
Vupdate_bruteforce
p12667
sg14
(lp12668
sg2
g12663
sbs(g139
g140
g1493
tp12669
g1489
s(S'PathPatchEffect'
p12670
S'offset'
p12671
tp12672
(icodemend.demo.code_suggest
Element
p12673
(dp12674
g10
I0
sg11
S'the offset to apply to the path , in points .'
p12675
sg12
VPathPatchEffect.offset
p12676
sg14
(lp12677
sg2
g12671
sbs(S'set_title'
p12678
g3084
g7452
tp12679
(icodemend.demo.code_suggest
Element
p12680
(dp12681
g10
I6
sg11
S''
sg12
Vset_title.fontproperties.prop
p12682
sg14
(lp12683
sg2
g7452
sbs(g582
g132
g3296
tp12684
g3292
s(g139
g370
S'5'
tp12685
g1841
s(S'add'
p12686
S'ymargin'
p12687
tp12688
(icodemend.demo.code_suggest
Element
p12689
(dp12690
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p12691
sg12
Vadd.ymargin
p12692
sg14
(lp12693
sg2
g12687
sbs(S'axvspan'
p12694
S'linestyle'
p12695
tp12696
(icodemend.demo.code_suggest
Element
p12697
(dp12698
g10
I0
sg11
S'set the patch linestyle'
p12699
sg12
Vaxvspan.linestyle
p12700
sg14
(lp12701
sg2
g12695
sbs(g452
S'lolims'
p12702
g438
tp12703
(icodemend.demo.code_suggest
Element
p12704
(dp12705
g10
I1
sg11
S''
sg12
Verrorbar.lolims.True
p12706
sg14
(lp12707
sg2
g438
sbsS'set_navigate_mode'
p12708
(icodemend.demo.code_suggest
Element
p12709
(dp12710
g10
I0
sg11
S'set the navigation toolbar button status ;'
p12711
sg12
Vset_navigate_mode
p12712
sg14
(lp12713
sg2
g12708
sbs(g7484
g102
g865
tp12714
(icodemend.demo.code_suggest
Element
p12715
(dp12716
g10
I1
sg11
S''
sg12
Vhexbin.alpha.None
p12717
sg14
(lp12718
sg2
g865
sbs(g101
g4274
S"'h'"
p12719
tp12720
(icodemend.demo.code_suggest
Element
p12721
(dp12722
g10
I3
sg11
S''
sg12
Vscatter.marker.'h'
p12723
sg14
(lp12724
sg2
g12719
sbs(g582
S'y'
S'0'
tp12725
g3358
s(S'getp'
p12726
S'x'
tp12727
(icodemend.demo.code_suggest
Element
p12728
(dp12729
g10
I0
sg11
S'set the x position of the text'
p12730
sg12
Vgetp.x
p12731
sg14
(lp12732
sg2
S'x'
sbs(S'bar'
p12733
S'yerr'
p12734
tp12735
(icodemend.demo.code_suggest
Element
p12736
(dp12737
g10
I26
sg11
S'if not none , will be used to generate errorbar(s ) on the bar chart default : none'
p12738
sg12
Vbar.yerr
p12739
sg14
(lp12740
(icodemend.demo.code_suggest
Element
p12741
(dp12742
g10
I6
sg11
S''
sg12
Vbar.yerr.menStd
p12743
sg14
(lp12744
sg2
g7264
sba(icodemend.demo.code_suggest
Element
p12745
(dp12746
g10
I6
sg11
S''
sg12
Vbar.yerr.womenStd
p12747
sg14
(lp12748
sg2
S'womenStd'
p12749
sba(icodemend.demo.code_suggest
Element
p12750
(dp12751
g10
I1
sg11
S''
sg12
Vbar.yerr.None
p12752
sg14
(lp12753
sg2
g865
sbag3893
ag11713
a(icodemend.demo.code_suggest
Element
p12754
(dp12755
g10
I1
sg11
S''
sg12
Vbar.yerr.stds
p12756
sg14
(lp12757
sg2
S'stds'
p12758
sba(icodemend.demo.code_suggest
Element
p12759
(dp12760
g10
I1
sg11
S''
sg12
Vbar.yerr.x_sem
p12761
sg14
(lp12762
sg2
S'x_sem'
p12763
sba(icodemend.demo.code_suggest
Element
p12764
(dp12765
g10
I1
sg11
S''
sg12
Vbar.yerr.y_sem
p12766
sg14
(lp12767
sg2
S'y_sem'
p12768
sba(icodemend.demo.code_suggest
Element
p12769
(dp12770
g10
I1
sg11
S''
sg12
Vbar.yerr.yerr
p12771
sg14
(lp12772
sg2
g453
sba(icodemend.demo.code_suggest
Element
p12773
(dp12774
g10
I1
sg11
S''
sg12
Vbar.yerr.z_sem
p12775
sg14
(lp12776
sg2
S'z_sem'
p12777
sbasg2
g12734
sbs(S'arrow'
p12778
g2581
tp12779
g2576
s(g101
g118
S"'$\\\\xi$(r) M$_{200}$>13.4'"
p12780
tp12781
(icodemend.demo.code_suggest
Element
p12782
(dp12783
g10
I2
sg11
S''
sg12
Vscatter.label.'$\u005c\u005cxi$(r) M$_{200}$>13/4'
p12784
sg14
(lp12785
sg2
g12780
sbs(S'loglog'
p12786
S'fmt'
p12787
tp12788
(icodemend.demo.code_suggest
Element
p12789
(dp12790
g10
I0
sg11
S'if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :'
p12791
sg12
Vloglog.fmt
p12792
sg14
(lp12793
sg2
g12787
sbs(S'PdfPages'
p12794
S'keep_empty: bool, optional'
p12795
tp12796
(icodemend.demo.code_suggest
Element
p12797
(dp12798
g10
I0
sg11
S'if set to false , then empty pdf files will be deleted automatically when closed .'
p12799
sg12
VPdfPages.keep_empty: bool, optional
p12800
sg14
(lp12801
sg2
g12795
sbs(S'plot'
p12802
S'yscale'
p12803
tp12804
(icodemend.demo.code_suggest
Element
p12805
(dp12806
g10
I0
sg11
S'set the scaling of the y-axis'
p12807
sg12
Vplot.yscale
p12808
sg14
(lp12809
sg2
g12803
sbs(g5975
S'tz'
p12810
S'est'
p12811
tp12812
(icodemend.demo.code_suggest
Element
p12813
(dp12814
g10
I1
sg11
S''
sg12
Vplot_date.tz.est
p12815
sg14
(lp12816
sg2
g12811
sbsS'set_x'
p12817
(icodemend.demo.code_suggest
Element
p12818
(dp12819
g10
I14
sg11
S'set the left coord of the rectangle'
p12820
sg12
Vset_x
p12821
sg14
(lp12822
(icodemend.demo.code_suggest
Element
p12823
(dp12824
g10
I0
sg11
S'set the x position of the text set the x position of the textwithdash .'
p12825
sg12
Vset_x.x
p12826
sg14
(lp12827
sg2
S'x'
sbasg2
g12817
sbsS'set_y'
p12828
(icodemend.demo.code_suggest
Element
p12829
(dp12830
g10
I13
sg11
S'set the bottom coord of the rectangle'
p12831
sg12
Vset_y
p12832
sg14
(lp12833
(icodemend.demo.code_suggest
Element
p12834
(dp12835
g10
I0
sg11
S'set the y position of the textwithdash . set the y position of the text'
p12836
sg12
Vset_y.y
p12837
sg14
(lp12838
sg2
S'y'
sbasg2
g12828
sbs(g452
g1149
S"'b'"
p12839
tp12840
(icodemend.demo.code_suggest
Element
p12841
(dp12842
g10
I1
sg11
S''
sg12
Verrorbar.ecolor.'b'
p12843
sg14
(lp12844
sg2
g12839
sbs(g101
g118
S"'square'"
p12845
tp12846
(icodemend.demo.code_suggest
Element
p12847
(dp12848
g10
I1
sg11
S''
sg12
Vscatter.label.'square'
p12849
sg14
(lp12850
sg2
g12845
sbs(g324
g325
g9099
tp12851
g9095
s(S'plot'
p12852
S'visible'
p12853
tp12854
(icodemend.demo.code_suggest
Element
p12855
(dp12856
g10
I6
sg11
S"set the artist 's visiblity ."
p12857
sg12
Vplot.visible
p12858
sg14
(lp12859
(icodemend.demo.code_suggest
Element
p12860
(dp12861
g10
I6
sg11
S''
sg12
Vplot.visible.False
p12862
sg14
(lp12863
sg2
g1944
sbasg2
g12853
sbs(S'plotting'
p12864
S'picker'
p12865
tp12866
(icodemend.demo.code_suggest
Element
p12867
(dp12868
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p12869
sg12
Vplotting.picker
p12870
sg14
(lp12871
sg2
g12865
sbsS'tick_params'
p12872
(icodemend.demo.code_suggest
Element
p12873
(dp12874
g10
I126
sg11
S'change the appearance of ticks and tick labels .'
p12875
sg12
Vtick_params
p12876
sg14
(lp12877
sg2
g12872
sbs(g766
g666
g3978
tp12878
g3974
s(g252
S'borderaxespad'
p12879
S'0.25'
p12880
tp12881
(icodemend.demo.code_suggest
Element
p12882
(dp12883
g10
I1
sg11
S''
sg12
Vlegend.borderaxespad.0/25
p12884
sg14
(lp12885
sg2
g12880
sbs(S'pcolor'
p12886
S'norm'
p12887
tp12888
(icodemend.demo.code_suggest
Element
p12889
(dp12890
g10
I5
sg11
S'set the normalization instance|||an matplotlib.colors.normalize instance is used to scale luminance data to 0,1 . if none , defaults to normalize ( ) .'
p12891
sg12
Vpcolor.norm
p12892
sg14
(lp12893
g517
asg2
g12887
sbsS'slopes'
p12894
(icodemend.demo.code_suggest
Element
p12895
(dp12896
g10
I0
sg11
S"slopes ( ) calculates the slope y ' ( x )"
p12897
sg12
Vslopes
p12898
sg14
(lp12899
(icodemend.demo.code_suggest
Element
p12900
(dp12901
g10
I0
sg11
S"slopes ( ) calculates the slope y ' ( x )"
p12902
sg12
Vslopes.x
p12903
sg14
(lp12904
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p12905
(dp12906
g10
I0
sg11
S"slopes ( ) calculates the slope y ' ( x )"
p12907
sg12
Vslopes.y
p12908
sg14
(lp12909
sg2
S'y'
sbasg2
g12894
sbsS'set_c'
p12910
(icodemend.demo.code_suggest
Element
p12911
(dp12912
g10
I4
sg11
S'alias for set_color'
p12913
sg12
Vset_c
p12914
sg14
(lp12915
sg2
g12910
sbsS'bubble'
p12916
(icodemend.demo.code_suggest
Element
p12917
(dp12918
g10
I0
sg11
S'move the given axes , which must already exist in the stack , to the top . raise o to the top of the stack and return o .'
p12919
sg12
Vbubble
p12920
sg14
(lp12921
(icodemend.demo.code_suggest
Element
p12922
(dp12923
g10
I0
sg11
S'raise o to the top of the stack and return o . o must be in the stack'
p12924
sg12
Vbubble.o
p12925
sg14
(lp12926
sg2
S'o'
sbasg2
g12916
sbsS'to_rgba'
p12927
(icodemend.demo.code_suggest
Element
p12928
(dp12929
g10
I19
sg11
S'return a normalized rgba array corresponding to x .'
p12930
sg12
Vto_rgba
p12931
sg14
(lp12932
(icodemend.demo.code_suggest
Element
p12933
(dp12934
g10
I0
sg11
S'for acceptable values of arg , see to_rgb ( ) . in addition , if arg is " none " ( case-insensitive ) , then ( 0,0,0,0 ) will be returned . if arg is an rgba sequence and alpha is not none , alpha will replace the original a .'
p12935
sg12
Vto_rgba.A
p12936
sg14
(lp12937
sg2
S'A'
sba(icodemend.demo.code_suggest
Element
p12938
(dp12939
g10
I0
sg11
S'for acceptable values of arg , see to_rgb ( ) . in addition , if arg is " none " ( case-insensitive ) , then ( 0,0,0,0 ) will be returned . if arg is an rgba sequence and alpha is not none , alpha will replace the original a .|||returns an rgba tuple of four floats from 0-1 .'
p12940
sg12
Vto_rgba.RGBA
p12941
sg14
(lp12942
sg2
S'RGBA'
p12943
sba(icodemend.demo.code_suggest
Element
p12944
(dp12945
g10
I0
sg11
S'there is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . if x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . if the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . if the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . a valueerror will be raised if the third dimension is other than 3 or 4 .'
p12946
sg12
Vto_rgba.alpha
p12947
sg14
(lp12948
sg2
S'alpha'
p12949
sba(icodemend.demo.code_suggest
Element
p12950
(dp12951
g10
I0
sg11
S'for acceptable values of arg , see to_rgb ( ) . in addition , if arg is " none " ( case-insensitive ) , then ( 0,0,0,0 ) will be returned . if arg is an rgba sequence and alpha is not none , alpha will replace the original a .'
p12952
sg12
Vto_rgba.arg
p12953
sg14
(lp12954
sg2
S'arg'
p12955
sba(icodemend.demo.code_suggest
Element
p12956
(dp12957
g10
I0
sg11
S'returns a tuple ( array , depth )'
p12958
sg12
Vto_rgba.array
p12959
sg14
(lp12960
sg2
S'array'
p12961
sba(icodemend.demo.code_suggest
Element
p12962
(dp12963
g10
I0
sg11
S'in either case , if bytes is false ( default ) , the rgba array will be floats in the 0-1 range ; if it is true , the returned rgba array will be uint8 in the 0 to 255 range .'
p12964
sg12
Vto_rgba.bytes
p12965
sg14
(lp12966
sg2
S'bytes'
p12967
sba(icodemend.demo.code_suggest
Element
p12968
(dp12969
g10
I0
sg11
S'returns a tuple ( array , depth )'
p12970
sg12
Vto_rgba.depth
p12971
sg14
(lp12972
sg2
S'depth'
p12973
sba(icodemend.demo.code_suggest
Element
p12974
(dp12975
g10
I0
sg11
S'return a normalized rgba array corresponding to x .|||in the normal case , x is a 1-d or 2-d sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this scalarmappable .|||note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||there is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . if x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . if the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . if the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . a valueerror will be raised if the third dimension is other than 3 or 4 .'
p12976
sg12
Vto_rgba.x
p12977
sg14
(lp12978
sg2
S'x'
sbasg2
g12927
sbs(S'axhspan'
p12979
S'ymin'
p12980
tp12981
(icodemend.demo.code_suggest
Element
p12982
(dp12983
g10
I0
sg11
S'draw a horizontal span ( rectangle ) from ymin to ymax . with the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . that is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .'
p12984
sg12
Vaxhspan.ymin
p12985
sg14
(lp12986
sg2
g12980
sbs(g245
g140
S'(5, 8)'
p12987
tp12988
(icodemend.demo.code_suggest
Element
p12989
(dp12990
g10
I1
sg11
S''
sg12
Vfigure.figsize.(5, 8)
p12991
sg14
(lp12992
sg2
g12987
sbs(S'scatter'
p12993
S'contains'
p12994
tp12995
(icodemend.demo.code_suggest
Element
p12996
(dp12997
g10
I0
sg11
S'replace the contains test used by this artist .'
p12998
sg12
Vscatter.contains
p12999
sg14
(lp13000
sg2
g12994
sbs(S'eventplot'
p13001
S'yscale'
p13002
tp13003
(icodemend.demo.code_suggest
Element
p13004
(dp13005
g10
I0
sg11
S'set the scaling of the y-axis'
p13006
sg12
Veventplot.yscale
p13007
sg14
(lp13008
sg2
g13002
sbsS'get_ticklines'
p13009
(icodemend.demo.code_suggest
Element
p13010
(dp13011
g10
I8
sg11
S'return the tick lines as a list of line2d instances'
p13012
sg12
Vget_ticklines
p13013
sg14
(lp13014
sg2
g13009
sbs(S'save'
p13015
S'writer'
p13016
tp13017
(icodemend.demo.code_suggest
Element
p13018
(dp13019
g10
I9
sg11
S"writer is either an instance of moviewriter or a string key that identifies a class to use , such as ' ffmpeg ' or ' mencoder ' . if nothing is passed , the value of the rcparam animation.writer is used ."
p13020
sg12
Vsave.writer
p13021
sg14
(lp13022
(icodemend.demo.code_suggest
Element
p13023
(dp13024
g10
I2
sg11
S''
sg12
Vsave.writer.'imagemagick'
p13025
sg14
(lp13026
sg2
S"'imagemagick'"
p13027
sba(icodemend.demo.code_suggest
Element
p13028
(dp13029
g10
I2
sg11
S''
sg12
Vsave.writer.FFwriter
p13030
sg14
(lp13031
sg2
S'FFwriter'
p13032
sba(icodemend.demo.code_suggest
Element
p13033
(dp13034
g10
I1
sg11
S''
sg12
Vsave.writer.'mencoder'
p13035
sg14
(lp13036
sg2
S"'mencoder'"
p13037
sba(icodemend.demo.code_suggest
Element
p13038
(dp13039
g10
I1
sg11
S''
sg12
Vsave.writer.mywriter
p13040
sg14
(lp13041
sg2
S'mywriter'
p13042
sba(icodemend.demo.code_suggest
Element
p13043
(dp13044
g10
I1
sg11
S''
sg12
Vsave.writer.writer
p13045
sg14
(lp13046
sg2
S'writer'
p13047
sbasg2
g13016
sbs(g139
S'sharey'
p13048
g1968
tp13049
g1964
sS'family_unescape'
p13050
(icodemend.demo.code_suggest
Element
p13051
(dp13052
g10
I0
sg11
S'sub(repl , string [ , count = 0 ] ) - - > newstring return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl .'
p13053
sg12
Vfamily_unescape
p13054
sg14
(lp13055
sg2
g13050
sbs(g5640
g5641
g11921
tp13056
g11917
s(g117
S'fillstyle'
p13057
S"'bottom'"
p13058
tp13059
(icodemend.demo.code_suggest
Element
p13060
(dp13061
g10
I1
sg11
S''
sg12
Vplot.fillstyle.'bottom'
p13062
sg14
(lp13063
sg2
g13058
sbs(g16
g17
S'barWidth'
p13064
tp13065
(icodemend.demo.code_suggest
Element
p13066
(dp13067
g10
I1
sg11
S''
sg12
Vbar.width.barWidth
p13068
sg14
(lp13069
sg2
g13064
sbs(g944
g2364
S'both_xerr'
p13070
tp13071
(icodemend.demo.code_suggest
Element
p13072
(dp13073
g10
I1
sg11
S''
sg12
Vbarh.xerr.both_xerr
p13074
sg14
(lp13075
sg2
g13070
sbs(g16
g489
S'below_threshold'
p13076
tp13077
(icodemend.demo.code_suggest
Element
p13078
(dp13079
g10
I1
sg11
S''
sg12
Vbar.bottom.below_threshold
p13080
sg14
(lp13081
sg2
g13076
sbsS'get_shared_y_axes'
p13082
(icodemend.demo.code_suggest
Element
p13083
(dp13084
g10
I0
sg11
S'return a copy of the shared axes grouper object for y axes'
p13085
sg12
Vget_shared_y_axes
p13086
sg14
(lp13087
sg2
g13082
sbs(S'add'
p13088
S'visible'
p13089
tp13090
(icodemend.demo.code_suggest
Element
p13091
(dp13092
g10
I0
sg11
S"set the artist 's visiblity ."
p13093
sg12
Vadd.visible
p13094
sg14
(lp13095
sg2
g13089
sbs(g93
g4800
S'((-50), 30)'
p13096
tp13097
(icodemend.demo.code_suggest
Element
p13098
(dp13099
g10
I3
sg11
S''
sg12
Vannotate.xytext.((-50), 30)
p13100
sg14
(lp13101
sg2
g13096
sbsS'get_fc'
p13102
(icodemend.demo.code_suggest
Element
p13103
(dp13104
g10
I0
sg11
S'return the face color of the patch .'
p13105
sg12
Vget_fc
p13106
sg14
(lp13107
sg2
g13102
sbs(g117
g667
S'5'
tp13108
(icodemend.demo.code_suggest
Element
p13109
(dp13110
g10
I6
sg11
S''
sg12
Vplot.picker.5
p13111
sg14
(lp13112
sg2
S'5'
sbs(g117
g118
S"'Mean'"
p13113
tp13114
(icodemend.demo.code_suggest
Element
p13115
(dp13116
g10
I1
sg11
S''
sg12
Vplot.label.'Mean'
p13117
sg14
(lp13118
sg2
g13113
sbsS'set_under'
p13119
(icodemend.demo.code_suggest
Element
p13120
(dp13121
g10
I22
sg11
S'set color to be used for low out-of-range values .'
p13122
sg12
Vset_under
p13123
sg14
(lp13124
sg2
g13119
sbsS'set_norm'
p13125
(icodemend.demo.code_suggest
Element
p13126
(dp13127
g10
I1
sg11
S'set the normalization instance'
p13128
sg12
Vset_norm
p13129
sg14
(lp13130
sg2
g13125
sbs(S'grid'
p13131
S'aspect'
p13132
tp13133
(icodemend.demo.code_suggest
Element
p13134
(dp13135
g10
I0
sg11
S'aspect'
p13136
sg12
Vgrid.aspect
p13137
sg14
(lp13138
sg2
g13132
sbs(g117
g2251
S"'dotted'"
p13139
tp13140
(icodemend.demo.code_suggest
Element
p13141
(dp13142
g10
I2
sg11
S''
sg12
Vplot.linestyle.'dotted'
p13143
sg14
(lp13144
sg2
g13139
sbs(g117
g118
S"'axL'"
p13145
tp13146
(icodemend.demo.code_suggest
Element
p13147
(dp13148
g10
I1
sg11
S''
sg12
Vplot.label.'axL'
p13149
sg14
(lp13150
sg2
g13145
sbs(S'prctile'
p13151
S'x'
tp13152
g10735
s(S'set_xticklabels'
p13153
S'horizontalalignment'
p13154
tp13155
(icodemend.demo.code_suggest
Element
p13156
(dp13157
g10
I3
sg11
S'set the horizontal alignment to one of'
p13158
sg12
Vset_xticklabels.horizontalalignment
p13159
sg14
(lp13160
(icodemend.demo.code_suggest
Element
p13161
(dp13162
g10
I3
sg11
S''
sg12
Vset_xticklabels.horizontalalignment.'right'
p13163
sg14
(lp13164
sg2
S"'right'"
p13165
sbasg2
g13154
sbs(S'show'
p13166
S'block'
p13167
tp13168
(icodemend.demo.code_suggest
Element
p13169
(dp13170
g10
I17
sg11
S'a single experimental keyword argument , block , may be set to true or false to override the blocking behavior described above .'
p13171
sg12
Vshow.block
p13172
sg14
(lp13173
g8790
a(icodemend.demo.code_suggest
Element
p13174
(dp13175
g10
I4
sg11
S''
sg12
Vshow.block.True
p13176
sg14
(lp13177
sg2
g438
sbasg2
g13167
sbs(S'csd'
p13178
S'clip_on'
p13179
tp13180
(icodemend.demo.code_suggest
Element
p13181
(dp13182
g10
I0
sg11
S'set whether artist uses clipping .'
p13183
sg12
Vcsd.clip_on
p13184
sg14
(lp13185
sg2
g13179
sbs(S'get'
p13186
S'yticks'
p13187
tp13188
(icodemend.demo.code_suggest
Element
p13189
(dp13190
g10
I0
sg11
S'set the y ticks with list of ticks'
p13191
sg12
Vget.yticks
p13192
sg14
(lp13193
sg2
g13187
sbs(S'csd'
p13194
S'animated'
p13195
tp13196
(icodemend.demo.code_suggest
Element
p13197
(dp13198
g10
I0
sg11
S"set the artist 's animation state ."
p13199
sg12
Vcsd.animated
p13200
sg14
(lp13201
sg2
g13195
sbs(S'Colormap'
p13202
S'name'
p13203
tp13204
(icodemend.demo.code_suggest
Element
p13205
(dp13206
g10
I0
sg11
S'the name of the colormap .'
p13207
sg12
VColormap.name
p13208
sg14
(lp13209
sg2
g13203
sbs(g93
g4800
S'(0.2, 0.8)'
p13210
tp13211
(icodemend.demo.code_suggest
Element
p13212
(dp13213
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0/2, 0/8)
p13214
sg14
(lp13215
sg2
g13210
sbs(S'csd'
p13216
S'path_effects'
p13217
tp13218
(icodemend.demo.code_suggest
Element
p13219
(dp13220
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p13221
sg12
Vcsd.path_effects
p13222
sg14
(lp13223
sg2
g13217
sbsS'get_data'
p13224
(icodemend.demo.code_suggest
Element
p13225
(dp13226
g10
I23
sg11
S'return the xdata , ydata .'
p13227
sg12
Vget_data
p13228
sg14
(lp13229
(icodemend.demo.code_suggest
Element
p13230
(dp13231
g10
I0
sg11
S'if orig is true , return the original data .'
p13232
sg12
Vget_data.orig
p13233
sg14
(lp13234
sg2
S'orig'
p13235
sbasg2
g13224
sbs(g1170
g1257
S'12'
p13236
tp13237
(icodemend.demo.code_suggest
Element
p13238
(dp13239
g10
I1
sg11
S''
sg12
Vhist.bins.12
p13240
sg14
(lp13241
sg2
g13236
sbs(S'add'
p13242
S'antialiased'
p13243
tp13244
(icodemend.demo.code_suggest
Element
p13245
(dp13246
g10
I0
sg11
S'set whether to use antialiased rendering'
p13247
sg12
Vadd.antialiased
p13248
sg14
(lp13249
sg2
g13243
sbs(g117
g348
g132
tp13250
(icodemend.demo.code_suggest
Element
p13251
(dp13252
g10
I1
sg11
S''
sg12
Vplot.markeredgecolor.color
p13253
sg14
(lp13254
sg2
g132
sbs(g117
g4274
S"'s'"
p13255
tp13256
(icodemend.demo.code_suggest
Element
p13257
(dp13258
g10
I15
sg11
S''
sg12
Vplot.marker.'s'
p13259
sg14
(lp13260
sg2
g13255
sbs(S'axvline'
p13261
S'markeredgecolor'
p13262
tp13263
(icodemend.demo.code_suggest
Element
p13264
(dp13265
g10
I0
sg11
S'set the marker edge color'
p13266
sg12
Vaxvline.markeredgecolor
p13267
sg14
(lp13268
sg2
g13262
sbs(g582
S'xmin'
p13269
S'0'
tp13270
g3487
s(g4371
g325
S"'gray'"
p13271
tp13272
(icodemend.demo.code_suggest
Element
p13273
(dp13274
g10
I1
sg11
S''
sg12
Vcontour.cmap.'gray'
p13275
sg14
(lp13276
sg2
g13271
sbs(g101
S's'
g7691
tp13277
g7687
sS'grab_frame'
p13278
(icodemend.demo.code_suggest
Element
p13279
(dp13280
g10
I1
sg11
S'grab the image information from the figure and save as a movie frame .'
p13281
sg12
Vgrab_frame
p13282
sg14
(lp13283
sg2
g13278
sbs(S'suptitle'
p13284
g10118
S"'top'"
p13285
tp13286
(icodemend.demo.code_suggest
Element
p13287
(dp13288
g10
I1
sg11
S''
sg12
Vsuptitle.verticalalignment.'top'
p13289
sg14
(lp13290
sg2
g13285
sbs(g332
g627
S'72'
p13291
tp13292
(icodemend.demo.code_suggest
Element
p13293
(dp13294
g10
I3
sg11
S''
sg12
Vtext.size.72
p13295
sg14
(lp13296
sg2
g13291
sbs(g6425
g118
g118
tp13297
(icodemend.demo.code_suggest
Element
p13298
(dp13299
g10
I1
sg11
S''
sg12
Vsemilogx.label.label
p13300
sg14
(lp13301
sg2
g118
sbsS'rec_keep_fields'
p13302
(icodemend.demo.code_suggest
Element
p13303
(dp13304
g10
I0
sg11
S'return a new numpy record array with only fields listed in names'
p13305
sg12
Vrec_keep_fields
p13306
sg14
(lp13307
sg2
g13302
sbs(S'grid'
p13308
S'markeredgewidth'
p13309
tp13310
(icodemend.demo.code_suggest
Element
p13311
(dp13312
g10
I0
sg11
S'set the marker edge width in points'
p13313
sg12
Vgrid.markeredgewidth
p13314
sg14
(lp13315
sg2
g13309
sbs(S'open_group'
p13316
S'gid'
p13317
tp13318
(icodemend.demo.code_suggest
Element
p13319
(dp13320
g10
I0
sg11
S'open a grouping element with label s . if gid is given , use gid as the id of the group . is only currently used by backend_svg .'
p13321
sg12
Vopen_group.gid
p13322
sg14
(lp13323
sg2
g13317
sbs(g944
g110
S"'k'"
p13324
tp13325
(icodemend.demo.code_suggest
Element
p13326
(dp13327
g10
I4
sg11
S''
sg12
Vbarh.edgecolor.'k'
p13328
sg14
(lp13329
sg2
g13324
sbs(S'deprecated'
p13330
S'message'
p13331
tp13332
(icodemend.demo.code_suggest
Element
p13333
(dp13334
g10
I0
sg11
S'override the default deprecation message . the format specifier %(func)s may be used for the name of the function , and %(alternative)s may be used in the deprecation message to insert the name of an alternative to the deprecated function . %(obj_type ) may be used to insert a friendly name for the type of object being deprecated .'
p13335
sg12
Vdeprecated.message
p13336
sg14
(lp13337
sg2
g13331
sbs(g6632
S'ylim'
p13338
g13338
tp13339
(icodemend.demo.code_suggest
Element
p13340
(dp13341
g10
I1
sg11
S''
sg12
Vadd_subplot.ylim.ylim
p13342
sg14
(lp13343
sg2
g13338
sbs(S'plot_day_summary2_ochl'
p13344
S'colorup'
p13345
tp13346
(icodemend.demo.code_suggest
Element
p13347
(dp13348
g10
I0
sg11
S'the color of the lines where close > = open'
p13349
sg12
Vplot_day_summary2_ochl.colorup
p13350
sg14
(lp13351
sg2
g13345
sbs(S'get_xaxis_text2_transform'
p13352
S'halign'
p13353
tp13354
(icodemend.demo.code_suggest
Element
p13355
(dp13356
g10
I0
sg11
S'where valign and halign are requested alignments for the text .'
p13357
sg12
Vget_xaxis_text2_transform.halign
p13358
sg14
(lp13359
sg2
g13353
sbs(g101
g325
S"'Blues'"
p13360
tp13361
(icodemend.demo.code_suggest
Element
p13362
(dp13363
g10
I2
sg11
S''
sg12
Vscatter.cmap.'Blues'
p13364
sg14
(lp13365
sg2
g13360
sbs(S'magnitude_spectrum'
p13366
S'line'
p13367
tp13368
(icodemend.demo.code_suggest
Element
p13369
(dp13370
g10
I0
sg11
S'returns the tuple ( spectrum , freqs , line ) :'
p13371
sg12
Vmagnitude_spectrum.line
p13372
sg14
(lp13373
sg2
g13367
sbs(S'phase_spectrum'
p13374
S'marker'
p13375
tp13376
(icodemend.demo.code_suggest
Element
p13377
(dp13378
g10
I0
sg11
S'set the line marker'
p13379
sg12
Vphase_spectrum.marker
p13380
sg14
(lp13381
sg2
g13375
sbs(S'phase_spectrum'
p13382
S'x'
tp13383
(icodemend.demo.code_suggest
Element
p13384
(dp13385
g10
I0
sg11
S'compute the phase spectrum ( unwrapped angle spectrum ) of x . data is padded to a length of pad_to and the windowing function window is applied to the signal .'
p13386
sg12
Vphase_spectrum.x
p13387
sg14
(lp13388
sg2
S'x'
sbs(S'quiver'
p13389
S'position'
p13390
tp13391
(icodemend.demo.code_suggest
Element
p13392
(dp13393
g10
I0
sg11
S'set the axes position with'
p13394
sg12
Vquiver.position
p13395
sg14
(lp13396
sg2
g13390
sbs(g117
g118
S'key'
p13397
tp13398
(icodemend.demo.code_suggest
Element
p13399
(dp13400
g10
I8
sg11
S''
sg12
Vplot.label.key
p13401
sg14
(lp13402
sg2
g13397
sbsS'UniformTriRefiner'
p13403
(icodemend.demo.code_suggest
Element
p13404
(dp13405
g10
I6
sg11
S''
sg12
VUniformTriRefiner
p13406
sg14
(lp13407
(icodemend.demo.code_suggest
Element
p13408
(dp13409
g10
I0
sg11
S'the encapsulated triangulation ( to be refined )'
p13410
sg12
VUniformTriRefiner.triangulation
p13411
sg14
(lp13412
sg2
S'triangulation'
p13413
sbasg2
g13403
sbs(g5975
g132
S'[1, 0, 0, 0.2]'
p13414
tp13415
(icodemend.demo.code_suggest
Element
p13416
(dp13417
g10
I1
sg11
S''
sg12
Vplot_date.color.[1, 0, 0, 0/2]
p13418
sg14
(lp13419
sg2
g13414
sbs(S'candlestick2_ohlc'
p13420
S'colorup'
p13421
tp13422
(icodemend.demo.code_suggest
Element
p13423
(dp13424
g10
I0
sg11
S'the color of the lines where close > = open'
p13425
sg12
Vcandlestick2_ohlc.colorup
p13426
sg14
(lp13427
sg2
g13421
sbs(g117
g118
S'dist_name'
p13428
tp13429
(icodemend.demo.code_suggest
Element
p13430
(dp13431
g10
I1
sg11
S''
sg12
Vplot.label.dist_name
p13432
sg14
(lp13433
sg2
g13428
sbsS'sci'
p13434
(icodemend.demo.code_suggest
Element
p13435
(dp13436
g10
I0
sg11
S'set the current image .'
p13437
sg12
Vsci
p13438
sg14
(lp13439
sg2
g13434
sbsS'sca'
p13440
(icodemend.demo.code_suggest
Element
p13441
(dp13442
g10
I9
sg11
S'set the current axes to be a and return a set the current axes instance to ax .'
p13443
sg12
Vsca
p13444
sg14
(lp13445
(icodemend.demo.code_suggest
Element
p13446
(dp13447
g10
I0
sg11
S'the current figure is updated to the parent of ax .|||set the current axes instance to ax .'
p13448
sg12
Vsca.ax
p13449
sg14
(lp13450
sg2
S'ax'
p13451
sbasg2
g13440
sbs(S'axvline'
p13452
S'markevery'
p13453
tp13454
(icodemend.demo.code_suggest
Element
p13455
(dp13456
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p13457
sg12
Vaxvline.markevery
p13458
sg14
(lp13459
sg2
g13453
sbs(S'pcolor'
p13460
S'nrows'
p13461
tp13462
(icodemend.demo.code_suggest
Element
p13463
(dp13464
g10
I0
sg11
S'the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .'
p13465
sg12
Vpcolor.nrows
p13466
sg14
(lp13467
sg2
g13461
sbs(g139
g1283
S'5'
tp13468
g1905
s(g252
S'handler_map'
p13469
S'{p4: HandlerLine2D(numpoints=2), p5: HandlerLine2D(numpoints=1)}'
p13470
tp13471
(icodemend.demo.code_suggest
Element
p13472
(dp13473
g10
I1
sg11
S''
sg12
Vlegend.handler_map.{p4: HandlerLine2D(numpoints=2), p5: HandlerLine2D(numpoints=1)}
p13474
sg14
(lp13475
sg2
g13470
sbs(S'arrow'
p13476
g2647
tp13477
g2642
s(S'save'
p13478
S'bitrate'
p13479
tp13480
(icodemend.demo.code_suggest
Element
p13481
(dp13482
g10
I0
sg11
S'bitrate specifies the amount of bits used per second in the compressed movie , in kilobits per second . a higher number means a higher quality movie , but at the cost of increased file size . if no value is given , this defaults to the value given by the rcparam animation.bitrate .'
p13483
sg12
Vsave.bitrate
p13484
sg14
(lp13485
sg2
g13479
sbs(g93
S'horizontalalignment'
p13486
S"'center'"
p13487
tp13488
(icodemend.demo.code_suggest
Element
p13489
(dp13490
g10
I6
sg11
S''
sg12
Vannotate.horizontalalignment.'center'
p13491
sg14
(lp13492
sg2
g13487
sbs(g6632
g2155
S'((-0.1), 1.1)'
p13493
tp13494
(icodemend.demo.code_suggest
Element
p13495
(dp13496
g10
I2
sg11
S''
sg12
Vadd_subplot.xlim.((-0/1), 1/1)
p13497
sg14
(lp13498
sg2
g13493
sbs(S'contour'
p13499
S'nchunk'
p13500
tp13501
(icodemend.demo.code_suggest
Element
p13502
(dp13503
g10
I0
sg11
S'if 0 , no subdivision of the domain . specify a positive integer to divide the domain into subdomains of nchunk by nchunk quads . chunking reduces the maximum length of polygons generated by the contouring algorithm which reduces the rendering workload passed on to the backend and also requires slightly less ram . it can however introduce rendering artifacts at chunk boundaries depending on the backend , the antialiased flag and value of alpha .'
p13504
sg12
Vcontour.nchunk
p13505
sg14
(lp13506
sg2
g13500
sbsS'set_fontvariant'
p13507
(icodemend.demo.code_suggest
Element
p13508
(dp13509
g10
I0
sg11
S'alias for set_variant'
p13510
sg12
Vset_fontvariant
p13511
sg14
(lp13512
sg2
g13507
sbs(g2250
g2392
S'2'
tp13513
(icodemend.demo.code_suggest
Element
p13514
(dp13515
g10
I1
sg11
S''
sg12
Vquiver.linewidth.2
p13516
sg14
(lp13517
sg2
S'2'
sbs(g117
g2392
S'0.75'
p13518
tp13519
(icodemend.demo.code_suggest
Element
p13520
(dp13521
g10
I1
sg11
S''
sg12
Vplot.linewidth.0/75
p13522
sg14
(lp13523
sg2
g13518
sbs(S'plot_date'
p13524
S'zorder'
p13525
tp13526
(icodemend.demo.code_suggest
Element
p13527
(dp13528
g10
I0
sg11
S'set the zorder for the artist .'
p13529
sg12
Vplot_date.zorder
p13530
sg14
(lp13531
sg2
g13525
sbs(S'specgram'
p13532
S'noverlap'
p13533
S'n_overlap'
p13534
tp13535
(icodemend.demo.code_suggest
Element
p13536
(dp13537
g10
I1
sg11
S''
sg12
Vspecgram.noverlap.n_overlap
p13538
sg14
(lp13539
sg2
g13534
sbs(S'set_sketch_params'
p13540
g3944
tp13541
g3939
s(S'barbs'
p13542
g132
S"'red'"
p13543
tp13544
(icodemend.demo.code_suggest
Element
p13545
(dp13546
g10
I1
sg11
S''
sg12
Vbarbs.color.'red'
p13547
sg14
(lp13548
sg2
g13543
sbs(S'hexbin'
p13549
S'contains'
p13550
tp13551
(icodemend.demo.code_suggest
Element
p13552
(dp13553
g10
I0
sg11
S'replace the contains test used by this artist .'
p13554
sg12
Vhexbin.contains
p13555
sg14
(lp13556
sg2
g13550
sbs(g324
g785
g9611
tp13557
g9607
s(S'grid'
p13558
S'hatch'
p13559
tp13560
(icodemend.demo.code_suggest
Element
p13561
(dp13562
g10
I0
sg11
S'set the hatching pattern'
p13563
sg12
Vgrid.hatch
p13564
sg14
(lp13565
sg2
g13559
sbs(S'semilogx'
p13566
S'ydata'
p13567
tp13568
(icodemend.demo.code_suggest
Element
p13569
(dp13570
g10
I0
sg11
S'set the data np.array for y'
p13571
sg12
Vsemilogx.ydata
p13572
sg14
(lp13573
sg2
g13567
sbs(g8682
g8538
S"'k'"
p13574
tp13575
(icodemend.demo.code_suggest
Element
p13576
(dp13577
g10
I1
sg11
S''
sg12
Vtripcolor.edgecolors.'k'
p13578
sg14
(lp13579
sg2
g13574
sbs(S'plot_date'
p13580
S'contains'
p13581
tp13582
(icodemend.demo.code_suggest
Element
p13583
(dp13584
g10
I0
sg11
S'replace the contains test used by this artist .'
p13585
sg12
Vplot_date.contains
p13586
sg14
(lp13587
sg2
g13581
sbs(g252
g1010
S'4'
tp13588
(icodemend.demo.code_suggest
Element
p13589
(dp13590
g10
I10
sg11
S''
sg12
Vlegend.loc.4
p13591
sg14
(lp13592
sg2
S'4'
sbs(g324
g325
g9104
tp13593
g9100
s(S'plotfile'
p13594
S'delimiter'
p13595
tp13596
(icodemend.demo.code_suggest
Element
p13597
(dp13598
g10
I5
sg11
S'comments , skiprows , checkrows , delimiter , and names are all passed on to matplotlib.pylab.csv2rec ( ) to load the data into a record array .'
p13599
sg12
Vplotfile.delimiter
p13600
sg14
(lp13601
(icodemend.demo.code_suggest
Element
p13602
(dp13603
g10
I3
sg11
S''
sg12
Vplotfile.delimiter.' '
p13604
sg14
(lp13605
sg2
S"' '"
p13606
sba(icodemend.demo.code_suggest
Element
p13607
(dp13608
g10
I1
sg11
S''
sg12
Vplotfile.delimiter.','
p13609
sg14
(lp13610
sg2
S"','"
p13611
sba(icodemend.demo.code_suggest
Element
p13612
(dp13613
g10
I1
sg11
S''
sg12
Vplotfile.delimiter.';'
p13614
sg14
(lp13615
sg2
S"';'"
p13616
sbasg2
g13595
sbs(S'axis'
p13617
S'xmin'
p13618
tp13619
(icodemend.demo.code_suggest
Element
p13620
(dp13621
g10
I2
sg11
S'if len(*v)==0 , you can pass in xmin , xmax , ymin , ymax as kwargs selectively to alter just those limits without changing the others .|||changes the limit ranges ( xmax - xmin ) and ( ymax - ymin ) of the x and y axes to be the same , and have the same scaling , resulting in a square plot .|||changes x and y axis limits such that all data is shown . if all data is already shown , it will move it to the center of the figure without modifying ( xmax - xmin ) or ( ymax - ymin ) . note this is slightly different than in matlab . :'
p13622
sg12
Vaxis.xmin
p13623
sg14
(lp13624
(icodemend.demo.code_suggest
Element
p13625
(dp13626
g10
I1
sg11
S''
sg12
Vaxis.xmin.0/5
p13627
sg14
(lp13628
sg2
S'0.5'
p13629
sbasg2
g13618
sbs(g766
g325
S'mymap'
p13630
tp13631
(icodemend.demo.code_suggest
Element
p13632
(dp13633
g10
I2
sg11
S''
sg12
Vcontourf.cmap.mymap
p13634
sg14
(lp13635
sg2
g13630
sbs(g139
S'num'
p13636
g2090
tp13637
g2086
s(g324
g785
g9447
tp13638
g9443
sS'set_linewidths'
p13639
(icodemend.demo.code_suggest
Element
p13640
(dp13641
g10
I1
sg11
S'alias for set_linewidth'
p13642
sg12
Vset_linewidths
p13643
sg14
(lp13644
sg2
g13639
sbs(g5424
S'which'
p13645
S"'both'"
p13646
tp13647
(icodemend.demo.code_suggest
Element
p13648
(dp13649
g10
I14
sg11
S''
sg12
Vgrid.which.'both'
p13650
sg14
(lp13651
sg2
g13646
sbs(g324
g785
g9352
tp13652
g9348
s(g101
S's'
g7771
tp13653
g7767
s(S'thumbnail'
p13654
S'interpolation'
p13655
tp13656
(icodemend.demo.code_suggest
Element
p13657
(dp13658
g10
I0
sg11
S'the interpolation scheme used in the resampling'
p13659
sg12
Vthumbnail.interpolation
p13660
sg14
(lp13661
sg2
g13655
sbsS'longest_contiguous_ones'
p13662
(icodemend.demo.code_suggest
Element
p13663
(dp13664
g10
I0
sg11
S'return the indices of the longest stretch of contiguous ones in x , assuming x is a vector of zeros and ones .'
p13665
sg12
Vlongest_contiguous_ones
p13666
sg14
(lp13667
(icodemend.demo.code_suggest
Element
p13668
(dp13669
g10
I0
sg11
S'return the indices of the longest stretch of contiguous ones in x , assuming x is a vector of zeros and ones . if there are two equally long stretches , pick the first .'
p13670
sg12
Vlongest_contiguous_ones.x
p13671
sg14
(lp13672
sg2
S'x'
sbasg2
g13662
sbsS'joined'
p13673
(icodemend.demo.code_suggest
Element
p13674
(dp13675
g10
I0
sg11
S'returns true if a and b are members of the same set .'
p13676
sg12
Vjoined
p13677
sg14
(lp13678
g8677
ag7026
asg2
g13673
sbs(S'quiver'
p13679
S'_interpolation_steps'
p13680
tp13681
(icodemend.demo.code_suggest
Element
p13682
(dp13683
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p13684
sg12
Vquiver._interpolation_steps
p13685
sg14
(lp13686
sg2
g13680
sbs(g4371
g7032
S"['b', 'r']"
p13687
tp13688
(icodemend.demo.code_suggest
Element
p13689
(dp13690
g10
I1
sg11
S''
sg12
Vcontour.colors.['b', 'r']
p13691
sg14
(lp13692
sg2
g13687
sbs(S'get_position'
p13693
S'y'
tp13694
(icodemend.demo.code_suggest
Element
p13695
(dp13696
g10
I0
sg11
S'return the position of the text as a tuple ( x , y )'
p13697
sg12
Vget_position.y
p13698
sg14
(lp13699
sg2
S'y'
sbs(S'hist2d'
p13700
S'cmax'
p13701
tp13702
(icodemend.demo.code_suggest
Element
p13703
(dp13704
g10
I0
sg11
S'all bins that has count more than cmax will not be displayed ( set to none before passing to imshow ) and these count values in the return value count histogram will also be set to nan upon return'
p13705
sg12
Vhist2d.cmax
p13706
sg14
(lp13707
sg2
g13701
sbs(g101
S'c'
S"'0.1'"
p13708
tp13709
(icodemend.demo.code_suggest
Element
p13710
(dp13711
g10
I1
sg11
S''
sg12
Vscatter.c.'0/1'
p13712
sg14
(lp13713
sg2
g13708
sbs(g93
g102
S'0.0'
p13714
tp13715
(icodemend.demo.code_suggest
Element
p13716
(dp13717
g10
I1
sg11
S''
sg12
Vannotate.alpha.0/0
p13718
sg14
(lp13719
sg2
g13714
sbs(S'draw_path_collection'
p13720
S'linewidths'
p13721
tp13722
(icodemend.demo.code_suggest
Element
p13723
(dp13724
g10
I0
sg11
S'draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . the offsets in offsets are first transformed by offsettrans before being applied . offset_position may be either " screen " or " data " depending on the space that the offsets are in .'
p13725
sg12
Vdraw_path_collection.linewidths
p13726
sg14
(lp13727
sg2
g13721
sbs(g93
g161
S'(0.1, 0.9)'
p13728
tp13729
(icodemend.demo.code_suggest
Element
p13730
(dp13731
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/1, 0/9)
p13732
sg14
(lp13733
sg2
g13728
sbs(g8547
g8548
S'lab'
p13734
tp13735
(icodemend.demo.code_suggest
Element
p13736
(dp13737
g10
I1
sg11
S''
sg12
Vpie.labels.lab
p13738
sg14
(lp13739
sg2
g13734
sbsS'hex2color'
p13740
(icodemend.demo.code_suggest
Element
p13741
(dp13742
g10
I0
sg11
S'take a hex string s and return the corresponding rgb 3-tuple example'
p13743
sg12
Vhex2color
p13744
sg14
(lp13745
g5441
asg2
g13740
sbs(g93
g161
S'(1, 1)'
p13746
tp13747
(icodemend.demo.code_suggest
Element
p13748
(dp13749
g10
I3
sg11
S''
sg12
Vannotate.xy.(1, 1)
p13750
sg14
(lp13751
sg2
g13746
sbs(g16
g17
S'bin_width'
p13752
tp13753
(icodemend.demo.code_suggest
Element
p13754
(dp13755
g10
I1
sg11
S''
sg12
Vbar.width.bin_width
p13756
sg14
(lp13757
sg2
g13752
sbs(g93
g4800
S'((pointsx[i] + (switch * xoffset)), pointsy[i])'
p13758
tp13759
(icodemend.demo.code_suggest
Element
p13760
(dp13761
g10
I1
sg11
S''
sg12
Vannotate.xytext.((pointsx[i] + (switch * xoffset)), pointsy[i])
p13762
sg14
(lp13763
sg2
g13758
sbs(g324
g325
g9197
tp13764
g9193
s(S'eventplot'
p13765
S'gid'
p13766
tp13767
(icodemend.demo.code_suggest
Element
p13768
(dp13769
g10
I0
sg11
S'sets the ( group ) id for the artist'
p13770
sg12
Veventplot.gid
p13771
sg14
(lp13772
sg2
g13766
sbs(g117
g118
S"'legend'"
p13773
tp13774
(icodemend.demo.code_suggest
Element
p13775
(dp13776
g10
I2
sg11
S''
sg12
Vplot.label.'legend'
p13777
sg14
(lp13778
sg2
g13773
sbs(g2814
g118
S"'Second'"
p13779
tp13780
(icodemend.demo.code_suggest
Element
p13781
(dp13782
g10
I1
sg11
S''
sg12
Vadd.label.'Second'
p13783
sg14
(lp13784
sg2
g13779
sbs(S'rec_summarize'
p13785
S'func'
p13786
tp13787
(icodemend.demo.code_suggest
Element
p13788
(dp13789
g10
I0
sg11
S'summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname . the returned record array is identical to r , with extra arrays for each element in summaryfuncs .'
p13790
sg12
Vrec_summarize.func
p13791
sg14
(lp13792
sg2
g13786
sbs(S'hexbin'
p13793
S'offsets'
p13794
tp13795
(icodemend.demo.code_suggest
Element
p13796
(dp13797
g10
I0
sg11
S'set the offsets for the collection .'
p13798
sg12
Vhexbin.offsets
p13799
sg14
(lp13800
sg2
g13794
sbs(S'bar'
p13801
S'height'
p13802
tp13803
(icodemend.demo.code_suggest
Element
p13804
(dp13805
g10
I9
sg11
S'the heights of the bars'
p13806
sg12
Vbar.height
p13807
sg14
(lp13808
(icodemend.demo.code_suggest
Element
p13809
(dp13810
g10
I2
sg11
S''
sg12
Vbar.height.height
p13811
sg14
(lp13812
sg2
g945
sba(icodemend.demo.code_suggest
Element
p13813
(dp13814
g10
I1
sg11
S''
sg12
Vbar.height.0/8
p13815
sg14
(lp13816
sg2
S'0.8'
p13817
sba(icodemend.demo.code_suggest
Element
p13818
(dp13819
g10
I1
sg11
S''
sg12
Vbar.height.[(-100), 10, 110]
p13820
sg14
(lp13821
sg2
S'[(-100), 10, 110]'
p13822
sba(icodemend.demo.code_suggest
Element
p13823
(dp13824
g10
I1
sg11
S''
sg12
Vbar.height.bad
p13825
sg14
(lp13826
sg2
S'bad'
p13827
sba(icodemend.demo.code_suggest
Element
p13828
(dp13829
g10
I1
sg11
S''
sg12
Vbar.height.good
p13830
sg14
(lp13831
sg2
S'good'
p13832
sba(icodemend.demo.code_suggest
Element
p13833
(dp13834
g10
I1
sg11
S''
sg12
Vbar.height.pdf
p13835
sg14
(lp13836
sg2
S'pdf'
p13837
sbasg2
g13802
sbs(g117
g118
S"'$P_2(x)$'"
p13838
tp13839
(icodemend.demo.code_suggest
Element
p13840
(dp13841
g10
I2
sg11
S''
sg12
Vplot.label.'$P_2(x)$'
p13842
sg14
(lp13843
sg2
g13838
sbsS'num2epoch'
p13844
(icodemend.demo.code_suggest
Element
p13845
(dp13846
g10
I1
sg11
S'convert days since 0001 to epoch .'
p13847
sg12
Vnum2epoch
p13848
sg14
(lp13849
g12421
asg2
g13844
sbs(S'axhline'
p13850
g3627
tp13851
g3622
sS'hours'
p13852
(icodemend.demo.code_suggest
Element
p13853
(dp13854
g10
I0
sg11
S'return hours as days .'
p13855
sg12
Vhours
p13856
sg14
(lp13857
sg2
g13852
sbs(S'score_variant'
p13858
S'variant2'
p13859
tp13860
(icodemend.demo.code_suggest
Element
p13861
(dp13862
g10
I0
sg11
S'returns a match score between variant1 and variant2 .'
p13863
sg12
Vscore_variant.variant2
p13864
sg14
(lp13865
sg2
g13859
sbsS'set_text'
p13866
(icodemend.demo.code_suggest
Element
p13867
(dp13868
g10
I51
sg11
S'set the text string s set text'
p13869
sg12
Vset_text
p13870
sg14
(lp13871
(icodemend.demo.code_suggest
Element
p13872
(dp13873
g10
I0
sg11
S'set the text string s'
p13874
sg12
Vset_text.s
p13875
sg14
(lp13876
sg2
S's'
sbasg2
g13866
sbsS'legend'
p13877
(icodemend.demo.code_suggest
Element
p13878
(dp13879
g10
I609
sg11
S'places a legend on the axes .'
p13880
sg12
Vlegend
p13881
sg14
(lp13882
(icodemend.demo.code_suggest
Element
p13883
(dp13884
g10
I295
sg11
S'the location of the legend . possible codes are :'
p13885
sg12
Vlegend.loc
p13886
sg14
(lp13887
(icodemend.demo.code_suggest
Element
p13888
(dp13889
g10
I56
sg11
S''
sg12
Vlegend.loc.'upper left'
p13890
sg14
(lp13891
sg2
S"'upper left'"
p13892
sba(icodemend.demo.code_suggest
Element
p13893
(dp13894
g10
I44
sg11
S''
sg12
Vlegend.loc.'best'
p13895
sg14
(lp13896
sg2
S"'best'"
p13897
sba(icodemend.demo.code_suggest
Element
p13898
(dp13899
g10
I23
sg11
S''
sg12
Vlegend.loc.2
p13900
sg14
(lp13901
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p13902
(dp13903
g10
I19
sg11
S''
sg12
Vlegend.loc.'upper center'
p13904
sg14
(lp13905
sg2
S"'upper center'"
p13906
sba(icodemend.demo.code_suggest
Element
p13907
(dp13908
g10
I19
sg11
S''
sg12
Vlegend.loc.0
p13909
sg14
(lp13910
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p13911
(dp13912
g10
I16
sg11
S''
sg12
Vlegend.loc.'lower right'
p13913
sg14
(lp13914
sg2
S"'lower right'"
p13915
sba(icodemend.demo.code_suggest
Element
p13916
(dp13917
g10
I16
sg11
S''
sg12
Vlegend.loc.1
p13918
sg14
(lp13919
sg2
S'1'
sbag8044
ag12589
a(icodemend.demo.code_suggest
Element
p13920
(dp13921
g10
I15
sg11
S''
sg12
Vlegend.loc.'upper right'
p13922
sg14
(lp13923
sg2
S"'upper right'"
p13924
sba(icodemend.demo.code_suggest
Element
p13925
(dp13926
g10
I10
sg11
S''
sg12
Vlegend.loc.'lower center'
p13927
sg14
(lp13928
sg2
S"'lower center'"
p13929
sbag13589
a(icodemend.demo.code_suggest
Element
p13930
(dp13931
g10
I7
sg11
S''
sg12
Vlegend.loc.'center'
p13932
sg14
(lp13933
sg2
S"'center'"
p13934
sba(icodemend.demo.code_suggest
Element
p13935
(dp13936
g10
I6
sg11
S''
sg12
Vlegend.loc.3
p13937
sg14
(lp13938
sg2
S'3'
sba(icodemend.demo.code_suggest
Element
p13939
(dp13940
g10
I5
sg11
S''
sg12
Vlegend.loc.'center right'
p13941
sg14
(lp13942
sg2
S"'center right'"
p13943
sba(icodemend.demo.code_suggest
Element
p13944
(dp13945
g10
I5
sg11
S''
sg12
Vlegend.loc.9
p13946
sg14
(lp13947
sg2
S'9'
sba(icodemend.demo.code_suggest
Element
p13948
(dp13949
g10
I3
sg11
S''
sg12
Vlegend.loc.8
p13950
sg14
(lp13951
sg2
S'8'
sba(icodemend.demo.code_suggest
Element
p13952
(dp13953
g10
I1
sg11
S''
sg12
Vlegend.loc.'left center'
p13954
sg14
(lp13955
sg2
S"'left center'"
p13956
sba(icodemend.demo.code_suggest
Element
p13957
(dp13958
g10
I1
sg11
S''
sg12
Vlegend.loc.((-1/5), 0/9)
p13959
sg14
(lp13960
sg2
S'((-1.5), 0.9)'
p13961
sba(icodemend.demo.code_suggest
Element
p13962
(dp13963
g10
I1
sg11
S''
sg12
Vlegend.loc.((axbox/x0 + x_value), (axbox/y0 + y_value))
p13964
sg14
(lp13965
sg2
S'((axbox.x0 + x_value), (axbox.y0 + y_value))'
p13966
sba(icodemend.demo.code_suggest
Element
p13967
(dp13968
g10
I1
sg11
S''
sg12
Vlegend.loc.(0/5, 0)
p13969
sg14
(lp13970
sg2
S'(0.5, 0)'
p13971
sba(icodemend.demo.code_suggest
Element
p13972
(dp13973
g10
I1
sg11
S''
sg12
Vlegend.loc.(1/03, 0/4)
p13974
sg14
(lp13975
sg2
S'(1.03, 0.4)'
p13976
sbag4715
ag1013
a(icodemend.demo.code_suggest
Element
p13977
(dp13978
g10
I1
sg11
S''
sg12
Vlegend.loc.6
p13979
sg14
(lp13980
sg2
S'6'
sba(icodemend.demo.code_suggest
Element
p13981
(dp13982
g10
I1
sg11
S''
sg12
Vlegend.loc.[1/01, 0/1]
p13983
sg14
(lp13984
sg2
S'[1.01, 0.1]'
p13985
sba(icodemend.demo.code_suggest
Element
p13986
(dp13987
g10
I1
sg11
S''
sg12
Vlegend.loc.[1/01, 0/5]
p13988
sg14
(lp13989
sg2
S'[1.01, 0.5]'
p13990
sbag10179
asg2
S'loc'
p13991
sba(icodemend.demo.code_suggest
Element
p13992
(dp13993
g10
I75
sg11
S'specify any arbitrary location for the legend in bbox_transform coordinates ( default axes coordinates ) .'
p13994
sg12
Vlegend.bbox_to_anchor
p13995
sg14
(lp13996
(icodemend.demo.code_suggest
Element
p13997
(dp13998
g10
I9
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1, 0/5)
p13999
sg14
(lp14000
sg2
S'(1, 0.5)'
p14001
sba(icodemend.demo.code_suggest
Element
p14002
(dp14003
g10
I4
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/5, 1/05)
p14004
sg14
(lp14005
sg2
S'(0.5, 1.05)'
p14006
sba(icodemend.demo.code_suggest
Element
p14007
(dp14008
g10
I3
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1, 1)
p14009
sg14
(lp14010
sg2
S'(1, 1)'
p14011
sbag10092
a(icodemend.demo.code_suggest
Element
p14012
(dp14013
g10
I2
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0, 0)
p14014
sg14
(lp14015
sg2
S'(0, 0)'
p14016
sba(icodemend.demo.code_suggest
Element
p14017
(dp14018
g10
I2
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0, 0, 1, 1)
p14019
sg14
(lp14020
sg2
S'(0, 0, 1, 1)'
p14021
sba(icodemend.demo.code_suggest
Element
p14022
(dp14023
g10
I2
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0, 1)
p14024
sg14
(lp14025
sg2
S'(0, 1)'
p14026
sbag8397
a(icodemend.demo.code_suggest
Element
p14027
(dp14028
g10
I2
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/5, (-0/25))
p14029
sg14
(lp14030
sg2
S'(0.5, (-0.25))'
p14031
sba(icodemend.demo.code_suggest
Element
p14032
(dp14033
g10
I2
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/5, 0)
p14034
sg14
(lp14035
sg2
S'(0.5, 0)'
p14036
sba(icodemend.demo.code_suggest
Element
p14037
(dp14038
g10
I2
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/5, 0/5)
p14039
sg14
(lp14040
sg2
S'(0.5, 0.5)'
p14041
sba(icodemend.demo.code_suggest
Element
p14042
(dp14043
g10
I2
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/05, 0/5)
p14044
sg14
(lp14045
sg2
S'(1.05, 0.5)'
p14046
sba(icodemend.demo.code_suggest
Element
p14047
(dp14048
g10
I2
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/05, 1)
p14049
sg14
(lp14050
sg2
S'(1.05, 1)'
p14051
sba(icodemend.demo.code_suggest
Element
p14052
(dp14053
g10
I2
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/05, 1/0)
p14054
sg14
(lp14055
sg2
S'(1.05, 1.0)'
p14056
sbag504
a(icodemend.demo.code_suggest
Element
p14057
(dp14058
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.((-0/1), 1/0)
p14059
sg14
(lp14060
sg2
S'((-0.1), 1.0)'
p14061
sba(icodemend.demo.code_suggest
Element
p14062
(dp14063
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.((-0/1), 2/5)
p14064
sg14
(lp14065
sg2
S'((-0.1), 2.5)'
p14066
sba(icodemend.demo.code_suggest
Element
p14067
(dp14068
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.((1 + left_pad), 0/5)
p14069
sg14
(lp14070
sg2
S'((1 + left_pad), 0.5)'
p14071
sba(icodemend.demo.code_suggest
Element
p14072
(dp14073
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0, (-0/1), 1, 1)
p14074
sg14
(lp14075
sg2
S'(0, (-0.1), 1, 1)'
p14076
sbag312
a(icodemend.demo.code_suggest
Element
p14077
(dp14078
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0, 0, 0/8, 1)
p14079
sg14
(lp14080
sg2
S'(0, 0, 0.8, 1)'
p14081
sba(icodemend.demo.code_suggest
Element
p14082
(dp14083
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0, 0/5)
p14084
sg14
(lp14085
sg2
S'(0, 0.5)'
p14086
sba(icodemend.demo.code_suggest
Element
p14087
(dp14088
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0, 0/9)
p14089
sg14
(lp14090
sg2
S'(0, 0.9)'
p14091
sba(icodemend.demo.code_suggest
Element
p14092
(dp14093
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/0, (-0/35), 1/0, 1/102)
p14094
sg14
(lp14095
sg2
S'(0.0, (-0.35), 1.0, 1.102)'
p14096
sba(icodemend.demo.code_suggest
Element
p14097
(dp14098
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/0, 1/0, 1/0, 0/0)
p14099
sg14
(lp14100
sg2
S'(0.0, 1.0, 1.0, 0.0)'
p14101
sba(icodemend.demo.code_suggest
Element
p14102
(dp14103
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/0, 1/02, 1/0, 0/3)
p14104
sg14
(lp14105
sg2
S'(0.0, 1.02, 1.0, 0.3)'
p14106
sba(icodemend.demo.code_suggest
Element
p14107
(dp14108
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/5, (-0/02))
p14109
sg14
(lp14110
sg2
S'(0.5, (-0.02))'
p14111
sbag12065
a(icodemend.demo.code_suggest
Element
p14112
(dp14113
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/5, 1)
p14114
sg14
(lp14115
sg2
S'(0.5, 1)'
p14116
sba(icodemend.demo.code_suggest
Element
p14117
(dp14118
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/65, (-0/2))
p14119
sg14
(lp14120
sg2
S'(0.65, (-0.2))'
p14121
sbag256
a(icodemend.demo.code_suggest
Element
p14122
(dp14123
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/82, 1)
p14124
sg14
(lp14125
sg2
S'(0.82, 1)'
p14126
sba(icodemend.demo.code_suggest
Element
p14127
(dp14128
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(0/98, 0/25)
p14129
sg14
(lp14130
sg2
S'(0.98, 0.25)'
p14131
sba(icodemend.demo.code_suggest
Element
p14132
(dp14133
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1, 0)
p14134
sg14
(lp14135
sg2
S'(1, 0)'
p14136
sba(icodemend.demo.code_suggest
Element
p14137
(dp14138
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/0, 1/0)
p14139
sg14
(lp14140
sg2
S'(1.0, 1.0)'
p14141
sba(icodemend.demo.code_suggest
Element
p14142
(dp14143
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/01, 1)
p14144
sg14
(lp14145
sg2
S'(1.01, 1)'
p14146
sba(icodemend.demo.code_suggest
Element
p14147
(dp14148
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/02, 0)
p14149
sg14
(lp14150
sg2
S'(1.02, 0)'
p14151
sba(icodemend.demo.code_suggest
Element
p14152
(dp14153
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/02, 1)
p14154
sg14
(lp14155
sg2
S'(1.02, 1)'
p14156
sba(icodemend.demo.code_suggest
Element
p14157
(dp14158
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/05, 0)
p14159
sg14
(lp14160
sg2
S'(1.05, 0)'
p14161
sba(icodemend.demo.code_suggest
Element
p14162
(dp14163
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/1, (-0/1))
p14164
sg14
(lp14165
sg2
S'(1.1, (-0.1))'
p14166
sba(icodemend.demo.code_suggest
Element
p14167
(dp14168
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/1, 1/05)
p14169
sg14
(lp14170
sg2
S'(1.1, 1.05)'
p14171
sba(icodemend.demo.code_suggest
Element
p14172
(dp14173
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/1, 1/1)
p14174
sg14
(lp14175
sg2
S'(1.1, 1.1)'
p14176
sbag7331
a(icodemend.demo.code_suggest
Element
p14177
(dp14178
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(1/27, 1)
p14179
sg14
(lp14180
sg2
S'(1.27, 1)'
p14181
sbag3168
a(icodemend.demo.code_suggest
Element
p14182
(dp14183
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.(x_legend, y_legend)
p14184
sg14
(lp14185
sg2
S'(x_legend, y_legend)'
p14186
sba(icodemend.demo.code_suggest
Element
p14187
(dp14188
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.[0/5, (-0/05)]
p14189
sg14
(lp14190
sg2
S'[0.5, (-0.05)]'
p14191
sba(icodemend.demo.code_suggest
Element
p14192
(dp14193
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.[0/5, 0]
p14194
sg14
(lp14195
sg2
S'[0.5, 0]'
p14196
sba(icodemend.demo.code_suggest
Element
p14197
(dp14198
g10
I1
sg11
S''
sg12
Vlegend.bbox_to_anchor.[0/5, 1/1]
p14199
sg14
(lp14200
sg2
S'[0.5, 1.1]'
p14201
sbasg2
S'bbox_to_anchor'
p14202
sba(icodemend.demo.code_suggest
Element
p14203
(dp14204
g10
I49
sg11
S'the number of marker points in the legend when creating a legend entry for a line/matplotlib.lines.line2d . default is none which will take the value from the legend.numpoints rcparam .'
p14205
sg12
Vlegend.numpoints
p14206
sg14
(lp14207
(icodemend.demo.code_suggest
Element
p14208
(dp14209
g10
I45
sg11
S''
sg12
Vlegend.numpoints.1
p14210
sg14
(lp14211
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p14212
(dp14213
g10
I2
sg11
S''
sg12
Vlegend.numpoints.2
p14214
sg14
(lp14215
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p14216
(dp14217
g10
I2
sg11
S''
sg12
Vlegend.numpoints.3
p14218
sg14
(lp14219
sg2
S'3'
sbasg2
S'numpoints'
p14220
sba(icodemend.demo.code_suggest
Element
p14221
(dp14222
g10
I42
sg11
S'the number of columns that the legend has . default is 1 .'
p14223
sg12
Vlegend.ncol
p14224
sg14
(lp14225
(icodemend.demo.code_suggest
Element
p14226
(dp14227
g10
I11
sg11
S''
sg12
Vlegend.ncol.2
p14228
sg14
(lp14229
sg2
S'2'
sbag4986
a(icodemend.demo.code_suggest
Element
p14230
(dp14231
g10
I7
sg11
S''
sg12
Vlegend.ncol.5
p14232
sg14
(lp14233
sg2
S'5'
sba(icodemend.demo.code_suggest
Element
p14234
(dp14235
g10
I5
sg11
S''
sg12
Vlegend.ncol.1
p14236
sg14
(lp14237
sg2
S'1'
sbag5558
ag7319
a(icodemend.demo.code_suggest
Element
p14238
(dp14239
g10
I1
sg11
S''
sg12
Vlegend.ncol.7
p14240
sg14
(lp14241
sg2
S'7'
sba(icodemend.demo.code_suggest
Element
p14242
(dp14243
g10
I1
sg11
S''
sg12
Vlegend.ncol.ncol
p14244
sg14
(lp14245
sg2
g4984
sba(icodemend.demo.code_suggest
Element
p14246
(dp14247
g10
I1
sg11
S''
sg12
Vlegend.ncol.num_plots
p14248
sg14
(lp14249
sg2
S'num_plots'
p14250
sbasg2
S'ncol'
p14251
sba(icodemend.demo.code_suggest
Element
p14252
(dp14253
g10
I30
sg11
S'the font properties of the legend . if none ( default ) , the current matplotlib.rcparams will be used .'
p14254
sg12
Vlegend.prop
p14255
sg14
(lp14256
(icodemend.demo.code_suggest
Element
p14257
(dp14258
g10
I6
sg11
S''
sg12
Vlegend.prop.{'size': 20}
p14259
sg14
(lp14260
sg2
S"{'size': 20}"
p14261
sba(icodemend.demo.code_suggest
Element
p14262
(dp14263
g10
I2
sg11
S''
sg12
Vlegend.prop.{'size': 11}
p14264
sg14
(lp14265
sg2
S"{'size': 11}"
p14266
sba(icodemend.demo.code_suggest
Element
p14267
(dp14268
g10
I2
sg11
S''
sg12
Vlegend.prop.{'size': 40}
p14269
sg14
(lp14270
sg2
S"{'size': 40}"
p14271
sba(icodemend.demo.code_suggest
Element
p14272
(dp14273
g10
I2
sg11
S''
sg12
Vlegend.prop.{'size': 8}
p14274
sg14
(lp14275
sg2
S"{'size': 8}"
p14276
sba(icodemend.demo.code_suggest
Element
p14277
(dp14278
g10
I2
sg11
S''
sg12
Vlegend.prop.{'size': 9}
p14279
sg14
(lp14280
sg2
S"{'size': 9}"
p14281
sba(icodemend.demo.code_suggest
Element
p14282
(dp14283
g10
I1
sg11
S''
sg12
Vlegend.prop.f0
p14284
sg14
(lp14285
sg2
g5476
sba(icodemend.demo.code_suggest
Element
p14286
(dp14287
g10
I1
sg11
S''
sg12
Vlegend.prop.fontP
p14288
sg14
(lp14289
sg2
S'fontP'
p14290
sba(icodemend.demo.code_suggest
Element
p14291
(dp14292
g10
I1
sg11
S''
sg12
Vlegend.prop.legend_font_props
p14293
sg14
(lp14294
sg2
S'legend_font_props'
p14295
sba(icodemend.demo.code_suggest
Element
p14296
(dp14297
g10
I1
sg11
S''
sg12
Vlegend.prop.{'family': 'monospace'}
p14298
sg14
(lp14299
sg2
S"{'family': 'monospace'}"
p14300
sba(icodemend.demo.code_suggest
Element
p14301
(dp14302
g10
I1
sg11
S''
sg12
Vlegend.prop.{'family': 'serif', 'size': 'xx-small'}
p14303
sg14
(lp14304
sg2
S"{'family': 'serif', 'size': 'xx-small'}"
p14305
sba(icodemend.demo.code_suggest
Element
p14306
(dp14307
g10
I1
sg11
S''
sg12
Vlegend.prop.{'family': family}
p14308
sg14
(lp14309
sg2
S"{'family': family}"
p14310
sba(icodemend.demo.code_suggest
Element
p14311
(dp14312
g10
I1
sg11
S''
sg12
Vlegend.prop.{'size': 12}
p14313
sg14
(lp14314
sg2
S"{'size': 12}"
p14315
sba(icodemend.demo.code_suggest
Element
p14316
(dp14317
g10
I1
sg11
S''
sg12
Vlegend.prop.{'size': 16}
p14318
sg14
(lp14319
sg2
S"{'size': 16}"
p14320
sba(icodemend.demo.code_suggest
Element
p14321
(dp14322
g10
I1
sg11
S''
sg12
Vlegend.prop.{'size': 30}
p14323
sg14
(lp14324
sg2
S"{'size': 30}"
p14325
sba(icodemend.demo.code_suggest
Element
p14326
(dp14327
g10
I1
sg11
S''
sg12
Vlegend.prop.{'size': 50}
p14328
sg14
(lp14329
sg2
S"{'size': 50}"
p14330
sba(icodemend.demo.code_suggest
Element
p14331
(dp14332
g10
I1
sg11
S''
sg12
Vlegend.prop.{'size': 6}
p14333
sg14
(lp14334
sg2
S"{'size': 6}"
p14335
sba(icodemend.demo.code_suggest
Element
p14336
(dp14337
g10
I1
sg11
S''
sg12
Vlegend.prop.{'size': 7}
p14338
sg14
(lp14339
sg2
S"{'size': 7}"
p14340
sbag7455
a(icodemend.demo.code_suggest
Element
p14341
(dp14342
g10
I1
sg11
S''
sg12
Vlegend.prop.{fontsize: 'small'}
p14343
sg14
(lp14344
sg2
S"{fontsize: 'small'}"
p14345
sbasg2
S'prop'
p14346
sba(icodemend.demo.code_suggest
Element
p14347
(dp14348
g10
I22
sg11
S'control whether to draw a shadow behind the legend . default is none which will take the value from the legend.shadow rcparam .'
p14349
sg12
Vlegend.shadow
p14350
sg14
(lp14351
(icodemend.demo.code_suggest
Element
p14352
(dp14353
g10
I18
sg11
S''
sg12
Vlegend.shadow.True
p14354
sg14
(lp14355
sg2
g438
sbag4336
a(icodemend.demo.code_suggest
Element
p14356
(dp14357
g10
I1
sg11
S''
sg12
Vlegend.shadow.'true'
p14358
sg14
(lp14359
sg2
S"'true'"
p14360
sbasg2
S'shadow'
p14361
sba(icodemend.demo.code_suggest
Element
p14362
(dp14363
g10
I20
sg11
S"control whether round edges should be enabled around the fancybboxpatch which makes up the legend 's background . default is none which will take the value from the legend.fancybox rcparam ."
p14364
sg12
Vlegend.fancybox
p14365
sg14
(lp14366
(icodemend.demo.code_suggest
Element
p14367
(dp14368
g10
I19
sg11
S''
sg12
Vlegend.fancybox.True
p14369
sg14
(lp14370
sg2
g438
sba(icodemend.demo.code_suggest
Element
p14371
(dp14372
g10
I1
sg11
S''
sg12
Vlegend.fancybox.False
p14373
sg14
(lp14374
sg2
g1944
sbasg2
S'fancybox'
p14375
sbag183
a(icodemend.demo.code_suggest
Element
p14376
(dp14377
g10
I13
sg11
S'the number of marker points in the legend when creating a legend entry for a scatter plot/ matplotlib.collections.pathcollection . default is none which will take the value from the legend.scatterpoints rcparam .'
p14378
sg12
Vlegend.scatterpoints
p14379
sg14
(lp14380
(icodemend.demo.code_suggest
Element
p14381
(dp14382
g10
I12
sg11
S''
sg12
Vlegend.scatterpoints.1
p14383
sg14
(lp14384
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p14385
(dp14386
g10
I1
sg11
S''
sg12
Vlegend.scatterpoints.5
p14387
sg14
(lp14388
sg2
S'5'
sbasg2
S'scatterpoints'
p14389
sba(icodemend.demo.code_suggest
Element
p14390
(dp14391
g10
I12
sg11
S'the vertical space between the legend entries . measured in font-size units . default is none which will take the value from the legend.labelspacing rcparam .'
p14392
sg12
Vlegend.labelspacing
p14393
sg14
(lp14394
(icodemend.demo.code_suggest
Element
p14395
(dp14396
g10
I2
sg11
S''
sg12
Vlegend.labelspacing.0/0
p14397
sg14
(lp14398
sg2
S'0.0'
p14399
sba(icodemend.demo.code_suggest
Element
p14400
(dp14401
g10
I2
sg11
S''
sg12
Vlegend.labelspacing.0/1
p14402
sg14
(lp14403
sg2
S'0.1'
p14404
sba(icodemend.demo.code_suggest
Element
p14405
(dp14406
g10
I2
sg11
S''
sg12
Vlegend.labelspacing.1/0
p14407
sg14
(lp14408
sg2
S'1.0'
p14409
sba(icodemend.demo.code_suggest
Element
p14410
(dp14411
g10
I2
sg11
S''
sg12
Vlegend.labelspacing.2
p14412
sg14
(lp14413
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p14414
(dp14415
g10
I1
sg11
S''
sg12
Vlegend.labelspacing.-0/7
p14416
sg14
(lp14417
sg2
S'-0.7'
p14418
sba(icodemend.demo.code_suggest
Element
p14419
(dp14420
g10
I1
sg11
S''
sg12
Vlegend.labelspacing.0/5
p14421
sg14
(lp14422
sg2
S'0.5'
p14423
sbag5785
a(icodemend.demo.code_suggest
Element
p14424
(dp14425
g10
I1
sg11
S''
sg12
Vlegend.labelspacing.1/5
p14426
sg14
(lp14427
sg2
S'1.5'
p14428
sbasg2
S'labelspacing'
p14429
sbag532
a(icodemend.demo.code_suggest
Element
p14430
(dp14431
g10
I10
sg11
S'the pad between the axes and legend border . measured in font-size units . default is none which will take the value from the legend.borderaxespad rcparam .'
p14432
sg12
Vlegend.borderaxespad
p14433
sg14
(lp14434
(icodemend.demo.code_suggest
Element
p14435
(dp14436
g10
I6
sg11
S''
sg12
Vlegend.borderaxespad.0/0
p14437
sg14
(lp14438
sg2
S'0.0'
p14439
sba(icodemend.demo.code_suggest
Element
p14440
(dp14441
g10
I3
sg11
S''
sg12
Vlegend.borderaxespad.0
p14442
sg14
(lp14443
sg2
S'0'
sbag12882
asg2
S'borderaxespad'
p14444
sba(icodemend.demo.code_suggest
Element
p14445
(dp14446
g10
I8
sg11
S'control whether a frame should be drawn around the legend . default is none which will take the value from the legend.frameon rcparam .'
p14447
sg12
Vlegend.frameon
p14448
sg14
(lp14449
(icodemend.demo.code_suggest
Element
p14450
(dp14451
g10
I8
sg11
S''
sg12
Vlegend.frameon.False
p14452
sg14
(lp14453
sg2
g1944
sbasg2
S'frameon'
p14454
sba(icodemend.demo.code_suggest
Element
p14455
(dp14456
g10
I8
sg11
S'the length of the legend handles . measured in font-size units . default is none which will take the value from the legend.handlelength rcparam .'
p14457
sg12
Vlegend.handlelength
p14458
sg14
(lp14459
(icodemend.demo.code_suggest
Element
p14460
(dp14461
g10
I3
sg11
S''
sg12
Vlegend.handlelength.0
p14462
sg14
(lp14463
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p14464
(dp14465
g10
I1
sg11
S''
sg12
Vlegend.handlelength.0/8
p14466
sg14
(lp14467
sg2
S'0.8'
p14468
sba(icodemend.demo.code_suggest
Element
p14469
(dp14470
g10
I1
sg11
S''
sg12
Vlegend.handlelength.1/5
p14471
sg14
(lp14472
sg2
S'1.5'
p14473
sba(icodemend.demo.code_suggest
Element
p14474
(dp14475
g10
I1
sg11
S''
sg12
Vlegend.handlelength.2/6
p14476
sg14
(lp14477
sg2
S'2.6'
p14478
sba(icodemend.demo.code_suggest
Element
p14479
(dp14480
g10
I1
sg11
S''
sg12
Vlegend.handlelength.3
p14481
sg14
(lp14482
sg2
S'3'
sba(icodemend.demo.code_suggest
Element
p14483
(dp14484
g10
I1
sg11
S''
sg12
Vlegend.handlelength.5
p14485
sg14
(lp14486
sg2
S'5'
sbasg2
S'handlelength'
p14487
sba(icodemend.demo.code_suggest
Element
p14488
(dp14489
g10
I7
sg11
S'the pad between the legend handle and text . measured in font-size units . default is none which will take the value from the legend.handletextpad rcparam .'
p14490
sg12
Vlegend.handletextpad
p14491
sg14
(lp14492
(icodemend.demo.code_suggest
Element
p14493
(dp14494
g10
I3
sg11
S''
sg12
Vlegend.handletextpad.0
p14495
sg14
(lp14496
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p14497
(dp14498
g10
I1
sg11
S''
sg12
Vlegend.handletextpad.-2
p14499
sg14
(lp14500
sg2
S'-2'
p14501
sbag12458
ag705
a(icodemend.demo.code_suggest
Element
p14502
(dp14503
g10
I1
sg11
S''
sg12
Vlegend.handletextpad.4
p14504
sg14
(lp14505
sg2
S'4'
sbasg2
S'handletextpad'
p14506
sba(icodemend.demo.code_suggest
Element
p14507
(dp14508
g10
I6
sg11
S"the transform for the bounding box ( bbox_to_anchor ) . for a value of none ( default ) the axes ' transaxes transform will be used ."
p14509
sg12
Vlegend.bbox_transform
p14510
sg14
(lp14511
sg2
S'bbox_transform'
p14512
sba(icodemend.demo.code_suggest
Element
p14513
(dp14514
g10
I6
sg11
S'the custom dictionary mapping instances or types to a legend handler . this handler_map updates the default handler map found at matplotlib.legend.legend.get_legend_handler_map ( ) .'
p14515
sg12
Vlegend.handler_map
p14516
sg14
(lp14517
(icodemend.demo.code_suggest
Element
p14518
(dp14519
g10
I1
sg11
S''
sg12
Vlegend.handler_map.my_handler_map
p14520
sg14
(lp14521
sg2
S'my_handler_map'
p14522
sba(icodemend.demo.code_suggest
Element
p14523
(dp14524
g10
I1
sg11
S''
sg12
Vlegend.handler_map.{Line2D: MyHandlerLine2D()}
p14525
sg14
(lp14526
sg2
S'{Line2D: MyHandlerLine2D()}'
p14527
sba(icodemend.demo.code_suggest
Element
p14528
(dp14529
g10
I1
sg11
S''
sg12
Vlegend.handler_map.{obj_0: AnyObjectHandler(), obj_1: AnyObjectHandler()}
p14530
sg14
(lp14531
sg2
S'{obj_0: AnyObjectHandler(), obj_1: AnyObjectHandler()}'
p14532
sbag13472
a(icodemend.demo.code_suggest
Element
p14533
(dp14534
g10
I1
sg11
S''
sg12
Vlegend.handler_map.{p4: HandlerXoffset(x_offset=10), p5: HandlerXoffset(x_offset=(-10))}
p14535
sg14
(lp14536
sg2
S'{p4: HandlerXoffset(x_offset=10), p5: HandlerXoffset(x_offset=(-10))}'
p14537
sba(icodemend.demo.code_suggest
Element
p14538
(dp14539
g10
I1
sg11
S''
sg12
Vlegend.handler_map.{rects1[0]: HandlerSquare(), rects2[0]: HandlerSquare()}
p14540
sg14
(lp14541
sg2
S'{rects1[0]: HandlerSquare(), rects2[0]: HandlerSquare()}'
p14542
sbasg2
S'handler_map'
p14543
sba(icodemend.demo.code_suggest
Element
p14544
(dp14545
g10
I5
sg11
S'the fractional whitespace inside the legend border . measured in font-size units . default is none which will take the value from the legend.borderpad rcparam .'
p14546
sg12
Vlegend.borderpad
p14547
sg14
(lp14548
(icodemend.demo.code_suggest
Element
p14549
(dp14550
g10
I2
sg11
S''
sg12
Vlegend.borderpad.2
p14551
sg14
(lp14552
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p14553
(dp14554
g10
I1
sg11
S''
sg12
Vlegend.borderpad.0/2
p14555
sg14
(lp14556
sg2
S'0.2'
p14557
sba(icodemend.demo.code_suggest
Element
p14558
(dp14559
g10
I1
sg11
S''
sg12
Vlegend.borderpad.1/2
p14560
sg14
(lp14561
sg2
S'1.2'
p14562
sba(icodemend.demo.code_suggest
Element
p14563
(dp14564
g10
I1
sg11
S''
sg12
Vlegend.borderpad.1/5
p14565
sg14
(lp14566
sg2
S'1.5'
p14567
sbasg2
S'borderpad'
p14568
sba(icodemend.demo.code_suggest
Element
p14569
(dp14570
g10
I3
sg11
S'the relative size of legend markers compared with the originally drawn ones . default is none which will take the value from the legend.markerscale rcparam .'
p14571
sg12
Vlegend.markerscale
p14572
sg14
(lp14573
(icodemend.demo.code_suggest
Element
p14574
(dp14575
g10
I1
sg11
S''
sg12
Vlegend.markerscale.0/2
p14576
sg14
(lp14577
sg2
S'0.2'
p14578
sba(icodemend.demo.code_suggest
Element
p14579
(dp14580
g10
I1
sg11
S''
sg12
Vlegend.markerscale.0/75
p14581
sg14
(lp14582
sg2
S'0.75'
p14583
sba(icodemend.demo.code_suggest
Element
p14584
(dp14585
g10
I1
sg11
S''
sg12
Vlegend.markerscale.2
p14586
sg14
(lp14587
sg2
S'2'
sbasg2
S'markerscale'
p14588
sbag5199
a(icodemend.demo.code_suggest
Element
p14589
(dp14590
g10
I2
sg11
S'the spacing between columns . measured in font-size units . default is none which will take the value from the legend.columnspacing rcparam .'
p14591
sg12
Vlegend.columnspacing
p14592
sg14
(lp14593
(icodemend.demo.code_suggest
Element
p14594
(dp14595
g10
I1
sg11
S''
sg12
Vlegend.columnspacing.0/75
p14596
sg14
(lp14597
sg2
S'0.75'
p14598
sba(icodemend.demo.code_suggest
Element
p14599
(dp14600
g10
I1
sg11
S''
sg12
Vlegend.columnspacing.1/0
p14601
sg14
(lp14602
sg2
S'1.0'
p14603
sbasg2
S'columnspacing'
p14604
sba(icodemend.demo.code_suggest
Element
p14605
(dp14606
g10
I0
sg11
S'if true , legend marker is placed to the left of the legend label if false , legend marker is placed to the right of the legend label'
p14607
sg12
Vlegend.*markerfirst*: [ *True* | *False* ]
p14608
sg14
(lp14609
sg2
S'*markerfirst*: [ *True* | *False* ]'
p14610
sba(icodemend.demo.code_suggest
Element
p14611
(dp14612
g10
I0
sg11
S'if true , legend marker is placed to the left of the legend label if false , legend marker is placed to the right of the legend label|||if true , draw a frame with a round fancybox . if none , use rc|||if true , draw a shadow behind legend . if none , use rc settings .'
p14613
sg12
Vlegend.False
p14614
sg14
(lp14615
sg2
S'False'
p14616
sba(icodemend.demo.code_suggest
Element
p14617
(dp14618
g10
I0
sg11
S'the relative size of legend markers vs. original . if none , use rc settings .|||if true , draw a frame with a round fancybox . if none , use rc|||if true , draw a shadow behind legend . if none , use rc settings .|||a matplotlib.font_manager.fontproperties instance . if prop is a dictionary , a new instance will be created with prop . if none , use rc settings .'
p14619
sg12
Vlegend.None
p14620
sg14
(lp14621
sg2
S'None'
p14622
sba(icodemend.demo.code_suggest
Element
p14623
(dp14624
g10
I0
sg11
S'if true , legend marker is placed to the left of the legend label if false , legend marker is placed to the right of the legend label|||if true , draw a frame with a round fancybox . if none , use rc|||if true , draw a shadow behind legend . if none , use rc settings .'
p14625
sg12
Vlegend.True
p14626
sg14
(lp14627
sg2
S'True'
p14628
sba(icodemend.demo.code_suggest
Element
p14629
(dp14630
g10
I0
sg11
S"control the alpha transparency of the legend 's frame . default is none which will take the value from the legend.framealpha rcparam ."
p14631
sg12
Vlegend.framealpha
p14632
sg14
(lp14633
sg2
S'framealpha'
p14634
sba(icodemend.demo.code_suggest
Element
p14635
(dp14636
g10
I0
sg11
S'if true , legend marker is placed to the left of the legend label if false , legend marker is placed to the right of the legend label'
p14637
sg12
Vlegend.markerfirst
p14638
sg14
(lp14639
sg2
S'markerfirst'
p14640
sba(icodemend.demo.code_suggest
Element
p14641
(dp14642
g10
I0
sg11
S'the vertical offset ( relative to the font size ) for the markers created for a scatter plot legend entry . 0.0 is at the base the legend text , and 1.0 is at the top . to draw all markers at the same height , set to [ 0.5 ] . default [ 0.375 , 0.5 , 0.3125 ] .'
p14643
sg12
Vlegend.scatteryoffsets
p14644
sg14
(lp14645
sg2
S'scatteryoffsets'
p14646
sbasg2
g13877
sbs(S'get_sample_data'
p14647
S'fname'
p14648
tp14649
(icodemend.demo.code_suggest
Element
p14650
(dp14651
g10
I0
sg11
S'return a sample data file . fname is a path relative to the mpl-data/sample_data directory . if asfileobj is true return a file object , otherwise just a file path .'
p14652
sg12
Vget_sample_data.fname
p14653
sg14
(lp14654
sg2
g14648
sbs(S'cohere'
p14655
S'linewidth'
p14656
tp14657
(icodemend.demo.code_suggest
Element
p14658
(dp14659
g10
I0
sg11
S'set the line width in points'
p14660
sg12
Vcohere.linewidth
p14661
sg14
(lp14662
sg2
g14656
sbs(g93
g161
S'((delta + 0.2), (-0.2))'
p14663
tp14664
(icodemend.demo.code_suggest
Element
p14665
(dp14666
g10
I1
sg11
S''
sg12
Vannotate.xy.((delta + 0/2), (-0/2))
p14667
sg14
(lp14668
sg2
g14663
sbs(S'set_data'
p14669
S'A'
tp14670
(icodemend.demo.code_suggest
Element
p14671
(dp14672
g10
I0
sg11
S'colormapped , or a ( m,n,3 ) rgb array , or a ( m,n,4 ) rgba array .'
p14673
sg12
Vset_data.A
p14674
sg14
(lp14675
sg2
S'A'
sbs(g93
g4800
S'(length, ypos)'
p14676
tp14677
(icodemend.demo.code_suggest
Element
p14678
(dp14679
g10
I1
sg11
S''
sg12
Vannotate.xytext.(length, ypos)
p14680
sg14
(lp14681
sg2
g14676
sbs(S'get_yaxis_text1_transform'
p14682
S'valign'
p14683
tp14684
(icodemend.demo.code_suggest
Element
p14685
(dp14686
g10
I0
sg11
S'where valign and halign are requested alignments for the text .'
p14687
sg12
Vget_yaxis_text1_transform.valign
p14688
sg14
(lp14689
sg2
g14683
sbsS'pick'
p14690
(icodemend.demo.code_suggest
Element
p14691
(dp14692
g10
I0
sg11
S'each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set'
p14693
sg12
Vpick
p14694
sg14
(lp14695
(icodemend.demo.code_suggest
Element
p14696
(dp14697
g10
I0
sg11
S'each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set'
p14698
sg12
Vpick.mouseevent
p14699
sg14
(lp14700
sg2
S'mouseevent'
p14701
sbasg2
g14690
sbs(g252
g1010
S'3'
tp14702
g13935
sS'set_autoscale_on'
p14703
(icodemend.demo.code_suggest
Element
p14704
(dp14705
g10
I17
sg11
S'set whether autoscaling is applied on plot commands'
p14706
sg12
Vset_autoscale_on
p14707
sg14
(lp14708
sg2
g14703
sbsS'ginput'
p14709
(icodemend.demo.code_suggest
Element
p14710
(dp14711
g10
I11
sg11
S'blocking call to interact with the figure .'
p14712
sg12
Vginput
p14713
sg14
(lp14714
(icodemend.demo.code_suggest
Element
p14715
(dp14716
g10
I1
sg11
S'if n is zero or negative , accumulate clicks until a middle click ( or potentially both mouse buttons at once ) terminates the input .|||this will wait for n clicks from the user and return a list of the coordinates of each click .'
p14717
sg12
Vginput.n
p14718
sg14
(lp14719
(icodemend.demo.code_suggest
Element
p14720
(dp14721
g10
I1
sg11
S''
sg12
Vginput.n.4
p14722
sg14
(lp14723
sg2
S'4'
sbasg2
S'n'
sba(icodemend.demo.code_suggest
Element
p14724
(dp14725
g10
I0
sg11
S'the buttons used for the various actions ( adding points , removing points , terminating the inputs ) can be overriden via the arguments mouse_add , mouse_pop and mouse_stop , that give the associated mouse button : 1 for left , 2 for middle , 3 for right .'
p14726
sg12
Vginput.mouse_add
p14727
sg14
(lp14728
sg2
S'mouse_add'
p14729
sba(icodemend.demo.code_suggest
Element
p14730
(dp14731
g10
I0
sg11
S'the buttons used for the various actions ( adding points , removing points , terminating the inputs ) can be overriden via the arguments mouse_add , mouse_pop and mouse_stop , that give the associated mouse button : 1 for left , 2 for middle , 3 for right .'
p14732
sg12
Vginput.mouse_pop
p14733
sg14
(lp14734
sg2
S'mouse_pop'
p14735
sba(icodemend.demo.code_suggest
Element
p14736
(dp14737
g10
I0
sg11
S'the buttons used for the various actions ( adding points , removing points , terminating the inputs ) can be overriden via the arguments mouse_add , mouse_pop and mouse_stop , that give the associated mouse button : 1 for left , 2 for middle , 3 for right .'
p14738
sg12
Vginput.mouse_stop
p14739
sg14
(lp14740
sg2
S'mouse_stop'
p14741
sba(icodemend.demo.code_suggest
Element
p14742
(dp14743
g10
I0
sg11
S'if timeout is zero or negative , does not timeout .'
p14744
sg12
Vginput.timeout
p14745
sg14
(lp14746
sg2
S'timeout'
p14747
sbasg2
g14709
sbs(g117
g909
S'1'
tp14748
(icodemend.demo.code_suggest
Element
p14749
(dp14750
g10
I17
sg11
S''
sg12
Vplot.zorder.1
p14751
sg14
(lp14752
sg2
S'1'
sbs(g332
S'visible'
p14753
g1944
tp14754
(icodemend.demo.code_suggest
Element
p14755
(dp14756
g10
I1
sg11
S''
sg12
Vtext.visible.False
p14757
sg14
(lp14758
sg2
g1944
sbs(S'csd'
p14759
S'xlabel'
p14760
tp14761
(icodemend.demo.code_suggest
Element
p14762
(dp14763
g10
I0
sg11
S'set the label for the xaxis .'
p14764
sg12
Vcsd.xlabel
p14765
sg14
(lp14766
sg2
g14760
sbs(S'plot_day_summary2_ochl'
p14767
S'colordown'
p14768
tp14769
(icodemend.demo.code_suggest
Element
p14770
(dp14771
g10
I0
sg11
S'the color of the lines where close < open'
p14772
sg12
Vplot_day_summary2_ochl.colordown
p14773
sg14
(lp14774
sg2
g14768
sbs(g109
g3075
S'my_dpi'
p14775
tp14776
(icodemend.demo.code_suggest
Element
p14777
(dp14778
g10
I2
sg11
S''
sg12
Vsavefig.dpi.my_dpi
p14779
sg14
(lp14780
sg2
g14775
sbs(S'psd'
p14781
S'codes'
p14782
tp14783
(icodemend.demo.code_suggest
Element
p14784
(dp14785
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p14786
sg12
Vpsd.codes
p14787
sg14
(lp14788
sg2
g14782
sbs(g5975
g4274
S"'o'"
p14789
tp14790
(icodemend.demo.code_suggest
Element
p14791
(dp14792
g10
I1
sg11
S''
sg12
Vplot_date.marker.'o'
p14793
sg14
(lp14794
sg2
g14789
sbs(S'broken_barh'
p14795
S'ylabel'
p14796
tp14797
(icodemend.demo.code_suggest
Element
p14798
(dp14799
g10
I0
sg11
S'set the label for the yaxis'
p14800
sg12
Vbroken_barh.ylabel
p14801
sg14
(lp14802
sg2
g14796
sbs(S'barbs'
p14803
S'size_inches'
p14804
tp14805
(icodemend.demo.code_suggest
Element
p14806
(dp14807
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p14808
sg12
Vbarbs.size_inches
p14809
sg14
(lp14810
sg2
g14804
sbs(g245
g140
S'(6, 5)'
p14811
tp14812
(icodemend.demo.code_suggest
Element
p14813
(dp14814
g10
I2
sg11
S''
sg12
Vfigure.figsize.(6, 5)
p14815
sg14
(lp14816
sg2
g14811
sbs(S'boxplot_stats'
p14817
S'labels'
p14818
tp14819
(icodemend.demo.code_suggest
Element
p14820
(dp14821
g10
I0
sg11
S'labels for each dataset . length must be compatible with dimensions of x'
p14822
sg12
Vboxplot_stats.labels
p14823
sg14
(lp14824
sg2
g14818
sbs(g1003
S'notch'
p14825
g438
tp14826
(icodemend.demo.code_suggest
Element
p14827
(dp14828
g10
I4
sg11
S''
sg12
Vboxplot.notch.True
p14829
sg14
(lp14830
sg2
g438
sbs(g944
g102
S'0.5'
p14831
tp14832
(icodemend.demo.code_suggest
Element
p14833
(dp14834
g10
I4
sg11
S''
sg12
Vbarh.alpha.0/5
p14835
sg14
(lp14836
sg2
g14831
sbsS'clabel'
p14837
(icodemend.demo.code_suggest
Element
p14838
(dp14839
g10
I38
sg11
S'label a contour plot .'
p14840
sg12
Vclabel
p14841
sg14
(lp14842
g3038
a(icodemend.demo.code_suggest
Element
p14843
(dp14844
g10
I30
sg11
S'controls whether the underlying contour is removed or not . default is true .'
p14845
sg12
Vclabel.inline
p14846
sg14
(lp14847
(icodemend.demo.code_suggest
Element
p14848
(dp14849
g10
I25
sg11
S''
sg12
Vclabel.inline.1
p14850
sg14
(lp14851
sg2
S'1'
sbag6149
asg2
S'inline'
p14852
sba(icodemend.demo.code_suggest
Element
p14853
(dp14854
g10
I6
sg11
S"a format string for the label . default is ' %1.3f ' alternatively , this can be a dictionary matching contour levels with arbitrary strings to use for each contour level ( i.e. , fmt[level]=string ) , or it can be any callable , such as a formatter instance , that returns a string when called with a numeric contour level ."
p14855
sg12
Vclabel.fmt
p14856
sg14
(lp14857
g6546
a(icodemend.demo.code_suggest
Element
p14858
(dp14859
g10
I1
sg11
S''
sg12
Vclabel.fmt.'$\u005c\u005calpha=0$'
p14860
sg14
(lp14861
sg2
S"'$\\\\alpha=0$'"
p14862
sba(icodemend.demo.code_suggest
Element
p14863
(dp14864
g10
I1
sg11
S''
sg12
Vclabel.fmt.'%2/1d'
p14865
sg14
(lp14866
sg2
S"'%2.1d'"
p14867
sba(icodemend.demo.code_suggest
Element
p14868
(dp14869
g10
I1
sg11
S''
sg12
Vclabel.fmt.'%2/1f'
p14870
sg14
(lp14871
sg2
S"'%2.1f'"
p14872
sbasg2
S'fmt'
p14873
sba(icodemend.demo.code_suggest
Element
p14874
(dp14875
g10
I3
sg11
S"if none , the color of each label matches the color of the corresponding contour if one string color , e.g. , colors = ' r ' or colors = ' red ' , all labels will be plotted in this color if a tuple of matplotlib color args ( string , float , rgb , etc ) , different labels will be plotted in different colors in the order specified"
p14876
sg12
Vclabel.colors
p14877
sg14
(lp14878
(icodemend.demo.code_suggest
Element
p14879
(dp14880
g10
I3
sg11
S''
sg12
Vclabel.colors.'k'
p14881
sg14
(lp14882
sg2
S"'k'"
p14883
sbasg2
S'colors'
p14884
sba(icodemend.demo.code_suggest
Element
p14885
(dp14886
g10
I1
sg11
S'space in pixels to leave on each side of label when placing inline . defaults to 5 . this spacing will be exact for labels at locations where the contour is straight , less so for labels on curved contours .'
p14887
sg12
Vclabel.inline_spacing
p14888
sg14
(lp14889
(icodemend.demo.code_suggest
Element
p14890
(dp14891
g10
I1
sg11
S''
sg12
Vclabel.inline_spacing.3
p14892
sg14
(lp14893
sg2
S'3'
sbasg2
S'inline_spacing'
p14894
sbag399
a(icodemend.demo.code_suggest
Element
p14895
(dp14896
g10
I1
sg11
S'if true ( default is false ) , clabeltext class ( instead of matplotlib.text ) is used to create labels . clabeltext recalculates rotation angles of texts during the drawing time , therefore this can be used if aspect of the axes changes .'
p14897
sg12
Vclabel.use_clabeltext
p14898
sg14
(lp14899
(icodemend.demo.code_suggest
Element
p14900
(dp14901
g10
I1
sg11
S''
sg12
Vclabel.use_clabeltext.1
p14902
sg14
(lp14903
sg2
S'1'
sbasg2
S'use_clabeltext'
p14904
sba(icodemend.demo.code_suggest
Element
p14905
(dp14906
g10
I0
sg11
S'adds labels to line contours in cs , where cs is a contourset object returned by contour .'
p14907
sg12
Vclabel.cs
p14908
sg14
(lp14909
sg2
S'cs'
p14910
sba(icodemend.demo.code_suggest
Element
p14911
(dp14912
g10
I0
sg11
S'if true ( default ) , label rotations will always be plus or minus 90 degrees from level .'
p14913
sg12
Vclabel.rightside_up
p14914
sg14
(lp14915
sg2
S'rightside_up'
p14916
sba(icodemend.demo.code_suggest
Element
p14917
(dp14918
g10
I0
sg11
S'only labels contours listed in v .'
p14919
sg12
Vclabel.v
p14920
sg14
(lp14921
sg2
S'v'
sbasg2
g14837
sbs(S'get'
p14922
S'ymargin'
p14923
tp14924
(icodemend.demo.code_suggest
Element
p14925
(dp14926
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p14927
sg12
Vget.ymargin
p14928
sg14
(lp14929
sg2
g14923
sbs(g452
g2841
S"'ko'"
p14930
tp14931
(icodemend.demo.code_suggest
Element
p14932
(dp14933
g10
I2
sg11
S''
sg12
Verrorbar.fmt.'ko'
p14934
sg14
(lp14935
sg2
g14930
sbs(S'candlestick2_ohlc'
p14936
S'opens'
p14937
tp14938
(icodemend.demo.code_suggest
Element
p14939
(dp14940
g10
I0
sg11
S'sequence of opening values'
p14941
sg12
Vcandlestick2_ohlc.opens
p14942
sg14
(lp14943
sg2
g14937
sbsS'set_snap'
p14944
(icodemend.demo.code_suggest
Element
p14945
(dp14946
g10
I1
sg11
S'sets the snap setting which may be'
p14947
sg12
Vset_snap
p14948
sg14
(lp14949
sg2
g14944
sbs(g117
g132
S"'#ee8d18'"
p14950
tp14951
(icodemend.demo.code_suggest
Element
p14952
(dp14953
g10
I2
sg11
S''
sg12
Vplot.color.'#ee8d18'
p14954
sg14
(lp14955
sg2
g14950
sbs(g1170
g1257
S'binedges'
p14956
tp14957
(icodemend.demo.code_suggest
Element
p14958
(dp14959
g10
I1
sg11
S''
sg12
Vhist.bins.binedges
p14960
sg14
(lp14961
sg2
g14956
sbs(S'errorbar'
p14962
S'clip_path'
p14963
tp14964
(icodemend.demo.code_suggest
Element
p14965
(dp14966
g10
I0
sg11
S"set the artist 's clip path , which may be"
p14967
sg12
Verrorbar.clip_path
p14968
sg14
(lp14969
sg2
g14963
sbs(S'draw_path_collection'
p14970
S'offsets'
p14971
tp14972
(icodemend.demo.code_suggest
Element
p14973
(dp14974
g10
I0
sg11
S'draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . the offsets in offsets are first transformed by offsettrans before being applied . offset_position may be either " screen " or " data " depending on the space that the offsets are in .'
p14975
sg12
Vdraw_path_collection.offsets
p14976
sg14
(lp14977
sg2
g14971
sbs(S'xcorr'
p14978
S'detrend'
p14979
tp14980
(icodemend.demo.code_suggest
Element
p14981
(dp14982
g10
I0
sg11
S'x is detrended by the detrend callable . default is no normalization .'
p14983
sg12
Vxcorr.detrend
p14984
sg14
(lp14985
sg2
g14979
sbs(g421
g132
g1224
tp14986
g1220
s(S'add_callback'
p14987
S'label'
p14988
tp14989
(icodemend.demo.code_suggest
Element
p14990
(dp14991
g10
I0
sg11
S'set the label to s for auto legend .'
p14992
sg12
Vadd_callback.label
p14993
sg14
(lp14994
sg2
g14988
sbsS'unichr_safe'
p14995
(icodemend.demo.code_suggest
Element
p14996
(dp14997
g10
I0
sg11
S'return the unicode character corresponding to the index , or the replacement character if this is a narrow build of python and the requested character is outside the bmp .'
p14998
sg12
Vunichr_safe
p14999
sg14
(lp15000
sg2
g14995
sbs(S'add_axes'
p15001
S'ylabel'
p15002
tp15003
(icodemend.demo.code_suggest
Element
p15004
(dp15005
g10
I0
sg11
S'set the label for the yaxis'
p15006
sg12
Vadd_axes.ylabel
p15007
sg14
(lp15008
sg2
g15002
sbsS'raise_if_exceeds'
p15009
(icodemend.demo.code_suggest
Element
p15010
(dp15011
g10
I2
sg11
S'raise a runtimeerror if locator attempts to create more than maxticks locs'
p15012
sg12
Vraise_if_exceeds
p15013
sg14
(lp15014
sg2
g15009
sbs(S'text'
p15015
S'rotation_mode'
p15016
tp15017
(icodemend.demo.code_suggest
Element
p15018
(dp15019
g10
I0
sg11
S'set text rotation mode .'
p15020
sg12
Vtext.rotation_mode
p15021
sg14
(lp15022
sg2
g15016
sbs(S'CubicTriInterpolator'
p15023
S'trifinder'
p15024
tp15025
(icodemend.demo.code_suggest
Element
p15026
(dp15027
g10
I0
sg11
S"if not specified , the triangulation 's default trifinder will be used by calling matplotlib.tri.triangulation.get_trifinder ( ) ."
p15028
sg12
VCubicTriInterpolator.trifinder
p15029
sg14
(lp15030
sg2
g15024
sbsS'draw_gouraud_triangles'
p15031
(icodemend.demo.code_suggest
Element
p15032
(dp15033
g10
I0
sg11
S'draws a series of gouraud triangles .'
p15034
sg12
Vdraw_gouraud_triangles
p15035
sg14
(lp15036
(icodemend.demo.code_suggest
Element
p15037
(dp15038
g10
I0
sg11
S'colors is a nx3x4 array of rgba colors for each point of the triangles .'
p15039
sg12
Vdraw_gouraud_triangles.colors
p15040
sg14
(lp15041
sg2
S'colors'
p15042
sba(icodemend.demo.code_suggest
Element
p15043
(dp15044
g10
I0
sg11
S'points is a nx3x2 array of ( x , y ) points for the trianglex .'
p15045
sg12
Vdraw_gouraud_triangles.points
p15046
sg14
(lp15047
sg2
S'points'
p15048
sba(icodemend.demo.code_suggest
Element
p15049
(dp15050
g10
I0
sg11
S'transform is an affine transform to apply to the points .'
p15051
sg12
Vdraw_gouraud_triangles.transform
p15052
sg14
(lp15053
sg2
S'transform'
p15054
sbasg2
g15031
sbsS'autumn'
p15055
(icodemend.demo.code_suggest
Element
p15056
(dp15057
g10
I0
sg11
S'set the default colormap to autumn and apply to current image if any .'
p15058
sg12
Vautumn
p15059
sg14
(lp15060
sg2
g15055
sbs(S'HPacker'
p15061
S'sep'
p15062
S'5'
tp15063
(icodemend.demo.code_suggest
Element
p15064
(dp15065
g10
I2
sg11
S''
sg12
VHPacker.sep.5
p15066
sg14
(lp15067
sg2
S'5'
sbs(g117
g5775
S"'.75'"
p15068
tp15069
(icodemend.demo.code_suggest
Element
p15070
(dp15071
g10
I1
sg11
S''
sg12
Vplot.markerfacecolor.'/75'
p15072
sg14
(lp15073
sg2
g15068
sbsS'axis'
p15074
(icodemend.demo.code_suggest
Element
p15075
(dp15076
g10
I354
sg11
S'convenience method to get or set axis properties . set axis properties .'
p15077
sg12
Vaxis
p15078
sg14
(lp15079
(icodemend.demo.code_suggest
Element
p15080
(dp15081
g10
I2
sg11
S'if len(*v)==0 , you can pass in xmin , xmax , ymin , ymax as kwargs selectively to alter just those limits without changing the others .|||changes the limit ranges ( xmax - xmin ) and ( ymax - ymin ) of the x and y axes to be the same , and have the same scaling , resulting in a square plot .|||changes x and y axis limits such that all data is shown . if all data is already shown , it will move it to the center of the figure without modifying ( xmax - xmin ) or ( ymax - ymin ) . note this is slightly different than in matlab . :'
p15082
sg12
Vaxis.xmax
p15083
sg14
(lp15084
(icodemend.demo.code_suggest
Element
p15085
(dp15086
g10
I1
sg11
S''
sg12
Vaxis.xmax.13/5
p15087
sg14
(lp15088
sg2
S'13.5'
p15089
sbasg2
S'xmax'
p15090
sbag13620
a(icodemend.demo.code_suggest
Element
p15091
(dp15092
g10
I1
sg11
S'if len(*v)==0 , you can pass in xmin , xmax , ymin , ymax as kwargs selectively to alter just those limits without changing the others .|||changes the limit ranges ( xmax - xmin ) and ( ymax - ymin ) of the x and y axes to be the same , and have the same scaling , resulting in a square plot .|||changes x and y axis limits such that all data is shown . if all data is already shown , it will move it to the center of the figure without modifying ( xmax - xmin ) or ( ymax - ymin ) . note this is slightly different than in matlab . :'
p15093
sg12
Vaxis.ymin
p15094
sg14
(lp15095
(icodemend.demo.code_suggest
Element
p15096
(dp15097
g10
I1
sg11
S''
sg12
Vaxis.ymin.0
p15098
sg14
(lp15099
sg2
S'0'
sbasg2
S'ymin'
p15100
sba(icodemend.demo.code_suggest
Element
p15101
(dp15102
g10
I0
sg11
S'passed to set_{x,y}lim functions , if observers are notified of axis limit change'
p15103
sg12
Vaxis.emit
p15104
sg14
(lp15105
sg2
S'emit'
p15106
sba(icodemend.demo.code_suggest
Element
p15107
(dp15108
g10
I0
sg11
S'optional positional argument'
p15109
sg12
Vaxis.v
p15110
sg14
(lp15111
sg2
S'v'
sba(icodemend.demo.code_suggest
Element
p15112
(dp15113
g10
I0
sg11
S'changes limits of x or y axis so that equal increments of x and y have the same length ; a circle is circular . :|||changes the limit ranges ( xmax - xmin ) and ( ymax - ymin ) of the x and y axes to be the same , and have the same scaling , resulting in a square plot .|||changes x and y axis limits such that all data is shown . if all data is already shown , it will move it to the center of the figure without modifying ( xmax - xmin ) or ( ymax - ymin ) . note this is slightly different than in matlab . :'
p15114
sg12
Vaxis.x
p15115
sg14
(lp15116
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p15117
(dp15118
g10
I0
sg11
S'the axis limits to be set'
p15119
sg12
Vaxis.xmin, ymin, xmax, ymax
p15120
sg14
(lp15121
sg2
S'xmin, ymin, xmax, ymax'
p15122
sba(icodemend.demo.code_suggest
Element
p15123
(dp15124
g10
I0
sg11
S'changes limits of x or y axis so that equal increments of x and y have the same length ; a circle is circular . :|||changes the limit ranges ( xmax - xmin ) and ( ymax - ymin ) of the x and y axes to be the same , and have the same scaling , resulting in a square plot .|||changes x and y axis limits such that all data is shown . if all data is already shown , it will move it to the center of the figure without modifying ( xmax - xmin ) or ( ymax - ymin ) . note this is slightly different than in matlab . :'
p15125
sg12
Vaxis.y
p15126
sg14
(lp15127
sg2
S'y'
sba(icodemend.demo.code_suggest
Element
p15128
(dp15129
g10
I0
sg11
S'if len(*v)==0 , you can pass in xmin , xmax , ymin , ymax as kwargs selectively to alter just those limits without changing the others .|||changes the limit ranges ( xmax - xmin ) and ( ymax - ymin ) of the x and y axes to be the same , and have the same scaling , resulting in a square plot .|||changes x and y axis limits such that all data is shown . if all data is already shown , it will move it to the center of the figure without modifying ( xmax - xmin ) or ( ymax - ymin ) . note this is slightly different than in matlab . :'
p15130
sg12
Vaxis.ymax
p15131
sg14
(lp15132
sg2
S'ymax'
p15133
sbasg2
g15074
sbs(S'set_xscale'
p15134
S'nonposx'
p15135
tp15136
(icodemend.demo.code_suggest
Element
p15137
(dp15138
g10
I3
sg11
S'non-positive values in x or y can be masked as invalid , or clipped to a very small positive number'
p15139
sg12
Vset_xscale.nonposx
p15140
sg14
(lp15141
(icodemend.demo.code_suggest
Element
p15142
(dp15143
g10
I3
sg11
S''
sg12
Vset_xscale.nonposx.'clip'
p15144
sg14
(lp15145
sg2
S"'clip'"
p15146
sbasg2
g15135
sbs(S'quiver'
p15147
S'U'
tp15148
(icodemend.demo.code_suggest
Element
p15149
(dp15150
g10
I0
sg11
S'all arguments may be 1-d or 2-d arrays or sequences . if x and y are absent , they will be generated as a uniform grid . if u and v are 2-d arrays but x and y are 1-d , and if len(x ) and len(y ) match the column and row dimensions of u , then x and y will be expanded with numpy.meshgrid ( ) .|||u , v , c may be masked arrays , but masked x , y are not supported at present .'
p15151
sg12
Vquiver.U
p15152
sg14
(lp15153
sg2
S'U'
sbs(S'withSimplePatchShadow'
p15154
S'alpha'
p15155
tp15156
(icodemend.demo.code_suggest
Element
p15157
(dp15158
g10
I0
sg11
S'the alpha transparency of the created shadow patch . default is 0.3 . http://matplotlib.1069221.n5.nabble.com/path-effects-question-td27630.html'
p15159
sg12
VwithSimplePatchShadow.alpha
p15160
sg14
(lp15161
sg2
g15155
sbs(S'stem'
p15162
S'x'
tp15163
(icodemend.demo.code_suggest
Element
p15164
(dp15165
g10
I0
sg11
S'a stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . a horizontal line at 0 is is plotted using basefmt .|||if no x values are provided , the default is ( 0 , 1 , ... , len(y ) - 1 )'
p15166
sg12
Vstem.x
p15167
sg14
(lp15168
sg2
S'x'
sbs(S'VPacker'
p15169
S'height'
p15170
tp15171
(icodemend.demo.code_suggest
Element
p15172
(dp15173
g10
I0
sg11
S'width and height of the container box , calculated if none .'
p15174
sg12
VVPacker.height
p15175
sg14
(lp15176
sg2
g15170
sbs(S'annotate'
p15177
S'hatch'
p15178
tp15179
(icodemend.demo.code_suggest
Element
p15180
(dp15181
g10
I0
sg11
S'set the hatching pattern'
p15182
sg12
Vannotate.hatch
p15183
sg14
(lp15184
sg2
g15178
sbs(g944
g1149
S"'k'"
p15185
tp15186
(icodemend.demo.code_suggest
Element
p15187
(dp15188
g10
I1
sg11
S''
sg12
Vbarh.ecolor.'k'
p15189
sg14
(lp15190
sg2
g15185
sbs(S'semilogy'
p15191
S'subsy'
p15192
tp15193
(icodemend.demo.code_suggest
Element
p15194
(dp15195
g10
I0
sg11
S'the location of the minor yticks ; none defaults to autosubs , which depend on the number of decades in the plot ; see set_yscale ( ) for details .'
p15196
sg12
Vsemilogy.subsy
p15197
sg14
(lp15198
sg2
g15192
sbs(S'pcolor'
p15199
S'ncolumns'
p15200
tp15201
(icodemend.demo.code_suggest
Element
p15202
(dp15203
g10
I0
sg11
S'the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .'
p15204
sg12
Vpcolor.ncolumns
p15205
sg14
(lp15206
sg2
g15200
sbsS'remove_toolitem'
p15207
(icodemend.demo.code_suggest
Element
p15208
(dp15209
g10
I0
sg11
S'remove a toolitem from the toolcontainer'
p15210
sg12
Vremove_toolitem
p15211
sg14
(lp15212
(icodemend.demo.code_suggest
Element
p15213
(dp15214
g10
I0
sg11
S'name of the tool to remove'
p15215
sg12
Vremove_toolitem.name
p15216
sg14
(lp15217
sg2
S'name'
p15218
sbasg2
g15207
sbs(S'draw_artist'
p15219
S'a'
tp15220
(icodemend.demo.code_suggest
Element
p15221
(dp15222
g10
I0
sg11
S'draw matplotlib.artist.artist instance a only - - this is available only after the figure is drawn'
p15223
sg12
Vdraw_artist.a
p15224
sg14
(lp15225
sg2
S'a'
sbs(S'figtext'
p15226
g11573
tp15227
g11568
sS'set_antialiased'
p15228
(icodemend.demo.code_suggest
Element
p15229
(dp15230
g10
I0
sg11
S'set the antialiasing state for rendering .'
p15231
sg12
Vset_antialiased
p15232
sg14
(lp15233
sg2
g15228
sbs(S'psd'
p15234
S'_interpolation_steps'
p15235
tp15236
(icodemend.demo.code_suggest
Element
p15237
(dp15238
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p15239
sg12
Vpsd._interpolation_steps
p15240
sg14
(lp15241
sg2
g15235
sbsS'axis_date'
p15242
(icodemend.demo.code_suggest
Element
p15243
(dp15244
g10
I0
sg11
S'sets up x-axis ticks and labels that treat the x data as dates .'
p15245
sg12
Vaxis_date
p15246
sg14
(lp15247
(icodemend.demo.code_suggest
Element
p15248
(dp15249
g10
I0
sg11
S'sets up x-axis ticks and labels that treat the x data as dates . tz is a tzinfo instance or a timezone string . this timezone is used to create date labels .'
p15250
sg12
Vaxis_date.tz
p15251
sg14
(lp15252
sg2
S'tz'
p15253
sbasg2
g15242
sbs(g16
g110
S"'b'"
p15254
tp15255
(icodemend.demo.code_suggest
Element
p15256
(dp15257
g10
I1
sg11
S''
sg12
Vbar.edgecolor.'b'
p15258
sg14
(lp15259
sg2
g15254
sbsS'get_child'
p15260
(icodemend.demo.code_suggest
Element
p15261
(dp15262
g10
I0
sg11
S'return the child'
p15263
sg12
Vget_child
p15264
sg14
(lp15265
sg2
g15260
sbs(S'subplots'
p15266
g2040
tp15267
g1970
s(S'barh'
p15268
S'size_inches'
p15269
tp15270
(icodemend.demo.code_suggest
Element
p15271
(dp15272
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p15273
sg12
Vbarh.size_inches
p15274
sg14
(lp15275
sg2
g15269
sbs(S'matshow'
p15276
S'shape'
p15277
tp15278
(icodemend.demo.code_suggest
Element
p15279
(dp15280
g10
I0
sg11
S'for raw buffer images'
p15281
sg12
Vmatshow.shape
p15282
sg14
(lp15283
sg2
g15277
sbs(g101
S's'
g7681
tp15284
g7677
sS'get_arrowstyle'
p15285
(icodemend.demo.code_suggest
Element
p15286
(dp15287
g10
I0
sg11
S'return the arrowstyle object'
p15288
sg12
Vget_arrowstyle
p15289
sg14
(lp15290
sg2
g15285
sbs(S'annotate'
p15291
S'cursor_props'
p15292
tp15293
(icodemend.demo.code_suggest
Element
p15294
(dp15295
g10
I0
sg11
S'set the cursor property as'
p15296
sg12
Vannotate.cursor_props
p15297
sg14
(lp15298
sg2
g15292
sbs(g117
S'y'
S"'b'"
p15299
tp15300
(icodemend.demo.code_suggest
Element
p15301
(dp15302
g10
I1
sg11
S''
sg12
Vplot.y.'b'
p15303
sg14
(lp15304
sg2
g15299
sbs(g5640
S'extend'
p15305
g12036
tp15306
g12032
s(g2250
S'scale'
p15307
S'1'
tp15308
(icodemend.demo.code_suggest
Element
p15309
(dp15310
g10
I9
sg11
S''
sg12
Vquiver.scale.1
p15311
sg14
(lp15312
sg2
S'1'
sbs(g944
g132
S"'b'"
p15313
tp15314
(icodemend.demo.code_suggest
Element
p15315
(dp15316
g10
I4
sg11
S''
sg12
Vbarh.color.'b'
p15317
sg14
(lp15318
sg2
g15313
sbs(S'in_axes'
p15319
S'mouseevent'
p15320
tp15321
(icodemend.demo.code_suggest
Element
p15322
(dp15323
g10
I0
sg11
S'return true if the given mouseevent ( in display coords ) is in the axes'
p15324
sg12
Vin_axes.mouseevent
p15325
sg14
(lp15326
sg2
g15320
sbs(S'add_subplot'
p15327
S'contains'
p15328
tp15329
(icodemend.demo.code_suggest
Element
p15330
(dp15331
g10
I0
sg11
S'replace the contains test used by this artist .'
p15332
sg12
Vadd_subplot.contains
p15333
sg14
(lp15334
sg2
g15328
sbs(S'set_xlim'
p15335
g4629
tp15336
g4624
s(S'get'
p15337
S'anchor'
p15338
tp15339
(icodemend.demo.code_suggest
Element
p15340
(dp15341
g10
I0
sg11
S'anchor'
p15342
sg12
Vget.anchor
p15343
sg14
(lp15344
sg2
g15338
sbs(S'date2num'
p15345
S'one'
p15346
tp15347
(icodemend.demo.code_suggest
Element
p15348
(dp15349
g10
I0
sg11
S'return value is a floating point number ( or sequence of floats ) which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 utc , plus one . the addition of one here is a historical artifact . also , note that the gregorian calendar is assumed ; this is not universal practice . for details , see the module docstring .'
p15350
sg12
Vdate2num.one
p15351
sg14
(lp15352
sg2
g15346
sbs(g245
g140
S'(3, 1)'
p15353
tp15354
(icodemend.demo.code_suggest
Element
p15355
(dp15356
g10
I1
sg11
S''
sg12
Vfigure.figsize.(3, 1)
p15357
sg14
(lp15358
sg2
g15353
sbs(g139
S'sharex'
p15359
g1949
tp15360
g1945
s(S'barh'
p15361
S'fill'
p15362
tp15363
(icodemend.demo.code_suggest
Element
p15364
(dp15365
g10
I0
sg11
S'set whether to fill the patch'
p15366
sg12
Vbarh.fill
p15367
sg14
(lp15368
sg2
g15362
sbs(S'subplots'
p15369
g1969
tp15370
g1951
s(g6217
g132
g2434
tp15371
g2430
s(S'unmasked_index_ranges'
p15372
g7365
tp15373
g7360
s(S'set_size_inches'
p15374
S'forward=True'
p15375
tp15376
(icodemend.demo.code_suggest
Element
p15377
(dp15378
g10
I0
sg11
S'optional kwarg forward=true will cause the canvas size to be automatically updated ; e.g. , you can resize the figure window from the shell'
p15379
sg12
Vset_size_inches.forward=True
p15380
sg14
(lp15381
sg2
g15375
sbs(S'arrow'
p15382
g2593
tp15383
g2588
s(S'grid'
p15384
S'readonly'
p15385
tp15386
(icodemend.demo.code_suggest
Element
p15387
(dp15388
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p15389
sg12
Vgrid.readonly
p15390
sg14
(lp15391
sg2
g15385
sbs(g117
g4163
S'3'
tp15392
g11049
s(S'phase_spectrum'
p15393
S'color'
p15394
tp15395
(icodemend.demo.code_suggest
Element
p15396
(dp15397
g10
I0
sg11
S'set the color of the line'
p15398
sg12
Vphase_spectrum.color
p15399
sg14
(lp15400
sg2
g15394
sbs(S'use'
p15401
S'warn'
p15402
tp15403
(icodemend.demo.code_suggest
Element
p15404
(dp15405
g10
I0
sg11
S'the argument is case-insensitive . warn specifies whether a warning should be issued if a backend has already been set up . force is an experimental flag that tells matplotlib to attempt to initialize a new backend by reloading the backend module .'
p15406
sg12
Vuse.warn
p15407
sg14
(lp15408
sg2
g15402
sbs(g117
g118
S"'AND'"
p15409
tp15410
(icodemend.demo.code_suggest
Element
p15411
(dp15412
g10
I1
sg11
S''
sg12
Vplot.label.'AND'
p15413
sg14
(lp15414
sg2
g15409
sbs(S'plot_date'
p15415
S'agg_filter'
p15416
tp15417
(icodemend.demo.code_suggest
Element
p15418
(dp15419
g10
I0
sg11
S'set agg_filter fuction .'
p15420
sg12
Vplot_date.agg_filter
p15421
sg14
(lp15422
sg2
g15416
sbs(S'pcolor'
p15423
S'readonly'
p15424
tp15425
(icodemend.demo.code_suggest
Element
p15426
(dp15427
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p15428
sg12
Vpcolor.readonly
p15429
sg14
(lp15430
sg2
g15424
sbs(g139
g15359
g1944
tp15431
g1940
s(S'phase_spectrum'
p15432
S'solid_capstyle'
p15433
tp15434
(icodemend.demo.code_suggest
Element
p15435
(dp15436
g10
I0
sg11
S'set the cap style for solid linestyles'
p15437
sg12
Vphase_spectrum.solid_capstyle
p15438
sg14
(lp15439
sg2
g15433
sbs(S'semilogx'
p15440
S'ylim'
p15441
tp15442
(icodemend.demo.code_suggest
Element
p15443
(dp15444
g10
I0
sg11
S'set the data limits for the yaxis'
p15445
sg12
Vsemilogx.ylim
p15446
sg14
(lp15447
sg2
g15441
sbs(g125
S'x'
S'2.20589566'
p15448
tp15449
(icodemend.demo.code_suggest
Element
p15450
(dp15451
g10
I1
sg11
S''
sg12
Vaxvline.x.2/20589566
p15452
sg14
(lp15453
sg2
g15448
sbs(S'phase_spectrum'
p15454
S'url'
p15455
tp15456
(icodemend.demo.code_suggest
Element
p15457
(dp15458
g10
I0
sg11
S'sets the url for the artist'
p15459
sg12
Vphase_spectrum.url
p15460
sg14
(lp15461
sg2
g15455
sbs(g117
g4163
g11025
tp15462
g11021
s(S'psd'
p15463
S'position'
p15464
tp15465
(icodemend.demo.code_suggest
Element
p15466
(dp15467
g10
I0
sg11
S'set the axes position with'
p15468
sg12
Vpsd.position
p15469
sg14
(lp15470
sg2
g15464
sbs(g93
g161
S'(0.0, 0.0)'
p15471
tp15472
(icodemend.demo.code_suggest
Element
p15473
(dp15474
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/0, 0/0)
p15475
sg14
(lp15476
sg2
g15471
sbs(S'broken_barh'
p15477
S'linestyle'
p15478
tp15479
(icodemend.demo.code_suggest
Element
p15480
(dp15481
g10
I0
sg11
S'set the patch linestyle|||set the linestyle(s ) for the collection .'
p15482
sg12
Vbroken_barh.linestyle
p15483
sg14
(lp15484
sg2
g15478
sbsS'set_yscale'
p15485
(icodemend.demo.code_suggest
Element
p15486
(dp15487
g10
I57
sg11
S'set the scaling of the y-axis'
p15488
sg12
Vset_yscale
p15489
sg14
(lp15490
(icodemend.demo.code_suggest
Element
p15491
(dp15492
g10
I6
sg11
S'the base of the logarithm'
p15493
sg12
Vset_yscale.basey
p15494
sg14
(lp15495
(icodemend.demo.code_suggest
Element
p15496
(dp15497
g10
I6
sg11
S''
sg12
Vset_yscale.basey.2
p15498
sg14
(lp15499
sg2
S'2'
sbasg2
S'basey'
p15500
sbag2331
a(icodemend.demo.code_suggest
Element
p15501
(dp15502
g10
I3
sg11
S'the range ( - x , x ) within which the plot is linear ( to avoid having the plot go to infinity around zero ) .'
p15503
sg12
Vset_yscale.linthreshy
p15504
sg14
(lp15505
(icodemend.demo.code_suggest
Element
p15506
(dp15507
g10
I1
sg11
S''
sg12
Vset_yscale.linthreshy.0/004
p15508
sg14
(lp15509
sg2
S'0.004'
p15510
sba(icodemend.demo.code_suggest
Element
p15511
(dp15512
g10
I1
sg11
S''
sg12
Vset_yscale.linthreshy.0/01
p15513
sg14
(lp15514
sg2
S'0.01'
p15515
sba(icodemend.demo.code_suggest
Element
p15516
(dp15517
g10
I1
sg11
S''
sg12
Vset_yscale.linthreshy.1e-05
p15518
sg14
(lp15519
sg2
S'1e-05'
p15520
sbasg2
S'linthreshy'
p15521
sba(icodemend.demo.code_suggest
Element
p15522
(dp15523
g10
I0
sg11
S'the base of the logarithm'
p15524
sg12
Vset_yscale.basex
p15525
sg14
(lp15526
sg2
S'basex'
p15527
sba(icodemend.demo.code_suggest
Element
p15528
(dp15529
g10
I0
sg11
S'this allows the linear range ( - linthresh to linthresh ) to be stretched relative to the logarithmic range . its value is the number of decades to use for each half of the linear range . for example , when linscale = = 1.0 ( the default ) , the space used for the positive and negative halves of the linear range will be equal to one decade in the logarithmic range .'
p15530
sg12
Vset_yscale.linscalex
p15531
sg14
(lp15532
sg2
S'linscalex'
p15533
sbag5020
a(icodemend.demo.code_suggest
Element
p15534
(dp15535
g10
I0
sg11
S'the range ( - x , x ) within which the plot is linear ( to avoid having the plot go to infinity around zero ) .'
p15536
sg12
Vset_yscale.linthreshx
p15537
sg14
(lp15538
sg2
S'linthreshx'
p15539
sba(icodemend.demo.code_suggest
Element
p15540
(dp15541
g10
I0
sg11
S'values beyond ] 0 , 1 [ can be masked as invalid , or clipped to a number very close to 0 or 1'
p15542
sg12
Vset_yscale.nonpos
p15543
sg14
(lp15544
sg2
S'nonpos'
p15545
sba(icodemend.demo.code_suggest
Element
p15546
(dp15547
g10
I0
sg11
S'non-positive values in x or y can be masked as invalid , or clipped to a very small positive number'
p15548
sg12
Vset_yscale.nonposx
p15549
sg14
(lp15550
sg2
S'nonposx'
p15551
sba(icodemend.demo.code_suggest
Element
p15552
(dp15553
g10
I0
sg11
S'where to place the subticks between each major tick . should be a sequence of integers . for example , in a log10 scale :[ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] will place 8 logarithmically spaced minor ticks between each major tick .'
p15554
sg12
Vset_yscale.subsx
p15555
sg14
(lp15556
sg2
S'subsx'
p15557
sba(icodemend.demo.code_suggest
Element
p15558
(dp15559
g10
I0
sg11
S'where to place the subticks between each major tick . should be a sequence of integers . for example , in a log10 scale :[ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] will place 8 logarithmically spaced minor ticks between each major tick .'
p15560
sg12
Vset_yscale.subsy
p15561
sg14
(lp15562
sg2
S'subsy'
p15563
sbasg2
g15485
sbs(S'axvline'
p15564
S'vertices'
p15565
tp15566
(icodemend.demo.code_suggest
Element
p15567
(dp15568
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p15569
sg12
Vaxvline.vertices
p15570
sg14
(lp15571
sg2
g15565
sbs(g1170
g118
S"'TWO'"
p15572
tp15573
(icodemend.demo.code_suggest
Element
p15574
(dp15575
g10
I1
sg11
S''
sg12
Vhist.label.'TWO'
p15576
sg14
(lp15577
sg2
g15572
sbs(g117
g132
S"'Blue'"
p15578
tp15579
(icodemend.demo.code_suggest
Element
p15580
(dp15581
g10
I1
sg11
S''
sg12
Vplot.color.'Blue'
p15582
sg14
(lp15583
sg2
g15578
sbs(S'cohere'
p15584
S'ydata'
p15585
tp15586
(icodemend.demo.code_suggest
Element
p15587
(dp15588
g10
I0
sg11
S'set the data np.array for y'
p15589
sg12
Vcohere.ydata
p15590
sg14
(lp15591
sg2
g15585
sbs(g324
g785
g9791
tp15592
g9787
s(g2250
g325
S"'Reds'"
p15593
tp15594
(icodemend.demo.code_suggest
Element
p15595
(dp15596
g10
I1
sg11
S''
sg12
Vquiver.cmap.'Reds'
p15597
sg14
(lp15598
sg2
g15593
sbs(g93
g4800
S'((-5.0), (-5.0))'
p15599
tp15600
(icodemend.demo.code_suggest
Element
p15601
(dp15602
g10
I1
sg11
S''
sg12
Vannotate.xytext.((-5/0), (-5/0))
p15603
sg14
(lp15604
sg2
g15599
sbs(S'loglog'
p15605
S'ylabel'
p15606
tp15607
(icodemend.demo.code_suggest
Element
p15608
(dp15609
g10
I0
sg11
S'set the label for the yaxis'
p15610
sg12
Vloglog.ylabel
p15611
sg14
(lp15612
sg2
g15606
sbs(S'loglog'
p15613
S'prop_cycle'
p15614
tp15615
(icodemend.demo.code_suggest
Element
p15616
(dp15617
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p15618
sg12
Vloglog.prop_cycle
p15619
sg14
(lp15620
sg2
g15614
sbs(g117
g118
S"'Entry'"
p15621
tp15622
(icodemend.demo.code_suggest
Element
p15623
(dp15624
g10
I1
sg11
S''
sg12
Vplot.label.'Entry'
p15625
sg14
(lp15626
sg2
g15621
sbs(S'errorbar'
p15627
S'barsabove'
p15628
tp15629
(icodemend.demo.code_suggest
Element
p15630
(dp15631
g10
I1
sg11
S'if true , will plot the errorbars above the plot symbols . default is below .'
p15632
sg12
Verrorbar.barsabove
p15633
sg14
(lp15634
(icodemend.demo.code_suggest
Element
p15635
(dp15636
g10
I1
sg11
S''
sg12
Verrorbar.barsabove.False
p15637
sg14
(lp15638
sg2
g1944
sbasg2
g15628
sbsS'get_rgb'
p15639
(icodemend.demo.code_suggest
Element
p15640
(dp15641
g10
I0
sg11
S'returns a tuple of three or four floats from 0-1 .'
p15642
sg12
Vget_rgb
p15643
sg14
(lp15644
sg2
g15639
sbs(g2250
g15307
S'10'
p15645
tp15646
(icodemend.demo.code_suggest
Element
p15647
(dp15648
g10
I1
sg11
S''
sg12
Vquiver.scale.10
p15649
sg14
(lp15650
sg2
g15645
sbs(S'quiver'
p15651
S'zorder'
p15652
tp15653
(icodemend.demo.code_suggest
Element
p15654
(dp15655
g10
I3
sg11
S'set the zorder for the artist .'
p15656
sg12
Vquiver.zorder
p15657
sg14
(lp15658
(icodemend.demo.code_suggest
Element
p15659
(dp15660
g10
I2
sg11
S''
sg12
Vquiver.zorder.1
p15661
sg14
(lp15662
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p15663
(dp15664
g10
I1
sg11
S''
sg12
Vquiver.zorder.2
p15665
sg14
(lp15666
sg2
S'2'
sbasg2
g15652
sbs(S'scatter'
p15667
S'linewidth'
p15668
tp15669
(icodemend.demo.code_suggest
Element
p15670
(dp15671
g10
I7
sg11
S'set the linewidth(s ) for the collection .'
p15672
sg12
Vscatter.linewidth
p15673
sg14
(lp15674
(icodemend.demo.code_suggest
Element
p15675
(dp15676
g10
I2
sg11
S''
sg12
Vscatter.linewidth.1
p15677
sg14
(lp15678
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p15679
(dp15680
g10
I2
sg11
S''
sg12
Vscatter.linewidth.4
p15681
sg14
(lp15682
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p15683
(dp15684
g10
I1
sg11
S''
sg12
Vscatter.linewidth.'0'
p15685
sg14
(lp15686
sg2
S"'0'"
p15687
sba(icodemend.demo.code_suggest
Element
p15688
(dp15689
g10
I1
sg11
S''
sg12
Vscatter.linewidth.'3'
p15690
sg14
(lp15691
sg2
S"'3'"
p15692
sba(icodemend.demo.code_suggest
Element
p15693
(dp15694
g10
I1
sg11
S''
sg12
Vscatter.linewidth.3
p15695
sg14
(lp15696
sg2
S'3'
sbasg2
g15668
sbs(S'broken_barh'
p15697
S'array'
p15698
tp15699
(icodemend.demo.code_suggest
Element
p15700
(dp15701
g10
I0
sg11
S'set the image array from numpy array a'
p15702
sg12
Vbroken_barh.array
p15703
sg14
(lp15704
sg2
g15698
sbs(S'getp'
p15705
S'obj'
p15706
tp15707
(icodemend.demo.code_suggest
Element
p15708
(dp15709
g10
I0
sg11
S"obj is a artist instance , e.g. , line2d or an instance of a axes or matplotlib.text.text . if the property is ' somename ' , this function returns"
p15710
sg12
Vgetp.obj
p15711
sg14
(lp15712
sg2
g15706
sbs(S'magnitude_spectrum'
p15713
S'dash_joinstyle'
p15714
tp15715
(icodemend.demo.code_suggest
Element
p15716
(dp15717
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p15718
sg12
Vmagnitude_spectrum.dash_joinstyle
p15719
sg14
(lp15720
sg2
g15714
sbs(g252
g253
g14121
tp15721
g14117
s(g1170
g1257
S'nbins'
p15722
tp15723
(icodemend.demo.code_suggest
Element
p15724
(dp15725
g10
I2
sg11
S''
sg12
Vhist.bins.nbins
p15726
sg14
(lp15727
sg2
g15722
sbs(g324
g785
g9332
tp15728
g9328
s(g5848
g5849
S'm_init'
p15729
tp15730
(icodemend.demo.code_suggest
Element
p15731
(dp15732
g10
I2
sg11
S''
sg12
VSlider.valinit.m_init
p15733
sg14
(lp15734
sg2
g15729
sbs(g101
g118
S"'first'"
p15735
tp15736
(icodemend.demo.code_suggest
Element
p15737
(dp15738
g10
I1
sg11
S''
sg12
Vscatter.label.'first'
p15739
sg14
(lp15740
sg2
g15735
sbs(S'plot_day_summary2_ochl'
p15741
S'ax'
p15742
tp15743
(icodemend.demo.code_suggest
Element
p15744
(dp15745
g10
I0
sg11
S'an axes instance to plot to'
p15746
sg12
Vplot_day_summary2_ochl.ax
p15747
sg14
(lp15748
sg2
g15742
sbsS'plotting'
p15749
(icodemend.demo.code_suggest
Element
p15750
(dp15751
g10
I0
sg11
S'function'
p15752
sg12
Vplotting
p15753
sg14
(lp15754
(icodemend.demo.code_suggest
Element
p15755
(dp15756
g10
I0
sg11
S'anchor'
p15757
sg12
Vplotting.anchor
p15758
sg14
(lp15759
sg2
S'anchor'
p15760
sbag8347
a(icodemend.demo.code_suggest
Element
p15761
(dp15762
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p15763
sg12
Vplotting.color_cycle
p15764
sg14
(lp15765
sg2
S'color_cycle'
p15766
sbag8108
ag755
a(icodemend.demo.code_suggest
Element
p15767
(dp15768
g10
I0
sg11
S'set the label to s for auto legend .'
p15769
sg12
Vplotting.label
p15770
sg14
(lp15771
sg2
S'label'
p15772
sbag12867
a(icodemend.demo.code_suggest
Element
p15773
(dp15774
g10
I0
sg11
S'set the axes position with'
p15775
sg12
Vplotting.position
p15776
sg14
(lp15777
sg2
S'position'
p15778
sba(icodemend.demo.code_suggest
Element
p15779
(dp15780
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p15781
sg12
Vplotting.prop_cycle
p15782
sg14
(lp15783
sg2
S'prop_cycle'
p15784
sba(icodemend.demo.code_suggest
Element
p15785
(dp15786
g10
I0
sg11
S'sets the sketch parameters .'
p15787
sg12
Vplotting.sketch_params
p15788
sg14
(lp15789
sg2
S'sketch_params'
p15790
sba(icodemend.demo.code_suggest
Element
p15791
(dp15792
g10
I0
sg11
S'set a title for the axes .'
p15793
sg12
Vplotting.title
p15794
sg14
(lp15795
sg2
S'title'
p15796
sba(icodemend.demo.code_suggest
Element
p15797
(dp15798
g10
I0
sg11
S'set the label for the xaxis .'
p15799
sg12
Vplotting.xlabel
p15800
sg14
(lp15801
sg2
S'xlabel'
p15802
sba(icodemend.demo.code_suggest
Element
p15803
(dp15804
g10
I0
sg11
S'set the data limits for the xaxis'
p15805
sg12
Vplotting.xlim
p15806
sg14
(lp15807
sg2
S'xlim'
p15808
sba(icodemend.demo.code_suggest
Element
p15809
(dp15810
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p15811
sg12
Vplotting.xmargin
p15812
sg14
(lp15813
sg2
S'xmargin'
p15814
sba(icodemend.demo.code_suggest
Element
p15815
(dp15816
g10
I0
sg11
S'set the scaling of the x-axis'
p15817
sg12
Vplotting.xscale
p15818
sg14
(lp15819
sg2
S'xscale'
p15820
sba(icodemend.demo.code_suggest
Element
p15821
(dp15822
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p15823
sg12
Vplotting.xticklabels
p15824
sg14
(lp15825
sg2
S'xticklabels'
p15826
sba(icodemend.demo.code_suggest
Element
p15827
(dp15828
g10
I0
sg11
S'set the x ticks with list of ticks'
p15829
sg12
Vplotting.xticks
p15830
sg14
(lp15831
sg2
S'xticks'
p15832
sba(icodemend.demo.code_suggest
Element
p15833
(dp15834
g10
I0
sg11
S'set the label for the yaxis'
p15835
sg12
Vplotting.ylabel
p15836
sg14
(lp15837
sg2
S'ylabel'
p15838
sba(icodemend.demo.code_suggest
Element
p15839
(dp15840
g10
I0
sg11
S'set the data limits for the yaxis'
p15841
sg12
Vplotting.ylim
p15842
sg14
(lp15843
sg2
S'ylim'
p15844
sba(icodemend.demo.code_suggest
Element
p15845
(dp15846
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p15847
sg12
Vplotting.ymargin
p15848
sg14
(lp15849
sg2
S'ymargin'
p15850
sba(icodemend.demo.code_suggest
Element
p15851
(dp15852
g10
I0
sg11
S'set the scaling of the y-axis'
p15853
sg12
Vplotting.yscale
p15854
sg14
(lp15855
sg2
S'yscale'
p15856
sba(icodemend.demo.code_suggest
Element
p15857
(dp15858
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p15859
sg12
Vplotting.yticklabels
p15860
sg14
(lp15861
sg2
S'yticklabels'
p15862
sba(icodemend.demo.code_suggest
Element
p15863
(dp15864
g10
I0
sg11
S'set the y ticks with list of ticks'
p15865
sg12
Vplotting.yticks
p15866
sg14
(lp15867
sg2
S'yticks'
p15868
sbasg2
g15749
sbs(S'fill'
p15869
S'sketch_params'
p15870
tp15871
(icodemend.demo.code_suggest
Element
p15872
(dp15873
g10
I0
sg11
S'sets the sketch parameters .'
p15874
sg12
Vfill.sketch_params
p15875
sg14
(lp15876
sg2
g15870
sbs(S'polar'
p15877
S'theta'
p15878
tp15879
(icodemend.demo.code_suggest
Element
p15880
(dp15881
g10
I0
sg11
S'multiple theta , r arguments are supported , with format strings , as in plot ( ) .'
p15882
sg12
Vpolar.theta
p15883
sg14
(lp15884
sg2
g15878
sbs(g582
S'y'
g3395
tp15885
g3391
s(S'getp'
p15886
S'cursor_props'
p15887
tp15888
(icodemend.demo.code_suggest
Element
p15889
(dp15890
g10
I0
sg11
S'set the cursor property as'
p15891
sg12
Vgetp.cursor_props
p15892
sg14
(lp15893
sg2
g15887
sbsS'acorr'
p15894
(icodemend.demo.code_suggest
Element
p15895
(dp15896
g10
I7
sg11
S'plot the autocorrelation of x.'
p15897
sg12
Vacorr
p15898
sg14
(lp15899
(icodemend.demo.code_suggest
Element
p15900
(dp15901
g10
I3
sg11
S'number of lags to show . if none , will return all 2 * len(x ) - 1 lags .'
p15902
sg12
Vacorr.maxlags
p15903
sg14
(lp15904
(icodemend.demo.code_suggest
Element
p15905
(dp15906
g10
I1
sg11
S''
sg12
Vacorr.maxlags.50
p15907
sg14
(lp15908
sg2
S'50'
p15909
sbasg2
S'maxlags'
p15910
sba(icodemend.demo.code_suggest
Element
p15911
(dp15912
g10
I3
sg11
S'if true , axes.vlines is used to plot the vertical lines from the origin to the acorr . otherwise , axes.plot is used .'
p15913
sg12
Vacorr.usevlines
p15914
sg14
(lp15915
(icodemend.demo.code_suggest
Element
p15916
(dp15917
g10
I2
sg11
S''
sg12
Vacorr.usevlines.False
p15918
sg14
(lp15919
sg2
g1944
sbag5115
asg2
S'usevlines'
p15920
sba(icodemend.demo.code_suggest
Element
p15921
(dp15922
g10
I2
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||only used if usevlines is false ."
p15923
sg12
Vacorr.linestyle
p15924
sg14
(lp15925
(icodemend.demo.code_suggest
Element
p15926
(dp15927
g10
I1
sg11
S''
sg12
Vacorr.linestyle.'-'
p15928
sg14
(lp15929
sg2
S"'-'"
p15930
sba(icodemend.demo.code_suggest
Element
p15931
(dp15932
g10
I1
sg11
S''
sg12
Vacorr.linestyle.'solid'
p15933
sg14
(lp15934
sg2
S"'solid'"
p15935
sbasg2
S'linestyle'
p15936
sbag6351
a(icodemend.demo.code_suggest
Element
p15937
(dp15938
g10
I1
sg11
S'if true , normalize the data by the autocorrelation at the 0-th lag .'
p15939
sg12
Vacorr.normed
p15940
sg14
(lp15941
(icodemend.demo.code_suggest
Element
p15942
(dp15943
g10
I1
sg11
S''
sg12
Vacorr.normed.True
p15944
sg14
(lp15945
sg2
g438
sbasg2
S'normed'
p15946
sba(icodemend.demo.code_suggest
Element
p15947
(dp15948
g10
I0
sg11
S'x is detrended by the detrend callable . default is no normalization .'
p15949
sg12
Vacorr.detrend
p15950
sg14
(lp15951
sg2
S'detrend'
p15952
sba(icodemend.demo.code_suggest
Element
p15953
(dp15954
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p15955
sg12
Vacorr.markevery
p15956
sg14
(lp15957
sg2
S'markevery'
p15958
sbasg2
g15894
sbs(g4998
g4459
S'0.3'
p15959
tp15960
(icodemend.demo.code_suggest
Element
p15961
(dp15962
g10
I1
sg11
S''
sg12
Vpcolormesh.vmin.0/3
p15963
sg14
(lp15964
sg2
g15959
sbs(g4998
g110
S"'face'"
p15965
tp15966
(icodemend.demo.code_suggest
Element
p15967
(dp15968
g10
I1
sg11
S''
sg12
Vpcolormesh.edgecolor.'face'
p15969
sg14
(lp15970
sg2
g15965
sbs(g324
g785
g9507
tp15971
g9503
sS'set_linestyle'
p15972
(icodemend.demo.code_suggest
Element
p15973
(dp15974
g10
I14
sg11
S'set the linestyle(s ) for the collection .'
p15975
sg12
Vset_linestyle
p15976
sg14
(lp15977
(icodemend.demo.code_suggest
Element
p15978
(dp15979
g10
I0
sg11
S'the line style .'
p15980
sg12
Vset_linestyle.ls
p15981
sg14
(lp15982
sg2
S'ls'
p15983
sbasg2
g15972
sbsS'drag_zoom'
p15984
(icodemend.demo.code_suggest
Element
p15985
(dp15986
g10
I0
sg11
S'the drag callback in zoom mode'
p15987
sg12
Vdrag_zoom
p15988
sg14
(lp15989
sg2
g15984
sbs(g117
g132
S"'grey'"
p15990
tp15991
(icodemend.demo.code_suggest
Element
p15992
(dp15993
g10
I3
sg11
S''
sg12
Vplot.color.'grey'
p15994
sg14
(lp15995
sg2
g15990
sbs(S'xkcd'
p15996
S'randomness'
p15997
S'2'
tp15998
(icodemend.demo.code_suggest
Element
p15999
(dp16000
g10
I1
sg11
S''
sg12
Vxkcd.randomness.2
p16001
sg14
(lp16002
sg2
S'2'
sbs(S'yaxis_date'
p16003
S'tz'
p16004
tp16005
(icodemend.demo.code_suggest
Element
p16006
(dp16007
g10
I0
sg11
S'tz is a timezone string or tzinfo instance . defaults to rc value .'
p16008
sg12
Vyaxis_date.tz
p16009
sg14
(lp16010
sg2
g16004
sbs(S'on_clicked'
p16011
g8096
tp16012
g8091
s(S'volume_overlay'
p16013
S'colorup'
p16014
S"'g'"
p16015
tp16016
(icodemend.demo.code_suggest
Element
p16017
(dp16018
g10
I1
sg11
S''
sg12
Vvolume_overlay.colorup.'g'
p16019
sg14
(lp16020
sg2
g16015
sbs(S'hist'
p16021
S'normed'
p16022
tp16023
(icodemend.demo.code_suggest
Element
p16024
(dp16025
g10
I64
sg11
S'if true , the first element of the return tuple will be the counts normalized to form a probability density , i.e. , n/(len(x)`dbin ) , i.e. , the integral of the histogram will sum to 1 . if stacked is also true , the sum of the histograms is normalized to 1 .'
p16026
sg12
Vhist.normed
p16027
sg14
(lp16028
(icodemend.demo.code_suggest
Element
p16029
(dp16030
g10
I28
sg11
S''
sg12
Vhist.normed.True
p16031
sg14
(lp16032
sg2
g438
sba(icodemend.demo.code_suggest
Element
p16033
(dp16034
g10
I24
sg11
S''
sg12
Vhist.normed.1
p16035
sg14
(lp16036
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p16037
(dp16038
g10
I6
sg11
S''
sg12
Vhist.normed.'yes'
p16039
sg14
(lp16040
sg2
S"'yes'"
p16041
sba(icodemend.demo.code_suggest
Element
p16042
(dp16043
g10
I4
sg11
S''
sg12
Vhist.normed.0
p16044
sg14
(lp16045
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p16046
(dp16047
g10
I2
sg11
S''
sg12
Vhist.normed.False
p16048
sg14
(lp16049
sg2
g1944
sbasg2
g16022
sbs(g5424
g132
S"'blue'"
p16050
tp16051
(icodemend.demo.code_suggest
Element
p16052
(dp16053
g10
I2
sg11
S''
sg12
Vgrid.color.'blue'
p16054
sg14
(lp16055
sg2
g16050
sbs(g16
g489
S'bot'
p16056
tp16057
(icodemend.demo.code_suggest
Element
p16058
(dp16059
g10
I2
sg11
S''
sg12
Vbar.bottom.bot
p16060
sg14
(lp16061
sg2
g16056
sbsS'process_selected'
p16062
(icodemend.demo.code_suggest
Element
p16063
(dp16064
g10
I0
sg11
S'default " do nothing " implementation of the process_selected ( ) method .'
p16065
sg12
Vprocess_selected
p16066
sg14
(lp16067
(icodemend.demo.code_suggest
Element
p16068
(dp16069
g10
I0
sg11
S'ind are the indices of the selected vertices . xs and ys are the coordinates of the selected vertices .'
p16070
sg12
Vprocess_selected.ind
p16071
sg14
(lp16072
sg2
S'ind'
p16073
sba(icodemend.demo.code_suggest
Element
p16074
(dp16075
g10
I0
sg11
S'ind are the indices of the selected vertices . xs and ys are the coordinates of the selected vertices .'
p16076
sg12
Vprocess_selected.xs
p16077
sg14
(lp16078
sg2
S'xs'
p16079
sba(icodemend.demo.code_suggest
Element
p16080
(dp16081
g10
I0
sg11
S'ind are the indices of the selected vertices . xs and ys are the coordinates of the selected vertices .'
p16082
sg12
Vprocess_selected.ys
p16083
sg14
(lp16084
sg2
S'ys'
p16085
sbasg2
g16062
sbsS'yticks'
p16086
(icodemend.demo.code_suggest
Element
p16087
(dp16088
g10
I102
sg11
S'get or set the y - limits of the current tick locations and labels .'
p16089
sg12
Vyticks
p16090
sg14
(lp16091
(icodemend.demo.code_suggest
Element
p16092
(dp16093
g10
I0
sg11
S'set the font properties that control the text .'
p16094
sg12
Vyticks.fontproperties
p16095
sg14
(lp16096
sg2
S'fontproperties'
p16097
sba(icodemend.demo.code_suggest
Element
p16098
(dp16099
g10
I0
sg11
S'set the ( x , y ) position of the text'
p16100
sg12
Vyticks.position
p16101
sg14
(lp16102
sg2
S'position'
p16103
sba(icodemend.demo.code_suggest
Element
p16104
(dp16105
g10
I0
sg11
S'set text rotation mode .'
p16106
sg12
Vyticks.rotation_mode
p16107
sg14
(lp16108
sg2
S'rotation_mode'
p16109
sba(icodemend.demo.code_suggest
Element
p16110
(dp16111
g10
I0
sg11
S'set the text string s'
p16112
sg12
Vyticks.text
p16113
sg14
(lp16114
sg2
S'text'
p16115
sba(icodemend.demo.code_suggest
Element
p16116
(dp16117
g10
I0
sg11
S'set the x position of the text'
p16118
sg12
Vyticks.x
p16119
sg14
(lp16120
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p16121
(dp16122
g10
I0
sg11
S'set the y position of the text|||get or set the y - limits of the current tick locations and labels .'
p16123
sg12
Vyticks.y
p16124
sg14
(lp16125
sg2
S'y'
sbasg2
g16086
sbs(S'transform'
p16126
S'effects'
p16127
tp16128
(icodemend.demo.code_suggest
Element
p16129
(dp16130
g10
I0
sg11
S"transform the font by slanting or extending . effects should be a dict where effects [ ' slant ' ] is the tangent of the angle that the font is to be slanted to the right ( so negative values slant to the left ) and effects['extend ' ] is the multiplier by which the font is to be extended ( so values less than 1.0 condense ) . returns a new type1font object ."
p16131
sg12
Vtransform.effects
p16132
sg14
(lp16133
sg2
g16127
sbs(S'draw_path_collection'
p16134
S'offsetTrans'
p16135
tp16136
(icodemend.demo.code_suggest
Element
p16137
(dp16138
g10
I0
sg11
S'draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . the offsets in offsets are first transformed by offsettrans before being applied . offset_position may be either " screen " or " data " depending on the space that the offsets are in .'
p16139
sg12
Vdraw_path_collection.offsetTrans
p16140
sg14
(lp16141
sg2
g16135
sbs(S'magnitude_spectrum'
p16142
S'ymargin'
p16143
tp16144
(icodemend.demo.code_suggest
Element
p16145
(dp16146
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p16147
sg12
Vmagnitude_spectrum.ymargin
p16148
sg14
(lp16149
sg2
g16143
sbs(S'csd'
p16150
S'zorder'
p16151
tp16152
(icodemend.demo.code_suggest
Element
p16153
(dp16154
g10
I0
sg11
S'set the zorder for the artist .'
p16155
sg12
Vcsd.zorder
p16156
sg14
(lp16157
sg2
g16151
sbs(g5673
S'arrowstyle'
p16158
S"'<-'"
p16159
tp16160
(icodemend.demo.code_suggest
Element
p16161
(dp16162
g10
I1
sg11
S''
sg12
Vstreamplot.arrowstyle.'<-'
p16163
sg14
(lp16164
sg2
g16159
sbs(g8266
g102
S'0.5'
p16165
tp16166
(icodemend.demo.code_suggest
Element
p16167
(dp16168
g10
I10
sg11
S''
sg12
Vaxvspan.alpha.0/5
p16169
sg14
(lp16170
sg2
g16165
sbs(g332
S'withdash'
p16171
g1944
tp16172
(icodemend.demo.code_suggest
Element
p16173
(dp16174
g10
I1
sg11
S''
sg12
Vtext.withdash.False
p16175
sg14
(lp16176
sg2
g1944
sbs(S'errorbar'
p16177
S'xmargin'
p16178
tp16179
(icodemend.demo.code_suggest
Element
p16180
(dp16181
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p16182
sg12
Verrorbar.xmargin
p16183
sg14
(lp16184
sg2
g16178
sbs(g324
g8780
g9875
tp16185
g9871
s(g6632
g13338
S'((-3), 5)'
p16186
tp16187
(icodemend.demo.code_suggest
Element
p16188
(dp16189
g10
I1
sg11
S''
sg12
Vadd_subplot.ylim.((-3), 5)
p16190
sg14
(lp16191
sg2
g16186
sbs(g324
g785
g9367
tp16192
g9363
s(g117
g909
S'100'
p16193
tp16194
(icodemend.demo.code_suggest
Element
p16195
(dp16196
g10
I4
sg11
S''
sg12
Vplot.zorder.100
p16197
sg14
(lp16198
sg2
g16193
sbsS'get_verts'
p16199
(icodemend.demo.code_suggest
Element
p16200
(dp16201
g10
I5
sg11
S'return a copy of the vertices used in this patch'
p16202
sg12
Vget_verts
p16203
sg14
(lp16204
sg2
g16199
sbs(S'eventplot'
p16205
S'closed'
p16206
tp16207
(icodemend.demo.code_suggest
Element
p16208
(dp16209
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p16210
sg12
Veventplot.closed
p16211
sg14
(lp16212
sg2
g16206
sbsS'jet'
p16213
(icodemend.demo.code_suggest
Element
p16214
(dp16215
g10
I22
sg11
S'set the default colormap to jet and apply to current image if any .'
p16216
sg12
Vjet
p16217
sg14
(lp16218
sg2
g16213
sbs(S'quiver'
p16219
S'facecolor'
p16220
tp16221
(icodemend.demo.code_suggest
Element
p16222
(dp16223
g10
I3
sg11
S'set the facecolor(s ) of the collection .'
p16224
sg12
Vquiver.facecolor
p16225
sg14
(lp16226
(icodemend.demo.code_suggest
Element
p16227
(dp16228
g10
I3
sg11
S''
sg12
Vquiver.facecolor.'none'
p16229
sg14
(lp16230
sg2
S"'none'"
p16231
sbasg2
g16220
sbs(S'drag_pan'
p16232
S'key'
p16233
tp16234
(icodemend.demo.code_suggest
Element
p16235
(dp16236
g10
I0
sg11
S'key is a " shift " key'
p16237
sg12
Vdrag_pan.key
p16238
sg14
(lp16239
sg2
g16233
sbs(S'hexbin'
p16240
S'animated'
p16241
tp16242
(icodemend.demo.code_suggest
Element
p16243
(dp16244
g10
I0
sg11
S"set the artist 's animation state ."
p16245
sg12
Vhexbin.animated
p16246
sg14
(lp16247
sg2
g16241
sbs(g10758
g10759
S'4'
tp16248
(icodemend.demo.code_suggest
Element
p16249
(dp16250
g10
I4
sg11
S''
sg12
Vrefine_field.subdiv.4
p16251
sg14
(lp16252
sg2
S'4'
sbs(g117
g2251
S"'-'"
p16253
tp16254
(icodemend.demo.code_suggest
Element
p16255
(dp16256
g10
I30
sg11
S''
sg12
Vplot.linestyle.'-'
p16257
sg14
(lp16258
sg2
g16253
sbs(g117
g118
S"'Rn'"
p16259
tp16260
(icodemend.demo.code_suggest
Element
p16261
(dp16262
g10
I3
sg11
S''
sg12
Vplot.label.'Rn'
p16263
sg14
(lp16264
sg2
g16259
sbs(g8547
g8548
S"('one', 'two', 'three', 'four')"
p16265
tp16266
(icodemend.demo.code_suggest
Element
p16267
(dp16268
g10
I1
sg11
S''
sg12
Vpie.labels.('one', 'two', 'three', 'four')
p16269
sg14
(lp16270
sg2
g16265
sbs(S'draw_path_collection'
p16271
S'edgecolors'
p16272
tp16273
(icodemend.demo.code_suggest
Element
p16274
(dp16275
g10
I0
sg11
S'draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . the offsets in offsets are first transformed by offsettrans before being applied . offset_position may be either " screen " or " data " depending on the space that the offsets are in .'
p16276
sg12
Vdraw_path_collection.edgecolors
p16277
sg14
(lp16278
sg2
g16272
sbs(S'tricontourf'
p16279
g666
g666
tp16280
g662
s(S'barh'
p16281
S'snap'
p16282
tp16283
(icodemend.demo.code_suggest
Element
p16284
(dp16285
g10
I0
sg11
S'sets the snap setting which may be'
p16286
sg12
Vbarh.snap
p16287
sg14
(lp16288
sg2
g16282
sbsS'distances_along_curve'
p16289
(icodemend.demo.code_suggest
Element
p16290
(dp16291
g10
I0
sg11
S'computes the distance between a set of successive points in n dimensions .'
p16292
sg12
Vdistances_along_curve
p16293
sg14
(lp16294
g357
a(icodemend.demo.code_suggest
Element
p16295
(dp16296
g10
I0
sg11
S'computes the distance between a set of successive points in n dimensions .|||where x is an m x n array or matrix . the distances between successive rows is computed . distance is the standard euclidean distance .'
p16297
sg12
Vdistances_along_curve.N
p16298
sg14
(lp16299
sg2
S'N'
sbag4925
asg2
g16289
sbs(S'scatter'
p16300
S'edgecolor'
p16301
tp16302
(icodemend.demo.code_suggest
Element
p16303
(dp16304
g10
I22
sg11
S'set the edgecolor(s ) of the collection .'
p16305
sg12
Vscatter.edgecolor
p16306
sg14
(lp16307
g12533
a(icodemend.demo.code_suggest
Element
p16308
(dp16309
g10
I4
sg11
S''
sg12
Vscatter.edgecolor.'black'
p16310
sg14
(lp16311
sg2
S"'black'"
p16312
sba(icodemend.demo.code_suggest
Element
p16313
(dp16314
g10
I2
sg11
S''
sg12
Vscatter.edgecolor.''
p16315
sg14
(lp16316
sg2
S"''"
p16317
sba(icodemend.demo.code_suggest
Element
p16318
(dp16319
g10
I2
sg11
S''
sg12
Vscatter.edgecolor.'white'
p16320
sg14
(lp16321
sg2
S"'white'"
p16322
sba(icodemend.demo.code_suggest
Element
p16323
(dp16324
g10
I1
sg11
S''
sg12
Vscatter.edgecolor.'/5'
p16325
sg14
(lp16326
sg2
S"'.5'"
p16327
sba(icodemend.demo.code_suggest
Element
p16328
(dp16329
g10
I1
sg11
S''
sg12
Vscatter.edgecolor.'0/0'
p16330
sg14
(lp16331
sg2
S"'0.0'"
p16332
sba(icodemend.demo.code_suggest
Element
p16333
(dp16334
g10
I1
sg11
S''
sg12
Vscatter.edgecolor.'0/8'
p16335
sg14
(lp16336
sg2
S"'0.8'"
p16337
sbag7863
ag10781
a(icodemend.demo.code_suggest
Element
p16338
(dp16339
g10
I1
sg11
S''
sg12
Vscatter.edgecolor.'w'
p16340
sg14
(lp16341
sg2
S"'w'"
p16342
sba(icodemend.demo.code_suggest
Element
p16343
(dp16344
g10
I1
sg11
S''
sg12
Vscatter.edgecolor.c
p16345
sg14
(lp16346
sg2
S'c'
sbasg2
g16301
sbs(S'quiverkey'
p16347
S'fontproperties'
p16348
tp16349
(icodemend.demo.code_suggest
Element
p16350
(dp16351
g10
I1
sg11
S'a dictionary with keyword arguments accepted by the fontproperties initializer : family , style , variant , size , weight'
p16352
sg12
Vquiverkey.fontproperties
p16353
sg14
(lp16354
(icodemend.demo.code_suggest
Element
p16355
(dp16356
g10
I1
sg11
S''
sg12
Vquiverkey.fontproperties.{'weight': 'bold'}
p16357
sg14
(lp16358
sg2
S"{'weight': 'bold'}"
p16359
sbasg2
g16348
sbs(g8547
S'startangle'
p16360
S'90'
p16361
tp16362
(icodemend.demo.code_suggest
Element
p16363
(dp16364
g10
I9
sg11
S''
sg12
Vpie.startangle.90
p16365
sg14
(lp16366
sg2
g16361
sbsS'locator_params'
p16367
(icodemend.demo.code_suggest
Element
p16368
(dp16369
g10
I9
sg11
S'control behavior of tick locators .'
p16370
sg12
Vlocator_params
p16371
sg14
(lp16372
(icodemend.demo.code_suggest
Element
p16373
(dp16374
g10
I0
sg11
S'set parameters within this locator .'
p16375
sg12
Vlocator_params.params
p16376
sg14
(lp16377
sg2
S'params'
p16378
sbasg2
g16367
sbs(g252
S'fancybox'
p16379
g1944
tp16380
g14371
sS'set_minimumdescent'
p16381
(icodemend.demo.code_suggest
Element
p16382
(dp16383
g10
I0
sg11
S'set minimumdescent .'
p16384
sg12
Vset_minimumdescent
p16385
sg14
(lp16386
sg2
g16381
sbs(S'fill'
p16387
S'yticklabels'
p16388
tp16389
(icodemend.demo.code_suggest
Element
p16390
(dp16391
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p16392
sg12
Vfill.yticklabels
p16393
sg14
(lp16394
sg2
g16388
sbs(g93
g161
S'(0.05, 1.0)'
p16395
tp16396
(icodemend.demo.code_suggest
Element
p16397
(dp16398
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/05, 1/0)
p16399
sg14
(lp16400
sg2
g16395
sbs(S'figure'
p16401
S'facecolor :'
p16402
tp16403
(icodemend.demo.code_suggest
Element
p16404
(dp16405
g10
I0
sg11
S'the background color . if not provided , defaults to rc figure.facecolor'
p16406
sg12
Vfigure.facecolor :
p16407
sg14
(lp16408
sg2
g16402
sbs(g1170
g132
S"'white'"
p16409
tp16410
(icodemend.demo.code_suggest
Element
p16411
(dp16412
g10
I2
sg11
S''
sg12
Vhist.color.'white'
p16413
sg14
(lp16414
sg2
g16409
sbs(g117
g4274
S"'o'"
p16415
tp16416
(icodemend.demo.code_suggest
Element
p16417
(dp16418
g10
I102
sg11
S''
sg12
Vplot.marker.'o'
p16419
sg14
(lp16420
sg2
g16415
sbs(g5576
S'skiprows'
p16421
S'0'
tp16422
(icodemend.demo.code_suggest
Element
p16423
(dp16424
g10
I1
sg11
S''
sg12
Vplotfile.skiprows.0
p16425
sg14
(lp16426
sg2
S'0'
sbs(S'set_xticklabels'
p16427
S'size_inches'
p16428
tp16429
(icodemend.demo.code_suggest
Element
p16430
(dp16431
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p16432
sg12
Vset_xticklabels.size_inches
p16433
sg14
(lp16434
sg2
g16428
sbs(S'fill'
p16435
S'linewidth'
p16436
tp16437
(icodemend.demo.code_suggest
Element
p16438
(dp16439
g10
I1
sg11
S'set the patch linewidth in points'
p16440
sg12
Vfill.linewidth
p16441
sg14
(lp16442
(icodemend.demo.code_suggest
Element
p16443
(dp16444
g10
I1
sg11
S''
sg12
Vfill.linewidth.1
p16445
sg14
(lp16446
sg2
S'1'
sbasg2
g16436
sbs(g10679
S'y'
g5349
tp16447
g5345
s(g324
g785
g9736
tp16448
g9732
s(S'contourf'
p16449
S'cmap'
p16450
tp16451
(icodemend.demo.code_suggest
Element
p16452
(dp16453
g10
I72
sg11
S'a cm colormap instance or none . if cmap is none and colors is none , a default colormap is used .'
p16454
sg12
Vcontourf.cmap
p16455
sg14
(lp16456
(icodemend.demo.code_suggest
Element
p16457
(dp16458
g10
I10
sg11
S''
sg12
Vcontourf.cmap.cmap
p16459
sg14
(lp16460
sg2
g325
sba(icodemend.demo.code_suggest
Element
p16461
(dp16462
g10
I4
sg11
S''
sg12
Vcontourf.cmap.'jet'
p16463
sg14
(lp16464
sg2
S"'jet'"
p16465
sba(icodemend.demo.code_suggest
Element
p16466
(dp16467
g10
I2
sg11
S''
sg12
Vcontourf.cmap.'RdBu'
p16468
sg14
(lp16469
sg2
S"'RdBu'"
p16470
sba(icodemend.demo.code_suggest
Element
p16471
(dp16472
g10
I2
sg11
S''
sg12
Vcontourf.cmap.'Reds'
p16473
sg14
(lp16474
sg2
S"'Reds'"
p16475
sbag13632
a(icodemend.demo.code_suggest
Element
p16476
(dp16477
g10
I1
sg11
S''
sg12
Vcontourf.cmap.'Blues'
p16478
sg14
(lp16479
sg2
S"'Blues'"
p16480
sba(icodemend.demo.code_suggest
Element
p16481
(dp16482
g10
I1
sg11
S''
sg12
Vcontourf.cmap.'gist_ncar'
p16483
sg14
(lp16484
sg2
S"'gist_ncar'"
p16485
sba(icodemend.demo.code_suggest
Element
p16486
(dp16487
g10
I1
sg11
S''
sg12
Vcontourf.cmap.the_colormap
p16488
sg14
(lp16489
sg2
S'the_colormap'
p16490
sbasg2
g16450
sbs(S'getp'
p16491
S'sketch_params'
p16492
tp16493
(icodemend.demo.code_suggest
Element
p16494
(dp16495
g10
I0
sg11
S'sets the sketch parameters .'
p16496
sg12
Vgetp.sketch_params
p16497
sg14
(lp16498
sg2
g16492
sbs(g324
g785
g9786
tp16499
g9782
s(S'barbs'
p16500
S'cmap'
p16501
tp16502
(icodemend.demo.code_suggest
Element
p16503
(dp16504
g10
I1
sg11
S'set the colormap for luminance data'
p16505
sg12
Vbarbs.cmap
p16506
sg14
(lp16507
(icodemend.demo.code_suggest
Element
p16508
(dp16509
g10
I1
sg11
S''
sg12
Vbarbs.cmap.cmap
p16510
sg14
(lp16511
sg2
g325
sbasg2
g16501
sbs(S'griddata'
p16512
g9039
S"'linear'"
p16513
tp16514
(icodemend.demo.code_suggest
Element
p16515
(dp16516
g10
I7
sg11
S''
sg12
Vgriddata.interp.'linear'
p16517
sg14
(lp16518
sg2
g16513
sbs(g101
g4274
S"'<'"
p16519
tp16520
(icodemend.demo.code_suggest
Element
p16521
(dp16522
g10
I4
sg11
S''
sg12
Vscatter.marker.'<'
p16523
sg14
(lp16524
sg2
g16519
sbs(S'rms_flat'
p16525
S'a'
tp16526
(icodemend.demo.code_suggest
Element
p16527
(dp16528
g10
I0
sg11
S'return the root mean square of all the elements of a , flattened out .'
p16529
sg12
Vrms_flat.a
p16530
sg14
(lp16531
sg2
S'a'
sbsS'get_autoscaley_on'
p16532
(icodemend.demo.code_suggest
Element
p16533
(dp16534
g10
I0
sg11
S'get whether autoscaling for the y-axis is applied on plot commands'
p16535
sg12
Vget_autoscaley_on
p16536
sg14
(lp16537
sg2
g16532
sbs(S'draw_gouraud_triangle'
p16538
S'points'
p16539
tp16540
(icodemend.demo.code_suggest
Element
p16541
(dp16542
g10
I0
sg11
S'points is a 3x2 array of ( x , y ) points for the triangle .'
p16543
sg12
Vdraw_gouraud_triangle.points
p16544
sg14
(lp16545
sg2
g16539
sbsS'isinteractive'
p16546
(icodemend.demo.code_suggest
Element
p16547
(dp16548
g10
I0
sg11
S'return status of interactive mode .'
p16549
sg12
Visinteractive
p16550
sg14
(lp16551
sg2
g16546
sbs(g1170
S'histtype'
p16552
S"'step'"
p16553
tp16554
(icodemend.demo.code_suggest
Element
p16555
(dp16556
g10
I21
sg11
S''
sg12
Vhist.histtype.'step'
p16557
sg14
(lp16558
sg2
g16553
sbs(g332
g389
S'45'
p16559
tp16560
(icodemend.demo.code_suggest
Element
p16561
(dp16562
g10
I1
sg11
S''
sg12
Vtext.rotation.45
p16563
sg14
(lp16564
sg2
g16559
sbs(S'set_xticklabels'
p16565
S'linespacing'
p16566
tp16567
(icodemend.demo.code_suggest
Element
p16568
(dp16569
g10
I0
sg11
S'set the line spacing as a multiple of the font size .'
p16570
sg12
Vset_xticklabels.linespacing
p16571
sg14
(lp16572
sg2
g16566
sbs(S'plot'
p16573
S'solid_joinstyle'
p16574
tp16575
(icodemend.demo.code_suggest
Element
p16576
(dp16577
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p16578
sg12
Vplot.solid_joinstyle
p16579
sg14
(lp16580
sg2
g16574
sbs(g5673
g132
S"'0.8'"
p16581
tp16582
(icodemend.demo.code_suggest
Element
p16583
(dp16584
g10
I1
sg11
S''
sg12
Vstreamplot.color.'0/8'
p16585
sg14
(lp16586
sg2
g16581
sbs(S'loglog'
p16587
S'fillstyle'
p16588
tp16589
(icodemend.demo.code_suggest
Element
p16590
(dp16591
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p16592
sg12
Vloglog.fillstyle
p16593
sg14
(lp16594
sg2
g16588
sbs(g93
g4800
S'(0, arrow_length)'
p16595
tp16596
(icodemend.demo.code_suggest
Element
p16597
(dp16598
g10
I2
sg11
S''
sg12
Vannotate.xytext.(0, arrow_length)
p16599
sg14
(lp16600
sg2
g16595
sbsS'apply_tickdir'
p16601
(icodemend.demo.code_suggest
Element
p16602
(dp16603
g10
I0
sg11
S'calculate self._pad and self._tickmarkers'
p16604
sg12
Vapply_tickdir
p16605
sg14
(lp16606
sg2
g16601
sbs(g16
g132
S"'#60A0D0'"
p16607
tp16608
(icodemend.demo.code_suggest
Element
p16609
(dp16610
g10
I1
sg11
S''
sg12
Vbar.color.'#60A0D0'
p16611
sg14
(lp16612
sg2
g16607
sbs(S'set_ticklabels'
p16613
g10340
tp16614
g10335
s(S'plot'
p16615
S'vertices'
p16616
tp16617
(icodemend.demo.code_suggest
Element
p16618
(dp16619
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p16620
sg12
Vplot.vertices
p16621
sg14
(lp16622
sg2
g16616
sbs(S'set_aspect'
p16623
S'aspect'
p16624
tp16625
(icodemend.demo.code_suggest
Element
p16626
(dp16627
g10
I0
sg11
S'aspect'
p16628
sg12
Vset_aspect.aspect
p16629
sg14
(lp16630
sg2
g16624
sbs(g117
g118
S"'x:y'"
p16631
tp16632
(icodemend.demo.code_suggest
Element
p16633
(dp16634
g10
I1
sg11
S''
sg12
Vplot.label.'x:y'
p16635
sg14
(lp16636
sg2
g16631
sbs(S'table'
p16637
S'transform'
p16638
tp16639
(icodemend.demo.code_suggest
Element
p16640
(dp16641
g10
I0
sg11
S'set the transform instance used by this artist .'
p16642
sg12
Vtable.transform
p16643
sg14
(lp16644
sg2
g16638
sbs(g117
S'gid'
p16645
S"'dummy'"
p16646
tp16647
(icodemend.demo.code_suggest
Element
p16648
(dp16649
g10
I1
sg11
S''
sg12
Vplot.gid.'dummy'
p16650
sg14
(lp16651
sg2
g16646
sbsS'get_xgridlines'
p16652
(icodemend.demo.code_suggest
Element
p16653
(dp16654
g10
I0
sg11
S'get the x grid lines as a list of line2d instances'
p16655
sg12
Vget_xgridlines
p16656
sg14
(lp16657
sg2
g16652
sbs(S'get'
p16658
S'prop_cycle'
p16659
tp16660
(icodemend.demo.code_suggest
Element
p16661
(dp16662
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p16663
sg12
Vget.prop_cycle
p16664
sg14
(lp16665
sg2
g16659
sbs(g139
g140
g1762
tp16666
g1758
s(S'add_subplot'
p16667
S'aspect'
p16668
tp16669
(icodemend.demo.code_suggest
Element
p16670
(dp16671
g10
I35
sg11
S'aspect'
p16672
sg12
Vadd_subplot.aspect
p16673
sg14
(lp16674
(icodemend.demo.code_suggest
Element
p16675
(dp16676
g10
I28
sg11
S''
sg12
Vadd_subplot.aspect.'equal'
p16677
sg14
(lp16678
sg2
S"'equal'"
p16679
sba(icodemend.demo.code_suggest
Element
p16680
(dp16681
g10
I4
sg11
S''
sg12
Vadd_subplot.aspect.1
p16682
sg14
(lp16683
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p16684
(dp16685
g10
I1
sg11
S''
sg12
Vadd_subplot.aspect.0/3
p16686
sg14
(lp16687
sg2
S'0.3'
p16688
sbasg2
g16668
sbs(g13403
g13413
tp16689
g13408
s(g944
g2392
S'3'
tp16690
(icodemend.demo.code_suggest
Element
p16691
(dp16692
g10
I4
sg11
S''
sg12
Vbarh.linewidth.3
p16693
sg14
(lp16694
sg2
S'3'
sbs(S'iter_segments'
p16695
S'simplify'
p16696
g1944
tp16697
(icodemend.demo.code_suggest
Element
p16698
(dp16699
g10
I2
sg11
S''
sg12
Viter_segments.simplify.False
p16700
sg14
(lp16701
sg2
g1944
sbs(g117
g118
S'label_from_txt_file'
p16702
tp16703
(icodemend.demo.code_suggest
Element
p16704
(dp16705
g10
I1
sg11
S''
sg12
Vplot.label.label_from_txt_file
p16706
sg14
(lp16707
sg2
g16702
sbs(S'semilogx'
p16708
S'alpha'
p16709
tp16710
(icodemend.demo.code_suggest
Element
p16711
(dp16712
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p16713
sg12
Vsemilogx.alpha
p16714
sg14
(lp16715
sg2
g16709
sbs(S'complex_spectrum'
p16716
S'pad_to'
p16717
tp16718
(icodemend.demo.code_suggest
Element
p16719
(dp16720
g10
I0
sg11
S'compute the complex-valued frequency spectrum of x . data is padded to a length of pad_to and the windowing function window is applied to the signal .'
p16721
sg12
Vcomplex_spectrum.pad_to
p16722
sg14
(lp16723
sg2
g16717
sbs(S'cohere'
p16724
S'xticks'
p16725
tp16726
(icodemend.demo.code_suggest
Element
p16727
(dp16728
g10
I0
sg11
S'set the x ticks with list of ticks'
p16729
sg12
Vcohere.xticks
p16730
sg14
(lp16731
sg2
g16725
sbs(g125
S'x'
S'0.33088437'
p16732
tp16733
(icodemend.demo.code_suggest
Element
p16734
(dp16735
g10
I1
sg11
S''
sg12
Vaxvline.x.0/33088437
p16736
sg14
(lp16737
sg2
g16732
sbs(g117
g5775
S'(1, 1, 0, 0.5)'
p16738
tp16739
(icodemend.demo.code_suggest
Element
p16740
(dp16741
g10
I1
sg11
S''
sg12
Vplot.markerfacecolor.(1, 1, 0, 0/5)
p16742
sg14
(lp16743
sg2
g16738
sbs(S'pcolor'
p16744
S'hatch'
p16745
tp16746
(icodemend.demo.code_suggest
Element
p16747
(dp16748
g10
I0
sg11
S'set the hatching pattern'
p16749
sg12
Vpcolor.hatch
p16750
sg14
(lp16751
sg2
g16745
sbs(S'candlestick_ochl'
p16752
S'width'
p16753
tp16754
(icodemend.demo.code_suggest
Element
p16755
(dp16756
g10
I0
sg11
S'fraction of a day for the rectangle width'
p16757
sg12
Vcandlestick_ochl.width
p16758
sg14
(lp16759
sg2
g16753
sbs(S'iter_segments'
p16760
S'remove_nans'
p16761
tp16762
(icodemend.demo.code_suggest
Element
p16763
(dp16764
g10
I0
sg11
S'if true , will remove all nans from the path and insert moveto commands to skip over them .'
p16765
sg12
Viter_segments.remove_nans
p16766
sg14
(lp16767
sg2
g16761
sbs(S'magnitude_spectrum'
p16768
S'cursor_props'
p16769
tp16770
(icodemend.demo.code_suggest
Element
p16771
(dp16772
g10
I0
sg11
S'set the cursor property as'
p16773
sg12
Vmagnitude_spectrum.cursor_props
p16774
sg14
(lp16775
sg2
g16769
sbsS'view_limits'
p16776
(icodemend.demo.code_suggest
Element
p16777
(dp16778
g10
I0
sg11
S'try to choose the view limits intelligently'
p16779
sg12
Vview_limits
p16780
sg14
(lp16781
sg2
g16776
sbs(g5848
S'valmax'
p16782
S'100.0'
p16783
tp16784
(icodemend.demo.code_suggest
Element
p16785
(dp16786
g10
I1
sg11
S''
sg12
VSlider.valmax.100/0
p16787
sg14
(lp16788
sg2
g16783
sbs(g117
g118
S"'deg=3'"
p16789
tp16790
(icodemend.demo.code_suggest
Element
p16791
(dp16792
g10
I1
sg11
S''
sg12
Vplot.label.'deg=3'
p16793
sg14
(lp16794
sg2
g16789
sbs(S'ToolHandles'
p16795
S'marker_props'
p16796
tp16797
(icodemend.demo.code_suggest
Element
p16798
(dp16799
g10
I0
sg11
S'additional marker properties . see matplotlib.lines.line2d .'
p16800
sg12
VToolHandles.marker_props
p16801
sg14
(lp16802
sg2
g16796
sbs(S'gca'
p16803
S'rasterized'
p16804
tp16805
(icodemend.demo.code_suggest
Element
p16806
(dp16807
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p16808
sg12
Vgca.rasterized
p16809
sg14
(lp16810
sg2
g16804
sbs(g332
S'x'
S'0.5'
p16811
tp16812
(icodemend.demo.code_suggest
Element
p16813
(dp16814
g10
I1
sg11
S''
sg12
Vtext.x.0/5
p16815
sg14
(lp16816
sg2
g16811
sbsS'button_release_event'
p16817
(icodemend.demo.code_suggest
Element
p16818
(dp16819
g10
I0
sg11
S'backend derived classes should call this function on any mouse button release .'
p16820
sg12
Vbutton_release_event
p16821
sg14
(lp16822
sg2
g16817
sbs(S'add'
p16823
S'codes'
p16824
tp16825
(icodemend.demo.code_suggest
Element
p16826
(dp16827
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p16828
sg12
Vadd.codes
p16829
sg14
(lp16830
sg2
g16824
sbs(g1170
g1257
S'[0, 1]'
p16831
tp16832
(icodemend.demo.code_suggest
Element
p16833
(dp16834
g10
I1
sg11
S''
sg12
Vhist.bins.[0, 1]
p16835
sg14
(lp16836
sg2
g16831
sbs(g2250
g17
S'0.0001'
p16837
tp16838
(icodemend.demo.code_suggest
Element
p16839
(dp16840
g10
I1
sg11
S''
sg12
Vquiver.width.0/0001
p16841
sg14
(lp16842
sg2
g16837
sbs(g5640
S'shrink'
p16843
g12001
tp16844
g11997
s(S'add_toolitem'
p16845
S'position'
p16846
tp16847
(icodemend.demo.code_suggest
Element
p16848
(dp16849
g10
I0
sg11
S'position of the tool within its group , if - 1 it goes at the end'
p16850
sg12
Vadd_toolitem.position
p16851
sg14
(lp16852
sg2
g16846
sbsS'plotfile'
p16853
(icodemend.demo.code_suggest
Element
p16854
(dp16855
g10
I8
sg11
S'plot the data in in a file .'
p16856
sg12
Vplotfile
p16857
sg14
(lp16858
g13597
a(icodemend.demo.code_suggest
Element
p16859
(dp16860
g10
I4
sg11
S"plotfuncs , if not none , is a dictionary mapping identifier to an axes plotting function as a string . default is ' plot ' , other choices are ' semilogy ' , ' fill ' , ' bar ' , etc. you must use the same type of identifier in the cols vector as you use in the plotfuncs dictionary , e.g. , integer column numbers in both or column names in both . if subplots is false , then including any function such as ' semilogy ' that changes the axis scaling will set the scaling for all columns .|||cols is a sequence of column identifiers to plot . an identifier is either an int or a string . if it is an int , it indicates the column number . if it is a string , it indicates the column header . matplotlib will make column headers lower case , replace spaces with underscores , and remove all illegal characters ; so ' adj close * ' will have name ' adj_close ' ."
p16861
sg12
Vplotfile.cols
p16862
sg14
(lp16863
(icodemend.demo.code_suggest
Element
p16864
(dp16865
g10
I2
sg11
S''
sg12
Vplotfile.cols.(2, 4)
p16866
sg14
(lp16867
sg2
S'(2, 4)'
p16868
sba(icodemend.demo.code_suggest
Element
p16869
(dp16870
g10
I1
sg11
S''
sg12
Vplotfile.cols.(0, 1)
p16871
sg14
(lp16872
sg2
S'(0, 1)'
p16873
sbag5580
asg2
S'cols'
p16874
sba(icodemend.demo.code_suggest
Element
p16875
(dp16876
g10
I3
sg11
S'comments , skiprows , checkrows , delimiter , and names are all passed on to matplotlib.pylab.csv2rec ( ) to load the data into a record array .'
p16877
sg12
Vplotfile.names
p16878
sg14
(lp16879
(icodemend.demo.code_suggest
Element
p16880
(dp16881
g10
I2
sg11
S''
sg12
Vplotfile.names.('col1', 'col2', 'col3', 'col4', 'col5')
p16882
sg14
(lp16883
sg2
S"('col1', 'col2', 'col3', 'col4', 'col5')"
p16884
sba(icodemend.demo.code_suggest
Element
p16885
(dp16886
g10
I1
sg11
S''
sg12
Vplotfile.names.['a', 'b', 'c', 'd', 'e', 'f']
p16887
sg14
(lp16888
sg2
S"['a', 'b', 'c', 'd', 'e', 'f']"
p16889
sbasg2
S'names'
p16890
sba(icodemend.demo.code_suggest
Element
p16891
(dp16892
g10
I1
sg11
S'comments , skiprows , checkrows , delimiter , and names are all passed on to matplotlib.pylab.csv2rec ( ) to load the data into a record array .'
p16893
sg12
Vplotfile.checkrows
p16894
sg14
(lp16895
(icodemend.demo.code_suggest
Element
p16896
(dp16897
g10
I1
sg11
S''
sg12
Vplotfile.checkrows.0
p16898
sg14
(lp16899
sg2
S'0'
sbasg2
S'checkrows'
p16900
sba(icodemend.demo.code_suggest
Element
p16901
(dp16902
g10
I1
sg11
S'comments , skiprows , checkrows , delimiter , and names are all passed on to matplotlib.pylab.csv2rec ( ) to load the data into a record array .'
p16903
sg12
Vplotfile.skiprows
p16904
sg14
(lp16905
g16423
asg2
S'skiprows'
p16906
sba(icodemend.demo.code_suggest
Element
p16907
(dp16908
g10
I0
sg11
S'comments , skiprows , checkrows , delimiter , and names are all passed on to matplotlib.pylab.csv2rec ( ) to load the data into a record array .'
p16909
sg12
Vplotfile.comments
p16910
sg14
(lp16911
sg2
S'comments'
p16912
sbag8029
ag8911
a(icodemend.demo.code_suggest
Element
p16913
(dp16914
g10
I0
sg11
S"plotfuncs , if not none , is a dictionary mapping identifier to an axes plotting function as a string . default is ' plot ' , other choices are ' semilogy ' , ' fill ' , ' bar ' , etc. you must use the same type of identifier in the cols vector as you use in the plotfuncs dictionary , e.g. , integer column numbers in both or column names in both . if subplots is false , then including any function such as ' semilogy ' that changes the axis scaling will set the scaling for all columns ."
p16915
sg12
Vplotfile.subplots
p16916
sg14
(lp16917
sg2
S'subplots'
p16918
sbasg2
g16853
sbsS'set_edgecolors'
p16919
(icodemend.demo.code_suggest
Element
p16920
(dp16921
g10
I4
sg11
S'alias for set_edgecolor'
p16922
sg12
Vset_edgecolors
p16923
sg14
(lp16924
sg2
g16919
sbsS'set_xticklabels'
p16925
(icodemend.demo.code_suggest
Element
p16926
(dp16927
g10
I211
sg11
S'set the xtick labels with list of strings labels .'
p16928
sg12
Vset_xticklabels
p16929
sg14
(lp16930
(icodemend.demo.code_suggest
Element
p16931
(dp16932
g10
I32
sg11
S'set the rotation of the text'
p16933
sg12
Vset_xticklabels.rotation
p16934
sg14
(lp16935
(icodemend.demo.code_suggest
Element
p16936
(dp16937
g10
I12
sg11
S''
sg12
Vset_xticklabels.rotation.45
p16938
sg14
(lp16939
sg2
S'45'
p16940
sba(icodemend.demo.code_suggest
Element
p16941
(dp16942
g10
I6
sg11
S''
sg12
Vset_xticklabels.rotation.90
p16943
sg14
(lp16944
sg2
S'90'
p16945
sba(icodemend.demo.code_suggest
Element
p16946
(dp16947
g10
I3
sg11
S''
sg12
Vset_xticklabels.rotation.0
p16948
sg14
(lp16949
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p16950
(dp16951
g10
I2
sg11
S''
sg12
Vset_xticklabels.rotation.'vertical'
p16952
sg14
(lp16953
sg2
S"'vertical'"
p16954
sba(icodemend.demo.code_suggest
Element
p16955
(dp16956
g10
I2
sg11
S''
sg12
Vset_xticklabels.rotation.270
p16957
sg14
(lp16958
sg2
S'270'
p16959
sba(icodemend.demo.code_suggest
Element
p16960
(dp16961
g10
I1
sg11
S''
sg12
Vset_xticklabels.rotation.-60
p16962
sg14
(lp16963
sg2
S'-60'
p16964
sba(icodemend.demo.code_suggest
Element
p16965
(dp16966
g10
I1
sg11
S''
sg12
Vset_xticklabels.rotation.17
p16967
sg14
(lp16968
sg2
S'17'
p16969
sba(icodemend.demo.code_suggest
Element
p16970
(dp16971
g10
I1
sg11
S''
sg12
Vset_xticklabels.rotation.25
p16972
sg14
(lp16973
sg2
S'25'
p16974
sbag392
a(icodemend.demo.code_suggest
Element
p16975
(dp16976
g10
I1
sg11
S''
sg12
Vset_xticklabels.rotation.40
p16977
sg14
(lp16978
sg2
S'40'
p16979
sba(icodemend.demo.code_suggest
Element
p16980
(dp16981
g10
I1
sg11
S''
sg12
Vset_xticklabels.rotation.70
p16982
sg14
(lp16983
sg2
S'70'
p16984
sba(icodemend.demo.code_suggest
Element
p16985
(dp16986
g10
I1
sg11
S''
sg12
Vset_xticklabels.rotation.80
p16987
sg14
(lp16988
sg2
S'80'
p16989
sbasg2
S'rotation'
p16990
sbag13156
a(icodemend.demo.code_suggest
Element
p16991
(dp16992
g10
I1
sg11
S'set the font properties that control the text .'
p16993
sg12
Vset_xticklabels.fontproperties
p16994
sg14
(lp16995
(icodemend.demo.code_suggest
Element
p16996
(dp16997
g10
I1
sg11
S''
sg12
Vset_xticklabels.fontproperties.font
p16998
sg14
(lp16999
sg2
S'font'
p17000
sbasg2
S'fontproperties'
p17001
sba(icodemend.demo.code_suggest
Element
p17002
(dp17003
g10
I1
sg11
S'set text rotation mode .'
p17004
sg12
Vset_xticklabels.rotation_mode
p17005
sg14
(lp17006
g2352
asg2
S'rotation_mode'
p17007
sba(icodemend.demo.code_suggest
Element
p17008
(dp17009
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p17010
sg12
Vset_xticklabels._interpolation_steps
p17011
sg14
(lp17012
sg2
S'_interpolation_steps'
p17013
sba(icodemend.demo.code_suggest
Element
p17014
(dp17015
g10
I0
sg11
S'set agg_filter fuction .'
p17016
sg12
Vset_xticklabels.agg_filter
p17017
sg14
(lp17018
sg2
S'agg_filter'
p17019
sba(icodemend.demo.code_suggest
Element
p17020
(dp17021
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p17022
sg12
Vset_xticklabels.alpha
p17023
sg14
(lp17024
sg2
S'alpha'
p17025
sba(icodemend.demo.code_suggest
Element
p17026
(dp17027
g10
I0
sg11
S'anchor'
p17028
sg12
Vset_xticklabels.anchor
p17029
sg14
(lp17030
sg2
S'anchor'
p17031
sbag4419
a(icodemend.demo.code_suggest
Element
p17032
(dp17033
g10
I0
sg11
S'aspect'
p17034
sg12
Vset_xticklabels.aspect
p17035
sg14
(lp17036
sg2
S'aspect'
p17037
sba(icodemend.demo.code_suggest
Element
p17038
(dp17039
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p17040
sg12
Vset_xticklabels.axes
p17041
sg14
(lp17042
sg2
S'axes'
p17043
sba(icodemend.demo.code_suggest
Element
p17044
(dp17045
g10
I0
sg11
S'set the background color of the text by updating the bbox .'
p17046
sg12
Vset_xticklabels.backgroundcolor
p17047
sg14
(lp17048
sg2
S'backgroundcolor'
p17049
sba(icodemend.demo.code_suggest
Element
p17050
(dp17051
g10
I0
sg11
S'draw a bounding box around self .'
p17052
sg12
Vset_xticklabels.bbox
p17053
sg14
(lp17054
sg2
S'bbox'
p17055
sba(icodemend.demo.code_suggest
Element
p17056
(dp17057
g10
I0
sg11
S"set the artist 's clip bbox ."
p17058
sg12
Vset_xticklabels.clip_box
p17059
sg14
(lp17060
sg2
S'clip_box'
p17061
sba(icodemend.demo.code_suggest
Element
p17062
(dp17063
g10
I0
sg11
S'set whether artist uses clipping .'
p17064
sg12
Vset_xticklabels.clip_on
p17065
sg14
(lp17066
sg2
S'clip_on'
p17067
sba(icodemend.demo.code_suggest
Element
p17068
(dp17069
g10
I0
sg11
S"set the artist 's clip path , which may be"
p17070
sg12
Vset_xticklabels.clip_path
p17071
sg14
(lp17072
sg2
S'clip_path'
p17073
sbag2281
a(icodemend.demo.code_suggest
Element
p17074
(dp17075
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p17076
sg12
Vset_xticklabels.codes
p17077
sg14
(lp17078
sg2
S'codes'
p17079
sba(icodemend.demo.code_suggest
Element
p17080
(dp17081
g10
I0
sg11
S'set the foreground color of the text'
p17082
sg12
Vset_xticklabels.color
p17083
sg14
(lp17084
sg2
S'color'
p17085
sba(icodemend.demo.code_suggest
Element
p17086
(dp17087
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p17088
sg12
Vset_xticklabels.color_cycle
p17089
sg14
(lp17090
sg2
S'color_cycle'
p17091
sba(icodemend.demo.code_suggest
Element
p17092
(dp17093
g10
I0
sg11
S'replace the contains test used by this artist .'
p17094
sg12
Vset_xticklabels.contains
p17095
sg14
(lp17096
sg2
S'contains'
p17097
sba(icodemend.demo.code_suggest
Element
p17098
(dp17099
g10
I0
sg11
S'set the cursor property as'
p17100
sg12
Vset_xticklabels.cursor_props
p17101
sg14
(lp17102
sg2
S'cursor_props'
p17103
sbag6965
a(icodemend.demo.code_suggest
Element
p17104
(dp17105
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p17106
sg12
Vset_xticklabels.figure
p17107
sg14
(lp17108
sg2
S'figure'
p17109
sba(icodemend.demo.code_suggest
Element
p17110
(dp17111
g10
I0
sg11
S'set the properties by parsing a fontconfig pattern .'
p17112
sg12
Vset_xticklabels.fontconfig_pattern
p17113
sg14
(lp17114
sg2
S'fontconfig_pattern'
p17115
sbag12312
a(icodemend.demo.code_suggest
Element
p17116
(dp17117
g10
I0
sg11
S'set the hatching pattern'
p17118
sg12
Vset_xticklabels.hatch
p17119
sg14
(lp17120
sg2
S'hatch'
p17121
sba(icodemend.demo.code_suggest
Element
p17122
(dp17123
g10
I0
sg11
S'set the label to s for auto legend .'
p17124
sg12
Vset_xticklabels.label
p17125
sg14
(lp17126
sg2
S'label'
p17127
sba(icodemend.demo.code_suggest
Element
p17128
(dp17129
g10
I0
sg11
S'set the xtick labels with list of strings labels . return a list of axis text instances .'
p17130
sg12
Vset_xticklabels.labels
p17131
sg14
(lp17132
sg2
S'labels'
p17133
sbag16568
a(icodemend.demo.code_suggest
Element
p17134
(dp17135
g10
I0
sg11
S'set the patch linestyle'
p17136
sg12
Vset_xticklabels.linestyle
p17137
sg14
(lp17138
sg2
S'linestyle'
p17139
sba(icodemend.demo.code_suggest
Element
p17140
(dp17141
g10
I0
sg11
S'set the alignment for multiple lines layout .'
p17142
sg12
Vset_xticklabels.multialignment
p17143
sg14
(lp17144
sg2
S'multialignment'
p17145
sba(icodemend.demo.code_suggest
Element
p17146
(dp17147
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p17148
sg12
Vset_xticklabels.path_effects
p17149
sg14
(lp17150
sg2
S'path_effects'
p17151
sba(icodemend.demo.code_suggest
Element
p17152
(dp17153
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p17154
sg12
Vset_xticklabels.picker
p17155
sg14
(lp17156
sg2
S'picker'
p17157
sba(icodemend.demo.code_suggest
Element
p17158
(dp17159
g10
I0
sg11
S'set the axes position with|||set the ( x , y ) position of the text'
p17160
sg12
Vset_xticklabels.position
p17161
sg14
(lp17162
sg2
S'position'
p17163
sba(icodemend.demo.code_suggest
Element
p17164
(dp17165
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p17166
sg12
Vset_xticklabels.prop_cycle
p17167
sg14
(lp17168
sg2
S'prop_cycle'
p17169
sba(icodemend.demo.code_suggest
Element
p17170
(dp17171
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p17172
sg12
Vset_xticklabels.rasterized
p17173
sg14
(lp17174
sg2
S'rasterized'
p17175
sba(icodemend.demo.code_suggest
Element
p17176
(dp17177
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p17178
sg12
Vset_xticklabels.readonly
p17179
sg14
(lp17180
sg2
S'readonly'
p17181
sba(icodemend.demo.code_suggest
Element
p17182
(dp17183
g10
I0
sg11
S'set the font size .'
p17184
sg12
Vset_xticklabels.size
p17185
sg14
(lp17186
sg2
S'size'
p17187
sbag16430
a(icodemend.demo.code_suggest
Element
p17188
(dp17189
g10
I0
sg11
S'sets the sketch parameters .'
p17190
sg12
Vset_xticklabels.sketch_params
p17191
sg14
(lp17192
sg2
S'sketch_params'
p17193
sba(icodemend.demo.code_suggest
Element
p17194
(dp17195
g10
I0
sg11
S'sets the snap setting which may be'
p17196
sg12
Vset_xticklabels.snap
p17197
sg14
(lp17198
sg2
S'snap'
p17199
sba(icodemend.demo.code_suggest
Element
p17200
(dp17201
g10
I0
sg11
S'set the font stretch ( horizontal condensation or expansion ) .'
p17202
sg12
Vset_xticklabels.stretch
p17203
sg14
(lp17204
sg2
S'stretch'
p17205
sba(icodemend.demo.code_suggest
Element
p17206
(dp17207
g10
I0
sg11
S'set the font style .'
p17208
sg12
Vset_xticklabels.style
p17209
sg14
(lp17210
sg2
S'style'
p17211
sba(icodemend.demo.code_suggest
Element
p17212
(dp17213
g10
I0
sg11
S'set the text string s'
p17214
sg12
Vset_xticklabels.text
p17215
sg14
(lp17216
sg2
S'text'
p17217
sba(icodemend.demo.code_suggest
Element
p17218
(dp17219
g10
I0
sg11
S'set a title for the axes .'
p17220
sg12
Vset_xticklabels.title
p17221
sg14
(lp17222
sg2
S'title'
p17223
sbag5745
a(icodemend.demo.code_suggest
Element
p17224
(dp17225
g10
I0
sg11
S'sets the url for the artist'
p17226
sg12
Vset_xticklabels.url
p17227
sg14
(lp17228
sg2
S'url'
p17229
sba(icodemend.demo.code_suggest
Element
p17230
(dp17231
g10
I0
sg11
S'set this text object to render using tex ( or not ) .'
p17232
sg12
Vset_xticklabels.usetex
p17233
sg14
(lp17234
sg2
S'usetex'
p17235
sba(icodemend.demo.code_suggest
Element
p17236
(dp17237
g10
I0
sg11
S"set the font variant , either ' normal ' or ' small-caps ' ."
p17238
sg12
Vset_xticklabels.variant
p17239
sg14
(lp17240
sg2
S'variant'
p17241
sba(icodemend.demo.code_suggest
Element
p17242
(dp17243
g10
I0
sg11
S'set the vertical alignment'
p17244
sg12
Vset_xticklabels.verticalalignment
p17245
sg14
(lp17246
sg2
S'verticalalignment'
p17247
sba(icodemend.demo.code_suggest
Element
p17248
(dp17249
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p17250
sg12
Vset_xticklabels.vertices
p17251
sg14
(lp17252
sg2
S'vertices'
p17253
sba(icodemend.demo.code_suggest
Element
p17254
(dp17255
g10
I0
sg11
S"set the artist 's visiblity ."
p17256
sg12
Vset_xticklabels.visible
p17257
sg14
(lp17258
sg2
S'visible'
p17259
sba(icodemend.demo.code_suggest
Element
p17260
(dp17261
g10
I0
sg11
S'set the font weight .'
p17262
sg12
Vset_xticklabels.weight
p17263
sg14
(lp17264
sg2
S'weight'
p17265
sba(icodemend.demo.code_suggest
Element
p17266
(dp17267
g10
I0
sg11
S'sets the wrapping state for the text .'
p17268
sg12
Vset_xticklabels.wrap
p17269
sg14
(lp17270
sg2
S'wrap'
p17271
sba(icodemend.demo.code_suggest
Element
p17272
(dp17273
g10
I0
sg11
S'set the x position of the text'
p17274
sg12
Vset_xticklabels.x
p17275
sg14
(lp17276
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p17277
(dp17278
g10
I0
sg11
S'set the label for the xaxis .'
p17279
sg12
Vset_xticklabels.xlabel
p17280
sg14
(lp17281
sg2
S'xlabel'
p17282
sba(icodemend.demo.code_suggest
Element
p17283
(dp17284
g10
I0
sg11
S'set the data limits for the xaxis'
p17285
sg12
Vset_xticklabels.xlim
p17286
sg14
(lp17287
sg2
S'xlim'
p17288
sba(icodemend.demo.code_suggest
Element
p17289
(dp17290
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p17291
sg12
Vset_xticklabels.xmargin
p17292
sg14
(lp17293
sg2
S'xmargin'
p17294
sbag12552
a(icodemend.demo.code_suggest
Element
p17295
(dp17296
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p17297
sg12
Vset_xticklabels.xticklabels
p17298
sg14
(lp17299
sg2
S'xticklabels'
p17300
sbag5870
ag6811
a(icodemend.demo.code_suggest
Element
p17301
(dp17302
g10
I0
sg11
S'set the label for the yaxis'
p17303
sg12
Vset_xticklabels.ylabel
p17304
sg14
(lp17305
sg2
S'ylabel'
p17306
sba(icodemend.demo.code_suggest
Element
p17307
(dp17308
g10
I0
sg11
S'set the data limits for the yaxis'
p17309
sg12
Vset_xticklabels.ylim
p17310
sg14
(lp17311
sg2
S'ylim'
p17312
sbag1180
a(icodemend.demo.code_suggest
Element
p17313
(dp17314
g10
I0
sg11
S'set the scaling of the y-axis'
p17315
sg12
Vset_xticklabels.yscale
p17316
sg14
(lp17317
sg2
S'yscale'
p17318
sba(icodemend.demo.code_suggest
Element
p17319
(dp17320
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p17321
sg12
Vset_xticklabels.yticklabels
p17322
sg14
(lp17323
sg2
S'yticklabels'
p17324
sba(icodemend.demo.code_suggest
Element
p17325
(dp17326
g10
I0
sg11
S'set the y ticks with list of ticks'
p17327
sg12
Vset_xticklabels.yticks
p17328
sg14
(lp17329
sg2
S'yticks'
p17330
sba(icodemend.demo.code_suggest
Element
p17331
(dp17332
g10
I0
sg11
S'set the zorder for the artist .'
p17333
sg12
Vset_xticklabels.zorder
p17334
sg14
(lp17335
sg2
S'zorder'
p17336
sbasg2
g16925
sbs(g139
g140
g1627
tp17337
g1623
s(S'plotfile'
p17338
g16890
tp17339
g16875
s(g117
g118
S"'sample data'"
p17340
tp17341
(icodemend.demo.code_suggest
Element
p17342
(dp17343
g10
I1
sg11
S''
sg12
Vplot.label.'sample data'
p17344
sg14
(lp17345
sg2
g17340
sbs(S'set_yticklabels'
p17346
S'rotation_mode'
p17347
tp17348
(icodemend.demo.code_suggest
Element
p17349
(dp17350
g10
I0
sg11
S'set text rotation mode .'
p17351
sg12
Vset_yticklabels.rotation_mode
p17352
sg14
(lp17353
sg2
g17347
sbs(g5975
S'y'
S'yaxis'
p17354
tp17355
(icodemend.demo.code_suggest
Element
p17356
(dp17357
g10
I1
sg11
S''
sg12
Vplot_date.y.yaxis
p17358
sg14
(lp17359
sg2
g17354
sbs(S'text'
p17360
S'horizontalalignment'
p17361
tp17362
(icodemend.demo.code_suggest
Element
p17363
(dp17364
g10
I50
sg11
S'set the horizontal alignment to one of'
p17365
sg12
Vtext.horizontalalignment
p17366
sg14
(lp17367
(icodemend.demo.code_suggest
Element
p17368
(dp17369
g10
I34
sg11
S''
sg12
Vtext.horizontalalignment.'center'
p17370
sg14
(lp17371
sg2
S"'center'"
p17372
sba(icodemend.demo.code_suggest
Element
p17373
(dp17374
g10
I9
sg11
S''
sg12
Vtext.horizontalalignment.'left'
p17375
sg14
(lp17376
sg2
S"'left'"
p17377
sba(icodemend.demo.code_suggest
Element
p17378
(dp17379
g10
I7
sg11
S''
sg12
Vtext.horizontalalignment.'right'
p17380
sg14
(lp17381
sg2
S"'right'"
p17382
sbasg2
g17361
sbs(S'matshow'
p17383
S'kwargs'
p17384
tp17385
(icodemend.demo.code_suggest
Element
p17386
(dp17387
g10
I0
sg11
S"sets origin to ' upper ' , ' interpolation ' to ' nearest ' and ' aspect ' to equal ."
p17388
sg12
Vmatshow.kwargs
p17389
sg14
(lp17390
sg2
g17384
sbsS'get_minor_ticks'
p17391
(icodemend.demo.code_suggest
Element
p17392
(dp17393
g10
I1
sg11
S'get the minor tick instances ; grow as necessary'
p17394
sg12
Vget_minor_ticks
p17395
sg14
(lp17396
sg2
g17391
sbs(S'set_yticklabels'
p17397
S'snap'
p17398
tp17399
(icodemend.demo.code_suggest
Element
p17400
(dp17401
g10
I0
sg11
S'sets the snap setting which may be'
p17402
sg12
Vset_yticklabels.snap
p17403
sg14
(lp17404
sg2
g17398
sbs(S'text'
p17405
S'cursor_props'
p17406
tp17407
(icodemend.demo.code_suggest
Element
p17408
(dp17409
g10
I0
sg11
S'set the cursor property as'
p17410
sg12
Vtext.cursor_props
p17411
sg14
(lp17412
sg2
g17406
sbs(g5848
g5849
S'n2_init'
p17413
tp17414
(icodemend.demo.code_suggest
Element
p17415
(dp17416
g10
I2
sg11
S''
sg12
VSlider.valinit.n2_init
p17417
sg14
(lp17418
sg2
g17413
sbsS'set_dashlength'
p17419
(icodemend.demo.code_suggest
Element
p17420
(dp17421
g10
I0
sg11
S'set the length of the dash .'
p17422
sg12
Vset_dashlength
p17423
sg14
(lp17424
sg2
g17419
sbsS'set'
p17425
(icodemend.demo.code_suggest
Element
p17426
(dp17427
g10
I130
sg11
S'a property batch setter .'
p17428
sg12
Vset
p17429
sg14
(lp17430
sg2
g17425
sbs(S'set_yticklabels'
p17431
S'xticks'
p17432
tp17433
(icodemend.demo.code_suggest
Element
p17434
(dp17435
g10
I0
sg11
S'set the x ticks with list of ticks'
p17436
sg12
Vset_yticklabels.xticks
p17437
sg14
(lp17438
sg2
g17432
sbs(S'plotting'
p17439
g15766
tp17440
g15761
s(g117
g118
S"'$P_3(x)$'"
p17441
tp17442
(icodemend.demo.code_suggest
Element
p17443
(dp17444
g10
I2
sg11
S''
sg12
Vplot.label.'$P_3(x)$'
p17445
sg14
(lp17446
sg2
g17441
sbs(S'grid'
p17447
S'ydata'
p17448
tp17449
(icodemend.demo.code_suggest
Element
p17450
(dp17451
g10
I0
sg11
S'set the data np.array for y'
p17452
sg12
Vgrid.ydata
p17453
sg14
(lp17454
sg2
g17448
sbs(S'text'
p17455
S'kwargs'
p17456
tp17457
(icodemend.demo.code_suggest
Element
p17458
(dp17459
g10
I0
sg11
S'other miscellaneous text parameters .'
p17460
sg12
Vtext.kwargs
p17461
sg14
(lp17462
sg2
g17456
sbs(S'add'
p17463
S'ylim'
p17464
tp17465
(icodemend.demo.code_suggest
Element
p17466
(dp17467
g10
I0
sg11
S'set the data limits for the yaxis'
p17468
sg12
Vadd.ylim
p17469
sg14
(lp17470
sg2
g17464
sbs(g13532
g13533
S'200'
p17471
tp17472
(icodemend.demo.code_suggest
Element
p17473
(dp17474
g10
I1
sg11
S''
sg12
Vspecgram.noverlap.200
p17475
sg14
(lp17476
sg2
g17471
sbs(S'magnitude_spectrum'
p17477
S'x'
tp17478
(icodemend.demo.code_suggest
Element
p17479
(dp17480
g10
I0
sg11
S'compute the magnitude spectrum of x . data is padded to a length of pad_to and the windowing function window is applied to the signal .'
p17481
sg12
Vmagnitude_spectrum.x
p17482
sg14
(lp17483
sg2
S'x'
sbsS'contour'
p17484
(icodemend.demo.code_suggest
Element
p17485
(dp17486
g10
I210
sg11
S'plot contours .'
p17487
sg12
Vcontour
p17488
sg14
(lp17489
(icodemend.demo.code_suggest
Element
p17490
(dp17491
g10
I74
sg11
S"if none , the colormap specified by cmap will be used . if a string , like ' r ' or ' red ' , all levels will be plotted in this color . if a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified ."
p17492
sg12
Vcontour.colors
p17493
sg14
(lp17494
g7035
a(icodemend.demo.code_suggest
Element
p17495
(dp17496
g10
I9
sg11
S''
sg12
Vcontour.colors.'r'
p17497
sg14
(lp17498
sg2
S"'r'"
p17499
sba(icodemend.demo.code_suggest
Element
p17500
(dp17501
g10
I7
sg11
S''
sg12
Vcontour.colors.'black'
p17502
sg14
(lp17503
sg2
S"'black'"
p17504
sba(icodemend.demo.code_suggest
Element
p17505
(dp17506
g10
I6
sg11
S''
sg12
Vcontour.colors.'b'
p17507
sg14
(lp17508
sg2
S"'b'"
p17509
sba(icodemend.demo.code_suggest
Element
p17510
(dp17511
g10
I5
sg11
S''
sg12
Vcontour.colors.'red'
p17512
sg14
(lp17513
sg2
S"'red'"
p17514
sba(icodemend.demo.code_suggest
Element
p17515
(dp17516
g10
I2
sg11
S''
sg12
Vcontour.colors.'blue'
p17517
sg14
(lp17518
sg2
S"'blue'"
p17519
sba(icodemend.demo.code_suggest
Element
p17520
(dp17521
g10
I1
sg11
S''
sg12
Vcontour.colors.'g'
p17522
sg14
(lp17523
sg2
S"'g'"
p17524
sba(icodemend.demo.code_suggest
Element
p17525
(dp17526
g10
I1
sg11
S''
sg12
Vcontour.colors.'grey'
p17527
sg14
(lp17528
sg2
S"'grey'"
p17529
sba(icodemend.demo.code_suggest
Element
p17530
(dp17531
g10
I1
sg11
S''
sg12
Vcontour.colors.'white'
p17532
sg14
(lp17533
sg2
S"'white'"
p17534
sba(icodemend.demo.code_suggest
Element
p17535
(dp17536
g10
I1
sg11
S''
sg12
Vcontour.colors.('black', 'black', 'black', 'black')
p17537
sg14
(lp17538
sg2
S"('black', 'black', 'black', 'black')"
p17539
sba(icodemend.demo.code_suggest
Element
p17540
(dp17541
g10
I1
sg11
S''
sg12
Vcontour.colors.('k',)
p17542
sg14
(lp17543
sg2
S"('k',)"
p17544
sbag13689
a(icodemend.demo.code_suggest
Element
p17545
(dp17546
g10
I1
sg11
S''
sg12
Vcontour.colors.[(1/0, 0/25, 0/75)]
p17547
sg14
(lp17548
sg2
S'[(1.0, 0.25, 0.75)]'
p17549
sbasg2
S'colors'
p17550
sbag1048
a(icodemend.demo.code_suggest
Element
p17551
(dp17552
g10
I31
sg11
S'a cm colormap instance or none . if cmap is none and colors is none , a default colormap is used .'
p17553
sg12
Vcontour.cmap
p17554
sg14
(lp17555
(icodemend.demo.code_suggest
Element
p17556
(dp17557
g10
I2
sg11
S''
sg12
Vcontour.cmap.'Reds'
p17558
sg14
(lp17559
sg2
S"'Reds'"
p17560
sba(icodemend.demo.code_suggest
Element
p17561
(dp17562
g10
I1
sg11
S''
sg12
Vcontour.cmap.'Blues'
p17563
sg14
(lp17564
sg2
S"'Blues'"
p17565
sba(icodemend.demo.code_suggest
Element
p17566
(dp17567
g10
I1
sg11
S''
sg12
Vcontour.cmap.'Greys'
p17568
sg14
(lp17569
sg2
S"'Greys'"
p17570
sba(icodemend.demo.code_suggest
Element
p17571
(dp17572
g10
I1
sg11
S''
sg12
Vcontour.cmap.'Greys_r'
p17573
sg14
(lp17574
sg2
S"'Greys_r'"
p17575
sba(icodemend.demo.code_suggest
Element
p17576
(dp17577
g10
I1
sg11
S''
sg12
Vcontour.cmap.'RdBu'
p17578
sg14
(lp17579
sg2
S"'RdBu'"
p17580
sbag13273
a(icodemend.demo.code_suggest
Element
p17581
(dp17582
g10
I1
sg11
S''
sg12
Vcontour.cmap.'jet'
p17583
sg14
(lp17584
sg2
S"'jet'"
p17585
sba(icodemend.demo.code_suggest
Element
p17586
(dp17587
g10
I1
sg11
S''
sg12
Vcontour.cmap.newcmap
p17588
sg14
(lp17589
sg2
S'newcmap'
p17590
sbasg2
S'cmap'
p17591
sba(icodemend.demo.code_suggest
Element
p17592
(dp17593
g10
I22
sg11
S'a list of floating point numbers indicating the level curves to draw , in increasing order ; e.g. , to draw just the zero contour pass levels=[0 ]'
p17594
sg12
Vcontour.levels
p17595
sg14
(lp17596
(icodemend.demo.code_suggest
Element
p17597
(dp17598
g10
I8
sg11
S''
sg12
Vcontour.levels.[0]
p17599
sg14
(lp17600
sg2
S'[0]'
p17601
sbag6414
a(icodemend.demo.code_suggest
Element
p17602
(dp17603
g10
I1
sg11
S''
sg12
Vcontour.levels.[(-7), (-8)]
p17604
sg14
(lp17605
sg2
S'[(-7), (-8)]'
p17606
sba(icodemend.demo.code_suggest
Element
p17607
(dp17608
g10
I1
sg11
S''
sg12
Vcontour.levels.[0/0, 0/5, 1/0, 1/5, 2/5]
p17609
sg14
(lp17610
sg2
S'[0.0, 0.5, 1.0, 1.5, 2.5]'
p17611
sba(icodemend.demo.code_suggest
Element
p17612
(dp17613
g10
I1
sg11
S''
sg12
Vcontour.levels.[0/1]
p17614
sg14
(lp17615
sg2
S'[0.1]'
p17616
sbag4374
a(icodemend.demo.code_suggest
Element
p17617
(dp17618
g10
I1
sg11
S''
sg12
Vcontour.levels.[240]
p17619
sg14
(lp17620
sg2
S'[240]'
p17621
sba(icodemend.demo.code_suggest
Element
p17622
(dp17623
g10
I1
sg11
S''
sg12
Vcontour.levels.[245]
p17624
sg14
(lp17625
sg2
S'[245]'
p17626
sba(icodemend.demo.code_suggest
Element
p17627
(dp17628
g10
I1
sg11
S''
sg12
Vcontour.levels.loglvl
p17629
sg14
(lp17630
sg2
S'loglvl'
p17631
sba(icodemend.demo.code_suggest
Element
p17632
(dp17633
g10
I1
sg11
S''
sg12
Vcontour.levels.lvls
p17634
sg14
(lp17635
sg2
g3983
sba(icodemend.demo.code_suggest
Element
p17636
(dp17637
g10
I1
sg11
S''
sg12
Vcontour.levels.tick
p17638
sg14
(lp17639
sg2
g4053
sbasg2
S'levels'
p17640
sba(icodemend.demo.code_suggest
Element
p17641
(dp17642
g10
I7
sg11
S"if none , the first value of z will correspond to the lower left corner , location ( 0,0 ) . if ' image ' , the rc value for image.origin will be used . this keyword is not active if x and y are specified in the call to contour ."
p17643
sg12
Vcontour.origin
p17644
sg14
(lp17645
(icodemend.demo.code_suggest
Element
p17646
(dp17647
g10
I3
sg11
S''
sg12
Vcontour.origin.'lower'
p17648
sg14
(lp17649
sg2
S"'lower'"
p17650
sba(icodemend.demo.code_suggest
Element
p17651
(dp17652
g10
I2
sg11
S''
sg12
Vcontour.origin.'image'
p17653
sg14
(lp17654
sg2
S"'image'"
p17655
sba(icodemend.demo.code_suggest
Element
p17656
(dp17657
g10
I1
sg11
S''
sg12
Vcontour.origin.'upper'
p17658
sg14
(lp17659
sg2
S"'upper'"
p17660
sba(icodemend.demo.code_suggest
Element
p17661
(dp17662
g10
I1
sg11
S''
sg12
Vcontour.origin.origin
p17663
sg14
(lp17664
sg2
g2183
sbasg2
S'origin'
p17665
sba(icodemend.demo.code_suggest
Element
p17666
(dp17667
g10
I6
sg11
S"if linestyles is none , the default is ' solid ' unless the lines are monochrome . in that case , negative contours will take their linestyle from the matplotlibrc contour.negative_linestyle setting . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . if this iterable is shorter than the number of contour levels it will be repeated as necessary ."
p17668
sg12
Vcontour.linestyles
p17669
sg14
(lp17670
(icodemend.demo.code_suggest
Element
p17671
(dp17672
g10
I2
sg11
S''
sg12
Vcontour.linestyles.'dashed'
p17673
sg14
(lp17674
sg2
S"'dashed'"
p17675
sba(icodemend.demo.code_suggest
Element
p17676
(dp17677
g10
I2
sg11
S''
sg12
Vcontour.linestyles.'solid'
p17678
sg14
(lp17679
sg2
S"'solid'"
p17680
sbag4836
ag8589
asg2
S'linestyles'
p17681
sba(icodemend.demo.code_suggest
Element
p17682
(dp17683
g10
I4
sg11
S"unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included . these added ranges are then mapped to the special colormap values which default to the ends of the colormap range , but can be set via matplotlib.colors.colormap.set_under ( ) and matplotlib.colors.colormap.set_over ( ) methods ."
p17684
sg12
Vcontour.extend
p17685
sg14
(lp17686
(icodemend.demo.code_suggest
Element
p17687
(dp17688
g10
I4
sg11
S''
sg12
Vcontour.extend.'both'
p17689
sg14
(lp17690
sg2
S"'both'"
p17691
sbasg2
S'extend'
p17692
sba(icodemend.demo.code_suggest
Element
p17693
(dp17694
g10
I3
sg11
S'the alpha blending value'
p17695
sg12
Vcontour.alpha
p17696
sg14
(lp17697
(icodemend.demo.code_suggest
Element
p17698
(dp17699
g10
I1
sg11
S''
sg12
Vcontour.alpha.0/0
p17700
sg14
(lp17701
sg2
S'0.0'
p17702
sba(icodemend.demo.code_suggest
Element
p17703
(dp17704
g10
I1
sg11
S''
sg12
Vcontour.alpha.0/4
p17705
sg14
(lp17706
sg2
S'0.4'
p17707
sba(icodemend.demo.code_suggest
Element
p17708
(dp17709
g10
I1
sg11
S''
sg12
Vcontour.alpha.0/5
p17710
sg14
(lp17711
sg2
S'0.5'
p17712
sbasg2
S'alpha'
p17713
sba(icodemend.demo.code_suggest
Element
p17714
(dp17715
g10
I3
sg11
S'a matplotlib.colors.normalize instance for scaling data values to colors . if norm is none and colors is none , the default linear scaling is used .'
p17716
sg12
Vcontour.norm
p17717
sg14
(lp17718
g8939
asg2
S'norm'
p17719
sba(icodemend.demo.code_suggest
Element
p17720
(dp17721
g10
I2
sg11
S'if not none , either or both of these values will be supplied to the matplotlib.colors.normalize instance , overriding the default color scaling based on levels .'
p17722
sg12
Vcontour.vmax
p17723
sg14
(lp17724
(icodemend.demo.code_suggest
Element
p17725
(dp17726
g10
I1
sg11
S''
sg12
Vcontour.vmax.0/6
p17727
sg14
(lp17728
sg2
S'0.6'
p17729
sba(icodemend.demo.code_suggest
Element
p17730
(dp17731
g10
I1
sg11
S''
sg12
Vcontour.vmax.vmax
p17732
sg14
(lp17733
sg2
g5025
sbasg2
S'vmax'
p17734
sba(icodemend.demo.code_suggest
Element
p17735
(dp17736
g10
I2
sg11
S'if not none , either or both of these values will be supplied to the matplotlib.colors.normalize instance , overriding the default color scaling based on levels .'
p17737
sg12
Vcontour.vmin
p17738
sg14
(lp17739
(icodemend.demo.code_suggest
Element
p17740
(dp17741
g10
I1
sg11
S''
sg12
Vcontour.vmin.0
p17742
sg14
(lp17743
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p17744
(dp17745
g10
I1
sg11
S''
sg12
Vcontour.vmin.vmin
p17746
sg14
(lp17747
sg2
g4459
sbasg2
S'vmin'
p17748
sba(icodemend.demo.code_suggest
Element
p17749
(dp17750
g10
I0
sg11
S"enable/disable corner masking , which only has an effect if z is a masked array . if false , any quad touching a masked point is masked out . if true , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . if ' legacy ' , the old contouring algorithm is used , which is equivalent to false and is deprecated , only remaining whilst the new algorithm is tested fully . if not specified , the default is taken from rcparams['contour.corner_mask ' ] , which is true unless it has been modified .|||enable antialiasing , overriding the defaults . for filled contours , the default is true . for line contours , it is taken from rcparams['lines.antialiased ' ] ."
p17751
sg12
Vcontour.False
p17752
sg14
(lp17753
sg2
S'False'
p17754
sba(icodemend.demo.code_suggest
Element
p17755
(dp17756
g10
I0
sg11
S'contour up to n automatically-chosen levels .'
p17757
sg12
Vcontour.N
p17758
sg14
(lp17759
sg2
S'N'
sba(icodemend.demo.code_suggest
Element
p17760
(dp17761
g10
I0
sg11
S"if linestyles is none , the default is ' solid ' unless the lines are monochrome . in that case , negative contours will take their linestyle from the matplotlibrc contour.negative_linestyle setting . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . if this iterable is shorter than the number of contour levels it will be repeated as necessary .|||if none , the colormap specified by cmap will be used . if a string , like ' r ' or ' red ' , all levels will be plotted in this color . if a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||if locator is none , the default maxnlocator is used . the locator is used to determine the contour levels if they are not given explicitly via the v argument .|||a matplotlib.colors.normalize instance for scaling data values to colors . if norm is none and colors is none , the default linear scaling is used .|||if none , the first value of z will correspond to the lower left corner , location ( 0,0 ) . if ' image ' , the rc value for image.origin will be used . this keyword is not active if x and y are specified in the call to contour .|||a cm colormap instance or none . if cmap is none and colors is none , a default colormap is used .|||if linewidths is none , the default width in lines.linewidth in matplotlibrc is used . if a number , all levels will be plotted with this linewidth . if a tuple , different levels will be plotted with different linewidths in the order specified .|||override axis units by specifying an instance of a matplotlib.units.conversioninterface .|||if not none , either or both of these values will be supplied to the matplotlib.colors.normalize instance , overriding the default color scaling based on levels ."
p17762
sg12
Vcontour.None
p17763
sg14
(lp17764
sg2
S'None'
p17765
sba(icodemend.demo.code_suggest
Element
p17766
(dp17767
g10
I0
sg11
S"enable/disable corner masking , which only has an effect if z is a masked array . if false , any quad touching a masked point is masked out . if true , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . if ' legacy ' , the old contouring algorithm is used , which is equivalent to false and is deprecated , only remaining whilst the new algorithm is tested fully . if not specified , the default is taken from rcparams['contour.corner_mask ' ] , which is true unless it has been modified .|||enable antialiasing , overriding the defaults . for filled contours , the default is true . for line contours , it is taken from rcparams['lines.antialiased ' ] ."
p17768
sg12
Vcontour.True
p17769
sg14
(lp17770
sg2
S'True'
p17771
sba(icodemend.demo.code_suggest
Element
p17772
(dp17773
g10
I0
sg11
S'fill the len(v)-1 regions between the values in v , which must be in increasing order .|||draw contour lines at the values specified in sequence v , which must be in increasing order .'
p17774
sg12
Vcontour.V
p17775
sg14
(lp17776
sg2
S'V'
sba(icodemend.demo.code_suggest
Element
p17777
(dp17778
g10
I0
sg11
S'x , y specify the ( x , y ) coordinates of the surface|||x and y must both be 2-d with the same shape as z , or they must both be 1-d such that len(x ) is the number of columns in z and len(y ) is the number of rows in z .'
p17779
sg12
Vcontour.X
p17780
sg14
(lp17781
sg2
S'X'
sba(icodemend.demo.code_suggest
Element
p17782
(dp17783
g10
I0
sg11
S'x , y specify the ( x , y ) coordinates of the surface|||x and y must both be 2-d with the same shape as z , or they must both be 1-d such that len(x ) is the number of columns in z and len(y ) is the number of rows in z .'
p17784
sg12
Vcontour.Y
p17785
sg14
(lp17786
sg2
S'Y'
sba(icodemend.demo.code_suggest
Element
p17787
(dp17788
g10
I0
sg11
S'make a contour plot of an array z . the level values are chosen automatically .|||x and y must both be 2-d with the same shape as z , or they must both be 1-d such that len(x ) is the number of columns in z and len(y ) is the number of rows in z .'
p17789
sg12
Vcontour.Z
p17790
sg14
(lp17791
sg2
S'Z'
sba(icodemend.demo.code_suggest
Element
p17792
(dp17793
g10
I0
sg11
S"enable antialiasing , overriding the defaults . for filled contours , the default is true . for line contours , it is taken from rcparams['lines.antialiased ' ] ."
p17794
sg12
Vcontour.antialiased
p17795
sg14
(lp17796
sg2
S'antialiased'
p17797
sba(icodemend.demo.code_suggest
Element
p17798
(dp17799
g10
I0
sg11
S"enable/disable corner masking , which only has an effect if z is a masked array . if false , any quad touching a masked point is masked out . if true , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . if ' legacy ' , the old contouring algorithm is used , which is equivalent to false and is deprecated , only remaining whilst the new algorithm is tested fully . if not specified , the default is taken from rcparams['contour.corner_mask ' ] , which is true unless it has been modified ."
p17800
sg12
Vcontour.corner_mask
p17801
sg14
(lp17802
sg2
S'corner_mask'
p17803
sba(icodemend.demo.code_suggest
Element
p17804
(dp17805
g10
I0
sg11
S'a list of cross hatch patterns to use on the filled areas . if none , no hatching will be added to the contour . hatching is supported in the postscript , pdf , svg and agg backends only .'
p17806
sg12
Vcontour.hatches
p17807
sg14
(lp17808
sg2
S'hatches'
p17809
sba(icodemend.demo.code_suggest
Element
p17810
(dp17811
g10
I0
sg11
S'if locator is none , the default maxnlocator is used . the locator is used to determine the contour levels if they are not given explicitly via the v argument .'
p17812
sg12
Vcontour.locator
p17813
sg14
(lp17814
sg2
S'locator'
p17815
sbag13502
a(icodemend.demo.code_suggest
Element
p17816
(dp17817
g10
I0
sg11
S'override axis units by specifying an instance of a matplotlib.units.conversioninterface .'
p17818
sg12
Vcontour.xunits
p17819
sg14
(lp17820
sg2
S'xunits'
p17821
sba(icodemend.demo.code_suggest
Element
p17822
(dp17823
g10
I0
sg11
S'override axis units by specifying an instance of a matplotlib.units.conversioninterface .'
p17824
sg12
Vcontour.yunits
p17825
sg14
(lp17826
sg2
S'yunits'
p17827
sba(icodemend.demo.code_suggest
Element
p17828
(dp17829
g10
I0
sg11
S'there is one exception : if the lowest boundary coincides with the minimum value of the z array , then that minimum value will be included in the lowest interval .'
p17830
sg12
Vcontour.z
p17831
sg14
(lp17832
sg2
S'z'
sba(icodemend.demo.code_suggest
Element
p17833
(dp17834
g10
I0
sg11
S'note : contourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :'
p17835
sg12
Vcontour.z1
p17836
sg14
(lp17837
sg2
S'z1'
p17838
sba(icodemend.demo.code_suggest
Element
p17839
(dp17840
g10
I0
sg11
S'note : contourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :'
p17841
sg12
Vcontour.z2
p17842
sg14
(lp17843
sg2
S'z2'
p17844
sbasg2
g17484
sbs(g117
g118
S"'AGN'"
p17845
tp17846
(icodemend.demo.code_suggest
Element
p17847
(dp17848
g10
I1
sg11
S''
sg12
Vplot.label.'AGN'
p17849
sg14
(lp17850
sg2
g17845
sbs(S'barbs'
p17851
S'figure'
p17852
tp17853
(icodemend.demo.code_suggest
Element
p17854
(dp17855
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p17856
sg12
Vbarbs.figure
p17857
sg14
(lp17858
sg2
g17852
sbsS'get_xyz_where'
p17859
(icodemend.demo.code_suggest
Element
p17860
(dp17861
g10
I0
sg11
S'z and cond are m x n matrices .'
p17862
sg12
Vget_xyz_where
p17863
sg14
(lp17864
(icodemend.demo.code_suggest
Element
p17865
(dp17866
g10
I0
sg11
S'z and cond are m x n matrices . z are data and cond is a boolean matrix where some condition is satisfied . return value is ( x , y , z ) where x and y are the indices into z and z are the values of z at those indices . x , y , and z are 1d arrays .'
p17867
sg12
Vget_xyz_where.Cond
p17868
sg14
(lp17869
sg2
S'Cond'
p17870
sba(icodemend.demo.code_suggest
Element
p17871
(dp17872
g10
I0
sg11
S'z and cond are m x n matrices . z are data and cond is a boolean matrix where some condition is satisfied . return value is ( x , y , z ) where x and y are the indices into z and z are the values of z at those indices . x , y , and z are 1d arrays .'
p17873
sg12
Vget_xyz_where.M
p17874
sg14
(lp17875
sg2
S'M'
sba(icodemend.demo.code_suggest
Element
p17876
(dp17877
g10
I0
sg11
S'z and cond are m x n matrices . z are data and cond is a boolean matrix where some condition is satisfied . return value is ( x , y , z ) where x and y are the indices into z and z are the values of z at those indices . x , y , and z are 1d arrays .'
p17878
sg12
Vget_xyz_where.N
p17879
sg14
(lp17880
sg2
S'N'
sbag80
a(icodemend.demo.code_suggest
Element
p17881
(dp17882
g10
I0
sg11
S'z and cond are m x n matrices . z are data and cond is a boolean matrix where some condition is satisfied . return value is ( x , y , z ) where x and y are the indices into z and z are the values of z at those indices . x , y , and z are 1d arrays .'
p17883
sg12
Vget_xyz_where.x
p17884
sg14
(lp17885
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p17886
(dp17887
g10
I0
sg11
S'z and cond are m x n matrices . z are data and cond is a boolean matrix where some condition is satisfied . return value is ( x , y , z ) where x and y are the indices into z and z are the values of z at those indices . x , y , and z are 1d arrays .'
p17888
sg12
Vget_xyz_where.y
p17889
sg14
(lp17890
sg2
S'y'
sba(icodemend.demo.code_suggest
Element
p17891
(dp17892
g10
I0
sg11
S'z and cond are m x n matrices . z are data and cond is a boolean matrix where some condition is satisfied . return value is ( x , y , z ) where x and y are the indices into z and z are the values of z at those indices . x , y , and z are 1d arrays .'
p17893
sg12
Vget_xyz_where.z
p17894
sg14
(lp17895
sg2
S'z'
sbasg2
g17859
sbs(S'errorbar'
p17896
S'linewidth'
p17897
tp17898
(icodemend.demo.code_suggest
Element
p17899
(dp17900
g10
I0
sg11
S'set the line width in points'
p17901
sg12
Verrorbar.linewidth
p17902
sg14
(lp17903
sg2
g17897
sbs(S'csv2rec'
p17904
S'names'
p17905
S"('dt', 'val')"
p17906
tp17907
(icodemend.demo.code_suggest
Element
p17908
(dp17909
g10
I1
sg11
S''
sg12
Vcsv2rec.names.('dt', 'val')
p17910
sg14
(lp17911
sg2
g17906
sbsS'set_figheight'
p17912
(icodemend.demo.code_suggest
Element
p17913
(dp17914
g10
I6
sg11
S'set the height of the figure in inches'
p17915
sg12
Vset_figheight
p17916
sg14
(lp17917
sg2
g17912
sbs(S'streamplot'
p17918
S'minlength'
p17919
tp17920
(icodemend.demo.code_suggest
Element
p17921
(dp17922
g10
I0
sg11
S'minimum length of streamline in axes coordinates .'
p17923
sg12
Vstreamplot.minlength
p17924
sg14
(lp17925
sg2
g17919
sbs(S'quiver'
p17926
S'contains'
p17927
tp17928
(icodemend.demo.code_suggest
Element
p17929
(dp17930
g10
I0
sg11
S'replace the contains test used by this artist .'
p17931
sg12
Vquiver.contains
p17932
sg14
(lp17933
sg2
g17927
sbsS'available'
p17934
(icodemend.demo.code_suggest
Element
p17935
(dp17936
g10
I0
sg11
S'drawing is available to o'
p17937
sg12
Vavailable
p17938
sg14
(lp17939
(icodemend.demo.code_suggest
Element
p17940
(dp17941
g10
I0
sg11
S'drawing is available to o'
p17942
sg12
Vavailable.o
p17943
sg14
(lp17944
sg2
S'o'
sbasg2
g17934
sbs(S'semilogx'
p17945
S'antialiased'
p17946
tp17947
(icodemend.demo.code_suggest
Element
p17948
(dp17949
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p17950
sg12
Vsemilogx.antialiased
p17951
sg14
(lp17952
sg2
g17946
sbsS'set_yticklabels'
p17953
(icodemend.demo.code_suggest
Element
p17954
(dp17955
g10
I108
sg11
S'set the y tick labels with list of strings labels .'
p17956
sg12
Vset_yticklabels
p17957
sg14
(lp17958
(icodemend.demo.code_suggest
Element
p17959
(dp17960
g10
I2
sg11
S'set the foreground color of the text'
p17961
sg12
Vset_yticklabels.color
p17962
sg14
(lp17963
(icodemend.demo.code_suggest
Element
p17964
(dp17965
g10
I1
sg11
S''
sg12
Vset_yticklabels.color.'blue'
p17966
sg14
(lp17967
sg2
S"'blue'"
p17968
sba(icodemend.demo.code_suggest
Element
p17969
(dp17970
g10
I1
sg11
S''
sg12
Vset_yticklabels.color.'white'
p17971
sg14
(lp17972
sg2
S"'white'"
p17973
sbasg2
S'color'
p17974
sba(icodemend.demo.code_suggest
Element
p17975
(dp17976
g10
I2
sg11
S'set the rotation of the text'
p17977
sg12
Vset_yticklabels.rotation
p17978
sg14
(lp17979
(icodemend.demo.code_suggest
Element
p17980
(dp17981
g10
I2
sg11
S''
sg12
Vset_yticklabels.rotation.-15
p17982
sg14
(lp17983
sg2
S'-15'
p17984
sbasg2
S'rotation'
p17985
sba(icodemend.demo.code_suggest
Element
p17986
(dp17987
g10
I1
sg11
S'set the font properties that control the text .'
p17988
sg12
Vset_yticklabels.fontproperties
p17989
sg14
(lp17990
(icodemend.demo.code_suggest
Element
p17991
(dp17992
g10
I1
sg11
S''
sg12
Vset_yticklabels.fontproperties.font
p17993
sg14
(lp17994
sg2
g17000
sbasg2
S'fontproperties'
p17995
sba(icodemend.demo.code_suggest
Element
p17996
(dp17997
g10
I1
sg11
S'set the horizontal alignment to one of'
p17998
sg12
Vset_yticklabels.horizontalalignment
p17999
sg14
(lp18000
(icodemend.demo.code_suggest
Element
p18001
(dp18002
g10
I1
sg11
S''
sg12
Vset_yticklabels.horizontalalignment.'left'
p18003
sg14
(lp18004
sg2
S"'left'"
p18005
sbasg2
S'horizontalalignment'
p18006
sba(icodemend.demo.code_suggest
Element
p18007
(dp18008
g10
I1
sg11
S'set the axes position with|||set the ( x , y ) position of the text'
p18009
sg12
Vset_yticklabels.position
p18010
sg14
(lp18011
(icodemend.demo.code_suggest
Element
p18012
(dp18013
g10
I1
sg11
S''
sg12
Vset_yticklabels.position.((-0/25), 0)
p18014
sg14
(lp18015
sg2
S'((-0.25), 0)'
p18016
sbasg2
S'position'
p18017
sba(icodemend.demo.code_suggest
Element
p18018
(dp18019
g10
I1
sg11
S'set the vertical alignment'
p18020
sg12
Vset_yticklabels.verticalalignment
p18021
sg14
(lp18022
(icodemend.demo.code_suggest
Element
p18023
(dp18024
g10
I1
sg11
S''
sg12
Vset_yticklabels.verticalalignment.'baseline'
p18025
sg14
(lp18026
sg2
S"'baseline'"
p18027
sbasg2
S'verticalalignment'
p18028
sba(icodemend.demo.code_suggest
Element
p18029
(dp18030
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p18031
sg12
Vset_yticklabels._interpolation_steps
p18032
sg14
(lp18033
sg2
S'_interpolation_steps'
p18034
sba(icodemend.demo.code_suggest
Element
p18035
(dp18036
g10
I0
sg11
S'set agg_filter fuction .'
p18037
sg12
Vset_yticklabels.agg_filter
p18038
sg14
(lp18039
sg2
S'agg_filter'
p18040
sba(icodemend.demo.code_suggest
Element
p18041
(dp18042
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p18043
sg12
Vset_yticklabels.alpha
p18044
sg14
(lp18045
sg2
S'alpha'
p18046
sba(icodemend.demo.code_suggest
Element
p18047
(dp18048
g10
I0
sg11
S'anchor'
p18049
sg12
Vset_yticklabels.anchor
p18050
sg14
(lp18051
sg2
S'anchor'
p18052
sba(icodemend.demo.code_suggest
Element
p18053
(dp18054
g10
I0
sg11
S"set the artist 's animation state ."
p18055
sg12
Vset_yticklabels.animated
p18056
sg14
(lp18057
sg2
S'animated'
p18058
sba(icodemend.demo.code_suggest
Element
p18059
(dp18060
g10
I0
sg11
S'aspect'
p18061
sg12
Vset_yticklabels.aspect
p18062
sg14
(lp18063
sg2
S'aspect'
p18064
sba(icodemend.demo.code_suggest
Element
p18065
(dp18066
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p18067
sg12
Vset_yticklabels.axes
p18068
sg14
(lp18069
sg2
S'axes'
p18070
sbag4877
a(icodemend.demo.code_suggest
Element
p18071
(dp18072
g10
I0
sg11
S'draw a bounding box around self .'
p18073
sg12
Vset_yticklabels.bbox
p18074
sg14
(lp18075
sg2
S'bbox'
p18076
sba(icodemend.demo.code_suggest
Element
p18077
(dp18078
g10
I0
sg11
S"set the artist 's clip bbox ."
p18079
sg12
Vset_yticklabels.clip_box
p18080
sg14
(lp18081
sg2
S'clip_box'
p18082
sba(icodemend.demo.code_suggest
Element
p18083
(dp18084
g10
I0
sg11
S'set whether artist uses clipping .'
p18085
sg12
Vset_yticklabels.clip_on
p18086
sg14
(lp18087
sg2
S'clip_on'
p18088
sba(icodemend.demo.code_suggest
Element
p18089
(dp18090
g10
I0
sg11
S"set the artist 's clip path , which may be"
p18091
sg12
Vset_yticklabels.clip_path
p18092
sg14
(lp18093
sg2
S'clip_path'
p18094
sba(icodemend.demo.code_suggest
Element
p18095
(dp18096
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p18097
sg12
Vset_yticklabels.closed
p18098
sg14
(lp18099
sg2
S'closed'
p18100
sba(icodemend.demo.code_suggest
Element
p18101
(dp18102
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p18103
sg12
Vset_yticklabels.codes
p18104
sg14
(lp18105
sg2
S'codes'
p18106
sba(icodemend.demo.code_suggest
Element
p18107
(dp18108
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p18109
sg12
Vset_yticklabels.color_cycle
p18110
sg14
(lp18111
sg2
S'color_cycle'
p18112
sba(icodemend.demo.code_suggest
Element
p18113
(dp18114
g10
I0
sg11
S'replace the contains test used by this artist .'
p18115
sg12
Vset_yticklabels.contains
p18116
sg14
(lp18117
sg2
S'contains'
p18118
sba(icodemend.demo.code_suggest
Element
p18119
(dp18120
g10
I0
sg11
S'set the cursor property as'
p18121
sg12
Vset_yticklabels.cursor_props
p18122
sg14
(lp18123
sg2
S'cursor_props'
p18124
sbag5948
a(icodemend.demo.code_suggest
Element
p18125
(dp18126
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p18127
sg12
Vset_yticklabels.figure
p18128
sg14
(lp18129
sg2
S'figure'
p18130
sba(icodemend.demo.code_suggest
Element
p18131
(dp18132
g10
I0
sg11
S'set the properties by parsing a fontconfig pattern .'
p18133
sg12
Vset_yticklabels.fontconfig_pattern
p18134
sg14
(lp18135
sg2
S'fontconfig_pattern'
p18136
sba(icodemend.demo.code_suggest
Element
p18137
(dp18138
g10
I0
sg11
S'sets the ( group ) id for the artist'
p18139
sg12
Vset_yticklabels.gid
p18140
sg14
(lp18141
sg2
S'gid'
p18142
sba(icodemend.demo.code_suggest
Element
p18143
(dp18144
g10
I0
sg11
S'set the hatching pattern'
p18145
sg12
Vset_yticklabels.hatch
p18146
sg14
(lp18147
sg2
S'hatch'
p18148
sbag8664
a(icodemend.demo.code_suggest
Element
p18149
(dp18150
g10
I0
sg11
S'set the y tick labels with list of strings labels . return a list of text instances .'
p18151
sg12
Vset_yticklabels.labels
p18152
sg14
(lp18153
sg2
S'labels'
p18154
sba(icodemend.demo.code_suggest
Element
p18155
(dp18156
g10
I0
sg11
S'set the line spacing as a multiple of the font size .'
p18157
sg12
Vset_yticklabels.linespacing
p18158
sg14
(lp18159
sg2
S'linespacing'
p18160
sba(icodemend.demo.code_suggest
Element
p18161
(dp18162
g10
I0
sg11
S'set the patch linestyle'
p18163
sg12
Vset_yticklabels.linestyle
p18164
sg14
(lp18165
sg2
S'linestyle'
p18166
sba(icodemend.demo.code_suggest
Element
p18167
(dp18168
g10
I0
sg11
S'set the alignment for multiple lines layout .'
p18169
sg12
Vset_yticklabels.multialignment
p18170
sg14
(lp18171
sg2
S'multialignment'
p18172
sba(icodemend.demo.code_suggest
Element
p18173
(dp18174
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p18175
sg12
Vset_yticklabels.path_effects
p18176
sg14
(lp18177
sg2
S'path_effects'
p18178
sba(icodemend.demo.code_suggest
Element
p18179
(dp18180
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p18181
sg12
Vset_yticklabels.picker
p18182
sg14
(lp18183
sg2
S'picker'
p18184
sba(icodemend.demo.code_suggest
Element
p18185
(dp18186
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p18187
sg12
Vset_yticklabels.prop_cycle
p18188
sg14
(lp18189
sg2
S'prop_cycle'
p18190
sba(icodemend.demo.code_suggest
Element
p18191
(dp18192
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p18193
sg12
Vset_yticklabels.rasterized
p18194
sg14
(lp18195
sg2
S'rasterized'
p18196
sba(icodemend.demo.code_suggest
Element
p18197
(dp18198
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p18199
sg12
Vset_yticklabels.readonly
p18200
sg14
(lp18201
sg2
S'readonly'
p18202
sbag17349
a(icodemend.demo.code_suggest
Element
p18203
(dp18204
g10
I0
sg11
S'set the font size .'
p18205
sg12
Vset_yticklabels.size
p18206
sg14
(lp18207
sg2
S'size'
p18208
sbag10774
a(icodemend.demo.code_suggest
Element
p18209
(dp18210
g10
I0
sg11
S'sets the sketch parameters .'
p18211
sg12
Vset_yticklabels.sketch_params
p18212
sg14
(lp18213
sg2
S'sketch_params'
p18214
sbag17400
a(icodemend.demo.code_suggest
Element
p18215
(dp18216
g10
I0
sg11
S'set the font stretch ( horizontal condensation or expansion ) .'
p18217
sg12
Vset_yticklabels.stretch
p18218
sg14
(lp18219
sg2
S'stretch'
p18220
sba(icodemend.demo.code_suggest
Element
p18221
(dp18222
g10
I0
sg11
S'set the font style .'
p18223
sg12
Vset_yticklabels.style
p18224
sg14
(lp18225
sg2
S'style'
p18226
sba(icodemend.demo.code_suggest
Element
p18227
(dp18228
g10
I0
sg11
S'set the text string s'
p18229
sg12
Vset_yticklabels.text
p18230
sg14
(lp18231
sg2
S'text'
p18232
sba(icodemend.demo.code_suggest
Element
p18233
(dp18234
g10
I0
sg11
S'set a title for the axes .'
p18235
sg12
Vset_yticklabels.title
p18236
sg14
(lp18237
sg2
S'title'
p18238
sba(icodemend.demo.code_suggest
Element
p18239
(dp18240
g10
I0
sg11
S'set the transform instance used by this artist .'
p18241
sg12
Vset_yticklabels.transform
p18242
sg14
(lp18243
sg2
S'transform'
p18244
sba(icodemend.demo.code_suggest
Element
p18245
(dp18246
g10
I0
sg11
S'sets the url for the artist'
p18247
sg12
Vset_yticklabels.url
p18248
sg14
(lp18249
sg2
S'url'
p18250
sba(icodemend.demo.code_suggest
Element
p18251
(dp18252
g10
I0
sg11
S'set this text object to render using tex ( or not ) .'
p18253
sg12
Vset_yticklabels.usetex
p18254
sg14
(lp18255
sg2
S'usetex'
p18256
sba(icodemend.demo.code_suggest
Element
p18257
(dp18258
g10
I0
sg11
S"set the font variant , either ' normal ' or ' small-caps ' ."
p18259
sg12
Vset_yticklabels.variant
p18260
sg14
(lp18261
sg2
S'variant'
p18262
sba(icodemend.demo.code_suggest
Element
p18263
(dp18264
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p18265
sg12
Vset_yticklabels.vertices
p18266
sg14
(lp18267
sg2
S'vertices'
p18268
sba(icodemend.demo.code_suggest
Element
p18269
(dp18270
g10
I0
sg11
S"set the artist 's visiblity ."
p18271
sg12
Vset_yticklabels.visible
p18272
sg14
(lp18273
sg2
S'visible'
p18274
sba(icodemend.demo.code_suggest
Element
p18275
(dp18276
g10
I0
sg11
S'set the font weight .'
p18277
sg12
Vset_yticklabels.weight
p18278
sg14
(lp18279
sg2
S'weight'
p18280
sba(icodemend.demo.code_suggest
Element
p18281
(dp18282
g10
I0
sg11
S'sets the wrapping state for the text .'
p18283
sg12
Vset_yticklabels.wrap
p18284
sg14
(lp18285
sg2
S'wrap'
p18286
sba(icodemend.demo.code_suggest
Element
p18287
(dp18288
g10
I0
sg11
S'set the x position of the text'
p18289
sg12
Vset_yticklabels.x
p18290
sg14
(lp18291
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p18292
(dp18293
g10
I0
sg11
S'set the label for the xaxis .'
p18294
sg12
Vset_yticklabels.xlabel
p18295
sg14
(lp18296
sg2
S'xlabel'
p18297
sba(icodemend.demo.code_suggest
Element
p18298
(dp18299
g10
I0
sg11
S'set the data limits for the xaxis'
p18300
sg12
Vset_yticklabels.xlim
p18301
sg14
(lp18302
sg2
S'xlim'
p18303
sbag4116
a(icodemend.demo.code_suggest
Element
p18304
(dp18305
g10
I0
sg11
S'set the scaling of the x-axis'
p18306
sg12
Vset_yticklabels.xscale
p18307
sg14
(lp18308
sg2
S'xscale'
p18309
sba(icodemend.demo.code_suggest
Element
p18310
(dp18311
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p18312
sg12
Vset_yticklabels.xticklabels
p18313
sg14
(lp18314
sg2
S'xticklabels'
p18315
sbag17434
a(icodemend.demo.code_suggest
Element
p18316
(dp18317
g10
I0
sg11
S'set the y position of the text'
p18318
sg12
Vset_yticklabels.y
p18319
sg14
(lp18320
sg2
S'y'
sba(icodemend.demo.code_suggest
Element
p18321
(dp18322
g10
I0
sg11
S'set the label for the yaxis'
p18323
sg12
Vset_yticklabels.ylabel
p18324
sg14
(lp18325
sg2
S'ylabel'
p18326
sba(icodemend.demo.code_suggest
Element
p18327
(dp18328
g10
I0
sg11
S'set the data limits for the yaxis'
p18329
sg12
Vset_yticklabels.ylim
p18330
sg14
(lp18331
sg2
S'ylim'
p18332
sba(icodemend.demo.code_suggest
Element
p18333
(dp18334
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p18335
sg12
Vset_yticklabels.ymargin
p18336
sg14
(lp18337
sg2
S'ymargin'
p18338
sba(icodemend.demo.code_suggest
Element
p18339
(dp18340
g10
I0
sg11
S'set the scaling of the y-axis'
p18341
sg12
Vset_yticklabels.yscale
p18342
sg14
(lp18343
sg2
S'yscale'
p18344
sba(icodemend.demo.code_suggest
Element
p18345
(dp18346
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p18347
sg12
Vset_yticklabels.yticklabels
p18348
sg14
(lp18349
sg2
S'yticklabels'
p18350
sba(icodemend.demo.code_suggest
Element
p18351
(dp18352
g10
I0
sg11
S'set the y ticks with list of ticks'
p18353
sg12
Vset_yticklabels.yticks
p18354
sg14
(lp18355
sg2
S'yticks'
p18356
sba(icodemend.demo.code_suggest
Element
p18357
(dp18358
g10
I0
sg11
S'set the zorder for the artist .'
p18359
sg12
Vset_yticklabels.zorder
p18360
sg14
(lp18361
sg2
S'zorder'
p18362
sbasg2
g17953
sbs(S'add'
p18363
S'clip_on'
p18364
tp18365
(icodemend.demo.code_suggest
Element
p18366
(dp18367
g10
I0
sg11
S'set whether artist uses clipping .'
p18368
sg12
Vadd.clip_on
p18369
sg14
(lp18370
sg2
g18364
sbs(S'grid'
p18371
S'color_cycle'
p18372
tp18373
(icodemend.demo.code_suggest
Element
p18374
(dp18375
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p18376
sg12
Vgrid.color_cycle
p18377
sg14
(lp18378
sg2
g18372
sbs(S'set_yticklabels'
p18379
g18076
tp18380
g18071
s(g139
g140
g1563
tp18381
g1559
s(S'eventplot'
p18382
S'xticks'
p18383
tp18384
(icodemend.demo.code_suggest
Element
p18385
(dp18386
g10
I0
sg11
S'set the x ticks with list of ticks'
p18387
sg12
Veventplot.xticks
p18388
sg14
(lp18389
sg2
g18383
sbs(S'figtext'
p18390
g11245
tp18391
g11240
s(S'thetagrids'
p18392
S'y'
tp18393
(icodemend.demo.code_suggest
Element
p18394
(dp18395
g10
I0
sg11
S'set the y position of the text'
p18396
sg12
Vthetagrids.y
p18397
sg14
(lp18398
sg2
S'y'
sbs(g139
S'subplot_kw'
p18399
g1999
tp18400
g1995
s(g16
g132
S"'Firebrick'"
p18401
tp18402
(icodemend.demo.code_suggest
Element
p18403
(dp18404
g10
I1
sg11
S''
sg12
Vbar.color.'Firebrick'
p18405
sg14
(lp18406
sg2
g18401
sbs(g944
g132
S"'red'"
p18407
tp18408
(icodemend.demo.code_suggest
Element
p18409
(dp18410
g10
I2
sg11
S''
sg12
Vbarh.color.'red'
p18411
sg14
(lp18412
sg2
g18407
sbs(g93
g627
S"'large'"
p18413
tp18414
(icodemend.demo.code_suggest
Element
p18415
(dp18416
g10
I2
sg11
S''
sg12
Vannotate.size.'large'
p18417
sg14
(lp18418
sg2
g18413
sbs(g332
g5546
S'trans_ticklabels'
p18419
tp18420
(icodemend.demo.code_suggest
Element
p18421
(dp18422
g10
I1
sg11
S''
sg12
Vtext.transform.trans_ticklabels
p18423
sg14
(lp18424
sg2
g18419
sbs(g101
g4274
S'my_marker'
p18425
tp18426
(icodemend.demo.code_suggest
Element
p18427
(dp18428
g10
I1
sg11
S''
sg12
Vscatter.marker.my_marker
p18429
sg14
(lp18430
sg2
g18425
sbs(g117
g118
S"'Station 1'"
p18431
tp18432
(icodemend.demo.code_suggest
Element
p18433
(dp18434
g10
I1
sg11
S''
sg12
Vplot.label.'Station 1'
p18435
sg14
(lp18436
sg2
g18431
sbsS'xlat'
p18437
(icodemend.demo.code_suggest
Element
p18438
(dp18439
g10
I0
sg11
S'translate text , returns the modified text .'
p18440
sg12
Vxlat
p18441
sg14
(lp18442
(icodemend.demo.code_suggest
Element
p18443
(dp18444
g10
I0
sg11
S'translate text , returns the modified text .'
p18445
sg12
Vxlat.text
p18446
sg14
(lp18447
sg2
S'text'
p18448
sbasg2
g18437
sbs(S'loglog'
p18449
S'markerfacecoloralt'
p18450
tp18451
(icodemend.demo.code_suggest
Element
p18452
(dp18453
g10
I0
sg11
S'set the alternate marker face color .'
p18454
sg12
Vloglog.markerfacecoloralt
p18455
sg14
(lp18456
sg2
g18450
sbsS'draw_idle'
p18457
(icodemend.demo.code_suggest
Element
p18458
(dp18459
g10
I19
sg11
S'queue redraw of the agg buffer and request qt paintevent . draw ( ) only if idle ; defaults to draw but backends can overrride'
p18460
sg12
Vdraw_idle
p18461
sg14
(lp18462
sg2
g18457
sbs(S'magnitude_spectrum'
p18463
S'hatch'
p18464
tp18465
(icodemend.demo.code_suggest
Element
p18466
(dp18467
g10
I0
sg11
S'set the hatching pattern'
p18468
sg12
Vmagnitude_spectrum.hatch
p18469
sg14
(lp18470
sg2
g18464
sbs(g117
g118
S"'Lo'"
p18471
tp18472
(icodemend.demo.code_suggest
Element
p18473
(dp18474
g10
I1
sg11
S''
sg12
Vplot.label.'Lo'
p18475
sg14
(lp18476
sg2
g18471
sbs(S'semilogy'
p18477
S'snap'
p18478
tp18479
(icodemend.demo.code_suggest
Element
p18480
(dp18481
g10
I0
sg11
S'sets the snap setting which may be'
p18482
sg12
Vsemilogy.snap
p18483
sg14
(lp18484
sg2
g18478
sbs(g582
g2251
g3447
tp18485
g3443
s(S'cohere'
p18486
S'alpha'
p18487
tp18488
(icodemend.demo.code_suggest
Element
p18489
(dp18490
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p18491
sg12
Vcohere.alpha
p18492
sg14
(lp18493
sg2
g18487
sbs(g93
g161
S'(0.05, 0.95)'
p18494
tp18495
(icodemend.demo.code_suggest
Element
p18496
(dp18497
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/05, 0/95)
p18498
sg14
(lp18499
sg2
g18494
sbsS'get_dashlength'
p18500
(icodemend.demo.code_suggest
Element
p18501
(dp18502
g10
I0
sg11
S'get the length of the dash .'
p18503
sg12
Vget_dashlength
p18504
sg14
(lp18505
sg2
g18500
sbs(S'get_ylim'
p18506
S'top'
p18507
tp18508
(icodemend.demo.code_suggest
Element
p18509
(dp18510
g10
I0
sg11
S'get the y-axis range [ bottom , top ]'
p18511
sg12
Vget_ylim.top
p18512
sg14
(lp18513
sg2
g18507
sbs(g117
g5775
S"'w'"
p18514
tp18515
(icodemend.demo.code_suggest
Element
p18516
(dp18517
g10
I4
sg11
S''
sg12
Vplot.markerfacecolor.'w'
p18518
sg14
(lp18519
sg2
g18514
sbs(S'boxplot'
p18520
S'flierprops'
p18521
tp18522
(icodemend.demo.code_suggest
Element
p18523
(dp18524
g10
I1
sg11
S'if provided , will set the plotting style of the fliers'
p18525
sg12
Vboxplot.flierprops
p18526
sg14
(lp18527
(icodemend.demo.code_suggest
Element
p18528
(dp18529
g10
I1
sg11
S''
sg12
Vboxplot.flierprops.{'markeredgecolor': 'k', 'markeredgewidth': 1}
p18530
sg14
(lp18531
sg2
S"{'markeredgecolor': 'k', 'markeredgewidth': 1}"
p18532
sbasg2
g18521
sbs(S'plot'
p18533
S'anchor'
p18534
tp18535
(icodemend.demo.code_suggest
Element
p18536
(dp18537
g10
I0
sg11
S'anchor'
p18538
sg12
Vplot.anchor
p18539
sg14
(lp18540
sg2
g18534
sbs(g452
g118
S"'set2'"
p18541
tp18542
(icodemend.demo.code_suggest
Element
p18543
(dp18544
g10
I1
sg11
S''
sg12
Verrorbar.label.'set2'
p18545
sg14
(lp18546
sg2
g18541
sbsS'set_units'
p18547
(icodemend.demo.code_suggest
Element
p18548
(dp18549
g10
I0
sg11
S'set the units for axis'
p18550
sg12
Vset_units
p18551
sg14
(lp18552
sg2
g18547
sbs(S'angle_spectrum'
p18553
S'markeredgecolor'
p18554
tp18555
(icodemend.demo.code_suggest
Element
p18556
(dp18557
g10
I0
sg11
S'set the marker edge color'
p18558
sg12
Vangle_spectrum.markeredgecolor
p18559
sg14
(lp18560
sg2
g18554
sbs(g452
g453
g7269
tp18561
g7265
sS'set_radius'
p18562
(icodemend.demo.code_suggest
Element
p18563
(dp18564
g10
I0
sg11
S'set the radius of the circle'
p18565
sg12
Vset_radius
p18566
sg14
(lp18567
sg2
g18562
sbs(S'loglog'
p18568
S'dashes'
p18569
tp18570
(icodemend.demo.code_suggest
Element
p18571
(dp18572
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p18573
sg12
Vloglog.dashes
p18574
sg14
(lp18575
sg2
g18569
sbs(g252
g5782
S'2'
tp18576
g14410
s(g16
g132
S'current_color'
p18577
tp18578
(icodemend.demo.code_suggest
Element
p18579
(dp18580
g10
I1
sg11
S''
sg12
Vbar.color.current_color
p18581
sg14
(lp18582
sg2
g18577
sbs(S'fill'
p18583
S'agg_filter'
p18584
tp18585
(icodemend.demo.code_suggest
Element
p18586
(dp18587
g10
I0
sg11
S'set agg_filter fuction .'
p18588
sg12
Vfill.agg_filter
p18589
sg14
(lp18590
sg2
g18584
sbsS'set_facecolors'
p18591
(icodemend.demo.code_suggest
Element
p18592
(dp18593
g10
I10
sg11
S'alias for set_facecolor'
p18594
sg12
Vset_facecolors
p18595
sg14
(lp18596
sg2
g18591
sbs(g252
g253
g14116
tp18597
g14112
s(g93
g161
S'(x[70], y[70])'
p18598
tp18599
(icodemend.demo.code_suggest
Element
p18600
(dp18601
g10
I1
sg11
S''
sg12
Vannotate.xy.(x[70], y[70])
p18602
sg14
(lp18603
sg2
g18598
sbs(g93
S'textcoords'
p18604
S'an'
p18605
tp18606
(icodemend.demo.code_suggest
Element
p18607
(dp18608
g10
I1
sg11
S''
sg12
Vannotate.textcoords.an
p18609
sg14
(lp18610
sg2
g18605
sbs(S'PathEffectRenderer'
p18611
S'path_effects'
p18612
tp18613
(icodemend.demo.code_suggest
Element
p18614
(dp18615
g10
I0
sg11
S'the path effects which this renderer represents .'
p18616
sg12
VPathEffectRenderer.path_effects
p18617
sg14
(lp18618
sg2
g18612
sbs(g117
S'x'
S"'DAC3'"
p18619
tp18620
(icodemend.demo.code_suggest
Element
p18621
(dp18622
g10
I2
sg11
S''
sg12
Vplot.x.'DAC3'
p18623
sg14
(lp18624
sg2
g18619
sbs(S'center_matrix'
p18625
S'M'
tp18626
g4489
s(S'semilogx'
p18627
S'size_inches'
p18628
tp18629
(icodemend.demo.code_suggest
Element
p18630
(dp18631
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p18632
sg12
Vsemilogx.size_inches
p18633
sg14
(lp18634
sg2
g18628
sbs(S'bxp'
p18635
S'widths'
p18636
tp18637
(icodemend.demo.code_suggest
Element
p18638
(dp18639
g10
I0
sg11
S'either a scalar or a vector and sets the width of each box . the default is 0.5 , or 0.15*(distance between extreme positions ) if that is smaller .'
p18640
sg12
Vbxp.widths
p18641
sg14
(lp18642
sg2
g18636
sbsS'angle_spectrum'
p18643
(icodemend.demo.code_suggest
Element
p18644
(dp18645
g10
I1
sg11
S'plot the angle spectrum .'
p18646
sg12
Vangle_spectrum
p18647
sg14
(lp18648
(icodemend.demo.code_suggest
Element
p18649
(dp18650
g10
I1
sg11
S'the sampling frequency ( samples per time unit ) . it is used to calculate the fourier frequencies , freqs , in cycles per time unit . the default value is 2 .'
p18651
sg12
Vangle_spectrum.Fs
p18652
sg14
(lp18653
g7817
asg2
S'Fs'
p18654
sba(icodemend.demo.code_suggest
Element
p18655
(dp18656
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p18657
sg12
Vangle_spectrum._interpolation_steps
p18658
sg14
(lp18659
sg2
S'_interpolation_steps'
p18660
sba(icodemend.demo.code_suggest
Element
p18661
(dp18662
g10
I0
sg11
S'set agg_filter fuction .'
p18663
sg12
Vangle_spectrum.agg_filter
p18664
sg14
(lp18665
sg2
S'agg_filter'
p18666
sba(icodemend.demo.code_suggest
Element
p18667
(dp18668
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p18669
sg12
Vangle_spectrum.alpha
p18670
sg14
(lp18671
sg2
S'alpha'
p18672
sba(icodemend.demo.code_suggest
Element
p18673
(dp18674
g10
I0
sg11
S'anchor'
p18675
sg12
Vangle_spectrum.anchor
p18676
sg14
(lp18677
sg2
S'anchor'
p18678
sba(icodemend.demo.code_suggest
Element
p18679
(dp18680
g10
I0
sg11
S"set the artist 's animation state ."
p18681
sg12
Vangle_spectrum.animated
p18682
sg14
(lp18683
sg2
S'animated'
p18684
sba(icodemend.demo.code_suggest
Element
p18685
(dp18686
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p18687
sg12
Vangle_spectrum.antialiased
p18688
sg14
(lp18689
sg2
S'antialiased'
p18690
sba(icodemend.demo.code_suggest
Element
p18691
(dp18692
g10
I0
sg11
S'aspect'
p18693
sg12
Vangle_spectrum.aspect
p18694
sg14
(lp18695
sg2
S'aspect'
p18696
sba(icodemend.demo.code_suggest
Element
p18697
(dp18698
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p18699
sg12
Vangle_spectrum.axes
p18700
sg14
(lp18701
sg2
S'axes'
p18702
sbag2836
a(icodemend.demo.code_suggest
Element
p18703
(dp18704
g10
I0
sg11
S'set whether artist uses clipping .'
p18705
sg12
Vangle_spectrum.clip_on
p18706
sg14
(lp18707
sg2
S'clip_on'
p18708
sba(icodemend.demo.code_suggest
Element
p18709
(dp18710
g10
I0
sg11
S"set the artist 's clip path , which may be"
p18711
sg12
Vangle_spectrum.clip_path
p18712
sg14
(lp18713
sg2
S'clip_path'
p18714
sba(icodemend.demo.code_suggest
Element
p18715
(dp18716
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p18717
sg12
Vangle_spectrum.closed
p18718
sg14
(lp18719
sg2
S'closed'
p18720
sba(icodemend.demo.code_suggest
Element
p18721
(dp18722
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p18723
sg12
Vangle_spectrum.codes
p18724
sg14
(lp18725
sg2
S'codes'
p18726
sbag7838
a(icodemend.demo.code_suggest
Element
p18727
(dp18728
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p18729
sg12
Vangle_spectrum.color_cycle
p18730
sg14
(lp18731
sg2
S'color_cycle'
p18732
sba(icodemend.demo.code_suggest
Element
p18733
(dp18734
g10
I0
sg11
S'replace the contains test used by this artist .'
p18735
sg12
Vangle_spectrum.contains
p18736
sg14
(lp18737
sg2
S'contains'
p18738
sba(icodemend.demo.code_suggest
Element
p18739
(dp18740
g10
I0
sg11
S'set the cursor property as'
p18741
sg12
Vangle_spectrum.cursor_props
p18742
sg14
(lp18743
sg2
S'cursor_props'
p18744
sba(icodemend.demo.code_suggest
Element
p18745
(dp18746
g10
I0
sg11
S'set the cap style for dashed linestyles'
p18747
sg12
Vangle_spectrum.dash_capstyle
p18748
sg14
(lp18749
sg2
S'dash_capstyle'
p18750
sba(icodemend.demo.code_suggest
Element
p18751
(dp18752
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p18753
sg12
Vangle_spectrum.dash_joinstyle
p18754
sg14
(lp18755
sg2
S'dash_joinstyle'
p18756
sba(icodemend.demo.code_suggest
Element
p18757
(dp18758
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p18759
sg12
Vangle_spectrum.dashes
p18760
sg14
(lp18761
sg2
S'dashes'
p18762
sba(icodemend.demo.code_suggest
Element
p18763
(dp18764
g10
I0
sg11
S'set the drawstyle of the plot'
p18765
sg12
Vangle_spectrum.drawstyle
p18766
sg14
(lp18767
sg2
S'drawstyle'
p18768
sba(icodemend.demo.code_suggest
Element
p18769
(dp18770
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p18771
sg12
Vangle_spectrum.figure
p18772
sg14
(lp18773
sg2
S'figure'
p18774
sba(icodemend.demo.code_suggest
Element
p18775
(dp18776
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p18777
sg12
Vangle_spectrum.fillstyle
p18778
sg14
(lp18779
sg2
S'fillstyle'
p18780
sba(icodemend.demo.code_suggest
Element
p18781
(dp18782
g10
I0
sg11
S'returns the tuple ( spectrum , freqs , line ) :'
p18783
sg12
Vangle_spectrum.freqs
p18784
sg14
(lp18785
sg2
S'freqs'
p18786
sba(icodemend.demo.code_suggest
Element
p18787
(dp18788
g10
I0
sg11
S'sets the ( group ) id for the artist'
p18789
sg12
Vangle_spectrum.gid
p18790
sg14
(lp18791
sg2
S'gid'
p18792
sba(icodemend.demo.code_suggest
Element
p18793
(dp18794
g10
I0
sg11
S'set the hatching pattern'
p18795
sg12
Vangle_spectrum.hatch
p18796
sg14
(lp18797
sg2
S'hatch'
p18798
sba(icodemend.demo.code_suggest
Element
p18799
(dp18800
g10
I0
sg11
S'set the label to s for auto legend .'
p18801
sg12
Vangle_spectrum.label
p18802
sg14
(lp18803
sg2
S'label'
p18804
sba(icodemend.demo.code_suggest
Element
p18805
(dp18806
g10
I0
sg11
S'returns the tuple ( spectrum , freqs , line ) :'
p18807
sg12
Vangle_spectrum.line
p18808
sg14
(lp18809
sg2
S'line'
p18810
sba(icodemend.demo.code_suggest
Element
p18811
(dp18812
g10
I0
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p18813
sg12
Vangle_spectrum.linestyle
p18814
sg14
(lp18815
sg2
S'linestyle'
p18816
sba(icodemend.demo.code_suggest
Element
p18817
(dp18818
g10
I0
sg11
S'set the line width in points'
p18819
sg12
Vangle_spectrum.linewidth
p18820
sg14
(lp18821
sg2
S'linewidth'
p18822
sbag6273
ag18556
a(icodemend.demo.code_suggest
Element
p18823
(dp18824
g10
I0
sg11
S'set the marker edge width in points'
p18825
sg12
Vangle_spectrum.markeredgewidth
p18826
sg14
(lp18827
sg2
S'markeredgewidth'
p18828
sba(icodemend.demo.code_suggest
Element
p18829
(dp18830
g10
I0
sg11
S'set the marker face color .'
p18831
sg12
Vangle_spectrum.markerfacecolor
p18832
sg14
(lp18833
sg2
S'markerfacecolor'
p18834
sba(icodemend.demo.code_suggest
Element
p18835
(dp18836
g10
I0
sg11
S'set the alternate marker face color .'
p18837
sg12
Vangle_spectrum.markerfacecoloralt
p18838
sg14
(lp18839
sg2
S'markerfacecoloralt'
p18840
sba(icodemend.demo.code_suggest
Element
p18841
(dp18842
g10
I0
sg11
S'set the marker size in points'
p18843
sg12
Vangle_spectrum.markersize
p18844
sg14
(lp18845
sg2
S'markersize'
p18846
sba(icodemend.demo.code_suggest
Element
p18847
(dp18848
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p18849
sg12
Vangle_spectrum.markevery
p18850
sg14
(lp18851
sg2
S'markevery'
p18852
sba(icodemend.demo.code_suggest
Element
p18853
(dp18854
g10
I0
sg11
S'compute the angle spectrum ( wrapped phase spectrum ) of x . data is padded to a length of pad_to and the windowing function window is applied to the signal .'
p18855
sg12
Vangle_spectrum.pad_to
p18856
sg14
(lp18857
sg2
S'pad_to'
p18858
sba(icodemend.demo.code_suggest
Element
p18859
(dp18860
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p18861
sg12
Vangle_spectrum.path_effects
p18862
sg14
(lp18863
sg2
S'path_effects'
p18864
sba(icodemend.demo.code_suggest
Element
p18865
(dp18866
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p18867
sg12
Vangle_spectrum.picker
p18868
sg14
(lp18869
sg2
S'picker'
p18870
sba(icodemend.demo.code_suggest
Element
p18871
(dp18872
g10
I0
sg11
S'sets the pick radius used for containment tests'
p18873
sg12
Vangle_spectrum.pickradius
p18874
sg14
(lp18875
sg2
S'pickradius'
p18876
sba(icodemend.demo.code_suggest
Element
p18877
(dp18878
g10
I0
sg11
S'set the axes position with'
p18879
sg12
Vangle_spectrum.position
p18880
sg14
(lp18881
sg2
S'position'
p18882
sbag8005
a(icodemend.demo.code_suggest
Element
p18883
(dp18884
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p18885
sg12
Vangle_spectrum.rasterized
p18886
sg14
(lp18887
sg2
S'rasterized'
p18888
sba(icodemend.demo.code_suggest
Element
p18889
(dp18890
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p18891
sg12
Vangle_spectrum.readonly
p18892
sg14
(lp18893
sg2
S'readonly'
p18894
sba(icodemend.demo.code_suggest
Element
p18895
(dp18896
g10
I0
sg11
S"specifies which sides of the spectrum to return . default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided ."
p18897
sg12
Vangle_spectrum.sides
p18898
sg14
(lp18899
sg2
S'sides'
p18900
sba(icodemend.demo.code_suggest
Element
p18901
(dp18902
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p18903
sg12
Vangle_spectrum.size_inches
p18904
sg14
(lp18905
sg2
S'size_inches'
p18906
sbag10263
a(icodemend.demo.code_suggest
Element
p18907
(dp18908
g10
I0
sg11
S'sets the snap setting which may be'
p18909
sg12
Vangle_spectrum.snap
p18910
sg14
(lp18911
sg2
S'snap'
p18912
sba(icodemend.demo.code_suggest
Element
p18913
(dp18914
g10
I0
sg11
S'set the cap style for solid linestyles'
p18915
sg12
Vangle_spectrum.solid_capstyle
p18916
sg14
(lp18917
sg2
S'solid_capstyle'
p18918
sbag7417
a(icodemend.demo.code_suggest
Element
p18919
(dp18920
g10
I0
sg11
S'returns the tuple ( spectrum , freqs , line ) :'
p18921
sg12
Vangle_spectrum.spectrum
p18922
sg14
(lp18923
sg2
S'spectrum'
p18924
sba(icodemend.demo.code_suggest
Element
p18925
(dp18926
g10
I0
sg11
S'set a title for the axes .'
p18927
sg12
Vangle_spectrum.title
p18928
sg14
(lp18929
sg2
S'title'
p18930
sba(icodemend.demo.code_suggest
Element
p18931
(dp18932
g10
I0
sg11
S'set the transformation instance used by this artist'
p18933
sg12
Vangle_spectrum.transform
p18934
sg14
(lp18935
sg2
S'transform'
p18936
sba(icodemend.demo.code_suggest
Element
p18937
(dp18938
g10
I0
sg11
S'sets the url for the artist'
p18939
sg12
Vangle_spectrum.url
p18940
sg14
(lp18941
sg2
S'url'
p18942
sba(icodemend.demo.code_suggest
Element
p18943
(dp18944
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p18945
sg12
Vangle_spectrum.vertices
p18946
sg14
(lp18947
sg2
S'vertices'
p18948
sbag5220
a(icodemend.demo.code_suggest
Element
p18949
(dp18950
g10
I0
sg11
S'compute the angle spectrum ( wrapped phase spectrum ) of x . data is padded to a length of pad_to and the windowing function window is applied to the signal .|||a function or a vector of length nfft . to create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. the default is window_hanning ( ) . if a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment .'
p18951
sg12
Vangle_spectrum.window
p18952
sg14
(lp18953
sg2
S'window'
p18954
sba(icodemend.demo.code_suggest
Element
p18955
(dp18956
g10
I0
sg11
S'compute the angle spectrum ( wrapped phase spectrum ) of x . data is padded to a length of pad_to and the windowing function window is applied to the signal .'
p18957
sg12
Vangle_spectrum.x
p18958
sg14
(lp18959
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p18960
(dp18961
g10
I0
sg11
S'set the data np.array for x'
p18962
sg12
Vangle_spectrum.xdata
p18963
sg14
(lp18964
sg2
S'xdata'
p18965
sba(icodemend.demo.code_suggest
Element
p18966
(dp18967
g10
I0
sg11
S'set the label for the xaxis .'
p18968
sg12
Vangle_spectrum.xlabel
p18969
sg14
(lp18970
sg2
S'xlabel'
p18971
sba(icodemend.demo.code_suggest
Element
p18972
(dp18973
g10
I0
sg11
S'set the data limits for the xaxis'
p18974
sg12
Vangle_spectrum.xlim
p18975
sg14
(lp18976
sg2
S'xlim'
p18977
sba(icodemend.demo.code_suggest
Element
p18978
(dp18979
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p18980
sg12
Vangle_spectrum.xmargin
p18981
sg14
(lp18982
sg2
S'xmargin'
p18983
sba(icodemend.demo.code_suggest
Element
p18984
(dp18985
g10
I0
sg11
S'set the scaling of the x-axis'
p18986
sg12
Vangle_spectrum.xscale
p18987
sg14
(lp18988
sg2
S'xscale'
p18989
sba(icodemend.demo.code_suggest
Element
p18990
(dp18991
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p18992
sg12
Vangle_spectrum.xticklabels
p18993
sg14
(lp18994
sg2
S'xticklabels'
p18995
sba(icodemend.demo.code_suggest
Element
p18996
(dp18997
g10
I0
sg11
S'set the x ticks with list of ticks'
p18998
sg12
Vangle_spectrum.xticks
p18999
sg14
(lp19000
sg2
S'xticks'
p19001
sba(icodemend.demo.code_suggest
Element
p19002
(dp19003
g10
I0
sg11
S'set the data np.array for y'
p19004
sg12
Vangle_spectrum.ydata
p19005
sg14
(lp19006
sg2
S'ydata'
p19007
sba(icodemend.demo.code_suggest
Element
p19008
(dp19009
g10
I0
sg11
S'set the label for the yaxis'
p19010
sg12
Vangle_spectrum.ylabel
p19011
sg14
(lp19012
sg2
S'ylabel'
p19013
sba(icodemend.demo.code_suggest
Element
p19014
(dp19015
g10
I0
sg11
S'set the data limits for the yaxis'
p19016
sg12
Vangle_spectrum.ylim
p19017
sg14
(lp19018
sg2
S'ylim'
p19019
sba(icodemend.demo.code_suggest
Element
p19020
(dp19021
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p19022
sg12
Vangle_spectrum.ymargin
p19023
sg14
(lp19024
sg2
S'ymargin'
p19025
sba(icodemend.demo.code_suggest
Element
p19026
(dp19027
g10
I0
sg11
S'set the scaling of the y-axis'
p19028
sg12
Vangle_spectrum.yscale
p19029
sg14
(lp19030
sg2
S'yscale'
p19031
sbag10652
a(icodemend.demo.code_suggest
Element
p19032
(dp19033
g10
I0
sg11
S'set the y ticks with list of ticks'
p19034
sg12
Vangle_spectrum.yticks
p19035
sg14
(lp19036
sg2
S'yticks'
p19037
sba(icodemend.demo.code_suggest
Element
p19038
(dp19039
g10
I0
sg11
S'set the zorder for the artist .'
p19040
sg12
Vangle_spectrum.zorder
p19041
sg14
(lp19042
sg2
S'zorder'
p19043
sbasg2
g18643
sbs(g1170
g118
S"'h2'"
p19044
tp19045
(icodemend.demo.code_suggest
Element
p19046
(dp19047
g10
I2
sg11
S''
sg12
Vhist.label.'h2'
p19048
sg14
(lp19049
sg2
g19044
sbsS'weight_as_number'
p19050
(icodemend.demo.code_suggest
Element
p19051
(dp19052
g10
I0
sg11
S'return the weight property as a numeric value .'
p19053
sg12
Vweight_as_number
p19054
sg14
(lp19055
sg2
g19050
sbs(g1170
g118
S"['1', '0']"
p19056
tp19057
(icodemend.demo.code_suggest
Element
p19058
(dp19059
g10
I1
sg11
S''
sg12
Vhist.label.['1', '0']
p19060
sg14
(lp19061
sg2
g19056
sbsS'afmFontProperty'
p19062
(icodemend.demo.code_suggest
Element
p19063
(dp19064
g10
I0
sg11
S'a function for populating a fontkey instance by extracting information from the afm font file .'
p19065
sg12
VafmFontProperty
p19066
sg14
(lp19067
(icodemend.demo.code_suggest
Element
p19068
(dp19069
g10
I0
sg11
S'font is a class:afm instance .'
p19070
sg12
VafmFontProperty.font
p19071
sg14
(lp19072
sg2
S'font'
p19073
sbasg2
g19062
sbs(g139
g18399
g2039
tp19074
g2035
s(g944
g2364
g12758
tp19075
(icodemend.demo.code_suggest
Element
p19076
(dp19077
g10
I1
sg11
S''
sg12
Vbarh.xerr.stds
p19078
sg14
(lp19079
sg2
g12758
sbs(g4281
g4297
tp19080
g4292
s(S'plot_day_summary_oclh'
p19081
S'colordown'
p19082
tp19083
(icodemend.demo.code_suggest
Element
p19084
(dp19085
g10
I0
sg11
S'the color of the lines where close < open'
p19086
sg12
Vplot_day_summary_oclh.colordown
p19087
sg14
(lp19088
sg2
g19082
sbs(g252
g7452
g14295
tp19089
g14291
s(S'annotate'
p19090
S'url'
p19091
tp19092
(icodemend.demo.code_suggest
Element
p19093
(dp19094
g10
I0
sg11
S'sets the url for the artist'
p19095
sg12
Vannotate.url
p19096
sg14
(lp19097
sg2
g19091
sbs(g101
S's'
g7554
tp19098
g7550
s(g5562
g515
g10861
tp19099
g10857
s(S'semilogy'
p19100
S'yscale'
p19101
tp19102
(icodemend.demo.code_suggest
Element
p19103
(dp19104
g10
I0
sg11
S'set the scaling of the y-axis'
p19105
sg12
Vsemilogy.yscale
p19106
sg14
(lp19107
sg2
g19101
sbs(S'update_units'
p19108
S'data'
p19109
tp19110
(icodemend.demo.code_suggest
Element
p19111
(dp19112
g10
I0
sg11
S'introspect data for units converter and update the axis.converter instance if necessary . return true if data is registered for unit conversion .'
p19113
sg12
Vupdate_units.data
p19114
sg14
(lp19115
sg2
g19109
sbs(g101
S's'
g7544
tp19116
g7540
s(g252
g1010
g13990
tp19117
g13986
s(S'broken_barh'
p19118
S'hatch'
p19119
tp19120
(icodemend.demo.code_suggest
Element
p19121
(dp19122
g10
I0
sg11
S'set the hatching pattern'
p19123
sg12
Vbroken_barh.hatch
p19124
sg14
(lp19125
sg2
g19119
sbs(S'matshow'
p19126
S'Z'
tp19127
(icodemend.demo.code_suggest
Element
p19128
(dp19129
g10
I0
sg11
S'the matrix to be displayed .'
p19130
sg12
Vmatshow.Z
p19131
sg14
(lp19132
sg2
S'Z'
sbs(S'fetch_historical_yahoo'
p19133
S'date1'
p19134
tp19135
(icodemend.demo.code_suggest
Element
p19136
(dp19137
g10
I0
sg11
S'start date'
p19138
sg12
Vfetch_historical_yahoo.date1
p19139
sg14
(lp19140
sg2
g19134
sbs(S'rgrids'
p19141
S'y'
tp19142
(icodemend.demo.code_suggest
Element
p19143
(dp19144
g10
I0
sg11
S'set the y position of the text'
p19145
sg12
Vrgrids.y
p19146
sg14
(lp19147
sg2
S'y'
sbs(S'semilogy'
p19148
S'position'
p19149
tp19150
(icodemend.demo.code_suggest
Element
p19151
(dp19152
g10
I0
sg11
S'set the axes position with'
p19153
sg12
Vsemilogy.position
p19154
sg14
(lp19155
sg2
g19149
sbs(S'axvline'
p19156
S'closed'
p19157
tp19158
(icodemend.demo.code_suggest
Element
p19159
(dp19160
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p19161
sg12
Vaxvline.closed
p19162
sg14
(lp19163
sg2
g19157
sbsS'hitlist'
p19164
(icodemend.demo.code_suggest
Element
p19165
(dp19166
g10
I1
sg11
S'list the children of the artist which contain the mouse event event .'
p19167
sg12
Vhitlist
p19168
sg14
(lp19169
(icodemend.demo.code_suggest
Element
p19170
(dp19171
g10
I0
sg11
S'list the children of the artist which contain the mouse event event .'
p19172
sg12
Vhitlist.event
p19173
sg14
(lp19174
sg2
S'event'
p19175
sbasg2
g19164
sbsS'to_html5_video'
p19176
(icodemend.demo.code_suggest
Element
p19177
(dp19178
g10
I0
sg11
S'returns animation as an html5 video tag .'
p19179
sg12
Vto_html5_video
p19180
sg14
(lp19181
sg2
g19176
sbs(g109
S'format'
p19182
S"'svg'"
p19183
tp19184
(icodemend.demo.code_suggest
Element
p19185
(dp19186
g10
I4
sg11
S''
sg12
Vsavefig.format.'svg'
p19187
sg14
(lp19188
sg2
g19183
sbs(S'hist'
p19189
S'n'
tp19190
(icodemend.demo.code_suggest
Element
p19191
(dp19192
g10
I0
sg11
S'compute and draw the histogram of x . the return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .'
p19193
sg12
Vhist.n
p19194
sg14
(lp19195
sg2
S'n'
sbs(g101
g8538
S"''"
p19196
tp19197
(icodemend.demo.code_suggest
Element
p19198
(dp19199
g10
I1
sg11
S''
sg12
Vscatter.edgecolors.''
p19200
sg14
(lp19201
sg2
g19196
sbsS'get_usetex'
p19202
(icodemend.demo.code_suggest
Element
p19203
(dp19204
g10
I0
sg11
S'return whether this text object will render using tex .'
p19205
sg12
Vget_usetex
p19206
sg14
(lp19207
sg2
g19202
sbs(g139
g140
g1548
tp19208
g1544
s(S'rec2csv'
p19209
S'r'
tp19210
(icodemend.demo.code_suggest
Element
p19211
(dp19212
g10
I0
sg11
S'save the data from numpy recarray r into a comma-/space-/tab-delimited file . the record array dtype names will be used for column headers .'
p19213
sg12
Vrec2csv.r
p19214
sg14
(lp19215
sg2
S'r'
sbs(S'annotate'
p19216
S'stretch'
p19217
tp19218
(icodemend.demo.code_suggest
Element
p19219
(dp19220
g10
I0
sg11
S'set the font stretch ( horizontal condensation or expansion ) .'
p19221
sg12
Vannotate.stretch
p19222
sg14
(lp19223
sg2
g19217
sbs(S'getp'
p19224
S'ymargin'
p19225
tp19226
(icodemend.demo.code_suggest
Element
p19227
(dp19228
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p19229
sg12
Vgetp.ymargin
p19230
sg14
(lp19231
sg2
g19225
sbs(S'barh'
p19232
S'joinstyle'
p19233
tp19234
(icodemend.demo.code_suggest
Element
p19235
(dp19236
g10
I0
sg11
S'set the patch joinstyle'
p19237
sg12
Vbarh.joinstyle
p19238
sg14
(lp19239
sg2
g19233
sbs(S'axhline'
p19240
g3591
tp19241
g3586
s(S'grid'
p19242
S'dash_joinstyle'
p19243
tp19244
(icodemend.demo.code_suggest
Element
p19245
(dp19246
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p19247
sg12
Vgrid.dash_joinstyle
p19248
sg14
(lp19249
sg2
g19243
sbs(S'barh'
p19250
S'linestyle'
p19251
tp19252
(icodemend.demo.code_suggest
Element
p19253
(dp19254
g10
I0
sg11
S'set the patch linestyle'
p19255
sg12
Vbarh.linestyle
p19256
sg14
(lp19257
sg2
g19251
sbs(g6217
g132
g132
tp19258
g2444
s(g10369
g13047
g13042
tp19259
g13038
sS'set_alpha'
p19260
(icodemend.demo.code_suggest
Element
p19261
(dp19262
g10
I44
sg11
S'set the alpha tranparencies of the collection .'
p19263
sg12
Vset_alpha
p19264
sg14
(lp19265
g8648
asg2
g19260
sbs(S'contourf'
p19266
S'colors'
p19267
tp19268
(icodemend.demo.code_suggest
Element
p19269
(dp19270
g10
I8
sg11
S"if none , the colormap specified by cmap will be used . if a string , like ' r ' or ' red ' , all levels will be plotted in this color . if a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified ."
p19271
sg12
Vcontourf.colors
p19272
sg14
(lp19273
(icodemend.demo.code_suggest
Element
p19274
(dp19275
g10
I2
sg11
S''
sg12
Vcontourf.colors.('r', 'g', 'b')
p19276
sg14
(lp19277
sg2
S"('r', 'g', 'b')"
p19278
sba(icodemend.demo.code_suggest
Element
p19279
(dp19280
g10
I1
sg11
S''
sg12
Vcontourf.colors.'w'
p19281
sg14
(lp19282
sg2
S"'w'"
p19283
sba(icodemend.demo.code_suggest
Element
p19284
(dp19285
g10
I1
sg11
S''
sg12
Vcontourf.colors.('#ff0000', '#ff9900', '#999900', 'w', '#009999', '#0099ff', '#0000ff')
p19286
sg14
(lp19287
sg2
S"('#ff0000', '#ff9900', '#999900', 'w', '#009999', '#0099ff', '#0000ff')"
p19288
sba(icodemend.demo.code_suggest
Element
p19289
(dp19290
g10
I1
sg11
S''
sg12
Vcontourf.colors.['blue']
p19291
sg14
(lp19292
sg2
S"['blue']"
p19293
sba(icodemend.demo.code_suggest
Element
p19294
(dp19295
g10
I1
sg11
S''
sg12
Vcontourf.colors.['green']
p19296
sg14
(lp19297
sg2
S"['green']"
p19298
sba(icodemend.demo.code_suggest
Element
p19299
(dp19300
g10
I1
sg11
S''
sg12
Vcontourf.colors.['red']
p19301
sg14
(lp19302
sg2
S"['red']"
p19303
sba(icodemend.demo.code_suggest
Element
p19304
(dp19305
g10
I1
sg11
S''
sg12
Vcontourf.colors.['yellow']
p19306
sg14
(lp19307
sg2
S"['yellow']"
p19308
sbasg2
g19267
sbs(g117
g102
S'opacity'
p19309
tp19310
(icodemend.demo.code_suggest
Element
p19311
(dp19312
g10
I1
sg11
S''
sg12
Vplot.alpha.opacity
p19313
sg14
(lp19314
sg2
g19309
sbs(S'get_xyz_where'
p19315
S'y'
tp19316
g17886
s(S'annotate'
p19317
S'fontconfig_pattern'
p19318
tp19319
(icodemend.demo.code_suggest
Element
p19320
(dp19321
g10
I0
sg11
S'set the properties by parsing a fontconfig pattern .'
p19322
sg12
Vannotate.fontconfig_pattern
p19323
sg14
(lp19324
sg2
g19318
sbs(g109
g3075
S'1000'
p19325
tp19326
(icodemend.demo.code_suggest
Element
p19327
(dp19328
g10
I6
sg11
S''
sg12
Vsavefig.dpi.1000
p19329
sg14
(lp19330
sg2
g19325
sbs(S'get_extents'
p19331
S'xmin'
p19332
tp19333
(icodemend.demo.code_suggest
Element
p19334
(dp19335
g10
I0
sg11
S'returns the extents ( xmin , ymin , xmax , ymax ) of the path .'
p19336
sg12
Vget_extents.xmin
p19337
sg14
(lp19338
sg2
g19332
sbs(S'add_subplot'
p19339
S'_interpolation_steps'
p19340
tp19341
(icodemend.demo.code_suggest
Element
p19342
(dp19343
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p19344
sg12
Vadd_subplot._interpolation_steps
p19345
sg14
(lp19346
sg2
g19340
sbs(S'table'
p19347
S'clip_box'
p19348
tp19349
(icodemend.demo.code_suggest
Element
p19350
(dp19351
g10
I0
sg11
S"set the artist 's clip bbox ."
p19352
sg12
Vtable.clip_box
p19353
sg14
(lp19354
sg2
g19348
sbs(S'get_ydata'
p19355
S'orig'
p19356
tp19357
(icodemend.demo.code_suggest
Element
p19358
(dp19359
g10
I0
sg11
S'if orig is true , return the original data , else the processed data .'
p19360
sg12
Vget_ydata.orig
p19361
sg14
(lp19362
sg2
g19356
sbs(S'barbs'
p19363
S'xscale'
p19364
tp19365
(icodemend.demo.code_suggest
Element
p19366
(dp19367
g10
I0
sg11
S'set the scaling of the x-axis'
p19368
sg12
Vbarbs.xscale
p19369
sg14
(lp19370
sg2
g19364
sbs(S'plot'
p19371
S'markeredgewidth'
p19372
tp19373
(icodemend.demo.code_suggest
Element
p19374
(dp19375
g10
I11
sg11
S'set the marker edge width in points'
p19376
sg12
Vplot.markeredgewidth
p19377
sg14
(lp19378
(icodemend.demo.code_suggest
Element
p19379
(dp19380
g10
I4
sg11
S''
sg12
Vplot.markeredgewidth.2
p19381
sg14
(lp19382
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p19383
(dp19384
g10
I2
sg11
S''
sg12
Vplot.markeredgewidth.0
p19385
sg14
(lp19386
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p19387
(dp19388
g10
I2
sg11
S''
sg12
Vplot.markeredgewidth.1
p19389
sg14
(lp19390
sg2
S'1'
sbag2881
a(icodemend.demo.code_suggest
Element
p19391
(dp19392
g10
I1
sg11
S''
sg12
Vplot.markeredgewidth.1/5
p19393
sg14
(lp19394
sg2
S'1.5'
p19395
sba(icodemend.demo.code_suggest
Element
p19396
(dp19397
g10
I1
sg11
S''
sg12
Vplot.markeredgewidth.5
p19398
sg14
(lp19399
sg2
S'5'
sbasg2
g19372
sbs(g93
g94
g5551
tp19400
g5547
s(S'set_xscale'
p19401
S'linthreshx'
p19402
tp19403
(icodemend.demo.code_suggest
Element
p19404
(dp19405
g10
I0
sg11
S'the range ( - x , x ) within which the plot is linear ( to avoid having the plot go to infinity around zero ) .'
p19406
sg12
Vset_xscale.linthreshx
p19407
sg14
(lp19408
sg2
g19402
sbsS'pprint_getters'
p19409
(icodemend.demo.code_suggest
Element
p19410
(dp19411
g10
I0
sg11
S'return the getters and actual values as list of strings .'
p19412
sg12
Vpprint_getters
p19413
sg14
(lp19414
sg2
g19409
sbs(S'acorr'
p19415
g15936
tp19416
g15921
s(S'add_subplot'
p19417
S'ylabel'
p19418
tp19419
(icodemend.demo.code_suggest
Element
p19420
(dp19421
g10
I0
sg11
S'set the label for the yaxis'
p19422
sg12
Vadd_subplot.ylabel
p19423
sg14
(lp19424
sg2
g19418
sbs(S'add'
p19425
S'aspect'
p19426
tp19427
(icodemend.demo.code_suggest
Element
p19428
(dp19429
g10
I0
sg11
S'aspect'
p19430
sg12
Vadd.aspect
p19431
sg14
(lp19432
sg2
g19426
sbs(S'axhspan'
p19433
S'codes'
p19434
tp19435
(icodemend.demo.code_suggest
Element
p19436
(dp19437
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p19438
sg12
Vaxhspan.codes
p19439
sg14
(lp19440
sg2
g19434
sbs(S'loglog'
p19441
S'pickradius'
p19442
tp19443
(icodemend.demo.code_suggest
Element
p19444
(dp19445
g10
I0
sg11
S'sets the pick radius used for containment tests'
p19446
sg12
Vloglog.pickradius
p19447
sg14
(lp19448
sg2
g19442
sbs(S'Slider'
p19449
S'slidermin'
p19450
tp19451
(icodemend.demo.code_suggest
Element
p19452
(dp19453
g10
I0
sg11
S'do not allow the current slider to have a value less than slidermin'
p19454
sg12
VSlider.slidermin
p19455
sg14
(lp19456
sg2
g19450
sbsS'OSXInstalledFonts'
p19457
(icodemend.demo.code_suggest
Element
p19458
(dp19459
g10
I0
sg11
S'get list of font files on os x - ignores font suffix by default .'
p19460
sg12
VOSXInstalledFonts
p19461
sg14
(lp19462
sg2
g19457
sbs(S'axhspan'
p19463
S'xy'
p19464
tp19465
(icodemend.demo.code_suggest
Element
p19466
(dp19467
g10
I0
sg11
S'set the vertices of the polygon'
p19468
sg12
Vaxhspan.xy
p19469
sg14
(lp19470
sg2
g19464
sbs(g324
g325
g9113
tp19471
g9109
s(S'base_repr'
p19472
g6938
tp19473
g6933
sS'set_positions'
p19474
(icodemend.demo.code_suggest
Element
p19475
(dp19476
g10
I3
sg11
S'set the positions of the events to the specified value set the begin end end positions of the connecting path .'
p19477
sg12
Vset_positions
p19478
sg14
(lp19479
sg2
g19474
sbs(S'yticks'
p19480
g16097
tp19481
g16092
s(S'pie'
p19482
S'labels'
p19483
tp19484
(icodemend.demo.code_suggest
Element
p19485
(dp19486
g10
I45
sg11
S'a sequence of strings providing the labels for each wedge'
p19487
sg12
Vpie.labels
p19488
sg14
(lp19489
(icodemend.demo.code_suggest
Element
p19490
(dp19491
g10
I26
sg11
S''
sg12
Vpie.labels.labels
p19492
sg14
(lp19493
sg2
g8548
sba(icodemend.demo.code_suggest
Element
p19494
(dp19495
g10
I3
sg11
S''
sg12
Vpie.labels.None
p19496
sg14
(lp19497
sg2
g865
sba(icodemend.demo.code_suggest
Element
p19498
(dp19499
g10
I3
sg11
S''
sg12
Vpie.labels.['a', 'b']
p19500
sg14
(lp19501
sg2
S"['a', 'b']"
p19502
sba(icodemend.demo.code_suggest
Element
p19503
(dp19504
g10
I3
sg11
S''
sg12
Vpie.labels.label_list
p19505
sg14
(lp19506
sg2
S'label_list'
p19507
sbag8551
a(icodemend.demo.code_suggest
Element
p19508
(dp19509
g10
I2
sg11
S''
sg12
Vpie.labels.some_labels
p19510
sg14
(lp19511
sg2
S'some_labels'
p19512
sbag16267
a(icodemend.demo.code_suggest
Element
p19513
(dp19514
g10
I1
sg11
S''
sg12
Vpie.labels.['bewarfefvl', 'easdfgvagfvd', 'asasdfve/sd', 'rgdegaf', 'adfewga', 'qargw', 'qaerghrttw', 'errrrd', 'ejjjjd']
p19515
sg14
(lp19516
sg2
S"['bewarfefvl', 'easdfgvagfvd', 'asasdfve.sd', 'rgdegaf', 'adfewga', 'qargw', 'qaerghrttw', 'errrrd', 'ejjjjd']"
p19517
sba(icodemend.demo.code_suggest
Element
p19518
(dp19519
g10
I1
sg11
S''
sg12
Vpie.labels.fblabel
p19520
sg14
(lp19521
sg2
S'fblabel'
p19522
sbag13736
a(icodemend.demo.code_suggest
Element
p19523
(dp19524
g10
I1
sg11
S''
sg12
Vpie.labels.labels2
p19525
sg14
(lp19526
sg2
S'labels2'
p19527
sba(icodemend.demo.code_suggest
Element
p19528
(dp19529
g10
I1
sg11
S''
sg12
Vpie.labels.x
p19530
sg14
(lp19531
sg2
S'x'
sbasg2
g19483
sbsS'datalim_to_dt'
p19532
(icodemend.demo.code_suggest
Element
p19533
(dp19534
g10
I0
sg11
S'convert axis data interval to datetime objects .'
p19535
sg12
Vdatalim_to_dt
p19536
sg14
(lp19537
sg2
g19532
sbs(g13338
S'ymax'
p19538
S'51'
p19539
tp19540
(icodemend.demo.code_suggest
Element
p19541
(dp19542
g10
I1
sg11
S''
sg12
Vylim.ymax.51
p19543
sg14
(lp19544
sg2
g19539
sbs(g101
g8538
S"'red'"
p19545
tp19546
(icodemend.demo.code_suggest
Element
p19547
(dp19548
g10
I2
sg11
S''
sg12
Vscatter.edgecolors.'red'
p19549
sg14
(lp19550
sg2
g19545
sbs(S'figtext'
p19551
g11395
tp19552
g11390
s(S'grid'
p19553
S'contains'
p19554
tp19555
(icodemend.demo.code_suggest
Element
p19556
(dp19557
g10
I0
sg11
S'replace the contains test used by this artist .'
p19558
sg12
Vgrid.contains
p19559
sg14
(lp19560
sg2
g19554
sbs(S'inside_poly'
p19561
S'verts'
p19562
tp19563
(icodemend.demo.code_suggest
Element
p19564
(dp19565
g10
I0
sg11
S'points is a sequence of x , y points . verts is a sequence of x , y vertices of a polygon .'
p19566
sg12
Vinside_poly.verts
p19567
sg14
(lp19568
sg2
g19562
sbs(S'hexbin'
p19569
S'prop_cycle'
p19570
tp19571
(icodemend.demo.code_suggest
Element
p19572
(dp19573
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p19574
sg12
Vhexbin.prop_cycle
p19575
sg14
(lp19576
sg2
g19570
sbs(g101
g118
S"'label 1'"
p19577
tp19578
(icodemend.demo.code_suggest
Element
p19579
(dp19580
g10
I1
sg11
S''
sg12
Vscatter.label.'label 1'
p19581
sg14
(lp19582
sg2
g19577
sbs(g93
g4800
S'(0.4, 0.2)'
p19583
tp19584
(icodemend.demo.code_suggest
Element
p19585
(dp19586
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0/4, 0/2)
p19587
sg14
(lp19588
sg2
g19583
sbs(S'gca'
p19589
S'sketch_params'
p19590
tp19591
(icodemend.demo.code_suggest
Element
p19592
(dp19593
g10
I0
sg11
S'sets the sketch parameters .'
p19594
sg12
Vgca.sketch_params
p19595
sg14
(lp19596
sg2
g19590
sbs(S'boxplot'
p19597
S'meanline'
p19598
tp19599
(icodemend.demo.code_suggest
Element
p19600
(dp19601
g10
I2
sg11
S'if true ( and showmeans is true ) , will try to render the mean as a line spanning the full width of the box according to meanprops . not recommended if shownotches is also true . otherwise , means will be shown as points .'
p19602
sg12
Vboxplot.meanline
p19603
sg14
(lp19604
(icodemend.demo.code_suggest
Element
p19605
(dp19606
g10
I2
sg11
S''
sg12
Vboxplot.meanline.True
p19607
sg14
(lp19608
sg2
g438
sbasg2
g19598
sbs(S'tricontourf'
p19609
g11601
tp19610
g11592
sS'plot_date'
p19611
(icodemend.demo.code_suggest
Element
p19612
(dp19613
g10
I72
sg11
S'plot with data with dates .'
p19614
sg12
Vplot_date
p19615
sg14
(lp19616
g6783
a(icodemend.demo.code_suggest
Element
p19617
(dp19618
g10
I9
sg11
S'set the color of the line'
p19619
sg12
Vplot_date.color
p19620
sg14
(lp19621
(icodemend.demo.code_suggest
Element
p19622
(dp19623
g10
I3
sg11
S''
sg12
Vplot_date.color.'black'
p19624
sg14
(lp19625
sg2
S"'black'"
p19626
sba(icodemend.demo.code_suggest
Element
p19627
(dp19628
g10
I1
sg11
S''
sg12
Vplot_date.color.'b'
p19629
sg14
(lp19630
sg2
S"'b'"
p19631
sba(icodemend.demo.code_suggest
Element
p19632
(dp19633
g10
I1
sg11
S''
sg12
Vplot_date.color.'green'
p19634
sg14
(lp19635
sg2
S"'green'"
p19636
sba(icodemend.demo.code_suggest
Element
p19637
(dp19638
g10
I1
sg11
S''
sg12
Vplot_date.color.'r'
p19639
sg14
(lp19640
sg2
S"'r'"
p19641
sba(icodemend.demo.code_suggest
Element
p19642
(dp19643
g10
I1
sg11
S''
sg12
Vplot_date.color.'red'
p19644
sg14
(lp19645
sg2
S"'red'"
p19646
sbag13416
asg2
S'color'
p19647
sba(icodemend.demo.code_suggest
Element
p19648
(dp19649
g10
I8
sg11
S'the plot format string .'
p19650
sg12
Vplot_date.fmt
p19651
sg14
(lp19652
(icodemend.demo.code_suggest
Element
p19653
(dp19654
g10
I4
sg11
S''
sg12
Vplot_date.fmt.'-'
p19655
sg14
(lp19656
sg2
S"'-'"
p19657
sba(icodemend.demo.code_suggest
Element
p19658
(dp19659
g10
I2
sg11
S''
sg12
Vplot_date.fmt.'g--'
p19660
sg14
(lp19661
sg2
S"'g--'"
p19662
sba(icodemend.demo.code_suggest
Element
p19663
(dp19664
g10
I1
sg11
S''
sg12
Vplot_date.fmt.''
p19665
sg14
(lp19666
sg2
S"''"
p19667
sba(icodemend.demo.code_suggest
Element
p19668
(dp19669
g10
I1
sg11
S''
sg12
Vplot_date.fmt.'r-'
p19670
sg14
(lp19671
sg2
S"'r-'"
p19672
sbasg2
S'fmt'
p19673
sbag6902
a(icodemend.demo.code_suggest
Element
p19674
(dp19675
g10
I6
sg11
S'similar to the plot ( ) command , except the x or y ( or both ) data is considered to be dates , and the axis is labeled accordingly .|||x and/or y can be a sequence of dates represented as float days since 0001-01-01 utc .'
p19676
sg12
Vplot_date.y
p19677
sg14
(lp19678
(icodemend.demo.code_suggest
Element
p19679
(dp19680
g10
I2
sg11
S''
sg12
Vplot_date.y.m
p19681
sg14
(lp19682
sg2
S'm'
sba(icodemend.demo.code_suggest
Element
p19683
(dp19684
g10
I1
sg11
S''
sg12
Vplot_date.y.adj_close
p19685
sg14
(lp19686
sg2
S'adj_close'
p19687
sba(icodemend.demo.code_suggest
Element
p19688
(dp19689
g10
I1
sg11
S''
sg12
Vplot_date.y.impressions
p19690
sg14
(lp19691
sg2
S'impressions'
p19692
sba(icodemend.demo.code_suggest
Element
p19693
(dp19694
g10
I1
sg11
S''
sg12
Vplot_date.y.value
p19695
sg14
(lp19696
sg2
S'value'
p19697
sbag17356
asg2
S'y'
sba(icodemend.demo.code_suggest
Element
p19698
(dp19699
g10
I5
sg11
S'set the line marker'
p19700
sg12
Vplot_date.marker
p19701
sg14
(lp19702
(icodemend.demo.code_suggest
Element
p19703
(dp19704
g10
I1
sg11
S''
sg12
Vplot_date.marker.''
p19705
sg14
(lp19706
sg2
S"''"
p19707
sba(icodemend.demo.code_suggest
Element
p19708
(dp19709
g10
I1
sg11
S''
sg12
Vplot_date.marker.'None'
p19710
sg14
(lp19711
sg2
S"'None'"
p19712
sbag14791
a(icodemend.demo.code_suggest
Element
p19713
(dp19714
g10
I1
sg11
S''
sg12
Vplot_date.marker.'x'
p19715
sg14
(lp19716
sg2
S"'x'"
p19717
sba(icodemend.demo.code_suggest
Element
p19718
(dp19719
g10
I1
sg11
S''
sg12
Vplot_date.marker.None
p19720
sg14
(lp19721
sg2
g865
sbasg2
S'marker'
p19722
sba(icodemend.demo.code_suggest
Element
p19723
(dp19724
g10
I3
sg11
S'set the label to s for auto legend .'
p19725
sg12
Vplot_date.label
p19726
sg14
(lp19727
(icodemend.demo.code_suggest
Element
p19728
(dp19729
g10
I1
sg11
S''
sg12
Vplot_date.label.'Data Series'
p19730
sg14
(lp19731
sg2
S"'Data Series'"
p19732
sba(icodemend.demo.code_suggest
Element
p19733
(dp19734
g10
I1
sg11
S''
sg12
Vplot_date.label.'Total %'
p19735
sg14
(lp19736
sg2
S"'Total %'"
p19737
sbag8595
asg2
S'label'
p19738
sba(icodemend.demo.code_suggest
Element
p19739
(dp19740
g10
I3
sg11
S'set the line width in points'
p19741
sg12
Vplot_date.linewidth
p19742
sg14
(lp19743
(icodemend.demo.code_suggest
Element
p19744
(dp19745
g10
I3
sg11
S''
sg12
Vplot_date.linewidth.2
p19746
sg14
(lp19747
sg2
S'2'
sbasg2
S'linewidth'
p19748
sba(icodemend.demo.code_suggest
Element
p19749
(dp19750
g10
I1
sg11
S'set the marker edge color'
p19751
sg12
Vplot_date.markeredgecolor
p19752
sg14
(lp19753
(icodemend.demo.code_suggest
Element
p19754
(dp19755
g10
I1
sg11
S''
sg12
Vplot_date.markeredgecolor.'white'
p19756
sg14
(lp19757
sg2
S"'white'"
p19758
sbasg2
S'markeredgecolor'
p19759
sbag5808
a(icodemend.demo.code_suggest
Element
p19760
(dp19761
g10
I1
sg11
S'set the marker size in points'
p19762
sg12
Vplot_date.markersize
p19763
sg14
(lp19764
(icodemend.demo.code_suggest
Element
p19765
(dp19766
g10
I1
sg11
S''
sg12
Vplot_date.markersize.3
p19767
sg14
(lp19768
sg2
S'3'
sbasg2
S'markersize'
p19769
sba(icodemend.demo.code_suggest
Element
p19770
(dp19771
g10
I1
sg11
S'the time zone to use in labeling dates . if none , defaults to rc value .'
p19772
sg12
Vplot_date.tz
p19773
sg14
(lp19774
g12813
asg2
S'tz'
p19775
sba(icodemend.demo.code_suggest
Element
p19776
(dp19777
g10
I0
sg11
S'if true , the x - axis will be labeled with dates .|||if true , the y - axis will be labeled with dates .'
p19778
sg12
Vplot_date.False
p19779
sg14
(lp19780
sg2
S'False'
p19781
sbag10522
ag7100
a(icodemend.demo.code_suggest
Element
p19782
(dp19783
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p19784
sg12
Vplot_date._interpolation_steps
p19785
sg14
(lp19786
sg2
S'_interpolation_steps'
p19787
sbag15418
a(icodemend.demo.code_suggest
Element
p19788
(dp19789
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p19790
sg12
Vplot_date.alpha
p19791
sg14
(lp19792
sg2
S'alpha'
p19793
sba(icodemend.demo.code_suggest
Element
p19794
(dp19795
g10
I0
sg11
S'anchor'
p19796
sg12
Vplot_date.anchor
p19797
sg14
(lp19798
sg2
S'anchor'
p19799
sbag8693
a(icodemend.demo.code_suggest
Element
p19800
(dp19801
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p19802
sg12
Vplot_date.antialiased
p19803
sg14
(lp19804
sg2
S'antialiased'
p19805
sbag3262
a(icodemend.demo.code_suggest
Element
p19806
(dp19807
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p19808
sg12
Vplot_date.axes
p19809
sg14
(lp19810
sg2
S'axes'
p19811
sba(icodemend.demo.code_suggest
Element
p19812
(dp19813
g10
I0
sg11
S"set the artist 's clip bbox ."
p19814
sg12
Vplot_date.clip_box
p19815
sg14
(lp19816
sg2
S'clip_box'
p19817
sba(icodemend.demo.code_suggest
Element
p19818
(dp19819
g10
I0
sg11
S'set whether artist uses clipping .'
p19820
sg12
Vplot_date.clip_on
p19821
sg14
(lp19822
sg2
S'clip_on'
p19823
sba(icodemend.demo.code_suggest
Element
p19824
(dp19825
g10
I0
sg11
S"set the artist 's clip path , which may be"
p19826
sg12
Vplot_date.clip_path
p19827
sg14
(lp19828
sg2
S'clip_path'
p19829
sba(icodemend.demo.code_suggest
Element
p19830
(dp19831
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p19832
sg12
Vplot_date.closed
p19833
sg14
(lp19834
sg2
S'closed'
p19835
sba(icodemend.demo.code_suggest
Element
p19836
(dp19837
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p19838
sg12
Vplot_date.codes
p19839
sg14
(lp19840
sg2
S'codes'
p19841
sba(icodemend.demo.code_suggest
Element
p19842
(dp19843
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p19844
sg12
Vplot_date.color_cycle
p19845
sg14
(lp19846
sg2
S'color_cycle'
p19847
sbag13583
a(icodemend.demo.code_suggest
Element
p19848
(dp19849
g10
I0
sg11
S'set the cursor property as'
p19850
sg12
Vplot_date.cursor_props
p19851
sg14
(lp19852
sg2
S'cursor_props'
p19853
sba(icodemend.demo.code_suggest
Element
p19854
(dp19855
g10
I0
sg11
S'set the cap style for dashed linestyles'
p19856
sg12
Vplot_date.dash_capstyle
p19857
sg14
(lp19858
sg2
S'dash_capstyle'
p19859
sba(icodemend.demo.code_suggest
Element
p19860
(dp19861
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p19862
sg12
Vplot_date.dash_joinstyle
p19863
sg14
(lp19864
sg2
S'dash_joinstyle'
p19865
sba(icodemend.demo.code_suggest
Element
p19866
(dp19867
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p19868
sg12
Vplot_date.dashes
p19869
sg14
(lp19870
sg2
S'dashes'
p19871
sba(icodemend.demo.code_suggest
Element
p19872
(dp19873
g10
I0
sg11
S'set the drawstyle of the plot'
p19874
sg12
Vplot_date.drawstyle
p19875
sg14
(lp19876
sg2
S'drawstyle'
p19877
sba(icodemend.demo.code_suggest
Element
p19878
(dp19879
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p19880
sg12
Vplot_date.figure
p19881
sg14
(lp19882
sg2
S'figure'
p19883
sbag11777
a(icodemend.demo.code_suggest
Element
p19884
(dp19885
g10
I0
sg11
S'sets the ( group ) id for the artist'
p19886
sg12
Vplot_date.gid
p19887
sg14
(lp19888
sg2
S'gid'
p19889
sba(icodemend.demo.code_suggest
Element
p19890
(dp19891
g10
I0
sg11
S'set the hatching pattern'
p19892
sg12
Vplot_date.hatch
p19893
sg14
(lp19894
sg2
S'hatch'
p19895
sba(icodemend.demo.code_suggest
Element
p19896
(dp19897
g10
I0
sg11
S'set the marker edge width in points'
p19898
sg12
Vplot_date.markeredgewidth
p19899
sg14
(lp19900
sg2
S'markeredgewidth'
p19901
sbag4132
a(icodemend.demo.code_suggest
Element
p19902
(dp19903
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p19904
sg12
Vplot_date.markevery
p19905
sg14
(lp19906
sg2
S'markevery'
p19907
sba(icodemend.demo.code_suggest
Element
p19908
(dp19909
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p19910
sg12
Vplot_date.path_effects
p19911
sg14
(lp19912
sg2
S'path_effects'
p19913
sba(icodemend.demo.code_suggest
Element
p19914
(dp19915
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p19916
sg12
Vplot_date.picker
p19917
sg14
(lp19918
sg2
S'picker'
p19919
sba(icodemend.demo.code_suggest
Element
p19920
(dp19921
g10
I0
sg11
S'sets the pick radius used for containment tests'
p19922
sg12
Vplot_date.pickradius
p19923
sg14
(lp19924
sg2
S'pickradius'
p19925
sba(icodemend.demo.code_suggest
Element
p19926
(dp19927
g10
I0
sg11
S'set the axes position with'
p19928
sg12
Vplot_date.position
p19929
sg14
(lp19930
sg2
S'position'
p19931
sba(icodemend.demo.code_suggest
Element
p19932
(dp19933
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p19934
sg12
Vplot_date.prop_cycle
p19935
sg14
(lp19936
sg2
S'prop_cycle'
p19937
sba(icodemend.demo.code_suggest
Element
p19938
(dp19939
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p19940
sg12
Vplot_date.rasterized
p19941
sg14
(lp19942
sg2
S'rasterized'
p19943
sba(icodemend.demo.code_suggest
Element
p19944
(dp19945
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p19946
sg12
Vplot_date.readonly
p19947
sg14
(lp19948
sg2
S'readonly'
p19949
sba(icodemend.demo.code_suggest
Element
p19950
(dp19951
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p19952
sg12
Vplot_date.size_inches
p19953
sg14
(lp19954
sg2
S'size_inches'
p19955
sba(icodemend.demo.code_suggest
Element
p19956
(dp19957
g10
I0
sg11
S'sets the sketch parameters .'
p19958
sg12
Vplot_date.sketch_params
p19959
sg14
(lp19960
sg2
S'sketch_params'
p19961
sba(icodemend.demo.code_suggest
Element
p19962
(dp19963
g10
I0
sg11
S'sets the snap setting which may be'
p19964
sg12
Vplot_date.snap
p19965
sg14
(lp19966
sg2
S'snap'
p19967
sba(icodemend.demo.code_suggest
Element
p19968
(dp19969
g10
I0
sg11
S'set the cap style for solid linestyles'
p19970
sg12
Vplot_date.solid_capstyle
p19971
sg14
(lp19972
sg2
S'solid_capstyle'
p19973
sba(icodemend.demo.code_suggest
Element
p19974
(dp19975
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p19976
sg12
Vplot_date.solid_joinstyle
p19977
sg14
(lp19978
sg2
S'solid_joinstyle'
p19979
sbag1300
a(icodemend.demo.code_suggest
Element
p19980
(dp19981
g10
I0
sg11
S'set the transformation instance used by this artist'
p19982
sg12
Vplot_date.transform
p19983
sg14
(lp19984
sg2
S'transform'
p19985
sba(icodemend.demo.code_suggest
Element
p19986
(dp19987
g10
I0
sg11
S'sets the url for the artist'
p19988
sg12
Vplot_date.url
p19989
sg14
(lp19990
sg2
S'url'
p19991
sba(icodemend.demo.code_suggest
Element
p19992
(dp19993
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p19994
sg12
Vplot_date.vertices
p19995
sg14
(lp19996
sg2
S'vertices'
p19997
sbag6434
a(icodemend.demo.code_suggest
Element
p19998
(dp19999
g10
I0
sg11
S'set the data np.array for x'
p20000
sg12
Vplot_date.xdata
p20001
sg14
(lp20002
sg2
S'xdata'
p20003
sba(icodemend.demo.code_suggest
Element
p20004
(dp20005
g10
I0
sg11
S'if true , the x - axis will be labeled with dates .'
p20006
sg12
Vplot_date.xdate
p20007
sg14
(lp20008
sg2
S'xdate'
p20009
sba(icodemend.demo.code_suggest
Element
p20010
(dp20011
g10
I0
sg11
S'set the label for the xaxis .'
p20012
sg12
Vplot_date.xlabel
p20013
sg14
(lp20014
sg2
S'xlabel'
p20015
sba(icodemend.demo.code_suggest
Element
p20016
(dp20017
g10
I0
sg11
S'set the data limits for the xaxis'
p20018
sg12
Vplot_date.xlim
p20019
sg14
(lp20020
sg2
S'xlim'
p20021
sba(icodemend.demo.code_suggest
Element
p20022
(dp20023
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p20024
sg12
Vplot_date.xmargin
p20025
sg14
(lp20026
sg2
S'xmargin'
p20027
sba(icodemend.demo.code_suggest
Element
p20028
(dp20029
g10
I0
sg11
S'set the scaling of the x-axis'
p20030
sg12
Vplot_date.xscale
p20031
sg14
(lp20032
sg2
S'xscale'
p20033
sba(icodemend.demo.code_suggest
Element
p20034
(dp20035
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p20036
sg12
Vplot_date.xticklabels
p20037
sg14
(lp20038
sg2
S'xticklabels'
p20039
sba(icodemend.demo.code_suggest
Element
p20040
(dp20041
g10
I0
sg11
S'set the x ticks with list of ticks'
p20042
sg12
Vplot_date.xticks
p20043
sg14
(lp20044
sg2
S'xticks'
p20045
sba(icodemend.demo.code_suggest
Element
p20046
(dp20047
g10
I0
sg11
S'set the data np.array for y'
p20048
sg12
Vplot_date.ydata
p20049
sg14
(lp20050
sg2
S'ydata'
p20051
sba(icodemend.demo.code_suggest
Element
p20052
(dp20053
g10
I0
sg11
S'if true , the y - axis will be labeled with dates .'
p20054
sg12
Vplot_date.ydate
p20055
sg14
(lp20056
sg2
S'ydate'
p20057
sba(icodemend.demo.code_suggest
Element
p20058
(dp20059
g10
I0
sg11
S'set the label for the yaxis'
p20060
sg12
Vplot_date.ylabel
p20061
sg14
(lp20062
sg2
S'ylabel'
p20063
sba(icodemend.demo.code_suggest
Element
p20064
(dp20065
g10
I0
sg11
S'set the data limits for the yaxis'
p20066
sg12
Vplot_date.ylim
p20067
sg14
(lp20068
sg2
S'ylim'
p20069
sba(icodemend.demo.code_suggest
Element
p20070
(dp20071
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p20072
sg12
Vplot_date.ymargin
p20073
sg14
(lp20074
sg2
S'ymargin'
p20075
sba(icodemend.demo.code_suggest
Element
p20076
(dp20077
g10
I0
sg11
S'set the scaling of the y-axis'
p20078
sg12
Vplot_date.yscale
p20079
sg14
(lp20080
sg2
S'yscale'
p20081
sba(icodemend.demo.code_suggest
Element
p20082
(dp20083
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p20084
sg12
Vplot_date.yticklabels
p20085
sg14
(lp20086
sg2
S'yticklabels'
p20087
sba(icodemend.demo.code_suggest
Element
p20088
(dp20089
g10
I0
sg11
S'set the y ticks with list of ticks'
p20090
sg12
Vplot_date.yticks
p20091
sg14
(lp20092
sg2
S'yticks'
p20093
sbag13527
asg2
g19611
sbs(g324
g785
g9337
tp20094
g9333
s(S'colorbar'
p20095
g11976
tp20096
g11875
sS'draw_cursor'
p20097
(icodemend.demo.code_suggest
Element
p20098
(dp20099
g10
I0
sg11
S'draw a cursor in the event.axes if inaxes is not none .'
p20100
sg12
Vdraw_cursor
p20101
sg14
(lp20102
sg2
g20097
sbs(S'fill_betweenx'
p20103
S'step'
p20104
tp20105
(icodemend.demo.code_suggest
Element
p20106
(dp20107
g10
I0
sg11
S'if not none , fill with step logic .'
p20108
sg12
Vfill_betweenx.step
p20109
sg14
(lp20110
sg2
g20104
sbs(g452
g2364
S'[1]'
p20111
tp20112
(icodemend.demo.code_suggest
Element
p20113
(dp20114
g10
I1
sg11
S''
sg12
Verrorbar.xerr.[1]
p20115
sg14
(lp20116
sg2
g20111
sbsS'to_rgb'
p20117
(icodemend.demo.code_suggest
Element
p20118
(dp20119
g10
I0
sg11
S'returns an rgb tuple of three floats from 0-1 .'
p20120
sg12
Vto_rgb
p20121
sg14
(lp20122
(icodemend.demo.code_suggest
Element
p20123
(dp20124
g10
I0
sg11
S'if arg is rgba , the a will simply be discarded .'
p20125
sg12
Vto_rgb.A
p20126
sg14
(lp20127
sg2
S'A'
sba(icodemend.demo.code_suggest
Element
p20128
(dp20129
g10
I0
sg11
S'returns an rgb tuple of three floats from 0-1 .|||arg can be an rgb or rgba sequence or a string in any of several forms :'
p20130
sg12
Vto_rgb.RGB
p20131
sg14
(lp20132
sg2
S'RGB'
p20133
sba(icodemend.demo.code_suggest
Element
p20134
(dp20135
g10
I0
sg11
S'if arg is rgba , the a will simply be discarded .|||arg can be an rgb or rgba sequence or a string in any of several forms :'
p20136
sg12
Vto_rgb.RGBA
p20137
sg14
(lp20138
sg2
S'RGBA'
p20139
sbag8521
asg2
g20117
sbs(S'fill'
p20140
S'clip_path'
p20141
tp20142
(icodemend.demo.code_suggest
Element
p20143
(dp20144
g10
I0
sg11
S"set the artist 's clip path , which may be"
p20145
sg12
Vfill.clip_path
p20146
sg14
(lp20147
sg2
g20141
sbs(g944
g945
g945
tp20148
(icodemend.demo.code_suggest
Element
p20149
(dp20150
g10
I2
sg11
S''
sg12
Vbarh.height.height
p20151
sg14
(lp20152
sg2
g945
sbs(S'available'
p20153
S'o'
tp20154
g17940
s(S'xcorr'
p20155
S'normed'
p20156
tp20157
(icodemend.demo.code_suggest
Element
p20158
(dp20159
g10
I2
sg11
S'if true , normalize the data by the autocorrelation at the 0-th lag .'
p20160
sg12
Vxcorr.normed
p20161
sg14
(lp20162
(icodemend.demo.code_suggest
Element
p20163
(dp20164
g10
I2
sg11
S''
sg12
Vxcorr.normed.True
p20165
sg14
(lp20166
sg2
g438
sbasg2
g20156
sbs(S'disconnect'
p20167
g8537
tp20168
g8532
s(S'vlines'
p20169
S'offsets'
p20170
tp20171
(icodemend.demo.code_suggest
Element
p20172
(dp20173
g10
I0
sg11
S'set the offsets for the collection .'
p20174
sg12
Vvlines.offsets
p20175
sg14
(lp20176
sg2
g20170
sbs(g101
S's'
g7671
tp20177
g7667
sS'spring'
p20178
(icodemend.demo.code_suggest
Element
p20179
(dp20180
g10
I0
sg11
S'set the default colormap to spring and apply to current image if any .'
p20181
sg12
Vspring
p20182
sg14
(lp20183
sg2
g20178
sbs(S'Button'
p20184
S'hovercolor'
p20185
tp20186
(icodemend.demo.code_suggest
Element
p20187
(dp20188
g10
I2
sg11
S'the color of the button when the mouse is over it'
p20189
sg12
VButton.hovercolor
p20190
sg14
(lp20191
(icodemend.demo.code_suggest
Element
p20192
(dp20193
g10
I2
sg11
S''
sg12
VButton.hovercolor.'0/975'
p20194
sg14
(lp20195
sg2
S"'0.975'"
p20196
sbasg2
g20185
sbs(S'getpoints'
p20197
S'k'
tp20198
(icodemend.demo.code_suggest
Element
p20199
(dp20200
g10
I0
sg11
S'for line segment defined by ( x1 , y1 ) and ( x2 , y2 ) return the points on the line that is perpendicular to the line and intersects ( x2 , y2 ) and the distance from ( x2 , y2 ) of the returned points is k .'
p20201
sg12
Vgetpoints.k
p20202
sg14
(lp20203
sg2
S'k'
sbs(g101
S'c'
S'brandcolors'
p20204
tp20205
(icodemend.demo.code_suggest
Element
p20206
(dp20207
g10
I1
sg11
S''
sg12
Vscatter.c.brandcolors
p20208
sg14
(lp20209
sg2
g20204
sbsS'rcdefaults'
p20210
(icodemend.demo.code_suggest
Element
p20211
(dp20212
g10
I2
sg11
S'restore the default rc params .'
p20213
sg12
Vrcdefaults
p20214
sg14
(lp20215
sg2
g20210
sbs(S'quiver'
p20216
S'ylabel'
p20217
tp20218
(icodemend.demo.code_suggest
Element
p20219
(dp20220
g10
I0
sg11
S'set the label for the yaxis'
p20221
sg12
Vquiver.ylabel
p20222
sg14
(lp20223
sg2
g20217
sbs(g4998
g325
S"'gist_rainbow'"
p20224
tp20225
(icodemend.demo.code_suggest
Element
p20226
(dp20227
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.'gist_rainbow'
p20228
sg14
(lp20229
sg2
g20224
sbs(g16
g132
S"'none'"
p20230
tp20231
(icodemend.demo.code_suggest
Element
p20232
(dp20233
g10
I1
sg11
S''
sg12
Vbar.color.'none'
p20234
sg14
(lp20235
sg2
g20230
sbs(g117
g102
S'0'
tp20236
(icodemend.demo.code_suggest
Element
p20237
(dp20238
g10
I4
sg11
S''
sg12
Vplot.alpha.0
p20239
sg14
(lp20240
sg2
S'0'
sbs(S'hist'
p20241
S'align'
p20242
tp20243
(icodemend.demo.code_suggest
Element
p20244
(dp20245
g10
I7
sg11
S'controls how the histogram is plotted .'
p20246
sg12
Vhist.align
p20247
sg14
(lp20248
(icodemend.demo.code_suggest
Element
p20249
(dp20250
g10
I5
sg11
S''
sg12
Vhist.align.'left'
p20251
sg14
(lp20252
sg2
S"'left'"
p20253
sba(icodemend.demo.code_suggest
Element
p20254
(dp20255
g10
I2
sg11
S''
sg12
Vhist.align.'mid'
p20256
sg14
(lp20257
sg2
S"'mid'"
p20258
sbasg2
g20242
sbs(S'subplots'
p20259
g1950
tp20260
g1931
s(S'loglog'
p20261
S'yticks'
p20262
tp20263
(icodemend.demo.code_suggest
Element
p20264
(dp20265
g10
I0
sg11
S'set the y ticks with list of ticks'
p20266
sg12
Vloglog.yticks
p20267
sg14
(lp20268
sg2
g20262
sbs(g6632
S'yticks'
p20269
S'[]'
p20270
tp20271
(icodemend.demo.code_suggest
Element
p20272
(dp20273
g10
I6
sg11
S''
sg12
Vadd_subplot.yticks.[]
p20274
sg14
(lp20275
sg2
g20270
sbs(g117
g118
S"u'H\\u2082O'"
p20276
tp20277
(icodemend.demo.code_suggest
Element
p20278
(dp20279
g10
I2
sg11
S''
sg12
Vplot.label.u'H\u005cu2082O'
p20280
sg14
(lp20281
sg2
g20276
sbs(g109
g2175
S'0'
tp20282
(icodemend.demo.code_suggest
Element
p20283
(dp20284
g10
I6
sg11
S''
sg12
Vsavefig.pad_inches.0
p20285
sg14
(lp20286
sg2
S'0'
sbsS'get_agg_filter'
p20287
(icodemend.demo.code_suggest
Element
p20288
(dp20289
g10
I0
sg11
S'return filter function to be used for agg filter'
p20290
sg12
Vget_agg_filter
p20291
sg14
(lp20292
sg2
g20287
sbs(S'semilogy'
p20293
S'linestyle'
p20294
tp20295
(icodemend.demo.code_suggest
Element
p20296
(dp20297
g10
I0
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p20298
sg12
Vsemilogy.linestyle
p20299
sg14
(lp20300
sg2
g20294
sbsS'fix_minus'
p20301
(icodemend.demo.code_suggest
Element
p20302
(dp20303
g10
I0
sg11
S'some classes may want to replace a hyphen for minus with the proper unicode symbol ( u+2212 ) for typographical correctness . use a unicode minus rather than hyphen'
p20304
sg12
Vfix_minus
p20305
sg14
(lp20306
sg2
g20301
sbs(g125
S'x'
S'0.069'
p20307
tp20308
(icodemend.demo.code_suggest
Element
p20309
(dp20310
g10
I1
sg11
S''
sg12
Vaxvline.x.0/069
p20311
sg14
(lp20312
sg2
g20307
sbs(g117
g118
S"'a:b'"
p20313
tp20314
(icodemend.demo.code_suggest
Element
p20315
(dp20316
g10
I1
sg11
S''
sg12
Vplot.label.'a:b'
p20317
sg14
(lp20318
sg2
g20313
sbs(g93
g161
S'(ax0, ay0)'
p20319
tp20320
(icodemend.demo.code_suggest
Element
p20321
(dp20322
g10
I1
sg11
S''
sg12
Vannotate.xy.(ax0, ay0)
p20323
sg14
(lp20324
sg2
g20319
sbs(g2250
S'units'
p20325
S"'dots'"
p20326
tp20327
(icodemend.demo.code_suggest
Element
p20328
(dp20329
g10
I1
sg11
S''
sg12
Vquiver.units.'dots'
p20330
sg14
(lp20331
sg2
g20326
sbs(g766
g4459
S'm'
tp20332
g6095
s(S'figtext'
p20333
g11401
tp20334
g11396
s(g101
g118
g8548
tp20335
(icodemend.demo.code_suggest
Element
p20336
(dp20337
g10
I1
sg11
S''
sg12
Vscatter.label.labels
p20338
sg14
(lp20339
sg2
g8548
sbs(g252
g253
g14016
tp20340
g14012
s(S'semilogx'
p20341
S'markevery'
p20342
tp20343
(icodemend.demo.code_suggest
Element
p20344
(dp20345
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p20346
sg12
Vsemilogx.markevery
p20347
sg14
(lp20348
sg2
g20342
sbsS'fill_betweenx'
p20349
(icodemend.demo.code_suggest
Element
p20350
(dp20351
g10
I11
sg11
S'make filled polygons between two horizontal curves .'
p20352
sg12
Vfill_betweenx
p20353
sg14
(lp20354
(icodemend.demo.code_suggest
Element
p20355
(dp20356
g10
I1
sg11
S'if none , default to fill between everywhere . if not none , it is a n length numpy boolean array and the fill will only happen over the regions where where==true'
p20357
sg12
Vfill_betweenx.where
p20358
sg14
(lp20359
sg2
S'where'
p20360
sba(icodemend.demo.code_suggest
Element
p20361
(dp20362
g10
I1
sg11
S'an n-length array ( or scalar ) of the x data|||create a polycollection filling the regions between x1 and x2 where where==true'
p20363
sg12
Vfill_betweenx.x2
p20364
sg14
(lp20365
(icodemend.demo.code_suggest
Element
p20366
(dp20367
g10
I1
sg11
S''
sg12
Vfill_betweenx.x2.0/5
p20368
sg14
(lp20369
sg2
S'0.5'
p20370
sbasg2
S'x2'
p20371
sbag20106
a(icodemend.demo.code_suggest
Element
p20372
(dp20373
g10
I0
sg11
S'an n-length array ( or scalar ) of the x data|||create a polycollection filling the regions between x1 and x2 where where==true'
p20374
sg12
Vfill_betweenx.x1
p20375
sg14
(lp20376
sg2
S'x1'
p20377
sba(icodemend.demo.code_suggest
Element
p20378
(dp20379
g10
I0
sg11
S'an n-length array of the y data'
p20380
sg12
Vfill_betweenx.y
p20381
sg14
(lp20382
sg2
S'y'
sbasg2
g20349
sbs(S'annotate'
p20383
S'markevery'
p20384
tp20385
(icodemend.demo.code_suggest
Element
p20386
(dp20387
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p20388
sg12
Vannotate.markevery
p20389
sg14
(lp20390
sg2
g20384
sbs(S'barbs'
p20391
S'title'
p20392
tp20393
(icodemend.demo.code_suggest
Element
p20394
(dp20395
g10
I0
sg11
S'set a title for the axes .'
p20396
sg12
Vbarbs.title
p20397
sg14
(lp20398
sg2
g20392
sbs(g245
g140
S'(8, 6)'
p20399
tp20400
(icodemend.demo.code_suggest
Element
p20401
(dp20402
g10
I31
sg11
S''
sg12
Vfigure.figsize.(8, 6)
p20403
sg14
(lp20404
sg2
g20399
sbs(S'pcolorfast'
p20405
S'y'
tp20406
(icodemend.demo.code_suggest
Element
p20407
(dp20408
g10
I0
sg11
S'xr , yr specify the ranges of x and y corresponding to the rectangular region bounding c . if :|||x , y are 1d arrays of length nc + 1 and nr + 1 , respectively , giving the x and y boundaries of the cells . hence the cells are rectangular but the grid may be nonuniform . the speed is intermediate . ( the grid is checked , and if found to be uniform the fast version is used . )'
p20409
sg12
Vpcolorfast.y
p20410
sg14
(lp20411
sg2
S'y'
sbs(g117
S'x'
S"'DT'"
p20412
tp20413
(icodemend.demo.code_suggest
Element
p20414
(dp20415
g10
I1
sg11
S''
sg12
Vplot.x.'DT'
p20416
sg14
(lp20417
sg2
g20412
sbs(g117
g132
S"'0.1'"
p20418
tp20419
(icodemend.demo.code_suggest
Element
p20420
(dp20421
g10
I1
sg11
S''
sg12
Vplot.color.'0/1'
p20422
sg14
(lp20423
sg2
g20418
sbs(S'warn_deprecated'
p20424
S'obj_type'
p20425
tp20426
(icodemend.demo.code_suggest
Element
p20427
(dp20428
g10
I0
sg11
S'the object type being deprecated .'
p20429
sg12
Vwarn_deprecated.obj_type
p20430
sg14
(lp20431
sg2
g20425
sbs(S'semilogy'
p20432
S'clip_box'
p20433
tp20434
(icodemend.demo.code_suggest
Element
p20435
(dp20436
g10
I0
sg11
S"set the artist 's clip bbox ."
p20437
sg12
Vsemilogy.clip_box
p20438
sg14
(lp20439
sg2
g20433
sbs(S'axhline'
p20440
g3831
tp20441
g3826
s(g117
g118
S"'C'"
p20442
tp20443
(icodemend.demo.code_suggest
Element
p20444
(dp20445
g10
I2
sg11
S''
sg12
Vplot.label.'C'
p20446
sg14
(lp20447
sg2
g20442
sbs(g16
g132
S"'#263F6A'"
p20448
tp20449
(icodemend.demo.code_suggest
Element
p20450
(dp20451
g10
I1
sg11
S''
sg12
Vbar.color.'#263F6A'
p20452
sg14
(lp20453
sg2
g20448
sbs(g1003
g4403
S"'r+'"
p20454
tp20455
(icodemend.demo.code_suggest
Element
p20456
(dp20457
g10
I2
sg11
S''
sg12
Vboxplot.sym.'r+'
p20458
sg14
(lp20459
sg2
g20454
sbs(g245
g140
S'[5, 5]'
p20460
tp20461
(icodemend.demo.code_suggest
Element
p20462
(dp20463
g10
I1
sg11
S''
sg12
Vfigure.figsize.[5, 5]
p20464
sg14
(lp20465
sg2
g20460
sbs(S'set_xlim'
p20466
g4587
tp20467
g4567
s(g16
g489
S'b'
tp20468
(icodemend.demo.code_suggest
Element
p20469
(dp20470
g10
I2
sg11
S''
sg12
Vbar.bottom.b
p20471
sg14
(lp20472
sg2
S'b'
sbs(S'Path'
p20473
g11812
tp20474
g11807
s(S'barh'
p20475
S'color_cycle'
p20476
tp20477
(icodemend.demo.code_suggest
Element
p20478
(dp20479
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p20480
sg12
Vbarh.color_cycle
p20481
sg14
(lp20482
sg2
g20476
sbs(S'boxplot'
p20483
S'notch'
p20484
tp20485
(icodemend.demo.code_suggest
Element
p20486
(dp20487
g10
I6
sg11
S'if false , produces a rectangular box plot . if true , will produce a notched box plot'
p20488
sg12
Vboxplot.notch
p20489
sg14
(lp20490
g14827
a(icodemend.demo.code_suggest
Element
p20491
(dp20492
g10
I1
sg11
S''
sg12
Vboxplot.notch.1
p20493
sg14
(lp20494
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p20495
(dp20496
g10
I1
sg11
S''
sg12
Vboxplot.notch.False
p20497
sg14
(lp20498
sg2
g1944
sbasg2
g20484
sbs(S'set_yscale'
p20499
S'linthreshy'
p20500
g15515
tp20501
g15511
s(S'set_title'
p20502
S'prop'
p20503
tp20504
(icodemend.demo.code_suggest
Element
p20505
(dp20506
g10
I1
sg11
S'set the legend title . fontproperties can be optionally set with prop parameter .'
p20507
sg12
Vset_title.prop
p20508
sg14
(lp20509
(icodemend.demo.code_suggest
Element
p20510
(dp20511
g10
I1
sg11
S''
sg12
Vset_title.prop.{'size': 14, 'weight': 'heavy'}
p20512
sg14
(lp20513
sg2
S"{'size': 14, 'weight': 'heavy'}"
p20514
sbasg2
g20503
sbs(g324
g785
g9387
tp20515
g9383
s(S'save'
p20516
S'extra_anim'
p20517
tp20518
(icodemend.demo.code_suggest
Element
p20519
(dp20520
g10
I0
sg11
S'extra_anim is a list of additional animation objects that should be included in the saved movie file . these need to be from the same matplotlib.figure instance . also , animation frames will just be simply combined , so there should be a 1:1 correspondence between the frames from the different animations .'
p20521
sg12
Vsave.extra_anim
p20522
sg14
(lp20523
sg2
g20517
sbs(g125
g2251
S"':'"
p20524
tp20525
(icodemend.demo.code_suggest
Element
p20526
(dp20527
g10
I1
sg11
S''
sg12
Vaxvline.linestyle.':'
p20528
sg14
(lp20529
sg2
g20524
sbs(g117
g118
S"'black sin(x)'"
p20530
tp20531
(icodemend.demo.code_suggest
Element
p20532
(dp20533
g10
I1
sg11
S''
sg12
Vplot.label.'black sin(x)'
p20534
sg14
(lp20535
sg2
g20530
sbsS'set_ydata'
p20536
(icodemend.demo.code_suggest
Element
p20537
(dp20538
g10
I132
sg11
S'set the data np.array for y'
p20539
sg12
Vset_ydata
p20540
sg14
(lp20541
sg2
g20536
sbs(S'figtext'
p20542
g11425
tp20543
g11420
sS'get_patches'
p20544
(icodemend.demo.code_suggest
Element
p20545
(dp20546
g10
I0
sg11
S'return a list of patch instances in the legend'
p20547
sg12
Vget_patches
p20548
sg14
(lp20549
sg2
g20544
sbs(S'PackerBase'
p20550
g4303
tp20551
g4298
s(g245
g140
S'(5.15, 5.15)'
p20552
tp20553
(icodemend.demo.code_suggest
Element
p20554
(dp20555
g10
I2
sg11
S''
sg12
Vfigure.figsize.(5/15, 5/15)
p20556
sg14
(lp20557
sg2
g20552
sbs(S'vpack'
p20558
S'h'
tp20559
(icodemend.demo.code_suggest
Element
p20560
(dp20561
g10
I0
sg11
S"thus , vpack(h , ' exactly ' ) produces a box whose height is exactly h , while vpack(h , ' additional ' ) yields a box whose height is the natural height plus h . the default values produce a box with the natural width ."
p20562
sg12
Vvpack.h
p20563
sg14
(lp20564
sg2
S'h'
sbs(S'set_ticks'
p20565
S'update_ticks'
p20566
tp20567
(icodemend.demo.code_suggest
Element
p20568
(dp20569
g10
I0
sg11
S'set tick locations . tick locations are updated immediately unless update_ticks is false . to manually update the ticks , call update_ticks method explicitly .'
p20570
sg12
Vset_ticks.update_ticks
p20571
sg14
(lp20572
sg2
g20566
sbsS'set_fontconfig_pattern'
p20573
(icodemend.demo.code_suggest
Element
p20574
(dp20575
g10
I0
sg11
S'set the properties by parsing a fontconfig pattern .'
p20576
sg12
Vset_fontconfig_pattern
p20577
sg14
(lp20578
(icodemend.demo.code_suggest
Element
p20579
(dp20580
g10
I0
sg11
S'set the properties by parsing a fontconfig pattern .'
p20581
sg12
Vset_fontconfig_pattern.pattern
p20582
sg14
(lp20583
sg2
S'pattern'
p20584
sbasg2
g20573
sbsS'get_legend_handler_map'
p20585
(icodemend.demo.code_suggest
Element
p20586
(dp20587
g10
I0
sg11
S'return the handler map .'
p20588
sg12
Vget_legend_handler_map
p20589
sg14
(lp20590
sg2
g20585
sbs(g101
S'c'
S"'orange'"
p20591
tp20592
(icodemend.demo.code_suggest
Element
p20593
(dp20594
g10
I1
sg11
S''
sg12
Vscatter.c.'orange'
p20595
sg14
(lp20596
sg2
g20591
sbs(S'grid'
p20597
S'drawstyle'
p20598
tp20599
(icodemend.demo.code_suggest
Element
p20600
(dp20601
g10
I0
sg11
S'set the drawstyle of the plot'
p20602
sg12
Vgrid.drawstyle
p20603
sg14
(lp20604
sg2
g20598
sbs(g125
g132
S"'black'"
p20605
tp20606
(icodemend.demo.code_suggest
Element
p20607
(dp20608
g10
I6
sg11
S''
sg12
Vaxvline.color.'black'
p20609
sg14
(lp20610
sg2
g20605
sbs(g582
g909
S'5'
tp20611
g3467
s(S'update_position'
p20612
S'loc'
p20613
tp20614
(icodemend.demo.code_suggest
Element
p20615
(dp20616
g10
I0
sg11
S'set the location of tick in data coords with scalar loc'
p20617
sg12
Vupdate_position.loc
p20618
sg14
(lp20619
sg2
g20613
sbs(S'axhline'
p20620
g3657
tp20621
g3652
s(S'get'
p20622
S'x'
tp20623
(icodemend.demo.code_suggest
Element
p20624
(dp20625
g10
I0
sg11
S'set the x position of the text'
p20626
sg12
Vget.x
p20627
sg14
(lp20628
sg2
S'x'
sbsS'get_minor_formatter'
p20629
(icodemend.demo.code_suggest
Element
p20630
(dp20631
g10
I0
sg11
S'get the formatter of the minor ticker'
p20632
sg12
Vget_minor_formatter
p20633
sg14
(lp20634
sg2
g20629
sbs(S'plot_date'
p20635
g19955
tp20636
g19950
s(S'arrow'
p20637
g2479
tp20638
g2459
s(S'cohere'
p20639
S'animated'
p20640
tp20641
(icodemend.demo.code_suggest
Element
p20642
(dp20643
g10
I0
sg11
S"set the artist 's animation state ."
p20644
sg12
Vcohere.animated
p20645
sg14
(lp20646
sg2
g20640
sbs(g16
g132
S'c1'
p20647
tp20648
(icodemend.demo.code_suggest
Element
p20649
(dp20650
g10
I1
sg11
S''
sg12
Vbar.color.c1
p20651
sg14
(lp20652
sg2
g20647
sbs(g766
g5025
S'M'
tp20653
(icodemend.demo.code_suggest
Element
p20654
(dp20655
g10
I1
sg11
S''
sg12
Vcontourf.vmax.M
p20656
sg14
(lp20657
sg2
S'M'
sbs(g5640
g5641
g10496
tp20658
g11889
s(g332
g10118
S"'center'"
p20659
tp20660
(icodemend.demo.code_suggest
Element
p20661
(dp20662
g10
I24
sg11
S''
sg12
Vtext.verticalalignment.'center'
p20663
sg14
(lp20664
sg2
g20659
sbs(g332
g333
g5240
tp20665
(icodemend.demo.code_suggest
Element
p20666
(dp20667
g10
I1
sg11
S''
sg12
Vtext.bbox.box
p20668
sg14
(lp20669
sg2
g5240
sbs(S'loglog'
p20670
S'nonposx'
p20671
tp20672
(icodemend.demo.code_suggest
Element
p20673
(dp20674
g10
I0
sg11
S'non-positive values in x or y can be masked as invalid , or clipped to a very small positive number'
p20675
sg12
Vloglog.nonposx
p20676
sg14
(lp20677
sg2
g20671
sbs(g766
g7032
g19303
tp20678
g19299
s(S'axhspan'
p20679
S'animated'
p20680
tp20681
(icodemend.demo.code_suggest
Element
p20682
(dp20683
g10
I0
sg11
S"set the artist 's animation state ."
p20684
sg12
Vaxhspan.animated
p20685
sg14
(lp20686
sg2
g20680
sbs(S'blend_hsv'
p20687
S'hsv_min_sat'
p20688
tp20689
(icodemend.demo.code_suggest
Element
p20690
(dp20691
g10
I0
sg11
S'the minimum saturation value that the intensity map can shift the output image to . defaults to 0 .'
p20692
sg12
Vblend_hsv.hsv_min_sat
p20693
sg14
(lp20694
sg2
g20688
sbs(S'fill_between'
p20695
S'interpolate'
p20696
tp20697
(icodemend.demo.code_suggest
Element
p20698
(dp20699
g10
I7
sg11
S'if true , interpolate between the two lines to find the precise point of intersection . otherwise , the start and end points of the filled region will only occur on explicit values in the x array .'
p20700
sg12
Vfill_between.interpolate
p20701
sg14
(lp20702
(icodemend.demo.code_suggest
Element
p20703
(dp20704
g10
I5
sg11
S''
sg12
Vfill_between.interpolate.True
p20705
sg14
(lp20706
sg2
g438
sba(icodemend.demo.code_suggest
Element
p20707
(dp20708
g10
I2
sg11
S''
sg12
Vfill_between.interpolate.False
p20709
sg14
(lp20710
sg2
g1944
sbasg2
g20696
sbs(g5640
g5641
g4225
tp20711
g11972
s(S'stackplot'
p20712
g10448
tp20713
g10438
s(g139
g18399
g1994
tp20714
g1990
s(g332
g627
S'20'
p20715
tp20716
(icodemend.demo.code_suggest
Element
p20717
(dp20718
g10
I2
sg11
S''
sg12
Vtext.size.20
p20719
sg14
(lp20720
sg2
g20715
sbsS'set_linewidth'
p20721
(icodemend.demo.code_suggest
Element
p20722
(dp20723
g10
I41
sg11
S'set the linewidth(s ) for the collection .'
p20724
sg12
Vset_linewidth
p20725
sg14
(lp20726
g73
asg2
g20721
sbs(S'loglog'
p20727
S'label'
p20728
tp20729
(icodemend.demo.code_suggest
Element
p20730
(dp20731
g10
I1
sg11
S'set the label to s for auto legend .'
p20732
sg12
Vloglog.label
p20733
sg14
(lp20734
sg2
g20728
sbs(S'axhline'
p20735
g3585
tp20736
g3580
s(S'ylim'
p20737
S'ymax'
p20738
tp20739
(icodemend.demo.code_suggest
Element
p20740
(dp20741
g10
I4
sg11
S'if you do not specify args , you can pass the ymin and ymax as kwargs , e.g. :'
p20742
sg12
Vylim.ymax
p20743
sg14
(lp20744
(icodemend.demo.code_suggest
Element
p20745
(dp20746
g10
I1
sg11
S''
sg12
Vylim.ymax.1/1
p20747
sg14
(lp20748
sg2
S'1.1'
p20749
sba(icodemend.demo.code_suggest
Element
p20750
(dp20751
g10
I1
sg11
S''
sg12
Vylim.ymax.100
p20752
sg14
(lp20753
sg2
S'100'
p20754
sbag19541
a(icodemend.demo.code_suggest
Element
p20755
(dp20756
g10
I1
sg11
S''
sg12
Vylim.ymax.60
p20757
sg14
(lp20758
sg2
S'60'
p20759
sbasg2
g20738
sbs(S'loglog'
p20760
S'clip_path'
p20761
tp20762
(icodemend.demo.code_suggest
Element
p20763
(dp20764
g10
I0
sg11
S"set the artist 's clip path , which may be"
p20765
sg12
Vloglog.clip_path
p20766
sg14
(lp20767
sg2
g20761
sbs(g252
g8210
g211
tp20768
g207
sS'set_name'
p20769
(icodemend.demo.code_suggest
Element
p20770
(dp20771
g10
I0
sg11
S'change the font family . alias for set_family'
p20772
sg12
Vset_name
p20773
sg14
(lp20774
sg2
g20769
sbsS'get_minorticklines'
p20775
(icodemend.demo.code_suggest
Element
p20776
(dp20777
g10
I0
sg11
S'return the minor tick lines as a list of line2d instances'
p20778
sg12
Vget_minorticklines
p20779
sg14
(lp20780
sg2
g20775
sbs(g5673
g132
S'u'
tp20781
(icodemend.demo.code_suggest
Element
p20782
(dp20783
g10
I2
sg11
S''
sg12
Vstreamplot.color.u
p20784
sg14
(lp20785
sg2
S'u'
sbs(g117
g118
S"'Line 1'"
p20786
tp20787
(icodemend.demo.code_suggest
Element
p20788
(dp20789
g10
I2
sg11
S''
sg12
Vplot.label.'Line 1'
p20790
sg14
(lp20791
sg2
g20786
sbs(S'get_path_collection_extents'
p20792
S'offsets'
p20793
tp20794
(icodemend.demo.code_suggest
Element
p20795
(dp20796
g10
I0
sg11
S'offsets is a sequence of ( x , y ) offsets ( or an nx2 array )|||the way that paths , transforms and offsets are combined follows the same method as for collections . each is iterated over independently , so if you have 3 paths , 2 transforms and 1 offset , their combinations are as follows :'
p20797
sg12
Vget_path_collection_extents.offsets
p20798
sg14
(lp20799
sg2
g20793
sbs(S'eventplot'
p20800
S'xmargin'
p20801
tp20802
(icodemend.demo.code_suggest
Element
p20803
(dp20804
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p20805
sg12
Veventplot.xmargin
p20806
sg14
(lp20807
sg2
g20801
sbsS'stop_event_loop_default'
p20808
(icodemend.demo.code_suggest
Element
p20809
(dp20810
g10
I0
sg11
S'stop an event loop .'
p20811
sg12
Vstop_event_loop_default
p20812
sg14
(lp20813
sg2
g20808
sbsS'findfont'
p20814
(icodemend.demo.code_suggest
Element
p20815
(dp20816
g10
I1
sg11
S'search the font list for the font that most closely matches the fontproperties prop .'
p20817
sg12
Vfindfont
p20818
sg14
(lp20819
(icodemend.demo.code_suggest
Element
p20820
(dp20821
g10
I0
sg11
S'search the font list for the font that most closely matches the fontproperties prop .'
p20822
sg12
Vfindfont.prop
p20823
sg14
(lp20824
sg2
S'prop'
p20825
sbasg2
g20814
sbsS'is_opentype_cff_font'
p20826
(icodemend.demo.code_suggest
Element
p20827
(dp20828
g10
I0
sg11
S'returns true if the given font is a postscript compact font format font embedded in an opentype wrapper .'
p20829
sg12
Vis_opentype_cff_font
p20830
sg14
(lp20831
sg2
g20826
sbs(S'pcolormesh'
p20832
S'clip_path'
p20833
tp20834
(icodemend.demo.code_suggest
Element
p20835
(dp20836
g10
I0
sg11
S"set the artist 's clip path , which may be"
p20837
sg12
Vpcolormesh.clip_path
p20838
sg14
(lp20839
sg2
g20833
sbs(g452
g10590
S'0.1'
p20840
tp20841
(icodemend.demo.code_suggest
Element
p20842
(dp20843
g10
I1
sg11
S''
sg12
Verrorbar.ms.0/1
p20844
sg14
(lp20845
sg2
g20840
sbs(S'get_yaxis_text2_transform'
p20846
S'halign'
p20847
tp20848
(icodemend.demo.code_suggest
Element
p20849
(dp20850
g10
I0
sg11
S'where valign and halign are requested alignments for the text .'
p20851
sg12
Vget_yaxis_text2_transform.halign
p20852
sg14
(lp20853
sg2
g20847
sbs(g324
g325
g9252
tp20854
g9248
s(S'pts_to_prestep'
p20855
S'x'
tp20856
g4448
s(g944
g245
S'fig'
p20857
tp20858
(icodemend.demo.code_suggest
Element
p20859
(dp20860
g10
I1
sg11
S''
sg12
Vbarh.figure.fig
p20861
sg14
(lp20862
sg2
g20857
sbs(S'errorbar'
p20863
S'yticklabels'
p20864
tp20865
(icodemend.demo.code_suggest
Element
p20866
(dp20867
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p20868
sg12
Verrorbar.yticklabels
p20869
sg14
(lp20870
sg2
g20864
sbs(S'arrow'
p20871
g2760
tp20872
g2755
s(S'plot_date'
p20873
g19871
tp20874
g19866
s(S'angle_spectrum'
p20875
g18798
tp20876
g18793
s(g117
g118
S"'_nolegend_'"
p20877
tp20878
(icodemend.demo.code_suggest
Element
p20879
(dp20880
g10
I1
sg11
S''
sg12
Vplot.label.'_nolegend_'
p20881
sg14
(lp20882
sg2
g20877
sbs(g4998
g325
S"'RdYlBu'"
p20883
tp20884
(icodemend.demo.code_suggest
Element
p20885
(dp20886
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.'RdYlBu'
p20887
sg14
(lp20888
sg2
g20883
sbs(S'triplot'
p20889
S'scaley'
p20890
tp20891
(icodemend.demo.code_suggest
Element
p20892
(dp20893
g10
I0
sg11
S'autoscale the view limits using the data limits . you can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to false . the autoscaling preserves any axis direction reversal that has already been done .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p20894
sg12
Vtriplot.scaley
p20895
sg14
(lp20896
sg2
g20890
sbs(g117
S'rasterized'
p20897
g438
tp20898
(icodemend.demo.code_suggest
Element
p20899
(dp20900
g10
I3
sg11
S''
sg12
Vplot.rasterized.True
p20901
sg14
(lp20902
sg2
g438
sbs(S'axvspan'
p20903
S'x'
tp20904
(icodemend.demo.code_suggest
Element
p20905
(dp20906
g10
I0
sg11
S'x coords are in data units and y coords are in axes ( relative 0-1 ) units .'
p20907
sg12
Vaxvspan.x
p20908
sg14
(lp20909
sg2
S'x'
sbs(g139
g140
g1707
tp20910
g1703
s(g245
g140
S'(2, 2)'
p20911
tp20912
(icodemend.demo.code_suggest
Element
p20913
(dp20914
g10
I2
sg11
S''
sg12
Vfigure.figsize.(2, 2)
p20915
sg14
(lp20916
sg2
g20911
sbs(S'tricontourf'
p20917
g11607
tp20918
g11602
s(S'tricontour'
p20919
g666
g666
tp20920
g1332
s(g117
g118
S'colorName'
p20921
tp20922
(icodemend.demo.code_suggest
Element
p20923
(dp20924
g10
I1
sg11
S''
sg12
Vplot.label.colorName
p20925
sg14
(lp20926
sg2
g20921
sbs(g117
g118
S"'Up'"
p20927
tp20928
(icodemend.demo.code_suggest
Element
p20929
(dp20930
g10
I1
sg11
S''
sg12
Vplot.label.'Up'
p20931
sg14
(lp20932
sg2
g20927
sbs(g93
g4800
S'((i - 1), (i + 0.5))'
p20933
tp20934
(icodemend.demo.code_suggest
Element
p20935
(dp20936
g10
I1
sg11
S''
sg12
Vannotate.xytext.((i - 1), (i + 0/5))
p20937
sg14
(lp20938
sg2
g20933
sbs(g452
g12650
S'8'
tp20939
(icodemend.demo.code_suggest
Element
p20940
(dp20941
g10
I1
sg11
S''
sg12
Verrorbar.capsize.8
p20942
sg14
(lp20943
sg2
S'8'
sbs(S'triplot'
p20944
S'x'
tp20945
(icodemend.demo.code_suggest
Element
p20946
(dp20947
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .'
p20948
sg12
Vtriplot.x
p20949
sg14
(lp20950
sg2
S'x'
sbs(g766
g666
g4028
tp20951
g4024
sS'MarkerStyle'
p20952
(icodemend.demo.code_suggest
Element
p20953
(dp20954
g10
I1
sg11
S''
sg12
VMarkerStyle
p20955
sg14
(lp20956
(icodemend.demo.code_suggest
Element
p20957
(dp20958
g10
I0
sg11
S'\' full \' , \' left " , \' right \' , \' bottom \' , \' top \' , \' none \''
p20959
sg12
VMarkerStyle.fillstyle
p20960
sg14
(lp20961
sg2
S'fillstyle'
p20962
sba(icodemend.demo.code_suggest
Element
p20963
(dp20964
g10
I0
sg11
S'see the descriptions of possible markers in the module docstring .'
p20965
sg12
VMarkerStyle.marker
p20966
sg14
(lp20967
sg2
S'marker'
p20968
sbasg2
g20952
sbs(S'SimpleLineShadow'
p20969
S'**kwargs'
p20970
tp20971
(icodemend.demo.code_suggest
Element
p20972
(dp20973
g10
I0
sg11
S'extra keywords are stored and passed through to abstractpatheffect._update_gc ( ) .'
p20974
sg12
VSimpleLineShadow.**kwargs
p20975
sg14
(lp20976
sg2
g20970
sbs(S'set_xticklabels'
p20977
g17306
tp20978
g17301
s(S'scatter'
p20979
S'hatch'
p20980
tp20981
(icodemend.demo.code_suggest
Element
p20982
(dp20983
g10
I2
sg11
S'set the hatching pattern'
p20984
sg12
Vscatter.hatch
p20985
sg14
(lp20986
(icodemend.demo.code_suggest
Element
p20987
(dp20988
g10
I1
sg11
S''
sg12
Vscatter.hatch.'|'
p20989
sg14
(lp20990
sg2
S"'|'"
p20991
sba(icodemend.demo.code_suggest
Element
p20992
(dp20993
g10
I1
sg11
S''
sg12
Vscatter.hatch.'||||'
p20994
sg14
(lp20995
sg2
S"'||||'"
p20996
sbasg2
g20980
sbs(S'use'
p20997
S'style'
p20998
tp20999
(icodemend.demo.code_suggest
Element
p21000
(dp21001
g10
I0
sg11
S'a style specification . valid options are :'
p21002
sg12
Vuse.style
p21003
sg14
(lp21004
sg2
g20998
sbsS'set_color'
p21005
(icodemend.demo.code_suggest
Element
p21006
(dp21007
g10
I219
sg11
S'set both the edgecolor and the facecolor .'
p21008
sg12
Vset_color
p21009
sg14
(lp21010
(icodemend.demo.code_suggest
Element
p21011
(dp21012
g10
I0
sg11
S'set the color(s ) of the line collection . c can be a matplotlib color arg ( all patches have same color ) , or a sequence or rgba tuples ; if it is a sequence the patches will cycle through the sequence .'
p21013
sg12
Vset_color.c
p21014
sg14
(lp21015
sg2
S'c'
sbasg2
g21005
sbs(S'legend'
p21016
g14346
tp21017
g14252
s(S'rgrids'
p21018
S'linestyle'
p21019
tp21020
(icodemend.demo.code_suggest
Element
p21021
(dp21022
g10
I0
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )"
p21023
sg12
Vrgrids.linestyle
p21024
sg14
(lp21025
sg2
g21019
sbs(S'add_axes'
p21026
S'aspect'
p21027
tp21028
(icodemend.demo.code_suggest
Element
p21029
(dp21030
g10
I1
sg11
S'aspect'
p21031
sg12
Vadd_axes.aspect
p21032
sg14
(lp21033
(icodemend.demo.code_suggest
Element
p21034
(dp21035
g10
I1
sg11
S''
sg12
Vadd_axes.aspect.'equal'
p21036
sg14
(lp21037
sg2
S"'equal'"
p21038
sbasg2
g21027
sbs(g324
g325
g9257
tp21039
g9253
s(g117
g2251
S"'none'"
p21040
tp21041
(icodemend.demo.code_suggest
Element
p21042
(dp21043
g10
I13
sg11
S''
sg12
Vplot.linestyle.'none'
p21044
sg14
(lp21045
sg2
g21040
sbs(g5562
g325
g9074
tp21046
g10809
s(S'plot'
p21047
S'transform'
p21048
tp21049
(icodemend.demo.code_suggest
Element
p21050
(dp21051
g10
I24
sg11
S'set the transformation instance used by this artist'
p21052
sg12
Vplot.transform
p21053
sg14
(lp21054
(icodemend.demo.code_suggest
Element
p21055
(dp21056
g10
I1
sg11
S''
sg12
Vplot.transform.None
p21057
sg14
(lp21058
sg2
g865
sba(icodemend.demo.code_suggest
Element
p21059
(dp21060
g10
I1
sg11
S''
sg12
Vplot.transform.mark_align_left
p21061
sg14
(lp21062
sg2
S'mark_align_left'
p21063
sba(icodemend.demo.code_suggest
Element
p21064
(dp21065
g10
I1
sg11
S''
sg12
Vplot.transform.mark_align_right
p21066
sg14
(lp21067
sg2
S'mark_align_right'
p21068
sba(icodemend.demo.code_suggest
Element
p21069
(dp21070
g10
I1
sg11
S''
sg12
Vplot.transform.t
p21071
sg14
(lp21072
sg2
S't'
sba(icodemend.demo.code_suggest
Element
p21073
(dp21074
g10
I1
sg11
S''
sg12
Vplot.transform.trans
p21075
sg14
(lp21076
sg2
g5556
sba(icodemend.demo.code_suggest
Element
p21077
(dp21078
g10
I1
sg11
S''
sg12
Vplot.transform.trans_spine
p21079
sg14
(lp21080
sg2
S'trans_spine'
p21081
sbasg2
g21048
sbs(S'griddata'
p21082
S'interp'
p21083
tp21084
(icodemend.demo.code_suggest
Element
p21085
(dp21086
g10
I11
sg11
S"interpolation algorithm , either ' nn ' for natural neighbor , or ' linear ' for linear interpolation ."
p21087
sg12
Vgriddata.interp
p21088
sg14
(lp21089
g16515
a(icodemend.demo.code_suggest
Element
p21090
(dp21091
g10
I4
sg11
S''
sg12
Vgriddata.interp.'nn'
p21092
sg14
(lp21093
sg2
S"'nn'"
p21094
sbasg2
g21083
sbsS'ishold'
p21095
(icodemend.demo.code_suggest
Element
p21096
(dp21097
g10
I1
sg11
S'return the hold status of the axes return the hold status of the current axes .'
p21098
sg12
Vishold
p21099
sg14
(lp21100
sg2
g21095
sbs(g252
S'markerscale'
p21101
g14583
tp21102
g14579
s(S'shade'
p21103
S'vmin'
p21104
tp21105
(icodemend.demo.code_suggest
Element
p21106
(dp21107
g10
I0
sg11
S'the minimum value used in colormapping data . if none the minimum value in data is used . if norm is specified , then this argument will be ignored .'
p21108
sg12
Vshade.vmin
p21109
sg14
(lp21110
sg2
g21104
sbs(g117
g118
S"'black dash'"
p21111
tp21112
(icodemend.demo.code_suggest
Element
p21113
(dp21114
g10
I1
sg11
S''
sg12
Vplot.label.'black dash'
p21115
sg14
(lp21116
sg2
g21111
sbsS'get_fontvariant'
p21117
(icodemend.demo.code_suggest
Element
p21118
(dp21119
g10
I0
sg11
S'alias for get_variant'
p21120
sg12
Vget_fontvariant
p21121
sg14
(lp21122
sg2
g21117
sbs(g117
g118
S"'30 Day SMA'"
p21123
tp21124
(icodemend.demo.code_suggest
Element
p21125
(dp21126
g10
I1
sg11
S''
sg12
Vplot.label.'30 Day SMA'
p21127
sg14
(lp21128
sg2
g21123
sbs(g514
g8538
g8538
tp21129
(icodemend.demo.code_suggest
Element
p21130
(dp21131
g10
I1
sg11
S''
sg12
Vpcolor.edgecolors.edgecolors
p21132
sg14
(lp21133
sg2
g8538
sbs(g101
g325
g9094
tp21134
(icodemend.demo.code_suggest
Element
p21135
(dp21136
g10
I7
sg11
S''
sg12
Vscatter.cmap.cm
p21137
sg14
(lp21138
sg2
g9094
sbs(g514
g2392
S'2'
tp21139
(icodemend.demo.code_suggest
Element
p21140
(dp21141
g10
I1
sg11
S''
sg12
Vpcolor.linewidth.2
p21142
sg14
(lp21143
sg2
S'2'
sbsS'violinplot'
p21144
(icodemend.demo.code_suggest
Element
p21145
(dp21146
g10
I5
sg11
S'make a violin plot .'
p21147
sg12
Vviolinplot
p21148
sg14
(lp21149
(icodemend.demo.code_suggest
Element
p21150
(dp21151
g10
I0
sg11
S'the input data .'
p21152
sg12
Vviolinplot.dataset
p21153
sg14
(lp21154
sg2
S'dataset'
p21155
sbasg2
g21144
sbs(g117
g118
S"'scatter'"
p21156
tp21157
(icodemend.demo.code_suggest
Element
p21158
(dp21159
g10
I1
sg11
S''
sg12
Vplot.label.'scatter'
p21160
sg14
(lp21161
sg2
g21156
sbs(g5975
S'y'
g19687
tp21162
g19683
s(S'set_yticklabels'
p21163
g3084
g17000
tp21164
g17991
sS'twiny'
p21165
(icodemend.demo.code_suggest
Element
p21166
(dp21167
g10
I31
sg11
S'create a twin of axes for generating a plot with a shared y-axis but independent x axis . make a second axes that shares the y - axis .'
p21168
sg12
Vtwiny
p21169
sg14
(lp21170
(icodemend.demo.code_suggest
Element
p21171
(dp21172
g10
I1
sg11
S'make a second axes that shares the y - axis . the new axis will overlay ax ( or the current axes if ax is none ) . the ticks for ax2 will be placed on the top , and the ax2 instance is returned .'
p21173
sg12
Vtwiny.ax
p21174
sg14
(lp21175
sg2
S'ax'
p21176
sba(icodemend.demo.code_suggest
Element
p21177
(dp21178
g10
I0
sg11
S'make a second axes that shares the y - axis . the new axis will overlay ax ( or the current axes if ax is none ) . the ticks for ax2 will be placed on the top , and the ax2 instance is returned .'
p21179
sg12
Vtwiny.ax2
p21180
sg14
(lp21181
sg2
S'ax2'
p21182
sba(icodemend.demo.code_suggest
Element
p21183
(dp21184
g10
I0
sg11
S'make a second axes that shares the y - axis . the new axis will overlay ax ( or the current axes if ax is none ) . the ticks for ax2 will be placed on the top , and the ax2 instance is returned .'
p21185
sg12
Vtwiny.y
p21186
sg14
(lp21187
sg2
S'y'
sbasg2
g21165
sbsS'twinx'
p21188
(icodemend.demo.code_suggest
Element
p21189
(dp21190
g10
I100
sg11
S'create a twin of axes for generating a plot with a sharex x-axis but independent y axis . make a second axes that shares the x - axis .'
p21191
sg12
Vtwinx
p21192
sg14
(lp21193
(icodemend.demo.code_suggest
Element
p21194
(dp21195
g10
I1
sg11
S'make a second axes that shares the x - axis . the new axes will overlay ax ( or the current axes if ax is none ) . the ticks for ax2 will be placed on the right , and the ax2 instance is returned .'
p21196
sg12
Vtwinx.ax
p21197
sg14
(lp21198
sg2
S'ax'
p21199
sbag1292
a(icodemend.demo.code_suggest
Element
p21200
(dp21201
g10
I0
sg11
S'make a second axes that shares the x - axis . the new axes will overlay ax ( or the current axes if ax is none ) . the ticks for ax2 will be placed on the right , and the ax2 instance is returned .'
p21202
sg12
Vtwinx.x
p21203
sg14
(lp21204
sg2
S'x'
sbasg2
g21188
sbs(g117
g132
S"'#3399FF'"
p21205
tp21206
(icodemend.demo.code_suggest
Element
p21207
(dp21208
g10
I1
sg11
S''
sg12
Vplot.color.'#3399FF'
p21209
sg14
(lp21210
sg2
g21205
sbs(S'csd'
p21211
S'codes'
p21212
tp21213
(icodemend.demo.code_suggest
Element
p21214
(dp21215
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p21216
sg12
Vcsd.codes
p21217
sg14
(lp21218
sg2
g21212
sbs(g332
g132
S"'r'"
p21219
tp21220
(icodemend.demo.code_suggest
Element
p21221
(dp21222
g10
I4
sg11
S''
sg12
Vtext.color.'r'
p21223
sg14
(lp21224
sg2
g21219
sbs(g582
g2392
S'3'
tp21225
g3433
s(S'candlestick_ohlc'
p21226
S'colorup'
p21227
tp21228
(icodemend.demo.code_suggest
Element
p21229
(dp21230
g10
I0
sg11
S'the color of the rectangle where close > = open'
p21231
sg12
Vcandlestick_ohlc.colorup
p21232
sg14
(lp21233
sg2
g21227
sbs(g514
g5025
g5025
tp21234
g10564
s(S'plot_date'
p21235
g19991
tp21236
g19986
s(g93
g161
S'(x, 1)'
p21237
tp21238
(icodemend.demo.code_suggest
Element
p21239
(dp21240
g10
I2
sg11
S''
sg12
Vannotate.xy.(x, 1)
p21241
sg14
(lp21242
sg2
g21237
sbs(S'findfont'
p21243
g20825
tp21244
g20820
s(g21163
g13486
g18005
tp21245
g18001
s(g117
g118
S"'Plain Line'"
p21246
tp21247
(icodemend.demo.code_suggest
Element
p21248
(dp21249
g10
I2
sg11
S''
sg12
Vplot.label.'Plain Line'
p21250
sg14
(lp21251
sg2
g21246
sbs(g965
g118
S"'ax1'"
p21252
tp21253
(icodemend.demo.code_suggest
Element
p21254
(dp21255
g10
I1
sg11
S''
sg12
Vadd_axes.label.'ax1'
p21256
sg14
(lp21257
sg2
g21252
sbsS'scatter'
p21258
(icodemend.demo.code_suggest
Element
p21259
(dp21260
g10
I803
sg11
S'make a scatter plot of x vs y , where x and y are sequence like objects of the same lengths .'
p21261
sg12
Vscatter
p21262
sg14
(lp21263
(icodemend.demo.code_suggest
Element
p21264
(dp21265
g10
I357
sg11
S'c can be a single color format string , or a sequence of color specifications of length n , or a sequence of n numbers to be mapped to colors using the cmap and norm specified via kwargs ( see below ) . note that c should not be a single numeric rgb or rgba sequence because that is indistinguishable from an array of values to be colormapped . c can be a 2-d array in which the rows are rgb or rgba , however , including the case of a single row to specify the same color for all points .'
p21266
sg12
Vscatter.c
p21267
sg14
(lp21268
(icodemend.demo.code_suggest
Element
p21269
(dp21270
g10
I40
sg11
S''
sg12
Vscatter.c.z
p21271
sg14
(lp21272
sg2
S'z'
sba(icodemend.demo.code_suggest
Element
p21273
(dp21274
g10
I34
sg11
S''
sg12
Vscatter.c.'r'
p21275
sg14
(lp21276
sg2
S"'r'"
p21277
sba(icodemend.demo.code_suggest
Element
p21278
(dp21279
g10
I32
sg11
S''
sg12
Vscatter.c.'b'
p21280
sg14
(lp21281
sg2
S"'b'"
p21282
sba(icodemend.demo.code_suggest
Element
p21283
(dp21284
g10
I26
sg11
S''
sg12
Vscatter.c.c
p21285
sg14
(lp21286
sg2
S'c'
sba(icodemend.demo.code_suggest
Element
p21287
(dp21288
g10
I17
sg11
S''
sg12
Vscatter.c.colors
p21289
sg14
(lp21290
sg2
g7032
sba(icodemend.demo.code_suggest
Element
p21291
(dp21292
g10
I12
sg11
S''
sg12
Vscatter.c.'k'
p21293
sg14
(lp21294
sg2
S"'k'"
p21295
sba(icodemend.demo.code_suggest
Element
p21296
(dp21297
g10
I6
sg11
S''
sg12
Vscatter.c.'red'
p21298
sg14
(lp21299
sg2
S"'red'"
p21300
sba(icodemend.demo.code_suggest
Element
p21301
(dp21302
g10
I6
sg11
S''
sg12
Vscatter.c.color
p21303
sg14
(lp21304
sg2
g132
sba(icodemend.demo.code_suggest
Element
p21305
(dp21306
g10
I5
sg11
S''
sg12
Vscatter.c.'blue'
p21307
sg14
(lp21308
sg2
S"'blue'"
p21309
sba(icodemend.demo.code_suggest
Element
p21310
(dp21311
g10
I5
sg11
S''
sg12
Vscatter.c.col
p21312
sg14
(lp21313
sg2
S'col'
p21314
sbag8864
a(icodemend.demo.code_suggest
Element
p21315
(dp21316
g10
I4
sg11
S''
sg12
Vscatter.c.count
p21317
sg14
(lp21318
sg2
g10
sba(icodemend.demo.code_suggest
Element
p21319
(dp21320
g10
I4
sg11
S''
sg12
Vscatter.c.t
p21321
sg14
(lp21322
sg2
S't'
sba(icodemend.demo.code_suggest
Element
p21323
(dp21324
g10
I4
sg11
S''
sg12
Vscatter.c.y
p21325
sg14
(lp21326
sg2
S'y'
sba(icodemend.demo.code_suggest
Element
p21327
(dp21328
g10
I3
sg11
S''
sg12
Vscatter.c.'g'
p21329
sg14
(lp21330
sg2
S"'g'"
p21331
sbag6978
a(icodemend.demo.code_suggest
Element
p21332
(dp21333
g10
I3
sg11
S''
sg12
Vscatter.c.carr
p21334
sg14
(lp21335
sg2
S'carr'
p21336
sba(icodemend.demo.code_suggest
Element
p21337
(dp21338
g10
I3
sg11
S''
sg12
Vscatter.c.values
p21339
sg14
(lp21340
sg2
S'values'
p21341
sba(icodemend.demo.code_suggest
Element
p21342
(dp21343
g10
I3
sg11
S''
sg12
Vscatter.c.x
p21344
sg14
(lp21345
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p21346
(dp21347
g10
I2
sg11
S''
sg12
Vscatter.c.'black'
p21348
sg14
(lp21349
sg2
S"'black'"
p21350
sba(icodemend.demo.code_suggest
Element
p21351
(dp21352
g10
I2
sg11
S''
sg12
Vscatter.c.'white'
p21353
sg14
(lp21354
sg2
S"'white'"
p21355
sba(icodemend.demo.code_suggest
Element
p21356
(dp21357
g10
I2
sg11
S''
sg12
Vscatter.c.((i / nbodies), (i / nbodies), (i / nbodies))
p21358
sg14
(lp21359
sg2
S'((i / nbodies), (i / nbodies), (i / nbodies))'
p21360
sba(icodemend.demo.code_suggest
Element
p21361
(dp21362
g10
I2
sg11
S''
sg12
Vscatter.c.cs
p21363
sg14
(lp21364
sg2
S'cs'
p21365
sba(icodemend.demo.code_suggest
Element
p21366
(dp21367
g10
I2
sg11
S''
sg12
Vscatter.c.lst
p21368
sg14
(lp21369
sg2
S'lst'
p21370
sbag7998
a(icodemend.demo.code_suggest
Element
p21371
(dp21372
g10
I2
sg11
S''
sg12
Vscatter.c.z2
p21373
sg14
(lp21374
sg2
S'z2'
p21375
sba(icodemend.demo.code_suggest
Element
p21376
(dp21377
g10
I1
sg11
S''
sg12
Vscatter.c.'#9E0050'
p21378
sg14
(lp21379
sg2
S"'#9E0050'"
p21380
sba(icodemend.demo.code_suggest
Element
p21381
(dp21382
g10
I1
sg11
S''
sg12
Vscatter.c.'/3'
p21383
sg14
(lp21384
sg2
S"'.3'"
p21385
sba(icodemend.demo.code_suggest
Element
p21386
(dp21387
g10
I1
sg11
S''
sg12
Vscatter.c.'/75'
p21388
sg14
(lp21389
sg2
S"'.75'"
p21390
sbag13710
a(icodemend.demo.code_suggest
Element
p21391
(dp21392
g10
I1
sg11
S''
sg12
Vscatter.c.'White'
p21393
sg14
(lp21394
sg2
S"'White'"
p21395
sba(icodemend.demo.code_suggest
Element
p21396
(dp21397
g10
I1
sg11
S''
sg12
Vscatter.c.'goldenrod'
p21398
sg14
(lp21399
sg2
S"'goldenrod'"
p21400
sba(icodemend.demo.code_suggest
Element
p21401
(dp21402
g10
I1
sg11
S''
sg12
Vscatter.c.'green'
p21403
sg14
(lp21404
sg2
S"'green'"
p21405
sba(icodemend.demo.code_suggest
Element
p21406
(dp21407
g10
I1
sg11
S''
sg12
Vscatter.c.'none'
p21408
sg14
(lp21409
sg2
S"'none'"
p21410
sbag20593
a(icodemend.demo.code_suggest
Element
p21411
(dp21412
g10
I1
sg11
S''
sg12
Vscatter.c.'tomato'
p21413
sg14
(lp21414
sg2
S"'tomato'"
p21415
sba(icodemend.demo.code_suggest
Element
p21416
(dp21417
g10
I1
sg11
S''
sg12
Vscatter.c.((item[2] / 10/0), 0, (1 - (item[2] / 10/0)))
p21418
sg14
(lp21419
sg2
S'((item[2] / 10.0), 0, (1 - (item[2] / 10.0)))'
p21420
sbag10050
a(icodemend.demo.code_suggest
Element
p21421
(dp21422
g10
I1
sg11
S''
sg12
Vscatter.c.C
p21423
sg14
(lp21424
sg2
S'C'
sba(icodemend.demo.code_suggest
Element
p21425
(dp21426
g10
I1
sg11
S''
sg12
Vscatter.c.Temp
p21427
sg14
(lp21428
sg2
S'Temp'
p21429
sba(icodemend.demo.code_suggest
Element
p21430
(dp21431
g10
I1
sg11
S''
sg12
Vscatter.c.X
p21432
sg14
(lp21433
sg2
S'X'
sba(icodemend.demo.code_suggest
Element
p21434
(dp21435
g10
I1
sg11
S''
sg12
Vscatter.c.Y
p21436
sg14
(lp21437
sg2
S'Y'
sba(icodemend.demo.code_suggest
Element
p21438
(dp21439
g10
I1
sg11
S''
sg12
Vscatter.c.['g', 'r']
p21440
sg14
(lp21441
sg2
S"['g', 'r']"
p21442
sba(icodemend.demo.code_suggest
Element
p21443
(dp21444
g10
I1
sg11
S''
sg12
Vscatter.c.['k', 'r', 'g', 'r', 'b']
p21445
sg14
(lp21446
sg2
S"['k', 'r', 'g', 'r', 'b']"
p21447
sba(icodemend.demo.code_suggest
Element
p21448
(dp21449
g10
I1
sg11
S''
sg12
Vscatter.c.a
p21450
sg14
(lp21451
sg2
S'a'
sba(icodemend.demo.code_suggest
Element
p21452
(dp21453
g10
I1
sg11
S''
sg12
Vscatter.c.angle
p21454
sg14
(lp21455
sg2
S'angle'
p21456
sba(icodemend.demo.code_suggest
Element
p21457
(dp21458
g10
I1
sg11
S''
sg12
Vscatter.c.be
p21459
sg14
(lp21460
sg2
S'be'
p21461
sbag20206
a(icodemend.demo.code_suggest
Element
p21462
(dp21463
g10
I1
sg11
S''
sg12
Vscatter.c.c1
p21464
sg14
(lp21465
sg2
g20647
sba(icodemend.demo.code_suggest
Element
p21466
(dp21467
g10
I1
sg11
S''
sg12
Vscatter.c.c2
p21468
sg14
(lp21469
sg2
S'c2'
p21470
sba(icodemend.demo.code_suggest
Element
p21471
(dp21472
g10
I1
sg11
S''
sg12
Vscatter.c.center_colors
p21473
sg14
(lp21474
sg2
S'center_colors'
p21475
sba(icodemend.demo.code_suggest
Element
p21476
(dp21477
g10
I1
sg11
S''
sg12
Vscatter.c.close
p21478
sg14
(lp21479
sg2
S'close'
p21480
sba(icodemend.demo.code_suggest
Element
p21481
(dp21482
g10
I1
sg11
S''
sg12
Vscatter.c.clr
p21483
sg14
(lp21484
sg2
g11761
sba(icodemend.demo.code_suggest
Element
p21485
(dp21486
g10
I1
sg11
S''
sg12
Vscatter.c.coldata
p21487
sg14
(lp21488
sg2
S'coldata'
p21489
sbag10895
a(icodemend.demo.code_suggest
Element
p21490
(dp21491
g10
I1
sg11
S''
sg12
Vscatter.c.cols
p21492
sg14
(lp21493
sg2
g5577
sba(icodemend.demo.code_suggest
Element
p21494
(dp21495
g10
I1
sg11
S''
sg12
Vscatter.c.counts
p21496
sg14
(lp21497
sg2
g7761
sba(icodemend.demo.code_suggest
Element
p21498
(dp21499
g10
I1
sg11
S''
sg12
Vscatter.c.curr_color
p21500
sg14
(lp21501
sg2
S'curr_color'
p21502
sba(icodemend.demo.code_suggest
Element
p21503
(dp21504
g10
I1
sg11
S''
sg12
Vscatter.c.data2
p21505
sg14
(lp21506
sg2
S'data2'
p21507
sbag6998
a(icodemend.demo.code_suggest
Element
p21508
(dp21509
g10
I1
sg11
S''
sg12
Vscatter.c.dcolor
p21510
sg14
(lp21511
sg2
S'dcolor'
p21512
sbag6374
a(icodemend.demo.code_suggest
Element
p21513
(dp21514
g10
I1
sg11
S''
sg12
Vscatter.c.h
p21515
sg14
(lp21516
sg2
S'h'
sba(icodemend.demo.code_suggest
Element
p21517
(dp21518
g10
I1
sg11
S''
sg12
Vscatter.c.hail_prob
p21519
sg14
(lp21520
sg2
S'hail_prob'
p21521
sba(icodemend.demo.code_suggest
Element
p21522
(dp21523
g10
I1
sg11
S''
sg12
Vscatter.c.individuals
p21524
sg14
(lp21525
sg2
S'individuals'
p21526
sba(icodemend.demo.code_suggest
Element
p21527
(dp21528
g10
I1
sg11
S''
sg12
Vscatter.c.level
p21529
sg14
(lp21530
sg2
S'level'
p21531
sba(icodemend.demo.code_suggest
Element
p21532
(dp21533
g10
I1
sg11
S''
sg12
Vscatter.c.normCostTrain
p21534
sg14
(lp21535
sg2
S'normCostTrain'
p21536
sba(icodemend.demo.code_suggest
Element
p21537
(dp21538
g10
I1
sg11
S''
sg12
Vscatter.c.pal1
p21539
sg14
(lp21540
sg2
S'pal1'
p21541
sba(icodemend.demo.code_suggest
Element
p21542
(dp21543
g10
I1
sg11
S''
sg12
Vscatter.c.pal2
p21544
sg14
(lp21545
sg2
S'pal2'
p21546
sba(icodemend.demo.code_suggest
Element
p21547
(dp21548
g10
I1
sg11
S''
sg12
Vscatter.c.point_values
p21549
sg14
(lp21550
sg2
S'point_values'
p21551
sba(icodemend.demo.code_suggest
Element
p21552
(dp21553
g10
I1
sg11
S''
sg12
Vscatter.c.r
p21554
sg14
(lp21555
sg2
S'r'
sba(icodemend.demo.code_suggest
Element
p21556
(dp21557
g10
I1
sg11
S''
sg12
Vscatter.c.sizes
p21558
sg14
(lp21559
sg2
g7786
sba(icodemend.demo.code_suggest
Element
p21560
(dp21561
g10
I1
sg11
S''
sg12
Vscatter.c.tag
p21562
sg14
(lp21563
sg2
S'tag'
p21564
sba(icodemend.demo.code_suggest
Element
p21565
(dp21566
g10
I1
sg11
S''
sg12
Vscatter.c.v
p21567
sg14
(lp21568
sg2
S'v'
sba(icodemend.demo.code_suggest
Element
p21569
(dp21570
g10
I1
sg11
S''
sg12
Vscatter.c.value
p21571
sg14
(lp21572
sg2
g19697
sba(icodemend.demo.code_suggest
Element
p21573
(dp21574
g10
I1
sg11
S''
sg12
Vscatter.c.void_fraction
p21575
sg14
(lp21576
sg2
S'void_fraction'
p21577
sba(icodemend.demo.code_suggest
Element
p21578
(dp21579
g10
I1
sg11
S''
sg12
Vscatter.c.x3
p21580
sg14
(lp21581
sg2
S'x3'
p21582
sbag2925
a(icodemend.demo.code_suggest
Element
p21583
(dp21584
g10
I1
sg11
S''
sg12
Vscatter.c.z2_vals
p21585
sg14
(lp21586
sg2
S'z2_vals'
p21587
sba(icodemend.demo.code_suggest
Element
p21588
(dp21589
g10
I1
sg11
S''
sg12
Vscatter.c.z_ma
p21590
sg14
(lp21591
sg2
S'z_ma'
p21592
sba(icodemend.demo.code_suggest
Element
p21593
(dp21594
g10
I1
sg11
S''
sg12
Vscatter.c.z_valid
p21595
sg14
(lp21596
sg2
S'z_valid'
p21597
sba(icodemend.demo.code_suggest
Element
p21598
(dp21599
g10
I1
sg11
S''
sg12
Vscatter.c.z_vals
p21600
sg14
(lp21601
sg2
S'z_vals'
p21602
sba(icodemend.demo.code_suggest
Element
p21603
(dp21604
g10
I1
sg11
S''
sg12
Vscatter.c.zdata
p21605
sg14
(lp21606
sg2
S'zdata'
p21607
sbag3913
a(icodemend.demo.code_suggest
Element
p21608
(dp21609
g10
I1
sg11
S''
sg12
Vscatter.c.zz
p21610
sg14
(lp21611
sg2
S'zz'
p21612
sbasg2
S'c'
sbag7520
a(icodemend.demo.code_suggest
Element
p21613
(dp21614
g10
I211
sg11
S'see markers for more information on the different styles of markers scatter supports . marker can be either an instance of the class or the text shorthand for a particular marker .'
p21615
sg12
Vscatter.marker
p21616
sg14
(lp21617
(icodemend.demo.code_suggest
Element
p21618
(dp21619
g10
I78
sg11
S''
sg12
Vscatter.marker.'o'
p21620
sg14
(lp21621
sg2
S"'o'"
p21622
sba(icodemend.demo.code_suggest
Element
p21623
(dp21624
g10
I26
sg11
S''
sg12
Vscatter.marker.'s'
p21625
sg14
(lp21626
sg2
S"'s'"
p21627
sba(icodemend.demo.code_suggest
Element
p21628
(dp21629
g10
I17
sg11
S''
sg12
Vscatter.marker.'+'
p21630
sg14
(lp21631
sg2
S"'+'"
p21632
sba(icodemend.demo.code_suggest
Element
p21633
(dp21634
g10
I16
sg11
S''
sg12
Vscatter.marker.'x'
p21635
sg14
(lp21636
sg2
S"'x'"
p21637
sba(icodemend.demo.code_suggest
Element
p21638
(dp21639
g10
I11
sg11
S''
sg12
Vscatter.marker.m
p21640
sg14
(lp21641
sg2
S'm'
sba(icodemend.demo.code_suggest
Element
p21642
(dp21643
g10
I9
sg11
S''
sg12
Vscatter.marker.'^'
p21644
sg14
(lp21645
sg2
S"'^'"
p21646
sba(icodemend.demo.code_suggest
Element
p21647
(dp21648
g10
I6
sg11
S''
sg12
Vscatter.marker.'/'
p21649
sg14
(lp21650
sg2
S"'.'"
p21651
sba(icodemend.demo.code_suggest
Element
p21652
(dp21653
g10
I5
sg11
S''
sg12
Vscatter.marker.'*'
p21654
sg14
(lp21655
sg2
S"'*'"
p21656
sbag16521
a(icodemend.demo.code_suggest
Element
p21657
(dp21658
g10
I3
sg11
S''
sg12
Vscatter.marker.'>'
p21659
sg14
(lp21660
sg2
S"'>'"
p21661
sba(icodemend.demo.code_suggest
Element
p21662
(dp21663
g10
I3
sg11
S''
sg12
Vscatter.marker.'D'
p21664
sg14
(lp21665
sg2
S"'D'"
p21666
sbag12721
a(icodemend.demo.code_suggest
Element
p21667
(dp21668
g10
I3
sg11
S''
sg12
Vscatter.marker.marker
p21669
sg14
(lp21670
sg2
g4274
sba(icodemend.demo.code_suggest
Element
p21671
(dp21672
g10
I2
sg11
S''
sg12
Vscatter.marker.(verts, 0)
p21673
sg14
(lp21674
sg2
S'(verts, 0)'
p21675
sba(icodemend.demo.code_suggest
Element
p21676
(dp21677
g10
I1
sg11
S''
sg12
Vscatter.marker.'$\u005c\u005ccirclearrowleft$'
p21678
sg14
(lp21679
sg2
S"'$\\\\circlearrowleft$'"
p21680
sba(icodemend.demo.code_suggest
Element
p21681
(dp21682
g10
I1
sg11
S''
sg12
Vscatter.marker.'$\u005c\u005ccirclearrowright$'
p21683
sg14
(lp21684
sg2
S"'$\\\\circlearrowright$'"
p21685
sba(icodemend.demo.code_suggest
Element
p21686
(dp21687
g10
I1
sg11
S''
sg12
Vscatter.marker.'$\u005c\u005cuparrow$'
p21688
sg14
(lp21689
sg2
S"'$\\\\uparrow$'"
p21690
sba(icodemend.demo.code_suggest
Element
p21691
(dp21692
g10
I1
sg11
S''
sg12
Vscatter.marker.','
p21693
sg14
(lp21694
sg2
S"','"
p21695
sba(icodemend.demo.code_suggest
Element
p21696
(dp21697
g10
I1
sg11
S''
sg12
Vscatter.marker.'v'
p21698
sg14
(lp21699
sg2
S"'v'"
p21700
sbag5462
a(icodemend.demo.code_suggest
Element
p21701
(dp21702
g10
I1
sg11
S''
sg12
Vscatter.marker.(xy, 0)
p21703
sg14
(lp21704
sg2
S'(xy, 0)'
p21705
sbag8416
a(icodemend.demo.code_suggest
Element
p21706
(dp21707
g10
I1
sg11
S''
sg12
Vscatter.marker.key
p21708
sg14
(lp21709
sg2
g13397
sba(icodemend.demo.code_suggest
Element
p21710
(dp21711
g10
I1
sg11
S''
sg12
Vscatter.marker.m1
p21712
sg14
(lp21713
sg2
S'm1'
p21714
sba(icodemend.demo.code_suggest
Element
p21715
(dp21716
g10
I1
sg11
S''
sg12
Vscatter.marker.mark
p21717
sg14
(lp21718
sg2
S'mark'
p21719
sbag18427
a(icodemend.demo.code_suggest
Element
p21720
(dp21721
g10
I1
sg11
S''
sg12
Vscatter.marker.u'$\u005cu2640$'
p21722
sg14
(lp21723
sg2
S"u'$\\u2640$'"
p21724
sba(icodemend.demo.code_suggest
Element
p21725
(dp21726
g10
I1
sg11
S''
sg12
Vscatter.marker.u'$\u005cu2642$'
p21727
sg14
(lp21728
sg2
S"u'$\\u2642$'"
p21729
sbag8776
asg2
S'marker'
p21730
sba(icodemend.demo.code_suggest
Element
p21731
(dp21732
g10
I74
sg11
S'a colormap instance or registered name . cmap is only used if c is an array of floats . if none , defaults to rc image.cmap .'
p21733
sg12
Vscatter.cmap
p21734
sg14
(lp21735
g21135
a(icodemend.demo.code_suggest
Element
p21736
(dp21737
g10
I5
sg11
S''
sg12
Vscatter.cmap.cmap
p21738
sg14
(lp21739
sg2
g325
sba(icodemend.demo.code_suggest
Element
p21740
(dp21741
g10
I4
sg11
S''
sg12
Vscatter.cmap.'rainbow'
p21742
sg14
(lp21743
sg2
S"'rainbow'"
p21744
sba(icodemend.demo.code_suggest
Element
p21745
(dp21746
g10
I3
sg11
S''
sg12
Vscatter.cmap.'jet'
p21747
sg14
(lp21748
sg2
S"'jet'"
p21749
sbag13362
a(icodemend.demo.code_suggest
Element
p21750
(dp21751
g10
I2
sg11
S''
sg12
Vscatter.cmap.'RdBu'
p21752
sg14
(lp21753
sg2
S"'RdBu'"
p21754
sba(icodemend.demo.code_suggest
Element
p21755
(dp21756
g10
I2
sg11
S''
sg12
Vscatter.cmap.'Reds'
p21757
sg14
(lp21758
sg2
S"'Reds'"
p21759
sba(icodemend.demo.code_suggest
Element
p21760
(dp21761
g10
I2
sg11
S''
sg12
Vscatter.cmap.cmhot
p21762
sg14
(lp21763
sg2
S'cmhot'
p21764
sba(icodemend.demo.code_suggest
Element
p21765
(dp21766
g10
I1
sg11
S''
sg12
Vscatter.cmap.'Accent'
p21767
sg14
(lp21768
sg2
S"'Accent'"
p21769
sba(icodemend.demo.code_suggest
Element
p21770
(dp21771
g10
I1
sg11
S''
sg12
Vscatter.cmap.'Paired'
p21772
sg14
(lp21773
sg2
S"'Paired'"
p21774
sba(icodemend.demo.code_suggest
Element
p21775
(dp21776
g10
I1
sg11
S''
sg12
Vscatter.cmap.'PuRd'
p21777
sg14
(lp21778
sg2
S"'PuRd'"
p21779
sba(icodemend.demo.code_suggest
Element
p21780
(dp21781
g10
I1
sg11
S''
sg12
Vscatter.cmap.'RdYlBu'
p21782
sg14
(lp21783
sg2
S"'RdYlBu'"
p21784
sba(icodemend.demo.code_suggest
Element
p21785
(dp21786
g10
I1
sg11
S''
sg12
Vscatter.cmap.'RdYlGn'
p21787
sg14
(lp21788
sg2
S"'RdYlGn'"
p21789
sba(icodemend.demo.code_suggest
Element
p21790
(dp21791
g10
I1
sg11
S''
sg12
Vscatter.cmap.'YlGnBu'
p21792
sg14
(lp21793
sg2
S"'YlGnBu'"
p21794
sba(icodemend.demo.code_suggest
Element
p21795
(dp21796
g10
I1
sg11
S''
sg12
Vscatter.cmap.'gray'
p21797
sg14
(lp21798
sg2
S"'gray'"
p21799
sba(icodemend.demo.code_suggest
Element
p21800
(dp21801
g10
I1
sg11
S''
sg12
Vscatter.cmap.'hot'
p21802
sg14
(lp21803
sg2
S"'hot'"
p21804
sbag8841
a(icodemend.demo.code_suggest
Element
p21805
(dp21806
g10
I1
sg11
S''
sg12
Vscatter.cmap.PuOr
p21807
sg14
(lp21808
sg2
g10835
sba(icodemend.demo.code_suggest
Element
p21809
(dp21810
g10
I1
sg11
S''
sg12
Vscatter.cmap.mycm
p21811
sg14
(lp21812
sg2
g3160
sba(icodemend.demo.code_suggest
Element
p21813
(dp21814
g10
I1
sg11
S''
sg12
Vscatter.cmap.mymap
p21815
sg14
(lp21816
sg2
g13630
sba(icodemend.demo.code_suggest
Element
p21817
(dp21818
g10
I1
sg11
S''
sg12
Vscatter.cmap.reds
p21819
sg14
(lp21820
sg2
S'reds'
p21821
sba(icodemend.demo.code_suggest
Element
p21822
(dp21823
g10
I1
sg11
S''
sg12
Vscatter.cmap.rvb
p21824
sg14
(lp21825
sg2
S'rvb'
p21826
sba(icodemend.demo.code_suggest
Element
p21827
(dp21828
g10
I1
sg11
S''
sg12
Vscatter.cmap.varvid
p21829
sg14
(lp21830
sg2
S'varvid'
p21831
sbasg2
S'cmap'
p21832
sba(icodemend.demo.code_suggest
Element
p21833
(dp21834
g10
I66
sg11
S'the alpha blending value , between 0 ( transparent ) and 1 ( opaque )|||set the alpha tranparencies of the collection .'
p21835
sg12
Vscatter.alpha
p21836
sg14
(lp21837
(icodemend.demo.code_suggest
Element
p21838
(dp21839
g10
I13
sg11
S''
sg12
Vscatter.alpha.0/5
p21840
sg14
(lp21841
sg2
S'0.5'
p21842
sba(icodemend.demo.code_suggest
Element
p21843
(dp21844
g10
I10
sg11
S''
sg12
Vscatter.alpha.0/7
p21845
sg14
(lp21846
sg2
S'0.7'
p21847
sba(icodemend.demo.code_suggest
Element
p21848
(dp21849
g10
I9
sg11
S''
sg12
Vscatter.alpha.0/2
p21850
sg14
(lp21851
sg2
S'0.2'
p21852
sba(icodemend.demo.code_suggest
Element
p21853
(dp21854
g10
I6
sg11
S''
sg12
Vscatter.alpha.0/3
p21855
sg14
(lp21856
sg2
S'0.3'
p21857
sba(icodemend.demo.code_suggest
Element
p21858
(dp21859
g10
I4
sg11
S''
sg12
Vscatter.alpha.0/6
p21860
sg14
(lp21861
sg2
S'0.6'
p21862
sba(icodemend.demo.code_suggest
Element
p21863
(dp21864
g10
I4
sg11
S''
sg12
Vscatter.alpha.0/75
p21865
sg14
(lp21866
sg2
S'0.75'
p21867
sbag5100
a(icodemend.demo.code_suggest
Element
p21868
(dp21869
g10
I3
sg11
S''
sg12
Vscatter.alpha.1/0
p21870
sg14
(lp21871
sg2
S'1.0'
p21872
sba(icodemend.demo.code_suggest
Element
p21873
(dp21874
g10
I2
sg11
S''
sg12
Vscatter.alpha.0/4
p21875
sg14
(lp21876
sg2
S'0.4'
p21877
sbag105
ag4098
a(icodemend.demo.code_suggest
Element
p21878
(dp21879
g10
I1
sg11
S''
sg12
Vscatter.alpha.0/01
p21880
sg14
(lp21881
sg2
S'0.01'
p21882
sba(icodemend.demo.code_suggest
Element
p21883
(dp21884
g10
I1
sg11
S''
sg12
Vscatter.alpha.0/03
p21885
sg14
(lp21886
sg2
S'0.03'
p21887
sbag983
a(icodemend.demo.code_suggest
Element
p21888
(dp21889
g10
I1
sg11
S''
sg12
Vscatter.alpha.0/65
p21890
sg14
(lp21891
sg2
S'0.65'
p21892
sba(icodemend.demo.code_suggest
Element
p21893
(dp21894
g10
I1
sg11
S''
sg12
Vscatter.alpha.0/9
p21895
sg14
(lp21896
sg2
S'0.9'
p21897
sba(icodemend.demo.code_suggest
Element
p21898
(dp21899
g10
I1
sg11
S''
sg12
Vscatter.alpha.1
p21900
sg14
(lp21901
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p21902
(dp21903
g10
I1
sg11
S''
sg12
Vscatter.alpha.None
p21904
sg14
(lp21905
sg2
g865
sba(icodemend.demo.code_suggest
Element
p21906
(dp21907
g10
I1
sg11
S''
sg12
Vscatter.alpha.a
p21908
sg14
(lp21909
sg2
S'a'
sbag10633
asg2
S'alpha'
p21910
sba(icodemend.demo.code_suggest
Element
p21911
(dp21912
g10
I55
sg11
S'set the label to s for auto legend .'
p21913
sg12
Vscatter.label
p21914
sg14
(lp21915
(icodemend.demo.code_suggest
Element
p21916
(dp21917
g10
I3
sg11
S''
sg12
Vscatter.label.'neg'
p21918
sg14
(lp21919
sg2
S"'neg'"
p21920
sba(icodemend.demo.code_suggest
Element
p21921
(dp21922
g10
I3
sg11
S''
sg12
Vscatter.label.'pos'
p21923
sg14
(lp21924
sg2
S"'pos'"
p21925
sbag12782
ag8081
a(icodemend.demo.code_suggest
Element
p21926
(dp21927
g10
I1
sg11
S''
sg12
Vscatter.label.'$0/0<z<0/5$'
p21928
sg14
(lp21929
sg2
S"'$0.0<z<0.5$'"
p21930
sba(icodemend.demo.code_suggest
Element
p21931
(dp21932
g10
I1
sg11
S''
sg12
Vscatter.label.'$\u005c\u005clambda$D'
p21933
sg14
(lp21934
sg2
S"'$\\\\lambda$D'"
p21935
sba(icodemend.demo.code_suggest
Element
p21936
(dp21937
g10
I1
sg11
S''
sg12
Vscatter.label.'Answers'
p21938
sg14
(lp21939
sg2
S"'Answers'"
p21940
sba(icodemend.demo.code_suggest
Element
p21941
(dp21942
g10
I1
sg11
S''
sg12
Vscatter.label.'Blah'
p21943
sg14
(lp21944
sg2
S"'Blah'"
p21945
sba(icodemend.demo.code_suggest
Element
p21946
(dp21947
g10
I1
sg11
S''
sg12
Vscatter.label.'Default norm, Greys'
p21948
sg14
(lp21949
sg2
S"'Default norm, Greys'"
p21950
sba(icodemend.demo.code_suggest
Element
p21951
(dp21952
g10
I1
sg11
S''
sg12
Vscatter.label.'Label for this data'
p21953
sg14
(lp21954
sg2
S"'Label for this data'"
p21955
sba(icodemend.demo.code_suggest
Element
p21956
(dp21957
g10
I1
sg11
S''
sg12
Vscatter.label.'Profit!'
p21958
sg14
(lp21959
sg2
S"'Profit!'"
p21960
sba(icodemend.demo.code_suggest
Element
p21961
(dp21962
g10
I1
sg11
S''
sg12
Vscatter.label.'Questions'
p21963
sg14
(lp21964
sg2
S"'Questions'"
p21965
sbag10215
a(icodemend.demo.code_suggest
Element
p21966
(dp21967
g10
I1
sg11
S''
sg12
Vscatter.label.'TI'
p21968
sg14
(lp21969
sg2
S"'TI'"
p21970
sba(icodemend.demo.code_suggest
Element
p21971
(dp21972
g10
I1
sg11
S''
sg12
Vscatter.label.'bbb{\u005c\u005cHuge$_{subbbb}$}'
p21973
sg14
(lp21974
sg2
S"'bbb{\\\\Huge$_{subbbb}$}'"
p21975
sba(icodemend.demo.code_suggest
Element
p21976
(dp21977
g10
I1
sg11
S''
sg12
Vscatter.label.'circle'
p21978
sg14
(lp21979
sg2
S"'circle'"
p21980
sbag12446
a(icodemend.demo.code_suggest
Element
p21981
(dp21982
g10
I1
sg11
S''
sg12
Vscatter.label.'col3 > 300'
p21983
sg14
(lp21984
sg2
S"'col3 > 300'"
p21985
sba(icodemend.demo.code_suggest
Element
p21986
(dp21987
g10
I1
sg11
S''
sg12
Vscatter.label.'collected underwear'
p21988
sg14
(lp21989
sg2
S"'collected underwear'"
p21990
sbag15737
ag19579
a(icodemend.demo.code_suggest
Element
p21991
(dp21992
g10
I1
sg11
S''
sg12
Vscatter.label.'label 2'
p21993
sg14
(lp21994
sg2
S"'label 2'"
p21995
sba(icodemend.demo.code_suggest
Element
p21996
(dp21997
g10
I1
sg11
S''
sg12
Vscatter.label.'label 3'
p21998
sg14
(lp21999
sg2
S"'label 3'"
p22000
sbag10026
a(icodemend.demo.code_suggest
Element
p22001
(dp22002
g10
I1
sg11
S''
sg12
Vscatter.label.'second'
p22003
sg14
(lp22004
sg2
S"'second'"
p22005
sba(icodemend.demo.code_suggest
Element
p22006
(dp22007
g10
I1
sg11
S''
sg12
Vscatter.label.'smaller'
p22008
sg14
(lp22009
sg2
S"'smaller'"
p22010
sbag12847
a(icodemend.demo.code_suggest
Element
p22011
(dp22012
g10
I1
sg11
S''
sg12
Vscatter.label.'the data'
p22013
sg14
(lp22014
sg2
S"'the data'"
p22015
sba(icodemend.demo.code_suggest
Element
p22016
(dp22017
g10
I1
sg11
S''
sg12
Vscatter.label.'time 0'
p22018
sg14
(lp22019
sg2
S"'time 0'"
p22020
sba(icodemend.demo.code_suggest
Element
p22021
(dp22022
g10
I1
sg11
S''
sg12
Vscatter.label.cla
p22023
sg14
(lp22024
sg2
S'cla'
p22025
sba(icodemend.demo.code_suggest
Element
p22026
(dp22027
g10
I1
sg11
S''
sg12
Vscatter.label.col
p22028
sg14
(lp22029
sg2
g21314
sba(icodemend.demo.code_suggest
Element
p22030
(dp22031
g10
I1
sg11
S''
sg12
Vscatter.label.key
p22032
sg14
(lp22033
sg2
g13397
sba(icodemend.demo.code_suggest
Element
p22034
(dp22035
g10
I1
sg11
S''
sg12
Vscatter.label.l
p22036
sg14
(lp22037
sg2
S'l'
sba(icodemend.demo.code_suggest
Element
p22038
(dp22039
g10
I1
sg11
S''
sg12
Vscatter.label.l1
p22040
sg14
(lp22041
sg2
S'l1'
p22042
sba(icodemend.demo.code_suggest
Element
p22043
(dp22044
g10
I1
sg11
S''
sg12
Vscatter.label.label
p22045
sg14
(lp22046
sg2
g118
sbag20336
a(icodemend.demo.code_suggest
Element
p22047
(dp22048
g10
I1
sg11
S''
sg12
Vscatter.label.mylabel
p22049
sg14
(lp22050
sg2
S'mylabel'
p22051
sba(icodemend.demo.code_suggest
Element
p22052
(dp22053
g10
I1
sg11
S''
sg12
Vscatter.label.t
p22054
sg14
(lp22055
sg2
S't'
sba(icodemend.demo.code_suggest
Element
p22056
(dp22057
g10
I1
sg11
S''
sg12
Vscatter.label.target_name
p22058
sg14
(lp22059
sg2
S'target_name'
p22060
sbasg2
S'label'
p22061
sba(icodemend.demo.code_suggest
Element
p22062
(dp22063
g10
I31
sg11
S"if none , defaults to ( patch.edgecolor ) . if ' face ' , the edge color will always be the same as the face color . if it is ' none ' , the patch boundary will not be drawn . for non-filled markers , the edgecolors kwarg is ignored ; color is determined by c."
p22064
sg12
Vscatter.edgecolors
p22065
sg14
(lp22066
(icodemend.demo.code_suggest
Element
p22067
(dp22068
g10
I15
sg11
S''
sg12
Vscatter.edgecolors.'none'
p22069
sg14
(lp22070
sg2
S"'none'"
p22071
sba(icodemend.demo.code_suggest
Element
p22072
(dp22073
g10
I4
sg11
S''
sg12
Vscatter.edgecolors.'None'
p22074
sg14
(lp22075
sg2
S"'None'"
p22076
sba(icodemend.demo.code_suggest
Element
p22077
(dp22078
g10
I3
sg11
S''
sg12
Vscatter.edgecolors.colors
p22079
sg14
(lp22080
sg2
g7032
sbag8541
ag19547
ag19198
a(icodemend.demo.code_suggest
Element
p22081
(dp22082
g10
I1
sg11
S''
sg12
Vscatter.edgecolors.carr
p22083
sg14
(lp22084
sg2
g21336
sba(icodemend.demo.code_suggest
Element
p22085
(dp22086
g10
I1
sg11
S''
sg12
Vscatter.edgecolors.ec_colors
p22087
sg14
(lp22088
sg2
S'ec_colors'
p22089
sbasg2
S'edgecolors'
p22090
sbag16303
a(icodemend.demo.code_suggest
Element
p22091
(dp22092
g10
I15
sg11
S'if none , defaults to ( lines.linewidth , ) .'
p22093
sg12
Vscatter.linewidths
p22094
sg14
(lp22095
(icodemend.demo.code_suggest
Element
p22096
(dp22097
g10
I6
sg11
S''
sg12
Vscatter.linewidths.4
p22098
sg14
(lp22099
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p22100
(dp22101
g10
I5
sg11
S''
sg12
Vscatter.linewidths.0
p22102
sg14
(lp22103
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p22104
(dp22105
g10
I2
sg11
S''
sg12
Vscatter.linewidths.2
p22106
sg14
(lp22107
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p22108
(dp22109
g10
I1
sg11
S''
sg12
Vscatter.linewidths.0/1
p22110
sg14
(lp22111
sg2
S'0.1'
p22112
sba(icodemend.demo.code_suggest
Element
p22113
(dp22114
g10
I1
sg11
S''
sg12
Vscatter.linewidths.None
p22115
sg14
(lp22116
sg2
g865
sbasg2
S'linewidths'
p22117
sba(icodemend.demo.code_suggest
Element
p22118
(dp22119
g10
I10
sg11
S'set the facecolor(s ) of the collection .'
p22120
sg12
Vscatter.facecolor
p22121
sg14
(lp22122
(icodemend.demo.code_suggest
Element
p22123
(dp22124
g10
I2
sg11
S''
sg12
Vscatter.facecolor.'#dd8800'
p22125
sg14
(lp22126
sg2
S"'#dd8800'"
p22127
sba(icodemend.demo.code_suggest
Element
p22128
(dp22129
g10
I2
sg11
S''
sg12
Vscatter.facecolor.'0/5'
p22130
sg14
(lp22131
sg2
S"'0.5'"
p22132
sba(icodemend.demo.code_suggest
Element
p22133
(dp22134
g10
I2
sg11
S''
sg12
Vscatter.facecolor.'green'
p22135
sg14
(lp22136
sg2
S"'green'"
p22137
sba(icodemend.demo.code_suggest
Element
p22138
(dp22139
g10
I1
sg11
S''
sg12
Vscatter.facecolor.'/5'
p22140
sg14
(lp22141
sg2
S"'.5'"
p22142
sba(icodemend.demo.code_suggest
Element
p22143
(dp22144
g10
I1
sg11
S''
sg12
Vscatter.facecolor.'b'
p22145
sg14
(lp22146
sg2
S"'b'"
p22147
sba(icodemend.demo.code_suggest
Element
p22148
(dp22149
g10
I1
sg11
S''
sg12
Vscatter.facecolor.(0, 0, 0, 0)
p22150
sg14
(lp22151
sg2
S'(0, 0, 0, 0)'
p22152
sbasg2
S'facecolor'
p22153
sba(icodemend.demo.code_suggest
Element
p22154
(dp22155
g10
I9
sg11
S'set the epsilon for picking used by this artist'
p22156
sg12
Vscatter.picker
p22157
sg14
(lp22158
(icodemend.demo.code_suggest
Element
p22159
(dp22160
g10
I5
sg11
S''
sg12
Vscatter.picker.True
p22161
sg14
(lp22162
sg2
g438
sba(icodemend.demo.code_suggest
Element
p22163
(dp22164
g10
I2
sg11
S''
sg12
Vscatter.picker.0
p22165
sg14
(lp22166
sg2
S'0'
sbag669
asg2
S'picker'
p22167
sbag15670
a(icodemend.demo.code_suggest
Element
p22168
(dp22169
g10
I7
sg11
S'a normalize instance is used to scale luminance data to 0 , 1 . norm is only used if c is an array of floats . if none , use the default normalize ( ) .'
p22170
sg12
Vscatter.norm
p22171
sg14
(lp22172
(icodemend.demo.code_suggest
Element
p22173
(dp22174
g10
I3
sg11
S''
sg12
Vscatter.norm.norm
p22175
sg14
(lp22176
sg2
g515
sba(icodemend.demo.code_suggest
Element
p22177
(dp22178
g10
I1
sg11
S''
sg12
Vscatter.norm.None
p22179
sg14
(lp22180
sg2
g865
sba(icodemend.demo.code_suggest
Element
p22181
(dp22182
g10
I1
sg11
S''
sg12
Vscatter.norm.cNorm
p22183
sg14
(lp22184
sg2
g10861
sbasg2
S'norm'
p22185
sbag20982
a(icodemend.demo.code_suggest
Element
p22186
(dp22187
g10
I0
sg11
S'set the image array from numpy array a'
p22188
sg12
Vscatter.array
p22189
sg14
(lp22190
sg2
S'array'
p22191
sba(icodemend.demo.code_suggest
Element
p22192
(dp22193
g10
I0
sg11
S'set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp'
p22194
sg12
Vscatter.clim
p22195
sg14
(lp22196
sg2
S'clim'
p22197
sbag12996
a(icodemend.demo.code_suggest
Element
p22198
(dp22199
g10
I0
sg11
S'set the linestyle(s ) for the collection .'
p22200
sg12
Vscatter.linestyle
p22201
sg14
(lp22202
sg2
S'linestyle'
p22203
sba(icodemend.demo.code_suggest
Element
p22204
(dp22205
g10
I0
sg11
S'set how offsets are applied .'
p22206
sg12
Vscatter.offset_position
p22207
sg14
(lp22208
sg2
S'offset_position'
p22209
sba(icodemend.demo.code_suggest
Element
p22210
(dp22211
g10
I0
sg11
S'set the offsets for the collection .'
p22212
sg12
Vscatter.offsets
p22213
sg14
(lp22214
sg2
S'offsets'
p22215
sba(icodemend.demo.code_suggest
Element
p22216
(dp22217
g10
I0
sg11
S'sets the sketch parameters .'
p22218
sg12
Vscatter.sketch_params
p22219
sg14
(lp22220
sg2
S'sketch_params'
p22221
sba(icodemend.demo.code_suggest
Element
p22222
(dp22223
g10
I0
sg11
S'vmin and vmax are used in conjunction with norm to normalize luminance data . if either are none , the min and max of the color array is used . note if you pass a norm instance , your settings for vmin and vmax will be ignored .'
p22224
sg12
Vscatter.vmin, vmax
p22225
sg14
(lp22226
sg2
S'vmin, vmax'
p22227
sba(icodemend.demo.code_suggest
Element
p22228
(dp22229
g10
I0
sg11
S'input data'
p22230
sg12
Vscatter.x, y
p22231
sg14
(lp22232
sg2
S'x, y'
p22233
sbasg2
g21258
sbs(g324
g325
g9118
tp22234
g9114
sS'get_metrics'
p22235
(icodemend.demo.code_suggest
Element
p22236
(dp22237
g10
I0
sg11
S'font'
p22238
sg12
Vget_metrics
p22239
sg14
(lp22240
(icodemend.demo.code_suggest
Element
p22241
(dp22242
g10
I0
sg11
S'dpi : current dots-per-inch'
p22243
sg12
Vget_metrics.dpi
p22244
sg14
(lp22245
sg2
S'dpi'
p22246
sba(icodemend.demo.code_suggest
Element
p22247
(dp22248
g10
I0
sg11
S'font : one of the tex font names :'
p22249
sg12
Vget_metrics.font
p22250
sg14
(lp22251
sg2
S'font'
p22252
sbag2904
a(icodemend.demo.code_suggest
Element
p22253
(dp22254
g10
I0
sg11
S'fontsize : font size in points'
p22255
sg12
Vget_metrics.fontsize
p22256
sg14
(lp22257
sg2
S'fontsize'
p22258
sba(icodemend.demo.code_suggest
Element
p22259
(dp22260
g10
I0
sg11
S"sym : a symbol in raw tex form . e.g. , ' 1 ' , ' x ' or ' sigma '"
p22261
sg12
Vget_metrics.sym
p22262
sg14
(lp22263
sg2
S'sym'
p22264
sbasg2
g22235
sbs(S'getp'
p22265
S'ylabel'
p22266
tp22267
(icodemend.demo.code_suggest
Element
p22268
(dp22269
g10
I0
sg11
S'set the label for the yaxis'
p22270
sg12
Vgetp.ylabel
p22271
sg14
(lp22272
sg2
g22266
sbs(g332
g389
S'theta'
p22273
tp22274
(icodemend.demo.code_suggest
Element
p22275
(dp22276
g10
I1
sg11
S''
sg12
Vtext.rotation.theta
p22277
sg14
(lp22278
sg2
g22273
sbs(S'pcolor'
p22279
S'C'
tp22280
(icodemend.demo.code_suggest
Element
p22281
(dp22282
g10
I0
sg11
S'c is the array of color values .|||x , y and c may be masked arrays . if either c[i , j ] , or one of the vertices surrounding c[i,j ] ( x or y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||matlab pcolor ( ) always discards the last row and column of c , but matplotlib displays the last row and column if x and y are not specified , or if x and y have one more row and column than c .|||ideally the dimensions of x and y should be one greater than those of c ; if the dimensions are the same , then the last row and column of c will be ignored .|||the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .'
p22283
sg12
Vpcolor.C
p22284
sg14
(lp22285
sg2
S'C'
sbs(S'pcolorfast'
p22286
S'x1'
p22287
tp22288
(icodemend.demo.code_suggest
Element
p22289
(dp22290
g10
I0
sg11
S'then x goes from x0 to x1 as the second index of c goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . all cells are rectangles of the same size . this is the fastest version .'
p22291
sg12
Vpcolorfast.x1
p22292
sg14
(lp22293
sg2
g22287
sbs(S'boxplot_stats'
p22294
S'X'
tp22295
(icodemend.demo.code_suggest
Element
p22296
(dp22297
g10
I0
sg11
S'data that will be represented in the boxplots . should have 2 or fewer dimensions .'
p22298
sg12
Vboxplot_stats.X
p22299
sg14
(lp22300
sg2
S'X'
sbs(S'hexbin'
p22301
S'yscale'
p22302
tp22303
(icodemend.demo.code_suggest
Element
p22304
(dp22305
g10
I1
sg11
S'set the scaling of the y-axis'
p22306
sg12
Vhexbin.yscale
p22307
sg14
(lp22308
(icodemend.demo.code_suggest
Element
p22309
(dp22310
g10
I1
sg11
S''
sg12
Vhexbin.yscale.'linear'
p22311
sg14
(lp22312
sg2
S"'linear'"
p22313
sbasg2
g22302
sbs(g5673
g16158
S"'->'"
p22314
tp22315
(icodemend.demo.code_suggest
Element
p22316
(dp22317
g10
I1
sg11
S''
sg12
Vstreamplot.arrowstyle.'->'
p22318
sg14
(lp22319
sg2
g22314
sbs(S'phase_spectrum'
p22320
S'clip_on'
p22321
tp22322
(icodemend.demo.code_suggest
Element
p22323
(dp22324
g10
I0
sg11
S'set whether artist uses clipping .'
p22325
sg12
Vphase_spectrum.clip_on
p22326
sg14
(lp22327
sg2
g22321
sbs(g10369
g10370
S'20'
p22328
tp22329
(icodemend.demo.code_suggest
Element
p22330
(dp22331
g10
I1
sg11
S''
sg12
Vsave.fps.20
p22332
sg14
(lp22333
sg2
g22328
sbs(S'dict_delall'
p22334
S'keys'
p22335
tp22336
(icodemend.demo.code_suggest
Element
p22337
(dp22338
g10
I0
sg11
S'delete all of the keys from the dict d'
p22339
sg12
Vdict_delall.keys
p22340
sg14
(lp22341
sg2
g22335
sbs(g101
S'c'
g21597
tp22342
g21593
s(g324
g785
g9766
tp22343
g9762
s(S'figtext'
p22344
g11479
tp22345
g11474
s(g117
S'x'
S"'month'"
p22346
tp22347
(icodemend.demo.code_suggest
Element
p22348
(dp22349
g10
I5
sg11
S''
sg12
Vplot.x.'month'
p22350
sg14
(lp22351
sg2
g22346
sbs(S'PackerBase'
p22352
g4309
tp22353
g4304
s(S'shade_rgb'
p22354
S'rgb'
p22355
tp22356
(icodemend.demo.code_suggest
Element
p22357
(dp22358
g10
I0
sg11
S'an mxnx3 rgb array , assumed to be in the range of 0 to 1 .'
p22359
sg12
Vshade_rgb.rgb
p22360
sg14
(lp22361
sg2
g22355
sbs(S'set_clim'
p22362
S'vmin'
p22363
tp22364
(icodemend.demo.code_suggest
Element
p22365
(dp22366
g10
I2
sg11
S'set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp'
p22367
sg12
Vset_clim.vmin
p22368
sg14
(lp22369
(icodemend.demo.code_suggest
Element
p22370
(dp22371
g10
I1
sg11
S''
sg12
Vset_clim.vmin.0
p22372
sg14
(lp22373
sg2
S'0'
sbasg2
g22363
sbs(S'render_glyph'
p22374
S'info'
p22375
tp22376
(icodemend.demo.code_suggest
Element
p22377
(dp22378
g10
I0
sg11
S'draw a glyph described by info to the reference point ( ox , oy ) .'
p22379
sg12
Vrender_glyph.info
p22380
sg14
(lp22381
sg2
g22375
sbs(S'gca'
p22382
S'label'
p22383
tp22384
(icodemend.demo.code_suggest
Element
p22385
(dp22386
g10
I0
sg11
S'set the label to s for auto legend .'
p22387
sg12
Vgca.label
p22388
sg14
(lp22389
sg2
g22383
sbs(S'csd'
p22390
S'pickradius'
p22391
tp22392
(icodemend.demo.code_suggest
Element
p22393
(dp22394
g10
I0
sg11
S'sets the pick radius used for containment tests'
p22395
sg12
Vcsd.pickradius
p22396
sg14
(lp22397
sg2
g22391
sbsS'get_size'
p22398
(icodemend.demo.code_suggest
Element
p22399
(dp22400
g10
I4
sg11
S'get the numrows , numcols of the input image'
p22401
sg12
Vget_size
p22402
sg14
(lp22403
sg2
g22398
sbs(g93
g161
S'(0.25, 0.75)'
p22404
tp22405
(icodemend.demo.code_suggest
Element
p22406
(dp22407
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/25, 0/75)
p22408
sg14
(lp22409
sg2
g22404
sbs(g4371
g8545
S'2'
tp22410
g1058
s(S'get_kern'
p22411
S'sym2'
p22412
tp22413
(icodemend.demo.code_suggest
Element
p22414
(dp22415
g10
I0
sg11
S'get the kerning distance for font between sym1 and sym2 .'
p22416
sg12
Vget_kern.sym2
p22417
sg14
(lp22418
sg2
g22412
sbsS'get_tool'
p22419
(icodemend.demo.code_suggest
Element
p22420
(dp22421
g10
I0
sg11
S'return the tool object , also accepts the actual tool for convenience'
p22422
sg12
Vget_tool
p22423
sg14
(lp22424
(icodemend.demo.code_suggest
Element
p22425
(dp22426
g10
I0
sg11
S'name of the tool , or the tool itself'
p22427
sg12
Vget_tool.name
p22428
sg14
(lp22429
sg2
S'name'
p22430
sba(icodemend.demo.code_suggest
Element
p22431
(dp22432
g10
I0
sg11
S'if this method should give warnings .'
p22433
sg12
Vget_tool.warn
p22434
sg14
(lp22435
sg2
S'warn'
p22436
sbasg2
g22419
sbs(S'set_xticklabels'
p22437
g17079
tp22438
g17074
s(g16
g110
S"'red'"
p22439
tp22440
(icodemend.demo.code_suggest
Element
p22441
(dp22442
g10
I1
sg11
S''
sg12
Vbar.edgecolor.'red'
p22443
sg14
(lp22444
sg2
g22439
sbs(g6556
S'x'
S'dates'
p22445
tp22446
(icodemend.demo.code_suggest
Element
p22447
(dp22448
g10
I1
sg11
S''
sg12
Vvlines.x.dates
p22449
sg14
(lp22450
sg2
g22445
sbs(g139
g370
S'6'
tp22451
g1845
sS'get_mutation_aspect'
p22452
(icodemend.demo.code_suggest
Element
p22453
(dp22454
g10
I0
sg11
S'return the aspect ratio of the bbox mutation .'
p22455
sg12
Vget_mutation_aspect
p22456
sg14
(lp22457
sg2
g22452
sbsS'pick_event'
p22458
(icodemend.demo.code_suggest
Element
p22459
(dp22460
g10
I0
sg11
S'this method will be called by artists who are picked and will fire off pickevent callbacks registered listeners'
p22461
sg12
Vpick_event
p22462
sg14
(lp22463
sg2
g22458
sbs(S'get_kern'
p22464
S'dpi'
p22465
tp22466
(icodemend.demo.code_suggest
Element
p22467
(dp22468
g10
I0
sg11
S'dpi : the current dots-per-inch'
p22469
sg12
Vget_kern.dpi
p22470
sg14
(lp22471
sg2
g22465
sbs(S'tripcolor'
p22472
S'nrows'
p22473
tp22474
(icodemend.demo.code_suggest
Element
p22475
(dp22476
g10
I0
sg11
S'the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .'
p22477
sg12
Vtripcolor.nrows
p22478
sg14
(lp22479
sg2
g22473
sbs(S'pcolor'
p22480
S'cursor_props'
p22481
tp22482
(icodemend.demo.code_suggest
Element
p22483
(dp22484
g10
I0
sg11
S'set the cursor property as'
p22485
sg12
Vpcolor.cursor_props
p22486
sg14
(lp22487
sg2
g22481
sbs(S'pie'
p22488
S'autopct'
p22489
tp22490
(icodemend.demo.code_suggest
Element
p22491
(dp22492
g10
I33
sg11
S'if not none , is a string or function used to label the wedges with their numeric value . the label will be placed inside the wedge . if it is a format string , the label will be fmt%pct . if it is a function , it will be called .'
p22493
sg12
Vpie.autopct
p22494
sg14
(lp22495
(icodemend.demo.code_suggest
Element
p22496
(dp22497
g10
I27
sg11
S''
sg12
Vpie.autopct.'%1/1f%%'
p22498
sg14
(lp22499
sg2
S"'%1.1f%%'"
p22500
sba(icodemend.demo.code_suggest
Element
p22501
(dp22502
g10
I2
sg11
S''
sg12
Vpie.autopct.'%1/0f%%'
p22503
sg14
(lp22504
sg2
S"'%1.0f%%'"
p22505
sba(icodemend.demo.code_suggest
Element
p22506
(dp22507
g10
I1
sg11
S''
sg12
Vpie.autopct.'%/0f%%'
p22508
sg14
(lp22509
sg2
S"'%.0f%%'"
p22510
sba(icodemend.demo.code_suggest
Element
p22511
(dp22512
g10
I1
sg11
S''
sg12
Vpie.autopct.'%/2f'
p22513
sg14
(lp22514
sg2
S"'%.2f'"
p22515
sba(icodemend.demo.code_suggest
Element
p22516
(dp22517
g10
I1
sg11
S''
sg12
Vpie.autopct.my_autopct
p22518
sg14
(lp22519
sg2
S'my_autopct'
p22520
sbasg2
g22489
sbs(g16
g132
S"'#2040D0'"
p22521
tp22522
(icodemend.demo.code_suggest
Element
p22523
(dp22524
g10
I1
sg11
S''
sg12
Vbar.color.'#2040D0'
p22525
sg14
(lp22526
sg2
g22521
sbs(S'add'
p22527
S'position'
p22528
tp22529
(icodemend.demo.code_suggest
Element
p22530
(dp22531
g10
I0
sg11
S'set the axes position with'
p22532
sg12
Vadd.position
p22533
sg14
(lp22534
sg2
g22528
sbs(g16
g489
S'y'
tp22535
(icodemend.demo.code_suggest
Element
p22536
(dp22537
g10
I1
sg11
S''
sg12
Vbar.bottom.y
p22538
sg14
(lp22539
sg2
S'y'
sbs(S'annotate'
p22540
S'textcoords'
p22541
tp22542
(icodemend.demo.code_suggest
Element
p22543
(dp22544
g10
I89
sg11
S'xycoords and textcoords are strings that indicate the coordinates of xy and xytext , and may be one of the following values :|||string that indicates what type of coordinates text is . examples : " figure points " , " figure pixels " , " figure fraction " , " axes points " , ... see matplotlib.text.annotation for more details .'
p22545
sg12
Vannotate.textcoords
p22546
sg14
(lp22547
(icodemend.demo.code_suggest
Element
p22548
(dp22549
g10
I64
sg11
S''
sg12
Vannotate.textcoords.'offset points'
p22550
sg14
(lp22551
sg2
S"'offset points'"
p22552
sba(icodemend.demo.code_suggest
Element
p22553
(dp22554
g10
I17
sg11
S''
sg12
Vannotate.textcoords.'data'
p22555
sg14
(lp22556
sg2
S"'data'"
p22557
sba(icodemend.demo.code_suggest
Element
p22558
(dp22559
g10
I6
sg11
S''
sg12
Vannotate.textcoords.'axes fraction'
p22560
sg14
(lp22561
sg2
S"'axes fraction'"
p22562
sba(icodemend.demo.code_suggest
Element
p22563
(dp22564
g10
I1
sg11
S''
sg12
Vannotate.textcoords.('data', 'axes fraction')
p22565
sg14
(lp22566
sg2
S"('data', 'axes fraction')"
p22567
sbag18607
asg2
g22541
sbs(g5975
S'x'
g6916
tp22568
g6912
s(g245
g140
S'(8.0, 5.0)'
p22569
tp22570
(icodemend.demo.code_suggest
Element
p22571
(dp22572
g10
I1
sg11
S''
sg12
Vfigure.figsize.(8/0, 5/0)
p22573
sg14
(lp22574
sg2
g22569
sbs(S'text'
p22575
S'x'
tp22576
(icodemend.demo.code_suggest
Element
p22577
(dp22578
g10
I2
sg11
S'set the x position of the text'
p22579
sg12
Vtext.x
p22580
sg14
(lp22581
(icodemend.demo.code_suggest
Element
p22582
(dp22583
g10
I1
sg11
S''
sg12
Vtext.x.-0/8
p22584
sg14
(lp22585
sg2
S'-0.8'
p22586
sbag16813
asg2
S'x'
sbs(g12176
g132
S"'r'"
p22587
tp22588
(icodemend.demo.code_suggest
Element
p22589
(dp22590
g10
I1
sg11
S''
sg12
Vaxhspan.color.'r'
p22591
sg14
(lp22592
sg2
g22587
sbs(g93
g161
S'(0.3, 0.5)'
p22593
tp22594
(icodemend.demo.code_suggest
Element
p22595
(dp22596
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/3, 0/5)
p22597
sg14
(lp22598
sg2
g22593
sbs(S'subplots'
p22599
g2118
tp22600
g2108
sS'process'
p22601
(icodemend.demo.code_suggest
Element
p22602
(dp22603
g10
I1
sg11
S'process signal s .'
p22604
sg12
Vprocess
p22605
sg14
(lp22606
(icodemend.demo.code_suggest
Element
p22607
(dp22608
g10
I0
sg11
S'process signal s . all of the functions registered to receive callbacks on s will be called with * args and * * kwargs'
p22609
sg12
Vprocess.*args
p22610
sg14
(lp22611
sg2
S'*args'
p22612
sba(icodemend.demo.code_suggest
Element
p22613
(dp22614
g10
I0
sg11
S'process signal s . all of the functions registered to receive callbacks on s will be called with * args and * * kwargs'
p22615
sg12
Vprocess.s
p22616
sg14
(lp22617
sg2
S's'
sbasg2
g22601
sbs(S'fill'
p22618
S'xy'
p22619
tp22620
(icodemend.demo.code_suggest
Element
p22621
(dp22622
g10
I0
sg11
S'set the vertices of the polygon'
p22623
sg12
Vfill.xy
p22624
sg14
(lp22625
sg2
g22619
sbsS'release_pan'
p22626
(icodemend.demo.code_suggest
Element
p22627
(dp22628
g10
I0
sg11
S'the release mouse button callback in pan/zoom mode'
p22629
sg12
Vrelease_pan
p22630
sg14
(lp22631
sg2
g22626
sbs(S'quiver'
p22632
S'offsets'
p22633
tp22634
(icodemend.demo.code_suggest
Element
p22635
(dp22636
g10
I0
sg11
S'set the offsets for the collection .'
p22637
sg12
Vquiver.offsets
p22638
sg14
(lp22639
sg2
g22633
sbsS'pieces'
p22640
(icodemend.demo.code_suggest
Element
p22641
(dp22642
g10
I0
sg11
S'break up the seq into num tuples'
p22643
sg12
Vpieces
p22644
sg14
(lp22645
(icodemend.demo.code_suggest
Element
p22646
(dp22647
g10
I0
sg11
S'break up the seq into num tuples'
p22648
sg12
Vpieces.num
p22649
sg14
(lp22650
sg2
S'num'
p22651
sba(icodemend.demo.code_suggest
Element
p22652
(dp22653
g10
I0
sg11
S'break up the seq into num tuples'
p22654
sg12
Vpieces.seq
p22655
sg14
(lp22656
sg2
S'seq'
p22657
sbasg2
g22640
sbs(g5975
g132
g19636
tp22658
g19632
s(S'broken_barh'
p22659
S'agg_filter'
p22660
tp22661
(icodemend.demo.code_suggest
Element
p22662
(dp22663
g10
I0
sg11
S'set agg_filter fuction .'
p22664
sg12
Vbroken_barh.agg_filter
p22665
sg14
(lp22666
sg2
g22660
sbs(S'get_sample_data'
p22667
S'asfileobj'
p22668
tp22669
(icodemend.demo.code_suggest
Element
p22670
(dp22671
g10
I9
sg11
S'return a sample data file . fname is a path relative to the mpl-data/sample_data directory . if asfileobj is true return a file object , otherwise just a file path .'
p22672
sg12
Vget_sample_data.asfileobj
p22673
sg14
(lp22674
(icodemend.demo.code_suggest
Element
p22675
(dp22676
g10
I9
sg11
S''
sg12
Vget_sample_data.asfileobj.False
p22677
sg14
(lp22678
sg2
g1944
sbasg2
g22668
sbsS'get_tightbbox'
p22679
(icodemend.demo.code_suggest
Element
p22680
(dp22681
g10
I2
sg11
S'return the tight bounding box of the axes . return a ( tight ) bounding box of the figure in inches . return a bounding box that encloses the axis .'
p22682
sg12
Vget_tightbbox
p22683
sg14
(lp22684
(icodemend.demo.code_suggest
Element
p22685
(dp22686
g10
I0
sg11
S'if call_axes_locator is false , it does not call the _ axes_locator attribute , which is necessary to get the correct bounding box . call_axes_locator==false can be used if the caller is only intereted in the relative size of the tightbbox compared to the axes bbox .'
p22687
sg12
Vget_tightbbox.call_axes_locator
p22688
sg14
(lp22689
sg2
S'call_axes_locator'
p22690
sbasg2
g22679
sbs(g1170
g1257
S'[0, 1, 2, 3]'
p22691
tp22692
(icodemend.demo.code_suggest
Element
p22693
(dp22694
g10
I1
sg11
S''
sg12
Vhist.bins.[0, 1, 2, 3]
p22695
sg14
(lp22696
sg2
g22691
sbs(g117
g118
S"'sine'"
p22697
tp22698
(icodemend.demo.code_suggest
Element
p22699
(dp22700
g10
I1
sg11
S''
sg12
Vplot.label.'sine'
p22701
sg14
(lp22702
sg2
g22697
sbsS'get_font_properties'
p22703
(icodemend.demo.code_suggest
Element
p22704
(dp22705
g10
I0
sg11
S'alias for get_fontproperties'
p22706
sg12
Vget_font_properties
p22707
sg14
(lp22708
sg2
g22703
sbsS'get_lineoffset'
p22709
(icodemend.demo.code_suggest
Element
p22710
(dp22711
g10
I0
sg11
S'get the offset of the lines used to mark each event'
p22712
sg12
Vget_lineoffset
p22713
sg14
(lp22714
sg2
g22709
sbs(S'csd'
p22715
S'yticks'
p22716
tp22717
(icodemend.demo.code_suggest
Element
p22718
(dp22719
g10
I0
sg11
S'set the y ticks with list of ticks'
p22720
sg12
Vcsd.yticks
p22721
sg14
(lp22722
sg2
g22716
sbs(S'pcolor'
p22723
S'title'
p22724
tp22725
(icodemend.demo.code_suggest
Element
p22726
(dp22727
g10
I0
sg11
S'set a title for the axes .'
p22728
sg12
Vpcolor.title
p22729
sg14
(lp22730
sg2
g22724
sbsS'set_markevery'
p22731
(icodemend.demo.code_suggest
Element
p22732
(dp22733
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p22734
sg12
Vset_markevery
p22735
sg14
(lp22736
(icodemend.demo.code_suggest
Element
p22737
(dp22738
g10
I0
sg11
S'which markers to plot .'
p22739
sg12
Vset_markevery.float | length-2 tuple of float
p22740
sg14
(lp22741
sg2
S'float | length-2 tuple of float'
p22742
sbasg2
g22731
sbs(S'cohere'
p22743
S'clip_path'
p22744
tp22745
(icodemend.demo.code_suggest
Element
p22746
(dp22747
g10
I0
sg11
S"set the artist 's clip path , which may be"
p22748
sg12
Vcohere.clip_path
p22749
sg14
(lp22750
sg2
g22744
sbs(S'hexbin'
p22751
S'axes'
p22752
tp22753
(icodemend.demo.code_suggest
Element
p22754
(dp22755
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p22756
sg12
Vhexbin.axes
p22757
sg14
(lp22758
sg2
g22752
sbs(g4998
g8538
S"'white'"
p22759
tp22760
(icodemend.demo.code_suggest
Element
p22761
(dp22762
g10
I1
sg11
S''
sg12
Vpcolormesh.edgecolors.'white'
p22763
sg14
(lp22764
sg2
g22759
sbs(S'eventplot'
p22765
S'clip_path'
p22766
tp22767
(icodemend.demo.code_suggest
Element
p22768
(dp22769
g10
I0
sg11
S"set the artist 's clip path , which may be"
p22770
sg12
Veventplot.clip_path
p22771
sg14
(lp22772
sg2
g22766
sbs(S'vector_lengths'
p22773
S'X'
tp22774
(icodemend.demo.code_suggest
Element
p22775
(dp22776
g10
I0
sg11
S'computes ( sum((x_i)^p))^(1/p ) for each { x_i } being the elements of x along the given axis . if axis is none , compute over all elements of x .'
p22777
sg12
Vvector_lengths.X
p22778
sg14
(lp22779
sg2
S'X'
sbs(S'axhspan'
p22780
S'label'
p22781
tp22782
(icodemend.demo.code_suggest
Element
p22783
(dp22784
g10
I0
sg11
S'set the label to s for auto legend .'
p22785
sg12
Vaxhspan.label
p22786
sg14
(lp22787
sg2
g22781
sbs(g4371
g8545
S'1'
tp22788
g1062
s(S'csd'
p22789
S'linestyle'
p22790
tp22791
(icodemend.demo.code_suggest
Element
p22792
(dp22793
g10
I0
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p22794
sg12
Vcsd.linestyle
p22795
sg14
(lp22796
sg2
g22790
sbs(S'semilogx'
p22797
S'agg_filter'
p22798
tp22799
(icodemend.demo.code_suggest
Element
p22800
(dp22801
g10
I0
sg11
S'set agg_filter fuction .'
p22802
sg12
Vsemilogx.agg_filter
p22803
sg14
(lp22804
sg2
g22798
sbs(S'barbs'
p22805
S'clip_box'
p22806
tp22807
(icodemend.demo.code_suggest
Element
p22808
(dp22809
g10
I0
sg11
S"set the artist 's clip bbox ."
p22810
sg12
Vbarbs.clip_box
p22811
sg14
(lp22812
sg2
g22806
sbs(g101
S'c'
g21582
tp22813
g21578
s(S'plot'
p22814
S'yticklabels'
p22815
tp22816
(icodemend.demo.code_suggest
Element
p22817
(dp22818
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p22819
sg12
Vplot.yticklabels
p22820
sg14
(lp22821
sg2
g22815
sbs(g117
g4274
S"'<'"
p22822
tp22823
(icodemend.demo.code_suggest
Element
p22824
(dp22825
g10
I1
sg11
S''
sg12
Vplot.marker.'<'
p22826
sg14
(lp22827
sg2
g22822
sbs(S'semilogy'
p22828
S'aspect'
p22829
tp22830
(icodemend.demo.code_suggest
Element
p22831
(dp22832
g10
I0
sg11
S'aspect'
p22833
sg12
Vsemilogy.aspect
p22834
sg14
(lp22835
sg2
g22829
sbsS'subplot2grid'
p22836
(icodemend.demo.code_suggest
Element
p22837
(dp22838
g10
I107
sg11
S'create a subplot in a grid .'
p22839
sg12
Vsubplot2grid
p22840
sg14
(lp22841
(icodemend.demo.code_suggest
Element
p22842
(dp22843
g10
I52
sg11
S'create a subplot in a grid . the grid is specified by shape , at location of loc , spanning rowspan , colspan cells in each direction . the index for loc is 0-based .'
p22844
sg12
Vsubplot2grid.colspan
p22845
sg14
(lp22846
g8892
a(icodemend.demo.code_suggest
Element
p22847
(dp22848
g10
I10
sg11
S''
sg12
Vsubplot2grid.colspan.3
p22849
sg14
(lp22850
sg2
S'3'
sba(icodemend.demo.code_suggest
Element
p22851
(dp22852
g10
I9
sg11
S''
sg12
Vsubplot2grid.colspan.4
p22853
sg14
(lp22854
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p22855
(dp22856
g10
I7
sg11
S''
sg12
Vsubplot2grid.colspan.1
p22857
sg14
(lp22858
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p22859
(dp22860
g10
I4
sg11
S''
sg12
Vsubplot2grid.colspan.6
p22861
sg14
(lp22862
sg2
S'6'
sba(icodemend.demo.code_suggest
Element
p22863
(dp22864
g10
I1
sg11
S''
sg12
Vsubplot2grid.colspan.40
p22865
sg14
(lp22866
sg2
S'40'
p22867
sba(icodemend.demo.code_suggest
Element
p22868
(dp22869
g10
I1
sg11
S''
sg12
Vsubplot2grid.colspan.5
p22870
sg14
(lp22871
sg2
S'5'
sbasg2
S'colspan'
p22872
sba(icodemend.demo.code_suggest
Element
p22873
(dp22874
g10
I27
sg11
S'create a subplot in a grid . the grid is specified by shape , at location of loc , spanning rowspan , colspan cells in each direction . the index for loc is 0-based .'
p22875
sg12
Vsubplot2grid.rowspan
p22876
sg14
(lp22877
(icodemend.demo.code_suggest
Element
p22878
(dp22879
g10
I10
sg11
S''
sg12
Vsubplot2grid.rowspan.2
p22880
sg14
(lp22881
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p22882
(dp22883
g10
I8
sg11
S''
sg12
Vsubplot2grid.rowspan.3
p22884
sg14
(lp22885
sg2
S'3'
sbag961
a(icodemend.demo.code_suggest
Element
p22886
(dp22887
g10
I3
sg11
S''
sg12
Vsubplot2grid.rowspan.4
p22888
sg14
(lp22889
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p22890
(dp22891
g10
I1
sg11
S''
sg12
Vsubplot2grid.rowspan.40
p22892
sg14
(lp22893
sg2
S'40'
p22894
sbasg2
S'rowspan'
p22895
sba(icodemend.demo.code_suggest
Element
p22896
(dp22897
g10
I1
sg11
S'create a subplot in a grid . the grid is specified by shape , at location of loc , spanning rowspan , colspan cells in each direction . the index for loc is 0-based .'
p22898
sg12
Vsubplot2grid.loc
p22899
sg14
(lp22900
(icodemend.demo.code_suggest
Element
p22901
(dp22902
g10
I1
sg11
S''
sg12
Vsubplot2grid.loc.(0, 0)
p22903
sg14
(lp22904
sg2
S'(0, 0)'
p22905
sbasg2
S'loc'
p22906
sba(icodemend.demo.code_suggest
Element
p22907
(dp22908
g10
I1
sg11
S'create a subplot in a grid . the grid is specified by shape , at location of loc , spanning rowspan , colspan cells in each direction . the index for loc is 0-based .'
p22909
sg12
Vsubplot2grid.shape
p22910
sg14
(lp22911
g7072
asg2
S'shape'
p22912
sbasg2
g22836
sbs(S'axvspan'
p22913
S'antialiased'
p22914
tp22915
(icodemend.demo.code_suggest
Element
p22916
(dp22917
g10
I0
sg11
S'set whether to use antialiased rendering'
p22918
sg12
Vaxvspan.antialiased
p22919
sg14
(lp22920
sg2
g22914
sbs(S'fill'
p22921
S'hatch'
p22922
tp22923
(icodemend.demo.code_suggest
Element
p22924
(dp22925
g10
I1
sg11
S'set the hatching pattern'
p22926
sg12
Vfill.hatch
p22927
sg14
(lp22928
(icodemend.demo.code_suggest
Element
p22929
(dp22930
g10
I1
sg11
S''
sg12
Vfill.hatch.'/'
p22931
sg14
(lp22932
sg2
S"'/'"
p22933
sbasg2
g22922
sbs(S'barbs'
p22934
S'yticks'
p22935
tp22936
(icodemend.demo.code_suggest
Element
p22937
(dp22938
g10
I0
sg11
S'set the y ticks with list of ticks'
p22939
sg12
Vbarbs.yticks
p22940
sg14
(lp22941
sg2
g22935
sbs(S'legend'
p22942
g14616
tp22943
g14611
s(S'axhspan'
p22944
S'capstyle'
p22945
tp22946
(icodemend.demo.code_suggest
Element
p22947
(dp22948
g10
I0
sg11
S'set the patch capstyle'
p22949
sg12
Vaxhspan.capstyle
p22950
sg14
(lp22951
sg2
g22945
sbs(S'plotting'
p22952
g15844
tp22953
g15839
s(g125
g909
S'3'
tp22954
(icodemend.demo.code_suggest
Element
p22955
(dp22956
g10
I1
sg11
S''
sg12
Vaxvline.zorder.3
p22957
sg14
(lp22958
sg2
S'3'
sbs(g139
g13636
g2085
tp22959
g2081
s(g101
g118
g21965
tp22960
g21961
s(S'csd'
p22961
S'clip_box'
p22962
tp22963
(icodemend.demo.code_suggest
Element
p22964
(dp22965
g10
I0
sg11
S"set the artist 's clip bbox ."
p22966
sg12
Vcsd.clip_box
p22967
sg14
(lp22968
sg2
g22962
sbsS'add_image'
p22969
(icodemend.demo.code_suggest
Element
p22970
(dp22971
g10
I0
sg11
S'add a axesimage to the axes .'
p22972
sg12
Vadd_image
p22973
sg14
(lp22974
sg2
g22969
sbs(S'figtext'
p22975
g11508
tp22976
g11503
sg2962
(icodemend.demo.code_suggest
Element
p22977
(dp22978
g10
I0
sg11
S''
sg12
VColormap
p22979
sg14
(lp22980
g2964
ag13205
asg2
g2962
sbsS'bbox_artist'
p22981
(icodemend.demo.code_suggest
Element
p22982
(dp22983
g10
I0
sg11
S'this is a debug function to draw a rectangle around the bounding box returned by get_window_extent ( ) of an artist , to test whether the artist is returning the correct bbox .'
p22984
sg12
Vbbox_artist
p22985
sg14
(lp22986
(icodemend.demo.code_suggest
Element
p22987
(dp22988
g10
I0
sg11
S"props is a dict of rectangle props with the additional property ' pad ' that sets the padding around the bbox in points ."
p22989
sg12
Vbbox_artist.props
p22990
sg14
(lp22991
sg2
S'props'
p22992
sbasg2
g22981
sbs(S'fill'
p22993
S'cursor_props'
p22994
tp22995
(icodemend.demo.code_suggest
Element
p22996
(dp22997
g10
I0
sg11
S'set the cursor property as'
p22998
sg12
Vfill.cursor_props
p22999
sg14
(lp23000
sg2
g22994
sbs(S'cohere'
p23001
S'markerfacecolor'
p23002
tp23003
(icodemend.demo.code_suggest
Element
p23004
(dp23005
g10
I0
sg11
S'set the marker face color .'
p23006
sg12
Vcohere.markerfacecolor
p23007
sg14
(lp23008
sg2
g23002
sbs(S'axhline'
p23009
g3597
tp23010
g3592
s(g117
S'markevery'
p23011
S'stride'
p23012
tp23013
(icodemend.demo.code_suggest
Element
p23014
(dp23015
g10
I1
sg11
S''
sg12
Vplot.markevery.stride
p23016
sg14
(lp23017
sg2
g23012
sbs(g958
g8890
S'5'
tp23018
g22868
s(g582
S'y'
g3357
tp23019
g3353
sS'rc_params'
p23020
(icodemend.demo.code_suggest
Element
p23021
(dp23022
g10
I0
sg11
S'return a matplotlib.rcparams instance from the default matplotlib rc file .'
p23023
sg12
Vrc_params
p23024
sg14
(lp23025
sg2
g23020
sbs(S'angle_spectrum'
p23026
g18804
tp23027
g18799
s(S'pcolor'
p23028
S'ylim'
p23029
tp23030
(icodemend.demo.code_suggest
Element
p23031
(dp23032
g10
I0
sg11
S'set the data limits for the yaxis'
p23033
sg12
Vpcolor.ylim
p23034
sg14
(lp23035
sg2
g23029
sbs(g5640
g16843
g11991
tp23036
g11987
s(g109
g3075
S'96'
p23037
tp23038
(icodemend.demo.code_suggest
Element
p23039
(dp23040
g10
I1
sg11
S''
sg12
Vsavefig.dpi.96
p23041
sg14
(lp23042
sg2
g23037
sbsS'add_axobserver'
p23043
(icodemend.demo.code_suggest
Element
p23044
(dp23045
g10
I0
sg11
S'whenever the axes state change , func(self ) will be called'
p23046
sg12
Vadd_axobserver
p23047
sg14
(lp23048
sg2
g23043
sbs(g332
g20897
g438
tp23049
(icodemend.demo.code_suggest
Element
p23050
(dp23051
g10
I2
sg11
S''
sg12
Vtext.rasterized.True
p23052
sg14
(lp23053
sg2
g438
sbsS'allow_rasterization'
p23054
(icodemend.demo.code_suggest
Element
p23055
(dp23056
g10
I0
sg11
S'decorator for artist.draw method .'
p23057
sg12
Vallow_rasterization
p23058
sg14
(lp23059
sg2
g23054
sbs(S'text'
p23060
S'prop_cycle'
p23061
tp23062
(icodemend.demo.code_suggest
Element
p23063
(dp23064
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p23065
sg12
Vtext.prop_cycle
p23066
sg14
(lp23067
sg2
g23061
sbsS'drange'
p23068
(icodemend.demo.code_suggest
Element
p23069
(dp23070
g10
I15
sg11
S'return a date range as float gregorian ordinals .'
p23071
sg12
Vdrange
p23072
sg14
(lp23073
(icodemend.demo.code_suggest
Element
p23074
(dp23075
g10
I0
sg11
S'return a date range as float gregorian ordinals . dstart and dend are datetime instances . delta is a datetime.timedelta instance .'
p23076
sg12
Vdrange.delta
p23077
sg14
(lp23078
sg2
S'delta'
p23079
sba(icodemend.demo.code_suggest
Element
p23080
(dp23081
g10
I0
sg11
S'return a date range as float gregorian ordinals . dstart and dend are datetime instances . delta is a datetime.timedelta instance .'
p23082
sg12
Vdrange.dend
p23083
sg14
(lp23084
sg2
S'dend'
p23085
sba(icodemend.demo.code_suggest
Element
p23086
(dp23087
g10
I0
sg11
S'return a date range as float gregorian ordinals . dstart and dend are datetime instances . delta is a datetime.timedelta instance .'
p23088
sg12
Vdrange.dstart
p23089
sg14
(lp23090
sg2
S'dstart'
p23091
sbasg2
g23068
sbs(S'axhline'
p23092
g3525
tp23093
g3520
sS'tick_bottom'
p23094
(icodemend.demo.code_suggest
Element
p23095
(dp23096
g10
I10
sg11
S'use ticks only on bottom'
p23097
sg12
Vtick_bottom
p23098
sg14
(lp23099
sg2
g23094
sbs(S'psd'
p23100
S'picker'
p23101
tp23102
(icodemend.demo.code_suggest
Element
p23103
(dp23104
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p23105
sg12
Vpsd.picker
p23106
sg14
(lp23107
sg2
g23101
sbs(S'semilogx'
p23108
S'anchor'
p23109
tp23110
(icodemend.demo.code_suggest
Element
p23111
(dp23112
g10
I0
sg11
S'anchor'
p23113
sg12
Vsemilogx.anchor
p23114
sg14
(lp23115
sg2
g23109
sbs(S'withSimplePatchShadow'
p23116
S'rho'
p23117
tp23118
(icodemend.demo.code_suggest
Element
p23119
(dp23120
g10
I0
sg11
S'a scale factor to apply to the rgbface color if shadow_rgbface is not specified . default is 0.3 .'
p23121
sg12
VwithSimplePatchShadow.rho
p23122
sg14
(lp23123
sg2
g23117
sbs(S'arrow'
p23124
g2504
tp23125
g2494
s(g8266
g19538
S'0.9'
p23126
tp23127
(icodemend.demo.code_suggest
Element
p23128
(dp23129
g10
I1
sg11
S''
sg12
Vaxvspan.ymax.0/9
p23130
sg14
(lp23131
sg2
g23126
sbs(g252
g253
g14101
tp23132
g14097
s(S'errorbar'
p23133
S'figure'
p23134
tp23135
(icodemend.demo.code_suggest
Element
p23136
(dp23137
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p23138
sg12
Verrorbar.figure
p23139
sg14
(lp23140
sg2
g23134
sbs(S'axhspan'
p23141
S'xmin'
p23142
tp23143
(icodemend.demo.code_suggest
Element
p23144
(dp23145
g10
I0
sg11
S'draw a horizontal span ( rectangle ) from ymin to ymax . with the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . that is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .'
p23146
sg12
Vaxhspan.xmin
p23147
sg14
(lp23148
sg2
g23142
sbs(S'get'
p23149
S'xlim'
p23150
tp23151
(icodemend.demo.code_suggest
Element
p23152
(dp23153
g10
I0
sg11
S'set the data limits for the xaxis'
p23154
sg12
Vget.xlim
p23155
sg14
(lp23156
sg2
g23150
sbs(g101
S's'
g7716
tp23157
g7712
s(S'add'
p23158
S'zorder'
p23159
tp23160
(icodemend.demo.code_suggest
Element
p23161
(dp23162
g10
I0
sg11
S'set the zorder for the artist .'
p23163
sg12
Vadd.zorder
p23164
sg14
(lp23165
sg2
g23159
sbs(S'cohere'
p23166
S'contains'
p23167
tp23168
(icodemend.demo.code_suggest
Element
p23169
(dp23170
g10
I0
sg11
S'replace the contains test used by this artist .'
p23171
sg12
Vcohere.contains
p23172
sg14
(lp23173
sg2
g23167
sbs(S'semilogx'
p23174
S'rasterized'
p23175
tp23176
(icodemend.demo.code_suggest
Element
p23177
(dp23178
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p23179
sg12
Vsemilogx.rasterized
p23180
sg14
(lp23181
sg2
g23175
sbs(g324
g785
g9527
tp23182
g9523
s(S'start_event_loop_default'
p23183
S'timeout'
p23184
tp23185
(icodemend.demo.code_suggest
Element
p23186
(dp23187
g10
I0
sg11
S'this call blocks until a callback function triggers stop_event_loop ( ) or timeout is reached . if timeout is <=0 , never timeout .'
p23188
sg12
Vstart_event_loop_default.timeout
p23189
sg14
(lp23190
sg2
g23184
sbs(S'l2norm'
p23191
g488
tp23192
g483
s(S'pcolor'
p23193
S'linewidth'
p23194
tp23195
(icodemend.demo.code_suggest
Element
p23196
(dp23197
g10
I1
sg11
S'set the linewidth(s ) for the collection .'
p23198
sg12
Vpcolor.linewidth
p23199
sg14
(lp23200
g21140
asg2
g23194
sbs(S'get_xyz_where'
p23201
g17870
tp23202
g17865
s(S'subplots'
p23203
g1823
tp23204
g1464
s(S'axvline'
p23205
S'pickradius'
p23206
tp23207
(icodemend.demo.code_suggest
Element
p23208
(dp23209
g10
I0
sg11
S'sets the pick radius used for containment tests'
p23210
sg12
Vaxvline.pickradius
p23211
sg14
(lp23212
sg2
g23206
sbs(g101
S's'
S'r'
tp23213
g7611
s(g252
g1010
g13892
tp23214
g13888
s(g766
g666
g4033
tp23215
g4029
s(S'wrap'
p23216
g6400
tp23217
g6395
s(S'bxp'
p23218
S'meanline'
p23219
tp23220
(icodemend.demo.code_suggest
Element
p23221
(dp23222
g10
I0
sg11
S'if true ( and showmeans is true ) , will try to render the mean as a line spanning the full width of the box according to meanprops . not recommended if shownotches is also true . otherwise , means will be shown as points .'
p23223
sg12
Vbxp.meanline
p23224
sg14
(lp23225
sg2
g23219
sbs(g10679
g132
g5269
tp23226
g5265
sS'drag_pan'
p23227
(icodemend.demo.code_suggest
Element
p23228
(dp23229
g10
I1
sg11
S'called when the mouse moves during a pan operation . the drag callback in pan/zoom mode'
p23230
sg12
Vdrag_pan
p23231
sg14
(lp23232
(icodemend.demo.code_suggest
Element
p23233
(dp23234
g10
I0
sg11
S'button is the mouse button number :'
p23235
sg12
Vdrag_pan.button
p23236
sg14
(lp23237
sg2
S'button'
p23238
sbag16235
a(icodemend.demo.code_suggest
Element
p23239
(dp23240
g10
I0
sg11
S'x , y are the mouse coordinates in display coords .'
p23241
sg12
Vdrag_pan.x
p23242
sg14
(lp23243
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p23244
(dp23245
g10
I0
sg11
S'x , y are the mouse coordinates in display coords .'
p23246
sg12
Vdrag_pan.y
p23247
sg14
(lp23248
sg2
S'y'
sbasg2
g23227
sbs(S'xticks'
p23249
S'y'
tp23250
(icodemend.demo.code_suggest
Element
p23251
(dp23252
g10
I0
sg11
S'set the y position of the text'
p23253
sg12
Vxticks.y
p23254
sg14
(lp23255
sg2
S'y'
sbs(g93
g132
S"'w'"
p23256
tp23257
(icodemend.demo.code_suggest
Element
p23258
(dp23259
g10
I1
sg11
S''
sg12
Vannotate.color.'w'
p23260
sg14
(lp23261
sg2
g23256
sbs(g16
g132
S"'#33ff33'"
p23262
tp23263
(icodemend.demo.code_suggest
Element
p23264
(dp23265
g10
I2
sg11
S''
sg12
Vbar.color.'#33ff33'
p23266
sg14
(lp23267
sg2
g23262
sbs(S'axhline'
p23268
g3502
tp23269
g3492
s(S'psd'
p23270
S'path_effects'
p23271
tp23272
(icodemend.demo.code_suggest
Element
p23273
(dp23274
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p23275
sg12
Vpsd.path_effects
p23276
sg14
(lp23277
sg2
g23271
sbs(g93
g161
S'(76, 0.75)'
p23278
tp23279
(icodemend.demo.code_suggest
Element
p23280
(dp23281
g10
I1
sg11
S''
sg12
Vannotate.xy.(76, 0/75)
p23282
sg14
(lp23283
sg2
g23278
sbs(g117
g118
S"'Comments'"
p23284
tp23285
(icodemend.demo.code_suggest
Element
p23286
(dp23287
g10
I1
sg11
S''
sg12
Vplot.label.'Comments'
p23288
sg14
(lp23289
sg2
g23284
sbs(S'auto_adjust_subplotpars'
p23290
g6063
tp23291
g6058
s(S'add'
p23292
S'agg_filter'
p23293
tp23294
(icodemend.demo.code_suggest
Element
p23295
(dp23296
g10
I0
sg11
S'set agg_filter fuction .'
p23297
sg12
Vadd.agg_filter
p23298
sg14
(lp23299
sg2
g23293
sbs(S'errorbar'
p23300
S'ydata'
p23301
tp23302
(icodemend.demo.code_suggest
Element
p23303
(dp23304
g10
I0
sg11
S'set the data np.array for y'
p23305
sg12
Verrorbar.ydata
p23306
sg14
(lp23307
sg2
g23301
sbs(S'set_xticklabels'
p23308
g17294
tp23309
g17289
s(S'plotfile'
p23310
g16912
tp23311
g16907
s(S'TextArea'
p23312
S'minimumdescent'
p23313
g1944
tp23314
(icodemend.demo.code_suggest
Element
p23315
(dp23316
g10
I1
sg11
S''
sg12
VTextArea.minimumdescent.False
p23317
sg14
(lp23318
sg2
g1944
sbs(S'tricontourf'
p23319
g11705
tp23320
g11700
s(S'arrow'
p23321
g2629
tp23322
g2624
s(g117
g118
S"'recovered'"
p23323
tp23324
(icodemend.demo.code_suggest
Element
p23325
(dp23326
g10
I1
sg11
S''
sg12
Vplot.label.'recovered'
p23327
sg14
(lp23328
sg2
g23323
sbs(g324
g102
g9932
tp23329
g9928
s(S'cleaned'
p23330
S'curves'
p23331
tp23332
(icodemend.demo.code_suggest
Element
p23333
(dp23334
g10
I0
sg11
S'if true , curve segments will be returned as curve segments . if false , all curves will be converted to line segments .'
p23335
sg12
Vcleaned.curves
p23336
sg14
(lp23337
sg2
g23331
sbsS'eventplot'
p23338
(icodemend.demo.code_suggest
Element
p23339
(dp23340
g10
I1
sg11
S'plot identical parallel lines at specific positions .'
p23341
sg12
Veventplot
p23342
sg14
(lp23343
g2226
ag6107
a(icodemend.demo.code_suggest
Element
p23344
(dp23345
g10
I0
sg11
S'set the alpha tranparencies of the collection .'
p23346
sg12
Veventplot.alpha
p23347
sg14
(lp23348
sg2
S'alpha'
p23349
sba(icodemend.demo.code_suggest
Element
p23350
(dp23351
g10
I0
sg11
S'anchor'
p23352
sg12
Veventplot.anchor
p23353
sg14
(lp23354
sg2
S'anchor'
p23355
sba(icodemend.demo.code_suggest
Element
p23356
(dp23357
g10
I0
sg11
S"set the artist 's animation state ."
p23358
sg12
Veventplot.animated
p23359
sg14
(lp23360
sg2
S'animated'
p23361
sba(icodemend.demo.code_suggest
Element
p23362
(dp23363
g10
I0
sg11
S'set the antialiasing state for rendering .'
p23364
sg12
Veventplot.antialiased
p23365
sg14
(lp23366
sg2
S'antialiased'
p23367
sba(icodemend.demo.code_suggest
Element
p23368
(dp23369
g10
I0
sg11
S'set the image array from numpy array a'
p23370
sg12
Veventplot.array
p23371
sg14
(lp23372
sg2
S'array'
p23373
sba(icodemend.demo.code_suggest
Element
p23374
(dp23375
g10
I0
sg11
S'aspect'
p23376
sg12
Veventplot.aspect
p23377
sg14
(lp23378
sg2
S'aspect'
p23379
sba(icodemend.demo.code_suggest
Element
p23380
(dp23381
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p23382
sg12
Veventplot.axes
p23383
sg14
(lp23384
sg2
S'axes'
p23385
sba(icodemend.demo.code_suggest
Element
p23386
(dp23387
g10
I0
sg11
S'set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp'
p23388
sg12
Veventplot.clim
p23389
sg14
(lp23390
sg2
S'clim'
p23391
sba(icodemend.demo.code_suggest
Element
p23392
(dp23393
g10
I0
sg11
S"set the artist 's clip bbox ."
p23394
sg12
Veventplot.clip_box
p23395
sg14
(lp23396
sg2
S'clip_box'
p23397
sba(icodemend.demo.code_suggest
Element
p23398
(dp23399
g10
I0
sg11
S'set whether artist uses clipping .'
p23400
sg12
Veventplot.clip_on
p23401
sg14
(lp23402
sg2
S'clip_on'
p23403
sbag22768
ag16208
a(icodemend.demo.code_suggest
Element
p23404
(dp23405
g10
I0
sg11
S'set the colormap for luminance data'
p23406
sg12
Veventplot.cmap
p23407
sg14
(lp23408
sg2
S'cmap'
p23409
sba(icodemend.demo.code_suggest
Element
p23410
(dp23411
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p23412
sg12
Veventplot.codes
p23413
sg14
(lp23414
sg2
S'codes'
p23415
sba(icodemend.demo.code_suggest
Element
p23416
(dp23417
g10
I0
sg11
S'set the color(s ) of the line collection .'
p23418
sg12
Veventplot.color
p23419
sg14
(lp23420
sg2
S'color'
p23421
sba(icodemend.demo.code_suggest
Element
p23422
(dp23423
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p23424
sg12
Veventplot.color_cycle
p23425
sg14
(lp23426
sg2
S'color_cycle'
p23427
sba(icodemend.demo.code_suggest
Element
p23428
(dp23429
g10
I0
sg11
S'replace the contains test used by this artist .'
p23430
sg12
Veventplot.contains
p23431
sg14
(lp23432
sg2
S'contains'
p23433
sba(icodemend.demo.code_suggest
Element
p23434
(dp23435
g10
I0
sg11
S'set the cursor property as'
p23436
sg12
Veventplot.cursor_props
p23437
sg14
(lp23438
sg2
S'cursor_props'
p23439
sba(icodemend.demo.code_suggest
Element
p23440
(dp23441
g10
I0
sg11
S'set the edgecolor(s ) of the collection .'
p23442
sg12
Veventplot.edgecolor
p23443
sg14
(lp23444
sg2
S'edgecolor'
p23445
sba(icodemend.demo.code_suggest
Element
p23446
(dp23447
g10
I0
sg11
S'set the facecolor(s ) of the collection .'
p23448
sg12
Veventplot.facecolor
p23449
sg14
(lp23450
sg2
S'facecolor'
p23451
sba(icodemend.demo.code_suggest
Element
p23452
(dp23453
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p23454
sg12
Veventplot.figure
p23455
sg14
(lp23456
sg2
S'figure'
p23457
sbag13768
a(icodemend.demo.code_suggest
Element
p23458
(dp23459
g10
I0
sg11
S'set the hatching pattern'
p23460
sg12
Veventplot.hatch
p23461
sg14
(lp23462
sg2
S'hatch'
p23463
sba(icodemend.demo.code_suggest
Element
p23464
(dp23465
g10
I0
sg11
S'set the label to s for auto legend .'
p23466
sg12
Veventplot.label
p23467
sg14
(lp23468
sg2
S'label'
p23469
sbag8574
a(icodemend.demo.code_suggest
Element
p23470
(dp23471
g10
I0
sg11
S'set the linewidth(s ) for the collection .'
p23472
sg12
Veventplot.linewidth
p23473
sg14
(lp23474
sg2
S'linewidth'
p23475
sba(icodemend.demo.code_suggest
Element
p23476
(dp23477
g10
I0
sg11
S'set the normalization instance'
p23478
sg12
Veventplot.norm
p23479
sg14
(lp23480
sg2
S'norm'
p23481
sba(icodemend.demo.code_suggest
Element
p23482
(dp23483
g10
I0
sg11
S'set how offsets are applied .'
p23484
sg12
Veventplot.offset_position
p23485
sg14
(lp23486
sg2
S'offset_position'
p23487
sba(icodemend.demo.code_suggest
Element
p23488
(dp23489
g10
I0
sg11
S'set the offsets for the collection .'
p23490
sg12
Veventplot.offsets
p23491
sg14
(lp23492
sg2
S'offsets'
p23493
sba(icodemend.demo.code_suggest
Element
p23494
(dp23495
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p23496
sg12
Veventplot.path_effects
p23497
sg14
(lp23498
sg2
S'path_effects'
p23499
sbag8871
a(icodemend.demo.code_suggest
Element
p23500
(dp23501
g10
I0
sg11
S'set the axes position with'
p23502
sg12
Veventplot.position
p23503
sg14
(lp23504
sg2
S'position'
p23505
sba(icodemend.demo.code_suggest
Element
p23506
(dp23507
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p23508
sg12
Veventplot.prop_cycle
p23509
sg14
(lp23510
sg2
S'prop_cycle'
p23511
sba(icodemend.demo.code_suggest
Element
p23512
(dp23513
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p23514
sg12
Veventplot.rasterized
p23515
sg14
(lp23516
sg2
S'rasterized'
p23517
sba(icodemend.demo.code_suggest
Element
p23518
(dp23519
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p23520
sg12
Veventplot.readonly
p23521
sg14
(lp23522
sg2
S'readonly'
p23523
sbag2857
a(icodemend.demo.code_suggest
Element
p23524
(dp23525
g10
I0
sg11
S'sets the sketch parameters .'
p23526
sg12
Veventplot.sketch_params
p23527
sg14
(lp23528
sg2
S'sketch_params'
p23529
sba(icodemend.demo.code_suggest
Element
p23530
(dp23531
g10
I0
sg11
S'sets the snap setting which may be'
p23532
sg12
Veventplot.snap
p23533
sg14
(lp23534
sg2
S'snap'
p23535
sba(icodemend.demo.code_suggest
Element
p23536
(dp23537
g10
I0
sg11
S'set a title for the axes .'
p23538
sg12
Veventplot.title
p23539
sg14
(lp23540
sg2
S'title'
p23541
sba(icodemend.demo.code_suggest
Element
p23542
(dp23543
g10
I0
sg11
S'set the transform instance used by this artist .'
p23544
sg12
Veventplot.transform
p23545
sg14
(lp23546
sg2
S'transform'
p23547
sbag6775
a(icodemend.demo.code_suggest
Element
p23548
(dp23549
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p23550
sg12
Veventplot.vertices
p23551
sg14
(lp23552
sg2
S'vertices'
p23553
sba(icodemend.demo.code_suggest
Element
p23554
(dp23555
g10
I0
sg11
S"set the artist 's visiblity ."
p23556
sg12
Veventplot.visible
p23557
sg14
(lp23558
sg2
S'visible'
p23559
sbag10198
a(icodemend.demo.code_suggest
Element
p23560
(dp23561
g10
I0
sg11
S'set the data limits for the xaxis'
p23562
sg12
Veventplot.xlim
p23563
sg14
(lp23564
sg2
S'xlim'
p23565
sbag20803
a(icodemend.demo.code_suggest
Element
p23566
(dp23567
g10
I0
sg11
S'set the scaling of the x-axis'
p23568
sg12
Veventplot.xscale
p23569
sg14
(lp23570
sg2
S'xscale'
p23571
sba(icodemend.demo.code_suggest
Element
p23572
(dp23573
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p23574
sg12
Veventplot.xticklabels
p23575
sg14
(lp23576
sg2
S'xticklabels'
p23577
sbag18385
a(icodemend.demo.code_suggest
Element
p23578
(dp23579
g10
I0
sg11
S'set the label for the yaxis'
p23580
sg12
Veventplot.ylabel
p23581
sg14
(lp23582
sg2
S'ylabel'
p23583
sba(icodemend.demo.code_suggest
Element
p23584
(dp23585
g10
I0
sg11
S'set the data limits for the yaxis'
p23586
sg12
Veventplot.ylim
p23587
sg14
(lp23588
sg2
S'ylim'
p23589
sba(icodemend.demo.code_suggest
Element
p23590
(dp23591
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p23592
sg12
Veventplot.ymargin
p23593
sg14
(lp23594
sg2
S'ymargin'
p23595
sbag13004
a(icodemend.demo.code_suggest
Element
p23596
(dp23597
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p23598
sg12
Veventplot.yticklabels
p23599
sg14
(lp23600
sg2
S'yticklabels'
p23601
sba(icodemend.demo.code_suggest
Element
p23602
(dp23603
g10
I0
sg11
S'set the y ticks with list of ticks'
p23604
sg12
Veventplot.yticks
p23605
sg14
(lp23606
sg2
S'yticks'
p23607
sba(icodemend.demo.code_suggest
Element
p23608
(dp23609
g10
I0
sg11
S'set the zorder for the artist .'
p23610
sg12
Veventplot.zorder
p23611
sg14
(lp23612
sg2
S'zorder'
p23613
sbasg2
g23338
sbs(S'mkdirs'
p23614
g12254
tp23615
g12249
s(S'loglog'
p23616
S'x'
tp23617
(icodemend.demo.code_suggest
Element
p23618
(dp23619
g10
I0
sg11
S'make a plot with log scaling on both the x and y axis .|||plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .'
p23620
sg12
Vloglog.x
p23621
sg14
(lp23622
sg2
S'x'
sbsS'yaxis_date'
p23623
(icodemend.demo.code_suggest
Element
p23624
(dp23625
g10
I6
sg11
S'sets up y-axis ticks and labels that treat the y data as dates .'
p23626
sg12
Vyaxis_date
p23627
sg14
(lp23628
g16006
asg2
g23623
sbs(S'csd'
p23629
S'yticklabels'
p23630
tp23631
(icodemend.demo.code_suggest
Element
p23632
(dp23633
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p23634
sg12
Vcsd.yticklabels
p23635
sg14
(lp23636
sg2
g23630
sbs(g93
g161
S'(0.3, (-0.1))'
p23637
tp23638
(icodemend.demo.code_suggest
Element
p23639
(dp23640
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/3, (-0/1))
p23641
sg14
(lp23642
sg2
g23637
sbs(g5424
g2392
S'0.4'
p23643
tp23644
(icodemend.demo.code_suggest
Element
p23645
(dp23646
g10
I1
sg11
S''
sg12
Vgrid.linewidth.0/4
p23647
sg14
(lp23648
sg2
g23643
sbs(S'plot'
p23649
S'scaley'
p23650
tp23651
(icodemend.demo.code_suggest
Element
p23652
(dp23653
g10
I1
sg11
S'autoscale the view limits using the data limits . you can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to false . the autoscaling preserves any axis direction reversal that has already been done .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p23654
sg12
Vplot.scaley
p23655
sg14
(lp23656
(icodemend.demo.code_suggest
Element
p23657
(dp23658
g10
I1
sg11
S''
sg12
Vplot.scaley.False
p23659
sg14
(lp23660
sg2
g1944
sbasg2
g23650
sbs(g452
g2841
S"u''"
p23661
tp23662
(icodemend.demo.code_suggest
Element
p23663
(dp23664
g10
I1
sg11
S''
sg12
Verrorbar.fmt.u''
p23665
sg14
(lp23666
sg2
g23661
sbs(S'set_xscale'
p23667
S'subsy'
p23668
tp23669
(icodemend.demo.code_suggest
Element
p23670
(dp23671
g10
I0
sg11
S'where to place the subticks between each major tick . should be a sequence of integers . for example , in a log10 scale :[ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] will place 8 logarithmically spaced minor ticks between each major tick .'
p23672
sg12
Vset_xscale.subsy
p23673
sg14
(lp23674
sg2
g23668
sbsS'set_axisbelow'
p23675
(icodemend.demo.code_suggest
Element
p23676
(dp23677
g10
I1
sg11
S'set whether the axis ticks and gridlines are above or below most artists'
p23678
sg12
Vset_axisbelow
p23679
sg14
(lp23680
sg2
g23675
sbs(g93
g161
g1010
tp23681
(icodemend.demo.code_suggest
Element
p23682
(dp23683
g10
I1
sg11
S''
sg12
Vannotate.xy.loc
p23684
sg14
(lp23685
sg2
g1010
sbs(g13338
g126
S'-1.1'
p23686
tp23687
(icodemend.demo.code_suggest
Element
p23688
(dp23689
g10
I1
sg11
S''
sg12
Vylim.ymin.-1/1
p23690
sg14
(lp23691
sg2
g23686
sbs(S'set_yscale'
p23692
g15527
tp23693
g15522
s(g93
g161
S'(2, 1)'
p23694
tp23695
(icodemend.demo.code_suggest
Element
p23696
(dp23697
g10
I2
sg11
S''
sg12
Vannotate.xy.(2, 1)
p23698
sg14
(lp23699
sg2
g23694
sbs(g101
g4274
g21729
tp23700
g21725
s(g101
S's'
g7529
tp23701
g7525
s(g16
g489
S'start_times'
p23702
tp23703
(icodemend.demo.code_suggest
Element
p23704
(dp23705
g10
I1
sg11
S''
sg12
Vbar.bottom.start_times
p23706
sg14
(lp23707
sg2
g23702
sbs(S'set_yticklabels'
p23708
g18286
tp23709
g18281
s(g5424
g8352
g10142
tp23710
g10138
s(S'quiver'
p23711
S'hatch'
p23712
tp23713
(icodemend.demo.code_suggest
Element
p23714
(dp23715
g10
I1
sg11
S'set the hatching pattern'
p23716
sg12
Vquiver.hatch
p23717
sg14
(lp23718
(icodemend.demo.code_suggest
Element
p23719
(dp23720
g10
I1
sg11
S''
sg12
Vquiver.hatch.'ooo'
p23721
sg14
(lp23722
sg2
S"'ooo'"
p23723
sbasg2
g23712
sbs(S'subplots'
p23724
g2148
tp23725
g2143
s(g117
g118
S"'plt.plot'"
p23726
tp23727
(icodemend.demo.code_suggest
Element
p23728
(dp23729
g10
I1
sg11
S''
sg12
Vplot.label.'plt/plot'
p23730
sg14
(lp23731
sg2
g23726
sbs(S'VPacker'
p23732
S'mode'
p23733
tp23734
(icodemend.demo.code_suggest
Element
p23735
(dp23736
g10
I0
sg11
S'packing mode .'
p23737
sg12
VVPacker.mode
p23738
sg14
(lp23739
sg2
g23733
sbs(S'phase_spectrum'
p23740
S'xdata'
p23741
tp23742
(icodemend.demo.code_suggest
Element
p23743
(dp23744
g10
I0
sg11
S'set the data np.array for x'
p23745
sg12
Vphase_spectrum.xdata
p23746
sg14
(lp23747
sg2
g23741
sbs(S'drag_pan'
p23748
S'y'
tp23749
g23244
s(S'polar'
p23750
S'y'
tp23751
(icodemend.demo.code_suggest
Element
p23752
(dp23753
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .'
p23754
sg12
Vpolar.y
p23755
sg14
(lp23756
sg2
S'y'
sbs(S'getp'
p23757
S'title'
p23758
tp23759
(icodemend.demo.code_suggest
Element
p23760
(dp23761
g10
I0
sg11
S'set a title for the axes .'
p23762
sg12
Vgetp.title
p23763
sg14
(lp23764
sg2
g23758
sbs(S'csd'
p23765
S'ylim'
p23766
tp23767
(icodemend.demo.code_suggest
Element
p23768
(dp23769
g10
I0
sg11
S'set the data limits for the yaxis'
p23770
sg12
Vcsd.ylim
p23771
sg14
(lp23772
sg2
g23766
sbs(S'barh'
p23773
S'title'
p23774
tp23775
(icodemend.demo.code_suggest
Element
p23776
(dp23777
g10
I0
sg11
S'set a title for the axes .'
p23778
sg12
Vbarh.title
p23779
sg14
(lp23780
sg2
g23774
sbs(g6632
g13338
S'((-0.1), 1.1)'
p23781
tp23782
(icodemend.demo.code_suggest
Element
p23783
(dp23784
g10
I2
sg11
S''
sg12
Vadd_subplot.ylim.((-0/1), 1/1)
p23785
sg14
(lp23786
sg2
g23781
sbs(S'hist'
p23787
S'x0'
p23788
tp23789
(icodemend.demo.code_suggest
Element
p23790
(dp23791
g10
I0
sg11
S'multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ... ] ) , or as a 2-d ndarray in which each column is a dataset . note that the ndarray form is transposed relative to the list form .'
p23792
sg12
Vhist.x0
p23793
sg14
(lp23794
sg2
g23788
sbs(S'set_yticklabels'
p23795
g18232
tp23796
g18227
s(S'axhspan'
p23797
S'clip_box'
p23798
tp23799
(icodemend.demo.code_suggest
Element
p23800
(dp23801
g10
I0
sg11
S"set the artist 's clip bbox ."
p23802
sg12
Vaxhspan.clip_box
p23803
sg14
(lp23804
sg2
g23798
sbs(S'quiver'
p23805
S'cursor_props'
p23806
tp23807
(icodemend.demo.code_suggest
Element
p23808
(dp23809
g10
I0
sg11
S'set the cursor property as'
p23810
sg12
Vquiver.cursor_props
p23811
sg14
(lp23812
sg2
g23806
sbs(g93
g389
S'90'
p23813
tp23814
(icodemend.demo.code_suggest
Element
p23815
(dp23816
g10
I4
sg11
S''
sg12
Vannotate.rotation.90
p23817
sg14
(lp23818
sg2
g23813
sbs(g8547
S'autopct'
p23819
g22515
tp23820
g22511
s(S'subplots'
p23821
g2101
tp23822
g2092
sS'get_yticklines'
p23823
(icodemend.demo.code_suggest
Element
p23824
(dp23825
g10
I3
sg11
S'get the ytick lines as a list of line2d instances'
p23826
sg12
Vget_yticklines
p23827
sg14
(lp23828
sg2
g23823
sbs(S'eventplot'
p23829
g23397
tp23830
g23392
s(g245
g140
S'(3, 5)'
p23831
tp23832
(icodemend.demo.code_suggest
Element
p23833
(dp23834
g10
I3
sg11
S''
sg12
Vfigure.figsize.(3, 5)
p23835
sg14
(lp23836
sg2
g23831
sbsS'prctile_rank'
p23837
(icodemend.demo.code_suggest
Element
p23838
(dp23839
g10
I0
sg11
S'return the rank for each element in x , return the rank 0..len(p ) .'
p23840
sg12
Vprctile_rank
p23841
sg14
(lp23842
g4795
a(icodemend.demo.code_suggest
Element
p23843
(dp23844
g10
I0
sg11
S'return the rank for each element in x , return the rank 0..len(p ) . e.g. , if p =( 25 , 50 , 75 ) , the return value will be a len(x ) array with values in [ 0,1,2,3 ] where 0 indicates the value is less than the 25th percentile , 1 indicates the value is > = the 25th and < 50th percentile , ... and 3 indicates the value is above the 75th percentile cutoff .'
p23845
sg12
Vprctile_rank.x
p23846
sg14
(lp23847
sg2
S'x'
sbasg2
g23837
sbs(S'arrow'
p23848
g2807
tp23849
g2802
s(S'tricontour'
p23850
g1428
tp23851
g1423
s(S'semilogx'
p23852
S'markeredgewidth'
p23853
tp23854
(icodemend.demo.code_suggest
Element
p23855
(dp23856
g10
I0
sg11
S'set the marker edge width in points'
p23857
sg12
Vsemilogx.markeredgewidth
p23858
sg14
(lp23859
sg2
g23853
sbs(g101
g118
g21935
tp23860
g21931
s(g252
g253
g14141
tp23861
g14137
s(S'scatter'
p23862
g22221
tp23863
g22216
s(S'connect'
p23864
S's'
tp23865
(icodemend.demo.code_suggest
Element
p23866
(dp23867
g10
I0
sg11
S'register func to be called when a signal s is generated func will be called connect event with string s to func . the signature of func is :'
p23868
sg12
Vconnect.s
p23869
sg14
(lp23870
sg2
S's'
sbs(g245
g140
S'(17, 8)'
p23871
tp23872
(icodemend.demo.code_suggest
Element
p23873
(dp23874
g10
I1
sg11
S''
sg12
Vfigure.figsize.(17, 8)
p23875
sg14
(lp23876
sg2
g23871
sbs(S'blend_hsv'
p23877
S'hsv_min_val: number, optional'
p23878
tp23879
(icodemend.demo.code_suggest
Element
p23880
(dp23881
g10
I0
sg11
S'the minimum value ( " v " in " hsv " ) that the intensity map can shift the output image to . defaults to 0 .'
p23882
sg12
Vblend_hsv.hsv_min_val: number, optional
p23883
sg14
(lp23884
sg2
g23878
sbs(S'AbstractPathEffect'
p23885
S'offset'
p23886
tp23887
(icodemend.demo.code_suggest
Element
p23888
(dp23889
g10
I0
sg11
S'the offset to apply to the path , measured in points .'
p23890
sg12
VAbstractPathEffect.offset
p23891
sg14
(lp23892
sg2
g23886
sbs(S'gca'
p23893
S'color_cycle'
p23894
tp23895
(icodemend.demo.code_suggest
Element
p23896
(dp23897
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p23898
sg12
Vgca.color_cycle
p23899
sg14
(lp23900
sg2
g23894
sbs(S'axhline'
p23901
g3543
tp23902
g3538
s(S'phase_spectrum'
p23903
S'path_effects'
p23904
tp23905
(icodemend.demo.code_suggest
Element
p23906
(dp23907
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p23908
sg12
Vphase_spectrum.path_effects
p23909
sg14
(lp23910
sg2
g23904
sbs(g101
g2392
g15687
tp23911
g15683
s(S'broken_barh'
p23912
S'label'
p23913
tp23914
(icodemend.demo.code_suggest
Element
p23915
(dp23916
g10
I0
sg11
S'set the label to s for auto legend .'
p23917
sg12
Vbroken_barh.label
p23918
sg14
(lp23919
sg2
g23913
sbs(S'parse_afm'
p23920
S'dhead'
p23921
tp23922
(icodemend.demo.code_suggest
Element
p23923
(dp23924
g10
I0
sg11
S'parse the adobe font metics file in file handle fh . return value is a ( dhead , dcmetrics , dkernpairs , dcomposite ) tuple where dhead is a _ parse_header ( ) dict , dcmetrics is a _ parse_composites ( ) dict , dkernpairs is a _ parse_kern_pairs ( ) dict ( possibly { } ) , and dcomposite is a _ parse_composites ( ) dict ( possibly { } )'
p23925
sg12
Vparse_afm.dhead
p23926
sg14
(lp23927
sg2
g23921
sbsS'get_offset_text'
p23928
(icodemend.demo.code_suggest
Element
p23929
(dp23930
g10
I3
sg11
S'return the axis offsettext as a text instance'
p23931
sg12
Vget_offset_text
p23932
sg14
(lp23933
sg2
g23928
sbsS'ylim'
p23934
(icodemend.demo.code_suggest
Element
p23935
(dp23936
g10
I248
sg11
S'get or set the y - limits of the current axes .'
p23937
sg12
Vylim
p23938
sg14
(lp23939
(icodemend.demo.code_suggest
Element
p23940
(dp23941
g10
I7
sg11
S'if you do not specify args , you can pass the ymin and ymax as kwargs , e.g. :'
p23942
sg12
Vylim.ymin
p23943
sg14
(lp23944
(icodemend.demo.code_suggest
Element
p23945
(dp23946
g10
I6
sg11
S''
sg12
Vylim.ymin.0
p23947
sg14
(lp23948
sg2
S'0'
sbag23688
asg2
S'ymin'
p23949
sbag20740
a(icodemend.demo.code_suggest
Element
p23950
(dp23951
g10
I0
sg11
S'get or set the y - limits of the current axes .'
p23952
sg12
Vylim.y
p23953
sg14
(lp23954
sg2
S'y'
sbasg2
g23934
sbs(S'fill'
p23955
S'edgecolor'
p23956
tp23957
(icodemend.demo.code_suggest
Element
p23958
(dp23959
g10
I3
sg11
S'set the patch edge color'
p23960
sg12
Vfill.edgecolor
p23961
sg14
(lp23962
g10112
ag424
a(icodemend.demo.code_suggest
Element
p23963
(dp23964
g10
I1
sg11
S''
sg12
Vfill.edgecolor.'r'
p23965
sg14
(lp23966
sg2
S"'r'"
p23967
sbasg2
g23956
sbs(g324
g10116
g9029
tp23968
g9025
s(S'angle_spectrum'
p23969
g18696
tp23970
g18691
s(S'table'
p23971
S'axes'
p23972
tp23973
(icodemend.demo.code_suggest
Element
p23974
(dp23975
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p23976
sg12
Vtable.axes
p23977
sg14
(lp23978
sg2
g23972
sbs(S'grid'
p23979
S'position'
p23980
tp23981
(icodemend.demo.code_suggest
Element
p23982
(dp23983
g10
I0
sg11
S'set the axes position with'
p23984
sg12
Vgrid.position
p23985
sg14
(lp23986
sg2
g23980
sbsS'set_ls'
p23987
(icodemend.demo.code_suggest
Element
p23988
(dp23989
g10
I0
sg11
S'alias for set_linestyle'
p23990
sg12
Vset_ls
p23991
sg14
(lp23992
sg2
g23987
sbs(S'quiver'
p23993
S'sketch_params'
p23994
tp23995
(icodemend.demo.code_suggest
Element
p23996
(dp23997
g10
I0
sg11
S'sets the sketch parameters .'
p23998
sg12
Vquiver.sketch_params
p23999
sg14
(lp24000
sg2
g23994
sbs(g101
g325
g21794
tp24001
g21790
s(S'acorr'
p24002
g15958
tp24003
g15953
s(g252
g7452
g14281
tp24004
g14277
s(g6632
g13338
S'((-1), 1)'
p24005
tp24006
(icodemend.demo.code_suggest
Element
p24007
(dp24008
g10
I1
sg11
S''
sg12
Vadd_subplot.ylim.((-1), 1)
p24009
sg14
(lp24010
sg2
g24005
sbs(g944
g1262
S'bdate'
p24011
tp24012
(icodemend.demo.code_suggest
Element
p24013
(dp24014
g10
I1
sg11
S''
sg12
Vbarh.left.bdate
p24015
sg14
(lp24016
sg2
g24011
sbs(S'table'
p24017
S'ylim'
p24018
tp24019
(icodemend.demo.code_suggest
Element
p24020
(dp24021
g10
I0
sg11
S'set the data limits for the yaxis'
p24022
sg12
Vtable.ylim
p24023
sg14
(lp24024
sg2
g24018
sbs(S'thetagrids'
p24025
S'x'
tp24026
(icodemend.demo.code_suggest
Element
p24027
(dp24028
g10
I0
sg11
S'set the x position of the text'
p24029
sg12
Vthetagrids.x
p24030
sg14
(lp24031
sg2
S'x'
sbsS'format_data_short'
p24032
(icodemend.demo.code_suggest
Element
p24033
(dp24034
g10
I0
sg11
S'return a short formatted string representation of a number'
p24035
sg12
Vformat_data_short
p24036
sg14
(lp24037
sg2
g24032
sbs(S'angle_spectrum'
p24038
g18906
tp24039
g18901
s(g109
g8267
S"'black'"
p24040
tp24041
(icodemend.demo.code_suggest
Element
p24042
(dp24043
g10
I2
sg11
S''
sg12
Vsavefig.facecolor.'black'
p24044
sg14
(lp24045
sg2
g24040
sbs(S'getp'
p24046
S'y'
tp24047
(icodemend.demo.code_suggest
Element
p24048
(dp24049
g10
I0
sg11
S'set the y position of the text'
p24050
sg12
Vgetp.y
p24051
sg14
(lp24052
sg2
S'y'
sbs(g5562
g515
g10875
tp24053
g10871
s(S'semilogx'
p24054
S'xdata'
p24055
tp24056
(icodemend.demo.code_suggest
Element
p24057
(dp24058
g10
I0
sg11
S'set the data np.array for x'
p24059
sg12
Vsemilogx.xdata
p24060
sg14
(lp24061
sg2
g24055
sbs(S'add_callback'
p24062
S'id'
p24063
tp24064
(icodemend.demo.code_suggest
Element
p24065
(dp24066
g10
I0
sg11
S'returns an id that is useful for removing the callback with remove_callback ( ) later .'
p24067
sg12
Vadd_callback.id
p24068
sg14
(lp24069
sg2
g24063
sbs(S'norm_flat'
p24070
S'p'
tp24071
(icodemend.demo.code_suggest
Element
p24072
(dp24073
g10
I0
sg11
S"p can be a number or the string ' infinity ' to get the l-infinity norm ."
p24074
sg12
Vnorm_flat.p
p24075
sg14
(lp24076
sg2
S'p'
sbs(S'axhspan'
p24077
S'size_inches'
p24078
tp24079
(icodemend.demo.code_suggest
Element
p24080
(dp24081
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p24082
sg12
Vaxhspan.size_inches
p24083
sg14
(lp24084
sg2
g24078
sbs(S'quiver'
p24085
S'pivot'
p24086
tp24087
(icodemend.demo.code_suggest
Element
p24088
(dp24089
g10
I4
sg11
S'the part of the arrow that is at the grid point ; the arrow rotates about this point , hence the name pivot .'
p24090
sg12
Vquiver.pivot
p24091
sg14
(lp24092
(icodemend.demo.code_suggest
Element
p24093
(dp24094
g10
I2
sg11
S''
sg12
Vquiver.pivot.'mid'
p24095
sg14
(lp24096
sg2
S"'mid'"
p24097
sba(icodemend.demo.code_suggest
Element
p24098
(dp24099
g10
I1
sg11
S''
sg12
Vquiver.pivot.'middle'
p24100
sg14
(lp24101
sg2
S"'middle'"
p24102
sba(icodemend.demo.code_suggest
Element
p24103
(dp24104
g10
I1
sg11
S''
sg12
Vquiver.pivot.'tail'
p24105
sg14
(lp24106
sg2
S"'tail'"
p24107
sbasg2
g24086
sbs(g117
g132
S"'none'"
p24108
tp24109
(icodemend.demo.code_suggest
Element
p24110
(dp24111
g10
I1
sg11
S''
sg12
Vplot.color.'none'
p24112
sg14
(lp24113
sg2
g24108
sbs(g93
g161
S'(i, i)'
p24114
tp24115
(icodemend.demo.code_suggest
Element
p24116
(dp24117
g10
I1
sg11
S''
sg12
Vannotate.xy.(i, i)
p24118
sg14
(lp24119
sg2
g24114
sbs(g13284
S'y'
S'0.85'
p24120
tp24121
(icodemend.demo.code_suggest
Element
p24122
(dp24123
g10
I1
sg11
S''
sg12
Vsuptitle.y.0/85
p24124
sg14
(lp24125
sg2
g24120
sbs(g93
g4800
S'(end, y_height)'
p24126
tp24127
(icodemend.demo.code_suggest
Element
p24128
(dp24129
g10
I1
sg11
S''
sg12
Vannotate.xytext.(end, y_height)
p24130
sg14
(lp24131
sg2
g24126
sbs(S'add'
p24132
S'capstyle'
p24133
tp24134
(icodemend.demo.code_suggest
Element
p24135
(dp24136
g10
I0
sg11
S'set the patch capstyle'
p24137
sg12
Vadd.capstyle
p24138
sg14
(lp24139
sg2
g24133
sbs(g13284
S'x'
S'0.01'
p24140
tp24141
(icodemend.demo.code_suggest
Element
p24142
(dp24143
g10
I1
sg11
S''
sg12
Vsuptitle.x.0/01
p24144
sg14
(lp24145
sg2
g24140
sbs(S'rgrids'
p24146
S'rotation_mode'
p24147
tp24148
(icodemend.demo.code_suggest
Element
p24149
(dp24150
g10
I0
sg11
S'set text rotation mode .'
p24151
sg12
Vrgrids.rotation_mode
p24152
sg14
(lp24153
sg2
g24147
sbs(S'acorr'
p24154
g15910
tp24155
g15900
s(g252
S'scatterpoints'
p24156
S'1'
tp24157
g14381
s(S'csd'
p24158
S'markersize'
p24159
tp24160
(icodemend.demo.code_suggest
Element
p24161
(dp24162
g10
I0
sg11
S'set the marker size in points'
p24163
sg12
Vcsd.markersize
p24164
sg14
(lp24165
sg2
g24159
sbs(S'add_lines'
p24166
S'erase'
p24167
tp24168
(icodemend.demo.code_suggest
Element
p24169
(dp24170
g10
I0
sg11
S'set erase to false to add lines without first removing any previously added lines . set erase to false if these lines should be added to any pre-existing lines .'
p24171
sg12
Vadd_lines.erase
p24172
sg14
(lp24173
sg2
g24167
sbs(S'plot_date'
p24174
g19919
tp24175
g19914
s(g5424
g2392
S'1.0'
p24176
tp24177
(icodemend.demo.code_suggest
Element
p24178
(dp24179
g10
I4
sg11
S''
sg12
Vgrid.linewidth.1/0
p24180
sg14
(lp24181
sg2
g24176
sbs(g452
g2251
S"'None'"
p24182
tp24183
(icodemend.demo.code_suggest
Element
p24184
(dp24185
g10
I2
sg11
S''
sg12
Verrorbar.linestyle.'None'
p24186
sg14
(lp24187
sg2
g24182
sbs(S'set_yticklabels'
p24188
g18226
tp24189
g18221
sS'current_key_axes'
p24190
(icodemend.demo.code_suggest
Element
p24191
(dp24192
g10
I0
sg11
S'return a tuple of ( key , axes ) for the active axes .'
p24193
sg12
Vcurrent_key_axes
p24194
sg14
(lp24195
sg2
g24190
sbs(S'semilogy'
p24196
S'prop_cycle'
p24197
tp24198
(icodemend.demo.code_suggest
Element
p24199
(dp24200
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p24201
sg12
Vsemilogy.prop_cycle
p24202
sg14
(lp24203
sg2
g24197
sbsS'pause'
p24204
(icodemend.demo.code_suggest
Element
p24205
(dp24206
g10
I54
sg11
S'pause for interval seconds .'
p24207
sg12
Vpause
p24208
sg14
(lp24209
(icodemend.demo.code_suggest
Element
p24210
(dp24211
g10
I0
sg11
S'pause for interval seconds .'
p24212
sg12
Vpause.interval
p24213
sg14
(lp24214
sg2
S'interval'
p24215
sbasg2
g24204
sbs(g514
g5025
S'4'
tp24216
g10560
s(g252
S'handlelength'
p24217
g14478
tp24218
g14474
s(S'imshow'
p24219
g10006
tp24220
g10001
s(S'bxp'
p24221
S'showbox'
p24222
tp24223
(icodemend.demo.code_suggest
Element
p24224
(dp24225
g10
I0
sg11
S'if true , will toggle one the rendering of box'
p24226
sg12
Vbxp.showbox
p24227
sg14
(lp24228
sg2
g24222
sbs(g101
S's'
g7661
tp24229
g7657
s(g117
g5546
S't'
tp24230
g21069
s(S'pcolormesh'
p24231
S'contains'
p24232
tp24233
(icodemend.demo.code_suggest
Element
p24234
(dp24235
g10
I0
sg11
S'replace the contains test used by this artist .'
p24236
sg12
Vpcolormesh.contains
p24237
sg14
(lp24238
sg2
g24232
sbs(S'__call__'
p24239
S'x, y'
p24240
tp24241
(icodemend.demo.code_suggest
Element
p24242
(dp24243
g10
I0
sg11
S'x and y coordinates of the same shape and any number of dimensions .'
p24244
sg12
V__call__.x, y
p24245
sg14
(lp24246
sg2
g24240
sbsS'axhspan'
p24247
(icodemend.demo.code_suggest
Element
p24248
(dp24249
g10
I4
sg11
S'add a horizontal span ( rectangle ) across the axis .'
p24250
sg12
Vaxhspan
p24251
sg14
(lp24252
g8272
a(icodemend.demo.code_suggest
Element
p24253
(dp24254
g10
I2
sg11
S'set both the edgecolor and the facecolor .'
p24255
sg12
Vaxhspan.color
p24256
sg14
(lp24257
(icodemend.demo.code_suggest
Element
p24258
(dp24259
g10
I1
sg11
S''
sg12
Vaxhspan.color.'b'
p24260
sg14
(lp24261
sg2
S"'b'"
p24262
sbag22589
asg2
S'color'
p24263
sbag6254
a(icodemend.demo.code_suggest
Element
p24264
(dp24265
g10
I1
sg11
S'set the patch face color'
p24266
sg12
Vaxhspan.facecolor
p24267
sg14
(lp24268
(icodemend.demo.code_suggest
Element
p24269
(dp24270
g10
I1
sg11
S''
sg12
Vaxhspan.facecolor.'0/2'
p24271
sg14
(lp24272
sg2
S"'0.2'"
p24273
sbasg2
S'facecolor'
p24274
sba(icodemend.demo.code_suggest
Element
p24275
(dp24276
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p24277
sg12
Vaxhspan._interpolation_steps
p24278
sg14
(lp24279
sg2
S'_interpolation_steps'
p24280
sbag7425
a(icodemend.demo.code_suggest
Element
p24281
(dp24282
g10
I0
sg11
S'anchor'
p24283
sg12
Vaxhspan.anchor
p24284
sg14
(lp24285
sg2
S'anchor'
p24286
sbag20682
a(icodemend.demo.code_suggest
Element
p24287
(dp24288
g10
I0
sg11
S'set whether to use antialiased rendering'
p24289
sg12
Vaxhspan.antialiased
p24290
sg14
(lp24291
sg2
S'antialiased'
p24292
sba(icodemend.demo.code_suggest
Element
p24293
(dp24294
g10
I0
sg11
S'aspect'
p24295
sg12
Vaxhspan.aspect
p24296
sg14
(lp24297
sg2
S'aspect'
p24298
sba(icodemend.demo.code_suggest
Element
p24299
(dp24300
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p24301
sg12
Vaxhspan.axes
p24302
sg14
(lp24303
sg2
S'axes'
p24304
sbag22947
ag23800
a(icodemend.demo.code_suggest
Element
p24305
(dp24306
g10
I0
sg11
S'set whether artist uses clipping .'
p24307
sg12
Vaxhspan.clip_on
p24308
sg14
(lp24309
sg2
S'clip_on'
p24310
sbag3193
a(icodemend.demo.code_suggest
Element
p24311
(dp24312
g10
I0
sg11
S'set if the polygon is closed|||if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p24313
sg12
Vaxhspan.closed
p24314
sg14
(lp24315
sg2
S'closed'
p24316
sbag19436
a(icodemend.demo.code_suggest
Element
p24317
(dp24318
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p24319
sg12
Vaxhspan.color_cycle
p24320
sg14
(lp24321
sg2
S'color_cycle'
p24322
sba(icodemend.demo.code_suggest
Element
p24323
(dp24324
g10
I0
sg11
S'replace the contains test used by this artist .'
p24325
sg12
Vaxhspan.contains
p24326
sg14
(lp24327
sg2
S'contains'
p24328
sba(icodemend.demo.code_suggest
Element
p24329
(dp24330
g10
I0
sg11
S'set the cursor property as'
p24331
sg12
Vaxhspan.cursor_props
p24332
sg14
(lp24333
sg2
S'cursor_props'
p24334
sba(icodemend.demo.code_suggest
Element
p24335
(dp24336
g10
I0
sg11
S'set the patch edge color'
p24337
sg12
Vaxhspan.edgecolor
p24338
sg14
(lp24339
sg2
S'edgecolor'
p24340
sba(icodemend.demo.code_suggest
Element
p24341
(dp24342
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p24343
sg12
Vaxhspan.figure
p24344
sg14
(lp24345
sg2
S'figure'
p24346
sba(icodemend.demo.code_suggest
Element
p24347
(dp24348
g10
I0
sg11
S'set whether to fill the patch'
p24349
sg12
Vaxhspan.fill
p24350
sg14
(lp24351
sg2
S'fill'
p24352
sbag12264
a(icodemend.demo.code_suggest
Element
p24353
(dp24354
g10
I0
sg11
S'set the hatching pattern'
p24355
sg12
Vaxhspan.hatch
p24356
sg14
(lp24357
sg2
S'hatch'
p24358
sba(icodemend.demo.code_suggest
Element
p24359
(dp24360
g10
I0
sg11
S'set the patch joinstyle'
p24361
sg12
Vaxhspan.joinstyle
p24362
sg14
(lp24363
sg2
S'joinstyle'
p24364
sbag22783
ag6949
a(icodemend.demo.code_suggest
Element
p24365
(dp24366
g10
I0
sg11
S'set the patch linewidth in points'
p24367
sg12
Vaxhspan.linewidth
p24368
sg14
(lp24369
sg2
S'linewidth'
p24370
sba(icodemend.demo.code_suggest
Element
p24371
(dp24372
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p24373
sg12
Vaxhspan.path_effects
p24374
sg14
(lp24375
sg2
S'path_effects'
p24376
sba(icodemend.demo.code_suggest
Element
p24377
(dp24378
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p24379
sg12
Vaxhspan.picker
p24380
sg14
(lp24381
sg2
S'picker'
p24382
sba(icodemend.demo.code_suggest
Element
p24383
(dp24384
g10
I0
sg11
S'set the axes position with'
p24385
sg12
Vaxhspan.position
p24386
sg14
(lp24387
sg2
S'position'
p24388
sba(icodemend.demo.code_suggest
Element
p24389
(dp24390
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p24391
sg12
Vaxhspan.prop_cycle
p24392
sg14
(lp24393
sg2
S'prop_cycle'
p24394
sba(icodemend.demo.code_suggest
Element
p24395
(dp24396
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p24397
sg12
Vaxhspan.rasterized
p24398
sg14
(lp24399
sg2
S'rasterized'
p24400
sba(icodemend.demo.code_suggest
Element
p24401
(dp24402
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p24403
sg12
Vaxhspan.readonly
p24404
sg14
(lp24405
sg2
S'readonly'
p24406
sbag24080
a(icodemend.demo.code_suggest
Element
p24407
(dp24408
g10
I0
sg11
S'sets the sketch parameters .'
p24409
sg12
Vaxhspan.sketch_params
p24410
sg14
(lp24411
sg2
S'sketch_params'
p24412
sba(icodemend.demo.code_suggest
Element
p24413
(dp24414
g10
I0
sg11
S'sets the snap setting which may be'
p24415
sg12
Vaxhspan.snap
p24416
sg14
(lp24417
sg2
S'snap'
p24418
sba(icodemend.demo.code_suggest
Element
p24419
(dp24420
g10
I0
sg11
S'set a title for the axes .'
p24421
sg12
Vaxhspan.title
p24422
sg14
(lp24423
sg2
S'title'
p24424
sba(icodemend.demo.code_suggest
Element
p24425
(dp24426
g10
I0
sg11
S'set the transform instance used by this artist .'
p24427
sg12
Vaxhspan.transform
p24428
sg14
(lp24429
sg2
S'transform'
p24430
sba(icodemend.demo.code_suggest
Element
p24431
(dp24432
g10
I0
sg11
S'sets the url for the artist'
p24433
sg12
Vaxhspan.url
p24434
sg14
(lp24435
sg2
S'url'
p24436
sba(icodemend.demo.code_suggest
Element
p24437
(dp24438
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p24439
sg12
Vaxhspan.vertices
p24440
sg14
(lp24441
sg2
S'vertices'
p24442
sba(icodemend.demo.code_suggest
Element
p24443
(dp24444
g10
I0
sg11
S"set the artist 's visiblity ."
p24445
sg12
Vaxhspan.visible
p24446
sg14
(lp24447
sg2
S'visible'
p24448
sba(icodemend.demo.code_suggest
Element
p24449
(dp24450
g10
I0
sg11
S'y coords are in data units and x coords are in axes ( relative 0-1 ) units .'
p24451
sg12
Vaxhspan.x
p24452
sg14
(lp24453
sg2
S'x'
sbag4893
a(icodemend.demo.code_suggest
Element
p24454
(dp24455
g10
I0
sg11
S'set the data limits for the xaxis'
p24456
sg12
Vaxhspan.xlim
p24457
sg14
(lp24458
sg2
S'xlim'
p24459
sba(icodemend.demo.code_suggest
Element
p24460
(dp24461
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p24462
sg12
Vaxhspan.xmargin
p24463
sg14
(lp24464
sg2
S'xmargin'
p24465
sba(icodemend.demo.code_suggest
Element
p24466
(dp24467
g10
I0
sg11
S'draw a horizontal span ( rectangle ) from ymin to ymax . with the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . that is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .'
p24468
sg12
Vaxhspan.xmax
p24469
sg14
(lp24470
sg2
S'xmax'
p24471
sbag23144
a(icodemend.demo.code_suggest
Element
p24472
(dp24473
g10
I0
sg11
S'set the scaling of the x-axis'
p24474
sg12
Vaxhspan.xscale
p24475
sg14
(lp24476
sg2
S'xscale'
p24477
sba(icodemend.demo.code_suggest
Element
p24478
(dp24479
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p24480
sg12
Vaxhspan.xticklabels
p24481
sg14
(lp24482
sg2
S'xticklabels'
p24483
sba(icodemend.demo.code_suggest
Element
p24484
(dp24485
g10
I0
sg11
S'set the x ticks with list of ticks'
p24486
sg12
Vaxhspan.xticks
p24487
sg14
(lp24488
sg2
S'xticks'
p24489
sbag19466
ag8828
ag2359
a(icodemend.demo.code_suggest
Element
p24490
(dp24491
g10
I0
sg11
S'set the data limits for the yaxis'
p24492
sg12
Vaxhspan.ylim
p24493
sg14
(lp24494
sg2
S'ylim'
p24495
sba(icodemend.demo.code_suggest
Element
p24496
(dp24497
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p24498
sg12
Vaxhspan.ymargin
p24499
sg14
(lp24500
sg2
S'ymargin'
p24501
sbag6115
ag12982
a(icodemend.demo.code_suggest
Element
p24502
(dp24503
g10
I0
sg11
S'set the scaling of the y-axis'
p24504
sg12
Vaxhspan.yscale
p24505
sg14
(lp24506
sg2
S'yscale'
p24507
sba(icodemend.demo.code_suggest
Element
p24508
(dp24509
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p24510
sg12
Vaxhspan.yticklabels
p24511
sg14
(lp24512
sg2
S'yticklabels'
p24513
sba(icodemend.demo.code_suggest
Element
p24514
(dp24515
g10
I0
sg11
S'set the y ticks with list of ticks'
p24516
sg12
Vaxhspan.yticks
p24517
sg14
(lp24518
sg2
S'yticks'
p24519
sbasg2
g24247
sbs(g514
g4459
S'0.0'
p24520
tp24521
(icodemend.demo.code_suggest
Element
p24522
(dp24523
g10
I2
sg11
S''
sg12
Vpcolor.vmin.0/0
p24524
sg14
(lp24525
sg2
g24520
sbsS'get_rotation'
p24526
(icodemend.demo.code_suggest
Element
p24527
(dp24528
g10
I4
sg11
S'return the text angle as float in degrees return the text angle as float .'
p24529
sg12
Vget_rotation
p24530
sg14
(lp24531
(icodemend.demo.code_suggest
Element
p24532
(dp24533
g10
I0
sg11
S"rotation may be ' horizontal ' , ' vertical ' , or a numeric value in degrees ."
p24534
sg12
Vget_rotation.rotation
p24535
sg14
(lp24536
sg2
S'rotation'
p24537
sbasg2
g24526
sbsS'set_frame_on'
p24538
(icodemend.demo.code_suggest
Element
p24539
(dp24540
g10
I23
sg11
S'set whether the axes rectangle patch is drawn set whether the legend box patch is drawn'
p24541
sg12
Vset_frame_on
p24542
sg14
(lp24543
sg2
g24538
sbs(g117
g118
S"'asd'"
p24544
tp24545
(icodemend.demo.code_suggest
Element
p24546
(dp24547
g10
I1
sg11
S''
sg12
Vplot.label.'asd'
p24548
sg14
(lp24549
sg2
g24544
sbs(S'loglog'
p24550
S'nonposy'
p24551
tp24552
(icodemend.demo.code_suggest
Element
p24553
(dp24554
g10
I0
sg11
S'non-positive values in x or y can be masked as invalid , or clipped to a very small positive number'
p24555
sg12
Vloglog.nonposy
p24556
sg14
(lp24557
sg2
g24551
sbs(g93
g4800
S'(1, (-0.1))'
p24558
tp24559
(icodemend.demo.code_suggest
Element
p24560
(dp24561
g10
I1
sg11
S''
sg12
Vannotate.xytext.(1, (-0/1))
p24562
sg14
(lp24563
sg2
g24558
sbs(S'rec_summarize'
p24564
S'r'
tp24565
(icodemend.demo.code_suggest
Element
p24566
(dp24567
g10
I0
sg11
S'r is a numpy record array|||summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname . the returned record array is identical to r , with extra arrays for each element in summaryfuncs .'
p24568
sg12
Vrec_summarize.r
p24569
sg14
(lp24570
sg2
S'r'
sbs(S'semilogx'
p24571
S'hatch'
p24572
tp24573
(icodemend.demo.code_suggest
Element
p24574
(dp24575
g10
I0
sg11
S'set the hatching pattern'
p24576
sg12
Vsemilogx.hatch
p24577
sg14
(lp24578
sg2
g24572
sbs(g139
S'squeeze'
p24579
g438
tp24580
g2097
s(g125
g132
S"'white'"
p24581
tp24582
(icodemend.demo.code_suggest
Element
p24583
(dp24584
g10
I2
sg11
S''
sg12
Vaxvline.color.'white'
p24585
sg14
(lp24586
sg2
g24581
sbs(g8943
g10376
S"'darkslategray'"
p24587
tp24588
(icodemend.demo.code_suggest
Element
p24589
(dp24590
g10
I1
sg11
S''
sg12
Vsubplot.axisbg.'darkslategray'
p24591
sg14
(lp24592
sg2
g24587
sbs(S'set_xticklabels'
p24593
g17241
tp24594
g17236
s(g117
g132
S"'0.75'"
p24595
tp24596
(icodemend.demo.code_suggest
Element
p24597
(dp24598
g10
I2
sg11
S''
sg12
Vplot.color.'0/75'
p24599
sg14
(lp24600
sg2
g24595
sbs(S'add_toolitem'
p24601
S'image_file'
p24602
tp24603
(icodemend.demo.code_suggest
Element
p24604
(dp24605
g10
I0
sg11
S'filename of the image for the button or none'
p24606
sg12
Vadd_toolitem.image_file
p24607
sg14
(lp24608
sg2
g24602
sbs(S'text'
p24609
S'x, y'
p24610
tp24611
(icodemend.demo.code_suggest
Element
p24612
(dp24613
g10
I0
sg11
S'data coordinates'
p24614
sg12
Vtext.x, y
p24615
sg14
(lp24616
sg2
g24610
sbsS'set_verticalalignment'
p24617
(icodemend.demo.code_suggest
Element
p24618
(dp24619
g10
I2
sg11
S'set the vertical alignment'
p24620
sg12
Vset_verticalalignment
p24621
sg14
(lp24622
sg2
g24617
sbsS'set_mfcalt'
p24623
(icodemend.demo.code_suggest
Element
p24624
(dp24625
g10
I0
sg11
S'alias for set_markerfacecoloralt'
p24626
sg12
Vset_mfcalt
p24627
sg14
(lp24628
sg2
g24623
sbs(g93
g909
g8744
tp24629
g8740
s(S'is_sequence_of_strings'
p24630
S'obj'
p24631
tp24632
(icodemend.demo.code_suggest
Element
p24633
(dp24634
g10
I0
sg11
S'returns true if obj is iterable and contains strings'
p24635
sg12
Vis_sequence_of_strings.obj
p24636
sg14
(lp24637
sg2
g24631
sbs(g332
S'style'
p24638
g302
tp24639
g298
s(g117
g118
S"'High Outlier'"
p24640
tp24641
(icodemend.demo.code_suggest
Element
p24642
(dp24643
g10
I1
sg11
S''
sg12
Vplot.label.'High Outlier'
p24644
sg14
(lp24645
sg2
g24640
sbs(g117
g132
S'my_colors'
p24646
tp24647
(icodemend.demo.code_suggest
Element
p24648
(dp24649
g10
I1
sg11
S''
sg12
Vplot.color.my_colors
p24650
sg14
(lp24651
sg2
g24646
sbs(g452
g12650
S'0'
tp24652
(icodemend.demo.code_suggest
Element
p24653
(dp24654
g10
I6
sg11
S''
sg12
Verrorbar.capsize.0
p24655
sg14
(lp24656
sg2
S'0'
sbs(S'axvspan'
p24657
S'linewidth'
p24658
tp24659
(icodemend.demo.code_suggest
Element
p24660
(dp24661
g10
I1
sg11
S'set the patch linewidth in points'
p24662
sg12
Vaxvspan.linewidth
p24663
sg14
(lp24664
(icodemend.demo.code_suggest
Element
p24665
(dp24666
g10
I1
sg11
S''
sg12
Vaxvspan.linewidth.2
p24667
sg14
(lp24668
sg2
S'2'
sbasg2
g24658
sbs(g101
S'c'
g21314
tp24669
g21310
s(g93
g4800
S'(0, (- labeloffset))'
p24670
tp24671
(icodemend.demo.code_suggest
Element
p24672
(dp24673
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0, (- labeloffset))
p24674
sg14
(lp24675
sg2
g24670
sbs(S'cohere'
p24676
S'markerfacecoloralt'
p24677
tp24678
(icodemend.demo.code_suggest
Element
p24679
(dp24680
g10
I0
sg11
S'set the alternate marker face color .'
p24681
sg12
Vcohere.markerfacecoloralt
p24682
sg14
(lp24683
sg2
g24677
sbs(S'imread'
p24684
S'format'
p24685
tp24686
(icodemend.demo.code_suggest
Element
p24687
(dp24688
g10
I1
sg11
S'if format is provided , will try to read file of that type , otherwise the format is deduced from the filename . if nothing can be deduced , png is tried .'
p24689
sg12
Vimread.format
p24690
sg14
(lp24691
(icodemend.demo.code_suggest
Element
p24692
(dp24693
g10
I1
sg11
S''
sg12
Vimread.format.'png'
p24694
sg14
(lp24695
sg2
S"'png'"
p24696
sbasg2
g24685
sbs(g252
g13469
g14527
tp24697
g14523
s(S'ToolHandles'
p24698
S'x, y'
p24699
tp24700
(icodemend.demo.code_suggest
Element
p24701
(dp24702
g10
I0
sg11
S'coordinates of control handles .'
p24703
sg12
VToolHandles.x, y
p24704
sg14
(lp24705
sg2
g24699
sbs(g93
g389
S'0'
tp24706
(icodemend.demo.code_suggest
Element
p24707
(dp24708
g10
I1
sg11
S''
sg12
Vannotate.rotation.0
p24709
sg14
(lp24710
sg2
S'0'
sbs(S'loglog'
p24711
S'xlabel'
p24712
tp24713
(icodemend.demo.code_suggest
Element
p24714
(dp24715
g10
I0
sg11
S'set the label for the xaxis .'
p24716
sg12
Vloglog.xlabel
p24717
sg14
(lp24718
sg2
g24712
sbs(g6632
g966
S"'3d'"
p24719
tp24720
(icodemend.demo.code_suggest
Element
p24721
(dp24722
g10
I178
sg11
S''
sg12
Vadd_subplot.projection.'3d'
p24723
sg14
(lp24724
sg2
g24719
sbs(S'blend_overlay'
p24725
S'rgb'
p24726
tp24727
(icodemend.demo.code_suggest
Element
p24728
(dp24729
g10
I0
sg11
S'an mxnx3 rgb array of floats ranging from 0 to 1 ( color image ) .'
p24730
sg12
Vblend_overlay.rgb
p24731
sg14
(lp24732
sg2
g24726
sbs(g245
g140
S'(17.5, 8.0)'
p24733
tp24734
(icodemend.demo.code_suggest
Element
p24735
(dp24736
g10
I1
sg11
S''
sg12
Vfigure.figsize.(17/5, 8/0)
p24737
sg14
(lp24738
sg2
g24733
sbs(g1170
g8833
g438
tp24739
(icodemend.demo.code_suggest
Element
p24740
(dp24741
g10
I4
sg11
S''
sg12
Vhist.cumulative.True
p24742
sg14
(lp24743
sg2
g438
sbs(g101
S'c'
g21415
tp24744
g21411
s(g93
g4800
S'((-24), 12)'
p24745
tp24746
(icodemend.demo.code_suggest
Element
p24747
(dp24748
g10
I1
sg11
S''
sg12
Vannotate.xytext.((-24), 12)
p24749
sg14
(lp24750
sg2
g24745
sbs(S'magnitude_spectrum'
p24751
S'color_cycle'
p24752
tp24753
(icodemend.demo.code_suggest
Element
p24754
(dp24755
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p24756
sg12
Vmagnitude_spectrum.color_cycle
p24757
sg14
(lp24758
sg2
g24752
sbs(S'plotfile'
p24759
g16900
tp24760
g16891
s(S'angle_spectrum'
p24761
g19025
tp24762
g19020
s(g332
g627
S'12'
p24763
tp24764
(icodemend.demo.code_suggest
Element
p24765
(dp24766
g10
I2
sg11
S''
sg12
Vtext.size.12
p24767
sg14
(lp24768
sg2
g24763
sbs(S'magnitude_spectrum'
p24769
S'solid_joinstyle'
p24770
tp24771
(icodemend.demo.code_suggest
Element
p24772
(dp24773
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p24774
sg12
Vmagnitude_spectrum.solid_joinstyle
p24775
sg14
(lp24776
sg2
g24770
sbs(S'l2norm'
p24777
S'a'
tp24778
g478
s(S'annotate'
p24779
S'xticks'
p24780
tp24781
(icodemend.demo.code_suggest
Element
p24782
(dp24783
g10
I0
sg11
S'set the x ticks with list of ticks'
p24784
sg12
Vannotate.xticks
p24785
sg14
(lp24786
sg2
g24780
sbs(S'figtext'
p24787
g11371
tp24788
g11366
sS'draw_path'
p24789
(icodemend.demo.code_suggest
Element
p24790
(dp24791
g10
I2
sg11
S'overrides the standard draw_path to add the shadow offset and necessary color changes for the shadow .'
p24792
sg12
Vdraw_path
p24793
sg14
(lp24794
sg2
g24789
sbs(g944
g132
S"'gold'"
p24795
tp24796
(icodemend.demo.code_suggest
Element
p24797
(dp24798
g10
I1
sg11
S''
sg12
Vbarh.color.'gold'
p24799
sg14
(lp24800
sg2
g24795
sbs(g101
g118
g21314
tp24801
g22026
s(S'add_subplot'
p24802
S'path_effects'
p24803
tp24804
(icodemend.demo.code_suggest
Element
p24805
(dp24806
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p24807
sg12
Vadd_subplot.path_effects
p24808
sg14
(lp24809
sg2
g24803
sbs(g117
g4163
S'9'
tp24810
g11105
s(S'ginput'
p24811
g14735
tp24812
g14730
sS'label_minor'
p24813
(icodemend.demo.code_suggest
Element
p24814
(dp24815
g10
I0
sg11
S'switch on/off minor ticks labeling'
p24816
sg12
Vlabel_minor
p24817
sg14
(lp24818
sg2
g24813
sbs(g5673
S'density'
p24819
S'1'
tp24820
(icodemend.demo.code_suggest
Element
p24821
(dp24822
g10
I6
sg11
S''
sg12
Vstreamplot.density.1
p24823
sg14
(lp24824
sg2
S'1'
sbs(g117
g4340
S"'Random'"
p24825
tp24826
(icodemend.demo.code_suggest
Element
p24827
(dp24828
g10
I1
sg11
S''
sg12
Vplot.title.'Random'
p24829
sg14
(lp24830
sg2
g24825
sbs(g4371
g2183
g17650
tp24831
g17646
s(S'set_yticklabels'
p24832
g18106
tp24833
g18101
s(g252
S'numpoints'
p24834
S'1'
tp24835
g14208
s(g117
g118
S"'D calculated'"
p24836
tp24837
(icodemend.demo.code_suggest
Element
p24838
(dp24839
g10
I1
sg11
S''
sg12
Vplot.label.'D calculated'
p24840
sg14
(lp24841
sg2
g24836
sbs(S'table'
p24842
S'gid'
p24843
tp24844
(icodemend.demo.code_suggest
Element
p24845
(dp24846
g10
I0
sg11
S'sets the ( group ) id for the artist'
p24847
sg12
Vtable.gid
p24848
sg14
(lp24849
sg2
g24843
sbs(S'tripcolor'
p24850
S'facecolors*=C instead of just *C'
p24851
tp24852
(icodemend.demo.code_suggest
Element
p24853
(dp24854
g10
I0
sg11
S'the next argument must be c , the array of color values , either one per point in the triangulation if color values are defined at points , or one per triangle in the triangulation if color values are defined at triangles . if there are the same number of points and triangles in the triangulation it is assumed that color values are defined at points ; to force the use of color values at triangles use the kwarg facecolors*=c instead of just * c .'
p24855
sg12
Vtripcolor.facecolors*=C instead of just *C
p24856
sg14
(lp24857
sg2
g24851
sbs(S'pcolor'
p24858
S'clip_path'
p24859
tp24860
(icodemend.demo.code_suggest
Element
p24861
(dp24862
g10
I0
sg11
S"set the artist 's clip path , which may be"
p24863
sg12
Vpcolor.clip_path
p24864
sg14
(lp24865
sg2
g24859
sbs(g6632
g13338
S'(0, 10)'
p24866
tp24867
(icodemend.demo.code_suggest
Element
p24868
(dp24869
g10
I1
sg11
S''
sg12
Vadd_subplot.ylim.(0, 10)
p24870
sg14
(lp24871
sg2
g24866
sbsS'norm_flat'
p24872
(icodemend.demo.code_suggest
Element
p24873
(dp24874
g10
I0
sg11
S'norm(a,p=2 ) - > l-p norm of a.flat'
p24875
sg12
Vnorm_flat
p24876
sg14
(lp24877
(icodemend.demo.code_suggest
Element
p24878
(dp24879
g10
I0
sg11
S'return the l-p norm of a , considered as a flat array . this is not a true matrix norm , since arrays of arbitrary rank are always flattened .'
p24880
sg12
Vnorm_flat.a
p24881
sg14
(lp24882
sg2
S'a'
sbag24072
asg2
g24872
sbs(S'quiver'
p24883
S'headaxislength'
p24884
tp24885
(icodemend.demo.code_suggest
Element
p24886
(dp24887
g10
I3
sg11
S'the defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength . to make the arrow more pointed , reduce headwidth or increase headlength and headaxislength . to make the head smaller relative to the shaft , scale down all the head parameters . you will probably do best to leave minshaft alone .|||head length at shaft intersection , default is 4.5'
p24888
sg12
Vquiver.headaxislength
p24889
sg14
(lp24890
(icodemend.demo.code_suggest
Element
p24891
(dp24892
g10
I2
sg11
S''
sg12
Vquiver.headaxislength.HEAD_LENGTH
p24893
sg14
(lp24894
sg2
S'HEAD_LENGTH'
p24895
sba(icodemend.demo.code_suggest
Element
p24896
(dp24897
g10
I1
sg11
S''
sg12
Vquiver.headaxislength.size
p24898
sg14
(lp24899
sg2
g627
sbasg2
g24884
sbs(g2182
g325
S"'summer'"
p24900
tp24901
(icodemend.demo.code_suggest
Element
p24902
(dp24903
g10
I2
sg11
S''
sg12
Vmatshow.cmap.'summer'
p24904
sg14
(lp24905
sg2
g24900
sbs(g17904
g17905
S"['packets', 'time']"
p24906
tp24907
(icodemend.demo.code_suggest
Element
p24908
(dp24909
g10
I2
sg11
S''
sg12
Vcsv2rec.names.['packets', 'time']
p24910
sg14
(lp24911
sg2
g24906
sbs(S'update'
p24912
S'contains'
p24913
tp24914
(icodemend.demo.code_suggest
Element
p24915
(dp24916
g10
I0
sg11
S'replace the contains test used by this artist .'
p24917
sg12
Vupdate.contains
p24918
sg14
(lp24919
sg2
g24913
sbsS'set_tzinfo'
p24920
(icodemend.demo.code_suggest
Element
p24921
(dp24922
g10
I0
sg11
S'set time zone info .'
p24923
sg12
Vset_tzinfo
p24924
sg14
(lp24925
sg2
g24920
sbs(g324
g325
g9133
tp24926
g9129
s(S'pcolormesh'
p24927
S'antialiased'
p24928
tp24929
(icodemend.demo.code_suggest
Element
p24930
(dp24931
g10
I3
sg11
S'set the antialiasing state for rendering .'
p24932
sg12
Vpcolormesh.antialiased
p24933
sg14
(lp24934
(icodemend.demo.code_suggest
Element
p24935
(dp24936
g10
I3
sg11
S''
sg12
Vpcolormesh.antialiased.True
p24937
sg14
(lp24938
sg2
g438
sbasg2
g24928
sbs(S'stackplot'
p24939
g7032
g10447
tp24940
g10443
s(g324
g785
g9716
tp24941
g9712
s(g117
S'y'
S"['x1', 'x2']"
p24942
tp24943
(icodemend.demo.code_suggest
Element
p24944
(dp24945
g10
I1
sg11
S''
sg12
Vplot.y.['x1', 'x2']
p24946
sg14
(lp24947
sg2
g24942
sbs(g117
g118
S"'station 2'"
p24948
tp24949
(icodemend.demo.code_suggest
Element
p24950
(dp24951
g10
I1
sg11
S''
sg12
Vplot.label.'station 2'
p24952
sg14
(lp24953
sg2
g24948
sbs(g514
g110
S"'black'"
p24954
tp24955
(icodemend.demo.code_suggest
Element
p24956
(dp24957
g10
I1
sg11
S''
sg12
Vpcolor.edgecolor.'black'
p24958
sg14
(lp24959
sg2
g24954
sbs(S'pcolormesh'
p24960
S'clip_on'
p24961
tp24962
(icodemend.demo.code_suggest
Element
p24963
(dp24964
g10
I0
sg11
S'set whether artist uses clipping .'
p24965
sg12
Vpcolormesh.clip_on
p24966
sg14
(lp24967
sg2
g24961
sbs(g5640
g15305
g12031
tp24968
g12027
s(g93
g161
S'(left, y)'
p24969
tp24970
(icodemend.demo.code_suggest
Element
p24971
(dp24972
g10
I1
sg11
S''
sg12
Vannotate.xy.(left, y)
p24973
sg14
(lp24974
sg2
g24969
sbs(g766
g4459
S'0'
tp24975
g6087
s(g582
g2392
g3405
tp24976
g3401
s(g117
S'x'
S"'DATE'"
p24977
tp24978
(icodemend.demo.code_suggest
Element
p24979
(dp24980
g10
I2
sg11
S''
sg12
Vplot.x.'DATE'
p24981
sg14
(lp24982
sg2
g24977
sbs(S'angle_spectrum'
p24983
g18774
tp24984
g18769
s(S'fill'
p24985
S'capstyle'
p24986
tp24987
(icodemend.demo.code_suggest
Element
p24988
(dp24989
g10
I0
sg11
S'set the patch capstyle'
p24990
sg12
Vfill.capstyle
p24991
sg14
(lp24992
sg2
g24986
sbs(g117
g118
S'cat'
p24993
tp24994
(icodemend.demo.code_suggest
Element
p24995
(dp24996
g10
I1
sg11
S''
sg12
Vplot.label.cat
p24997
sg14
(lp24998
sg2
g24993
sbs(g252
g1010
S'6'
tp24999
g13977
s(g252
g5782
g14399
tp25000
g14395
s(S'hold'
p25001
S'b'
tp25002
g927
s(g117
g5775
S"'none'"
p25003
tp25004
(icodemend.demo.code_suggest
Element
p25005
(dp25006
g10
I3
sg11
S''
sg12
Vplot.markerfacecolor.'none'
p25007
sg14
(lp25008
sg2
g25003
sbsS'get_facecolor'
p25009
(icodemend.demo.code_suggest
Element
p25010
(dp25011
g10
I2
sg11
S'get the face color of the figure rectangle return the face color of the patch .'
p25012
sg12
Vget_facecolor
p25013
sg14
(lp25014
sg2
g25009
sbs(S'arrow'
p25015
S'x'
tp25016
g2738
s(S'barbs'
p25017
S'color_cycle'
p25018
tp25019
(icodemend.demo.code_suggest
Element
p25020
(dp25021
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p25022
sg12
Vbarbs.color_cycle
p25023
sg14
(lp25024
sg2
g25018
sbs(S'text'
p25025
S'bbox'
p25026
tp25027
(icodemend.demo.code_suggest
Element
p25028
(dp25029
g10
I26
sg11
S'draw a bounding box around self .'
p25030
sg12
Vtext.bbox
p25031
sg14
(lp25032
g8567
a(icodemend.demo.code_suggest
Element
p25033
(dp25034
g10
I4
sg11
S''
sg12
Vtext.bbox.{'facecolor': 'black', 'pad': 12}
p25035
sg14
(lp25036
sg2
S"{'facecolor': 'black', 'pad': 12}"
p25037
sba(icodemend.demo.code_suggest
Element
p25038
(dp25039
g10
I3
sg11
S''
sg12
Vtext.bbox.props
p25040
sg14
(lp25041
sg2
S'props'
p25042
sbag20666
ag336
a(icodemend.demo.code_suggest
Element
p25043
(dp25044
g10
I1
sg11
S''
sg12
Vtext.bbox.{'facecolor': 'white', 'edgecolor': 'none', 'pad': 10}
p25045
sg14
(lp25046
sg2
S"{'facecolor': 'white', 'edgecolor': 'none', 'pad': 10}"
p25047
sbasg2
g25026
sbs(g101
S's'
g7549
tp25048
g7545
s(g245
g140
S'(14, 5)'
p25049
tp25050
(icodemend.demo.code_suggest
Element
p25051
(dp25052
g10
I1
sg11
S''
sg12
Vfigure.figsize.(14, 5)
p25053
sg14
(lp25054
sg2
g25049
sbs(S'axhspan'
p25055
g24346
tp25056
g24341
s(g4371
g8545
g1093
tp25057
g1089
s(S'semilogy'
p25058
S'color'
p25059
tp25060
(icodemend.demo.code_suggest
Element
p25061
(dp25062
g10
I1
sg11
S'set the color of the line'
p25063
sg12
Vsemilogy.color
p25064
sg14
(lp25065
(icodemend.demo.code_suggest
Element
p25066
(dp25067
g10
I1
sg11
S''
sg12
Vsemilogy.color.'blue'
p25068
sg14
(lp25069
sg2
S"'blue'"
p25070
sbasg2
g25059
sbs(S'warn_deprecated'
p25071
S'since'
p25072
tp25073
(icodemend.demo.code_suggest
Element
p25074
(dp25075
g10
I0
sg11
S'the release at which this api became deprecated .'
p25076
sg12
Vwarn_deprecated.since
p25077
sg14
(lp25078
sg2
g25072
sbs(S'angle_spectrum'
p25079
g18744
tp25080
g18739
s(g139
g140
g1812
tp25081
g1808
s(S'rec_summarize'
p25082
S'outname'
p25083
tp25084
(icodemend.demo.code_suggest
Element
p25085
(dp25086
g10
I0
sg11
S'summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname . the returned record array is identical to r , with extra arrays for each element in summaryfuncs .'
p25087
sg12
Vrec_summarize.outname
p25088
sg14
(lp25089
sg2
g25083
sbs(S'axvline'
p25090
S'ydata'
p25091
tp25092
(icodemend.demo.code_suggest
Element
p25093
(dp25094
g10
I0
sg11
S'set the data np.array for y'
p25095
sg12
Vaxvline.ydata
p25096
sg14
(lp25097
sg2
g25091
sbs(g117
g118
S"'Line 2'"
p25098
tp25099
(icodemend.demo.code_suggest
Element
p25100
(dp25101
g10
I2
sg11
S''
sg12
Vplot.label.'Line 2'
p25102
sg14
(lp25103
sg2
g25098
sbs(S'set_aspect'
p25104
S'adjustable'
p25105
tp25106
(icodemend.demo.code_suggest
Element
p25107
(dp25108
g10
I5
sg11
S'adjustable'
p25109
sg12
Vset_aspect.adjustable
p25110
sg14
(lp25111
(icodemend.demo.code_suggest
Element
p25112
(dp25113
g10
I5
sg11
S''
sg12
Vset_aspect.adjustable.'box'
p25114
sg14
(lp25115
sg2
S"'box'"
p25116
sbasg2
g25105
sbs(g245
g140
g140
tp25117
(icodemend.demo.code_suggest
Element
p25118
(dp25119
g10
I3
sg11
S''
sg12
Vfigure.figsize.figsize
p25120
sg14
(lp25121
sg2
g140
sbs(S'score_weight'
p25122
S'weight1'
p25123
tp25124
(icodemend.demo.code_suggest
Element
p25125
(dp25126
g10
I0
sg11
S'the result is the absolute value of the difference between the css numeric values of weight1 and weight2 , normalized between 0.0 and 1.0 .|||returns a match score between weight1 and weight2 .'
p25127
sg12
Vscore_weight.weight1
p25128
sg14
(lp25129
sg2
g25123
sbs(S'fill'
p25130
S'animated'
p25131
tp25132
(icodemend.demo.code_suggest
Element
p25133
(dp25134
g10
I0
sg11
S"set the artist 's animation state ."
p25135
sg12
Vfill.animated
p25136
sg14
(lp25137
sg2
g25131
sbs(g139
g140
g1687
tp25138
g1683
s(S'csd'
p25139
S'noverlap'
p25140
tp25141
(icodemend.demo.code_suggest
Element
p25142
(dp25143
g10
I0
sg11
S"the cross spectral density by welch 's average periodogram method . the vectors x and y are divided into nfft length segments . each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . the product of the direct ffts of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing ."
p25144
sg12
Vcsd.noverlap
p25145
sg14
(lp25146
sg2
g25140
sbs(S'pcolorfast'
p25147
S'x0'
p25148
tp25149
(icodemend.demo.code_suggest
Element
p25150
(dp25151
g10
I0
sg11
S'then x goes from x0 to x1 as the second index of c goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . all cells are rectangles of the same size . this is the fastest version .'
p25152
sg12
Vpcolorfast.x0
p25153
sg14
(lp25154
sg2
g25148
sbs(S'refine_field'
p25155
S'triinterpolator'
p25156
tp25157
(icodemend.demo.code_suggest
Element
p25158
(dp25159
g10
I0
sg11
S'interpolator used for field interpolation . if not specified , a cubictriinterpolator will be used .'
p25160
sg12
Vrefine_field.triinterpolator
p25161
sg14
(lp25162
sg2
g25156
sbs(g1170
g1257
S'10'
p25163
tp25164
(icodemend.demo.code_suggest
Element
p25165
(dp25166
g10
I2
sg11
S''
sg12
Vhist.bins.10
p25167
sg14
(lp25168
sg2
g25163
sbs(g93
g161
S'(0.2, 0.8)'
p25169
tp25170
(icodemend.demo.code_suggest
Element
p25171
(dp25172
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/2, 0/8)
p25173
sg14
(lp25174
sg2
g25169
sbs(g139
g140
g1473
tp25175
g1469
sS'print_figure'
p25176
(icodemend.demo.code_suggest
Element
p25177
(dp25178
g10
I9
sg11
S'render the figure to hardcopy .'
p25179
sg12
Vprint_figure
p25180
sg14
(lp25181
sg2
g25176
sbsS'dedent'
p25182
(icodemend.demo.code_suggest
Element
p25183
(dp25184
g10
I0
sg11
S'remove excess indentation from docstring s .'
p25185
sg12
Vdedent
p25186
sg14
(lp25187
(icodemend.demo.code_suggest
Element
p25188
(dp25189
g10
I0
sg11
S'remove excess indentation from docstring s .'
p25190
sg12
Vdedent.s
p25191
sg14
(lp25192
sg2
S's'
sbasg2
g25182
sbs(g5640
g5641
g11961
tp25193
g11957
s(S'get_metrics'
p25194
g22258
tp25195
g22253
s(g16
g489
S'data1'
p25196
tp25197
(icodemend.demo.code_suggest
Element
p25198
(dp25199
g10
I2
sg11
S''
sg12
Vbar.bottom.data1
p25200
sg14
(lp25201
sg2
g25196
sbsS'in_axes'
p25202
(icodemend.demo.code_suggest
Element
p25203
(dp25204
g10
I0
sg11
S'return true if the given mouseevent ( in display coords ) is in the axes'
p25205
sg12
Vin_axes
p25206
sg14
(lp25207
g15322
asg2
g25202
sbs(S'plot'
p25208
S'fillstyle'
p25209
tp25210
(icodemend.demo.code_suggest
Element
p25211
(dp25212
g10
I3
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p25213
sg12
Vplot.fillstyle
p25214
sg14
(lp25215
g13060
a(icodemend.demo.code_suggest
Element
p25216
(dp25217
g10
I1
sg11
S''
sg12
Vplot.fillstyle.'full'
p25218
sg14
(lp25219
sg2
S"'full'"
p25220
sba(icodemend.demo.code_suggest
Element
p25221
(dp25222
g10
I1
sg11
S''
sg12
Vplot.fillstyle.'none'
p25223
sg14
(lp25224
sg2
S"'none'"
p25225
sbasg2
g25209
sbs(g101
g4274
g21651
tp25226
g21647
s(S'boxplot'
p25227
S'sym'
p25228
tp25229
(icodemend.demo.code_suggest
Element
p25230
(dp25231
g10
I10
sg11
S"the default symbol for flier points . enter an empty string ( ' ' ) if you do n't want to show fliers . if none , then the fliers default to ' b + ' if you want more control use the flierprops kwarg ."
p25232
sg12
Vboxplot.sym
p25233
sg14
(lp25234
(icodemend.demo.code_suggest
Element
p25235
(dp25236
g10
I3
sg11
S''
sg12
Vboxplot.sym.''
p25237
sg14
(lp25238
sg2
S"''"
p25239
sbag4406
ag20456
a(icodemend.demo.code_suggest
Element
p25240
(dp25241
g10
I1
sg11
S''
sg12
Vboxplot.sym.'/'
p25242
sg14
(lp25243
sg2
S"'.'"
p25244
sba(icodemend.demo.code_suggest
Element
p25245
(dp25246
g10
I1
sg11
S''
sg12
Vboxplot.sym.'_'
p25247
sg14
(lp25248
sg2
S"'_'"
p25249
sba(icodemend.demo.code_suggest
Element
p25250
(dp25251
g10
I1
sg11
S''
sg12
Vboxplot.sym.'k/'
p25252
sg14
(lp25253
sg2
S"'k.'"
p25254
sbasg2
g25228
sbsS'identity'
p25255
(icodemend.demo.code_suggest
Element
p25256
(dp25257
g10
I2
sg11
S'returns the identity matrix of shape ( n , n , ...'
p25258
sg12
Videntity
p25259
sg14
(lp25260
(icodemend.demo.code_suggest
Element
p25261
(dp25262
g10
I0
sg11
S"optionally a dtype ( or typecode ) may be given ( it defaults to ' l ' ) ."
p25263
sg12
Videntity.dtype
p25264
sg14
(lp25265
sg2
S'dtype'
p25266
sbag6183
ag7376
asg2
g25255
sbs(g125
g19538
S'1'
tp25267
(icodemend.demo.code_suggest
Element
p25268
(dp25269
g10
I5
sg11
S''
sg12
Vaxvline.ymax.1
p25270
sg14
(lp25271
sg2
S'1'
sbs(S'annotate'
p25272
S'xytext'
p25273
tp25274
(icodemend.demo.code_suggest
Element
p25275
(dp25276
g10
I128
sg11
S'position of the label s. see textcoords to control what coordinate system this value is interpreted in .|||xycoords and textcoords are strings that indicate the coordinates of xy and xytext , and may be one of the following values :'
p25277
sg12
Vannotate.xytext
p25278
sg14
(lp25279
(icodemend.demo.code_suggest
Element
p25280
(dp25281
g10
I4
sg11
S''
sg12
Vannotate.xytext.((-20), 20)
p25282
sg14
(lp25283
sg2
S'((-20), 20)'
p25284
sba(icodemend.demo.code_suggest
Element
p25285
(dp25286
g10
I4
sg11
S''
sg12
Vannotate.xytext.(0, 0)
p25287
sg14
(lp25288
sg2
S'(0, 0)'
p25289
sbag13098
a(icodemend.demo.code_suggest
Element
p25290
(dp25291
g10
I3
sg11
S''
sg12
Vannotate.xytext.(15, 15)
p25292
sg14
(lp25293
sg2
S'(15, 15)'
p25294
sba(icodemend.demo.code_suggest
Element
p25295
(dp25296
g10
I2
sg11
S''
sg12
Vannotate.xytext.((-5), 5)
p25297
sg14
(lp25298
sg2
S'((-5), 5)'
p25299
sba(icodemend.demo.code_suggest
Element
p25300
(dp25301
g10
I2
sg11
S''
sg12
Vannotate.xytext.(0, 5)
p25302
sg14
(lp25303
sg2
S'(0, 5)'
p25304
sbag16597
a(icodemend.demo.code_suggest
Element
p25305
(dp25306
g10
I2
sg11
S''
sg12
Vannotate.xytext.(0/5, 0/5)
p25307
sg14
(lp25308
sg2
S'(0.5, 0.5)'
p25309
sba(icodemend.demo.code_suggest
Element
p25310
(dp25311
g10
I2
sg11
S''
sg12
Vannotate.xytext.(1/1, 0/5)
p25312
sg14
(lp25313
sg2
S'(1.1, 0.5)'
p25314
sba(icodemend.demo.code_suggest
Element
p25315
(dp25316
g10
I2
sg11
S''
sg12
Vannotate.xytext.(150, (-6))
p25317
sg14
(lp25318
sg2
S'(150, (-6))'
p25319
sbag5911
a(icodemend.demo.code_suggest
Element
p25320
(dp25321
g10
I2
sg11
S''
sg12
Vannotate.xytext.(7, 5)
p25322
sg14
(lp25323
sg2
S'(7, 5)'
p25324
sbag10032
a(icodemend.demo.code_suggest
Element
p25325
(dp25326
g10
I2
sg11
S''
sg12
Vannotate.xytext.(azel[20][1], (azel[20][0] + 2))
p25327
sg14
(lp25328
sg2
S'(azel[20][1], (azel[20][0] + 2))'
p25329
sba(icodemend.demo.code_suggest
Element
p25330
(dp25331
g10
I2
sg11
S''
sg12
Vannotate.xytext.orig
p25332
sg14
(lp25333
sg2
S'orig'
p25334
sba(icodemend.demo.code_suggest
Element
p25335
(dp25336
g10
I1
sg11
S''
sg12
Vannotate.xytext.(((- ax/yaxis/labelpad) - pad), 0)
p25337
sg14
(lp25338
sg2
S'(((- ax.yaxis.labelpad) - pad), 0)'
p25339
sba(icodemend.demo.code_suggest
Element
p25340
(dp25341
g10
I1
sg11
S''
sg12
Vannotate.xytext.(((- np/pi) / 10), (len(data) / 6/0))
p25342
sg14
(lp25343
sg2
S'(((- np.pi) / 10), (len(data) / 6.0))'
p25344
sba(icodemend.demo.code_suggest
Element
p25345
(dp25346
g10
I1
sg11
S''
sg12
Vannotate.xytext.(((- width) / 2/0), ((- height) / 2/0))
p25347
sg14
(lp25348
sg2
S'(((- width) / 2.0), ((- height) / 2.0))'
p25349
sba(icodemend.demo.code_suggest
Element
p25350
(dp25351
g10
I1
sg11
S''
sg12
Vannotate.xytext.((-1/5), 3/0)
p25352
sg14
(lp25353
sg2
S'((-1.5), 3.0)'
p25354
sba(icodemend.demo.code_suggest
Element
p25355
(dp25356
g10
I1
sg11
S''
sg12
Vannotate.xytext.((-10), 0)
p25357
sg14
(lp25358
sg2
S'((-10), 0)'
p25359
sba(icodemend.demo.code_suggest
Element
p25360
(dp25361
g10
I1
sg11
S''
sg12
Vannotate.xytext.((-10), 10)
p25362
sg14
(lp25363
sg2
S'((-10), 10)'
p25364
sba(icodemend.demo.code_suggest
Element
p25365
(dp25366
g10
I1
sg11
S''
sg12
Vannotate.xytext.((-12), 5)
p25367
sg14
(lp25368
sg2
S'((-12), 5)'
p25369
sba(icodemend.demo.code_suggest
Element
p25370
(dp25371
g10
I1
sg11
S''
sg12
Vannotate.xytext.((-15), (-15))
p25372
sg14
(lp25373
sg2
S'((-15), (-15))'
p25374
sba(icodemend.demo.code_suggest
Element
p25375
(dp25376
g10
I1
sg11
S''
sg12
Vannotate.xytext.((-15), 10)
p25377
sg14
(lp25378
sg2
S'((-15), 10)'
p25379
sbag24747
a(icodemend.demo.code_suggest
Element
p25380
(dp25381
g10
I1
sg11
S''
sg12
Vannotate.xytext.((-4), (-4))
p25382
sg14
(lp25383
sg2
S'((-4), (-4))'
p25384
sbag6420
ag15601
a(icodemend.demo.code_suggest
Element
p25385
(dp25386
g10
I1
sg11
S''
sg12
Vannotate.xytext.((-6), (-6))
p25387
sg14
(lp25388
sg2
S'((-6), (-6))'
p25389
sba(icodemend.demo.code_suggest
Element
p25390
(dp25391
g10
I1
sg11
S''
sg12
Vannotate.xytext.((-8), (-8))
p25392
sg14
(lp25393
sg2
S'((-8), (-8))'
p25394
sba(icodemend.demo.code_suggest
Element
p25395
(dp25396
g10
I1
sg11
S''
sg12
Vannotate.xytext.((0/1 + 15), 0/1)
p25397
sg14
(lp25398
sg2
S'((0.1 + 15), 0.1)'
p25399
sbag6716
a(icodemend.demo.code_suggest
Element
p25400
(dp25401
g10
I1
sg11
S''
sg12
Vannotate.xytext.((f/get_value(i, 'x') + 20), (f/get_value(i, 'y') + 20))
p25402
sg14
(lp25403
sg2
S"((f.get_value(i, 'x') + 20), (f.get_value(i, 'y') + 20))"
p25404
sba(icodemend.demo.code_suggest
Element
p25405
(dp25406
g10
I1
sg11
S''
sg12
Vannotate.xytext.((i + 1), i)
p25407
sg14
(lp25408
sg2
S'((i + 1), i)'
p25409
sbag20935
a(icodemend.demo.code_suggest
Element
p25410
(dp25411
g10
I1
sg11
S''
sg12
Vannotate.xytext.((m + s), p1)
p25412
sg14
(lp25413
sg2
S'((m + s), p1)'
p25414
sba(icodemend.demo.code_suggest
Element
p25415
(dp25416
g10
I1
sg11
S''
sg12
Vannotate.xytext.((np/pi / 2/0), 2/3)
p25417
sg14
(lp25418
sg2
S'((np.pi / 2.0), 2.3)'
p25419
sbag4803
ag13760
a(icodemend.demo.code_suggest
Element
p25420
(dp25421
g10
I1
sg11
S''
sg12
Vannotate.xytext.((px - 1), (y + 1))
p25422
sg14
(lp25423
sg2
S'((px - 1), (y + 1))'
p25424
sba(icodemend.demo.code_suggest
Element
p25425
(dp25426
g10
I1
sg11
S''
sg12
Vannotate.xytext.((x0 - (0/4 * x0)), (y0 + (0/4 * y0)))
p25427
sg14
(lp25428
sg2
S'((x0 - (0.4 * x0)), (y0 + (0.4 * y0)))'
p25429
sba(icodemend.demo.code_suggest
Element
p25430
(dp25431
g10
I1
sg11
S''
sg12
Vannotate.xytext.((x[i] + 1/31), (y[i] - 0/55))
p25432
sg14
(lp25433
sg2
S'((x[i] + 1.31), (y[i] - 0.55))'
p25434
sba(icodemend.demo.code_suggest
Element
p25435
(dp25436
g10
I1
sg11
S''
sg12
Vannotate.xytext.((x[ind] - 1), (y[ind] + 1))
p25437
sg14
(lp25438
sg2
S'((x[ind] - 1), (y[ind] + 1))'
p25439
sbag24672
a(icodemend.demo.code_suggest
Element
p25440
(dp25441
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0, (-10))
p25442
sg14
(lp25443
sg2
S'(0, (-10))'
p25444
sba(icodemend.demo.code_suggest
Element
p25445
(dp25446
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0, (-15))
p25447
sg14
(lp25448
sg2
S'(0, (-15))'
p25449
sba(icodemend.demo.code_suggest
Element
p25450
(dp25451
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0, (-18))
p25452
sg14
(lp25453
sg2
S'(0, (-18))'
p25454
sba(icodemend.demo.code_suggest
Element
p25455
(dp25456
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0, (-32))
p25457
sg14
(lp25458
sg2
S'(0, (-32))'
p25459
sba(icodemend.demo.code_suggest
Element
p25460
(dp25461
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0, (-6))
p25462
sg14
(lp25463
sg2
S'(0, (-6))'
p25464
sbag8284
a(icodemend.demo.code_suggest
Element
p25465
(dp25466
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0, 10)
p25467
sg14
(lp25468
sg2
S'(0, 10)'
p25469
sba(icodemend.demo.code_suggest
Element
p25470
(dp25471
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0, 6)
p25472
sg14
(lp25473
sg2
S'(0, 6)'
p25474
sba(icodemend.demo.code_suggest
Element
p25475
(dp25476
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0, pad)
p25477
sg14
(lp25478
sg2
S'(0, pad)'
p25479
sbag5013
ag6266
ag6972
a(icodemend.demo.code_suggest
Element
p25480
(dp25481
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0/1, 0/9)
p25482
sg14
(lp25483
sg2
S'(0.1, 0.9)'
p25484
sba(icodemend.demo.code_suggest
Element
p25485
(dp25486
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0/15, 0/15)
p25487
sg14
(lp25488
sg2
S'(0.15, 0.15)'
p25489
sbag7004
ag13212
ag8222
ag19585
a(icodemend.demo.code_suggest
Element
p25490
(dp25491
g10
I1
sg11
S''
sg12
Vannotate.xytext.(0/8, 0/1)
p25492
sg14
(lp25493
sg2
S'(0.8, 0.1)'
p25494
sbag24560
a(icodemend.demo.code_suggest
Element
p25495
(dp25496
g10
I1
sg11
S''
sg12
Vannotate.xytext.(1, 1)
p25497
sg14
(lp25498
sg2
S'(1, 1)'
p25499
sba(icodemend.demo.code_suggest
Element
p25500
(dp25501
g10
I1
sg11
S''
sg12
Vannotate.xytext.(1, 8)
p25502
sg14
(lp25503
sg2
S'(1, 8)'
p25504
sba(icodemend.demo.code_suggest
Element
p25505
(dp25506
g10
I1
sg11
S''
sg12
Vannotate.xytext.(1/1, 1)
p25507
sg14
(lp25508
sg2
S'(1.1, 1)'
p25509
sbag8933
ag6042
a(icodemend.demo.code_suggest
Element
p25510
(dp25511
g10
I1
sg11
S''
sg12
Vannotate.xytext.(20, 20)
p25512
sg14
(lp25513
sg2
S'(20, 20)'
p25514
sbag12545
ag7925
a(icodemend.demo.code_suggest
Element
p25515
(dp25516
g10
I1
sg11
S''
sg12
Vannotate.xytext.(40, 20)
p25517
sg14
(lp25518
sg2
S'(40, 20)'
p25519
sba(icodemend.demo.code_suggest
Element
p25520
(dp25521
g10
I1
sg11
S''
sg12
Vannotate.xytext.(5, (- ticklabelpad))
p25522
sg14
(lp25523
sg2
S'(5, (- ticklabelpad))'
p25524
sba(icodemend.demo.code_suggest
Element
p25525
(dp25526
g10
I1
sg11
S''
sg12
Vannotate.xytext.(5, 0)
p25527
sg14
(lp25528
sg2
S'(5, 0)'
p25529
sba(icodemend.demo.code_suggest
Element
p25530
(dp25531
g10
I1
sg11
S''
sg12
Vannotate.xytext.(5, 5)
p25532
sg14
(lp25533
sg2
S'(5, 5)'
p25534
sba(icodemend.demo.code_suggest
Element
p25535
(dp25536
g10
I1
sg11
S''
sg12
Vannotate.xytext.(50, 6)
p25537
sg14
(lp25538
sg2
S'(50, 6)'
p25539
sbag7049
a(icodemend.demo.code_suggest
Element
p25540
(dp25541
g10
I1
sg11
S''
sg12
Vannotate.xytext.(77/23, 28/61)
p25542
sg14
(lp25543
sg2
S'(77.23, 28.61)'
p25544
sba(icodemend.demo.code_suggest
Element
p25545
(dp25546
g10
I1
sg11
S''
sg12
Vannotate.xytext.(8, 0)
p25547
sg14
(lp25548
sg2
S'(8, 0)'
p25549
sba(icodemend.demo.code_suggest
Element
p25550
(dp25551
g10
I1
sg11
S''
sg12
Vannotate.xytext.(8, 8)
p25552
sg14
(lp25553
sg2
S'(8, 8)'
p25554
sba(icodemend.demo.code_suggest
Element
p25555
(dp25556
g10
I1
sg11
S''
sg12
Vannotate.xytext.(9, 9)
p25557
sg14
(lp25558
sg2
S'(9, 9)'
p25559
sba(icodemend.demo.code_suggest
Element
p25560
(dp25561
g10
I1
sg11
S''
sg12
Vannotate.xytext.(X[j], y)
p25562
sg14
(lp25563
sg2
S'(X[j], y)'
p25564
sba(icodemend.demo.code_suggest
Element
p25565
(dp25566
g10
I1
sg11
S''
sg12
Vannotate.xytext.(ax1, ay1)
p25567
sg14
(lp25568
sg2
S'(ax1, ay1)'
p25569
sbag12205
ag24128
ag14678
a(icodemend.demo.code_suggest
Element
p25570
(dp25571
g10
I1
sg11
S''
sg12
Vannotate.xytext.(m, p2)
p25572
sg14
(lp25573
sg2
S'(m, p2)'
p25574
sbag10995
a(icodemend.demo.code_suggest
Element
p25575
(dp25576
g10
I1
sg11
S''
sg12
Vannotate.xytext.(self/xoffset, self/yoffset)
p25577
sg14
(lp25578
sg2
S'(self.xoffset, self.yoffset)'
p25579
sba(icodemend.demo.code_suggest
Element
p25580
(dp25581
g10
I1
sg11
S''
sg12
Vannotate.xytext.(theta[i], (r[i] + 2))
p25582
sg14
(lp25583
sg2
S'(theta[i], (r[i] + 2))'
p25584
sba(icodemend.demo.code_suggest
Element
p25585
(dp25586
g10
I1
sg11
S''
sg12
Vannotate.xytext.(x, (1 + (4 * np/random/rand())))
p25587
sg14
(lp25588
sg2
S'(x, (1 + (4 * np.random.rand())))'
p25589
sba(icodemend.demo.code_suggest
Element
p25590
(dp25591
g10
I1
sg11
S''
sg12
Vannotate.xytext.(x, y)
p25592
sg14
(lp25593
sg2
S'(x, y)'
p25594
sba(icodemend.demo.code_suggest
Element
p25595
(dp25596
g10
I1
sg11
S''
sg12
Vannotate.xytext.(x[j], y[j])
p25597
sg14
(lp25598
sg2
S'(x[j], y[j])'
p25599
sba(icodemend.demo.code_suggest
Element
p25600
(dp25601
g10
I1
sg11
S''
sg12
Vannotate.xytext.(xoff, 15)
p25602
sg14
(lp25603
sg2
S'(xoff, 15)'
p25604
sbag7992
a(icodemend.demo.code_suggest
Element
p25605
(dp25606
g10
I1
sg11
S''
sg12
Vannotate.xytext.[(x - 0/2), (y + 1000)]
p25607
sg14
(lp25608
sg2
S'[(x - 0.2), (y + 1000)]'
p25609
sba(icodemend.demo.code_suggest
Element
p25610
(dp25611
g10
I1
sg11
S''
sg12
Vannotate.xytext.start
p25612
sg14
(lp25613
sg2
S'start'
p25614
sbasg2
g25273
sbsS'get_ticklocs'
p25615
(icodemend.demo.code_suggest
Element
p25616
(dp25617
g10
I15
sg11
S'get the tick locations in data coordinates as a numpy array'
p25618
sg12
Vget_ticklocs
p25619
sg14
(lp25620
sg2
g25615
sbs(S'semilogx'
p25621
S'dash_capstyle'
p25622
tp25623
(icodemend.demo.code_suggest
Element
p25624
(dp25625
g10
I0
sg11
S'set the cap style for dashed linestyles'
p25626
sg12
Vsemilogx.dash_capstyle
p25627
sg14
(lp25628
sg2
g25622
sbs(S'gca'
p25629
S'path_effects'
p25630
tp25631
(icodemend.demo.code_suggest
Element
p25632
(dp25633
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p25634
sg12
Vgca.path_effects
p25635
sg14
(lp25636
sg2
g25630
sbs(g93
g13486
S"'right'"
p25637
tp25638
(icodemend.demo.code_suggest
Element
p25639
(dp25640
g10
I4
sg11
S''
sg12
Vannotate.horizontalalignment.'right'
p25641
sg14
(lp25642
sg2
g25637
sbsS'add_tools_to_container'
p25643
(icodemend.demo.code_suggest
Element
p25644
(dp25645
g10
I0
sg11
S'add multiple tools to the container .'
p25646
sg12
Vadd_tools_to_container
p25647
sg14
(lp25648
(icodemend.demo.code_suggest
Element
p25649
(dp25650
g10
I0
sg11
S'backend_bases.toolcontainerbase object that will get the tools added'
p25651
sg12
Vadd_tools_to_container.container: Container
p25652
sg14
(lp25653
sg2
S'container: Container'
p25654
sba(icodemend.demo.code_suggest
Element
p25655
(dp25656
g10
I0
sg11
S'list in the form [ [ group1 , [ tool1 , tool2 ... ] ] , [ group2 , [ ... ] ] ] where the tools given by tool1 , and tool2 will display in group1 . see add_tool for details .'
p25657
sg12
Vadd_tools_to_container.tools
p25658
sg14
(lp25659
sg2
S'tools'
p25660
sbasg2
g25643
sbs(S'pcolorfast'
p25661
S'yr'
p25662
tp25663
(icodemend.demo.code_suggest
Element
p25664
(dp25665
g10
I0
sg11
S'xr , yr specify the ranges of x and y corresponding to the rectangular region bounding c . if :'
p25666
sg12
Vpcolorfast.yr
p25667
sg14
(lp25668
sg2
g25662
sbs(g332
g132
S'c'
tp25669
(icodemend.demo.code_suggest
Element
p25670
(dp25671
g10
I5
sg11
S''
sg12
Vtext.color.c
p25672
sg14
(lp25673
sg2
S'c'
sbs(S'semilogy'
p25674
S'yticklabels'
p25675
tp25676
(icodemend.demo.code_suggest
Element
p25677
(dp25678
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p25679
sg12
Vsemilogy.yticklabels
p25680
sg14
(lp25681
sg2
g25675
sbsS'hexbin'
p25682
(icodemend.demo.code_suggest
Element
p25683
(dp25684
g10
I28
sg11
S'make a hexagonal binning plot .'
p25685
sg12
Vhexbin
p25686
sg14
(lp25687
(icodemend.demo.code_suggest
Element
p25688
(dp25689
g10
I9
sg11
S"if c is specified , it specifies values at the coordinate ( x[i],y[i ] ) . these values are accumulated for each hexagonal bin and then reduced according to reduce_c_function , which defaults to numpy 's mean function ( np.mean ) . ( if c is specified , it must also be a 1-d sequence of the same length as x and y . )|||make a hexagonal binning plot of x versus y , where x , y are 1-d sequences of the same length , n . if c is none ( the default ) , this is a histogram of the number of occurences of the observations at ( x[i],y[i ] ) .|||x , y and/or c may be masked arrays , in which case only unmasked points will be plotted ."
p25690
sg12
Vhexbin.C
p25691
sg14
(lp25692
(icodemend.demo.code_suggest
Element
p25693
(dp25694
g10
I2
sg11
S''
sg12
Vhexbin.C.None
p25695
sg14
(lp25696
sg2
g865
sba(icodemend.demo.code_suggest
Element
p25697
(dp25698
g10
I2
sg11
S''
sg12
Vhexbin.C.z
p25699
sg14
(lp25700
sg2
S'z'
sba(icodemend.demo.code_suggest
Element
p25701
(dp25702
g10
I1
sg11
S''
sg12
Vhexbin.C.C
p25703
sg14
(lp25704
sg2
S'C'
sba(icodemend.demo.code_suggest
Element
p25705
(dp25706
g10
I1
sg11
S''
sg12
Vhexbin.C.w
p25707
sg14
(lp25708
sg2
S'w'
sba(icodemend.demo.code_suggest
Element
p25709
(dp25710
g10
I1
sg11
S''
sg12
Vhexbin.C.z_arr
p25711
sg14
(lp25712
sg2
S'z_arr'
p25713
sbasg2
S'C'
sba(icodemend.demo.code_suggest
Element
p25714
(dp25715
g10
I9
sg11
S'set the colormap for luminance data'
p25716
sg12
Vhexbin.cmap
p25717
sg14
(lp25718
g7486
a(icodemend.demo.code_suggest
Element
p25719
(dp25720
g10
I1
sg11
S''
sg12
Vhexbin.cmap.None
p25721
sg14
(lp25722
sg2
g865
sba(icodemend.demo.code_suggest
Element
p25723
(dp25724
g10
I1
sg11
S''
sg12
Vhexbin.cmap.color_map
p25725
sg14
(lp25726
sg2
S'color_map'
p25727
sbasg2
S'cmap'
p25728
sba(icodemend.demo.code_suggest
Element
p25729
(dp25730
g10
I5
sg11
S'set the normalization instance'
p25731
sg12
Vhexbin.norm
p25732
sg14
(lp25733
(icodemend.demo.code_suggest
Element
p25734
(dp25735
g10
I3
sg11
S''
sg12
Vhexbin.norm.norm
p25736
sg14
(lp25737
sg2
g515
sba(icodemend.demo.code_suggest
Element
p25738
(dp25739
g10
I1
sg11
S''
sg12
Vhexbin.norm.None
p25740
sg14
(lp25741
sg2
g865
sba(icodemend.demo.code_suggest
Element
p25742
(dp25743
g10
I1
sg11
S''
sg12
Vhexbin.norm.nor_m
p25744
sg14
(lp25745
sg2
S'nor_m'
p25746
sbasg2
S'norm'
p25747
sba(icodemend.demo.code_suggest
Element
p25748
(dp25749
g10
I3
sg11
S"if c is specified , it specifies values at the coordinate ( x[i],y[i ] ) . these values are accumulated for each hexagonal bin and then reduced according to reduce_c_function , which defaults to numpy 's mean function ( np.mean ) . ( if c is specified , it must also be a 1-d sequence of the same length as x and y . )"
p25750
sg12
Vhexbin.reduce_C_function
p25751
sg14
(lp25752
sg2
S'reduce_C_function'
p25753
sba(icodemend.demo.code_suggest
Element
p25754
(dp25755
g10
I2
sg11
S'set the alpha tranparencies of the collection .'
p25756
sg12
Vhexbin.alpha
p25757
sg14
(lp25758
(icodemend.demo.code_suggest
Element
p25759
(dp25760
g10
I1
sg11
S''
sg12
Vhexbin.alpha.0/5
p25761
sg14
(lp25762
sg2
S'0.5'
p25763
sbag12715
asg2
S'alpha'
p25764
sba(icodemend.demo.code_suggest
Element
p25765
(dp25766
g10
I1
sg11
S'set the edgecolor(s ) of the collection .'
p25767
sg12
Vhexbin.edgecolor
p25768
sg14
(lp25769
(icodemend.demo.code_suggest
Element
p25770
(dp25771
g10
I1
sg11
S''
sg12
Vhexbin.edgecolor.'gray'
p25772
sg14
(lp25773
sg2
S"'gray'"
p25774
sbasg2
S'edgecolor'
p25775
sba(icodemend.demo.code_suggest
Element
p25776
(dp25777
g10
I1
sg11
S'the return value is a polycollection instance ; use get_array ( ) on this polycollection to get the counts in each hexagon . if marginals is true , horizontal bar and vertical bar ( both polycollections ) will be attached to the return collection as attributes hbar and vbar .'
p25778
sg12
Vhexbin.marginals
p25779
sg14
(lp25780
(icodemend.demo.code_suggest
Element
p25781
(dp25782
g10
I1
sg11
S''
sg12
Vhexbin.marginals.True
p25783
sg14
(lp25784
sg2
g438
sbasg2
S'marginals'
p25785
sba(icodemend.demo.code_suggest
Element
p25786
(dp25787
g10
I1
sg11
S'set the scaling of the x-axis'
p25788
sg12
Vhexbin.xscale
p25789
sg14
(lp25790
(icodemend.demo.code_suggest
Element
p25791
(dp25792
g10
I1
sg11
S''
sg12
Vhexbin.xscale.'linear'
p25793
sg14
(lp25794
sg2
S"'linear'"
p25795
sbasg2
S'xscale'
p25796
sbag22304
a(icodemend.demo.code_suggest
Element
p25797
(dp25798
g10
I0
sg11
S'make a hexagonal binning plot of x versus y , where x , y are 1-d sequences of the same length , n . if c is none ( the default ) , this is a histogram of the number of occurences of the observations at ( x[i],y[i ] ) .'
p25799
sg12
Vhexbin.N
p25800
sg14
(lp25801
sg2
S'N'
sba(icodemend.demo.code_suggest
Element
p25802
(dp25803
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p25804
sg12
Vhexbin._interpolation_steps
p25805
sg14
(lp25806
sg2
S'_interpolation_steps'
p25807
sbag6737
a(icodemend.demo.code_suggest
Element
p25808
(dp25809
g10
I0
sg11
S'anchor'
p25810
sg12
Vhexbin.anchor
p25811
sg14
(lp25812
sg2
S'anchor'
p25813
sbag16243
a(icodemend.demo.code_suggest
Element
p25814
(dp25815
g10
I0
sg11
S'set the antialiasing state for rendering .'
p25816
sg12
Vhexbin.antialiased
p25817
sg14
(lp25818
sg2
S'antialiased'
p25819
sbag6612
a(icodemend.demo.code_suggest
Element
p25820
(dp25821
g10
I0
sg11
S'aspect'
p25822
sg12
Vhexbin.aspect
p25823
sg14
(lp25824
sg2
S'aspect'
p25825
sbag22754
ag8713
a(icodemend.demo.code_suggest
Element
p25826
(dp25827
g10
I0
sg11
S"set the artist 's clip bbox ."
p25828
sg12
Vhexbin.clip_box
p25829
sg14
(lp25830
sg2
S'clip_box'
p25831
sbag5249
a(icodemend.demo.code_suggest
Element
p25832
(dp25833
g10
I0
sg11
S"set the artist 's clip path , which may be"
p25834
sg12
Vhexbin.clip_path
p25835
sg14
(lp25836
sg2
S'clip_path'
p25837
sba(icodemend.demo.code_suggest
Element
p25838
(dp25839
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p25840
sg12
Vhexbin.closed
p25841
sg14
(lp25842
sg2
S'closed'
p25843
sbag6832
ag2204
a(icodemend.demo.code_suggest
Element
p25844
(dp25845
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p25846
sg12
Vhexbin.color_cycle
p25847
sg14
(lp25848
sg2
S'color_cycle'
p25849
sbag13552
a(icodemend.demo.code_suggest
Element
p25850
(dp25851
g10
I0
sg11
S'set the cursor property as'
p25852
sg12
Vhexbin.cursor_props
p25853
sg14
(lp25854
sg2
S'cursor_props'
p25855
sba(icodemend.demo.code_suggest
Element
p25856
(dp25857
g10
I0
sg11
S'set the facecolor(s ) of the collection .'
p25858
sg12
Vhexbin.facecolor
p25859
sg14
(lp25860
sg2
S'facecolor'
p25861
sba(icodemend.demo.code_suggest
Element
p25862
(dp25863
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p25864
sg12
Vhexbin.figure
p25865
sg14
(lp25866
sg2
S'figure'
p25867
sba(icodemend.demo.code_suggest
Element
p25868
(dp25869
g10
I0
sg11
S'sets the ( group ) id for the artist'
p25870
sg12
Vhexbin.gid
p25871
sg14
(lp25872
sg2
S'gid'
p25873
sba(icodemend.demo.code_suggest
Element
p25874
(dp25875
g10
I0
sg11
S'set the hatching pattern'
p25876
sg12
Vhexbin.hatch
p25877
sg14
(lp25878
sg2
S'hatch'
p25879
sba(icodemend.demo.code_suggest
Element
p25880
(dp25881
g10
I0
sg11
S'the return value is a polycollection instance ; use get_array ( ) on this polycollection to get the counts in each hexagon . if marginals is true , horizontal bar and vertical bar ( both polycollections ) will be attached to the return collection as attributes hbar and vbar .'
p25882
sg12
Vhexbin.hbar
p25883
sg14
(lp25884
sg2
S'hbar'
p25885
sba(icodemend.demo.code_suggest
Element
p25886
(dp25887
g10
I0
sg11
S'set the label to s for auto legend .'
p25888
sg12
Vhexbin.label
p25889
sg14
(lp25890
sg2
S'label'
p25891
sba(icodemend.demo.code_suggest
Element
p25892
(dp25893
g10
I0
sg11
S'set the patch linestyle|||set the linestyle(s ) for the collection .'
p25894
sg12
Vhexbin.linestyle
p25895
sg14
(lp25896
sg2
S'linestyle'
p25897
sba(icodemend.demo.code_suggest
Element
p25898
(dp25899
g10
I0
sg11
S'set the linewidth(s ) for the collection .'
p25900
sg12
Vhexbin.linewidth
p25901
sg14
(lp25902
sg2
S'linewidth'
p25903
sba(icodemend.demo.code_suggest
Element
p25904
(dp25905
g10
I0
sg11
S'set how offsets are applied .'
p25906
sg12
Vhexbin.offset_position
p25907
sg14
(lp25908
sg2
S'offset_position'
p25909
sbag13796
a(icodemend.demo.code_suggest
Element
p25910
(dp25911
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p25912
sg12
Vhexbin.path_effects
p25913
sg14
(lp25914
sg2
S'path_effects'
p25915
sbag8763
a(icodemend.demo.code_suggest
Element
p25916
(dp25917
g10
I0
sg11
S'set the axes position with'
p25918
sg12
Vhexbin.position
p25919
sg14
(lp25920
sg2
S'position'
p25921
sbag19572
a(icodemend.demo.code_suggest
Element
p25922
(dp25923
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p25924
sg12
Vhexbin.rasterized
p25925
sg14
(lp25926
sg2
S'rasterized'
p25927
sba(icodemend.demo.code_suggest
Element
p25928
(dp25929
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p25930
sg12
Vhexbin.readonly
p25931
sg14
(lp25932
sg2
S'readonly'
p25933
sba(icodemend.demo.code_suggest
Element
p25934
(dp25935
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p25936
sg12
Vhexbin.size_inches
p25937
sg14
(lp25938
sg2
S'size_inches'
p25939
sba(icodemend.demo.code_suggest
Element
p25940
(dp25941
g10
I0
sg11
S'set the sizes of each member of the collection .'
p25942
sg12
Vhexbin.sizes
p25943
sg14
(lp25944
sg2
S'sizes'
p25945
sba(icodemend.demo.code_suggest
Element
p25946
(dp25947
g10
I0
sg11
S'sets the sketch parameters .'
p25948
sg12
Vhexbin.sketch_params
p25949
sg14
(lp25950
sg2
S'sketch_params'
p25951
sba(icodemend.demo.code_suggest
Element
p25952
(dp25953
g10
I0
sg11
S'sets the snap setting which may be'
p25954
sg12
Vhexbin.snap
p25955
sg14
(lp25956
sg2
S'snap'
p25957
sba(icodemend.demo.code_suggest
Element
p25958
(dp25959
g10
I0
sg11
S'set a title for the axes .'
p25960
sg12
Vhexbin.title
p25961
sg14
(lp25962
sg2
S'title'
p25963
sba(icodemend.demo.code_suggest
Element
p25964
(dp25965
g10
I0
sg11
S'set the transform instance used by this artist .'
p25966
sg12
Vhexbin.transform
p25967
sg14
(lp25968
sg2
S'transform'
p25969
sba(icodemend.demo.code_suggest
Element
p25970
(dp25971
g10
I0
sg11
S'sets the url for the artist'
p25972
sg12
Vhexbin.url
p25973
sg14
(lp25974
sg2
S'url'
p25975
sba(icodemend.demo.code_suggest
Element
p25976
(dp25977
g10
I0
sg11
S'the return value is a polycollection instance ; use get_array ( ) on this polycollection to get the counts in each hexagon . if marginals is true , horizontal bar and vertical bar ( both polycollections ) will be attached to the return collection as attributes hbar and vbar .'
p25978
sg12
Vhexbin.vbar
p25979
sg14
(lp25980
sg2
S'vbar'
p25981
sba(icodemend.demo.code_suggest
Element
p25982
(dp25983
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p25984
sg12
Vhexbin.vertices
p25985
sg14
(lp25986
sg2
S'vertices'
p25987
sba(icodemend.demo.code_suggest
Element
p25988
(dp25989
g10
I0
sg11
S"set the artist 's visiblity ."
p25990
sg12
Vhexbin.visible
p25991
sg14
(lp25992
sg2
S'visible'
p25993
sba(icodemend.demo.code_suggest
Element
p25994
(dp25995
g10
I0
sg11
S"if c is specified , it specifies values at the coordinate ( x[i],y[i ] ) . these values are accumulated for each hexagonal bin and then reduced according to reduce_c_function , which defaults to numpy 's mean function ( np.mean ) . ( if c is specified , it must also be a 1-d sequence of the same length as x and y . )|||make a hexagonal binning plot of x versus y , where x , y are 1-d sequences of the same length , n . if c is none ( the default ) , this is a histogram of the number of occurences of the observations at ( x[i],y[i ] ) .|||x , y and/or c may be masked arrays , in which case only unmasked points will be plotted ."
p25996
sg12
Vhexbin.x
p25997
sg14
(lp25998
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p25999
(dp26000
g10
I0
sg11
S'set the label for the xaxis .'
p26001
sg12
Vhexbin.xlabel
p26002
sg14
(lp26003
sg2
S'xlabel'
p26004
sba(icodemend.demo.code_suggest
Element
p26005
(dp26006
g10
I0
sg11
S'set the data limits for the xaxis'
p26007
sg12
Vhexbin.xlim
p26008
sg14
(lp26009
sg2
S'xlim'
p26010
sba(icodemend.demo.code_suggest
Element
p26011
(dp26012
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p26013
sg12
Vhexbin.xmargin
p26014
sg14
(lp26015
sg2
S'xmargin'
p26016
sbag7946
a(icodemend.demo.code_suggest
Element
p26017
(dp26018
g10
I0
sg11
S'set the x ticks with list of ticks'
p26019
sg12
Vhexbin.xticks
p26020
sg14
(lp26021
sg2
S'xticks'
p26022
sba(icodemend.demo.code_suggest
Element
p26023
(dp26024
g10
I0
sg11
S"if c is specified , it specifies values at the coordinate ( x[i],y[i ] ) . these values are accumulated for each hexagonal bin and then reduced according to reduce_c_function , which defaults to numpy 's mean function ( np.mean ) . ( if c is specified , it must also be a 1-d sequence of the same length as x and y . )|||make a hexagonal binning plot of x versus y , where x , y are 1-d sequences of the same length , n . if c is none ( the default ) , this is a histogram of the number of occurences of the observations at ( x[i],y[i ] ) .|||x , y and/or c may be masked arrays , in which case only unmasked points will be plotted ."
p26025
sg12
Vhexbin.y
p26026
sg14
(lp26027
sg2
S'y'
sba(icodemend.demo.code_suggest
Element
p26028
(dp26029
g10
I0
sg11
S'set the label for the yaxis'
p26030
sg12
Vhexbin.ylabel
p26031
sg14
(lp26032
sg2
S'ylabel'
p26033
sba(icodemend.demo.code_suggest
Element
p26034
(dp26035
g10
I0
sg11
S'set the data limits for the yaxis'
p26036
sg12
Vhexbin.ylim
p26037
sg14
(lp26038
sg2
S'ylim'
p26039
sba(icodemend.demo.code_suggest
Element
p26040
(dp26041
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p26042
sg12
Vhexbin.ymargin
p26043
sg14
(lp26044
sg2
S'ymargin'
p26045
sbag5703
a(icodemend.demo.code_suggest
Element
p26046
(dp26047
g10
I0
sg11
S'set the y ticks with list of ticks'
p26048
sg12
Vhexbin.yticks
p26049
sg14
(lp26050
sg2
S'yticks'
p26051
sba(icodemend.demo.code_suggest
Element
p26052
(dp26053
g10
I0
sg11
S'set the zorder for the artist .'
p26054
sg12
Vhexbin.zorder
p26055
sg14
(lp26056
sg2
S'zorder'
p26057
sbasg2
g25682
sbs(S'hexbin'
p26058
g25915
tp26059
g25910
s(S'hlines'
p26060
g5339
tp26061
g5329
s(S'semilogy'
p26062
S'label'
p26063
tp26064
(icodemend.demo.code_suggest
Element
p26065
(dp26066
g10
I1
sg11
S'set the label to s for auto legend .'
p26067
sg12
Vsemilogy.label
p26068
sg14
(lp26069
(icodemend.demo.code_suggest
Element
p26070
(dp26071
g10
I1
sg11
S''
sg12
Vsemilogy.label.'DCTCP-PQ47/5'
p26072
sg14
(lp26073
sg2
S"'DCTCP-PQ47.5'"
p26074
sbasg2
g26063
sbs(S'volume_overlay3'
p26075
S'width'
p26076
tp26077
(icodemend.demo.code_suggest
Element
p26078
(dp26079
g10
I0
sg11
S'the bar width in points'
p26080
sg12
Vvolume_overlay3.width
p26081
sg14
(lp26082
sg2
g26076
sbsS'set_size_inches'
p26083
(icodemend.demo.code_suggest
Element
p26084
(dp26085
g10
I56
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p26086
sg12
Vset_size_inches
p26087
sg14
(lp26088
g15377
asg2
g26083
sbsS'get_angle'
p26089
(icodemend.demo.code_suggest
Element
p26090
(dp26091
g10
I2
sg11
S'return the fontangle as float'
p26092
sg12
Vget_angle
p26093
sg14
(lp26094
sg2
g26089
sbsS'invert_xaxis'
p26095
(icodemend.demo.code_suggest
Element
p26096
(dp26097
g10
I10
sg11
S'invert the x-axis .'
p26098
sg12
Vinvert_xaxis
p26099
sg14
(lp26100
sg2
g26095
sbsS'set_arrowstyle'
p26101
(icodemend.demo.code_suggest
Element
p26102
(dp26103
g10
I1
sg11
S'set the arrow style .'
p26104
sg12
Vset_arrowstyle
p26105
sg14
(lp26106
sg2
g26101
sbs(S'grid'
p26107
S'anchor'
p26108
tp26109
(icodemend.demo.code_suggest
Element
p26110
(dp26111
g10
I0
sg11
S'anchor'
p26112
sg12
Vgrid.anchor
p26113
sg14
(lp26114
sg2
g26108
sbs(g324
g102
g9937
tp26115
g9933
s(g944
g102
S'0.25'
p26116
tp26117
(icodemend.demo.code_suggest
Element
p26118
(dp26119
g10
I1
sg11
S''
sg12
Vbarh.alpha.0/25
p26120
sg14
(lp26121
sg2
g26116
sbs(S'hlines'
p26122
g5355
tp26123
g5350
s(g16279
g325
g325
tp26124
g11597
s(g324
g2183
g9817
tp26125
g9813
s(S'psd'
p26126
S'anchor'
p26127
tp26128
(icodemend.demo.code_suggest
Element
p26129
(dp26130
g10
I0
sg11
S'anchor'
p26131
sg12
Vpsd.anchor
p26132
sg14
(lp26133
sg2
g26127
sbs(g5975
g2251
g6802
tp26134
g6798
s(g4
S'markerfmt'
p26135
S"'bo'"
p26136
tp26137
(icodemend.demo.code_suggest
Element
p26138
(dp26139
g10
I2
sg11
S''
sg12
Vstem.markerfmt.'bo'
p26140
sg14
(lp26141
sg2
g26136
sbs(S'phase_spectrum'
p26142
S'markeredgecolor'
p26143
tp26144
(icodemend.demo.code_suggest
Element
p26145
(dp26146
g10
I0
sg11
S'set the marker edge color'
p26147
sg12
Vphase_spectrum.markeredgecolor
p26148
sg14
(lp26149
sg2
g26143
sbsS'get_state'
p26150
(icodemend.demo.code_suggest
Element
p26151
(dp26152
g10
I0
sg11
S'get the current state of the parser .'
p26153
sg12
Vget_state
p26154
sg14
(lp26155
sg2
g26150
sbs(S'yticks'
p26156
S'y'
tp26157
g16121
s(S'specgram'
p26158
S'NFFT'
p26159
tp26160
(icodemend.demo.code_suggest
Element
p26161
(dp26162
g10
I1
sg11
S'compute and plot a spectrogram of data in x . data are split into nfft length segments and the spectrum of each section is computed . the windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap . the spectrogram is plotted as a colormap ( using imshow ) .'
p26163
sg12
Vspecgram.NFFT
p26164
sg14
(lp26165
(icodemend.demo.code_suggest
Element
p26166
(dp26167
g10
I1
sg11
S''
sg12
Vspecgram.NFFT.nFFT
p26168
sg14
(lp26169
sg2
S'nFFT'
p26170
sbasg2
g26159
sbs(g93
g161
S'(2, 1.5)'
p26171
tp26172
(icodemend.demo.code_suggest
Element
p26173
(dp26174
g10
I1
sg11
S''
sg12
Vannotate.xy.(2, 1/5)
p26175
sg14
(lp26176
sg2
g26171
sbs(S'add_lines'
p26177
S'linewidths'
p26178
tp26179
(icodemend.demo.code_suggest
Element
p26180
(dp26181
g10
I0
sg11
S'colors and linewidths must be scalars or sequences the same length as levels .'
p26182
sg12
Vadd_lines.linewidths
p26183
sg14
(lp26184
sg2
g26178
sbsS'get_animated'
p26185
(icodemend.demo.code_suggest
Element
p26186
(dp26187
g10
I0
sg11
S"return the artist 's animated state"
p26188
sg12
Vget_animated
p26189
sg14
(lp26190
sg2
g26185
sbs(g252
g1010
S'0'
tp26191
g13907
s(S'broken_barh'
p26192
S'ymargin'
p26193
tp26194
(icodemend.demo.code_suggest
Element
p26195
(dp26196
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p26197
sg12
Vbroken_barh.ymargin
p26198
sg14
(lp26199
sg2
g26193
sbs(S'table'
p26200
S'figure'
p26201
tp26202
(icodemend.demo.code_suggest
Element
p26203
(dp26204
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p26205
sg12
Vtable.figure
p26206
sg14
(lp26207
sg2
g26201
sbs(S'set_ylim'
p26208
g489
S'0.0'
p26209
tp26210
(icodemend.demo.code_suggest
Element
p26211
(dp26212
g10
I3
sg11
S''
sg12
Vset_ylim.bottom.0/0
p26213
sg14
(lp26214
sg2
g26209
sbs(S'axvline'
p26215
S'xmargin'
p26216
tp26217
(icodemend.demo.code_suggest
Element
p26218
(dp26219
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p26220
sg12
Vaxvline.xmargin
p26221
sg14
(lp26222
sg2
g26216
sbs(g245
g140
S'((float(image.size[0]) / my_dpi), (float(image.size[1]) / my_dpi))'
p26223
tp26224
(icodemend.demo.code_suggest
Element
p26225
(dp26226
g10
I1
sg11
S''
sg12
Vfigure.figsize.((float(image/size[0]) / my_dpi), (float(image/size[1]) / my_dpi))
p26227
sg14
(lp26228
sg2
g26223
sbs(g252
g1010
g13985
tp26229
g13981
sS'onetrue'
p26230
(icodemend.demo.code_suggest
Element
p26231
(dp26232
g10
I0
sg11
S'return true if one element of seq is true .'
p26233
sg12
Vonetrue
p26234
sg14
(lp26235
g10099
asg2
g26230
sbs(g93
g94
g5516
tp26236
g5512
s(g117
g2392
S'32'
p26237
tp26238
(icodemend.demo.code_suggest
Element
p26239
(dp26240
g10
I2
sg11
S''
sg12
Vplot.linewidth.32
p26241
sg14
(lp26242
sg2
g26237
sbs(g16
g132
S'c'
tp26243
(icodemend.demo.code_suggest
Element
p26244
(dp26245
g10
I7
sg11
S''
sg12
Vbar.color.c
p26246
sg14
(lp26247
sg2
S'c'
sbs(g93
g627
S'10'
p26248
tp26249
(icodemend.demo.code_suggest
Element
p26250
(dp26251
g10
I2
sg11
S''
sg12
Vannotate.size.10
p26252
sg14
(lp26253
sg2
g26248
sbs(g16
g132
S"['red', 'green', 'green']"
p26254
tp26255
(icodemend.demo.code_suggest
Element
p26256
(dp26257
g10
I1
sg11
S''
sg12
Vbar.color.['red', 'green', 'green']
p26258
sg14
(lp26259
sg2
g26254
sbs(g5112
g2251
g15935
tp26260
g15931
s(S'axvline'
p26261
S'_interpolation_steps'
p26262
tp26263
(icodemend.demo.code_suggest
Element
p26264
(dp26265
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p26266
sg12
Vaxvline._interpolation_steps
p26267
sg14
(lp26268
sg2
g26262
sbsS'candlestick_ochl'
p26269
(icodemend.demo.code_suggest
Element
p26270
(dp26271
g10
I0
sg11
S'plot the time , open , close , high , low as a vertical line ranging from low to high .'
p26272
sg12
Vcandlestick_ochl
p26273
sg14
(lp26274
(icodemend.demo.code_suggest
Element
p26275
(dp26276
g10
I0
sg11
S'the rectangle alpha level'
p26277
sg12
Vcandlestick_ochl.alpha
p26278
sg14
(lp26279
sg2
S'alpha'
p26280
sba(icodemend.demo.code_suggest
Element
p26281
(dp26282
g10
I0
sg11
S'an axes instance to plot to'
p26283
sg12
Vcandlestick_ochl.ax
p26284
sg14
(lp26285
sg2
S'ax'
p26286
sba(icodemend.demo.code_suggest
Element
p26287
(dp26288
g10
I0
sg11
S'the color of the rectangle where close < open'
p26289
sg12
Vcandlestick_ochl.colordown
p26290
sg14
(lp26291
sg2
S'colordown'
p26292
sbag7433
a(icodemend.demo.code_suggest
Element
p26293
(dp26294
g10
I0
sg11
S'as long as the first 5 elements are these values , the record can be as long as you want ( e.g. , it may store volume ) .'
p26295
sg12
Vcandlestick_ochl.quotes
p26296
sg14
(lp26297
sg2
S'quotes'
p26298
sbag16755
asg2
g26269
sbs(g252
g8210
g206
tp26299
g202
s(S'score_variant'
p26300
S'variant1'
p26301
tp26302
(icodemend.demo.code_suggest
Element
p26303
(dp26304
g10
I0
sg11
S'returns a match score between variant1 and variant2 .'
p26305
sg12
Vscore_variant.variant1
p26306
sg14
(lp26307
sg2
g26301
sbsS'set_bbox_to_anchor'
p26308
(icodemend.demo.code_suggest
Element
p26309
(dp26310
g10
I2
sg11
S'set the bbox that the legend will be anchored . set the bbox that the child will be anchored .'
p26311
sg12
Vset_bbox_to_anchor
p26312
sg14
(lp26313
(icodemend.demo.code_suggest
Element
p26314
(dp26315
g10
I0
sg11
S'bbox can be a bboxbase instance , a tuple of [ left , bottom , width , height ] in the given transform ( normalized axes coordinate if none ) , or a tuple of [ left , bottom ] where the width and height will be assumed to be zero . bbox can be a bbox instance , a list of [ left , bottom , width , height ] , or a list of [ left , bottom ] where the width and height will be assumed to be zero . the bbox will be transformed to display coordinate by the given transform .'
p26316
sg12
Vset_bbox_to_anchor.bbox
p26317
sg14
(lp26318
sg2
S'bbox'
p26319
sbasg2
g26308
sbs(S'get_siblings'
p26320
S'a'
tp26321
(icodemend.demo.code_suggest
Element
p26322
(dp26323
g10
I0
sg11
S'returns all of the items joined with a , including itself .'
p26324
sg12
Vget_siblings.a
p26325
sg14
(lp26326
sg2
S'a'
sbs(S'legend'
p26327
g14610
tp26328
g14605
s(S'fill'
p26329
S'antialiased'
p26330
tp26331
(icodemend.demo.code_suggest
Element
p26332
(dp26333
g10
I0
sg11
S'set whether to use antialiased rendering'
p26334
sg12
Vfill.antialiased
p26335
sg14
(lp26336
sg2
g26330
sbs(g245
g140
S'(7, 7)'
p26337
tp26338
(icodemend.demo.code_suggest
Element
p26339
(dp26340
g10
I6
sg11
S''
sg12
Vfigure.figsize.(7, 7)
p26341
sg14
(lp26342
sg2
g26337
sbs(g117
g2878
S'1'
tp26343
g19387
s(S'get_window_extent'
p26344
S'dpi'
p26345
tp26346
(icodemend.demo.code_suggest
Element
p26347
(dp26348
g10
I0
sg11
S'dpi defaults to self.figure.dpi ; the renderer dpi is irrelevant . for the web application , if figure.dpi is not the value used when saving the figure , then the value that was used must be specified as the dpi argument . renderer defaults to the _ renderer attribute of the text object . this is not assigned until the first execution of draw ( ) , so you must use this kwarg if you want to call get_window_extent ( ) prior to the first draw ( ) . for getting web page regions , it is simpler to call the method after saving the figure . the dpi used defaults to self.figure.dpi ; the renderer dpi is irrelevant .'
p26349
sg12
Vget_window_extent.dpi
p26350
sg14
(lp26351
sg2
g26345
sbsS'set_solid_joinstyle'
p26352
(icodemend.demo.code_suggest
Element
p26353
(dp26354
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p26355
sg12
Vset_solid_joinstyle
p26356
sg14
(lp26357
sg2
g26352
sbs(S'quiver'
p26358
S'width'
p26359
tp26360
(icodemend.demo.code_suggest
Element
p26361
(dp26362
g10
I3
sg11
S'shaft width in arrow units ; default depends on choice of units , above , and number of vectors ; a typical starting value is about 0.005 times the width of the plot .'
p26363
sg12
Vquiver.width
p26364
sg14
(lp26365
g16839
a(icodemend.demo.code_suggest
Element
p26366
(dp26367
g10
I1
sg11
S''
sg12
Vquiver.width.0/01
p26368
sg14
(lp26369
sg2
S'0.01'
p26370
sba(icodemend.demo.code_suggest
Element
p26371
(dp26372
g10
I1
sg11
S''
sg12
Vquiver.width.0/02
p26373
sg14
(lp26374
sg2
S'0.02'
p26375
sbasg2
g26359
sbs(g117
g5775
S"'green'"
p26376
tp26377
(icodemend.demo.code_suggest
Element
p26378
(dp26379
g10
I1
sg11
S''
sg12
Vplot.markerfacecolor.'green'
p26380
sg14
(lp26381
sg2
g26376
sbs(g252
g7452
g14261
tp26382
g14257
s(g4371
g102
g17712
tp26383
g17708
s(S'barh'
p26384
S'yticklabels'
p26385
tp26386
(icodemend.demo.code_suggest
Element
p26387
(dp26388
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p26389
sg12
Vbarh.yticklabels
p26390
sg14
(lp26391
sg2
g26385
sbs(S'plot_date'
p26392
g20093
tp26393
g20088
sS'mx2num'
p26394
(icodemend.demo.code_suggest
Element
p26395
(dp26396
g10
I0
sg11
S'convert mx datetime instance ( or sequence of mx instances ) to the new date format .'
p26397
sg12
Vmx2num
p26398
sg14
(lp26399
sg2
g26394
sbs(g117
g4274
S'(2, 0, 0)'
p26400
tp26401
(icodemend.demo.code_suggest
Element
p26402
(dp26403
g10
I1
sg11
S''
sg12
Vplot.marker.(2, 0, 0)
p26404
sg14
(lp26405
sg2
g26400
sbs(g117
g4163
g11048
tp26406
g11044
s(S'rec_append_fields'
p26407
S'names'
p26408
tp26409
(icodemend.demo.code_suggest
Element
p26410
(dp26411
g10
I0
sg11
S'return a new record array with field names populated with data from arrays in arrs . if appending a single field , then names , arrs and dtypes do not have to be lists . they can just be the values themselves .'
p26412
sg12
Vrec_append_fields.names
p26413
sg14
(lp26414
sg2
g26408
sbs(S'contour'
p26415
S'V'
tp26416
g17772
s(S'barbs'
p26417
S'aspect'
p26418
tp26419
(icodemend.demo.code_suggest
Element
p26420
(dp26421
g10
I0
sg11
S'aspect'
p26422
sg12
Vbarbs.aspect
p26423
sg14
(lp26424
sg2
g26418
sbsS'set_horizontalalignment'
p26425
(icodemend.demo.code_suggest
Element
p26426
(dp26427
g10
I13
sg11
S'set the horizontal alignment to one of'
p26428
sg12
Vset_horizontalalignment
p26429
sg14
(lp26430
sg2
g26425
sbs(S'semilogx'
p26431
S'yticks'
p26432
tp26433
(icodemend.demo.code_suggest
Element
p26434
(dp26435
g10
I0
sg11
S'set the y ticks with list of ticks'
p26436
sg12
Vsemilogx.yticks
p26437
sg14
(lp26438
sg2
g26432
sbs(S'subplots'
p26439
g2124
tp26440
g2119
s(S'annotate'
p26441
S'xlim'
p26442
tp26443
(icodemend.demo.code_suggest
Element
p26444
(dp26445
g10
I0
sg11
S'set the data limits for the xaxis'
p26446
sg12
Vannotate.xlim
p26447
sg14
(lp26448
sg2
g26442
sbs(g125
g2251
S"'--'"
p26449
tp26450
(icodemend.demo.code_suggest
Element
p26451
(dp26452
g10
I3
sg11
S''
sg12
Vaxvline.linestyle.'--'
p26453
sg14
(lp26454
sg2
g26449
sbs(S'update_coords'
p26455
S'x'
tp26456
(icodemend.demo.code_suggest
Element
p26457
(dp26458
g10
I0
sg11
S"computes the actual x , y coordinates for text based on the input x , y and the dashlength . since the rotation is with respect to the actual canvas 's coordinates we need to map back and forth ."
p26459
sg12
Vupdate_coords.x
p26460
sg14
(lp26461
sg2
S'x'
sbs(g2250
S'minshaft'
p26462
S'5'
tp26463
(icodemend.demo.code_suggest
Element
p26464
(dp26465
g10
I1
sg11
S''
sg12
Vquiver.minshaft.5
p26466
sg14
(lp26467
sg2
S'5'
sbsS'set_fontproperties'
p26468
(icodemend.demo.code_suggest
Element
p26469
(dp26470
g10
I5
sg11
S'set the font properties that control the text .'
p26471
sg12
Vset_fontproperties
p26472
sg14
(lp26473
(icodemend.demo.code_suggest
Element
p26474
(dp26475
g10
I0
sg11
S'set the properties by parsing a fontconfig pattern .'
p26476
sg12
Vset_fontproperties.fontconfig_pattern
p26477
sg14
(lp26478
sg2
S'fontconfig_pattern'
p26479
sba(icodemend.demo.code_suggest
Element
p26480
(dp26481
g10
I0
sg11
S'set the font properties that control the text . fp must be a matplotlib.font_manager.fontproperties object .'
p26482
sg12
Vset_fontproperties.fp
p26483
sg14
(lp26484
sg2
S'fp'
p26485
sbasg2
g26468
sbs(S'pie'
p26486
S'textprops'
p26487
tp26488
(icodemend.demo.code_suggest
Element
p26489
(dp26490
g10
I0
sg11
S'dict of arguments to pass to the text objects .'
p26491
sg12
Vpie.textprops
p26492
sg14
(lp26493
sg2
g26487
sbs(S'pcolor'
p26494
S'C*(*y'
p26495
tp26496
(icodemend.demo.code_suggest
Element
p26497
(dp26498
g10
I0
sg11
S'the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .'
p26499
sg12
Vpcolor.C*(*y
p26500
sg14
(lp26501
sg2
g26495
sbs(g117
g102
S'0.6'
p26502
tp26503
(icodemend.demo.code_suggest
Element
p26504
(dp26505
g10
I1
sg11
S''
sg12
Vplot.alpha.0/6
p26506
sg14
(lp26507
sg2
g26502
sbs(S'clim'
p26508
S'vmin'
p26509
tp26510
(icodemend.demo.code_suggest
Element
p26511
(dp26512
g10
I0
sg11
S'if either vmin or vmax is none , the image min/max respectively will be used for color scaling .'
p26513
sg12
Vclim.vmin
p26514
sg14
(lp26515
sg2
g26509
sbs(g332
g16645
S"'foo'"
p26516
tp26517
(icodemend.demo.code_suggest
Element
p26518
(dp26519
g10
I1
sg11
S''
sg12
Vtext.gid.'foo'
p26520
sg14
(lp26521
sg2
g26516
sbs(S'string_width_height'
p26522
S'w'
tp26523
(icodemend.demo.code_suggest
Element
p26524
(dp26525
g10
I0
sg11
S'return the string width ( including kerning ) and string height as a ( w , h ) tuple .'
p26526
sg12
Vstring_width_height.w
p26527
sg14
(lp26528
sg2
S'w'
sbs(S'bxp'
p26529
S'x'
tp26530
(icodemend.demo.code_suggest
Element
p26531
(dp26532
g10
I0
sg11
S'make a box and whisker plot for each column of x or each vector in sequence x . the box extends from the lower to upper quartile values of the data , with a line at the median . the whiskers extend from the box to show the range of the data . flier points are those past the end of the whiskers .'
p26533
sg12
Vbxp.x
p26534
sg14
(lp26535
sg2
S'x'
sbs(S'get_xticklabels'
p26536
g7393
tp26537
g7388
s(g332
g389
g389
tp26538
(icodemend.demo.code_suggest
Element
p26539
(dp26540
g10
I1
sg11
S''
sg12
Vtext.rotation.rotation
p26541
sg14
(lp26542
sg2
g389
sbs(S'axvline'
p26543
S'xticklabels'
p26544
tp26545
(icodemend.demo.code_suggest
Element
p26546
(dp26547
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p26548
sg12
Vaxvline.xticklabels
p26549
sg14
(lp26550
sg2
g26544
sbs(g8547
S'pctdistance'
p26551
S'0.5'
p26552
tp26553
(icodemend.demo.code_suggest
Element
p26554
(dp26555
g10
I1
sg11
S''
sg12
Vpie.pctdistance.0/5
p26556
sg14
(lp26557
sg2
g26552
sbs(S'contour'
p26558
g17550
tp26559
g17490
s(g252
g24217
g14473
tp26560
g14469
s(S'frange'
p26561
S'closed'
p26562
tp26563
(icodemend.demo.code_suggest
Element
p26564
(dp26565
g10
I0
sg11
S'frange(x0 , x1 ) returns [ x0 , x0+1 , x0+2 , ... , x1 ] ; start defaults to 0 , and the endpoint is included . this behavior is different from that of range ( ) and numpy.arange ( ) . this is deliberate , since frange ( ) will probably be more useful for generating lists of points for function evaluation , and endpoints are often desired in this use . the usual behavior of range ( ) can be obtained by setting the keyword closed = 0 , in this case , frange ( ) basically becomes : func:numpy.arange ` .'
p26566
sg12
Vfrange.closed
p26567
sg14
(lp26568
sg2
g26562
sbs(g10679
g2392
g5300
tp26569
g5296
s(g16
g17
g19697
tp26570
(icodemend.demo.code_suggest
Element
p26571
(dp26572
g10
I1
sg11
S''
sg12
Vbar.width.value
p26573
sg14
(lp26574
sg2
g19697
sbs(S'set_xticklabels'
p26575
g17043
tp26576
g17038
s(S'to_rgba'
p26577
S'A'
tp26578
g12933
s(S'hlines'
p26579
g5409
tp26580
g5404
s(S'barbs'
p26581
S'rasterized'
p26582
tp26583
(icodemend.demo.code_suggest
Element
p26584
(dp26585
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p26586
sg12
Vbarbs.rasterized
p26587
sg14
(lp26588
sg2
g26582
sbs(S'psd'
p26589
S'markevery'
p26590
tp26591
(icodemend.demo.code_suggest
Element
p26592
(dp26593
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p26594
sg12
Vpsd.markevery
p26595
sg14
(lp26596
sg2
g26590
sbs(g8547
g7032
g132
tp26597
(icodemend.demo.code_suggest
Element
p26598
(dp26599
g10
I1
sg11
S''
sg12
Vpie.colors.color
p26600
sg14
(lp26601
sg2
g132
sbs(S'barbs'
p26602
S'gid'
p26603
tp26604
(icodemend.demo.code_suggest
Element
p26605
(dp26606
g10
I0
sg11
S'sets the ( group ) id for the artist'
p26607
sg12
Vbarbs.gid
p26608
sg14
(lp26609
sg2
g26603
sbs(S'grid'
p26610
S'fillstyle'
p26611
tp26612
(icodemend.demo.code_suggest
Element
p26613
(dp26614
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p26615
sg12
Vgrid.fillstyle
p26616
sg14
(lp26617
sg2
g26611
sbs(S'parse'
p26618
S's'
tp26619
(icodemend.demo.code_suggest
Element
p26620
(dp26621
g10
I0
sg11
S'parse the given math expression s at the given dpi . if prop is provided , it is a fontproperties object specifying the " default " font to use in the math expression , used for all non-math text . parse expression s using the given fonts_object for output , at the given fontsize and dpi .'
p26622
sg12
Vparse.s
p26623
sg14
(lp26624
sg2
S's'
sbs(S'axvspan'
p26625
S'contains'
p26626
tp26627
(icodemend.demo.code_suggest
Element
p26628
(dp26629
g10
I0
sg11
S'replace the contains test used by this artist .'
p26630
sg12
Vaxvspan.contains
p26631
sg14
(lp26632
sg2
g26626
sbs(S'figtext'
p26633
g11497
tp26634
g11492
sS'refine_triangulation'
p26635
(icodemend.demo.code_suggest
Element
p26636
(dp26637
g10
I2
sg11
S'computes an uniformly refined triangulation refi_triangulation of the encapsulated triangulation .'
p26638
sg12
Vrefine_triangulation
p26639
sg14
(lp26640
(icodemend.demo.code_suggest
Element
p26641
(dp26642
g10
I2
sg11
S'this function refines the encapsulated triangulation by splitting each father triangle into 4 child sub-triangles built on the edges midside nodes , recursively ( level of recursion subdiv ) . in the end , each triangle is hence divided into 4**subdiv child triangles . the default value for subdiv is 3 resulting in 64 refined subtriangles for each triangle of the initial triangulation .|||recursion level for the subdivision . defaults value 3 . each triangle will be divided into 4**subdiv child triangles .'
p26643
sg12
Vrefine_triangulation.subdiv
p26644
sg14
(lp26645
(icodemend.demo.code_suggest
Element
p26646
(dp26647
g10
I1
sg11
S''
sg12
Vrefine_triangulation.subdiv.1
p26648
sg14
(lp26649
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p26650
(dp26651
g10
I1
sg11
S''
sg12
Vrefine_triangulation.subdiv.4
p26652
sg14
(lp26653
sg2
S'4'
sbasg2
S'subdiv'
p26654
sba(icodemend.demo.code_suggest
Element
p26655
(dp26656
g10
I1
sg11
S'boolean indicating whether an index table indicating the father triangle index of each point will be returned . default value false .'
p26657
sg12
Vrefine_triangulation.return_tri_index
p26658
sg14
(lp26659
(icodemend.demo.code_suggest
Element
p26660
(dp26661
g10
I1
sg11
S''
sg12
Vrefine_triangulation.return_tri_index.True
p26662
sg14
(lp26663
sg2
g438
sbasg2
S'return_tri_index'
p26664
sba(icodemend.demo.code_suggest
Element
p26665
(dp26666
g10
I0
sg11
S'computes an uniformly refined triangulation refi_triangulation of the encapsulated triangulation .'
p26667
sg12
Vrefine_triangulation.refi_triangulation
p26668
sg14
(lp26669
sg2
S'refi_triangulation'
p26670
sbasg2
g26635
sbs(S'add'
p26671
S'figure'
p26672
tp26673
(icodemend.demo.code_suggest
Element
p26674
(dp26675
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p26676
sg12
Vadd.figure
p26677
sg14
(lp26678
sg2
g26672
sbs(S'save'
p26679
S'dpi'
p26680
tp26681
(icodemend.demo.code_suggest
Element
p26682
(dp26683
g10
I2
sg11
S"dpi controls the dots per inch for the movie frames . this combined with the figure 's size in inches controls the size of the movie ."
p26684
sg12
Vsave.dpi
p26685
sg14
(lp26686
(icodemend.demo.code_suggest
Element
p26687
(dp26688
g10
I1
sg11
S''
sg12
Vsave.dpi.80
p26689
sg14
(lp26690
sg2
S'80'
p26691
sba(icodemend.demo.code_suggest
Element
p26692
(dp26693
g10
I1
sg11
S''
sg12
Vsave.dpi.dpi
p26694
sg14
(lp26695
sg2
g3075
sbasg2
g26680
sbs(S'set_yticklabels'
p26696
g18064
tp26697
g18059
s(S'num2date'
p26698
S'plus'
p26699
tp26700
(icodemend.demo.code_suggest
Element
p26701
(dp26702
g10
I0
sg11
S'x is a float value which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 utc plus one . the addition of one here is a historical artifact . also , note that the gregorian calendar is assumed ; this is not universal practice . for details , see the module docstring .'
p26703
sg12
Vnum2date.plus
p26704
sg14
(lp26705
sg2
g26699
sbs(g117
g118
S"'A'"
p26706
tp26707
(icodemend.demo.code_suggest
Element
p26708
(dp26709
g10
I2
sg11
S''
sg12
Vplot.label.'A'
p26710
sg14
(lp26711
sg2
g26706
sbs(g421
g102
S'0.5'
p26712
tp26713
(icodemend.demo.code_suggest
Element
p26714
(dp26715
g10
I4
sg11
S''
sg12
Vfill.alpha.0/5
p26716
sg14
(lp26717
sg2
g26712
sbs(g421
g102
S'0.01'
p26718
tp26719
(icodemend.demo.code_suggest
Element
p26720
(dp26721
g10
I1
sg11
S''
sg12
Vfill.alpha.0/01
p26722
sg14
(lp26723
sg2
g26718
sbs(g101
S's'
g7801
tp26724
g7797
s(S'plot'
p26725
S'scalex'
p26726
tp26727
(icodemend.demo.code_suggest
Element
p26728
(dp26729
g10
I0
sg11
S'kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p26730
sg12
Vplot.scalex
p26731
sg14
(lp26732
sg2
g26726
sbs(S'plot_day_summary2_ohlc'
p26733
g8431
tp26734
g8426
s(S'set_xscale'
p26735
S'subsx'
p26736
tp26737
(icodemend.demo.code_suggest
Element
p26738
(dp26739
g10
I0
sg11
S'where to place the subticks between each major tick . should be a sequence of integers . for example , in a log10 scale :[ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] will place 8 logarithmically spaced minor ticks between each major tick .'
p26740
sg12
Vset_xscale.subsx
p26741
sg14
(lp26742
sg2
g26736
sbs(S'set_yscale'
p26743
g15500
tp26744
g15491
s(g117
g118
g118
tp26745
(icodemend.demo.code_suggest
Element
p26746
(dp26747
g10
I9
sg11
S''
sg12
Vplot.label.label
p26748
sg14
(lp26749
sg2
g118
sbs(g4998
g325
S'cMap'
p26750
tp26751
(icodemend.demo.code_suggest
Element
p26752
(dp26753
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.cMap
p26754
sg14
(lp26755
sg2
g26750
sbs(g6596
S'basey'
p26756
S'10'
p26757
tp26758
(icodemend.demo.code_suggest
Element
p26759
(dp26760
g10
I4
sg11
S''
sg12
Vloglog.basey.10
p26761
sg14
(lp26762
sg2
g26757
sbs(g965
g6300
S'[]'
p26763
tp26764
(icodemend.demo.code_suggest
Element
p26765
(dp26766
g10
I1
sg11
S''
sg12
Vadd_axes.xticks.[]
p26767
sg14
(lp26768
sg2
g26763
sbs(g93
g132
S'c'
tp26769
(icodemend.demo.code_suggest
Element
p26770
(dp26771
g10
I1
sg11
S''
sg12
Vannotate.color.c
p26772
sg14
(lp26773
sg2
S'c'
sbs(g252
g1010
g13924
tp26774
g13920
s(S'text'
p26775
S'verticalalignment'
p26776
tp26777
(icodemend.demo.code_suggest
Element
p26778
(dp26779
g10
I42
sg11
S'set the vertical alignment'
p26780
sg12
Vtext.verticalalignment
p26781
sg14
(lp26782
g20661
a(icodemend.demo.code_suggest
Element
p26783
(dp26784
g10
I12
sg11
S''
sg12
Vtext.verticalalignment.'top'
p26785
sg14
(lp26786
sg2
S"'top'"
p26787
sba(icodemend.demo.code_suggest
Element
p26788
(dp26789
g10
I5
sg11
S''
sg12
Vtext.verticalalignment.'bottom'
p26790
sg14
(lp26791
sg2
S"'bottom'"
p26792
sba(icodemend.demo.code_suggest
Element
p26793
(dp26794
g10
I1
sg11
S''
sg12
Vtext.verticalalignment.vertalign
p26795
sg14
(lp26796
sg2
S'vertalign'
p26797
sbasg2
g26776
sbs(S'axhline'
p26798
g3765
tp26799
g3760
s(S'set_rotation_mode'
p26800
S'ha'
p26801
tp26802
(icodemend.demo.code_suggest
Element
p26803
(dp26804
g10
I0
sg11
S'set text rotation mode . if " anchor " , the un-rotated text will first aligned according to their ha and va , and then will be rotated with the alignement reference point as a origin . if none ( default ) , the text will be rotated first then will be aligned .'
p26805
sg12
Vset_rotation_mode.ha
p26806
sg14
(lp26807
sg2
g26801
sbs(S'table'
p26808
S'agg_filter'
p26809
tp26810
(icodemend.demo.code_suggest
Element
p26811
(dp26812
g10
I0
sg11
S'set agg_filter fuction .'
p26813
sg12
Vtable.agg_filter
p26814
sg14
(lp26815
sg2
g26809
sbs(S'psd'
p26816
S'ymargin'
p26817
tp26818
(icodemend.demo.code_suggest
Element
p26819
(dp26820
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p26821
sg12
Vpsd.ymargin
p26822
sg14
(lp26823
sg2
g26817
sbs(S'pcolormesh'
p26824
S'axes'
p26825
tp26826
(icodemend.demo.code_suggest
Element
p26827
(dp26828
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p26829
sg12
Vpcolormesh.axes
p26830
sg14
(lp26831
sg2
g26825
sbs(S'finddir'
p26832
S'o'
tp26833
g6384
s(g766
g325
g16465
tp26834
g16461
s(S'errorbar'
p26835
S'aspect'
p26836
tp26837
(icodemend.demo.code_suggest
Element
p26838
(dp26839
g10
I0
sg11
S'aspect'
p26840
sg12
Verrorbar.aspect
p26841
sg14
(lp26842
sg2
g26836
sbsS'set_clip_box'
p26843
(icodemend.demo.code_suggest
Element
p26844
(dp26845
g10
I4
sg11
S"set the artist 's clip bbox ."
p26846
sg12
Vset_clip_box
p26847
sg14
(lp26848
sg2
g26843
sbs(g4998
g325
S"'gist_heat_r'"
p26849
tp26850
(icodemend.demo.code_suggest
Element
p26851
(dp26852
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.'gist_heat_r'
p26853
sg14
(lp26854
sg2
g26849
sbs(S'hist'
p26855
S'x1'
p26856
tp26857
(icodemend.demo.code_suggest
Element
p26858
(dp26859
g10
I0
sg11
S'multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ... ] ) , or as a 2-d ndarray in which each column is a dataset . note that the ndarray form is transposed relative to the list form .'
p26860
sg12
Vhist.x1
p26861
sg14
(lp26862
sg2
g26856
sbs(g245
g140
S'(2, 1)'
p26863
tp26864
(icodemend.demo.code_suggest
Element
p26865
(dp26866
g10
I1
sg11
S''
sg12
Vfigure.figsize.(2, 1)
p26867
sg14
(lp26868
sg2
g26863
sbs(S'cleaned'
p26869
S'vertices'
p26870
tp26871
(icodemend.demo.code_suggest
Element
p26872
(dp26873
g10
I0
sg11
S'iterates over all of the curve segments in the path . each iteration returns a 2-tuple ( vertices , code ) , where vertices is a sequence of 1 - 3 coordinate pairs , and code is one of the path codes .'
p26874
sg12
Vcleaned.vertices
p26875
sg14
(lp26876
sg2
g26870
sbs(S'tripcolor'
p26877
S'None'
p26878
tp26879
(icodemend.demo.code_suggest
Element
p26880
(dp26881
g10
I0
sg11
S"vmin and vmax are used in conjunction with norm to normalize luminance data . if either is none , it is autoscaled to the respective min or max of the color array c . if not none , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||if none , the rc setting is used by default . if ' none ' , edges will not be visible . an mpl color or sequence of colors will set the edge color|||the alpha blending value|||a matplotlib.colors.colormap instance . if none , use rc settings .|||an matplotlib.colors.normalize instance is used to scale luminance data to 0,1 . if none , defaults to normalize ( ) ."
p26882
sg12
Vtripcolor.None
p26883
sg14
(lp26884
sg2
g26878
sbs(S'set_ylabel'
p26885
S'x'
tp26886
(icodemend.demo.code_suggest
Element
p26887
(dp26888
g10
I0
sg11
S'set the x position of the text'
p26889
sg12
Vset_ylabel.x
p26890
sg14
(lp26891
sg2
S'x'
sbs(S'step'
p26892
S'scalex'
p26893
tp26894
(icodemend.demo.code_suggest
Element
p26895
(dp26896
g10
I0
sg11
S'kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p26897
sg12
Vstep.scalex
p26898
sg14
(lp26899
sg2
g26893
sbs(S'acorr'
p26900
g15920
tp26901
g15911
s(S'axvline'
p26902
S'picker'
p26903
tp26904
(icodemend.demo.code_suggest
Element
p26905
(dp26906
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p26907
sg12
Vaxvline.picker
p26908
sg14
(lp26909
sg2
g26903
sbs(g8266
g8267
g8166
tp26910
g8162
s(g1170
g132
S"'#7F38EC'"
p26911
tp26912
(icodemend.demo.code_suggest
Element
p26913
(dp26914
g10
I2
sg11
S''
sg12
Vhist.color.'#7F38EC'
p26915
sg14
(lp26916
sg2
g26911
sbs(S'psd'
p26917
S'xticklabels'
p26918
tp26919
(icodemend.demo.code_suggest
Element
p26920
(dp26921
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p26922
sg12
Vpsd.xticklabels
p26923
sg14
(lp26924
sg2
g26918
sbs(S'Slider'
p26925
S'slidermax'
p26926
tp26927
(icodemend.demo.code_suggest
Element
p26928
(dp26929
g10
I1
sg11
S'do not allow the current slider to have a value greater than slidermax'
p26930
sg12
VSlider.slidermax
p26931
sg14
(lp26932
sg2
g26926
sbs(g139
g140
g1608
tp26933
g1604
s(S'cohere'
p26934
S'xticklabels'
p26935
tp26936
(icodemend.demo.code_suggest
Element
p26937
(dp26938
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p26939
sg12
Vcohere.xticklabels
p26940
sg14
(lp26941
sg2
g26935
sbs(S'Slider'
p26942
S'valmax'
p26943
tp26944
(icodemend.demo.code_suggest
Element
p26945
(dp26946
g10
I1
sg11
S'the maximum value of the slider'
p26947
sg12
VSlider.valmax
p26948
sg14
(lp26949
g16785
asg2
g26943
sbs(g117
g118
S"'relative concentration'"
p26950
tp26951
(icodemend.demo.code_suggest
Element
p26952
(dp26953
g10
I1
sg11
S''
sg12
Vplot.label.'relative concentration'
p26954
sg14
(lp26955
sg2
g26950
sbsS'entropy'
p26956
(icodemend.demo.code_suggest
Element
p26957
(dp26958
g10
I0
sg11
S'return the entropy of the data in y in units of nat .'
p26959
sg12
Ventropy
p26960
sg14
(lp26961
(icodemend.demo.code_suggest
Element
p26962
(dp26963
g10
I0
sg11
S'compare s with analytic calculation for a gaussian :'
p26964
sg12
Ventropy.S
p26965
sg14
(lp26966
sg2
S'S'
sbag8513
a(icodemend.demo.code_suggest
Element
p26967
(dp26968
g10
I0
sg11
S'where is the probability of observing y in the bin of bins . bins can be a number of bins or a range of bins ; see numpy.histogram ( ) .|||return the entropy of the data in y in units of nat .'
p26969
sg12
Ventropy.y
p26970
sg14
(lp26971
sg2
S'y'
sbasg2
g26956
sbs(S'grid'
p26972
S'clip_on'
p26973
tp26974
(icodemend.demo.code_suggest
Element
p26975
(dp26976
g10
I1
sg11
S'set whether artist uses clipping .'
p26977
sg12
Vgrid.clip_on
p26978
sg14
(lp26979
(icodemend.demo.code_suggest
Element
p26980
(dp26981
g10
I1
sg11
S''
sg12
Vgrid.clip_on.False
p26982
sg14
(lp26983
sg2
g1944
sbasg2
g26973
sbs(g101
S's'
g7726
tp26984
g7722
s(S'getp'
p26985
S'yticklabels'
p26986
tp26987
(icodemend.demo.code_suggest
Element
p26988
(dp26989
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p26990
sg12
Vgetp.yticklabels
p26991
sg14
(lp26992
sg2
g26986
sbs(g101
S'c'
g21350
tp26993
g21346
s(S'legend'
p26994
g14568
tp26995
g14544
s(S'get'
p26996
S'picker'
p26997
tp26998
(icodemend.demo.code_suggest
Element
p26999
(dp27000
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p27001
sg12
Vget.picker
p27002
sg14
(lp27003
sg2
g26997
sbs(S'gca'
p27004
S'transform'
p27005
tp27006
(icodemend.demo.code_suggest
Element
p27007
(dp27008
g10
I0
sg11
S'set the transform instance used by this artist .'
p27009
sg12
Vgca.transform
p27010
sg14
(lp27011
sg2
g27005
sbs(S'set_xscale'
p27012
S'linthreshy'
p27013
tp27014
(icodemend.demo.code_suggest
Element
p27015
(dp27016
g10
I0
sg11
S'the range ( - x , x ) within which the plot is linear ( to avoid having the plot go to infinity around zero ) .'
p27017
sg12
Vset_xscale.linthreshy
p27018
sg14
(lp27019
sg2
g27013
sbs(g117
g4163
g11084
tp27020
g11080
s(g452
g118
S"'set1'"
p27021
tp27022
(icodemend.demo.code_suggest
Element
p27023
(dp27024
g10
I1
sg11
S''
sg12
Verrorbar.label.'set1'
p27025
sg14
(lp27026
sg2
g27021
sbs(S'set_yticklabels'
p27027
g18196
tp27028
g18191
s(S'gca'
p27029
S'_interpolation_steps'
p27030
tp27031
(icodemend.demo.code_suggest
Element
p27032
(dp27033
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p27034
sg12
Vgca._interpolation_steps
p27035
sg14
(lp27036
sg2
g27030
sbs(S'plot'
p27037
S'codes'
p27038
tp27039
(icodemend.demo.code_suggest
Element
p27040
(dp27041
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p27042
sg12
Vplot.codes
p27043
sg14
(lp27044
sg2
g27038
sbs(S'stem'
p27045
S'linefmt'
p27046
tp27047
(icodemend.demo.code_suggest
Element
p27048
(dp27049
g10
I3
sg11
S'a stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . a horizontal line at 0 is is plotted using basefmt .'
p27050
sg12
Vstem.linefmt
p27051
sg14
(lp27052
(icodemend.demo.code_suggest
Element
p27053
(dp27054
g10
I2
sg11
S''
sg12
Vstem.linefmt.'b-'
p27055
sg14
(lp27056
sg2
S"'b-'"
p27057
sba(icodemend.demo.code_suggest
Element
p27058
(dp27059
g10
I1
sg11
S''
sg12
Vstem.linefmt.'-r'
p27060
sg14
(lp27061
sg2
S"'-r'"
p27062
sbasg2
g27046
sbs(g452
g2364
g2364
tp27063
(icodemend.demo.code_suggest
Element
p27064
(dp27065
g10
I2
sg11
S''
sg12
Verrorbar.xerr.xerr
p27066
sg14
(lp27067
sg2
g2364
sbs(S'set_yscale'
p27068
g15521
tp27069
g15501
s(S'loglog'
p27070
S'anchor'
p27071
tp27072
(icodemend.demo.code_suggest
Element
p27073
(dp27074
g10
I0
sg11
S'anchor'
p27075
sg12
Vloglog.anchor
p27076
sg14
(lp27077
sg2
g27071
sbs(g1170
g118
S"['first', 'second']"
p27078
tp27079
(icodemend.demo.code_suggest
Element
p27080
(dp27081
g10
I1
sg11
S''
sg12
Vhist.label.['first', 'second']
p27082
sg14
(lp27083
sg2
g27078
sbs(g16
g132
S"'#3F9AC9'"
p27084
tp27085
(icodemend.demo.code_suggest
Element
p27086
(dp27087
g10
I1
sg11
S''
sg12
Vbar.color.'#3F9AC9'
p27088
sg14
(lp27089
sg2
g27084
sbs(S'text'
p27090
S'axes'
p27091
tp27092
(icodemend.demo.code_suggest
Element
p27093
(dp27094
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p27095
sg12
Vtext.axes
p27096
sg14
(lp27097
sg2
g27091
sbs(g101
S'c'
g7032
tp27098
g21287
s(g1170
g1257
S'33'
p27099
tp27100
(icodemend.demo.code_suggest
Element
p27101
(dp27102
g10
I1
sg11
S''
sg12
Vhist.bins.33
p27103
sg14
(lp27104
sg2
g27099
sbs(S'trigger'
p27105
S'sender: object'
p27106
tp27107
(icodemend.demo.code_suggest
Element
p27108
(dp27109
g10
I0
sg11
S'object that requested the tool to be triggered'
p27110
sg12
Vtrigger.sender: object
p27111
sg14
(lp27112
sg2
g27106
sbs(S'zoom'
p27113
S'direction'
p27114
tp27115
(icodemend.demo.code_suggest
Element
p27116
(dp27117
g10
I0
sg11
S'zoom in/out on axis ; if direction is >0 zoom in , else zoom out'
p27118
sg12
Vzoom.direction
p27119
sg14
(lp27120
sg2
g27114
sbs(g10369
S'metadata'
p27121
g745
tp27122
g741
s(g16
g132
S'c_col'
p27123
tp27124
(icodemend.demo.code_suggest
Element
p27125
(dp27126
g10
I1
sg11
S''
sg12
Vbar.color.c_col
p27127
sg14
(lp27128
sg2
g27123
sbs(g324
g785
g9312
tp27129
g9308
s(S'hexbin'
p27130
g25921
tp27131
g25916
s(g101
S's'
g7776
tp27132
g7772
s(g245
g140
S'(16, 9)'
p27133
tp27134
(icodemend.demo.code_suggest
Element
p27135
(dp27136
g10
I2
sg11
S''
sg12
Vfigure.figsize.(16, 9)
p27137
sg14
(lp27138
sg2
g27133
sbsS'set_fontstretch'
p27139
(icodemend.demo.code_suggest
Element
p27140
(dp27141
g10
I0
sg11
S'alias for set_stretch'
p27142
sg12
Vset_fontstretch
p27143
sg14
(lp27144
sg2
g27139
sbs(S'axhline'
p27145
g3723
tp27146
g3718
s(S'afmFontProperty'
p27147
g19073
tp27148
g19068
sS'get_clip_on'
p27149
(icodemend.demo.code_suggest
Element
p27150
(dp27151
g10
I0
sg11
S'return whether artist uses clipping'
p27152
sg12
Vget_clip_on
p27153
sg14
(lp27154
sg2
g27149
sbs(g332
g10118
g26787
tp27155
g26783
s(S'pie'
p27156
S'x'
tp27157
(icodemend.demo.code_suggest
Element
p27158
(dp27159
g10
I0
sg11
S'make a pie chart of array x . the fractional area of each wedge is given by x/sum(x ) . if sum(x ) < = 1 , then the values of x give the fractional area directly and the array will not be normalized . the wedges are plotted counterclockwise , by default starting from the x-axis .'
p27160
sg12
Vpie.x
p27161
sg14
(lp27162
sg2
S'x'
sbsS'get_xaxis_text2_transform'
p27163
(icodemend.demo.code_suggest
Element
p27164
(dp27165
g10
I0
sg11
S'get the transformation used for drawing the secondary x-axis labels , which will add the given amount of padding ( in points ) between the axes and the label .'
p27166
sg12
Vget_xaxis_text2_transform
p27167
sg14
(lp27168
g13355
a(icodemend.demo.code_suggest
Element
p27169
(dp27170
g10
I0
sg11
S'where valign and halign are requested alignments for the text .'
p27171
sg12
Vget_xaxis_text2_transform.valign
p27172
sg14
(lp27173
sg2
S'valign'
p27174
sbasg2
g27163
sbs(S'axhline'
p27175
g3693
tp27176
g3688
s(g117
S'x'
S"'date'"
p27177
tp27178
(icodemend.demo.code_suggest
Element
p27179
(dp27180
g10
I3
sg11
S''
sg12
Vplot.x.'date'
p27181
sg14
(lp27182
sg2
g27177
sbs(S'magnitude_spectrum'
p27183
g7815
S'f_s'
p27184
tp27185
(icodemend.demo.code_suggest
Element
p27186
(dp27187
g10
I1
sg11
S''
sg12
Vmagnitude_spectrum.Fs.f_s
p27188
sg14
(lp27189
sg2
g27184
sbs(g8547
g26551
S'1.1'
p27190
tp27191
(icodemend.demo.code_suggest
Element
p27192
(dp27193
g10
I1
sg11
S''
sg12
Vpie.pctdistance.1/1
p27194
sg14
(lp27195
sg2
g27190
sbs(S'axvspan'
p27196
S'xlim'
p27197
tp27198
(icodemend.demo.code_suggest
Element
p27199
(dp27200
g10
I0
sg11
S'set the data limits for the xaxis'
p27201
sg12
Vaxvspan.xlim
p27202
sg14
(lp27203
sg2
g27197
sbsS'draw_image'
p27204
(icodemend.demo.code_suggest
Element
p27205
(dp27206
g10
I0
sg11
S'draw the image instance into the current axes ;'
p27207
sg12
Vdraw_image
p27208
sg14
(lp27209
sg2
g27204
sbs(g117
g2392
S'1.5'
p27210
tp27211
(icodemend.demo.code_suggest
Element
p27212
(dp27213
g10
I6
sg11
S''
sg12
Vplot.linewidth.1/5
p27214
sg14
(lp27215
sg2
g27210
sbs(S'hlines'
p27216
S'y'
tp27217
g5340
s(g4355
g4356
S'y1negative'
p27218
tp27219
(icodemend.demo.code_suggest
Element
p27220
(dp27221
g10
I1
sg11
S''
sg12
Vfill_between.where.y1negative
p27222
sg14
(lp27223
sg2
g27218
sbs(g117
g118
S'arg'
p27224
tp27225
(icodemend.demo.code_suggest
Element
p27226
(dp27227
g10
I1
sg11
S''
sg12
Vplot.label.arg
p27228
sg14
(lp27229
sg2
g27224
sbs(S'tricontourf'
p27230
g11624
tp27231
g11619
s(g388
g389
g16945
tp27232
g16941
s(S'text'
p27233
S'visible'
p27234
tp27235
(icodemend.demo.code_suggest
Element
p27236
(dp27237
g10
I1
sg11
S"set the artist 's visiblity ."
p27238
sg12
Vtext.visible
p27239
sg14
(lp27240
g14755
asg2
g27234
sbs(g245
g140
S'(5, 2)'
p27241
tp27242
(icodemend.demo.code_suggest
Element
p27243
(dp27244
g10
I1
sg11
S''
sg12
Vfigure.figsize.(5, 2)
p27245
sg14
(lp27246
sg2
g27241
sbs(g252
g253
g14186
tp27247
g14182
sS'set_markerfacecolor'
p27248
(icodemend.demo.code_suggest
Element
p27249
(dp27250
g10
I5
sg11
S'set the marker face color .'
p27251
sg12
Vset_markerfacecolor
p27252
sg14
(lp27253
sg2
g27248
sbs(S'cohere'
p27254
S'closed'
p27255
tp27256
(icodemend.demo.code_suggest
Element
p27257
(dp27258
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p27259
sg12
Vcohere.closed
p27260
sg14
(lp27261
sg2
g27255
sbs(S'get'
p27262
S'xscale'
p27263
tp27264
(icodemend.demo.code_suggest
Element
p27265
(dp27266
g10
I0
sg11
S'set the scaling of the x-axis'
p27267
sg12
Vget.xscale
p27268
sg14
(lp27269
sg2
g27263
sbs(S'barbs'
p27270
S'cursor_props'
p27271
tp27272
(icodemend.demo.code_suggest
Element
p27273
(dp27274
g10
I0
sg11
S'set the cursor property as'
p27275
sg12
Vbarbs.cursor_props
p27276
sg14
(lp27277
sg2
g27271
sbs(S'matshow'
p27278
S'interpolation'
p27279
tp27280
(icodemend.demo.code_suggest
Element
p27281
(dp27282
g10
I4
sg11
S"acceptable values are ' none ' , ' nearest ' , ' bilinear ' , ' bicubic ' , ' spline16 ' , ' spline36 ' , ' hanning ' , ' hamming ' , ' hermite ' , ' kaiser ' , ' quadric ' , ' catrom ' , ' gaussian ' , ' bessel ' , ' mitchell ' , ' sinc ' , ' lanczos '"
p27283
sg12
Vmatshow.interpolation
p27284
sg14
(lp27285
(icodemend.demo.code_suggest
Element
p27286
(dp27287
g10
I2
sg11
S''
sg12
Vmatshow.interpolation.'nearest'
p27288
sg14
(lp27289
sg2
S"'nearest'"
p27290
sba(icodemend.demo.code_suggest
Element
p27291
(dp27292
g10
I2
sg11
S''
sg12
Vmatshow.interpolation.'none'
p27293
sg14
(lp27294
sg2
S"'none'"
p27295
sbasg2
g27279
sbs(S'pcolorfast'
p27296
S'vmax'
p27297
tp27298
(icodemend.demo.code_suggest
Element
p27299
(dp27300
g10
I0
sg11
S'vmin and vmax are used in conjunction with norm to normalize luminance data . if either are none , the min and max of the color array c is used . if you pass a norm instance , vmin and vmax will be none .'
p27301
sg12
Vpcolorfast.vmax
p27302
sg14
(lp27303
sg2
g27297
sbs(S'axvline'
p27304
S'xticks'
p27305
tp27306
(icodemend.demo.code_suggest
Element
p27307
(dp27308
g10
I0
sg11
S'set the x ticks with list of ticks'
p27309
sg12
Vaxvline.xticks
p27310
sg14
(lp27311
sg2
g27305
sbs(g17904
g17905
S"['apple', 'pear']"
p27312
tp27313
(icodemend.demo.code_suggest
Element
p27314
(dp27315
g10
I1
sg11
S''
sg12
Vcsv2rec.names.['apple', 'pear']
p27316
sg14
(lp27317
sg2
g27312
sbs(S'psd'
p27318
S'NFFT'
p27319
S'512'
p27320
tp27321
(icodemend.demo.code_suggest
Element
p27322
(dp27323
g10
I1
sg11
S''
sg12
Vpsd.NFFT.512
p27324
sg14
(lp27325
sg2
g27320
sbs(g117
g4274
S"'$32$'"
p27326
tp27327
(icodemend.demo.code_suggest
Element
p27328
(dp27329
g10
I1
sg11
S''
sg12
Vplot.marker.'$32$'
p27330
sg14
(lp27331
sg2
g27326
sbs(S'magnitude_spectrum'
p27332
S'solid_capstyle'
p27333
tp27334
(icodemend.demo.code_suggest
Element
p27335
(dp27336
g10
I0
sg11
S'set the cap style for solid linestyles'
p27337
sg12
Vmagnitude_spectrum.solid_capstyle
p27338
sg14
(lp27339
sg2
g27333
sbs(S'broken_barh'
p27340
S'xranges'
p27341
tp27342
(icodemend.demo.code_suggest
Element
p27343
(dp27344
g10
I0
sg11
S'a collection of horizontal bars spanning yrange with a sequence of xranges .'
p27345
sg12
Vbroken_barh.xranges
p27346
sg14
(lp27347
sg2
g27341
sbs(g101
S's'
g7595
tp27348
g7591
s(S'tripcolor'
p27349
S'Y'
tp27350
(icodemend.demo.code_suggest
Element
p27351
(dp27352
g10
I0
sg11
S'if either or both of x and y are 1-d arrays or column vectors , they will be expanded as needed into the appropriate 2-d arrays , making a rectangular grid .|||matlab pcolor ( ) always discards the last row and column of c , but matplotlib displays the last row and column if x and y are not specified , or if x and y have one more row and column than c .|||the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .|||x , y and c may be masked arrays . if either c[i , j ] , or one of the vertices surrounding c[i,j ] ( x or y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||ideally the dimensions of x and y should be one greater than those of c ; if the dimensions are the same , then the last row and column of c will be ignored .|||x and y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for c[i,j ] has corners at :'
p27353
sg12
Vtripcolor.Y
p27354
sg14
(lp27355
sg2
S'Y'
sbs(S'hexbin'
p27356
g25807
tp27357
g25802
s(g5576
S'checkrows'
p27358
S'0'
tp27359
g16896
s(S'loglog'
p27360
S'gid'
p27361
tp27362
(icodemend.demo.code_suggest
Element
p27363
(dp27364
g10
I0
sg11
S'sets the ( group ) id for the artist'
p27365
sg12
Vloglog.gid
p27366
sg14
(lp27367
sg2
g27361
sbs(S'set_xticklabels'
p27368
g17288
tp27369
g17283
s(g252
S'frameon'
p27370
g1944
tp27371
g14450
s(g12678
S'y'
S'0.5'
p27372
tp27373
(icodemend.demo.code_suggest
Element
p27374
(dp27375
g10
I2
sg11
S''
sg12
Vset_title.y.0/5
p27376
sg14
(lp27377
sg2
g27372
sbs(g6632
g4225
S'[0.1, 0.1, 0.8, 0.8]'
p27378
tp27379
(icodemend.demo.code_suggest
Element
p27380
(dp27381
g10
I1
sg11
S''
sg12
Vadd_subplot.position.[0/1, 0/1, 0/8, 0/8]
p27382
sg14
(lp27383
sg2
g27378
sbs(S'csd'
p27384
S'xdata'
p27385
tp27386
(icodemend.demo.code_suggest
Element
p27387
(dp27388
g10
I0
sg11
S'set the data np.array for x'
p27389
sg12
Vcsd.xdata
p27390
sg14
(lp27391
sg2
g27385
sbs(g117
g118
S"'sin(X)'"
p27392
tp27393
(icodemend.demo.code_suggest
Element
p27394
(dp27395
g10
I1
sg11
S''
sg12
Vplot.label.'sin(X)'
p27396
sg14
(lp27397
sg2
g27392
sbs(S'volume_overlay'
p27398
S'opens'
p27399
tp27400
(icodemend.demo.code_suggest
Element
p27401
(dp27402
g10
I0
sg11
S'a sequence of opens'
p27403
sg12
Vvolume_overlay.opens
p27404
sg14
(lp27405
sg2
g27399
sbs(S'figtext'
p27406
g11269
tp27407
g11264
s(g139
g18399
g2004
tp27408
g2000
s(g117
g118
S"'b'"
p27409
tp27410
(icodemend.demo.code_suggest
Element
p27411
(dp27412
g10
I2
sg11
S''
sg12
Vplot.label.'b'
p27413
sg14
(lp27414
sg2
g27409
sbs(S'set_closed'
p27415
S'closed'
p27416
tp27417
(icodemend.demo.code_suggest
Element
p27418
(dp27419
g10
I0
sg11
S'true if the polygon is closed'
p27420
sg12
Vset_closed.closed
p27421
sg14
(lp27422
sg2
g27416
sbsS'plot'
p27423
(icodemend.demo.code_suggest
Element
p27424
(dp27425
g10
I4228
sg11
S'plot lines and/or markers to the axes .'
p27426
sg12
Vplot
p27427
sg14
(lp27428
(icodemend.demo.code_suggest
Element
p27429
(dp27430
g10
I527
sg11
S'set the label to s for auto legend .'
p27431
sg12
Vplot.label
p27432
sg14
(lp27433
g26746
ag13399
ag12404
a(icodemend.demo.code_suggest
Element
p27434
(dp27435
g10
I6
sg11
S''
sg12
Vplot.label.'y1'
p27436
sg14
(lp27437
sg2
S"'y1'"
p27438
sba(icodemend.demo.code_suggest
Element
p27439
(dp27440
g10
I5
sg11
S''
sg12
Vplot.label.'Graph2'
p27441
sg14
(lp27442
sg2
S"'Graph2'"
p27443
sba(icodemend.demo.code_suggest
Element
p27444
(dp27445
g10
I5
sg11
S''
sg12
Vplot.label.'a'
p27446
sg14
(lp27447
sg2
S"'a'"
p27448
sba(icodemend.demo.code_suggest
Element
p27449
(dp27450
g10
I5
sg11
S''
sg12
Vplot.label.'temp'
p27451
sg14
(lp27452
sg2
S"'temp'"
p27453
sba(icodemend.demo.code_suggest
Element
p27454
(dp27455
g10
I5
sg11
S''
sg12
Vplot.label.'y2'
p27456
sg14
(lp27457
sg2
S"'y2'"
p27458
sba(icodemend.demo.code_suggest
Element
p27459
(dp27460
g10
I4
sg11
S''
sg12
Vplot.label.'Density'
p27461
sg14
(lp27462
sg2
S"'Density'"
p27463
sba(icodemend.demo.code_suggest
Element
p27464
(dp27465
g10
I4
sg11
S''
sg12
Vplot.label.'Temperature'
p27466
sg14
(lp27467
sg2
S"'Temperature'"
p27468
sba(icodemend.demo.code_suggest
Element
p27469
(dp27470
g10
I4
sg11
S''
sg12
Vplot.label.'Velocity'
p27471
sg14
(lp27472
sg2
S"'Velocity'"
p27473
sba(icodemend.demo.code_suggest
Element
p27474
(dp27475
g10
I4
sg11
S''
sg12
Vplot.label.'the data'
p27476
sg14
(lp27477
sg2
S"'the data'"
p27478
sba(icodemend.demo.code_suggest
Element
p27479
(dp27480
g10
I4
sg11
S''
sg12
Vplot.label.l
p27481
sg14
(lp27482
sg2
S'l'
sba(icodemend.demo.code_suggest
Element
p27483
(dp27484
g10
I3
sg11
S''
sg12
Vplot.label.'$\u005c\u005cmu=0, \u005c\u005csigma=5$'
p27485
sg14
(lp27486
sg2
S"'$\\\\mu=0, \\\\sigma=5$'"
p27487
sba(icodemend.demo.code_suggest
Element
p27488
(dp27489
g10
I3
sg11
S''
sg12
Vplot.label.'$\u005c\u005cmu=2, \u005c\u005csigma=7$'
p27490
sg14
(lp27491
sg2
S"'$\\\\mu=2, \\\\sigma=7$'"
p27492
sba(icodemend.demo.code_suggest
Element
p27493
(dp27494
g10
I3
sg11
S''
sg12
Vplot.label.'B'
p27495
sg14
(lp27496
sg2
S"'B'"
p27497
sbag7898
ag16261
a(icodemend.demo.code_suggest
Element
p27498
(dp27499
g10
I3
sg11
S''
sg12
Vplot.label.'Swdown'
p27500
sg14
(lp27501
sg2
S"'Swdown'"
p27502
sba(icodemend.demo.code_suggest
Element
p27503
(dp27504
g10
I3
sg11
S''
sg12
Vplot.label.'ax1'
p27505
sg14
(lp27506
sg2
S"'ax1'"
p27507
sba(icodemend.demo.code_suggest
Element
p27508
(dp27509
g10
I3
sg11
S''
sg12
Vplot.label.'local'
p27510
sg14
(lp27511
sg2
S"'local'"
p27512
sba(icodemend.demo.code_suggest
Element
p27513
(dp27514
g10
I3
sg11
S''
sg12
Vplot.label.'one point'
p27515
sg14
(lp27516
sg2
S"'one point'"
p27517
sba(icodemend.demo.code_suggest
Element
p27518
(dp27519
g10
I3
sg11
S''
sg12
Vplot.label.'regional'
p27520
sg14
(lp27521
sg2
S"'regional'"
p27522
sba(icodemend.demo.code_suggest
Element
p27523
(dp27524
g10
I3
sg11
S''
sg12
Vplot.label.k
p27525
sg14
(lp27526
sg2
S'k'
sba(icodemend.demo.code_suggest
Element
p27527
(dp27528
g10
I2
sg11
S''
sg12
Vplot.label.'$P_1(x)$'
p27529
sg14
(lp27530
sg2
S"'$P_1(x)$'"
p27531
sbag13840
ag17443
a(icodemend.demo.code_suggest
Element
p27532
(dp27533
g10
I2
sg11
S''
sg12
Vplot.label.'1'
p27534
sg14
(lp27535
sg2
S"'1'"
p27536
sbag6122
a(icodemend.demo.code_suggest
Element
p27537
(dp27538
g10
I2
sg11
S''
sg12
Vplot.label.'3'
p27539
sg14
(lp27540
sg2
S"'3'"
p27541
sba(icodemend.demo.code_suggest
Element
p27542
(dp27543
g10
I2
sg11
S''
sg12
Vplot.label.'4'
p27544
sg14
(lp27545
sg2
S"'4'"
p27546
sbag26708
ag12349
ag20444
a(icodemend.demo.code_suggest
Element
p27547
(dp27548
g10
I2
sg11
S''
sg12
Vplot.label.'Cosine'
p27549
sg14
(lp27550
sg2
S"'Cosine'"
p27551
sba(icodemend.demo.code_suggest
Element
p27552
(dp27553
g10
I2
sg11
S''
sg12
Vplot.label.'D'
p27554
sg14
(lp27555
sg2
S"'D'"
p27556
sba(icodemend.demo.code_suggest
Element
p27557
(dp27558
g10
I2
sg11
S''
sg12
Vplot.label.'Dynamic Prediction'
p27559
sg14
(lp27560
sg2
S"'Dynamic Prediction'"
p27561
sba(icodemend.demo.code_suggest
Element
p27562
(dp27563
g10
I2
sg11
S''
sg12
Vplot.label.'Inverse tan'
p27564
sg14
(lp27565
sg2
S"'Inverse tan'"
p27566
sbag20788
ag25100
a(icodemend.demo.code_suggest
Element
p27567
(dp27568
g10
I2
sg11
S''
sg12
Vplot.label.'Line'
p27569
sg14
(lp27570
sg2
S"'Line'"
p27571
sbag21248
a(icodemend.demo.code_suggest
Element
p27572
(dp27573
g10
I2
sg11
S''
sg12
Vplot.label.'Sine'
p27574
sg14
(lp27575
sg2
S"'Sine'"
p27576
sba(icodemend.demo.code_suggest
Element
p27577
(dp27578
g10
I2
sg11
S''
sg12
Vplot.label.'Test'
p27579
sg14
(lp27580
sg2
S"'Test'"
p27581
sba(icodemend.demo.code_suggest
Element
p27582
(dp27583
g10
I2
sg11
S''
sg12
Vplot.label.'Total %'
p27584
sg14
(lp27585
sg2
S"'Total %'"
p27586
sba(icodemend.demo.code_suggest
Element
p27587
(dp27588
g10
I2
sg11
S''
sg12
Vplot.label.'V_t'
p27589
sg14
(lp27590
sg2
S"'V_t'"
p27591
sba(icodemend.demo.code_suggest
Element
p27592
(dp27593
g10
I2
sg11
S''
sg12
Vplot.label.'V_terror'
p27594
sg14
(lp27595
sg2
S"'V_terror'"
p27596
sba(icodemend.demo.code_suggest
Element
p27597
(dp27598
g10
I2
sg11
S''
sg12
Vplot.label.'Variance'
p27599
sg14
(lp27600
sg2
S"'Variance'"
p27601
sba(icodemend.demo.code_suggest
Element
p27602
(dp27603
g10
I2
sg11
S''
sg12
Vplot.label.'all data'
p27604
sg14
(lp27605
sg2
S"'all data'"
p27606
sba(icodemend.demo.code_suggest
Element
p27607
(dp27608
g10
I2
sg11
S''
sg12
Vplot.label.'ax2'
p27609
sg14
(lp27610
sg2
S"'ax2'"
p27611
sbag27411
ag8634
a(icodemend.demo.code_suggest
Element
p27612
(dp27613
g10
I2
sg11
S''
sg12
Vplot.label.'class2'
p27614
sg14
(lp27615
sg2
S"'class2'"
p27616
sba(icodemend.demo.code_suggest
Element
p27617
(dp27618
g10
I2
sg11
S''
sg12
Vplot.label.'data set 1'
p27619
sg14
(lp27620
sg2
S"'data set 1'"
p27621
sba(icodemend.demo.code_suggest
Element
p27622
(dp27623
g10
I2
sg11
S''
sg12
Vplot.label.'data'
p27624
sg14
(lp27625
sg2
S"'data'"
p27626
sbag11859
ag6552
a(icodemend.demo.code_suggest
Element
p27627
(dp27628
g10
I2
sg11
S''
sg12
Vplot.label.'dots 1'
p27629
sg14
(lp27630
sg2
S"'dots 1'"
p27631
sba(icodemend.demo.code_suggest
Element
p27632
(dp27633
g10
I2
sg11
S''
sg12
Vplot.label.'kde'
p27634
sg14
(lp27635
sg2
S"'kde'"
p27636
sbag13775
a(icodemend.demo.code_suggest
Element
p27637
(dp27638
g10
I2
sg11
S''
sg12
Vplot.label.'mode 01'
p27639
sg14
(lp27640
sg2
S"'mode 01'"
p27641
sba(icodemend.demo.code_suggest
Element
p27642
(dp27643
g10
I2
sg11
S''
sg12
Vplot.label.'pdf'
p27644
sg14
(lp27645
sg2
S"'pdf'"
p27646
sba(icodemend.demo.code_suggest
Element
p27647
(dp27648
g10
I2
sg11
S''
sg12
Vplot.label.'plot 1'
p27649
sg14
(lp27650
sg2
S"'plot 1'"
p27651
sba(icodemend.demo.code_suggest
Element
p27652
(dp27653
g10
I2
sg11
S''
sg12
Vplot.label.'plot 2'
p27654
sg14
(lp27655
sg2
S"'plot 2'"
p27656
sba(icodemend.demo.code_suggest
Element
p27657
(dp27658
g10
I2
sg11
S''
sg12
Vplot.label.'plot 3'
p27659
sg14
(lp27660
sg2
S"'plot 3'"
p27661
sba(icodemend.demo.code_suggest
Element
p27662
(dp27663
g10
I2
sg11
S''
sg12
Vplot.label.'plot A'
p27664
sg14
(lp27665
sg2
S"'plot A'"
p27666
sba(icodemend.demo.code_suggest
Element
p27667
(dp27668
g10
I2
sg11
S''
sg12
Vplot.label.'plot1'
p27669
sg14
(lp27670
sg2
S"'plot1'"
p27671
sba(icodemend.demo.code_suggest
Element
p27672
(dp27673
g10
I2
sg11
S''
sg12
Vplot.label.'plot2'
p27674
sg14
(lp27675
sg2
S"'plot2'"
p27676
sba(icodemend.demo.code_suggest
Element
p27677
(dp27678
g10
I2
sg11
S''
sg12
Vplot.label.'prova'
p27679
sg14
(lp27680
sg2
S"'prova'"
p27681
sba(icodemend.demo.code_suggest
Element
p27682
(dp27683
g10
I2
sg11
S''
sg12
Vplot.label.'red'
p27684
sg14
(lp27685
sg2
S"'red'"
p27686
sbag5500
a(icodemend.demo.code_suggest
Element
p27687
(dp27688
g10
I2
sg11
S''
sg12
Vplot.label.'set 1'
p27689
sg14
(lp27690
sg2
S"'set 1'"
p27691
sbag8847
a(icodemend.demo.code_suggest
Element
p27692
(dp27693
g10
I2
sg11
S''
sg12
Vplot.label.'we are negative'
p27694
sg14
(lp27695
sg2
S"'we are negative'"
p27696
sba(icodemend.demo.code_suggest
Element
p27697
(dp27698
g10
I2
sg11
S''
sg12
Vplot.label.col
p27699
sg14
(lp27700
sg2
g21314
sba(icodemend.demo.code_suggest
Element
p27701
(dp27702
g10
I2
sg11
S''
sg12
Vplot.label.colname
p27703
sg14
(lp27704
sg2
S'colname'
p27705
sba(icodemend.demo.code_suggest
Element
p27706
(dp27707
g10
I2
sg11
S''
sg12
Vplot.label.lab
p27708
sg14
(lp27709
sg2
g13734
sba(icodemend.demo.code_suggest
Element
p27710
(dp27711
g10
I2
sg11
S''
sg12
Vplot.label.temp_axis_label
p27712
sg14
(lp27713
sg2
S'temp_axis_label'
p27714
sbag20278
a(icodemend.demo.code_suggest
Element
p27715
(dp27716
g10
I2
sg11
S''
sg12
Vplot.label.u'rand'
p27717
sg14
(lp27718
sg2
S"u'rand'"
p27719
sba(icodemend.demo.code_suggest
Element
p27720
(dp27721
g10
I2
sg11
S''
sg12
Vplot.label.u'sin'
p27722
sg14
(lp27723
sg2
S"u'sin'"
p27724
sba(icodemend.demo.code_suggest
Element
p27725
(dp27726
g10
I2
sg11
S''
sg12
Vplot.label.year
p27727
sg14
(lp27728
sg2
S'year'
p27729
sba(icodemend.demo.code_suggest
Element
p27730
(dp27731
g10
I1
sg11
S''
sg12
Vplot.label."Scott's Rule"
p27732
sg14
(lp27733
sg2
S'"Scott\'s Rule"'
p27734
sba(icodemend.demo.code_suggest
Element
p27735
(dp27736
g10
I1
sg11
S''
sg12
Vplot.label."Silverman's Rule"
p27737
sg14
(lp27738
sg2
S'"Silverman\'s Rule"'
p27739
sba(icodemend.demo.code_suggest
Element
p27740
(dp27741
g10
I1
sg11
S''
sg12
Vplot.label.' '
p27742
sg14
(lp27743
sg2
S"' '"
p27744
sba(icodemend.demo.code_suggest
Element
p27745
(dp27746
g10
I1
sg11
S''
sg12
Vplot.label.' Cdc2 nulcline'
p27747
sg14
(lp27748
sg2
S"' Cdc2 nulcline'"
p27749
sba(icodemend.demo.code_suggest
Element
p27750
(dp27751
g10
I1
sg11
S''
sg12
Vplot.label.'$H_2O$'
p27752
sg14
(lp27753
sg2
S"'$H_2O$'"
p27754
sba(icodemend.demo.code_suggest
Element
p27755
(dp27756
g10
I1
sg11
S''
sg12
Vplot.label.'$\u005c\u005csin (x)$'
p27757
sg14
(lp27758
sg2
S"'$\\\\sin (x)$'"
p27759
sba(icodemend.demo.code_suggest
Element
p27760
(dp27761
g10
I1
sg11
S''
sg12
Vplot.label.'$f(x)=\u005c\u005clog(x)$'
p27762
sg14
(lp27763
sg2
S"'$f(x)=\\\\log(x)$'"
p27764
sba(icodemend.demo.code_suggest
Element
p27765
(dp27766
g10
I1
sg11
S''
sg12
Vplot.label.'$f(x)=e^x$'
p27767
sg14
(lp27768
sg2
S"'$f(x)=e^x$'"
p27769
sba(icodemend.demo.code_suggest
Element
p27770
(dp27771
g10
I1
sg11
S''
sg12
Vplot.label.'$f(x)=x$'
p27772
sg14
(lp27773
sg2
S"'$f(x)=x$'"
p27774
sba(icodemend.demo.code_suggest
Element
p27775
(dp27776
g10
I1
sg11
S''
sg12
Vplot.label.'$q^{-0/4}$'
p27777
sg14
(lp27778
sg2
S"'$q^{-0.4}$'"
p27779
sba(icodemend.demo.code_suggest
Element
p27780
(dp27781
g10
I1
sg11
S''
sg12
Vplot.label.'$y=3x$'
p27782
sg14
(lp27783
sg2
S"'$y=3x$'"
p27784
sba(icodemend.demo.code_suggest
Element
p27785
(dp27786
g10
I1
sg11
S''
sg12
Vplot.label.'$y=x$'
p27787
sg14
(lp27788
sg2
S"'$y=x$'"
p27789
sba(icodemend.demo.code_suggest
Element
p27790
(dp27791
g10
I1
sg11
S''
sg12
Vplot.label.''
p27792
sg14
(lp27793
sg2
S"''"
p27794
sba(icodemend.demo.code_suggest
Element
p27795
(dp27796
g10
I1
sg11
S''
sg12
Vplot.label.'10 Deg Poly'
p27797
sg14
(lp27798
sg2
S"'10 Deg Poly'"
p27799
sba(icodemend.demo.code_suggest
Element
p27800
(dp27801
g10
I1
sg11
S''
sg12
Vplot.label.'150 Day SMA'
p27802
sg14
(lp27803
sg2
S"'150 Day SMA'"
p27804
sbag21125
a(icodemend.demo.code_suggest
Element
p27805
(dp27806
g10
I1
sg11
S''
sg12
Vplot.label.'3rd and 4th lines'
p27807
sg14
(lp27808
sg2
S"'3rd and 4th lines'"
p27809
sba(icodemend.demo.code_suggest
Element
p27810
(dp27811
g10
I1
sg11
S''
sg12
Vplot.label.'68% conf limits'
p27812
sg14
(lp27813
sg2
S"'68% conf limits'"
p27814
sba(icodemend.demo.code_suggest
Element
p27815
(dp27816
g10
I1
sg11
S''
sg12
Vplot.label.'95% Confidence Limits'
p27817
sg14
(lp27818
sg2
S"'95% Confidence Limits'"
p27819
sba(icodemend.demo.code_suggest
Element
p27820
(dp27821
g10
I1
sg11
S''
sg12
Vplot.label.'95% Prediction Limits'
p27822
sg14
(lp27823
sg2
S"'95% Prediction Limits'"
p27824
sba(icodemend.demo.code_suggest
Element
p27825
(dp27826
g10
I1
sg11
S''
sg12
Vplot.label.'A calculated'
p27827
sg14
(lp27828
sg2
S"'A calculated'"
p27829
sba(icodemend.demo.code_suggest
Element
p27830
(dp27831
g10
I1
sg11
S''
sg12
Vplot.label.'A simulated'
p27832
sg14
(lp27833
sg2
S"'A simulated'"
p27834
sbag17847
ag15411
a(icodemend.demo.code_suggest
Element
p27835
(dp27836
g10
I1
sg11
S''
sg12
Vplot.label.'Algebra'
p27837
sg14
(lp27838
sg2
S"'Algebra'"
p27839
sba(icodemend.demo.code_suggest
Element
p27840
(dp27841
g10
I1
sg11
S''
sg12
Vplot.label.'Apples'
p27842
sg14
(lp27843
sg2
S"'Apples'"
p27844
sba(icodemend.demo.code_suggest
Element
p27845
(dp27846
g10
I1
sg11
S''
sg12
Vplot.label.'Average'
p27847
sg14
(lp27848
sg2
S"'Average'"
p27849
sbag241
a(icodemend.demo.code_suggest
Element
p27850
(dp27851
g10
I1
sg11
S''
sg12
Vplot.label.'Class 1'
p27852
sg14
(lp27853
sg2
S"'Class 1'"
p27854
sba(icodemend.demo.code_suggest
Element
p27855
(dp27856
g10
I1
sg11
S''
sg12
Vplot.label.'Class 2'
p27857
sg14
(lp27858
sg2
S"'Class 2'"
p27859
sba(icodemend.demo.code_suggest
Element
p27860
(dp27861
g10
I1
sg11
S''
sg12
Vplot.label.'Close'
p27862
sg14
(lp27863
sg2
S"'Close'"
p27864
sbag23286
ag24838
ag2989
a(icodemend.demo.code_suggest
Element
p27865
(dp27866
g10
I1
sg11
S''
sg12
Vplot.label.'DGP normal'
p27867
sg14
(lp27868
sg2
S"'DGP normal'"
p27869
sba(icodemend.demo.code_suggest
Element
p27870
(dp27871
g10
I1
sg11
S''
sg12
Vplot.label.'Data Series'
p27872
sg14
(lp27873
sg2
S"'Data Series'"
p27874
sbag5082
a(icodemend.demo.code_suggest
Element
p27875
(dp27876
g10
I1
sg11
S''
sg12
Vplot.label.'Down'
p27877
sg14
(lp27878
sg2
S"'Down'"
p27879
sbag15623
a(icodemend.demo.code_suggest
Element
p27880
(dp27881
g10
I1
sg11
S''
sg12
Vplot.label.'Exp Fit'
p27882
sg14
(lp27883
sg2
S"'Exp Fit'"
p27884
sba(icodemend.demo.code_suggest
Element
p27885
(dp27886
g10
I1
sg11
S''
sg12
Vplot.label.'Fit'
p27887
sg14
(lp27888
sg2
S"'Fit'"
p27889
sba(icodemend.demo.code_suggest
Element
p27890
(dp27891
g10
I1
sg11
S''
sg12
Vplot.label.'Fitted Model'
p27892
sg14
(lp27893
sg2
S"'Fitted Model'"
p27894
sba(icodemend.demo.code_suggest
Element
p27895
(dp27896
g10
I1
sg11
S''
sg12
Vplot.label.'Fitted data'
p27897
sg14
(lp27898
sg2
S"'Fitted data'"
p27899
sba(icodemend.demo.code_suggest
Element
p27900
(dp27901
g10
I1
sg11
S''
sg12
Vplot.label.'Fitted line'
p27902
sg14
(lp27903
sg2
S"'Fitted line'"
p27904
sba(icodemend.demo.code_suggest
Element
p27905
(dp27906
g10
I1
sg11
S''
sg12
Vplot.label.'Gaussian noise'
p27907
sg14
(lp27908
sg2
S"'Gaussian noise'"
p27909
sba(icodemend.demo.code_suggest
Element
p27910
(dp27911
g10
I1
sg11
S''
sg12
Vplot.label.'Godzilla'
p27912
sg14
(lp27913
sg2
S"'Godzilla'"
p27914
sba(icodemend.demo.code_suggest
Element
p27915
(dp27916
g10
I1
sg11
S''
sg12
Vplot.label.'Graph1'
p27917
sg14
(lp27918
sg2
S"'Graph1'"
p27919
sba(icodemend.demo.code_suggest
Element
p27920
(dp27921
g10
I1
sg11
S''
sg12
Vplot.label.'H2O'
p27922
sg14
(lp27923
sg2
S"'H2O'"
p27924
sba(icodemend.demo.code_suggest
Element
p27925
(dp27926
g10
I1
sg11
S''
sg12
Vplot.label.'HAlpha'
p27927
sg14
(lp27928
sg2
S"'HAlpha'"
p27929
sba(icodemend.demo.code_suggest
Element
p27930
(dp27931
g10
I1
sg11
S''
sg12
Vplot.label.'HEIGHT'
p27932
sg14
(lp27933
sg2
S"'HEIGHT'"
p27934
sbag794
a(icodemend.demo.code_suggest
Element
p27935
(dp27936
g10
I1
sg11
S''
sg12
Vplot.label.'Height'
p27937
sg14
(lp27938
sg2
S"'Height'"
p27939
sba(icodemend.demo.code_suggest
Element
p27940
(dp27941
g10
I1
sg11
S''
sg12
Vplot.label.'Hi'
p27942
sg14
(lp27943
sg2
S"'Hi'"
p27944
sba(icodemend.demo.code_suggest
Element
p27945
(dp27946
g10
I1
sg11
S''
sg12
Vplot.label.'HiHi'
p27947
sg14
(lp27948
sg2
S"'HiHi'"
p27949
sbag24642
a(icodemend.demo.code_suggest
Element
p27950
(dp27951
g10
I1
sg11
S''
sg12
Vplot.label.'L1'
p27952
sg14
(lp27953
sg2
S"'L1'"
p27954
sba(icodemend.demo.code_suggest
Element
p27955
(dp27956
g10
I1
sg11
S''
sg12
Vplot.label.'L2'
p27957
sg14
(lp27958
sg2
S"'L2'"
p27959
sbag4972
a(icodemend.demo.code_suggest
Element
p27960
(dp27961
g10
I1
sg11
S''
sg12
Vplot.label.'Latitude = -20'
p27962
sg14
(lp27963
sg2
S"'Latitude = -20'"
p27964
sba(icodemend.demo.code_suggest
Element
p27965
(dp27966
g10
I1
sg11
S''
sg12
Vplot.label.'Latitude = 0'
p27967
sg14
(lp27968
sg2
S"'Latitude = 0'"
p27969
sba(icodemend.demo.code_suggest
Element
p27970
(dp27971
g10
I1
sg11
S''
sg12
Vplot.label.'Latitude = 20'
p27972
sg14
(lp27973
sg2
S"'Latitude = 20'"
p27974
sba(icodemend.demo.code_suggest
Element
p27975
(dp27976
g10
I1
sg11
S''
sg12
Vplot.label.'Line 3'
p27977
sg14
(lp27978
sg2
S"'Line 3'"
p27979
sba(icodemend.demo.code_suggest
Element
p27980
(dp27981
g10
I1
sg11
S''
sg12
Vplot.label.'Line 4'
p27982
sg14
(lp27983
sg2
S"'Line 4'"
p27984
sbag18473
a(icodemend.demo.code_suggest
Element
p27985
(dp27986
g10
I1
sg11
S''
sg12
Vplot.label.'LoLo'
p27987
sg14
(lp27988
sg2
S"'LoLo'"
p27989
sba(icodemend.demo.code_suggest
Element
p27990
(dp27991
g10
I1
sg11
S''
sg12
Vplot.label.'Low Outlier'
p27992
sg14
(lp27993
sg2
S"'Low Outlier'"
p27994
sba(icodemend.demo.code_suggest
Element
p27995
(dp27996
g10
I1
sg11
S''
sg12
Vplot.label.'Mean of 20'
p27997
sg14
(lp27998
sg2
S"'Mean of 20'"
p27999
sbag13115
a(icodemend.demo.code_suggest
Element
p28000
(dp28001
g10
I1
sg11
S''
sg12
Vplot.label.'MyLabel'
p28002
sg14
(lp28003
sg2
S"'MyLabel'"
p28004
sba(icodemend.demo.code_suggest
Element
p28005
(dp28006
g10
I1
sg11
S''
sg12
Vplot.label.'New'
p28007
sg14
(lp28008
sg2
S"'New'"
p28009
sba(icodemend.demo.code_suggest
Element
p28010
(dp28011
g10
I1
sg11
S''
sg12
Vplot.label.'Null'
p28012
sg14
(lp28013
sg2
S"'Null'"
p28014
sba(icodemend.demo.code_suggest
Element
p28015
(dp28016
g10
I1
sg11
S''
sg12
Vplot.label.'OR'
p28017
sg14
(lp28018
sg2
S"'OR'"
p28019
sbag4966
a(icodemend.demo.code_suggest
Element
p28020
(dp28021
g10
I1
sg11
S''
sg12
Vplot.label.'Observed Values'
p28022
sg14
(lp28023
sg2
S"'Observed Values'"
p28024
sba(icodemend.demo.code_suggest
Element
p28025
(dp28026
g10
I1
sg11
S''
sg12
Vplot.label.'Oranges'
p28027
sg14
(lp28028
sg2
S"'Oranges'"
p28029
sba(icodemend.demo.code_suggest
Element
p28030
(dp28031
g10
I1
sg11
S''
sg12
Vplot.label.'Point 1'
p28032
sg14
(lp28033
sg2
S"'Point 1'"
p28034
sbag121
a(icodemend.demo.code_suggest
Element
p28035
(dp28036
g10
I1
sg11
S''
sg12
Vplot.label.'Points'
p28037
sg14
(lp28038
sg2
S"'Points'"
p28039
sba(icodemend.demo.code_suggest
Element
p28040
(dp28041
g10
I1
sg11
S''
sg12
Vplot.label.'Predicted Model'
p28042
sg14
(lp28043
sg2
S"'Predicted Model'"
p28044
sbag12096
ag5688
a(icodemend.demo.code_suggest
Element
p28045
(dp28046
g10
I1
sg11
S''
sg12
Vplot.label.'Random guess'
p28047
sg14
(lp28048
sg2
S"'Random guess'"
p28049
sba(icodemend.demo.code_suggest
Element
p28050
(dp28051
g10
I1
sg11
S''
sg12
Vplot.label.'ScalarMappable'
p28052
sg14
(lp28053
sg2
S"'ScalarMappable'"
p28054
sba(icodemend.demo.code_suggest
Element
p28055
(dp28056
g10
I1
sg11
S''
sg12
Vplot.label.'Series A'
p28057
sg14
(lp28058
sg2
S"'Series A'"
p28059
sba(icodemend.demo.code_suggest
Element
p28060
(dp28061
g10
I1
sg11
S''
sg12
Vplot.label.'Series B'
p28062
sg14
(lp28063
sg2
S"'Series B'"
p28064
sba(icodemend.demo.code_suggest
Element
p28065
(dp28066
g10
I1
sg11
S''
sg12
Vplot.label.'Short label'
p28067
sg14
(lp28068
sg2
S"'Short label'"
p28069
sba(icodemend.demo.code_suggest
Element
p28070
(dp28071
g10
I1
sg11
S''
sg12
Vplot.label.'Simulation'
p28072
sg14
(lp28073
sg2
S"'Simulation'"
p28074
sba(icodemend.demo.code_suggest
Element
p28075
(dp28076
g10
I1
sg11
S''
sg12
Vplot.label.'SinH'
p28077
sg14
(lp28078
sg2
S"'SinH'"
p28079
sbag905
a(icodemend.demo.code_suggest
Element
p28080
(dp28081
g10
I1
sg11
S''
sg12
Vplot.label.'Some very long label'
p28082
sg14
(lp28083
sg2
S"'Some very long label'"
p28084
sba(icodemend.demo.code_suggest
Element
p28085
(dp28086
g10
I1
sg11
S''
sg12
Vplot.label.'Sorted'
p28087
sg14
(lp28088
sg2
S"'Sorted'"
p28089
sbag18433
a(icodemend.demo.code_suggest
Element
p28090
(dp28091
g10
I1
sg11
S''
sg12
Vplot.label.'Stepped Parity 32-bit'
p28092
sg14
(lp28093
sg2
S"'Stepped Parity 32-bit'"
p28094
sba(icodemend.demo.code_suggest
Element
p28095
(dp28096
g10
I1
sg11
S''
sg12
Vplot.label.'Tanh'
p28097
sg14
(lp28098
sg2
S"'Tanh'"
p28099
sba(icodemend.demo.code_suggest
Element
p28100
(dp28101
g10
I1
sg11
S''
sg12
Vplot.label.'Taylor'
p28102
sg14
(lp28103
sg2
S"'Taylor'"
p28104
sba(icodemend.demo.code_suggest
Element
p28105
(dp28106
g10
I1
sg11
S''
sg12
Vplot.label.'Tennis'
p28107
sg14
(lp28108
sg2
S"'Tennis'"
p28109
sba(icodemend.demo.code_suggest
Element
p28110
(dp28111
g10
I1
sg11
S''
sg12
Vplot.label.'Test Plot'
p28112
sg14
(lp28113
sg2
S"'Test Plot'"
p28114
sba(icodemend.demo.code_suggest
Element
p28115
(dp28116
g10
I1
sg11
S''
sg12
Vplot.label.'Test data'
p28117
sg14
(lp28118
sg2
S"'Test data'"
p28119
sba(icodemend.demo.code_suggest
Element
p28120
(dp28121
g10
I1
sg11
S''
sg12
Vplot.label.'This is \u005c\u005ctextbf{line 1}'
p28122
sg14
(lp28123
sg2
S"'This is \\\\textbf{line 1}'"
p28124
sbag12257
a(icodemend.demo.code_suggest
Element
p28125
(dp28126
g10
I1
sg11
S''
sg12
Vplot.label.'True Model'
p28127
sg14
(lp28128
sg2
S"'True Model'"
p28129
sba(icodemend.demo.code_suggest
Element
p28130
(dp28131
g10
I1
sg11
S''
sg12
Vplot.label.'Unsorted'
p28132
sg14
(lp28133
sg2
S"'Unsorted'"
p28134
sbag20929
a(icodemend.demo.code_suggest
Element
p28135
(dp28136
g10
I1
sg11
S''
sg12
Vplot.label.'VWAP'
p28137
sg14
(lp28138
sg2
S"'VWAP'"
p28139
sba(icodemend.demo.code_suggest
Element
p28140
(dp28141
g10
I1
sg11
S''
sg12
Vplot.label.'Voltage (AC)'
p28142
sg14
(lp28143
sg2
S"'Voltage (AC)'"
p28144
sba(icodemend.demo.code_suggest
Element
p28145
(dp28146
g10
I1
sg11
S''
sg12
Vplot.label.'WEIGHT'
p28147
sg14
(lp28148
sg2
S"'WEIGHT'"
p28149
sba(icodemend.demo.code_suggest
Element
p28150
(dp28151
g10
I1
sg11
S''
sg12
Vplot.label.'Wee1 nulcline'
p28152
sg14
(lp28153
sg2
S"'Wee1 nulcline'"
p28154
sba(icodemend.demo.code_suggest
Element
p28155
(dp28156
g10
I1
sg11
S''
sg12
Vplot.label.'XOR'
p28157
sg14
(lp28158
sg2
S"'XOR'"
p28159
sbag20879
ag20315
a(icodemend.demo.code_suggest
Element
p28160
(dp28161
g10
I1
sg11
S''
sg12
Vplot.label.'aErr < bErr'
p28162
sg14
(lp28163
sg2
S"'aErr < bErr'"
p28164
sba(icodemend.demo.code_suggest
Element
p28165
(dp28166
g10
I1
sg11
S''
sg12
Vplot.label.'aVal'
p28167
sg14
(lp28168
sg2
S"'aVal'"
p28169
sba(icodemend.demo.code_suggest
Element
p28170
(dp28171
g10
I1
sg11
S''
sg12
Vplot.label.'absolute concentration'
p28172
sg14
(lp28173
sg2
S"'absolute concentration'"
p28174
sba(icodemend.demo.code_suggest
Element
p28175
(dp28176
g10
I1
sg11
S''
sg12
Vplot.label.'another test'
p28177
sg14
(lp28178
sg2
S"'another test'"
p28179
sbag24546
ag13147
a(icodemend.demo.code_suggest
Element
p28180
(dp28181
g10
I1
sg11
S''
sg12
Vplot.label.'axR'
p28182
sg14
(lp28183
sg2
S"'axR'"
p28184
sba(icodemend.demo.code_suggest
Element
p28185
(dp28186
g10
I1
sg11
S''
sg12
Vplot.label.'bVal'
p28187
sg14
(lp28188
sg2
S"'bVal'"
p28189
sbag21113
ag20532
a(icodemend.demo.code_suggest
Element
p28190
(dp28191
g10
I1
sg11
S''
sg12
Vplot.label.'black'
p28192
sg14
(lp28193
sg2
S"'black'"
p28194
sba(icodemend.demo.code_suggest
Element
p28195
(dp28196
g10
I1
sg11
S''
sg12
Vplot.label.'blue line'
p28197
sg14
(lp28198
sg2
S"'blue line'"
p28199
sba(icodemend.demo.code_suggest
Element
p28200
(dp28201
g10
I1
sg11
S''
sg12
Vplot.label.'blue'
p28202
sg14
(lp28203
sg2
S"'blue'"
p28204
sba(icodemend.demo.code_suggest
Element
p28205
(dp28206
g10
I1
sg11
S''
sg12
Vplot.label.'cos'
p28207
sg14
(lp28208
sg2
S"'cos'"
p28209
sba(icodemend.demo.code_suggest
Element
p28210
(dp28211
g10
I1
sg11
S''
sg12
Vplot.label.'cos(X)'
p28212
sg14
(lp28213
sg2
S"'cos(X)'"
p28214
sba(icodemend.demo.code_suggest
Element
p28215
(dp28216
g10
I1
sg11
S''
sg12
Vplot.label.'cosine'
p28217
sg14
(lp28218
sg2
S"'cosine'"
p28219
sba(icodemend.demo.code_suggest
Element
p28220
(dp28221
g10
I1
sg11
S''
sg12
Vplot.label.'data3'
p28222
sg14
(lp28223
sg2
S"'data3'"
p28224
sbag16791
a(icodemend.demo.code_suggest
Element
p28225
(dp28226
g10
I1
sg11
S''
sg12
Vplot.label.'derivative of --'
p28227
sg14
(lp28228
sg2
S"'derivative of --'"
p28229
sba(icodemend.demo.code_suggest
Element
p28230
(dp28231
g10
I1
sg11
S''
sg12
Vplot.label.'desc'
p28232
sg14
(lp28233
sg2
S"'desc'"
p28234
sba(icodemend.demo.code_suggest
Element
p28235
(dp28236
g10
I1
sg11
S''
sg12
Vplot.label.'dots 2'
p28237
sg14
(lp28238
sg2
S"'dots 2'"
p28239
sba(icodemend.demo.code_suggest
Element
p28240
(dp28241
g10
I1
sg11
S''
sg12
Vplot.label.'dots'
p28242
sg14
(lp28243
sg2
S"'dots'"
p28244
sbag6134
a(icodemend.demo.code_suggest
Element
p28245
(dp28246
g10
I1
sg11
S''
sg12
Vplot.label.'dummy-tophead'
p28247
sg14
(lp28248
sg2
S"'dummy-tophead'"
p28249
sba(icodemend.demo.code_suggest
Element
p28250
(dp28251
g10
I1
sg11
S''
sg12
Vplot.label.'estimated sample data'
p28252
sg14
(lp28253
sg2
S"'estimated sample data'"
p28254
sba(icodemend.demo.code_suggest
Element
p28255
(dp28256
g10
I1
sg11
S''
sg12
Vplot.label.'example'
p28257
sg14
(lp28258
sg2
S"'example'"
p28259
sbag8621
a(icodemend.demo.code_suggest
Element
p28260
(dp28261
g10
I1
sg11
S''
sg12
Vplot.label.'first 2 lines'
p28262
sg14
(lp28263
sg2
S"'first 2 lines'"
p28264
sba(icodemend.demo.code_suggest
Element
p28265
(dp28266
g10
I1
sg11
S''
sg12
Vplot.label.'first'
p28267
sg14
(lp28268
sg2
S"'first'"
p28269
sba(icodemend.demo.code_suggest
Element
p28270
(dp28271
g10
I1
sg11
S''
sg12
Vplot.label.'foo bar'
p28272
sg14
(lp28273
sg2
S"'foo bar'"
p28274
sba(icodemend.demo.code_suggest
Element
p28275
(dp28276
g10
I1
sg11
S''
sg12
Vplot.label.'foo'
p28277
sg14
(lp28278
sg2
S"'foo'"
p28279
sba(icodemend.demo.code_suggest
Element
p28280
(dp28281
g10
I1
sg11
S''
sg12
Vplot.label.'full results'
p28282
sg14
(lp28283
sg2
S"'full results'"
p28284
sba(icodemend.demo.code_suggest
Element
p28285
(dp28286
g10
I1
sg11
S''
sg12
Vplot.label.'green'
p28287
sg14
(lp28288
sg2
S"'green'"
p28289
sba(icodemend.demo.code_suggest
Element
p28290
(dp28291
g10
I1
sg11
S''
sg12
Vplot.label.'gumbel scale=1'
p28292
sg14
(lp28293
sg2
S"'gumbel scale=1'"
p28294
sba(icodemend.demo.code_suggest
Element
p28295
(dp28296
g10
I1
sg11
S''
sg12
Vplot.label.'hist 1'
p28297
sg14
(lp28298
sg2
S"'hist 1'"
p28299
sba(icodemend.demo.code_suggest
Element
p28300
(dp28301
g10
I1
sg11
S''
sg12
Vplot.label.'hist 2'
p28302
sg14
(lp28303
sg2
S"'hist 2'"
p28304
sba(icodemend.demo.code_suggest
Element
p28305
(dp28306
g10
I1
sg11
S''
sg12
Vplot.label.'infected'
p28307
sg14
(lp28308
sg2
S"'infected'"
p28309
sba(icodemend.demo.code_suggest
Element
p28310
(dp28311
g10
I1
sg11
S''
sg12
Vplot.label.'l1'
p28312
sg14
(lp28313
sg2
S"'l1'"
p28314
sba(icodemend.demo.code_suggest
Element
p28315
(dp28316
g10
I1
sg11
S''
sg12
Vplot.label.'l2'
p28317
sg14
(lp28318
sg2
S"'l2'"
p28319
sba(icodemend.demo.code_suggest
Element
p28320
(dp28321
g10
I1
sg11
S''
sg12
Vplot.label.'laplace scale=1, loc = 0'
p28322
sg14
(lp28323
sg2
S"'laplace scale=1, loc = 0'"
p28324
sba(icodemend.demo.code_suggest
Element
p28325
(dp28326
g10
I1
sg11
S''
sg12
Vplot.label.'line 1'
p28327
sg14
(lp28328
sg2
S"'line 1'"
p28329
sba(icodemend.demo.code_suggest
Element
p28330
(dp28331
g10
I1
sg11
S''
sg12
Vplot.label.'line 2'
p28332
sg14
(lp28333
sg2
S"'line 2'"
p28334
sba(icodemend.demo.code_suggest
Element
p28335
(dp28336
g10
I1
sg11
S''
sg12
Vplot.label.'line'
p28337
sg14
(lp28338
sg2
S"'line'"
p28339
sba(icodemend.demo.code_suggest
Element
p28340
(dp28341
g10
I1
sg11
S''
sg12
Vplot.label.'line1'
p28342
sg14
(lp28343
sg2
S"'line1'"
p28344
sbag10923
a(icodemend.demo.code_suggest
Element
p28345
(dp28346
g10
I1
sg11
S''
sg12
Vplot.label.'linear'
p28347
sg14
(lp28348
sg2
S"'linear'"
p28349
sba(icodemend.demo.code_suggest
Element
p28350
(dp28351
g10
I1
sg11
S''
sg12
Vplot.label.'log'
p28352
sg14
(lp28353
sg2
S"'log'"
p28354
sba(icodemend.demo.code_suggest
Element
p28355
(dp28356
g10
I1
sg11
S''
sg12
Vplot.label.'logistic scale=1, loc = 0'
p28357
sg14
(lp28358
sg2
S"'logistic scale=1, loc = 0'"
p28359
sba(icodemend.demo.code_suggest
Element
p28360
(dp28361
g10
I1
sg11
S''
sg12
Vplot.label.'lognormal scale=1, loc = 0'
p28362
sg14
(lp28363
sg2
S"'lognormal scale=1, loc = 0'"
p28364
sba(icodemend.demo.code_suggest
Element
p28365
(dp28366
g10
I1
sg11
S''
sg12
Vplot.label.'lower limit'
p28367
sg14
(lp28368
sg2
S"'lower limit'"
p28369
sba(icodemend.demo.code_suggest
Element
p28370
(dp28371
g10
I1
sg11
S''
sg12
Vplot.label.'my function'
p28372
sg14
(lp28373
sg2
S"'my function'"
p28374
sba(icodemend.demo.code_suggest
Element
p28375
(dp28376
g10
I1
sg11
S''
sg12
Vplot.label.'my scatter plot'
p28377
sg14
(lp28378
sg2
S"'my scatter plot'"
p28379
sba(icodemend.demo.code_suggest
Element
p28380
(dp28381
g10
I1
sg11
S''
sg12
Vplot.label.'myplot'
p28382
sg14
(lp28383
sg2
S"'myplot'"
p28384
sba(icodemend.demo.code_suggest
Element
p28385
(dp28386
g10
I1
sg11
S''
sg12
Vplot.label.'n=20'
p28387
sg14
(lp28388
sg2
S"'n=20'"
p28389
sba(icodemend.demo.code_suggest
Element
p28390
(dp28391
g10
I1
sg11
S''
sg12
Vplot.label.'n=22'
p28392
sg14
(lp28393
sg2
S"'n=22'"
p28394
sba(icodemend.demo.code_suggest
Element
p28395
(dp28396
g10
I1
sg11
S''
sg12
Vplot.label.'normal scale=1, loc = 0'
p28397
sg14
(lp28398
sg2
S"'normal scale=1, loc = 0'"
p28399
sba(icodemend.demo.code_suggest
Element
p28400
(dp28401
g10
I1
sg11
S''
sg12
Vplot.label.'ok'
p28402
sg14
(lp28403
sg2
S"'ok'"
p28404
sba(icodemend.demo.code_suggest
Element
p28405
(dp28406
g10
I1
sg11
S''
sg12
Vplot.label.'parametric curve'
p28407
sg14
(lp28408
sg2
S"'parametric curve'"
p28409
sbag23728
a(icodemend.demo.code_suggest
Element
p28410
(dp28411
g10
I1
sg11
S''
sg12
Vplot.label.'points'
p28412
sg14
(lp28413
sg2
S"'points'"
p28414
sba(icodemend.demo.code_suggest
Element
p28415
(dp28416
g10
I1
sg11
S''
sg12
Vplot.label.'python'
p28417
sg14
(lp28418
sg2
S"'python'"
p28419
sba(icodemend.demo.code_suggest
Element
p28420
(dp28421
g10
I1
sg11
S''
sg12
Vplot.label.'randNxy'
p28422
sg14
(lp28423
sg2
S"'randNxy'"
p28424
sba(icodemend.demo.code_suggest
Element
p28425
(dp28426
g10
I1
sg11
S''
sg12
Vplot.label.'randNzw'
p28427
sg14
(lp28428
sg2
S"'randNzw'"
p28429
sba(icodemend.demo.code_suggest
Element
p28430
(dp28431
g10
I1
sg11
S''
sg12
Vplot.label.'randn'
p28432
sg14
(lp28433
sg2
S"'randn'"
p28434
sba(icodemend.demo.code_suggest
Element
p28435
(dp28436
g10
I1
sg11
S''
sg12
Vplot.label.'rayleigh scale=1'
p28437
sg14
(lp28438
sg2
S"'rayleigh scale=1'"
p28439
sbag23325
a(icodemend.demo.code_suggest
Element
p28440
(dp28441
g10
I1
sg11
S''
sg12
Vplot.label.'red cos(x)'
p28442
sg14
(lp28443
sg2
S"'red cos(x)'"
p28444
sbag26952
ag17342
a(icodemend.demo.code_suggest
Element
p28445
(dp28446
g10
I1
sg11
S''
sg12
Vplot.label.'sample1'
p28447
sg14
(lp28448
sg2
S"'sample1'"
p28449
sbag21158
a(icodemend.demo.code_suggest
Element
p28450
(dp28451
g10
I1
sg11
S''
sg12
Vplot.label.'series name'
p28452
sg14
(lp28453
sg2
S"'series name'"
p28454
sba(icodemend.demo.code_suggest
Element
p28455
(dp28456
g10
I1
sg11
S''
sg12
Vplot.label.'set 2'
p28457
sg14
(lp28458
sg2
S"'set 2'"
p28459
sba(icodemend.demo.code_suggest
Element
p28460
(dp28461
g10
I1
sg11
S''
sg12
Vplot.label.'short'
p28462
sg14
(lp28463
sg2
S"'short'"
p28464
sba(icodemend.demo.code_suggest
Element
p28465
(dp28466
g10
I1
sg11
S''
sg12
Vplot.label.'sin'
p28467
sg14
(lp28468
sg2
S"'sin'"
p28469
sbag27394
a(icodemend.demo.code_suggest
Element
p28470
(dp28471
g10
I1
sg11
S''
sg12
Vplot.label.'sin(x)/x'
p28472
sg14
(lp28473
sg2
S"'sin(x)/x'"
p28474
sbag22699
a(icodemend.demo.code_suggest
Element
p28475
(dp28476
g10
I1
sg11
S''
sg12
Vplot.label.'some label'
p28477
sg14
(lp28478
sg2
S"'some label'"
p28479
sbag10961
a(icodemend.demo.code_suggest
Element
p28480
(dp28481
g10
I1
sg11
S''
sg12
Vplot.label.'square'
p28482
sg14
(lp28483
sg2
S"'square'"
p28484
sba(icodemend.demo.code_suggest
Element
p28485
(dp28486
g10
I1
sg11
S''
sg12
Vplot.label.'standard_cauchy'
p28487
sg14
(lp28488
sg2
S"'standard_cauchy'"
p28489
sbag24950
a(icodemend.demo.code_suggest
Element
p28490
(dp28491
g10
I1
sg11
S''
sg12
Vplot.label.'susceptible'
p28492
sg14
(lp28493
sg2
S"'susceptible'"
p28494
sba(icodemend.demo.code_suggest
Element
p28495
(dp28496
g10
I1
sg11
S''
sg12
Vplot.label.'t = 25'
p28497
sg14
(lp28498
sg2
S"'t = 25'"
p28499
sba(icodemend.demo.code_suggest
Element
p28500
(dp28501
g10
I1
sg11
S''
sg12
Vplot.label.'t = 50'
p28502
sg14
(lp28503
sg2
S"'t = 50'"
p28504
sba(icodemend.demo.code_suggest
Element
p28505
(dp28506
g10
I1
sg11
S''
sg12
Vplot.label.'t = 500'
p28507
sg14
(lp28508
sg2
S"'t = 500'"
p28509
sba(icodemend.demo.code_suggest
Element
p28510
(dp28511
g10
I1
sg11
S''
sg12
Vplot.label.'test label'
p28512
sg14
(lp28513
sg2
S"'test label'"
p28514
sba(icodemend.demo.code_suggest
Element
p28515
(dp28516
g10
I1
sg11
S''
sg12
Vplot.label.'the interpolation'
p28517
sg14
(lp28518
sg2
S"'the interpolation'"
p28519
sba(icodemend.demo.code_suggest
Element
p28520
(dp28521
g10
I1
sg11
S''
sg12
Vplot.label.'thin blue line'
p28522
sg14
(lp28523
sg2
S"'thin blue line'"
p28524
sba(icodemend.demo.code_suggest
Element
p28525
(dp28526
g10
I1
sg11
S''
sg12
Vplot.label.'thin red line'
p28527
sg14
(lp28528
sg2
S"'thin red line'"
p28529
sba(icodemend.demo.code_suggest
Element
p28530
(dp28531
g10
I1
sg11
S''
sg12
Vplot.label.'third'
p28532
sg14
(lp28533
sg2
S"'third'"
p28534
sba(icodemend.demo.code_suggest
Element
p28535
(dp28536
g10
I1
sg11
S''
sg12
Vplot.label.'time'
p28537
sg14
(lp28538
sg2
S"'time'"
p28539
sba(icodemend.demo.code_suggest
Element
p28540
(dp28541
g10
I1
sg11
S''
sg12
Vplot.label.'upper limit'
p28542
sg14
(lp28543
sg2
S"'upper limit'"
p28544
sba(icodemend.demo.code_suggest
Element
p28545
(dp28546
g10
I1
sg11
S''
sg12
Vplot.label.'vertices'
p28547
sg14
(lp28548
sg2
S"'vertices'"
p28549
sba(icodemend.demo.code_suggest
Element
p28550
(dp28551
g10
I1
sg11
S''
sg12
Vplot.label.'x'
p28552
sg14
(lp28553
sg2
S"'x'"
p28554
sba(icodemend.demo.code_suggest
Element
p28555
(dp28556
g10
I1
sg11
S''
sg12
Vplot.label.'x-vel'
p28557
sg14
(lp28558
sg2
S"'x-vel'"
p28559
sbag5094
a(icodemend.demo.code_suggest
Element
p28560
(dp28561
g10
I1
sg11
S''
sg12
Vplot.label.'x2'
p28562
sg14
(lp28563
sg2
S"'x2'"
p28564
sbag16633
a(icodemend.demo.code_suggest
Element
p28565
(dp28566
g10
I1
sg11
S''
sg12
Vplot.label.'x_A'
p28567
sg14
(lp28568
sg2
S"'x_A'"
p28569
sba(icodemend.demo.code_suggest
Element
p28570
(dp28571
g10
I1
sg11
S''
sg12
Vplot.label.'y = x^2'
p28572
sg14
(lp28573
sg2
S"'y = x^2'"
p28574
sba(icodemend.demo.code_suggest
Element
p28575
(dp28576
g10
I1
sg11
S''
sg12
Vplot.label.'y = x^3'
p28577
sg14
(lp28578
sg2
S"'y = x^3'"
p28579
sba(icodemend.demo.code_suggest
Element
p28580
(dp28581
g10
I1
sg11
S''
sg12
Vplot.label.'y-vel'
p28582
sg14
(lp28583
sg2
S"'y-vel'"
p28584
sba(icodemend.demo.code_suggest
Element
p28585
(dp28586
g10
I1
sg11
S''
sg12
Vplot.label.'ys=0, zdir=z'
p28587
sg14
(lp28588
sg2
S"'ys=0, zdir=z'"
p28589
sba(icodemend.demo.code_suggest
Element
p28590
(dp28591
g10
I1
sg11
S''
sg12
Vplot.label.'z-vel'
p28592
sg14
(lp28593
sg2
S"'z-vel'"
p28594
sba(icodemend.demo.code_suggest
Element
p28595
(dp28596
g10
I1
sg11
S''
sg12
Vplot.label.'zs=0, zdir=z'
p28597
sg14
(lp28598
sg2
S"'zs=0, zdir=z'"
p28599
sba(icodemend.demo.code_suggest
Element
p28600
(dp28601
g10
I1
sg11
S''
sg12
Vplot.label.'{\u005c\u005cfootnotesize \u005c\u005c$y = x^2\u005c\u005c$}'
p28602
sg14
(lp28603
sg2
S"'{\\\\footnotesize \\\\$y = x^2\\\\$}'"
p28604
sba(icodemend.demo.code_suggest
Element
p28605
(dp28606
g10
I1
sg11
S''
sg12
Vplot.label.LABEL
p28607
sg14
(lp28608
sg2
S'LABEL'
p28609
sba(icodemend.demo.code_suggest
Element
p28610
(dp28611
g10
I1
sg11
S''
sg12
Vplot.label.YOURLABELHERE
p28612
sg14
(lp28613
sg2
S'YOURLABELHERE'
p28614
sbag27226
ag24995
a(icodemend.demo.code_suggest
Element
p28615
(dp28616
g10
I1
sg11
S''
sg12
Vplot.label.col_name
p28617
sg14
(lp28618
sg2
S'col_name'
p28619
sbag20923
a(icodemend.demo.code_suggest
Element
p28620
(dp28621
g10
I1
sg11
S''
sg12
Vplot.label.colorText
p28622
sg14
(lp28623
sg2
S'colorText'
p28624
sbag13430
a(icodemend.demo.code_suggest
Element
p28625
(dp28626
g10
I1
sg11
S''
sg12
Vplot.label.files
p28627
sg14
(lp28628
sg2
S'files'
p28629
sba(icodemend.demo.code_suggest
Element
p28630
(dp28631
g10
I1
sg11
S''
sg12
Vplot.label.group
p28632
sg14
(lp28633
sg2
S'group'
p28634
sbag16704
a(icodemend.demo.code_suggest
Element
p28635
(dp28636
g10
I1
sg11
S''
sg12
Vplot.label.somename
p28637
sg14
(lp28638
sg2
S'somename'
p28639
sba(icodemend.demo.code_suggest
Element
p28640
(dp28641
g10
I1
sg11
S''
sg12
Vplot.label.t
p28642
sg14
(lp28643
sg2
S't'
sba(icodemend.demo.code_suggest
Element
p28644
(dp28645
g10
I1
sg11
S''
sg12
Vplot.label.temp
p28646
sg14
(lp28647
sg2
S'temp'
p28648
sba(icodemend.demo.code_suggest
Element
p28649
(dp28650
g10
I1
sg11
S''
sg12
Vplot.label.title1
p28651
sg14
(lp28652
sg2
S'title1'
p28653
sba(icodemend.demo.code_suggest
Element
p28654
(dp28655
g10
I1
sg11
S''
sg12
Vplot.label.u'$1200^{\u005c\u005ccirc}C$'
p28656
sg14
(lp28657
sg2
S"u'$1200^{\\\\circ}C$'"
p28658
sba(icodemend.demo.code_suggest
Element
p28659
(dp28660
g10
I1
sg11
S''
sg12
Vplot.label.velocity_label
p28661
sg14
(lp28662
sg2
S'velocity_label'
p28663
sba(icodemend.demo.code_suggest
Element
p28664
(dp28665
g10
I1
sg11
S''
sg12
Vplot.label.y
p28666
sg14
(lp28667
sg2
S'y'
sbasg2
S'label'
p28668
sba(icodemend.demo.code_suggest
Element
p28669
(dp28670
g10
I526
sg11
S'set the color of the line'
p28671
sg12
Vplot.color
p28672
sg14
(lp28673
(icodemend.demo.code_suggest
Element
p28674
(dp28675
g10
I58
sg11
S''
sg12
Vplot.color.'r'
p28676
sg14
(lp28677
sg2
S"'r'"
p28678
sba(icodemend.demo.code_suggest
Element
p28679
(dp28680
g10
I54
sg11
S''
sg12
Vplot.color.'red'
p28681
sg14
(lp28682
sg2
S"'red'"
p28683
sba(icodemend.demo.code_suggest
Element
p28684
(dp28685
g10
I43
sg11
S''
sg12
Vplot.color.'k'
p28686
sg14
(lp28687
sg2
S"'k'"
p28688
sba(icodemend.demo.code_suggest
Element
p28689
(dp28690
g10
I40
sg11
S''
sg12
Vplot.color.'blue'
p28691
sg14
(lp28692
sg2
S"'blue'"
p28693
sba(icodemend.demo.code_suggest
Element
p28694
(dp28695
g10
I39
sg11
S''
sg12
Vplot.color.'b'
p28696
sg14
(lp28697
sg2
S"'b'"
p28698
sba(icodemend.demo.code_suggest
Element
p28699
(dp28700
g10
I31
sg11
S''
sg12
Vplot.color.'black'
p28701
sg14
(lp28702
sg2
S"'black'"
p28703
sba(icodemend.demo.code_suggest
Element
p28704
(dp28705
g10
I30
sg11
S''
sg12
Vplot.color.color
p28706
sg14
(lp28707
sg2
g132
sba(icodemend.demo.code_suggest
Element
p28708
(dp28709
g10
I25
sg11
S''
sg12
Vplot.color.'green'
p28710
sg14
(lp28711
sg2
S"'green'"
p28712
sba(icodemend.demo.code_suggest
Element
p28713
(dp28714
g10
I22
sg11
S''
sg12
Vplot.color.'g'
p28715
sg14
(lp28716
sg2
S"'g'"
p28717
sba(icodemend.demo.code_suggest
Element
p28718
(dp28719
g10
I14
sg11
S''
sg12
Vplot.color.c
p28720
sg14
(lp28721
sg2
S'c'
sbag3140
a(icodemend.demo.code_suggest
Element
p28722
(dp28723
g10
I5
sg11
S''
sg12
Vplot.color.'/75'
p28724
sg14
(lp28725
sg2
S"'.75'"
p28726
sba(icodemend.demo.code_suggest
Element
p28727
(dp28728
g10
I4
sg11
S''
sg12
Vplot.color.'w'
p28729
sg14
(lp28730
sg2
S"'w'"
p28731
sba(icodemend.demo.code_suggest
Element
p28732
(dp28733
g10
I4
sg11
S''
sg12
Vplot.color.colors
p28734
sg14
(lp28735
sg2
g7032
sba(icodemend.demo.code_suggest
Element
p28736
(dp28737
g10
I3
sg11
S''
sg12
Vplot.color.'0/5'
p28738
sg14
(lp28739
sg2
S"'0.5'"
p28740
sba(icodemend.demo.code_suggest
Element
p28741
(dp28742
g10
I3
sg11
S''
sg12
Vplot.color.'c'
p28743
sg14
(lp28744
sg2
S"'c'"
p28745
sba(icodemend.demo.code_suggest
Element
p28746
(dp28747
g10
I3
sg11
S''
sg12
Vplot.color.'gray'
p28748
sg14
(lp28749
sg2
S"'gray'"
p28750
sbag15992
a(icodemend.demo.code_suggest
Element
p28751
(dp28752
g10
I3
sg11
S''
sg12
Vplot.color.'y'
p28753
sg14
(lp28754
sg2
S"'y'"
p28755
sba(icodemend.demo.code_suggest
Element
p28756
(dp28757
g10
I3
sg11
S''
sg12
Vplot.color.(0, 0, 1)
p28758
sg14
(lp28759
sg2
S'(0, 0, 1)'
p28760
sba(icodemend.demo.code_suggest
Element
p28761
(dp28762
g10
I3
sg11
S''
sg12
Vplot.color.COLOR
p28763
sg14
(lp28764
sg2
S'COLOR'
p28765
sba(icodemend.demo.code_suggest
Element
p28766
(dp28767
g10
I2
sg11
S''
sg12
Vplot.color.'#aaaaff'
p28768
sg14
(lp28769
sg2
S"'#aaaaff'"
p28770
sba(icodemend.demo.code_suggest
Element
p28771
(dp28772
g10
I2
sg11
S''
sg12
Vplot.color.'#b9cfe7'
p28773
sg14
(lp28774
sg2
S"'#b9cfe7'"
p28775
sbag14952
ag10418
ag24597
a(icodemend.demo.code_suggest
Element
p28776
(dp28777
g10
I2
sg11
S''
sg12
Vplot.color.'forestgreen'
p28778
sg14
(lp28779
sg2
S"'forestgreen'"
p28780
sba(icodemend.demo.code_suggest
Element
p28781
(dp28782
g10
I2
sg11
S''
sg12
Vplot.color.'pink'
p28783
sg14
(lp28784
sg2
S"'pink'"
p28785
sba(icodemend.demo.code_suggest
Element
p28786
(dp28787
g10
I2
sg11
S''
sg12
Vplot.color.col
p28788
sg14
(lp28789
sg2
g21314
sba(icodemend.demo.code_suggest
Element
p28790
(dp28791
g10
I1
sg11
S''
sg12
Vplot.color.'#0066FF'
p28792
sg14
(lp28793
sg2
S"'#0066FF'"
p28794
sba(icodemend.demo.code_suggest
Element
p28795
(dp28796
g10
I1
sg11
S''
sg12
Vplot.color.'#00ff00'
p28797
sg14
(lp28798
sg2
S"'#00ff00'"
p28799
sbag12291
a(icodemend.demo.code_suggest
Element
p28800
(dp28801
g10
I1
sg11
S''
sg12
Vplot.color.'#1B2ACC'
p28802
sg14
(lp28803
sg2
S"'#1B2ACC'"
p28804
sbag21207
a(icodemend.demo.code_suggest
Element
p28805
(dp28806
g10
I1
sg11
S''
sg12
Vplot.color.'#3F7F4C'
p28807
sg14
(lp28808
sg2
S"'#3F7F4C'"
p28809
sba(icodemend.demo.code_suggest
Element
p28810
(dp28811
g10
I1
sg11
S''
sg12
Vplot.color.'#80C0FF'
p28812
sg14
(lp28813
sg2
S"'#80C0FF'"
p28814
sba(icodemend.demo.code_suggest
Element
p28815
(dp28816
g10
I1
sg11
S''
sg12
Vplot.color.'#AA5555'
p28817
sg14
(lp28818
sg2
S"'#AA5555'"
p28819
sba(icodemend.demo.code_suggest
Element
p28820
(dp28821
g10
I1
sg11
S''
sg12
Vplot.color.'#CC4F1B'
p28822
sg14
(lp28823
sg2
S"'#CC4F1B'"
p28824
sba(icodemend.demo.code_suggest
Element
p28825
(dp28826
g10
I1
sg11
S''
sg12
Vplot.color.'#FF4455'
p28827
sg14
(lp28828
sg2
S"'#FF4455'"
p28829
sbag20420
a(icodemend.demo.code_suggest
Element
p28830
(dp28831
g10
I1
sg11
S''
sg12
Vplot.color.'0/2'
p28832
sg14
(lp28833
sg2
S"'0.2'"
p28834
sbag15580
a(icodemend.demo.code_suggest
Element
p28835
(dp28836
g10
I1
sg11
S''
sg12
Vplot.color.'aqua'
p28837
sg14
(lp28838
sg2
S"'aqua'"
p28839
sbag12410
a(icodemend.demo.code_suggest
Element
p28840
(dp28841
g10
I1
sg11
S''
sg12
Vplot.color.'cornflowerblue'
p28842
sg14
(lp28843
sg2
S"'cornflowerblue'"
p28844
sba(icodemend.demo.code_suggest
Element
p28845
(dp28846
g10
I1
sg11
S''
sg12
Vplot.color.'g--'
p28847
sg14
(lp28848
sg2
S"'g--'"
p28849
sba(icodemend.demo.code_suggest
Element
p28850
(dp28851
g10
I1
sg11
S''
sg12
Vplot.color.'lightblue'
p28852
sg14
(lp28853
sg2
S"'lightblue'"
p28854
sbag24110
a(icodemend.demo.code_suggest
Element
p28855
(dp28856
g10
I1
sg11
S''
sg12
Vplot.color.'purple'
p28857
sg14
(lp28858
sg2
S"'purple'"
p28859
sba(icodemend.demo.code_suggest
Element
p28860
(dp28861
g10
I1
sg11
S''
sg12
Vplot.color.'white'
p28862
sg14
(lp28863
sg2
S"'white'"
p28864
sba(icodemend.demo.code_suggest
Element
p28865
(dp28866
g10
I1
sg11
S''
sg12
Vplot.color.((i / float(n)), ((i / float(n)) ** 4), ((i / float(n)) ** 2))
p28867
sg14
(lp28868
sg2
S'((i / float(n)), ((i / float(n)) ** 4), ((i / float(n)) ** 2))'
p28869
sba(icodemend.demo.code_suggest
Element
p28870
(dp28871
g10
I1
sg11
S''
sg12
Vplot.color.(0, 1, 0)
p28872
sg14
(lp28873
sg2
S'(0, 1, 0)'
p28874
sbag4502
a(icodemend.demo.code_suggest
Element
p28875
(dp28876
g10
I1
sg11
S''
sg12
Vplot.color.(0/4, 0/5, 0/6)
p28877
sg14
(lp28878
sg2
S'(0.4, 0.5, 0.6)'
p28879
sba(icodemend.demo.code_suggest
Element
p28880
(dp28881
g10
I1
sg11
S''
sg12
Vplot.color.(1, 0, 0)
p28882
sg14
(lp28883
sg2
S'(1, 0, 0)'
p28884
sba(icodemend.demo.code_suggest
Element
p28885
(dp28886
g10
I1
sg11
S''
sg12
Vplot.color.(1, 0, 0, 0/5)
p28887
sg14
(lp28888
sg2
S'(1, 0, 0, 0.5)'
p28889
sba(icodemend.demo.code_suggest
Element
p28890
(dp28891
g10
I1
sg11
S''
sg12
Vplot.color.(r, g, b)
p28892
sg14
(lp28893
sg2
S'(r, g, b)'
p28894
sba(icodemend.demo.code_suggest
Element
p28895
(dp28896
g10
I1
sg11
S''
sg12
Vplot.color.['r', 'b', 'b', 'b']
p28897
sg14
(lp28898
sg2
S"['r', 'b', 'b', 'b']"
p28899
sba(icodemend.demo.code_suggest
Element
p28900
(dp28901
g10
I1
sg11
S''
sg12
Vplot.color.['r', 'g', 'b']
p28902
sg14
(lp28903
sg2
S"['r', 'g', 'b']"
p28904
sbag135
ag12158
a(icodemend.demo.code_suggest
Element
p28905
(dp28906
g10
I1
sg11
S''
sg12
Vplot.color.[1, 0, 0]
p28907
sg14
(lp28908
sg2
S'[1, 0, 0]'
p28909
sba(icodemend.demo.code_suggest
Element
p28910
(dp28911
g10
I1
sg11
S''
sg12
Vplot.color.[sns/xkcd_rgb['brownish red']]
p28912
sg14
(lp28913
sg2
S"[sns.xkcd_rgb['brownish red']]"
p28914
sba(icodemend.demo.code_suggest
Element
p28915
(dp28916
g10
I1
sg11
S''
sg12
Vplot.color.acolor
p28917
sg14
(lp28918
sg2
S'acolor'
p28919
sbag7085
a(icodemend.demo.code_suggest
Element
p28920
(dp28921
g10
I1
sg11
S''
sg12
Vplot.color.colorVal
p28922
sg14
(lp28923
sg2
g2424
sba(icodemend.demo.code_suggest
Element
p28924
(dp28925
g10
I1
sg11
S''
sg12
Vplot.color.color_list
p28926
sg14
(lp28927
sg2
S'color_list'
p28928
sba(icodemend.demo.code_suggest
Element
p28929
(dp28930
g10
I1
sg11
S''
sg12
Vplot.color.colour
p28931
sg14
(lp28932
sg2
S'colour'
p28933
sbag24648
ag7325
asg2
S'color'
p28934
sba(icodemend.demo.code_suggest
Element
p28935
(dp28936
g10
I191
sg11
S'set the line marker'
p28937
sg12
Vplot.marker
p28938
sg14
(lp28939
g16417
ag13257
a(icodemend.demo.code_suggest
Element
p28940
(dp28941
g10
I8
sg11
S''
sg12
Vplot.marker.'/'
p28942
sg14
(lp28943
sg2
S"'.'"
p28944
sba(icodemend.demo.code_suggest
Element
p28945
(dp28946
g10
I8
sg11
S''
sg12
Vplot.marker.marker
p28947
sg14
(lp28948
sg2
g4274
sba(icodemend.demo.code_suggest
Element
p28949
(dp28950
g10
I5
sg11
S''
sg12
Vplot.marker.'x'
p28951
sg14
(lp28952
sg2
S"'x'"
p28953
sba(icodemend.demo.code_suggest
Element
p28954
(dp28955
g10
I4
sg11
S''
sg12
Vplot.marker.'*'
p28956
sg14
(lp28957
sg2
S"'*'"
p28958
sbag4277
a(icodemend.demo.code_suggest
Element
p28959
(dp28960
g10
I3
sg11
S''
sg12
Vplot.marker.'+'
p28961
sg14
(lp28962
sg2
S"'+'"
p28963
sba(icodemend.demo.code_suggest
Element
p28964
(dp28965
g10
I2
sg11
S''
sg12
Vplot.marker.''
p28966
sg14
(lp28967
sg2
S"''"
p28968
sba(icodemend.demo.code_suggest
Element
p28969
(dp28970
g10
I2
sg11
S''
sg12
Vplot.marker.'1'
p28971
sg14
(lp28972
sg2
S"'1'"
p28973
sbag10191
a(icodemend.demo.code_suggest
Element
p28974
(dp28975
g10
I2
sg11
S''
sg12
Vplot.marker.'None'
p28976
sg14
(lp28977
sg2
S"'None'"
p28978
sba(icodemend.demo.code_suggest
Element
p28979
(dp28980
g10
I2
sg11
S''
sg12
Vplot.marker.(n, 2)
p28981
sg14
(lp28982
sg2
S'(n, 2)'
p28983
sbag27328
ag22824
a(icodemend.demo.code_suggest
Element
p28984
(dp28985
g10
I1
sg11
S''
sg12
Vplot.marker.'>'
p28986
sg14
(lp28987
sg2
S"'>'"
p28988
sba(icodemend.demo.code_suggest
Element
p28989
(dp28990
g10
I1
sg11
S''
sg12
Vplot.marker.'@'
p28991
sg14
(lp28992
sg2
S"'@'"
p28993
sba(icodemend.demo.code_suggest
Element
p28994
(dp28995
g10
I1
sg11
S''
sg12
Vplot.marker.'d'
p28996
sg14
(lp28997
sg2
S"'d'"
p28998
sba(icodemend.demo.code_suggest
Element
p28999
(dp29000
g10
I1
sg11
S''
sg12
Vplot.marker.'none'
p29001
sg14
(lp29002
sg2
S"'none'"
p29003
sbag26402
a(icodemend.demo.code_suggest
Element
p29004
(dp29005
g10
I1
sg11
S''
sg12
Vplot.marker.(2, 0, 20)
p29006
sg14
(lp29007
sg2
S'(2, 0, 20)'
p29008
sba(icodemend.demo.code_suggest
Element
p29009
(dp29010
g10
I1
sg11
S''
sg12
Vplot.marker.(2, 0, angles[(i - 1)])
p29011
sg14
(lp29012
sg2
S'(2, 0, angles[(i - 1)])'
p29013
sbag5667
a(icodemend.demo.code_suggest
Element
p29014
(dp29015
g10
I1
sg11
S''
sg12
Vplot.marker.mark
p29016
sg14
(lp29017
sg2
g21719
sba(icodemend.demo.code_suggest
Element
p29018
(dp29019
g10
I1
sg11
S''
sg12
Vplot.marker.path
p29020
sg14
(lp29021
sg2
S'path'
p29022
sba(icodemend.demo.code_suggest
Element
p29023
(dp29024
g10
I1
sg11
S''
sg12
Vplot.marker.style
p29025
sg14
(lp29026
sg2
g24638
sbasg2
S'marker'
p29027
sba(icodemend.demo.code_suggest
Element
p29028
(dp29029
g10
I169
sg11
S'set the line width in points'
p29030
sg12
Vplot.linewidth
p29031
sg14
(lp29032
(icodemend.demo.code_suggest
Element
p29033
(dp29034
g10
I33
sg11
S''
sg12
Vplot.linewidth.2
p29035
sg14
(lp29036
sg2
S'2'
sbag7851
a(icodemend.demo.code_suggest
Element
p29037
(dp29038
g10
I19
sg11
S''
sg12
Vplot.linewidth.3
p29039
sg14
(lp29040
sg2
S'3'
sba(icodemend.demo.code_suggest
Element
p29041
(dp29042
g10
I18
sg11
S''
sg12
Vplot.linewidth.4
p29043
sg14
(lp29044
sg2
S'4'
sbag2395
a(icodemend.demo.code_suggest
Element
p29045
(dp29046
g10
I8
sg11
S''
sg12
Vplot.linewidth.10
p29047
sg14
(lp29048
sg2
S'10'
p29049
sbag27212
a(icodemend.demo.code_suggest
Element
p29050
(dp29051
g10
I5
sg11
S''
sg12
Vplot.linewidth.0/5
p29052
sg14
(lp29053
sg2
S'0.5'
p29054
sbag3214
a(icodemend.demo.code_suggest
Element
p29055
(dp29056
g10
I5
sg11
S''
sg12
Vplot.linewidth.5
p29057
sg14
(lp29058
sg2
S'5'
sba(icodemend.demo.code_suggest
Element
p29059
(dp29060
g10
I4
sg11
S''
sg12
Vplot.linewidth.0
p29061
sg14
(lp29062
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p29063
(dp29064
g10
I4
sg11
S''
sg12
Vplot.linewidth.3/0
p29065
sg14
(lp29066
sg2
S'3.0'
p29067
sbag10385
ag10989
ag4109
a(icodemend.demo.code_suggest
Element
p29068
(dp29069
g10
I2
sg11
S''
sg12
Vplot.linewidth.20
p29070
sg14
(lp29071
sg2
S'20'
p29072
sbag26239
a(icodemend.demo.code_suggest
Element
p29073
(dp29074
g10
I2
sg11
S''
sg12
Vplot.linewidth.7
p29075
sg14
(lp29076
sg2
S'7'
sba(icodemend.demo.code_suggest
Element
p29077
(dp29078
g10
I1
sg11
S''
sg12
Vplot.linewidth.'2'
p29079
sg14
(lp29080
sg2
S"'2'"
p29081
sba(icodemend.demo.code_suggest
Element
p29082
(dp29083
g10
I1
sg11
S''
sg12
Vplot.linewidth.0/1
p29084
sg14
(lp29085
sg2
S'0.1'
p29086
sba(icodemend.demo.code_suggest
Element
p29087
(dp29088
g10
I1
sg11
S''
sg12
Vplot.linewidth.0/2
p29089
sg14
(lp29090
sg2
S'0.2'
p29091
sbag13520
a(icodemend.demo.code_suggest
Element
p29092
(dp29093
g10
I1
sg11
S''
sg12
Vplot.linewidth.0/8
p29094
sg14
(lp29095
sg2
S'0.8'
p29096
sba(icodemend.demo.code_suggest
Element
p29097
(dp29098
g10
I1
sg11
S''
sg12
Vplot.linewidth.1/75
p29099
sg14
(lp29100
sg2
S'1.75'
p29101
sba(icodemend.demo.code_suggest
Element
p29102
(dp29103
g10
I1
sg11
S''
sg12
Vplot.linewidth.3/2
p29104
sg14
(lp29105
sg2
S'3.2'
p29106
sba(icodemend.demo.code_suggest
Element
p29107
(dp29108
g10
I1
sg11
S''
sg12
Vplot.linewidth.40
p29109
sg14
(lp29110
sg2
S'40'
p29111
sba(icodemend.demo.code_suggest
Element
p29112
(dp29113
g10
I1
sg11
S''
sg12
Vplot.linewidth.8
p29114
sg14
(lp29115
sg2
S'8'
sba(icodemend.demo.code_suggest
Element
p29116
(dp29117
g10
I1
sg11
S''
sg12
Vplot.linewidth.linewidth
p29118
sg14
(lp29119
sg2
g2392
sba(icodemend.demo.code_suggest
Element
p29120
(dp29121
g10
I1
sg11
S''
sg12
Vplot.linewidth.pointlinewid
p29122
sg14
(lp29123
sg2
S'pointlinewid'
p29124
sbasg2
S'linewidth'
p29125
sba(icodemend.demo.code_suggest
Element
p29126
(dp29127
g10
I117
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p29128
sg12
Vplot.linestyle
p29129
sg14
(lp29130
g16255
a(icodemend.demo.code_suggest
Element
p29131
(dp29132
g10
I19
sg11
S''
sg12
Vplot.linestyle.''
p29133
sg14
(lp29134
sg2
S"''"
p29135
sba(icodemend.demo.code_suggest
Element
p29136
(dp29137
g10
I17
sg11
S''
sg12
Vplot.linestyle.'--'
p29138
sg14
(lp29139
sg2
S"'--'"
p29140
sbag21042
a(icodemend.demo.code_suggest
Element
p29141
(dp29142
g10
I12
sg11
S''
sg12
Vplot.linestyle.'None'
p29143
sg14
(lp29144
sg2
S"'None'"
p29145
sba(icodemend.demo.code_suggest
Element
p29146
(dp29147
g10
I9
sg11
S''
sg12
Vplot.linestyle.':'
p29148
sg14
(lp29149
sg2
S"':'"
p29150
sba(icodemend.demo.code_suggest
Element
p29151
(dp29152
g10
I8
sg11
S''
sg12
Vplot.linestyle.'dashed'
p29153
sg14
(lp29154
sg2
S"'dashed'"
p29155
sbag13141
a(icodemend.demo.code_suggest
Element
p29156
(dp29157
g10
I1
sg11
S''
sg12
Vplot.linestyle.' '
p29158
sg14
(lp29159
sg2
S"' '"
p29160
sba(icodemend.demo.code_suggest
Element
p29161
(dp29162
g10
I1
sg11
S''
sg12
Vplot.linestyle.'/'
p29163
sg14
(lp29164
sg2
S"'.'"
p29165
sba(icodemend.demo.code_suggest
Element
p29166
(dp29167
g10
I1
sg11
S''
sg12
Vplot.linestyle.'dashdot'
p29168
sg14
(lp29169
sg2
S"'dashdot'"
p29170
sba(icodemend.demo.code_suggest
Element
p29171
(dp29172
g10
I1
sg11
S''
sg12
Vplot.linestyle.'solid'
p29173
sg14
(lp29174
sg2
S"'solid'"
p29175
sba(icodemend.demo.code_suggest
Element
p29176
(dp29177
g10
I1
sg11
S''
sg12
Vplot.linestyle.'steps--'
p29178
sg14
(lp29179
sg2
S"'steps--'"
p29180
sbasg2
S'linestyle'
p29181
sbag11003
a(icodemend.demo.code_suggest
Element
p29182
(dp29183
g10
I78
sg11
S'set the alpha value used for blending - not supported on all backends .'
p29184
sg12
Vplot.alpha
p29185
sg14
(lp29186
(icodemend.demo.code_suggest
Element
p29187
(dp29188
g10
I23
sg11
S''
sg12
Vplot.alpha.0/5
p29189
sg14
(lp29190
sg2
S'0.5'
p29191
sba(icodemend.demo.code_suggest
Element
p29192
(dp29193
g10
I6
sg11
S''
sg12
Vplot.alpha.0/02
p29194
sg14
(lp29195
sg2
S'0.02'
p29196
sbag10185
a(icodemend.demo.code_suggest
Element
p29197
(dp29198
g10
I5
sg11
S''
sg12
Vplot.alpha.0/4
p29199
sg14
(lp29200
sg2
S'0.4'
p29201
sba(icodemend.demo.code_suggest
Element
p29202
(dp29203
g10
I5
sg11
S''
sg12
Vplot.alpha.1/0
p29204
sg14
(lp29205
sg2
S'1.0'
p29206
sbag20237
a(icodemend.demo.code_suggest
Element
p29207
(dp29208
g10
I4
sg11
S''
sg12
Vplot.alpha.0/3
p29209
sg14
(lp29210
sg2
S'0.3'
p29211
sba(icodemend.demo.code_suggest
Element
p29212
(dp29213
g10
I4
sg11
S''
sg12
Vplot.alpha.0/7
p29214
sg14
(lp29215
sg2
S'0.7'
p29216
sba(icodemend.demo.code_suggest
Element
p29217
(dp29218
g10
I3
sg11
S''
sg12
Vplot.alpha.0/25
p29219
sg14
(lp29220
sg2
S'0.25'
p29221
sba(icodemend.demo.code_suggest
Element
p29222
(dp29223
g10
I3
sg11
S''
sg12
Vplot.alpha.0/45
p29224
sg14
(lp29225
sg2
S'0.45'
p29226
sba(icodemend.demo.code_suggest
Element
p29227
(dp29228
g10
I2
sg11
S''
sg12
Vplot.alpha.0/2
p29229
sg14
(lp29230
sg2
S'0.2'
p29231
sbag2823
a(icodemend.demo.code_suggest
Element
p29232
(dp29233
g10
I2
sg11
S''
sg12
Vplot.alpha.0/55
p29234
sg14
(lp29235
sg2
S'0.55'
p29236
sba(icodemend.demo.code_suggest
Element
p29237
(dp29238
g10
I2
sg11
S''
sg12
Vplot.alpha.0/75
p29239
sg14
(lp29240
sg2
S'0.75'
p29241
sba(icodemend.demo.code_suggest
Element
p29242
(dp29243
g10
I1
sg11
S''
sg12
Vplot.alpha.0/05
p29244
sg14
(lp29245
sg2
S'0.05'
p29246
sbag26504
ag4476
ag19311
asg2
S'alpha'
p29247
sba(icodemend.demo.code_suggest
Element
p29248
(dp29249
g10
I59
sg11
S'set the zorder for the artist .'
p29250
sg12
Vplot.zorder
p29251
sg14
(lp29252
g14749
a(icodemend.demo.code_suggest
Element
p29253
(dp29254
g10
I10
sg11
S''
sg12
Vplot.zorder.0
p29255
sg14
(lp29256
sg2
S'0'
sbag3106
a(icodemend.demo.code_suggest
Element
p29257
(dp29258
g10
I5
sg11
S''
sg12
Vplot.zorder.4
p29259
sg14
(lp29260
sg2
S'4'
sbag16195
a(icodemend.demo.code_suggest
Element
p29261
(dp29262
g10
I3
sg11
S''
sg12
Vplot.zorder.-1
p29263
sg14
(lp29264
sg2
S'-1'
p29265
sba(icodemend.demo.code_suggest
Element
p29266
(dp29267
g10
I3
sg11
S''
sg12
Vplot.zorder.2
p29268
sg14
(lp29269
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p29270
(dp29271
g10
I2
sg11
S''
sg12
Vplot.zorder.10
p29272
sg14
(lp29273
sg2
S'10'
p29274
sba(icodemend.demo.code_suggest
Element
p29275
(dp29276
g10
I2
sg11
S''
sg12
Vplot.zorder.3
p29277
sg14
(lp29278
sg2
S'3'
sba(icodemend.demo.code_suggest
Element
p29279
(dp29280
g10
I1
sg11
S''
sg12
Vplot.zorder.-10
p29281
sg14
(lp29282
sg2
S'-10'
p29283
sba(icodemend.demo.code_suggest
Element
p29284
(dp29285
g10
I1
sg11
S''
sg12
Vplot.zorder.-32
p29286
sg14
(lp29287
sg2
S'-32'
p29288
sba(icodemend.demo.code_suggest
Element
p29289
(dp29290
g10
I1
sg11
S''
sg12
Vplot.zorder.5000
p29291
sg14
(lp29292
sg2
S'5000'
p29293
sba(icodemend.demo.code_suggest
Element
p29294
(dp29295
g10
I1
sg11
S''
sg12
Vplot.zorder.zorder
p29296
sg14
(lp29297
sg2
g909
sbasg2
S'zorder'
p29298
sba(icodemend.demo.code_suggest
Element
p29299
(dp29300
g10
I29
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .'
p29301
sg12
Vplot.x
p29302
sg14
(lp29303
g22348
ag27179
a(icodemend.demo.code_suggest
Element
p29304
(dp29305
g10
I2
sg11
S''
sg12
Vplot.x.'Age'
p29306
sg14
(lp29307
sg2
S"'Age'"
p29308
sbag18621
ag24979
a(icodemend.demo.code_suggest
Element
p29309
(dp29310
g10
I2
sg11
S''
sg12
Vplot.x.'Time'
p29311
sg14
(lp29312
sg2
S"'Time'"
p29313
sba(icodemend.demo.code_suggest
Element
p29314
(dp29315
g10
I2
sg11
S''
sg12
Vplot.x.'x'
p29316
sg14
(lp29317
sg2
S"'x'"
p29318
sba(icodemend.demo.code_suggest
Element
p29319
(dp29320
g10
I1
sg11
S''
sg12
Vplot.x.'Compression Velocity'
p29321
sg14
(lp29322
sg2
S"'Compression Velocity'"
p29323
sbag20414
a(icodemend.demo.code_suggest
Element
p29324
(dp29325
g10
I1
sg11
S''
sg12
Vplot.x.'RA'
p29326
sg14
(lp29327
sg2
S"'RA'"
p29328
sba(icodemend.demo.code_suggest
Element
p29329
(dp29330
g10
I1
sg11
S''
sg12
Vplot.x.'Region'
p29331
sg14
(lp29332
sg2
S"'Region'"
p29333
sba(icodemend.demo.code_suggest
Element
p29334
(dp29335
g10
I1
sg11
S''
sg12
Vplot.x.'TotalDist'
p29336
sg14
(lp29337
sg2
S"'TotalDist'"
p29338
sba(icodemend.demo.code_suggest
Element
p29339
(dp29340
g10
I1
sg11
S''
sg12
Vplot.x.'a'
p29341
sg14
(lp29342
sg2
S"'a'"
p29343
sbag2939
a(icodemend.demo.code_suggest
Element
p29344
(dp29345
g10
I1
sg11
S''
sg12
Vplot.x.'col_name_1'
p29346
sg14
(lp29347
sg2
S"'col_name_1'"
p29348
sba(icodemend.demo.code_suggest
Element
p29349
(dp29350
g10
I1
sg11
S''
sg12
Vplot.x.'datetime'
p29351
sg14
(lp29352
sg2
S"'datetime'"
p29353
sba(icodemend.demo.code_suggest
Element
p29354
(dp29355
g10
I1
sg11
S''
sg12
Vplot.x.'type'
p29356
sg14
(lp29357
sg2
S"'type'"
p29358
sbasg2
S'x'
sba(icodemend.demo.code_suggest
Element
p29359
(dp29360
g10
I25
sg11
S'set whether artist uses clipping .'
p29361
sg12
Vplot.clip_on
p29362
sg14
(lp29363
(icodemend.demo.code_suggest
Element
p29364
(dp29365
g10
I23
sg11
S''
sg12
Vplot.clip_on.False
p29366
sg14
(lp29367
sg2
g1944
sba(icodemend.demo.code_suggest
Element
p29368
(dp29369
g10
I2
sg11
S''
sg12
Vplot.clip_on.True
p29370
sg14
(lp29371
sg2
g438
sbasg2
S'clip_on'
p29372
sba(icodemend.demo.code_suggest
Element
p29373
(dp29374
g10
I25
sg11
S'set the marker face color .'
p29375
sg12
Vplot.markerfacecolor
p29376
sg14
(lp29377
g18516
a(icodemend.demo.code_suggest
Element
p29378
(dp29379
g10
I3
sg11
S''
sg12
Vplot.markerfacecolor.'None'
p29380
sg14
(lp29381
sg2
S"'None'"
p29382
sba(icodemend.demo.code_suggest
Element
p29383
(dp29384
g10
I3
sg11
S''
sg12
Vplot.markerfacecolor.'k'
p29385
sg14
(lp29386
sg2
S"'k'"
p29387
sbag25005
a(icodemend.demo.code_suggest
Element
p29388
(dp29389
g10
I3
sg11
S''
sg12
Vplot.markerfacecolor.'red'
p29390
sg14
(lp29391
sg2
S"'red'"
p29392
sba(icodemend.demo.code_suggest
Element
p29393
(dp29394
g10
I2
sg11
S''
sg12
Vplot.markerfacecolor.'m'
p29395
sg14
(lp29396
sg2
S"'m'"
p29397
sbag5778
ag15070
a(icodemend.demo.code_suggest
Element
p29398
(dp29399
g10
I1
sg11
S''
sg12
Vplot.markerfacecolor.'cornflowerblue'
p29400
sg14
(lp29401
sg2
S"'cornflowerblue'"
p29402
sbag26378
a(icodemend.demo.code_suggest
Element
p29403
(dp29404
g10
I1
sg11
S''
sg12
Vplot.markerfacecolor.'orange'
p29405
sg14
(lp29406
sg2
S"'orange'"
p29407
sbag16740
asg2
S'markerfacecolor'
p29408
sbag21050
a(icodemend.demo.code_suggest
Element
p29409
(dp29410
g10
I24
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .'
p29411
sg12
Vplot.y
p29412
sg14
(lp29413
(icodemend.demo.code_suggest
Element
p29414
(dp29415
g10
I2
sg11
S''
sg12
Vplot.y.'Weight'
p29416
sg14
(lp29417
sg2
S"'Weight'"
p29418
sba(icodemend.demo.code_suggest
Element
p29419
(dp29420
g10
I2
sg11
S''
sg12
Vplot.y.'norm'
p29421
sg14
(lp29422
sg2
S"'norm'"
p29423
sba(icodemend.demo.code_suggest
Element
p29424
(dp29425
g10
I2
sg11
S''
sg12
Vplot.y.'y'
p29426
sg14
(lp29427
sg2
S"'y'"
p29428
sba(icodemend.demo.code_suggest
Element
p29429
(dp29430
g10
I1
sg11
S''
sg12
Vplot.y.'B'
p29431
sg14
(lp29432
sg2
S"'B'"
p29433
sba(icodemend.demo.code_suggest
Element
p29434
(dp29435
g10
I1
sg11
S''
sg12
Vplot.y.'Bid'
p29436
sg14
(lp29437
sg2
S"'Bid'"
p29438
sba(icodemend.demo.code_suggest
Element
p29439
(dp29440
g10
I1
sg11
S''
sg12
Vplot.y.'Compression Force'
p29441
sg14
(lp29442
sg2
S"'Compression Force'"
p29443
sba(icodemend.demo.code_suggest
Element
p29444
(dp29445
g10
I1
sg11
S''
sg12
Vplot.y.'DEC'
p29446
sg14
(lp29447
sg2
S"'DEC'"
p29448
sbag8816
ag12516
a(icodemend.demo.code_suggest
Element
p29449
(dp29450
g10
I1
sg11
S''
sg12
Vplot.y.'SUM'
p29451
sg14
(lp29452
sg2
S"'SUM'"
p29453
sba(icodemend.demo.code_suggest
Element
p29454
(dp29455
g10
I1
sg11
S''
sg12
Vplot.y.'WEIGHT'
p29456
sg14
(lp29457
sg2
S"'WEIGHT'"
p29458
sbag15301
a(icodemend.demo.code_suggest
Element
p29459
(dp29460
g10
I1
sg11
S''
sg12
Vplot.y.'col_name_2'
p29461
sg14
(lp29462
sg2
S"'col_name_2'"
p29463
sba(icodemend.demo.code_suggest
Element
p29464
(dp29465
g10
I1
sg11
S''
sg12
Vplot.y.'numbers'
p29466
sg14
(lp29467
sg2
S"'numbers'"
p29468
sba(icodemend.demo.code_suggest
Element
p29469
(dp29470
g10
I1
sg11
S''
sg12
Vplot.y.'price'
p29471
sg14
(lp29472
sg2
S"'price'"
p29473
sba(icodemend.demo.code_suggest
Element
p29474
(dp29475
g10
I1
sg11
S''
sg12
Vplot.y.'rate'
p29476
sg14
(lp29477
sg2
S"'rate'"
p29478
sba(icodemend.demo.code_suggest
Element
p29479
(dp29480
g10
I1
sg11
S''
sg12
Vplot.y.'score'
p29481
sg14
(lp29482
sg2
S"'score'"
p29483
sba(icodemend.demo.code_suggest
Element
p29484
(dp29485
g10
I1
sg11
S''
sg12
Vplot.y.'success'
p29486
sg14
(lp29487
sg2
S"'success'"
p29488
sba(icodemend.demo.code_suggest
Element
p29489
(dp29490
g10
I1
sg11
S''
sg12
Vplot.y.'tides'
p29491
sg14
(lp29492
sg2
S"'tides'"
p29493
sba(icodemend.demo.code_suggest
Element
p29494
(dp29495
g10
I1
sg11
S''
sg12
Vplot.y.'val'
p29496
sg14
(lp29497
sg2
S"'val'"
p29498
sbag24944
asg2
S'y'
sba(icodemend.demo.code_suggest
Element
p29499
(dp29500
g10
I20
sg11
S'set the marker edge color'
p29501
sg12
Vplot.markeredgecolor
p29502
sg14
(lp29503
(icodemend.demo.code_suggest
Element
p29504
(dp29505
g10
I3
sg11
S''
sg12
Vplot.markeredgecolor.'b'
p29506
sg14
(lp29507
sg2
S"'b'"
p29508
sba(icodemend.demo.code_suggest
Element
p29509
(dp29510
g10
I3
sg11
S''
sg12
Vplot.markeredgecolor.'k'
p29511
sg14
(lp29512
sg2
S"'k'"
p29513
sbag351
a(icodemend.demo.code_suggest
Element
p29514
(dp29515
g10
I2
sg11
S''
sg12
Vplot.markeredgecolor.'r'
p29516
sg14
(lp29517
sg2
S"'r'"
p29518
sba(icodemend.demo.code_suggest
Element
p29519
(dp29520
g10
I2
sg11
S''
sg12
Vplot.markeredgecolor.'w'
p29521
sg14
(lp29522
sg2
S"'w'"
p29523
sba(icodemend.demo.code_suggest
Element
p29524
(dp29525
g10
I1
sg11
S''
sg12
Vplot.markeredgecolor.'black'
p29526
sg14
(lp29527
sg2
S"'black'"
p29528
sba(icodemend.demo.code_suggest
Element
p29529
(dp29530
g10
I1
sg11
S''
sg12
Vplot.markeredgecolor.'blue'
p29531
sg14
(lp29532
sg2
S"'blue'"
p29533
sba(icodemend.demo.code_suggest
Element
p29534
(dp29535
g10
I1
sg11
S''
sg12
Vplot.markeredgecolor.'g'
p29536
sg14
(lp29537
sg2
S"'g'"
p29538
sba(icodemend.demo.code_suggest
Element
p29539
(dp29540
g10
I1
sg11
S''
sg12
Vplot.markeredgecolor.'red'
p29541
sg14
(lp29542
sg2
S"'red'"
p29543
sba(icodemend.demo.code_suggest
Element
p29544
(dp29545
g10
I1
sg11
S''
sg12
Vplot.markeredgecolor.(0, 0, 0)
p29546
sg14
(lp29547
sg2
S'(0, 0, 0)'
p29548
sba(icodemend.demo.code_suggest
Element
p29549
(dp29550
g10
I1
sg11
S''
sg12
Vplot.markeredgecolor.(0/5, 0/5, 0/5)
p29551
sg14
(lp29552
sg2
S'(0.5, 0.5, 0.5)'
p29553
sbag13251
asg2
S'markeredgecolor'
p29554
sba(icodemend.demo.code_suggest
Element
p29555
(dp29556
g10
I14
sg11
S'set a title for the axes .'
p29557
sg12
Vplot.title
p29558
sg14
(lp29559
(icodemend.demo.code_suggest
Element
p29560
(dp29561
g10
I2
sg11
S''
sg12
Vplot.title.'Time dependency of ///'
p29562
sg14
(lp29563
sg2
S"'Time dependency of ...'"
p29564
sba(icodemend.demo.code_suggest
Element
p29565
(dp29566
g10
I2
sg11
S''
sg12
Vplot.title.'Video streaming dropout by category'
p29567
sg14
(lp29568
sg2
S"'Video streaming dropout by category'"
p29569
sbag24827
a(icodemend.demo.code_suggest
Element
p29570
(dp29571
g10
I1
sg11
S''
sg12
Vplot.title.'Scores'
p29572
sg14
(lp29573
sg2
S"'Scores'"
p29574
sbag4343
ag5863
a(icodemend.demo.code_suggest
Element
p29575
(dp29576
g10
I1
sg11
S''
sg12
Vplot.title.stat
p29577
sg14
(lp29578
sg2
S'stat'
p29579
sba(icodemend.demo.code_suggest
Element
p29580
(dp29581
g10
I1
sg11
S''
sg12
Vplot.title.stn
p29582
sg14
(lp29583
sg2
S'stn'
p29584
sbasg2
S'title'
p29585
sba(icodemend.demo.code_suggest
Element
p29586
(dp29587
g10
I13
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p29588
sg12
Vplot.picker
p29589
sg14
(lp29590
g13109
a(icodemend.demo.code_suggest
Element
p29591
(dp29592
g10
I3
sg11
S''
sg12
Vplot.picker.10
p29593
sg14
(lp29594
sg2
S'10'
p29595
sba(icodemend.demo.code_suggest
Element
p29596
(dp29597
g10
I3
sg11
S''
sg12
Vplot.picker.line_picker
p29598
sg14
(lp29599
sg2
S'line_picker'
p29600
sba(icodemend.demo.code_suggest
Element
p29601
(dp29602
g10
I1
sg11
S''
sg12
Vplot.picker.tolerance
p29603
sg14
(lp29604
sg2
S'tolerance'
p29605
sbasg2
S'picker'
p29606
sbag19374
a(icodemend.demo.code_suggest
Element
p29607
(dp29608
g10
I7
sg11
S'set the cap style for solid linestyles'
p29609
sg12
Vplot.solid_capstyle
p29610
sg14
(lp29611
(icodemend.demo.code_suggest
Element
p29612
(dp29613
g10
I4
sg11
S''
sg12
Vplot.solid_capstyle.'butt'
p29614
sg14
(lp29615
sg2
S"'butt'"
p29616
sba(icodemend.demo.code_suggest
Element
p29617
(dp29618
g10
I2
sg11
S''
sg12
Vplot.solid_capstyle.'round'
p29619
sg14
(lp29620
sg2
S"'round'"
p29621
sba(icodemend.demo.code_suggest
Element
p29622
(dp29623
g10
I1
sg11
S''
sg12
Vplot.solid_capstyle.'projecting'
p29624
sg14
(lp29625
sg2
S"'projecting'"
p29626
sbasg2
S'solid_capstyle'
p29627
sbag12855
a(icodemend.demo.code_suggest
Element
p29628
(dp29629
g10
I6
sg11
S'set the x ticks with list of ticks'
p29630
sg12
Vplot.xticks
p29631
sg14
(lp29632
(icodemend.demo.code_suggest
Element
p29633
(dp29634
g10
I1
sg11
S''
sg12
Vplot.xticks.[2, 4, 6, 8]
p29635
sg14
(lp29636
sg2
S'[2, 4, 6, 8]'
p29637
sbasg2
S'xticks'
p29638
sba(icodemend.demo.code_suggest
Element
p29639
(dp29640
g10
I5
sg11
S"set the artist 's animation state ."
p29641
sg12
Vplot.animated
p29642
sg14
(lp29643
(icodemend.demo.code_suggest
Element
p29644
(dp29645
g10
I5
sg11
S''
sg12
Vplot.animated.True
p29646
sg14
(lp29647
sg2
g438
sbasg2
S'animated'
p29648
sba(icodemend.demo.code_suggest
Element
p29649
(dp29650
g10
I4
sg11
S'set the markevery property to subsample the plot when using markers .'
p29651
sg12
Vplot.markevery
p29652
sg14
(lp29653
(icodemend.demo.code_suggest
Element
p29654
(dp29655
g10
I2
sg11
S''
sg12
Vplot.markevery.32
p29656
sg14
(lp29657
sg2
S'32'
p29658
sba(icodemend.demo.code_suggest
Element
p29659
(dp29660
g10
I1
sg11
S''
sg12
Vplot.markevery.0/05
p29661
sg14
(lp29662
sg2
S'0.05'
p29663
sbag23014
asg2
S'markevery'
p29664
sba(icodemend.demo.code_suggest
Element
p29665
(dp29666
g10
I4
sg11
S'set the data limits for the yaxis'
p29667
sg12
Vplot.ylim
p29668
sg14
(lp29669
(icodemend.demo.code_suggest
Element
p29670
(dp29671
g10
I1
sg11
S''
sg12
Vplot.ylim.((-1), 2)
p29672
sg14
(lp29673
sg2
S'((-1), 2)'
p29674
sba(icodemend.demo.code_suggest
Element
p29675
(dp29676
g10
I1
sg11
S''
sg12
Vplot.ylim.((-100), 100)
p29677
sg14
(lp29678
sg2
S'((-100), 100)'
p29679
sba(icodemend.demo.code_suggest
Element
p29680
(dp29681
g10
I1
sg11
S''
sg12
Vplot.ylim.(0, 14)
p29682
sg14
(lp29683
sg2
S'(0, 14)'
p29684
sba(icodemend.demo.code_suggest
Element
p29685
(dp29686
g10
I1
sg11
S''
sg12
Vplot.ylim.[0, 4]
p29687
sg14
(lp29688
sg2
S'[0, 4]'
p29689
sbasg2
S'ylim'
p29690
sba(icodemend.demo.code_suggest
Element
p29691
(dp29692
g10
I3
sg11
S'true if line should be drawin with antialiased rendering'
p29693
sg12
Vplot.antialiased
p29694
sg14
(lp29695
(icodemend.demo.code_suggest
Element
p29696
(dp29697
g10
I2
sg11
S''
sg12
Vplot.antialiased.True
p29698
sg14
(lp29699
sg2
g438
sba(icodemend.demo.code_suggest
Element
p29700
(dp29701
g10
I1
sg11
S''
sg12
Vplot.antialiased.False
p29702
sg14
(lp29703
sg2
g1944
sbasg2
S'antialiased'
p29704
sba(icodemend.demo.code_suggest
Element
p29705
(dp29706
g10
I3
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p29707
sg12
Vplot.dashes
p29708
sg14
(lp29709
(icodemend.demo.code_suggest
Element
p29710
(dp29711
g10
I1
sg11
S''
sg12
Vplot.dashes.''
p29712
sg14
(lp29713
sg2
S"''"
p29714
sba(icodemend.demo.code_suggest
Element
p29715
(dp29716
g10
I1
sg11
S''
sg12
Vplot.dashes.(2, 2)
p29717
sg14
(lp29718
sg2
S'(2, 2)'
p29719
sba(icodemend.demo.code_suggest
Element
p29720
(dp29721
g10
I1
sg11
S''
sg12
Vplot.dashes.[8, 4, 2, 4, 2, 4]
p29722
sg14
(lp29723
sg2
S'[8, 4, 2, 4, 2, 4]'
p29724
sbasg2
S'dashes'
p29725
sbag25211
a(icodemend.demo.code_suggest
Element
p29726
(dp29727
g10
I3
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p29728
sg12
Vplot.rasterized
p29729
sg14
(lp29730
g20899
asg2
S'rasterized'
p29731
sba(icodemend.demo.code_suggest
Element
p29732
(dp29733
g10
I2
sg11
S'set the drawstyle of the plot'
p29734
sg12
Vplot.drawstyle
p29735
sg14
(lp29736
(icodemend.demo.code_suggest
Element
p29737
(dp29738
g10
I2
sg11
S''
sg12
Vplot.drawstyle.'steps'
p29739
sg14
(lp29740
sg2
S"'steps'"
p29741
sbasg2
S'drawstyle'
p29742
sba(icodemend.demo.code_suggest
Element
p29743
(dp29744
g10
I2
sg11
S'set the axes position with'
p29745
sg12
Vplot.position
p29746
sg14
(lp29747
g4227
a(icodemend.demo.code_suggest
Element
p29748
(dp29749
g10
I1
sg11
S''
sg12
Vplot.position.1
p29750
sg14
(lp29751
sg2
S'1'
sbasg2
S'position'
p29752
sba(icodemend.demo.code_suggest
Element
p29753
(dp29754
g10
I1
sg11
S'set the figure instance the artist belongs to .'
p29755
sg12
Vplot.figure
p29756
sg14
(lp29757
g4208
asg2
S'figure'
p29758
sba(icodemend.demo.code_suggest
Element
p29759
(dp29760
g10
I1
sg11
S'sets the ( group ) id for the artist'
p29761
sg12
Vplot.gid
p29762
sg14
(lp29763
g16648
asg2
S'gid'
p29764
sbag23652
a(icodemend.demo.code_suggest
Element
p29765
(dp29766
g10
I1
sg11
S'sets the url for the artist'
p29767
sg12
Vplot.url
p29768
sg14
(lp29769
(icodemend.demo.code_suggest
Element
p29770
(dp29771
g10
I1
sg11
S''
sg12
Vplot.url.'my_tag'
p29772
sg14
(lp29773
sg2
S"'my_tag'"
p29774
sbasg2
S'url'
p29775
sba(icodemend.demo.code_suggest
Element
p29776
(dp29777
g10
I1
sg11
S'set the data np.array for x'
p29778
sg12
Vplot.xdata
p29779
sg14
(lp29780
(icodemend.demo.code_suggest
Element
p29781
(dp29782
g10
I1
sg11
S''
sg12
Vplot.xdata.[1, 2, 3, 4]
p29783
sg14
(lp29784
sg2
S'[1, 2, 3, 4]'
p29785
sbasg2
S'xdata'
p29786
sba(icodemend.demo.code_suggest
Element
p29787
(dp29788
g10
I1
sg11
S'set the data limits for the xaxis'
p29789
sg12
Vplot.xlim
p29790
sg14
(lp29791
g2158
asg2
S'xlim'
p29792
sba(icodemend.demo.code_suggest
Element
p29793
(dp29794
g10
I1
sg11
S'set the data np.array for y'
p29795
sg12
Vplot.ydata
p29796
sg14
(lp29797
(icodemend.demo.code_suggest
Element
p29798
(dp29799
g10
I1
sg11
S''
sg12
Vplot.ydata.[4, 5, 6, 7]
p29800
sg14
(lp29801
sg2
S'[4, 5, 6, 7]'
p29802
sbasg2
S'ydata'
p29803
sba(icodemend.demo.code_suggest
Element
p29804
(dp29805
g10
I1
sg11
S'set the y ticks with list of ticks'
p29806
sg12
Vplot.yticks
p29807
sg14
(lp29808
(icodemend.demo.code_suggest
Element
p29809
(dp29810
g10
I1
sg11
S''
sg12
Vplot.yticks.[]
p29811
sg14
(lp29812
sg2
S'[]'
p29813
sbasg2
S'yticks'
p29814
sbag6450
a(icodemend.demo.code_suggest
Element
p29815
(dp29816
g10
I0
sg11
S'set agg_filter fuction .'
p29817
sg12
Vplot.agg_filter
p29818
sg14
(lp29819
sg2
S'agg_filter'
p29820
sbag18536
a(icodemend.demo.code_suggest
Element
p29821
(dp29822
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :'
p29823
sg12
Vplot.args
p29824
sg14
(lp29825
sg2
S'args'
p29826
sbag8485
a(icodemend.demo.code_suggest
Element
p29827
(dp29828
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p29829
sg12
Vplot.axes
p29830
sg14
(lp29831
sg2
S'axes'
p29832
sbag6669
a(icodemend.demo.code_suggest
Element
p29833
(dp29834
g10
I0
sg11
S"set the artist 's clip path , which may be"
p29835
sg12
Vplot.clip_path
p29836
sg14
(lp29837
sg2
S'clip_path'
p29838
sba(icodemend.demo.code_suggest
Element
p29839
(dp29840
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p29841
sg12
Vplot.closed
p29842
sg14
(lp29843
sg2
S'closed'
p29844
sbag27040
a(icodemend.demo.code_suggest
Element
p29845
(dp29846
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p29847
sg12
Vplot.color_cycle
p29848
sg14
(lp29849
sg2
S'color_cycle'
p29850
sba(icodemend.demo.code_suggest
Element
p29851
(dp29852
g10
I0
sg11
S'replace the contains test used by this artist .'
p29853
sg12
Vplot.contains
p29854
sg14
(lp29855
sg2
S'contains'
p29856
sba(icodemend.demo.code_suggest
Element
p29857
(dp29858
g10
I0
sg11
S'set the cursor property as'
p29859
sg12
Vplot.cursor_props
p29860
sg14
(lp29861
sg2
S'cursor_props'
p29862
sba(icodemend.demo.code_suggest
Element
p29863
(dp29864
g10
I0
sg11
S'set the cap style for dashed linestyles'
p29865
sg12
Vplot.dash_capstyle
p29866
sg14
(lp29867
sg2
S'dash_capstyle'
p29868
sba(icodemend.demo.code_suggest
Element
p29869
(dp29870
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p29871
sg12
Vplot.dash_joinstyle
p29872
sg14
(lp29873
sg2
S'dash_joinstyle'
p29874
sba(icodemend.demo.code_suggest
Element
p29875
(dp29876
g10
I0
sg11
S'if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :'
p29877
sg12
Vplot.fmt
p29878
sg14
(lp29879
sg2
S'fmt'
p29880
sba(icodemend.demo.code_suggest
Element
p29881
(dp29882
g10
I0
sg11
S'set the hatching pattern'
p29883
sg12
Vplot.hatch
p29884
sg14
(lp29885
sg2
S'hatch'
p29886
sba(icodemend.demo.code_suggest
Element
p29887
(dp29888
g10
I0
sg11
S'set the alternate marker face color .'
p29889
sg12
Vplot.markerfacecoloralt
p29890
sg14
(lp29891
sg2
S'markerfacecoloralt'
p29892
sba(icodemend.demo.code_suggest
Element
p29893
(dp29894
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p29895
sg12
Vplot.path_effects
p29896
sg14
(lp29897
sg2
S'path_effects'
p29898
sba(icodemend.demo.code_suggest
Element
p29899
(dp29900
g10
I0
sg11
S'sets the pick radius used for containment tests'
p29901
sg12
Vplot.pickradius
p29902
sg14
(lp29903
sg2
S'pickradius'
p29904
sba(icodemend.demo.code_suggest
Element
p29905
(dp29906
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p29907
sg12
Vplot.prop_cycle
p29908
sg14
(lp29909
sg2
S'prop_cycle'
p29910
sba(icodemend.demo.code_suggest
Element
p29911
(dp29912
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p29913
sg12
Vplot.readonly
p29914
sg14
(lp29915
sg2
S'readonly'
p29916
sbag26728
a(icodemend.demo.code_suggest
Element
p29917
(dp29918
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p29919
sg12
Vplot.size_inches
p29920
sg14
(lp29921
sg2
S'size_inches'
p29922
sba(icodemend.demo.code_suggest
Element
p29923
(dp29924
g10
I0
sg11
S'sets the sketch parameters .'
p29925
sg12
Vplot.sketch_params
p29926
sg14
(lp29927
sg2
S'sketch_params'
p29928
sba(icodemend.demo.code_suggest
Element
p29929
(dp29930
g10
I0
sg11
S'sets the snap setting which may be'
p29931
sg12
Vplot.snap
p29932
sg14
(lp29933
sg2
S'snap'
p29934
sbag16576
ag16618
a(icodemend.demo.code_suggest
Element
p29935
(dp29936
g10
I0
sg11
S'set the label for the xaxis .'
p29937
sg12
Vplot.xlabel
p29938
sg14
(lp29939
sg2
S'xlabel'
p29940
sba(icodemend.demo.code_suggest
Element
p29941
(dp29942
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p29943
sg12
Vplot.xmargin
p29944
sg14
(lp29945
sg2
S'xmargin'
p29946
sba(icodemend.demo.code_suggest
Element
p29947
(dp29948
g10
I0
sg11
S'set the scaling of the x-axis'
p29949
sg12
Vplot.xscale
p29950
sg14
(lp29951
sg2
S'xscale'
p29952
sba(icodemend.demo.code_suggest
Element
p29953
(dp29954
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p29955
sg12
Vplot.xticklabels
p29956
sg14
(lp29957
sg2
S'xticklabels'
p29958
sba(icodemend.demo.code_suggest
Element
p29959
(dp29960
g10
I0
sg11
S'set the label for the yaxis'
p29961
sg12
Vplot.ylabel
p29962
sg14
(lp29963
sg2
S'ylabel'
p29964
sba(icodemend.demo.code_suggest
Element
p29965
(dp29966
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p29967
sg12
Vplot.ymargin
p29968
sg14
(lp29969
sg2
S'ymargin'
p29970
sbag12805
ag22817
asg2
g27423
sbs(g109
g3075
S'1200'
p29971
tp29972
(icodemend.demo.code_suggest
Element
p29973
(dp29974
g10
I1
sg11
S''
sg12
Vsavefig.dpi.1200
p29975
sg14
(lp29976
sg2
g29971
sbsS'get_dashes'
p29977
(icodemend.demo.code_suggest
Element
p29978
(dp29979
g10
I0
sg11
S'return the dash information as an offset dashlist tuple .'
p29980
sg12
Vget_dashes
p29981
sg14
(lp29982
sg2
g29977
sbs(g324
g785
g9601
tp29983
g9597
s(g4998
g4459
S'0.01'
p29984
tp29985
(icodemend.demo.code_suggest
Element
p29986
(dp29987
g10
I2
sg11
S''
sg12
Vpcolormesh.vmin.0/01
p29988
sg14
(lp29989
sg2
g29984
sbs(S'plot_day_summary2_ohlc'
p29990
g8473
tp29991
g8468
s(S'figure'
p29992
S'figsize'
p29993
tp29994
(icodemend.demo.code_suggest
Element
p29995
(dp29996
g10
I388
sg11
S'width , height in inches . if not provided , defaults to rc figure.figsize .'
p29997
sg12
Vfigure.figsize
p29998
sg14
(lp29999
g20401
a(icodemend.demo.code_suggest
Element
p30000
(dp30001
g10
I26
sg11
S''
sg12
Vfigure.figsize.(6, 6)
p30002
sg14
(lp30003
sg2
S'(6, 6)'
p30004
sba(icodemend.demo.code_suggest
Element
p30005
(dp30006
g10
I25
sg11
S''
sg12
Vfigure.figsize.(8, 8)
p30007
sg14
(lp30008
sg2
S'(8, 8)'
p30009
sba(icodemend.demo.code_suggest
Element
p30010
(dp30011
g10
I15
sg11
S''
sg12
Vfigure.figsize.(5, 5)
p30012
sg14
(lp30013
sg2
S'(5, 5)'
p30014
sba(icodemend.demo.code_suggest
Element
p30015
(dp30016
g10
I12
sg11
S''
sg12
Vfigure.figsize.(10, 10)
p30017
sg14
(lp30018
sg2
S'(10, 10)'
p30019
sba(icodemend.demo.code_suggest
Element
p30020
(dp30021
g10
I11
sg11
S''
sg12
Vfigure.figsize.(4, 4)
p30022
sg14
(lp30023
sg2
S'(4, 4)'
p30024
sba(icodemend.demo.code_suggest
Element
p30025
(dp30026
g10
I9
sg11
S''
sg12
Vfigure.figsize.(20, 10)
p30027
sg14
(lp30028
sg2
S'(20, 10)'
p30029
sba(icodemend.demo.code_suggest
Element
p30030
(dp30031
g10
I7
sg11
S''
sg12
Vfigure.figsize.(10, 5)
p30032
sg14
(lp30033
sg2
S'(10, 5)'
p30034
sba(icodemend.demo.code_suggest
Element
p30035
(dp30036
g10
I7
sg11
S''
sg12
Vfigure.figsize.(12, 6)
p30037
sg14
(lp30038
sg2
S'(12, 6)'
p30039
sba(icodemend.demo.code_suggest
Element
p30040
(dp30041
g10
I6
sg11
S''
sg12
Vfigure.figsize.(16, 8)
p30042
sg14
(lp30043
sg2
S'(16, 8)'
p30044
sbag26339
a(icodemend.demo.code_suggest
Element
p30045
(dp30046
g10
I5
sg11
S''
sg12
Vfigure.figsize.(4, 3)
p30047
sg14
(lp30048
sg2
S'(4, 3)'
p30049
sba(icodemend.demo.code_suggest
Element
p30050
(dp30051
g10
I5
sg11
S''
sg12
Vfigure.figsize.(5, 10)
p30052
sg14
(lp30053
sg2
S'(5, 10)'
p30054
sba(icodemend.demo.code_suggest
Element
p30055
(dp30056
g10
I5
sg11
S''
sg12
Vfigure.figsize.(5, 4)
p30057
sg14
(lp30058
sg2
S'(5, 4)'
p30059
sbag5836
a(icodemend.demo.code_suggest
Element
p30060
(dp30061
g10
I4
sg11
S''
sg12
Vfigure.figsize.(10, 8)
p30062
sg14
(lp30063
sg2
S'(10, 8)'
p30064
sba(icodemend.demo.code_suggest
Element
p30065
(dp30066
g10
I4
sg11
S''
sg12
Vfigure.figsize.(12, 12)
p30067
sg14
(lp30068
sg2
S'(12, 12)'
p30069
sba(icodemend.demo.code_suggest
Element
p30070
(dp30071
g10
I4
sg11
S''
sg12
Vfigure.figsize.(12, 4)
p30072
sg14
(lp30073
sg2
S'(12, 4)'
p30074
sba(icodemend.demo.code_suggest
Element
p30075
(dp30076
g10
I4
sg11
S''
sg12
Vfigure.figsize.(12, 8)
p30077
sg14
(lp30078
sg2
S'(12, 8)'
p30079
sba(icodemend.demo.code_suggest
Element
p30080
(dp30081
g10
I4
sg11
S''
sg12
Vfigure.figsize.(3, 4)
p30082
sg14
(lp30083
sg2
S'(3, 4)'
p30084
sba(icodemend.demo.code_suggest
Element
p30085
(dp30086
g10
I4
sg11
S''
sg12
Vfigure.figsize.(5, 7)
p30087
sg14
(lp30088
sg2
S'(5, 7)'
p30089
sba(icodemend.demo.code_suggest
Element
p30090
(dp30091
g10
I4
sg11
S''
sg12
Vfigure.figsize.(8, 4)
p30092
sg14
(lp30093
sg2
S'(8, 4)'
p30094
sba(icodemend.demo.code_suggest
Element
p30095
(dp30096
g10
I4
sg11
S''
sg12
Vfigure.figsize.(size, size)
p30097
sg14
(lp30098
sg2
S'(size, size)'
p30099
sba(icodemend.demo.code_suggest
Element
p30100
(dp30101
g10
I4
sg11
S''
sg12
Vfigure.figsize.(w, h)
p30102
sg14
(lp30103
sg2
S'(w, h)'
p30104
sba(icodemend.demo.code_suggest
Element
p30105
(dp30106
g10
I4
sg11
S''
sg12
Vfigure.figsize.(width, height)
p30107
sg14
(lp30108
sg2
S'(width, height)'
p30109
sba(icodemend.demo.code_suggest
Element
p30110
(dp30111
g10
I3
sg11
S''
sg12
Vfigure.figsize.(20, 12)
p30112
sg14
(lp30113
sg2
S'(20, 12)'
p30114
sba(icodemend.demo.code_suggest
Element
p30115
(dp30116
g10
I3
sg11
S''
sg12
Vfigure.figsize.(20, 20)
p30117
sg14
(lp30118
sg2
S'(20, 20)'
p30119
sba(icodemend.demo.code_suggest
Element
p30120
(dp30121
g10
I3
sg11
S''
sg12
Vfigure.figsize.(3, 2)
p30122
sg14
(lp30123
sg2
S'(3, 2)'
p30124
sbag23833
a(icodemend.demo.code_suggest
Element
p30125
(dp30126
g10
I3
sg11
S''
sg12
Vfigure.figsize.(8, 4/5)
p30127
sg14
(lp30128
sg2
S'(8, 4.5)'
p30129
sbag25118
a(icodemend.demo.code_suggest
Element
p30130
(dp30131
g10
I3
sg11
S''
sg12
Vfigure.figsize.size
p30132
sg14
(lp30133
sg2
g627
sba(icodemend.demo.code_suggest
Element
p30134
(dp30135
g10
I2
sg11
S''
sg12
Vfigure.figsize.(((ncols * wcell) + wpad), ((nrows * hcell) + hpad))
p30136
sg14
(lp30137
sg2
S'(((ncols * wcell) + wpad), ((nrows * hcell) + hpad))'
p30138
sbag7314
a(icodemend.demo.code_suggest
Element
p30139
(dp30140
g10
I2
sg11
S''
sg12
Vfigure.figsize.(10, 6)
p30141
sg14
(lp30142
sg2
S'(10, 6)'
p30143
sbag11708
ag8671
a(icodemend.demo.code_suggest
Element
p30144
(dp30145
g10
I2
sg11
S''
sg12
Vfigure.figsize.(12/5, 2/5)
p30146
sg14
(lp30147
sg2
S'(12.5, 2.5)'
p30148
sba(icodemend.demo.code_suggest
Element
p30149
(dp30150
g10
I2
sg11
S''
sg12
Vfigure.figsize.(14, 6)
p30151
sg14
(lp30152
sg2
S'(14, 6)'
p30153
sba(icodemend.demo.code_suggest
Element
p30154
(dp30155
g10
I2
sg11
S''
sg12
Vfigure.figsize.(15, 5)
p30156
sg14
(lp30157
sg2
S'(15, 5)'
p30158
sba(icodemend.demo.code_suggest
Element
p30159
(dp30160
g10
I2
sg11
S''
sg12
Vfigure.figsize.(15, 8)
p30161
sg14
(lp30162
sg2
S'(15, 8)'
p30163
sba(icodemend.demo.code_suggest
Element
p30164
(dp30165
g10
I2
sg11
S''
sg12
Vfigure.figsize.(16, 4)
p30166
sg14
(lp30167
sg2
S'(16, 4)'
p30168
sba(icodemend.demo.code_suggest
Element
p30169
(dp30170
g10
I2
sg11
S''
sg12
Vfigure.figsize.(16, 6)
p30171
sg14
(lp30172
sg2
S'(16, 6)'
p30173
sbag27135
ag20913
a(icodemend.demo.code_suggest
Element
p30174
(dp30175
g10
I2
sg11
S''
sg12
Vfigure.figsize.(20, 2)
p30176
sg14
(lp30177
sg2
S'(20, 2)'
p30178
sba(icodemend.demo.code_suggest
Element
p30179
(dp30180
g10
I2
sg11
S''
sg12
Vfigure.figsize.(22, 12)
p30181
sg14
(lp30182
sg2
S'(22, 12)'
p30183
sba(icodemend.demo.code_suggest
Element
p30184
(dp30185
g10
I2
sg11
S''
sg12
Vfigure.figsize.(3, 3)
p30186
sg14
(lp30187
sg2
S'(3, 3)'
p30188
sbag20554
a(icodemend.demo.code_suggest
Element
p30189
(dp30190
g10
I2
sg11
S''
sg12
Vfigure.figsize.(6, 2)
p30191
sg14
(lp30192
sg2
S'(6, 2)'
p30193
sbag14813
a(icodemend.demo.code_suggest
Element
p30194
(dp30195
g10
I2
sg11
S''
sg12
Vfigure.figsize.(6, 8)
p30196
sg14
(lp30197
sg2
S'(6, 8)'
p30198
sba(icodemend.demo.code_suggest
Element
p30199
(dp30200
g10
I2
sg11
S''
sg12
Vfigure.figsize.(7, 5)
p30201
sg14
(lp30202
sg2
S'(7, 5)'
p30203
sbag6722
a(icodemend.demo.code_suggest
Element
p30204
(dp30205
g10
I2
sg11
S''
sg12
Vfigure.figsize.[8, 8]
p30206
sg14
(lp30207
sg2
S'[8, 8]'
p30208
sbag6752
a(icodemend.demo.code_suggest
Element
p30209
(dp30210
g10
I1
sg11
S''
sg12
Vfigure.figsize.(((3 * wcell) + wpad), ((nrows * hcell) + hpad))
p30211
sg14
(lp30212
sg2
S'(((3 * wcell) + wpad), ((nrows * hcell) + hpad))'
p30213
sba(icodemend.demo.code_suggest
Element
p30214
(dp30215
g10
I1
sg11
S''
sg12
Vfigure.figsize.((1 * SCALE), (1 * SCALE))
p30216
sg14
(lp30217
sg2
S'((1 * SCALE), (1 * SCALE))'
p30218
sba(icodemend.demo.code_suggest
Element
p30219
(dp30220
g10
I1
sg11
S''
sg12
Vfigure.figsize.((800 / my_dpi), (800 / my_dpi))
p30221
sg14
(lp30222
sg2
S'((800 / my_dpi), (800 / my_dpi))'
p30223
sbag5034
ag26225
ag8728
a(icodemend.demo.code_suggest
Element
p30224
(dp30225
g10
I1
sg11
S''
sg12
Vfigure.figsize.((ypixels / dpi), (xpixels / dpi))
p30226
sg14
(lp30227
sg2
S'((ypixels / dpi), (xpixels / dpi))'
p30228
sba(icodemend.demo.code_suggest
Element
p30229
(dp30230
g10
I1
sg11
S''
sg12
Vfigure.figsize.(1, 1)
p30231
sg14
(lp30232
sg2
S'(1, 1)'
p30233
sba(icodemend.demo.code_suggest
Element
p30234
(dp30235
g10
I1
sg11
S''
sg12
Vfigure.figsize.(1, 5)
p30236
sg14
(lp30237
sg2
S'(1, 5)'
p30238
sba(icodemend.demo.code_suggest
Element
p30239
(dp30240
g10
I1
sg11
S''
sg12
Vfigure.figsize.(1/0, 1/0)
p30241
sg14
(lp30242
sg2
S'(1.0, 1.0)'
p30243
sba(icodemend.demo.code_suggest
Element
p30244
(dp30245
g10
I1
sg11
S''
sg12
Vfigure.figsize.(1/5, 1/3)
p30246
sg14
(lp30247
sg2
S'(1.5, 1.3)'
p30248
sba(icodemend.demo.code_suggest
Element
p30249
(dp30250
g10
I1
sg11
S''
sg12
Vfigure.figsize.(10, 16)
p30251
sg14
(lp30252
sg2
S'(10, 16)'
p30253
sba(icodemend.demo.code_suggest
Element
p30254
(dp30255
g10
I1
sg11
S''
sg12
Vfigure.figsize.(10, 2)
p30256
sg14
(lp30257
sg2
S'(10, 2)'
p30258
sba(icodemend.demo.code_suggest
Element
p30259
(dp30260
g10
I1
sg11
S''
sg12
Vfigure.figsize.(10, 4)
p30261
sg14
(lp30262
sg2
S'(10, 4)'
p30263
sba(icodemend.demo.code_suggest
Element
p30264
(dp30265
g10
I1
sg11
S''
sg12
Vfigure.figsize.(10, 7)
p30266
sg14
(lp30267
sg2
S'(10, 7)'
p30268
sba(icodemend.demo.code_suggest
Element
p30269
(dp30270
g10
I1
sg11
S''
sg12
Vfigure.figsize.(10, 9)
p30271
sg14
(lp30272
sg2
S'(10, 9)'
p30273
sba(icodemend.demo.code_suggest
Element
p30274
(dp30275
g10
I1
sg11
S''
sg12
Vfigure.figsize.(10/24, 2/56)
p30276
sg14
(lp30277
sg2
S'(10.24, 2.56)'
p30278
sba(icodemend.demo.code_suggest
Element
p30279
(dp30280
g10
I1
sg11
S''
sg12
Vfigure.figsize.(10/24, 5/12)
p30281
sg14
(lp30282
sg2
S'(10.24, 5.12)'
p30283
sba(icodemend.demo.code_suggest
Element
p30284
(dp30285
g10
I1
sg11
S''
sg12
Vfigure.figsize.(11, 5)
p30286
sg14
(lp30287
sg2
S'(11, 5)'
p30288
sba(icodemend.demo.code_suggest
Element
p30289
(dp30290
g10
I1
sg11
S''
sg12
Vfigure.figsize.(11, 8/0)
p30291
sg14
(lp30292
sg2
S'(11, 8.0)'
p30293
sba(icodemend.demo.code_suggest
Element
p30294
(dp30295
g10
I1
sg11
S''
sg12
Vfigure.figsize.(11/69, 8/27)
p30296
sg14
(lp30297
sg2
S'(11.69, 8.27)'
p30298
sba(icodemend.demo.code_suggest
Element
p30299
(dp30300
g10
I1
sg11
S''
sg12
Vfigure.figsize.(12, 2)
p30301
sg14
(lp30302
sg2
S'(12, 2)'
p30303
sba(icodemend.demo.code_suggest
Element
p30304
(dp30305
g10
I1
sg11
S''
sg12
Vfigure.figsize.(12, 7)
p30306
sg14
(lp30307
sg2
S'(12, 7)'
p30308
sba(icodemend.demo.code_suggest
Element
p30309
(dp30310
g10
I1
sg11
S''
sg12
Vfigure.figsize.(12, 9)
p30311
sg14
(lp30312
sg2
S'(12, 9)'
p30313
sba(icodemend.demo.code_suggest
Element
p30314
(dp30315
g10
I1
sg11
S''
sg12
Vfigure.figsize.(13, 13)
p30316
sg14
(lp30317
sg2
S'(13, 13)'
p30318
sbag25051
a(icodemend.demo.code_suggest
Element
p30319
(dp30320
g10
I1
sg11
S''
sg12
Vfigure.figsize.(14, 8)
p30321
sg14
(lp30322
sg2
S'(14, 8)'
p30323
sba(icodemend.demo.code_suggest
Element
p30324
(dp30325
g10
I1
sg11
S''
sg12
Vfigure.figsize.(15, 10)
p30326
sg14
(lp30327
sg2
S'(15, 10)'
p30328
sbag2219
a(icodemend.demo.code_suggest
Element
p30329
(dp30330
g10
I1
sg11
S''
sg12
Vfigure.figsize.(15, 6)
p30331
sg14
(lp30332
sg2
S'(15, 6)'
p30333
sba(icodemend.demo.code_suggest
Element
p30334
(dp30335
g10
I1
sg11
S''
sg12
Vfigure.figsize.(16, 10)
p30336
sg14
(lp30337
sg2
S'(16, 10)'
p30338
sba(icodemend.demo.code_suggest
Element
p30339
(dp30340
g10
I1
sg11
S''
sg12
Vfigure.figsize.(16/8, 8/0)
p30341
sg14
(lp30342
sg2
S'(16.8, 8.0)'
p30343
sbag23873
ag24735
a(icodemend.demo.code_suggest
Element
p30344
(dp30345
g10
I1
sg11
S''
sg12
Vfigure.figsize.(18, 4)
p30346
sg14
(lp30347
sg2
S'(18, 4)'
p30348
sbag26865
a(icodemend.demo.code_suggest
Element
p30349
(dp30350
g10
I1
sg11
S''
sg12
Vfigure.figsize.(20, 100)
p30351
sg14
(lp30352
sg2
S'(20, 100)'
p30353
sba(icodemend.demo.code_suggest
Element
p30354
(dp30355
g10
I1
sg11
S''
sg12
Vfigure.figsize.(20, 222)
p30356
sg14
(lp30357
sg2
S'(20, 222)'
p30358
sbag248
ag6471
a(icodemend.demo.code_suggest
Element
p30359
(dp30360
g10
I1
sg11
S''
sg12
Vfigure.figsize.(24, 17)
p30361
sg14
(lp30362
sg2
S'(24, 17)'
p30363
sbag15355
a(icodemend.demo.code_suggest
Element
p30364
(dp30365
g10
I1
sg11
S''
sg12
Vfigure.figsize.(3, 9)
p30366
sg14
(lp30367
sg2
S'(3, 9)'
p30368
sba(icodemend.demo.code_suggest
Element
p30369
(dp30370
g10
I1
sg11
S''
sg12
Vfigure.figsize.(3/25, 3)
p30371
sg14
(lp30372
sg2
S'(3.25, 3)'
p30373
sba(icodemend.demo.code_suggest
Element
p30374
(dp30375
g10
I1
sg11
S''
sg12
Vfigure.figsize.(30, 26)
p30376
sg14
(lp30377
sg2
S'(30, 26)'
p30378
sba(icodemend.demo.code_suggest
Element
p30379
(dp30380
g10
I1
sg11
S''
sg12
Vfigure.figsize.(4, 1)
p30381
sg14
(lp30382
sg2
S'(4, 1)'
p30383
sba(icodemend.demo.code_suggest
Element
p30384
(dp30385
g10
I1
sg11
S''
sg12
Vfigure.figsize.(4/0, 4/0)
p30386
sg14
(lp30387
sg2
S'(4.0, 4.0)'
p30388
sba(icodemend.demo.code_suggest
Element
p30389
(dp30390
g10
I1
sg11
S''
sg12
Vfigure.figsize.(4/5, 2/5)
p30391
sg14
(lp30392
sg2
S'(4.5, 2.5)'
p30393
sbag27243
a(icodemend.demo.code_suggest
Element
p30394
(dp30395
g10
I1
sg11
S''
sg12
Vfigure.figsize.(5, 3)
p30396
sg14
(lp30397
sg2
S'(5, 3)'
p30398
sba(icodemend.demo.code_suggest
Element
p30399
(dp30400
g10
I1
sg11
S''
sg12
Vfigure.figsize.(5, 3/5)
p30401
sg14
(lp30402
sg2
S'(5, 3.5)'
p30403
sba(icodemend.demo.code_suggest
Element
p30404
(dp30405
g10
I1
sg11
S''
sg12
Vfigure.figsize.(5, 6)
p30406
sg14
(lp30407
sg2
S'(5, 6)'
p30408
sba(icodemend.demo.code_suggest
Element
p30409
(dp30410
g10
I1
sg11
S''
sg12
Vfigure.figsize.(5, 7/5)
p30411
sg14
(lp30412
sg2
S'(5, 7.5)'
p30413
sbag12989
a(icodemend.demo.code_suggest
Element
p30414
(dp30415
g10
I1
sg11
S''
sg12
Vfigure.figsize.(5/12, 5/12)
p30416
sg14
(lp30417
sg2
S'(5.12, 5.12)'
p30418
sba(icodemend.demo.code_suggest
Element
p30419
(dp30420
g10
I1
sg11
S''
sg12
Vfigure.figsize.(5/5, 3)
p30421
sg14
(lp30422
sg2
S'(5.5, 3)'
p30423
sba(icodemend.demo.code_suggest
Element
p30424
(dp30425
g10
I1
sg11
S''
sg12
Vfigure.figsize.(5/5, 4)
p30426
sg14
(lp30427
sg2
S'(5.5, 4)'
p30428
sbag3101
a(icodemend.demo.code_suggest
Element
p30429
(dp30430
g10
I1
sg11
S''
sg12
Vfigure.figsize.(5/5, 7/5)
p30431
sg14
(lp30432
sg2
S'(5.5, 7.5)'
p30433
sba(icodemend.demo.code_suggest
Element
p30434
(dp30435
g10
I1
sg11
S''
sg12
Vfigure.figsize.(5/5, figsize)
p30436
sg14
(lp30437
sg2
S'(5.5, figsize)'
p30438
sba(icodemend.demo.code_suggest
Element
p30439
(dp30440
g10
I1
sg11
S''
sg12
Vfigure.figsize.(50, 20)
p30441
sg14
(lp30442
sg2
S'(50, 20)'
p30443
sbag12488
a(icodemend.demo.code_suggest
Element
p30444
(dp30445
g10
I1
sg11
S''
sg12
Vfigure.figsize.(6, 9)
p30446
sg14
(lp30447
sg2
S'(6, 9)'
p30448
sba(icodemend.demo.code_suggest
Element
p30449
(dp30450
g10
I1
sg11
S''
sg12
Vfigure.figsize.(6/2, 5/6)
p30451
sg14
(lp30452
sg2
S'(6.2, 5.6)'
p30453
sba(icodemend.demo.code_suggest
Element
p30454
(dp30455
g10
I1
sg11
S''
sg12
Vfigure.figsize.(6/5, 12)
p30456
sg14
(lp30457
sg2
S'(6.5, 12)'
p30458
sba(icodemend.demo.code_suggest
Element
p30459
(dp30460
g10
I1
sg11
S''
sg12
Vfigure.figsize.(6/5, 6)
p30461
sg14
(lp30462
sg2
S'(6.5, 6)'
p30463
sbag5893
a(icodemend.demo.code_suggest
Element
p30464
(dp30465
g10
I1
sg11
S''
sg12
Vfigure.figsize.(7, 6)
p30466
sg14
(lp30467
sg2
S'(7, 6)'
p30468
sba(icodemend.demo.code_suggest
Element
p30469
(dp30470
g10
I1
sg11
S''
sg12
Vfigure.figsize.(7/5, 4/0)
p30471
sg14
(lp30472
sg2
S'(7.5, 4.0)'
p30473
sba(icodemend.demo.code_suggest
Element
p30474
(dp30475
g10
I1
sg11
S''
sg12
Vfigure.figsize.(8, 1)
p30476
sg14
(lp30477
sg2
S'(8, 1)'
p30478
sba(icodemend.demo.code_suggest
Element
p30479
(dp30480
g10
I1
sg11
S''
sg12
Vfigure.figsize.(8, 1/5)
p30481
sg14
(lp30482
sg2
S'(8, 1.5)'
p30483
sba(icodemend.demo.code_suggest
Element
p30484
(dp30485
g10
I1
sg11
S''
sg12
Vfigure.figsize.(8, 14)
p30486
sg14
(lp30487
sg2
S'(8, 14)'
p30488
sbag10256
ag22571
a(icodemend.demo.code_suggest
Element
p30489
(dp30490
g10
I1
sg11
S''
sg12
Vfigure.figsize.(8/27, 11/69)
p30491
sg14
(lp30492
sg2
S'(8.27, 11.69)'
p30493
sba(icodemend.demo.code_suggest
Element
p30494
(dp30495
g10
I1
sg11
S''
sg12
Vfigure.figsize.(9, 1/5)
p30496
sg14
(lp30497
sg2
S'(9, 1.5)'
p30498
sba(icodemend.demo.code_suggest
Element
p30499
(dp30500
g10
I1
sg11
S''
sg12
Vfigure.figsize.(9, 4)
p30501
sg14
(lp30502
sg2
S'(9, 4)'
p30503
sba(icodemend.demo.code_suggest
Element
p30504
(dp30505
g10
I1
sg11
S''
sg12
Vfigure.figsize.(9, 5)
p30506
sg14
(lp30507
sg2
S'(9, 5)'
p30508
sba(icodemend.demo.code_suggest
Element
p30509
(dp30510
g10
I1
sg11
S''
sg12
Vfigure.figsize.(9, 6)
p30511
sg14
(lp30512
sg2
S'(9, 6)'
p30513
sba(icodemend.demo.code_suggest
Element
p30514
(dp30515
g10
I1
sg11
S''
sg12
Vfigure.figsize.(9, 7)
p30516
sg14
(lp30517
sg2
S'(9, 7)'
p30518
sba(icodemend.demo.code_suggest
Element
p30519
(dp30520
g10
I1
sg11
S''
sg12
Vfigure.figsize.(9, 9)
p30521
sg14
(lp30522
sg2
S'(9, 9)'
p30523
sba(icodemend.demo.code_suggest
Element
p30524
(dp30525
g10
I1
sg11
S''
sg12
Vfigure.figsize.(9/0, 6/1)
p30526
sg14
(lp30527
sg2
S'(9.0, 6.1)'
p30528
sba(icodemend.demo.code_suggest
Element
p30529
(dp30530
g10
I1
sg11
S''
sg12
Vfigure.figsize.(fig_w, fig_h)
p30531
sg14
(lp30532
sg2
S'(fig_w, fig_h)'
p30533
sba(icodemend.demo.code_suggest
Element
p30534
(dp30535
g10
I1
sg11
S''
sg12
Vfigure.figsize.(figwidth, figheight)
p30536
sg14
(lp30537
sg2
S'(figwidth, figheight)'
p30538
sbag10767
a(icodemend.demo.code_suggest
Element
p30539
(dp30540
g10
I1
sg11
S''
sg12
Vfigure.figsize.(plot_width, plot_height)
p30541
sg14
(lp30542
sg2
S'(plot_width, plot_height)'
p30543
sba(icodemend.demo.code_suggest
Element
p30544
(dp30545
g10
I1
sg11
S''
sg12
Vfigure.figsize.(wid, hei)
p30546
sg14
(lp30547
sg2
S'(wid, hei)'
p30548
sba(icodemend.demo.code_suggest
Element
p30549
(dp30550
g10
I1
sg11
S''
sg12
Vfigure.figsize.(x_size, y_size)
p30551
sg14
(lp30552
sg2
S'(x_size, y_size)'
p30553
sbag7122
ag6649
ag8244
ag20462
a(icodemend.demo.code_suggest
Element
p30554
(dp30555
g10
I1
sg11
S''
sg12
Vfigure.figsize.[6, 6]
p30556
sg14
(lp30557
sg2
S'[6, 6]'
p30558
sbag11130
a(icodemend.demo.code_suggest
Element
p30559
(dp30560
g10
I1
sg11
S''
sg12
Vfigure.figsize.figSize
p30561
sg14
(lp30562
sg2
S'figSize'
p30563
sba(icodemend.demo.code_suggest
Element
p30564
(dp30565
g10
I1
sg11
S''
sg12
Vfigure.figsize.figWH
p30566
sg14
(lp30567
sg2
S'figWH'
p30568
sba(icodemend.demo.code_suggest
Element
p30569
(dp30570
g10
I1
sg11
S''
sg12
Vfigure.figsize.fig_size
p30571
sg14
(lp30572
sg2
g1613
sba(icodemend.demo.code_suggest
Element
p30573
(dp30574
g10
I1
sg11
S''
sg12
Vfigure.figsize.figsize_inch
p30575
sg14
(lp30576
sg2
S'figsize_inch'
p30577
sbasg2
g29993
sbsS'xticks'
p30578
(icodemend.demo.code_suggest
Element
p30579
(dp30580
g10
I309
sg11
S'get or set the x - limits of the current tick locations and labels .'
p30581
sg12
Vxticks
p30582
sg14
(lp30583
g6458
a(icodemend.demo.code_suggest
Element
p30584
(dp30585
g10
I0
sg11
S'set the font properties that control the text .'
p30586
sg12
Vxticks.fontproperties
p30587
sg14
(lp30588
sg2
S'fontproperties'
p30589
sbag6343
a(icodemend.demo.code_suggest
Element
p30590
(dp30591
g10
I0
sg11
S'set the text string s'
p30592
sg12
Vxticks.text
p30593
sg14
(lp30594
sg2
S'text'
p30595
sba(icodemend.demo.code_suggest
Element
p30596
(dp30597
g10
I0
sg11
S'set the x position of the text|||get or set the x - limits of the current tick locations and labels .'
p30598
sg12
Vxticks.x
p30599
sg14
(lp30600
sg2
S'x'
sbag23251
asg2
g30578
sbs(S'update_from'
p30601
S'hatch'
p30602
tp30603
(icodemend.demo.code_suggest
Element
p30604
(dp30605
g10
I0
sg11
S'set the hatching pattern'
p30606
sg12
Vupdate_from.hatch
p30607
sg14
(lp30608
sg2
g30602
sbs(S'set_yticklabels'
p30609
g18326
tp30610
g18321
s(S'axvspan'
p30611
S'xmin'
p30612
tp30613
(icodemend.demo.code_suggest
Element
p30614
(dp30615
g10
I0
sg11
S'draw a vertical span ( rectangle ) from xmin to xmax . with the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . that is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates .'
p30616
sg12
Vaxvspan.xmin
p30617
sg14
(lp30618
sg2
g30612
sbsS'get_fignums'
p30619
(icodemend.demo.code_suggest
Element
p30620
(dp30621
g10
I2
sg11
S'return a list of existing figure numbers .'
p30622
sg12
Vget_fignums
p30623
sg14
(lp30624
sg2
g30619
sbs(g958
g1010
g22905
tp30625
g22901
s(g93
g161
S'target'
p30626
tp30627
(icodemend.demo.code_suggest
Element
p30628
(dp30629
g10
I2
sg11
S''
sg12
Vannotate.xy.target
p30630
sg14
(lp30631
sg2
g30626
sbsg16795
(icodemend.demo.code_suggest
Element
p30632
(dp30633
g10
I0
sg11
S''
sg12
VToolHandles
p30634
sg14
(lp30635
(icodemend.demo.code_suggest
Element
p30636
(dp30637
g10
I0
sg11
S'matplotlib axes where tool handles are displayed .'
p30638
sg12
VToolHandles.ax
p30639
sg14
(lp30640
sg2
S'ax'
p30641
sba(icodemend.demo.code_suggest
Element
p30642
(dp30643
g10
I0
sg11
S'shape of marker used to display handle . see matplotlib.pyplot.plot .'
p30644
sg12
VToolHandles.marker
p30645
sg14
(lp30646
sg2
S'marker'
p30647
sbag16798
ag24701
asg2
g16795
sbs(S'eventplot'
p30648
g23385
tp30649
g23380
s(g117
g118
g27458
tp30650
g27454
s(S'TextArea'
p30651
S'multilinebaseline'
p30652
tp30653
(icodemend.demo.code_suggest
Element
p30654
(dp30655
g10
I0
sg11
S'if true , baseline for multiline text is adjusted so that it is ( approximatedly ) center-aligned with singleline text .'
p30656
sg12
VTextArea.multilinebaseline
p30657
sg14
(lp30658
sg2
g30652
sbs(S'cohere'
p30659
S'gid'
p30660
tp30661
(icodemend.demo.code_suggest
Element
p30662
(dp30663
g10
I0
sg11
S'sets the ( group ) id for the artist'
p30664
sg12
Vcohere.gid
p30665
sg14
(lp30666
sg2
g30660
sbs(g2182
g325
S"'cool'"
p30667
tp30668
(icodemend.demo.code_suggest
Element
p30669
(dp30670
g10
I1
sg11
S''
sg12
Vmatshow.cmap.'cool'
p30671
sg14
(lp30672
sg2
g30667
sbs(S'barh'
p30673
S'xticks'
p30674
tp30675
(icodemend.demo.code_suggest
Element
p30676
(dp30677
g10
I0
sg11
S'set the x ticks with list of ticks'
p30678
sg12
Vbarh.xticks
p30679
sg14
(lp30680
sg2
g30674
sbsS'get_vertical_stem_width'
p30681
(icodemend.demo.code_suggest
Element
p30682
(dp30683
g10
I0
sg11
S'return the standard vertical stem width as float , or none if not specified in afm file .'
p30684
sg12
Vget_vertical_stem_width
p30685
sg14
(lp30686
sg2
g30681
sbs(g16
g132
S"'blueviolet'"
p30687
tp30688
(icodemend.demo.code_suggest
Element
p30689
(dp30690
g10
I1
sg11
S''
sg12
Vbar.color.'blueviolet'
p30691
sg14
(lp30692
sg2
g30687
sbs(S'identity'
p30693
g25266
tp30694
g25261
s(g117
g132
g28829
tp30695
g28825
s(g452
g132
S"'r'"
p30696
tp30697
(icodemend.demo.code_suggest
Element
p30698
(dp30699
g10
I2
sg11
S''
sg12
Verrorbar.color.'r'
p30700
sg14
(lp30701
sg2
g30696
sbs(g252
g12879
S'0'
tp30702
g14440
s(g20919
g8545
g1346
tp30703
g1342
s(S'tricontour'
p30704
g1440
tp30705
g1435
s(g8547
g8548
g19512
tp30706
g19508
s(S'vlines'
p30707
S'sketch_params'
p30708
tp30709
(icodemend.demo.code_suggest
Element
p30710
(dp30711
g10
I0
sg11
S'sets the sketch parameters .'
p30712
sg12
Vvlines.sketch_params
p30713
sg14
(lp30714
sg2
g30708
sbs(g8547
g8548
g19517
tp30715
g19513
sS'quiver'
p30716
(icodemend.demo.code_suggest
Element
p30717
(dp30718
g10
I48
sg11
S'plot a 2-d field of arrows .'
p30719
sg12
Vquiver
p30720
sg14
(lp30721
(icodemend.demo.code_suggest
Element
p30722
(dp30723
g10
I14
sg11
S'data units per arrow length unit , e.g. , m/s per plot width ; a smaller scale parameter makes the arrow longer . if none , a simple autoscaling algorithm is used , based on the average vector length and the number of vectors . the arrow length unit is given by the scale_units parameter'
p30724
sg12
Vquiver.scale
p30725
sg14
(lp30726
g15309
ag15647
a(icodemend.demo.code_suggest
Element
p30727
(dp30728
g10
I1
sg11
S''
sg12
Vquiver.scale.100
p30729
sg14
(lp30730
sg2
S'100'
p30731
sba(icodemend.demo.code_suggest
Element
p30732
(dp30733
g10
I1
sg11
S''
sg12
Vquiver.scale.15/0
p30734
sg14
(lp30735
sg2
S'15.0'
p30736
sba(icodemend.demo.code_suggest
Element
p30737
(dp30738
g10
I1
sg11
S''
sg12
Vquiver.scale.20/0
p30739
sg14
(lp30740
sg2
S'20.0'
p30741
sbasg2
S'scale'
p30742
sba(icodemend.demo.code_suggest
Element
p30743
(dp30744
g10
I11
sg11
S'this is a synonym for the polycollection facecolor kwarg . if c has been set , color has no effect .|||set both the edgecolor and the facecolor .'
p30745
sg12
Vquiver.color
p30746
sg14
(lp30747
(icodemend.demo.code_suggest
Element
p30748
(dp30749
g10
I3
sg11
S''
sg12
Vquiver.color.'r'
p30750
sg14
(lp30751
sg2
S"'r'"
p30752
sba(icodemend.demo.code_suggest
Element
p30753
(dp30754
g10
I2
sg11
S''
sg12
Vquiver.color.'k'
p30755
sg14
(lp30756
sg2
S"'k'"
p30757
sba(icodemend.demo.code_suggest
Element
p30758
(dp30759
g10
I1
sg11
S''
sg12
Vquiver.color.'b'
p30760
sg14
(lp30761
sg2
S"'b'"
p30762
sba(icodemend.demo.code_suggest
Element
p30763
(dp30764
g10
I1
sg11
S''
sg12
Vquiver.color.'blue'
p30765
sg14
(lp30766
sg2
S"'blue'"
p30767
sbag4074
asg2
S'color'
p30768
sba(icodemend.demo.code_suggest
Element
p30769
(dp30770
g10
I9
sg11
S"with the default ' uv ' , the arrow axis aspect ratio is 1 , so that if u*==*v the orientation of the arrow on the plot is 45 degrees ccw from the horizontal axis ( positive to the right ) . with ' xy ' , the arrow points from ( x,y ) to ( x+u , y+v ) . use this for plotting a gradient field , for example . alternatively , arbitrary angles may be specified as an array of values in degrees , ccw from the horizontal axis . note : inverting a data axis will correspondingly invert the arrows only with angles='xy ' ."
p30771
sg12
Vquiver.angles
p30772
sg14
(lp30773
(icodemend.demo.code_suggest
Element
p30774
(dp30775
g10
I8
sg11
S''
sg12
Vquiver.angles.'xy'
p30776
sg14
(lp30777
sg2
S"'xy'"
p30778
sba(icodemend.demo.code_suggest
Element
p30779
(dp30780
g10
I1
sg11
S''
sg12
Vquiver.angles.angles
p30781
sg14
(lp30782
sg2
S'angles'
p30783
sbasg2
S'angles'
p30784
sba(icodemend.demo.code_suggest
Element
p30785
(dp30786
g10
I7
sg11
S'for example , if scale_units is \' inches \' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long . if scale_units is \' width \' , then the vector will be half the width of the axes . if scale_units is \' x \' then the vector will be 0.5 x-axis units . to plot vectors in the x-y plane , with u and v having the same units as x and y , use " angles=\'xy \' , scale_units=\'xy \' , scale=1 " .'
p30787
sg12
Vquiver.scale_units
p30788
sg14
(lp30789
(icodemend.demo.code_suggest
Element
p30790
(dp30791
g10
I7
sg11
S''
sg12
Vquiver.scale_units.'xy'
p30792
sg14
(lp30793
sg2
S"'xy'"
p30794
sbasg2
S'scale_units'
p30795
sba(icodemend.demo.code_suggest
Element
p30796
(dp30797
g10
I6
sg11
S'arrow units ; the arrow dimensions except for length are in multiples of this unit . \' width \' or \' height \' : the width or height of the axes \' dots \' or \' inches \' : pixels or inches , based on the figure dpi \' x \' , \' y \' , or \' xy \' : x , y , or sqrt(x^2+y^2 ) data units the arrows scale differently depending on the units . for \' x \' or \' y \' , the arrows get larger as one zooms in ; for other units , the arrow size is independent of the zoom state . for \' width or \' height \' , the arrow size increases with the width and height of the axes , respectively , when the window is resized ; for \' dots \' or \' inches \' , resizing does not change the arrows .|||for example , if scale_units is \' inches \' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long . if scale_units is \' width \' , then the vector will be half the width of the axes . if scale_units is \' x \' then the vector will be 0.5 x-axis units . to plot vectors in the x-y plane , with u and v having the same units as x and y , use " angles=\'xy \' , scale_units=\'xy \' , scale=1 " .'
p30798
sg12
Vquiver.units
p30799
sg14
(lp30800
(icodemend.demo.code_suggest
Element
p30801
(dp30802
g10
I2
sg11
S''
sg12
Vquiver.units.'x'
p30803
sg14
(lp30804
sg2
S"'x'"
p30805
sbag20328
a(icodemend.demo.code_suggest
Element
p30806
(dp30807
g10
I1
sg11
S''
sg12
Vquiver.units.'inches'
p30808
sg14
(lp30809
sg2
S"'inches'"
p30810
sba(icodemend.demo.code_suggest
Element
p30811
(dp30812
g10
I1
sg11
S''
sg12
Vquiver.units.'width'
p30813
sg14
(lp30814
sg2
S"'width'"
p30815
sba(icodemend.demo.code_suggest
Element
p30816
(dp30817
g10
I1
sg11
S''
sg12
Vquiver.units.'y'
p30818
sg14
(lp30819
sg2
S"'y'"
p30820
sbasg2
S'units'
p30821
sbag24088
ag16222
ag24886
a(icodemend.demo.code_suggest
Element
p30822
(dp30823
g10
I3
sg11
S'head width as multiple of shaft width , default is 3|||the defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength . to make the arrow more pointed , reduce headwidth or increase headlength and headaxislength . to make the head smaller relative to the shaft , scale down all the head parameters . you will probably do best to leave minshaft alone .'
p30824
sg12
Vquiver.headwidth
p30825
sg14
(lp30826
(icodemend.demo.code_suggest
Element
p30827
(dp30828
g10
I1
sg11
S''
sg12
Vquiver.headwidth.0/0
p30829
sg14
(lp30830
sg2
S'0.0'
p30831
sba(icodemend.demo.code_suggest
Element
p30832
(dp30833
g10
I1
sg11
S''
sg12
Vquiver.headwidth.300
p30834
sg14
(lp30835
sg2
S'300'
p30836
sba(icodemend.demo.code_suggest
Element
p30837
(dp30838
g10
I1
sg11
S''
sg12
Vquiver.headwidth.size
p30839
sg14
(lp30840
sg2
g627
sbasg2
S'headwidth'
p30841
sba(icodemend.demo.code_suggest
Element
p30842
(dp30843
g10
I3
sg11
S'set the linewidth(s ) for the collection .'
p30844
sg12
Vquiver.linewidth
p30845
sg14
(lp30846
(icodemend.demo.code_suggest
Element
p30847
(dp30848
g10
I2
sg11
S''
sg12
Vquiver.linewidth.1
p30849
sg14
(lp30850
sg2
S'1'
sbag13514
asg2
S'linewidth'
p30851
sbag26361
ag15654
a(icodemend.demo.code_suggest
Element
p30852
(dp30853
g10
I2
sg11
S'the defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength . to make the arrow more pointed , reduce headwidth or increase headlength and headaxislength . to make the head smaller relative to the shaft , scale down all the head parameters . you will probably do best to leave minshaft alone .|||head length as multiple of shaft width , default is 5'
p30854
sg12
Vquiver.headlength
p30855
sg14
(lp30856
g6067
a(icodemend.demo.code_suggest
Element
p30857
(dp30858
g10
I1
sg11
S''
sg12
Vquiver.headlength.size
p30859
sg14
(lp30860
sg2
g627
sbasg2
S'headlength'
p30861
sba(icodemend.demo.code_suggest
Element
p30862
(dp30863
g10
I2
sg11
S'set the patch linestyle|||set the linestyle(s ) for the collection .'
p30864
sg12
Vquiver.linestyle
p30865
sg14
(lp30866
g2254
asg2
S'linestyle'
p30867
sba(icodemend.demo.code_suggest
Element
p30868
(dp30869
g10
I1
sg11
S'set the alpha tranparencies of the collection .'
p30870
sg12
Vquiver.alpha
p30871
sg14
(lp30872
(icodemend.demo.code_suggest
Element
p30873
(dp30874
g10
I1
sg11
S''
sg12
Vquiver.alpha.0/1
p30875
sg14
(lp30876
sg2
S'0.1'
p30877
sbasg2
S'alpha'
p30878
sba(icodemend.demo.code_suggest
Element
p30879
(dp30880
g10
I1
sg11
S'set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp'
p30881
sg12
Vquiver.clim
p30882
sg14
(lp30883
(icodemend.demo.code_suggest
Element
p30884
(dp30885
g10
I1
sg11
S''
sg12
Vquiver.clim.[(-2), 2]
p30886
sg14
(lp30887
sg2
S'[(-2), 2]'
p30888
sbasg2
S'clim'
p30889
sba(icodemend.demo.code_suggest
Element
p30890
(dp30891
g10
I1
sg11
S'set the colormap for luminance data'
p30892
sg12
Vquiver.cmap
p30893
sg14
(lp30894
g15595
asg2
S'cmap'
p30895
sbag23714
a(icodemend.demo.code_suggest
Element
p30896
(dp30897
g10
I1
sg11
S'minimum length as a multiple of shaft width ; if an arrow length is less than this , plot a dot ( hexagon ) of this diameter instead . default is 1 .'
p30898
sg12
Vquiver.minlength
p30899
sg14
(lp30900
(icodemend.demo.code_suggest
Element
p30901
(dp30902
g10
I1
sg11
S''
sg12
Vquiver.minlength.1
p30903
sg14
(lp30904
sg2
S'1'
sbasg2
S'minlength'
p30905
sba(icodemend.demo.code_suggest
Element
p30906
(dp30907
g10
I1
sg11
S'length below which arrow scales , in units of head length . do not set this to less than 1 , or small arrows will look terrible ! default is 1'
p30908
sg12
Vquiver.minshaft
p30909
sg14
(lp30910
g26464
asg2
S'minshaft'
p30911
sba(icodemend.demo.code_suggest
Element
p30912
(dp30913
g10
I0
sg11
S'u , v , c may be masked arrays , but masked x , y are not supported at present .'
p30914
sg12
Vquiver.C
p30915
sg14
(lp30916
sg2
S'C'
sba(icodemend.demo.code_suggest
Element
p30917
(dp30918
g10
I0
sg11
S'for example , if scale_units is \' inches \' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long . if scale_units is \' width \' , then the vector will be half the width of the axes . if scale_units is \' x \' then the vector will be 0.5 x-axis units . to plot vectors in the x-y plane , with u and v having the same units as x and y , use " angles=\'xy \' , scale_units=\'xy \' , scale=1 " .|||data units per arrow length unit , e.g. , m/s per plot width ; a smaller scale parameter makes the arrow longer . if none , a simple autoscaling algorithm is used , based on the average vector length and the number of vectors . the arrow length unit is given by the scale_units parameter'
p30919
sg12
Vquiver.None
p30920
sg14
(lp30921
sg2
S'None'
p30922
sbag15149
a(icodemend.demo.code_suggest
Element
p30923
(dp30924
g10
I0
sg11
S'all arguments may be 1-d or 2-d arrays or sequences . if x and y are absent , they will be generated as a uniform grid . if u and v are 2-d arrays but x and y are 1-d , and if len(x ) and len(y ) match the column and row dimensions of u , then x and y will be expanded with numpy.meshgrid ( ) .|||u , v , c may be masked arrays , but masked x , y are not supported at present .'
p30925
sg12
Vquiver.V
p30926
sg14
(lp30927
sg2
S'V'
sba(icodemend.demo.code_suggest
Element
p30928
(dp30929
g10
I0
sg11
S'all arguments may be 1-d or 2-d arrays or sequences . if x and y are absent , they will be generated as a uniform grid . if u and v are 2-d arrays but x and y are 1-d , and if len(x ) and len(y ) match the column and row dimensions of u , then x and y will be expanded with numpy.meshgrid ( ) .|||u , v , c may be masked arrays , but masked x , y are not supported at present .'
p30930
sg12
Vquiver.X
p30931
sg14
(lp30932
sg2
S'X'
sba(icodemend.demo.code_suggest
Element
p30933
(dp30934
g10
I0
sg11
S'all arguments may be 1-d or 2-d arrays or sequences . if x and y are absent , they will be generated as a uniform grid . if u and v are 2-d arrays but x and y are 1-d , and if len(x ) and len(y ) match the column and row dimensions of u , then x and y will be expanded with numpy.meshgrid ( ) .|||u , v , c may be masked arrays , but masked x , y are not supported at present .'
p30935
sg12
Vquiver.Y
p30936
sg14
(lp30937
sg2
S'Y'
sbag13682
a(icodemend.demo.code_suggest
Element
p30938
(dp30939
g10
I0
sg11
S'set agg_filter fuction .'
p30940
sg12
Vquiver.agg_filter
p30941
sg14
(lp30942
sg2
S'agg_filter'
p30943
sbag4381
a(icodemend.demo.code_suggest
Element
p30944
(dp30945
g10
I0
sg11
S"set the artist 's animation state ."
p30946
sg12
Vquiver.animated
p30947
sg14
(lp30948
sg2
S'animated'
p30949
sba(icodemend.demo.code_suggest
Element
p30950
(dp30951
g10
I0
sg11
S'set the antialiasing state for rendering .'
p30952
sg12
Vquiver.antialiased
p30953
sg14
(lp30954
sg2
S'antialiased'
p30955
sba(icodemend.demo.code_suggest
Element
p30956
(dp30957
g10
I0
sg11
S'set the image array from numpy array a'
p30958
sg12
Vquiver.array
p30959
sg14
(lp30960
sg2
S'array'
p30961
sba(icodemend.demo.code_suggest
Element
p30962
(dp30963
g10
I0
sg11
S'aspect'
p30964
sg12
Vquiver.aspect
p30965
sg14
(lp30966
sg2
S'aspect'
p30967
sba(icodemend.demo.code_suggest
Element
p30968
(dp30969
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p30970
sg12
Vquiver.axes
p30971
sg14
(lp30972
sg2
S'axes'
p30973
sba(icodemend.demo.code_suggest
Element
p30974
(dp30975
g10
I0
sg11
S"set the artist 's clip bbox ."
p30976
sg12
Vquiver.clip_box
p30977
sg14
(lp30978
sg2
S'clip_box'
p30979
sba(icodemend.demo.code_suggest
Element
p30980
(dp30981
g10
I0
sg11
S'set whether artist uses clipping .'
p30982
sg12
Vquiver.clip_on
p30983
sg14
(lp30984
sg2
S'clip_on'
p30985
sbag998
ag6627
a(icodemend.demo.code_suggest
Element
p30986
(dp30987
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p30988
sg12
Vquiver.codes
p30989
sg14
(lp30990
sg2
S'codes'
p30991
sba(icodemend.demo.code_suggest
Element
p30992
(dp30993
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p30994
sg12
Vquiver.color_cycle
p30995
sg14
(lp30996
sg2
S'color_cycle'
p30997
sbag17929
ag23808
a(icodemend.demo.code_suggest
Element
p30998
(dp30999
g10
I0
sg11
S'set the edgecolor(s ) of the collection .'
p31000
sg12
Vquiver.edgecolor
p31001
sg14
(lp31002
sg2
S'edgecolor'
p31003
sba(icodemend.demo.code_suggest
Element
p31004
(dp31005
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p31006
sg12
Vquiver.figure
p31007
sg14
(lp31008
sg2
S'figure'
p31009
sbag6985
a(icodemend.demo.code_suggest
Element
p31010
(dp31011
g10
I0
sg11
S'set the label to s for auto legend .'
p31012
sg12
Vquiver.label
p31013
sg14
(lp31014
sg2
S'label'
p31015
sba(icodemend.demo.code_suggest
Element
p31016
(dp31017
g10
I0
sg11
S'set the normalization instance'
p31018
sg12
Vquiver.norm
p31019
sg14
(lp31020
sg2
S'norm'
p31021
sba(icodemend.demo.code_suggest
Element
p31022
(dp31023
g10
I0
sg11
S'set how offsets are applied .'
p31024
sg12
Vquiver.offset_position
p31025
sg14
(lp31026
sg2
S'offset_position'
p31027
sbag22635
ag6141
a(icodemend.demo.code_suggest
Element
p31028
(dp31029
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p31030
sg12
Vquiver.picker
p31031
sg14
(lp31032
sg2
S'picker'
p31033
sbag13392
a(icodemend.demo.code_suggest
Element
p31034
(dp31035
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p31036
sg12
Vquiver.prop_cycle
p31037
sg14
(lp31038
sg2
S'prop_cycle'
p31039
sba(icodemend.demo.code_suggest
Element
p31040
(dp31041
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p31042
sg12
Vquiver.rasterized
p31043
sg14
(lp31044
sg2
S'rasterized'
p31045
sba(icodemend.demo.code_suggest
Element
p31046
(dp31047
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p31048
sg12
Vquiver.readonly
p31049
sg14
(lp31050
sg2
S'readonly'
p31051
sba(icodemend.demo.code_suggest
Element
p31052
(dp31053
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p31054
sg12
Vquiver.size_inches
p31055
sg14
(lp31056
sg2
S'size_inches'
p31057
sbag3271
ag23996
a(icodemend.demo.code_suggest
Element
p31058
(dp31059
g10
I0
sg11
S'sets the snap setting which may be'
p31060
sg12
Vquiver.snap
p31061
sg14
(lp31062
sg2
S'snap'
p31063
sba(icodemend.demo.code_suggest
Element
p31064
(dp31065
g10
I0
sg11
S'set a title for the axes .'
p31066
sg12
Vquiver.title
p31067
sg14
(lp31068
sg2
S'title'
p31069
sba(icodemend.demo.code_suggest
Element
p31070
(dp31071
g10
I0
sg11
S'set the transform instance used by this artist .'
p31072
sg12
Vquiver.transform
p31073
sg14
(lp31074
sg2
S'transform'
p31075
sba(icodemend.demo.code_suggest
Element
p31076
(dp31077
g10
I0
sg11
S'sets the url for the artist'
p31078
sg12
Vquiver.url
p31079
sg14
(lp31080
sg2
S'url'
p31081
sba(icodemend.demo.code_suggest
Element
p31082
(dp31083
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p31084
sg12
Vquiver.vertices
p31085
sg14
(lp31086
sg2
S'vertices'
p31087
sba(icodemend.demo.code_suggest
Element
p31088
(dp31089
g10
I0
sg11
S"set the artist 's visiblity ."
p31090
sg12
Vquiver.visible
p31091
sg14
(lp31092
sg2
S'visible'
p31093
sba(icodemend.demo.code_suggest
Element
p31094
(dp31095
g10
I0
sg11
S'set the label for the xaxis .'
p31096
sg12
Vquiver.xlabel
p31097
sg14
(lp31098
sg2
S'xlabel'
p31099
sba(icodemend.demo.code_suggest
Element
p31100
(dp31101
g10
I0
sg11
S'set the data limits for the xaxis'
p31102
sg12
Vquiver.xlim
p31103
sg14
(lp31104
sg2
S'xlim'
p31105
sba(icodemend.demo.code_suggest
Element
p31106
(dp31107
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p31108
sg12
Vquiver.xmargin
p31109
sg14
(lp31110
sg2
S'xmargin'
p31111
sba(icodemend.demo.code_suggest
Element
p31112
(dp31113
g10
I0
sg11
S'set the scaling of the x-axis'
p31114
sg12
Vquiver.xscale
p31115
sg14
(lp31116
sg2
S'xscale'
p31117
sba(icodemend.demo.code_suggest
Element
p31118
(dp31119
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p31120
sg12
Vquiver.xticklabels
p31121
sg14
(lp31122
sg2
S'xticklabels'
p31123
sba(icodemend.demo.code_suggest
Element
p31124
(dp31125
g10
I0
sg11
S'set the x ticks with list of ticks'
p31126
sg12
Vquiver.xticks
p31127
sg14
(lp31128
sg2
S'xticks'
p31129
sbag20219
a(icodemend.demo.code_suggest
Element
p31130
(dp31131
g10
I0
sg11
S'set the data limits for the yaxis'
p31132
sg12
Vquiver.ylim
p31133
sg14
(lp31134
sg2
S'ylim'
p31135
sbag5419
a(icodemend.demo.code_suggest
Element
p31136
(dp31137
g10
I0
sg11
S'set the scaling of the y-axis'
p31138
sg12
Vquiver.yscale
p31139
sg14
(lp31140
sg2
S'yscale'
p31141
sba(icodemend.demo.code_suggest
Element
p31142
(dp31143
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p31144
sg12
Vquiver.yticklabels
p31145
sg14
(lp31146
sg2
S'yticklabels'
p31147
sba(icodemend.demo.code_suggest
Element
p31148
(dp31149
g10
I0
sg11
S'set the y ticks with list of ticks'
p31150
sg12
Vquiver.yticks
p31151
sg14
(lp31152
sg2
S'yticks'
p31153
sbasg2
g30716
sbsS'get_pickradius'
p31154
(icodemend.demo.code_suggest
Element
p31155
(dp31156
g10
I0
sg11
S'return the pick radius used for containment tests return the depth of the axis used by the picker'
p31157
sg12
Vget_pickradius
p31158
sg14
(lp31159
sg2
g31154
sbs(S'boxplot'
p31160
S'widths'
p31161
tp31162
(icodemend.demo.code_suggest
Element
p31163
(dp31164
g10
I9
sg11
S'either a scalar or a vector and sets the width of each box . the default is 0.5 , or 0.15*(distance between extreme positions ) if that is smaller .'
p31165
sg12
Vboxplot.widths
p31166
sg14
(lp31167
(icodemend.demo.code_suggest
Element
p31168
(dp31169
g10
I5
sg11
S''
sg12
Vboxplot.widths.0/6
p31170
sg14
(lp31171
sg2
S'0.6'
p31172
sba(icodemend.demo.code_suggest
Element
p31173
(dp31174
g10
I2
sg11
S''
sg12
Vboxplot.widths.150
p31175
sg14
(lp31176
sg2
S'150'
p31177
sba(icodemend.demo.code_suggest
Element
p31178
(dp31179
g10
I1
sg11
S''
sg12
Vboxplot.widths.1
p31180
sg14
(lp31181
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p31182
(dp31183
g10
I1
sg11
S''
sg12
Vboxplot.widths.None
p31184
sg14
(lp31185
sg2
g865
sbasg2
g31161
sbs(g245
g140
g30258
tp31186
g30254
s(S'add_axes'
p31187
S'path_effects'
p31188
tp31189
(icodemend.demo.code_suggest
Element
p31190
(dp31191
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p31192
sg12
Vadd_axes.path_effects
p31193
sg14
(lp31194
sg2
g31188
sbs(S'quiver'
p31195
g31045
tp31196
g31040
s(S'plotting'
p31197
g15772
tp31198
g15767
s(S'loglog'
p31199
S'vertices'
p31200
tp31201
(icodemend.demo.code_suggest
Element
p31202
(dp31203
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p31204
sg12
Vloglog.vertices
p31205
sg14
(lp31206
sg2
g31200
sbs(S'add'
p31207
S'yticks'
p31208
tp31209
(icodemend.demo.code_suggest
Element
p31210
(dp31211
g10
I0
sg11
S'set the y ticks with list of ticks'
p31212
sg12
Vadd.yticks
p31213
sg14
(lp31214
sg2
g31208
sbsS'TextArea'
p31215
(icodemend.demo.code_suggest
Element
p31216
(dp31217
g10
I9
sg11
S''
sg12
VTextArea
p31218
sg14
(lp31219
(icodemend.demo.code_suggest
Element
p31220
(dp31221
g10
I1
sg11
S'if true , the box has a minimum descent of " p " .'
p31222
sg12
VTextArea.minimumdescent
p31223
sg14
(lp31224
g23315
asg2
S'minimumdescent'
p31225
sbag30654
a(icodemend.demo.code_suggest
Element
p31226
(dp31227
g10
I0
sg11
S'a string to be displayed .'
p31228
sg12
VTextArea.s
p31229
sg14
(lp31230
sg2
S's'
sbasg2
g31215
sbs(S'figtext'
p31231
S'y'
tp31232
g11545
s(g117
g4274
g29008
tp31233
g29004
s(S'poly_between'
p31234
S'x'
tp31235
(icodemend.demo.code_suggest
Element
p31236
(dp31237
g10
I0
sg11
S'return value is x , y arrays for use with matplotlib.axes.axes.fill ( ) .|||given a sequence of x , ylower and yupper , return the polygon that fills the regions between them . ylower or yupper can be scalar or iterable . if they are iterable , they must be equal in length to x .'
p31238
sg12
Vpoly_between.x
p31239
sg14
(lp31240
sg2
S'x'
sbs(g93
g4800
g25379
tp31241
g25375
s(S'refine_triangulation'
p31242
S'return_tri_index'
p31243
g438
tp31244
g26660
sS'index_of'
p31245
(icodemend.demo.code_suggest
Element
p31246
(dp31247
g10
I0
sg11
S'a helper function to get the index of an input to plot against if x values are not explicitly given .'
p31248
sg12
Vindex_of
p31249
sg14
(lp31250
(icodemend.demo.code_suggest
Element
p31251
(dp31252
g10
I0
sg11
S'the proposed y-value'
p31253
sg12
Vindex_of.y
p31254
sg14
(lp31255
sg2
S'y'
sbasg2
g31245
sbs(g452
g132
S'[1, 0, 0, 0.1]'
p31256
tp31257
(icodemend.demo.code_suggest
Element
p31258
(dp31259
g10
I1
sg11
S''
sg12
Verrorbar.color.[1, 0, 0, 0/1]
p31260
sg14
(lp31261
sg2
g31256
sbs(g324
g102
g865
tp31262
g9967
s(S'quiver'
p31263
g31039
tp31264
g31034
s(g1170
g1257
S'bin_n'
p31265
tp31266
(icodemend.demo.code_suggest
Element
p31267
(dp31268
g10
I1
sg11
S''
sg12
Vhist.bins.bin_n
p31269
sg14
(lp31270
sg2
g31265
sbs(S'AnchoredText'
p31271
S'prop'
p31272
tp31273
(icodemend.demo.code_suggest
Element
p31274
(dp31275
g10
I2
sg11
S'font properties .'
p31276
sg12
VAnchoredText.prop
p31277
sg14
(lp31278
sg2
g31272
sbs(g93
g627
S'40'
p31279
tp31280
(icodemend.demo.code_suggest
Element
p31281
(dp31282
g10
I1
sg11
S''
sg12
Vannotate.size.40
p31283
sg14
(lp31284
sg2
g31279
sbs(g1170
g1257
S'2'
tp31285
(icodemend.demo.code_suggest
Element
p31286
(dp31287
g10
I1
sg11
S''
sg12
Vhist.bins.2
p31288
sg14
(lp31289
sg2
S'2'
sbs(S'getp'
p31290
S'fontproperties'
p31291
tp31292
(icodemend.demo.code_suggest
Element
p31293
(dp31294
g10
I0
sg11
S'set the font properties that control the text .'
p31295
sg12
Vgetp.fontproperties
p31296
sg14
(lp31297
sg2
g31291
sbs(S'hexbin'
p31298
g26016
tp31299
g26011
s(g101
g118
g21950
tp31300
g21946
s(g117
g118
g27468
tp31301
g27464
s(g324
g325
g9143
tp31302
g9139
s(g93
g161
S'(self.x, self.y)'
p31303
tp31304
(icodemend.demo.code_suggest
Element
p31305
(dp31306
g10
I1
sg11
S''
sg12
Vannotate.xy.(self/x, self/y)
p31307
sg14
(lp31308
sg2
g31303
sbs(g117
g132
g28775
tp31309
g28771
sS'set_clip_on'
p31310
(icodemend.demo.code_suggest
Element
p31311
(dp31312
g10
I13
sg11
S'set whether artist uses clipping .'
p31313
sg12
Vset_clip_on
p31314
sg14
(lp31315
sg2
g31310
sbs(S'to_rgba'
p31316
g12943
tp31317
g12938
s(g332
g10118
g26792
tp31318
g26788
s(g324
g785
g9297
tp31319
g9293
s(S'pts_to_midstep'
p31320
S'x'
tp31321
(icodemend.demo.code_suggest
Element
p31322
(dp31323
g10
I0
sg11
S'the x location of the steps'
p31324
sg12
Vpts_to_midstep.x
p31325
sg14
(lp31326
sg2
S'x'
sbs(g6556
g132
S"'black'"
p31327
tp31328
(icodemend.demo.code_suggest
Element
p31329
(dp31330
g10
I1
sg11
S''
sg12
Vvlines.color.'black'
p31331
sg14
(lp31332
sg2
g31327
sbs(g101
g118
g21920
tp31333
g21916
s(g5848
g5849
S'1.5'
p31334
tp31335
(icodemend.demo.code_suggest
Element
p31336
(dp31337
g10
I1
sg11
S''
sg12
VSlider.valinit.1/5
p31338
sg14
(lp31339
sg2
g31334
sbs(S'savefig'
p31340
S'frameon'
p31341
tp31342
(icodemend.demo.code_suggest
Element
p31343
(dp31344
g10
I0
sg11
S"if true , the figure patch will be colored , if false , the figure background will be transparent . if not provided , the rcparam ' savefig.frameon ' will be used ."
p31345
sg12
Vsavefig.frameon
p31346
sg14
(lp31347
sg2
g31341
sbs(S'quiver'
p31348
g31033
tp31349
g31028
s(g1170
g118
S"'Dist B'"
p31350
tp31351
(icodemend.demo.code_suggest
Element
p31352
(dp31353
g10
I1
sg11
S''
sg12
Vhist.label.'Dist B'
p31354
sg14
(lp31355
sg2
g31350
sbs(S'table'
p31356
S'contains'
p31357
tp31358
(icodemend.demo.code_suggest
Element
p31359
(dp31360
g10
I0
sg11
S'replace the contains test used by this artist .'
p31361
sg12
Vtable.contains
p31362
sg14
(lp31363
sg2
g31357
sbs(S'savefig'
p31364
S'edgecolor'
p31365
tp31366
(icodemend.demo.code_suggest
Element
p31367
(dp31368
g10
I6
sg11
S'the colors of the figure rectangle'
p31369
sg12
Vsavefig.edgecolor
p31370
sg14
(lp31371
g113
a(icodemend.demo.code_suggest
Element
p31372
(dp31373
g10
I1
sg11
S''
sg12
Vsavefig.edgecolor.'blue'
p31374
sg14
(lp31375
sg2
S"'blue'"
p31376
sbag10908
a(icodemend.demo.code_suggest
Element
p31377
(dp31378
g10
I1
sg11
S''
sg12
Vsavefig.edgecolor.None
p31379
sg14
(lp31380
sg2
g865
sbasg2
g31365
sbs(S'score_weight'
p31381
S'weight2'
p31382
tp31383
(icodemend.demo.code_suggest
Element
p31384
(dp31385
g10
I0
sg11
S'the result is the absolute value of the difference between the css numeric values of weight1 and weight2 , normalized between 0.0 and 1.0 .|||returns a match score between weight1 and weight2 .'
p31386
sg12
Vscore_weight.weight2
p31387
sg14
(lp31388
sg2
g31382
sbsS'update_datalim'
p31389
(icodemend.demo.code_suggest
Element
p31390
(dp31391
g10
I3
sg11
S'update the data lim bbox with seq of xy tups or equiv .'
p31392
sg12
Vupdate_datalim
p31393
sg14
(lp31394
sg2
g31389
sbs(g8266
g102
S'0.2'
p31395
tp31396
(icodemend.demo.code_suggest
Element
p31397
(dp31398
g10
I2
sg11
S''
sg12
Vaxvspan.alpha.0/2
p31399
sg14
(lp31400
sg2
g31395
sbs(S'phase_spectrum'
p31401
S'antialiased'
p31402
tp31403
(icodemend.demo.code_suggest
Element
p31404
(dp31405
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p31406
sg12
Vphase_spectrum.antialiased
p31407
sg14
(lp31408
sg2
g31402
sbs(g16
g132
S"'#33ffff'"
p31409
tp31410
(icodemend.demo.code_suggest
Element
p31411
(dp31412
g10
I2
sg11
S''
sg12
Vbar.color.'#33ffff'
p31413
sg14
(lp31414
sg2
g31409
sbs(g5975
S'x'
g6926
tp31415
g6922
s(S'rc'
p31416
g2986
tp31417
g2981
s(g117
g13338
g29679
tp31418
g29675
s(g7484
g515
g25746
tp31419
g25742
sS'render_glyph'
p31420
(icodemend.demo.code_suggest
Element
p31421
(dp31422
g10
I0
sg11
S'draw a glyph described by info to the reference point ( ox , oy ) . draw a glyph at'
p31423
sg12
Vrender_glyph
p31424
sg14
(lp31425
g22377
a(icodemend.demo.code_suggest
Element
p31426
(dp31427
g10
I0
sg11
S'draw a glyph described by info to the reference point ( ox , oy ) .'
p31428
sg12
Vrender_glyph.ox
p31429
sg14
(lp31430
sg2
S'ox'
p31431
sbag7905
asg2
g31420
sbs(S'set_xticklabels'
p31432
g17001
tp31433
g16991
sS'copy_properties'
p31434
(icodemend.demo.code_suggest
Element
p31435
(dp31436
g10
I1
sg11
S'copy properties from gc to self'
p31437
sg12
Vcopy_properties
p31438
sg14
(lp31439
sg2
g31434
sbs(S'plot'
p31440
g29627
tp31441
g29607
sS'set_powerlimits'
p31442
(icodemend.demo.code_suggest
Element
p31443
(dp31444
g10
I7
sg11
S'sets size thresholds for scientific notation .'
p31445
sg12
Vset_powerlimits
p31446
sg14
(lp31447
sg2
g31442
sbs(S'grid'
p31448
S'clip_box'
p31449
tp31450
(icodemend.demo.code_suggest
Element
p31451
(dp31452
g10
I0
sg11
S"set the artist 's clip bbox ."
p31453
sg12
Vgrid.clip_box
p31454
sg14
(lp31455
sg2
g31449
sbs(g16
g17
S'0.8'
p31456
tp31457
(icodemend.demo.code_suggest
Element
p31458
(dp31459
g10
I7
sg11
S''
sg12
Vbar.width.0/8
p31460
sg14
(lp31461
sg2
g31456
sbs(S'figtext'
p31462
g11227
tp31463
g11222
s(S'iter_segments'
p31464
S'curves'
p31465
tp31466
(icodemend.demo.code_suggest
Element
p31467
(dp31468
g10
I0
sg11
S'if true , curve segments will be returned as curve segments . if false , all curves will be converted to line segments .'
p31469
sg12
Viter_segments.curves
p31470
sg14
(lp31471
sg2
g31465
sbs(S'set_sizes'
p31472
S'sizes'
p31473
tp31474
(icodemend.demo.code_suggest
Element
p31475
(dp31476
g10
I0
sg11
S"the size to set for each element of the collection . the value is the ' area ' of the element ."
p31477
sg12
Vset_sizes.sizes
p31478
sg14
(lp31479
sg2
g31473
sbs(g514
g8538
S"'k'"
p31480
tp31481
(icodemend.demo.code_suggest
Element
p31482
(dp31483
g10
I5
sg11
S''
sg12
Vpcolor.edgecolors.'k'
p31484
sg14
(lp31485
sg2
g31480
sbs(g8547
g8548
g19507
tp31486
g19503
s(S'SimplePatchShadow'
p31487
S'offset'
p31488
tp31489
(icodemend.demo.code_suggest
Element
p31490
(dp31491
g10
I0
sg11
S'the offset of the shadow in points .'
p31492
sg12
VSimplePatchShadow.offset
p31493
sg14
(lp31494
sg2
g31488
sbs(S'semilogy'
p31495
S'solid_joinstyle'
p31496
tp31497
(icodemend.demo.code_suggest
Element
p31498
(dp31499
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p31500
sg12
Vsemilogy.solid_joinstyle
p31501
sg14
(lp31502
sg2
g31496
sbsS'dist_point_to_segment'
p31503
(icodemend.demo.code_suggest
Element
p31504
(dp31505
g10
I0
sg11
S'get the distance of a point to a segment .'
p31506
sg12
Vdist_point_to_segment
p31507
sg14
(lp31508
sg2
g31503
sbsS'get_canvas_width_height'
p31509
(icodemend.demo.code_suggest
Element
p31510
(dp31511
g10
I0
sg11
S'return the canvas width and height in display coords'
p31512
sg12
Vget_canvas_width_height
p31513
sg14
(lp31514
sg2
g31509
sbs(g4998
g20897
g438
tp31515
(icodemend.demo.code_suggest
Element
p31516
(dp31517
g10
I1
sg11
S''
sg12
Vpcolormesh.rasterized.True
p31518
sg14
(lp31519
sg2
g438
sbs(S'set_xticklabels'
p31520
g17265
tp31521
g17260
s(g101
S'c'
g21282
tp31522
g21278
s(g117
S'y'
g29493
tp31523
g29489
s(g252
g1010
g13971
tp31524
g13967
sS'get_texmanager'
p31525
(icodemend.demo.code_suggest
Element
p31526
(dp31527
g10
I0
sg11
S'return the matplotlib.texmanager.texmanager instance'
p31528
sg12
Vget_texmanager
p31529
sg14
(lp31530
sg2
g31525
sbs(g5975
g2251
g6792
tp31531
g6788
s(S'ignore'
p31532
S'event'
p31533
tp31534
(icodemend.demo.code_suggest
Element
p31535
(dp31536
g10
I0
sg11
S'return true if event should be ignored'
p31537
sg12
Vignore.event
p31538
sg14
(lp31539
sg2
g31533
sbsg12794
(icodemend.demo.code_suggest
Element
p31540
(dp31541
g10
I18
sg11
S''
sg12
VPdfPages
p31542
sg14
(lp31543
(icodemend.demo.code_suggest
Element
p31544
(dp31545
g10
I0
sg11
S'plots using pdfpages.savefig ( ) will be written to a file at this location . the file is opened at once and any older file with the same name is overwritten .'
p31546
sg12
VPdfPages.filename: str
p31547
sg14
(lp31548
sg2
S'filename: str'
p31549
sbag12797
asg2
g12794
sbs(S'fill'
p31550
S'scaley'
p31551
tp31552
(icodemend.demo.code_suggest
Element
p31553
(dp31554
g10
I0
sg11
S'kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p31555
sg12
Vfill.scaley
p31556
sg14
(lp31557
sg2
g31551
sbs(S'cleaned'
p31558
S'transform'
p31559
tp31560
(icodemend.demo.code_suggest
Element
p31561
(dp31562
g10
I0
sg11
S'if not none , the given affine transformation will be applied to the path .'
p31563
sg12
Vcleaned.transform
p31564
sg14
(lp31565
sg2
g31559
sbs(S'streamplot'
p31566
S'v'
tp31567
(icodemend.demo.code_suggest
Element
p31568
(dp31569
g10
I0
sg11
S'x and y-velocities . number of rows should match length of y , and the number of columns should match x.'
p31570
sg12
Vstreamplot.v
p31571
sg14
(lp31572
sg2
S'v'
sbs(S'annotate'
p31573
S'yscale'
p31574
tp31575
(icodemend.demo.code_suggest
Element
p31576
(dp31577
g10
I0
sg11
S'set the scaling of the y-axis'
p31578
sg12
Vannotate.yscale
p31579
sg14
(lp31580
sg2
g31574
sbs(S'get'
p31581
S'contains'
p31582
tp31583
(icodemend.demo.code_suggest
Element
p31584
(dp31585
g10
I0
sg11
S'replace the contains test used by this artist .'
p31586
sg12
Vget.contains
p31587
sg14
(lp31588
sg2
g31582
sbs(S'table'
p31589
S'aspect'
p31590
tp31591
(icodemend.demo.code_suggest
Element
p31592
(dp31593
g10
I0
sg11
S'aspect'
p31594
sg12
Vtable.aspect
p31595
sg14
(lp31596
sg2
g31590
sbs(S'legend'
p31597
g14646
tp31598
g14641
sS'log2'
p31599
(icodemend.demo.code_suggest
Element
p31600
(dp31601
g10
I6
sg11
S'return the log(x ) in base 2 .'
p31602
sg12
Vlog2
p31603
sg14
(lp31604
(icodemend.demo.code_suggest
Element
p31605
(dp31606
g10
I0
sg11
S'return the log(x ) in base 2 .'
p31607
sg12
Vlog2.x
p31608
sg14
(lp31609
sg2
S'x'
sbasg2
g31599
sbs(g117
g118
g28349
tp31610
g28345
s(S'iter_segments'
p31611
S'sketch'
p31612
tp31613
(icodemend.demo.code_suggest
Element
p31614
(dp31615
g10
I0
sg11
S'if not none , must be a 3-tuple of the form ( scale , length , randomness ) , representing the sketch parameters .'
p31616
sg12
Viter_segments.sketch
p31617
sg14
(lp31618
sg2
g31612
sbs(g117
g118
g27924
tp31619
g27920
s(g101
S'c'
g21512
tp31620
g21508
s(S'gca'
p31621
S'visible'
p31622
tp31623
(icodemend.demo.code_suggest
Element
p31624
(dp31625
g10
I0
sg11
S"set the artist 's visiblity ."
p31626
sg12
Vgca.visible
p31627
sg14
(lp31628
sg2
g31622
sbs(S'intersects_bbox'
p31629
S'filled'
p31630
tp31631
(icodemend.demo.code_suggest
Element
p31632
(dp31633
g10
I0
sg11
S'filled , when true , treats the path as if it was filled . that is , if one path completely encloses the other , intersects_path ( ) will return true .'
p31634
sg12
Vintersects_bbox.filled
p31635
sg14
(lp31636
sg2
g31630
sbs(S'plotting'
p31637
g15838
tp31638
g15833
s(S'stineman_interp'
p31639
S'y'
tp31640
(icodemend.demo.code_suggest
Element
p31641
(dp31642
g10
I0
sg11
S'given data vectors x and y , the slope vector yp and a new abscissa vector xi , the function stineman_interp ( ) uses stineman interpolation to calculate a vector yi corresponding to xi .'
p31643
sg12
Vstineman_interp.y
p31644
sg14
(lp31645
sg2
S'y'
sbs(S'get_xyz_where'
p31646
S'x'
tp31647
g17881
s(g101
g118
S'l'
tp31648
g22034
s(g117
g118
g28549
tp31649
g28545
s(g4371
g325
g17560
tp31650
g17556
s(g7484
S'C'
S'z'
tp31651
g25697
s(S'contourf'
p31652
S'corner_mask'
p31653
tp31654
(icodemend.demo.code_suggest
Element
p31655
(dp31656
g10
I0
sg11
S"enable/disable corner masking , which only has an effect if z is a masked array . if false , any quad touching a masked point is masked out . if true , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . if ' legacy ' , the old contouring algorithm is used , which is equivalent to false and is deprecated , only remaining whilst the new algorithm is tested fully . if not specified , the default is taken from rcparams['contour.corner_mask ' ] , which is true unless it has been modified ."
p31657
sg12
Vcontourf.corner_mask
p31658
sg14
(lp31659
sg2
g31653
sbs(S'Path'
p31660
g11824
tp31661
g11819
s(S'table'
p31662
S'rasterized'
p31663
tp31664
(icodemend.demo.code_suggest
Element
p31665
(dp31666
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p31667
sg12
Vtable.rasterized
p31668
sg14
(lp31669
sg2
g31663
sbs(g324
g325
g9247
tp31670
g9243
sS'render'
p31671
(icodemend.demo.code_suggest
Element
p31672
(dp31673
g10
I3
sg11
S'render the character to the canvas render the character to the canvas .'
p31674
sg12
Vrender
p31675
sg14
(lp31676
sg2
g31671
sbs(S'magnitude_spectrum'
p31677
S'clip_box'
p31678
tp31679
(icodemend.demo.code_suggest
Element
p31680
(dp31681
g10
I0
sg11
S"set the artist 's clip bbox ."
p31682
sg12
Vmagnitude_spectrum.clip_box
p31683
sg14
(lp31684
sg2
g31678
sbs(g5640
g5641
g11936
tp31685
g11932
s(S'stineman_interp'
p31686
S'xi'
p31687
tp31688
(icodemend.demo.code_suggest
Element
p31689
(dp31690
g10
I0
sg11
S'given data vectors x and y , the slope vector yp and a new abscissa vector xi , the function stineman_interp ( ) uses stineman interpolation to calculate a vector yi corresponding to xi .'
p31691
sg12
Vstineman_interp.xi
p31692
sg14
(lp31693
sg2
g31687
sbs(S'arrow'
p31694
g2587
tp31695
g2582
s(S'clabel'
p31696
g14910
tp31697
g14905
sS'set_cursor'
p31698
(icodemend.demo.code_suggest
Element
p31699
(dp31700
g10
I1
sg11
S'set the current cursor to one of the cursors enums values set the cursor'
p31701
sg12
Vset_cursor
p31702
sg14
(lp31703
sg2
g31698
sbs(g324
g325
g9227
tp31704
g9223
s(S'rc_params_from_file'
p31705
S'fname'
p31706
tp31707
(icodemend.demo.code_suggest
Element
p31708
(dp31709
g10
I0
sg11
S'name of file parsed for matplotlib settings .'
p31710
sg12
Vrc_params_from_file.fname
p31711
sg14
(lp31712
sg2
g31706
sbs(S'ScalarMappable'
p31713
g10851
tp31714
g10804
s(S'psd'
p31715
S'ylim'
p31716
tp31717
(icodemend.demo.code_suggest
Element
p31718
(dp31719
g10
I0
sg11
S'set the data limits for the yaxis'
p31720
sg12
Vpsd.ylim
p31721
sg14
(lp31722
sg2
g31716
sbs(g5975
g348
g19758
tp31723
g19754
s(S'get_metrics'
p31724
g22264
tp31725
g22259
s(S'get_extents'
p31726
S'vertices'
p31727
tp31728
(icodemend.demo.code_suggest
Element
p31729
(dp31730
g10
I0
sg11
S'unlike computing the extents on the vertices alone , this algorithm will take into account the curves and deal with control points appropriately .'
p31731
sg12
Vget_extents.vertices
p31732
sg14
(lp31733
sg2
g31727
sbsS'get_yticklabels'
p31734
(icodemend.demo.code_suggest
Element
p31735
(dp31736
g10
I36
sg11
S'get the x tick labels as a list of text instances .'
p31737
sg12
Vget_yticklabels
p31738
sg14
(lp31739
(icodemend.demo.code_suggest
Element
p31740
(dp31741
g10
I0
sg11
S'if true return the minor ticklabels , else return the major ticklabels'
p31742
sg12
Vget_yticklabels.minor
p31743
sg14
(lp31744
sg2
S'minor'
p31745
sba(icodemend.demo.code_suggest
Element
p31746
(dp31747
g10
I0
sg11
S'overrides minor .'
p31748
sg12
Vget_yticklabels.which
p31749
sg14
(lp31750
sg2
S'which'
p31751
sbasg2
g31734
sbs(g117
g118
g28059
tp31752
g28055
s(g117
g118
g28639
tp31753
g28635
s(S'ginput'
p31754
g14729
tp31755
g14724
s(g16
g489
S'Incarceration'
p31756
tp31757
(icodemend.demo.code_suggest
Element
p31758
(dp31759
g10
I1
sg11
S''
sg12
Vbar.bottom.Incarceration
p31760
sg14
(lp31761
sg2
g31756
sbs(S'barh'
p31762
S'aspect'
p31763
tp31764
(icodemend.demo.code_suggest
Element
p31765
(dp31766
g10
I0
sg11
S'aspect'
p31767
sg12
Vbarh.aspect
p31768
sg14
(lp31769
sg2
g31763
sbs(g4371
g8545
g1078
tp31770
g1074
s(S'volume_overlay2'
p31771
S'closes'
p31772
tp31773
(icodemend.demo.code_suggest
Element
p31774
(dp31775
g10
I0
sg11
S'a sequence of closes'
p31776
sg12
Vvolume_overlay2.closes
p31777
sg14
(lp31778
sg2
g31772
sbs(g252
g4340
g556
tp31779
g552
sS'set_mutation_scale'
p31780
(icodemend.demo.code_suggest
Element
p31781
(dp31782
g10
I1
sg11
S'set the mutation scale .'
p31783
sg12
Vset_mutation_scale
p31784
sg14
(lp31785
sg2
g31780
sbs(S'LinearTriInterpolator'
p31786
S'trifinder'
p31787
tp31788
(icodemend.demo.code_suggest
Element
p31789
(dp31790
g10
I0
sg11
S"if this is not specified , the triangulation 's default trifinder will be used by calling matplotlib.tri.triangulation.get_trifinder ( ) ."
p31791
sg12
VLinearTriInterpolator.trifinder
p31792
sg14
(lp31793
sg2
g31787
sbs(S'magnitude_spectrum'
p31794
S'label'
p31795
tp31796
(icodemend.demo.code_suggest
Element
p31797
(dp31798
g10
I0
sg11
S'set the label to s for auto legend .'
p31799
sg12
Vmagnitude_spectrum.label
p31800
sg14
(lp31801
sg2
g31795
sbs(S'pcolor'
p31802
S'vertices'
p31803
tp31804
(icodemend.demo.code_suggest
Element
p31805
(dp31806
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p31807
sg12
Vpcolor.vertices
p31808
sg14
(lp31809
sg2
g31803
sbs(g944
g945
S'0.25'
p31810
tp31811
(icodemend.demo.code_suggest
Element
p31812
(dp31813
g10
I3
sg11
S''
sg12
Vbarh.height.0/25
p31814
sg14
(lp31815
sg2
g31810
sbs(S'errorbar'
p31816
S'color'
p31817
tp31818
(icodemend.demo.code_suggest
Element
p31819
(dp31820
g10
I34
sg11
S'set the color of the line'
p31821
sg12
Verrorbar.color
p31822
sg14
(lp31823
(icodemend.demo.code_suggest
Element
p31824
(dp31825
g10
I8
sg11
S''
sg12
Verrorbar.color.'black'
p31826
sg14
(lp31827
sg2
S"'black'"
p31828
sba(icodemend.demo.code_suggest
Element
p31829
(dp31830
g10
I4
sg11
S''
sg12
Verrorbar.color.'k'
p31831
sg14
(lp31832
sg2
S"'k'"
p31833
sba(icodemend.demo.code_suggest
Element
p31834
(dp31835
g10
I4
sg11
S''
sg12
Verrorbar.color.'red'
p31836
sg14
(lp31837
sg2
S"'red'"
p31838
sba(icodemend.demo.code_suggest
Element
p31839
(dp31840
g10
I3
sg11
S''
sg12
Verrorbar.color.'b'
p31841
sg14
(lp31842
sg2
S"'b'"
p31843
sba(icodemend.demo.code_suggest
Element
p31844
(dp31845
g10
I2
sg11
S''
sg12
Verrorbar.color.'blue'
p31846
sg14
(lp31847
sg2
S"'blue'"
p31848
sba(icodemend.demo.code_suggest
Element
p31849
(dp31850
g10
I2
sg11
S''
sg12
Verrorbar.color.'green'
p31851
sg14
(lp31852
sg2
S"'green'"
p31853
sbag30698
a(icodemend.demo.code_suggest
Element
p31854
(dp31855
g10
I1
sg11
S''
sg12
Verrorbar.color.'gray'
p31856
sg14
(lp31857
sg2
S"'gray'"
p31858
sba(icodemend.demo.code_suggest
Element
p31859
(dp31860
g10
I1
sg11
S''
sg12
Verrorbar.color.'orange'
p31861
sg14
(lp31862
sg2
S"'orange'"
p31863
sba(icodemend.demo.code_suggest
Element
p31864
(dp31865
g10
I1
sg11
S''
sg12
Verrorbar.color.'purple'
p31866
sg14
(lp31867
sg2
S"'purple'"
p31868
sbag31258
a(icodemend.demo.code_suggest
Element
p31869
(dp31870
g10
I1
sg11
S''
sg12
Verrorbar.color.c
p31871
sg14
(lp31872
sg2
S'c'
sba(icodemend.demo.code_suggest
Element
p31873
(dp31874
g10
I1
sg11
S''
sg12
Verrorbar.color.color
p31875
sg14
(lp31876
sg2
g132
sbasg2
g31817
sbs(g8547
g8548
g865
tp31877
g19494
sS'convert_mesh_to_triangles'
p31878
(icodemend.demo.code_suggest
Element
p31879
(dp31880
g10
I0
sg11
S'converts a given mesh into a sequence of triangles , each point with its own color .'
p31881
sg12
Vconvert_mesh_to_triangles
p31882
sg14
(lp31883
sg2
g31878
sbs(g245
g140
g30233
tp31884
g30229
s(S'subplot2grid'
p31885
g22872
tp31886
g22842
s(g5975
g4163
S'3'
tp31887
g19765
sS'get_height_char'
p31888
(icodemend.demo.code_suggest
Element
p31889
(dp31890
g10
I0
sg11
S'get the height of character c from the bounding box .'
p31891
sg12
Vget_height_char
p31892
sg14
(lp31893
(icodemend.demo.code_suggest
Element
p31894
(dp31895
g10
I0
sg11
S'get the height of character c from the bounding box . this is the ink height ( space is 0 )'
p31896
sg12
Vget_height_char.c
p31897
sg14
(lp31898
sg2
S'c'
sbasg2
g31888
sbs(g101
S's'
g7791
tp31899
g7787
sS'align_iterators'
p31900
(icodemend.demo.code_suggest
Element
p31901
(dp31902
g10
I0
sg11
S'this generator takes a bunch of iterables that are ordered by func it sends out ordered tuples'
p31903
sg12
Valign_iterators
p31904
sg14
(lp31905
sg2
g31900
sbsS'rgb2hex'
p31906
(icodemend.demo.code_suggest
Element
p31907
(dp31908
g10
I2
sg11
S'given an rgb or rgba sequence of 0-1 floats , return the hex string'
p31909
sg12
Vrgb2hex
p31910
sg14
(lp31911
sg2
g31906
sbs(S'angle_spectrum'
p31912
g18768
tp31913
g18763
s(S'plot'
p31914
g29606
tp31915
g29586
s(S'open_group'
p31916
S's'
tp31917
(icodemend.demo.code_suggest
Element
p31918
(dp31919
g10
I0
sg11
S'open a grouping element with label s . if gid is given , use gid as the id of the group . is only currently used by backend_svg .'
p31920
sg12
Vopen_group.s
p31921
sg14
(lp31922
sg2
S's'
sbs(S'fetch_historical_yahoo'
p31923
S'date2'
p31924
tp31925
(icodemend.demo.code_suggest
Element
p31926
(dp31927
g10
I0
sg11
S'end date'
p31928
sg12
Vfetch_historical_yahoo.date2
p31929
sg14
(lp31930
sg2
g31924
sbs(S'violin_stats'
p31931
S'X'
tp31932
(icodemend.demo.code_suggest
Element
p31933
(dp31934
g10
I0
sg11
S'sample data that will be used to produce the gaussian kernel density estimates . must have 2 or fewer dimensions .'
p31935
sg12
Vviolin_stats.X
p31936
sg14
(lp31937
sg2
S'X'
sbsS'set_bounds'
p31938
(icodemend.demo.code_suggest
Element
p31939
(dp31940
g10
I1
sg11
S'set the bounds of the rectangle'
p31941
sg12
Vset_bounds
p31942
sg14
(lp31943
sg2
g31938
sbs(S'phase_spectrum'
p31944
S'linewidth'
p31945
tp31946
(icodemend.demo.code_suggest
Element
p31947
(dp31948
g10
I0
sg11
S'set the line width in points'
p31949
sg12
Vphase_spectrum.linewidth
p31950
sg14
(lp31951
sg2
g31945
sbs(S'pcolor'
p31952
S'path_effects'
p31953
tp31954
(icodemend.demo.code_suggest
Element
p31955
(dp31956
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p31957
sg12
Vpcolor.path_effects
p31958
sg14
(lp31959
sg2
g31953
sbs(g5848
g5849
S'max0'
p31960
tp31961
(icodemend.demo.code_suggest
Element
p31962
(dp31963
g10
I1
sg11
S''
sg12
VSlider.valinit.max0
p31964
sg14
(lp31965
sg2
g31960
sbs(S'csd'
p31966
S'readonly'
p31967
tp31968
(icodemend.demo.code_suggest
Element
p31969
(dp31970
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p31971
sg12
Vcsd.readonly
p31972
sg14
(lp31973
sg2
g31967
sbs(g965
g8780
g21038
tp31974
g21034
s(S'add_callback'
p31975
S'sketch_params'
p31976
tp31977
(icodemend.demo.code_suggest
Element
p31978
(dp31979
g10
I0
sg11
S'sets the sketch parameters .'
p31980
sg12
Vadd_callback.sketch_params
p31981
sg14
(lp31982
sg2
g31976
sbsS'draw_all'
p31983
(icodemend.demo.code_suggest
Element
p31984
(dp31985
g10
I2
sg11
S'calculate any free parameters based on the current cmap and norm , and do all the drawing .'
p31986
sg12
Vdraw_all
p31987
sg14
(lp31988
sg2
g31983
sbs(S'axhspan'
p31989
g24519
tp31990
g24514
s(g16
g17
S'0.3'
p31991
tp31992
(icodemend.demo.code_suggest
Element
p31993
(dp31994
g10
I5
sg11
S''
sg12
Vbar.width.0/3
p31995
sg14
(lp31996
sg2
g31991
sbsS'new_saved_frame_seq'
p31997
(icodemend.demo.code_suggest
Element
p31998
(dp31999
g10
I0
sg11
S'creates a new sequence of saved/cached frame information .'
p32000
sg12
Vnew_saved_frame_seq
p32001
sg14
(lp32002
sg2
g31997
sbs(S'dedent'
p32003
S's'
tp32004
g25188
s(g117
g118
g27774
tp32005
g27770
s(g245
g140
g30148
tp32006
g30144
s(g117
g2878
S'0'
tp32007
g19383
s(g117
g118
g28524
tp32008
g28520
s(g117
g118
g28334
tp32009
g28330
s(S'draw_gouraud_triangles'
p32010
g15054
tp32011
g15049
s(S'barbs'
p32012
S'offsets'
p32013
tp32014
(icodemend.demo.code_suggest
Element
p32015
(dp32016
g10
I0
sg11
S'set the offsets for the collection .'
p32017
sg12
Vbarbs.offsets
p32018
sg14
(lp32019
sg2
g32013
sbsS'Button'
p32020
(icodemend.demo.code_suggest
Element
p32021
(dp32022
g10
I44
sg11
S''
sg12
VButton
p32023
sg14
(lp32024
(icodemend.demo.code_suggest
Element
p32025
(dp32026
g10
I3
sg11
S'the color of the button when not activated'
p32027
sg12
VButton.color
p32028
sg14
(lp32029
(icodemend.demo.code_suggest
Element
p32030
(dp32031
g10
I2
sg11
S''
sg12
VButton.color.axcolor
p32032
sg14
(lp32033
sg2
g11916
sbasg2
S'color'
p32034
sbag20187
a(icodemend.demo.code_suggest
Element
p32035
(dp32036
g10
I1
sg11
S'the image to place in the button , if not none . can be any legal arg to imshow ( numpy array , matplotlib image instance , or pillow image ) .'
p32037
sg12
VButton.image
p32038
sg14
(lp32039
(icodemend.demo.code_suggest
Element
p32040
(dp32041
g10
I1
sg11
S''
sg12
VButton.image.im
p32042
sg14
(lp32043
sg2
S'im'
p32044
sbasg2
S'image'
p32045
sba(icodemend.demo.code_suggest
Element
p32046
(dp32047
g10
I1
sg11
S'the button text . accepts string .'
p32048
sg12
VButton.label
p32049
sg14
(lp32050
(icodemend.demo.code_suggest
Element
p32051
(dp32052
g10
I1
sg11
S''
sg12
VButton.label.'SAVE se'
p32053
sg14
(lp32054
sg2
S"'SAVE se'"
p32055
sbasg2
S'label'
p32056
sba(icodemend.demo.code_suggest
Element
p32057
(dp32058
g10
I0
sg11
S'the matplotlib.axes.axes instance the button will be placed into .'
p32059
sg12
VButton.ax
p32060
sg14
(lp32061
sg2
S'ax'
p32062
sbasg2
g32020
sbs(S'axvline'
p32063
S'color_cycle'
p32064
tp32065
(icodemend.demo.code_suggest
Element
p32066
(dp32067
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p32068
sg12
Vaxvline.color_cycle
p32069
sg14
(lp32070
sg2
g32064
sbs(g245
g140
g30069
tp32071
g30065
s(S'pcolor'
p32072
S'clip_on'
p32073
tp32074
(icodemend.demo.code_suggest
Element
p32075
(dp32076
g10
I1
sg11
S'set whether artist uses clipping .'
p32077
sg12
Vpcolor.clip_on
p32078
sg14
(lp32079
g8770
asg2
g32073
sbs(g452
g909
S'1'
tp32080
(icodemend.demo.code_suggest
Element
p32081
(dp32082
g10
I2
sg11
S''
sg12
Verrorbar.zorder.1
p32083
sg14
(lp32084
sg2
S'1'
sbs(g109
S'bbox_extra_artists'
p32085
S'(legend,)'
p32086
tp32087
(icodemend.demo.code_suggest
Element
p32088
(dp32089
g10
I1
sg11
S''
sg12
Vsavefig.bbox_extra_artists.(legend,)
p32090
sg14
(lp32091
sg2
g32086
sbsS'get_file'
p32092
(icodemend.demo.code_suggest
Element
p32093
(dp32094
g10
I0
sg11
S'return the filename of the associated font .'
p32095
sg12
Vget_file
p32096
sg14
(lp32097
sg2
g32092
sbs(S'psd'
p32098
S'linewidth'
p32099
tp32100
(icodemend.demo.code_suggest
Element
p32101
(dp32102
g10
I0
sg11
S'set the line width in points'
p32103
sg12
Vpsd.linewidth
p32104
sg14
(lp32105
sg2
g32099
sbs(g101
g4274
g21695
tp32106
g21691
s(g514
g2251
S"'dashed'"
p32107
tp32108
(icodemend.demo.code_suggest
Element
p32109
(dp32110
g10
I1
sg11
S''
sg12
Vpcolor.linestyle.'dashed'
p32111
sg14
(lp32112
sg2
g32107
sbs(S'plot_date'
p32113
g19787
tp32114
g19782
s(S'text'
p32115
S'linespacing'
p32116
tp32117
(icodemend.demo.code_suggest
Element
p32118
(dp32119
g10
I0
sg11
S'set the line spacing as a multiple of the font size .'
p32120
sg12
Vtext.linespacing
p32121
sg14
(lp32122
sg2
g32116
sbs(g6146
S'inline_spacing'
p32123
S'3'
tp32124
g14890
s(g101
g102
g21872
tp32125
g21868
s(g245
g140
g30378
tp32126
g30374
s(S'psd'
p32127
S'return_line'
p32128
tp32129
(icodemend.demo.code_suggest
Element
p32130
(dp32131
g10
I0
sg11
S'if return_line is false , returns the tuple ( pxx , freqs ) . if return_line is true , returns the tuple ( pxx , freqs . line ) :'
p32132
sg12
Vpsd.return_line
p32133
sg14
(lp32134
sg2
g32128
sbsS'writeXref'
p32135
(icodemend.demo.code_suggest
Element
p32136
(dp32137
g10
I0
sg11
S'write out the xref table .'
p32138
sg12
VwriteXref
p32139
sg14
(lp32140
sg2
g32135
sbs(S'barbs'
p32141
S'length'
p32142
tp32143
(icodemend.demo.code_suggest
Element
p32144
(dp32145
g10
I2
sg11
S'length of the barb in points ; the other parts of the barb are scaled against this . default is 9'
p32146
sg12
Vbarbs.length
p32147
sg14
(lp32148
(icodemend.demo.code_suggest
Element
p32149
(dp32150
g10
I1
sg11
S''
sg12
Vbarbs.length.7
p32151
sg14
(lp32152
sg2
S'7'
sba(icodemend.demo.code_suggest
Element
p32153
(dp32154
g10
I1
sg11
S''
sg12
Vbarbs.length.8
p32155
sg14
(lp32156
sg2
S'8'
sbasg2
g32142
sbs(g93
g161
S'(x[i], y[i])'
p32157
tp32158
(icodemend.demo.code_suggest
Element
p32159
(dp32160
g10
I2
sg11
S''
sg12
Vannotate.xy.(x[i], y[i])
p32161
sg14
(lp32162
sg2
g32157
sbsS'format_ydata'
p32163
(icodemend.demo.code_suggest
Element
p32164
(dp32165
g10
I1
sg11
S'return y string formatted .'
p32166
sg12
Vformat_ydata
p32167
sg14
(lp32168
sg2
g32163
sbs(g324
g325
g9079
tp32169
g9075
s(S'tripcolor'
p32170
S'x'
tp32171
(icodemend.demo.code_suggest
Element
p32172
(dp32173
g10
I0
sg11
S'the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .|||x and y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for c[i,j ] has corners at :|||note that the column index corresponds to the x - coordinate , and the row index corresponds to y ; for details , see the grid orientation section below .'
p32174
sg12
Vtripcolor.x
p32175
sg14
(lp32176
sg2
S'x'
sbs(g117
g118
g27606
tp32177
g27602
s(S'barbs'
p32178
S'position'
p32179
tp32180
(icodemend.demo.code_suggest
Element
p32181
(dp32182
g10
I0
sg11
S'set the axes position with'
p32183
sg12
Vbarbs.position
p32184
sg14
(lp32185
sg2
g32179
sbs(g324
g325
g9069
tp32186
g9065
s(S'set_xticklabels'
p32187
g17133
tp32188
g17128
sS'pts_to_poststep'
p32189
(icodemend.demo.code_suggest
Element
p32190
(dp32191
g10
I0
sg11
S'covert continuous line to pre-steps'
p32192
sg12
Vpts_to_poststep
p32193
sg14
(lp32194
(icodemend.demo.code_suggest
Element
p32195
(dp32196
g10
I0
sg11
S'the x location of the steps'
p32197
sg12
Vpts_to_poststep.x
p32198
sg14
(lp32199
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p32200
(dp32201
g10
I0
sg11
S'any number of y arrays to be turned into steps . all must be the same length as x'
p32202
sg12
Vpts_to_poststep.y1, y2, ///
p32203
sg14
(lp32204
sg2
S'y1, y2, ...'
p32205
sbasg2
g32189
sbs(g16
g1262
g1247
tp32206
g1243
s(g101
S's'
g7696
tp32207
g7692
s(S'loglog'
p32208
S'picker'
p32209
tp32210
(icodemend.demo.code_suggest
Element
p32211
(dp32212
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p32213
sg12
Vloglog.picker
p32214
sg14
(lp32215
sg2
g32209
sbs(g332
S'y'
S'12'
p32216
tp32217
(icodemend.demo.code_suggest
Element
p32218
(dp32219
g10
I1
sg11
S''
sg12
Vtext.y.12
p32220
sg14
(lp32221
sg2
g32216
sbs(S'errorbar'
p32222
S'size_inches'
p32223
tp32224
(icodemend.demo.code_suggest
Element
p32225
(dp32226
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p32227
sg12
Verrorbar.size_inches
p32228
sg14
(lp32229
sg2
g32223
sbs(g324
g10116
g9034
tp32230
g9030
s(g245
g140
g30019
tp32231
g30015
s(g16
g132
S"'yellow'"
p32232
tp32233
(icodemend.demo.code_suggest
Element
p32234
(dp32235
g10
I1
sg11
S''
sg12
Vbar.color.'yellow'
p32236
sg14
(lp32237
sg2
g32232
sbs(S'refine_triangulation'
p32238
g26670
tp32239
g26665
s(S'cohere'
p32240
S'xscale'
p32241
tp32242
(icodemend.demo.code_suggest
Element
p32243
(dp32244
g10
I0
sg11
S'set the scaling of the x-axis'
p32245
sg12
Vcohere.xscale
p32246
sg14
(lp32247
sg2
g32241
sbsS'set_ylim'
p32248
(icodemend.demo.code_suggest
Element
p32249
(dp32250
g10
I461
sg11
S'set the data limits for the yaxis'
p32251
sg12
Vset_ylim
p32252
sg14
(lp32253
(icodemend.demo.code_suggest
Element
p32254
(dp32255
g10
I11
sg11
S'the bottom ylim ; the previous name , ymin , may still be used|||note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) . for example , suppose y is depth in the ocean . then one might use :'
p32256
sg12
Vset_ylim.bottom
p32257
sg14
(lp32258
(icodemend.demo.code_suggest
Element
p32259
(dp32260
g10
I6
sg11
S''
sg12
Vset_ylim.bottom.0
p32261
sg14
(lp32262
sg2
S'0'
sbag26211
a(icodemend.demo.code_suggest
Element
p32263
(dp32264
g10
I1
sg11
S''
sg12
Vset_ylim.bottom.-1
p32265
sg14
(lp32266
sg2
S'-1'
p32267
sba(icodemend.demo.code_suggest
Element
p32268
(dp32269
g10
I1
sg11
S''
sg12
Vset_ylim.bottom.733681
p32270
sg14
(lp32271
sg2
S'733681'
p32272
sbasg2
S'bottom'
p32273
sba(icodemend.demo.code_suggest
Element
p32274
(dp32275
g10
I7
sg11
S'the top ylim ; the previous name , ymax , may still be used|||note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) . for example , suppose y is depth in the ocean . then one might use :'
p32276
sg12
Vset_ylim.top
p32277
sg14
(lp32278
(icodemend.demo.code_suggest
Element
p32279
(dp32280
g10
I1
sg11
S''
sg12
Vset_ylim.top.10/0
p32281
sg14
(lp32282
sg2
S'10.0'
p32283
sba(icodemend.demo.code_suggest
Element
p32284
(dp32285
g10
I1
sg11
S''
sg12
Vset_ylim.top.2
p32286
sg14
(lp32287
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p32288
(dp32289
g10
I1
sg11
S''
sg12
Vset_ylim.top.733682
p32290
sg14
(lp32291
sg2
S'733682'
p32292
sba(icodemend.demo.code_suggest
Element
p32293
(dp32294
g10
I1
sg11
S''
sg12
Vset_ylim.top.new_top
p32295
sg14
(lp32296
sg2
S'new_top'
p32297
sbasg2
S'top'
p32298
sba(icodemend.demo.code_suggest
Element
p32299
(dp32300
g10
I4
sg11
S'note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) . for example , suppose y is depth in the ocean . then one might use :'
p32301
sg12
Vset_ylim.ymax
p32302
sg14
(lp32303
(icodemend.demo.code_suggest
Element
p32304
(dp32305
g10
I2
sg11
S''
sg12
Vset_ylim.ymax.5000
p32306
sg14
(lp32307
sg2
S'5000'
p32308
sba(icodemend.demo.code_suggest
Element
p32309
(dp32310
g10
I1
sg11
S''
sg12
Vset_ylim.ymax.100
p32311
sg14
(lp32312
sg2
S'100'
p32313
sbasg2
S'ymax'
p32314
sba(icodemend.demo.code_suggest
Element
p32315
(dp32316
g10
I3
sg11
S'turn y autoscaling on ( true ) , off ( false ; default ) , or leave unchanged ( none )'
p32317
sg12
Vset_ylim.auto
p32318
sg14
(lp32319
(icodemend.demo.code_suggest
Element
p32320
(dp32321
g10
I2
sg11
S''
sg12
Vset_ylim.auto.True
p32322
sg14
(lp32323
sg2
g438
sba(icodemend.demo.code_suggest
Element
p32324
(dp32325
g10
I1
sg11
S''
sg12
Vset_ylim.auto.False
p32326
sg14
(lp32327
sg2
g1944
sbasg2
S'auto'
p32328
sba(icodemend.demo.code_suggest
Element
p32329
(dp32330
g10
I2
sg11
S'notify observers of limit change'
p32331
sg12
Vset_ylim.emit
p32332
sg14
(lp32333
(icodemend.demo.code_suggest
Element
p32334
(dp32335
g10
I2
sg11
S''
sg12
Vset_ylim.emit.True
p32336
sg14
(lp32337
sg2
g438
sbasg2
S'emit'
p32338
sbag4816
a(icodemend.demo.code_suggest
Element
p32339
(dp32340
g10
I0
sg11
S'turn y autoscaling on ( true ) , off ( false ; default ) , or leave unchanged ( none )|||notify observers of limit change'
p32341
sg12
Vset_ylim.False
p32342
sg14
(lp32343
sg2
S'False'
p32344
sba(icodemend.demo.code_suggest
Element
p32345
(dp32346
g10
I0
sg11
S'turn y autoscaling on ( true ) , off ( false ; default ) , or leave unchanged ( none )'
p32347
sg12
Vset_ylim.None
p32348
sg14
(lp32349
sg2
S'None'
p32350
sbag12601
ag8640
asg2
g32248
sbs(S'title'
p32351
S'fontdict'
p32352
tp32353
(icodemend.demo.code_suggest
Element
p32354
(dp32355
g10
I6
sg11
S'a dictionary controlling the appearance of the title text , the default fontdict is :'
p32356
sg12
Vtitle.fontdict
p32357
sg14
(lp32358
(icodemend.demo.code_suggest
Element
p32359
(dp32360
g10
I6
sg11
S''
sg12
Vtitle.fontdict.font
p32361
sg14
(lp32362
sg2
g17000
sbasg2
g32352
sbs(S'bar'
p32363
S'linewidth'
p32364
tp32365
(icodemend.demo.code_suggest
Element
p32366
(dp32367
g10
I17
sg11
S"width of bar edge(s ) . if none , use default linewidth ; if 0 , do n't draw edges . default : none"
p32368
sg12
Vbar.linewidth
p32369
sg14
(lp32370
(icodemend.demo.code_suggest
Element
p32371
(dp32372
g10
I16
sg11
S''
sg12
Vbar.linewidth.0
p32373
sg14
(lp32374
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p32375
(dp32376
g10
I1
sg11
S''
sg12
Vbar.linewidth.2
p32377
sg14
(lp32378
sg2
S'2'
sbasg2
g32364
sbs(S'plot_date'
p32379
g19931
tp32380
g19926
s(S'fill'
p32381
S'alpha'
p32382
tp32383
(icodemend.demo.code_suggest
Element
p32384
(dp32385
g10
I7
sg11
S'set the alpha tranparency of the patch .'
p32386
sg12
Vfill.alpha
p32387
sg14
(lp32388
g26714
ag26720
a(icodemend.demo.code_suggest
Element
p32389
(dp32390
g10
I1
sg11
S''
sg12
Vfill.alpha.0/4
p32391
sg14
(lp32392
sg2
S'0.4'
p32393
sba(icodemend.demo.code_suggest
Element
p32394
(dp32395
g10
I1
sg11
S''
sg12
Vfill.alpha.1/0
p32396
sg14
(lp32397
sg2
S'1.0'
p32398
sbasg2
g32382
sbs(g252
g7452
g14345
tp32399
g14341
s(S'set_marker'
p32400
S'marker: marker style'
p32401
tp32402
(icodemend.demo.code_suggest
Element
p32403
(dp32404
g10
I0
sg11
S'see markers for full description of possible argument'
p32405
sg12
Vset_marker.marker: marker style
p32406
sg14
(lp32407
sg2
g32401
sbs(g117
g118
g27691
tp32408
g27687
s(S'axvspan'
p32409
S'cursor_props'
p32410
tp32411
(icodemend.demo.code_suggest
Element
p32412
(dp32413
g10
I0
sg11
S'set the cursor property as'
p32414
sg12
Vaxvspan.cursor_props
p32415
sg14
(lp32416
sg2
g32410
sbs(S'matshow'
p32417
S'fignum'
p32418
tp32419
(icodemend.demo.code_suggest
Element
p32420
(dp32421
g10
I2
sg11
S'with the exception of fignum , keyword arguments are passed to imshow ( ) . you may set the origin kwarg to " lower " if you want the first row in the array to be at the bottom instead of the top .'
p32422
sg12
Vmatshow.fignum
p32423
sg14
(lp32424
g6696
a(icodemend.demo.code_suggest
Element
p32425
(dp32426
g10
I1
sg11
S''
sg12
Vmatshow.fignum.1
p32427
sg14
(lp32428
sg2
S'1'
sbasg2
g32418
sbs(S'step'
p32429
S'scaley'
p32430
tp32431
(icodemend.demo.code_suggest
Element
p32432
(dp32433
g10
I0
sg11
S'kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true . autoscale the view limits using the data limits . you can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to false . the autoscaling preserves any axis direction reversal that has already been done .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p32434
sg12
Vstep.scaley
p32435
sg14
(lp32436
sg2
g32430
sbs(g514
g4459
S'0.01'
p32437
tp32438
(icodemend.demo.code_suggest
Element
p32439
(dp32440
g10
I1
sg11
S''
sg12
Vpcolor.vmin.0/01
p32441
sg14
(lp32442
sg2
g32437
sbs(S'spy'
p32443
S'precision'
p32444
tp32445
(icodemend.demo.code_suggest
Element
p32446
(dp32447
g10
I1
sg11
S'if precision is 0 , any non-zero value will be plotted ; else , values of will be plotted .'
p32448
sg12
Vspy.precision
p32449
sg14
(lp32450
(icodemend.demo.code_suggest
Element
p32451
(dp32452
g10
I1
sg11
S''
sg12
Vspy.precision.0/1
p32453
sg14
(lp32454
sg2
S'0.1'
p32455
sbasg2
g32444
sbsS'minorticks_on'
p32456
(icodemend.demo.code_suggest
Element
p32457
(dp32458
g10
I5
sg11
S'display minor ticks on the current plot . add autoscaling minor ticks to the axes .'
p32459
sg12
Vminorticks_on
p32460
sg14
(lp32461
sg2
g32456
sbs(S'pause'
p32462
g24215
tp32463
g24210
s(g117
g118
g27596
tp32464
g27592
s(S'axhspan'
p32465
g24292
tp32466
g24287
s(g332
g132
g11761
tp32467
(icodemend.demo.code_suggest
Element
p32468
(dp32469
g10
I1
sg11
S''
sg12
Vtext.color.clr
p32470
sg14
(lp32471
sg2
g11761
sbs(g944
g132
S"'r'"
p32472
tp32473
(icodemend.demo.code_suggest
Element
p32474
(dp32475
g10
I3
sg11
S''
sg12
Vbarh.color.'r'
p32476
sg14
(lp32477
sg2
g32472
sbs(S'grid'
p32478
S'transform'
p32479
tp32480
(icodemend.demo.code_suggest
Element
p32481
(dp32482
g10
I0
sg11
S'set the transformation instance used by this artist'
p32483
sg12
Vgrid.transform
p32484
sg14
(lp32485
sg2
g32479
sbs(S'add_subplot'
p32486
S'prop_cycle'
p32487
tp32488
(icodemend.demo.code_suggest
Element
p32489
(dp32490
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p32491
sg12
Vadd_subplot.prop_cycle
p32492
sg14
(lp32493
sg2
g32487
sbs(S'close_group'
p32494
S's'
tp32495
(icodemend.demo.code_suggest
Element
p32496
(dp32497
g10
I0
sg11
S'close a grouping element with label s is only currently used by backend_svg'
p32498
sg12
Vclose_group.s
p32499
sg14
(lp32500
sg2
S's'
sbs(S'axvline'
p32501
S'anchor'
p32502
tp32503
(icodemend.demo.code_suggest
Element
p32504
(dp32505
g10
I0
sg11
S'anchor'
p32506
sg12
Vaxvline.anchor
p32507
sg14
(lp32508
sg2
g32502
sbs(S'angle_spectrum'
p32509
g18864
tp32510
g18859
sS'set_ha'
p32511
(icodemend.demo.code_suggest
Element
p32512
(dp32513
g10
I7
sg11
S'alias for set_horizontalalignment'
p32514
sg12
Vset_ha
p32515
sg14
(lp32516
sg2
g32511
sbs(S'axvline'
p32517
S'xlim'
p32518
tp32519
(icodemend.demo.code_suggest
Element
p32520
(dp32521
g10
I0
sg11
S'set the data limits for the xaxis'
p32522
sg12
Vaxvline.xlim
p32523
sg14
(lp32524
sg2
g32518
sbs(g10369
S'extra_args'
p32525
S"['-vcodec', 'libvpx']"
p32526
tp32527
(icodemend.demo.code_suggest
Element
p32528
(dp32529
g10
I1
sg11
S''
sg12
Vsave.extra_args.['-vcodec', 'libvpx']
p32530
sg14
(lp32531
sg2
g32526
sbsS'imsave'
p32532
(icodemend.demo.code_suggest
Element
p32533
(dp32534
g10
I6
sg11
S'save an array as in image file .'
p32535
sg12
Vimsave
p32536
sg14
(lp32537
sg2
g32532
sbs(S'annotate'
p32538
S'rasterized'
p32539
tp32540
(icodemend.demo.code_suggest
Element
p32541
(dp32542
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p32543
sg12
Vannotate.rasterized
p32544
sg14
(lp32545
sg2
g32539
sbs(S'process'
p32546
S's'
tp32547
g22613
s(g5576
S'delimiter'
p32548
g13611
tp32549
g13607
sS'switch_backend'
p32550
(icodemend.demo.code_suggest
Element
p32551
(dp32552
g10
I6
sg11
S'switch the default backend .'
p32553
sg12
Vswitch_backend
p32554
sg14
(lp32555
sg2
g32550
sbs(S'table'
p32556
S'xticks'
p32557
tp32558
(icodemend.demo.code_suggest
Element
p32559
(dp32560
g10
I0
sg11
S'set the x ticks with list of ticks'
p32561
sg12
Vtable.xticks
p32562
sg14
(lp32563
sg2
g32557
sbs(g324
g785
g9621
tp32564
g9617
s(S'set_yscale'
p32565
g15539
tp32566
g15534
s(g324
g785
g9452
tp32567
g9448
s(S'ToolHandles'
p32568
g30647
tp32569
g30642
s(g117
g132
g2424
tp32570
g28920
s(g101
g102
g21882
tp32571
g21878
s(S'suptitle'
p32572
S'y'
tp32573
(icodemend.demo.code_suggest
Element
p32574
(dp32575
g10
I2
sg11
S'the y location of the text in figure coords|||set the y position of the text'
p32576
sg12
Vsuptitle.y
p32577
sg14
(lp32578
g24122
a(icodemend.demo.code_suggest
Element
p32579
(dp32580
g10
I1
sg11
S''
sg12
Vsuptitle.y.0/99
p32581
sg14
(lp32582
sg2
S'0.99'
p32583
sbasg2
S'y'
sbsS'get_grid_positions'
p32584
(icodemend.demo.code_suggest
Element
p32585
(dp32586
g10
I0
sg11
S'return lists of bottom and top position of rows , left and right positions of columns .'
p32587
sg12
Vget_grid_positions
p32588
sg14
(lp32589
sg2
g32584
sbs(S'twiny'
p32590
g21176
tp32591
g21171
s(g117
g118
g27507
tp32592
g27503
s(S'psd'
p32593
S'xmargin'
p32594
tp32595
(icodemend.demo.code_suggest
Element
p32596
(dp32597
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p32598
sg12
Vpsd.xmargin
p32599
sg14
(lp32600
sg2
g32594
sbs(S'annotate'
p32601
S'codes'
p32602
tp32603
(icodemend.demo.code_suggest
Element
p32604
(dp32605
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p32606
sg12
Vannotate.codes
p32607
sg14
(lp32608
sg2
g32602
sbs(S'plot_date'
p32609
g19985
tp32610
g19980
s(g93
g161
S'(0.5, 1)'
p32611
tp32612
(icodemend.demo.code_suggest
Element
p32613
(dp32614
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/5, 1)
p32615
sg14
(lp32616
sg2
g32611
sbs(g245
g140
g30338
tp32617
g30334
s(g101
g102
g21867
tp32618
g21863
s(g1003
S'showmeans'
p32619
g438
tp32620
(icodemend.demo.code_suggest
Element
p32621
(dp32622
g10
I3
sg11
S''
sg12
Vboxplot.showmeans.True
p32623
sg14
(lp32624
sg2
g438
sbs(S'magnitude_spectrum'
p32625
S'yticklabels'
p32626
tp32627
(icodemend.demo.code_suggest
Element
p32628
(dp32629
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p32630
sg12
Vmagnitude_spectrum.yticklabels
p32631
sg14
(lp32632
sg2
g32626
sbs(S'errorbar'
p32633
S'contains'
p32634
tp32635
(icodemend.demo.code_suggest
Element
p32636
(dp32637
g10
I0
sg11
S'replace the contains test used by this artist .'
p32638
sg12
Verrorbar.contains
p32639
sg14
(lp32640
sg2
g32634
sbs(g245
g140
g30114
tp32641
g30110
s(g245
g140
g30473
tp32642
g30469
s(g252
g253
g14051
tp32643
g14047
s(S'save'
p32644
S'extra_args'
p32645
tp32646
(icodemend.demo.code_suggest
Element
p32647
(dp32648
g10
I4
sg11
S"extra_args is a list of extra string arguments to be passed to the underlying movie utiltiy . the default is none , which passes the additional argurments in the ' animation.extra_args ' rcparam ."
p32649
sg12
Vsave.extra_args
p32650
sg14
(lp32651
(icodemend.demo.code_suggest
Element
p32652
(dp32653
g10
I3
sg11
S''
sg12
Vsave.extra_args.['-vcodec', 'libx264']
p32654
sg14
(lp32655
sg2
S"['-vcodec', 'libx264']"
p32656
sbag32528
asg2
g32645
sbs(S'barh'
p32657
S'lolims'
p32658
tp32659
(icodemend.demo.code_suggest
Element
p32660
(dp32661
g10
I0
sg11
S'these arguments can be used to indicate that a value gives only upper/lower limits . in that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . to use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .'
p32662
sg12
Vbarh.lolims
p32663
sg14
(lp32664
sg2
g32658
sbs(S'phase_spectrum'
p32665
S'freqs'
p32666
tp32667
(icodemend.demo.code_suggest
Element
p32668
(dp32669
g10
I0
sg11
S'returns the tuple ( spectrum , freqs , line ) :'
p32670
sg12
Vphase_spectrum.freqs
p32671
sg14
(lp32672
sg2
g32666
sbs(S'eventplot'
p32673
g23565
tp32674
g23560
s(g324
g325
g9222
tp32675
g9218
s(S'barh'
p32676
S'codes'
p32677
tp32678
(icodemend.demo.code_suggest
Element
p32679
(dp32680
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p32681
sg12
Vbarh.codes
p32682
sg14
(lp32683
sg2
g32677
sbs(g324
g325
g9188
tp32684
g9184
s(g324
g325
g9158
tp32685
g9154
s(g101
g8267
g22152
tp32686
g22148
sS'get_antialiased'
p32687
(icodemend.demo.code_suggest
Element
p32688
(dp32689
g10
I0
sg11
S'return true if the object should try to do antialiased rendering returns true if the patch is to be drawn with antialiasing .'
p32690
sg12
Vget_antialiased
p32691
sg14
(lp32692
sg2
g32687
sbs(g5562
g325
g10850
tp32693
g10846
sS'tick_values'
p32694
(icodemend.demo.code_suggest
Element
p32695
(dp32696
g10
I2
sg11
S'" return the locations of the ticks .'
p32697
sg12
Vtick_values
p32698
sg14
(lp32699
sg2
g32694
sbs(g117
g118
g27541
tp32700
g27537
s(S'axvline'
p32701
S'label'
p32702
tp32703
(icodemend.demo.code_suggest
Element
p32704
(dp32705
g10
I0
sg11
S'set the label to s for auto legend .'
p32706
sg12
Vaxvline.label
p32707
sg14
(lp32708
sg2
g32702
sbs(S'set_yticklabels'
p32709
g18118
tp32710
g18113
s(g101
g118
g22010
tp32711
g22006
s(g7484
g110
g25774
tp32712
g25770
s(S'plot_day_summary_ohlc'
p32713
S'colordown'
p32714
tp32715
(icodemend.demo.code_suggest
Element
p32716
(dp32717
g10
I0
sg11
S'the color of the lines where close < open'
p32718
sg12
Vplot_day_summary_ohlc.colordown
p32719
sg14
(lp32720
sg2
g32714
sbs(S'csd'
p32721
S'hatch'
p32722
tp32723
(icodemend.demo.code_suggest
Element
p32724
(dp32725
g10
I0
sg11
S'set the hatching pattern'
p32726
sg12
Vcsd.hatch
p32727
sg14
(lp32728
sg2
g32722
sbs(g117
g118
g28179
tp32729
g28175
s(g117
g2392
S'0'
tp32730
g29059
s(S'angle_spectrum'
p32731
g18834
tp32732
g18829
s(S'legend'
p32733
g14389
tp32734
g14376
s(S'subplots'
p32735
g2136
tp32736
g2131
s(g6632
g966
S"'mollweide'"
p32737
tp32738
(icodemend.demo.code_suggest
Element
p32739
(dp32740
g10
I1
sg11
S''
sg12
Vadd_subplot.projection.'mollweide'
p32741
sg14
(lp32742
sg2
g32737
sbs(g252
g253
g14071
tp32743
g14067
s(S'pcolormesh'
p32744
S'Y'
tp32745
(icodemend.demo.code_suggest
Element
p32746
(dp32747
g10
I0
sg11
S'c may be a masked array , but x and y may not . masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .'
p32748
sg12
Vpcolormesh.Y
p32749
sg14
(lp32750
sg2
S'Y'
sbs(g766
g666
g4003
tp32751
g3999
sS'set_boxstyle'
p32752
(icodemend.demo.code_suggest
Element
p32753
(dp32754
g10
I0
sg11
S'set the box style .'
p32755
sg12
Vset_boxstyle
p32756
sg14
(lp32757
g447
asg2
g32752
sbs(S'fill'
p32758
S'closed'
p32759
tp32760
(icodemend.demo.code_suggest
Element
p32761
(dp32762
g10
I0
sg11
S'set if the polygon is closed|||if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .|||the closed kwarg will close the polygon when true ( default ) .'
p32763
sg12
Vfill.closed
p32764
sg14
(lp32765
sg2
g32759
sbs(S'quiver'
p32766
g30878
tp32767
g30868
s(S'gca'
p32768
S'prop_cycle'
p32769
tp32770
(icodemend.demo.code_suggest
Element
p32771
(dp32772
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p32773
sg12
Vgca.prop_cycle
p32774
sg14
(lp32775
sg2
g32769
sbs(g965
g14753
g1944
tp32776
(icodemend.demo.code_suggest
Element
p32777
(dp32778
g10
I3
sg11
S''
sg12
Vadd_axes.visible.False
p32779
sg14
(lp32780
sg2
g1944
sbs(g6146
g2841
g14862
tp32781
g14858
s(S'broken_barh'
p32782
S'antialiased'
p32783
tp32784
(icodemend.demo.code_suggest
Element
p32785
(dp32786
g10
I0
sg11
S'set the antialiasing state for rendering .'
p32787
sg12
Vbroken_barh.antialiased
p32788
sg14
(lp32789
sg2
g32783
sbs(g101
S's'
g7651
tp32790
g7647
s(S'mpl_connect'
p32791
g4690
tp32792
g4685
s(S'is_color_like'
p32793
S'c'
tp32794
(icodemend.demo.code_suggest
Element
p32795
(dp32796
g10
I0
sg11
S'return true if c can be converted to rgb'
p32797
sg12
Vis_color_like.c
p32798
sg14
(lp32799
sg2
S'c'
sbs(S'quiver'
p32800
g31123
tp32801
g31118
s(S'axhline'
p32802
g3867
tp32803
g3862
s(g766
g7032
g19283
tp32804
g19279
s(g324
g785
g9307
tp32805
g9303
s(S'plot'
p32806
S'y'
tp32807
g29409
sS'get_width_from_char_name'
p32808
(icodemend.demo.code_suggest
Element
p32809
(dp32810
g10
I0
sg11
S'get the width of the character from a type1 character name'
p32811
sg12
Vget_width_from_char_name
p32812
sg14
(lp32813
sg2
g32808
sbs(S'subplots'
p32814
g2071
tp32815
g2041
s(S'set_view_interval'
p32816
S'ignore'
p32817
tp32818
(icodemend.demo.code_suggest
Element
p32819
(dp32820
g10
I0
sg11
S'if ignore is false , the order of vmin , vmax does not matter ; the original axis orientation will be preserved . in addition , the view limits can be expanded , but will not be reduced . this method is for mpl internal use ; for normal use , see set_xlim ( ) . if ignore is false , the order of vmin , vmax does not matter ; the original axis orientation will be preserved . in addition , the view limits can be expanded , but will not be reduced . this method is for mpl internal use ; for normal use , see set_ylim ( ) .'
p32821
sg12
Vset_view_interval.ignore
p32822
sg14
(lp32823
sg2
g32817
sbs(g101
g325
g21784
tp32824
g21780
s(S'fill_betweenx'
p32825
g20371
tp32826
g20361
sS'set_lw'
p32827
(icodemend.demo.code_suggest
Element
p32828
(dp32829
g10
I6
sg11
S'alias for set_linewidth'
p32830
sg12
Vset_lw
p32831
sg14
(lp32832
sg2
g32827
sbs(g117
g2392
S'7'
tp32833
g29073
s(S'getpoints'
p32834
S'y1'
p32835
tp32836
(icodemend.demo.code_suggest
Element
p32837
(dp32838
g10
I0
sg11
S'for line segment defined by ( x1 , y1 ) and ( x2 , y2 ) return the points on the line that is perpendicular to the line and intersects ( x2 , y2 ) and the distance from ( x2 , y2 ) of the returned points is k .'
p32839
sg12
Vgetpoints.y1
p32840
sg14
(lp32841
sg2
g32835
sbs(S'make_axes_gridspec'
p32842
S'make_axes'
p32843
tp32844
(icodemend.demo.code_suggest
Element
p32845
(dp32846
g10
I0
sg11
S'while this function is meant to be compatible with make_axes , there could be some minor differences . :'
p32847
sg12
Vmake_axes_gridspec.make_axes
p32848
sg14
(lp32849
sg2
g32843
sbs(g1170
S'weights'
p32850
S'[frequency1, frequency2, frequency3]'
p32851
tp32852
(icodemend.demo.code_suggest
Element
p32853
(dp32854
g10
I1
sg11
S''
sg12
Vhist.weights.[frequency1, frequency2, frequency3]
p32855
sg14
(lp32856
sg2
g32851
sbs(g4371
g7032
g17539
tp32857
g17535
s(S'getp'
p32858
S'rotation_mode'
p32859
tp32860
(icodemend.demo.code_suggest
Element
p32861
(dp32862
g10
I0
sg11
S'set text rotation mode .'
p32863
sg12
Vgetp.rotation_mode
p32864
sg14
(lp32865
sg2
g32859
sbs(g117
g6300
g29637
tp32866
g29633
s(g117
g118
g27854
tp32867
g27850
s(g245
g140
g30488
tp32868
g30484
s(g1170
g1257
S'xbins'
p32869
tp32870
(icodemend.demo.code_suggest
Element
p32871
(dp32872
g10
I1
sg11
S''
sg12
Vhist.bins.xbins
p32873
sg14
(lp32874
sg2
g32869
sbsS'quad2cubic'
p32875
(icodemend.demo.code_suggest
Element
p32876
(dp32877
g10
I0
sg11
S'converts a quadratic bezier curve to a cubic approximation .'
p32878
sg12
Vquad2cubic
p32879
sg14
(lp32880
(icodemend.demo.code_suggest
Element
p32881
(dp32882
g10
I0
sg11
S'the inputs are the x and y coordinates of the three control points of a quadratic curve , and the output is a tuple of x and y coordinates of the four control points of the cubic curve .'
p32883
sg12
Vquad2cubic.x
p32884
sg14
(lp32885
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p32886
(dp32887
g10
I0
sg11
S'the inputs are the x and y coordinates of the three control points of a quadratic curve , and the output is a tuple of x and y coordinates of the four control points of the cubic curve .'
p32888
sg12
Vquad2cubic.y
p32889
sg14
(lp32890
sg2
S'y'
sbasg2
g32875
sbsS'complex_spectrum'
p32891
(icodemend.demo.code_suggest
Element
p32892
(dp32893
g10
I0
sg11
S'compute the complex-valued frequency spectrum of x .'
p32894
sg12
Vcomplex_spectrum
p32895
sg14
(lp32896
(icodemend.demo.code_suggest
Element
p32897
(dp32898
g10
I0
sg11
S'the sampling frequency ( samples per time unit ) . it is used to calculate the fourier frequencies , freqs , in cycles per time unit . the default value is 2 .'
p32899
sg12
Vcomplex_spectrum.Fs
p32900
sg14
(lp32901
sg2
S'Fs'
p32902
sba(icodemend.demo.code_suggest
Element
p32903
(dp32904
g10
I0
sg11
S'returns the tuple ( spectrum , freqs ) :'
p32905
sg12
Vcomplex_spectrum.freqs
p32906
sg14
(lp32907
sg2
S'freqs'
p32908
sbag16719
a(icodemend.demo.code_suggest
Element
p32909
(dp32910
g10
I0
sg11
S"specifies which sides of the spectrum to return . default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided ."
p32911
sg12
Vcomplex_spectrum.sides
p32912
sg14
(lp32913
sg2
S'sides'
p32914
sba(icodemend.demo.code_suggest
Element
p32915
(dp32916
g10
I0
sg11
S'returns the tuple ( spectrum , freqs ) :'
p32917
sg12
Vcomplex_spectrum.spectrum
p32918
sg14
(lp32919
sg2
S'spectrum'
p32920
sba(icodemend.demo.code_suggest
Element
p32921
(dp32922
g10
I0
sg11
S'compute the complex-valued frequency spectrum of x . data is padded to a length of pad_to and the windowing function window is applied to the signal .|||a function or a vector of length nfft . to create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. the default is window_hanning ( ) . if a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment .'
p32923
sg12
Vcomplex_spectrum.window
p32924
sg14
(lp32925
sg2
S'window'
p32926
sba(icodemend.demo.code_suggest
Element
p32927
(dp32928
g10
I0
sg11
S'compute the complex-valued frequency spectrum of x . data is padded to a length of pad_to and the windowing function window is applied to the signal .|||array or sequence containing the data'
p32929
sg12
Vcomplex_spectrum.x
p32930
sg14
(lp32931
sg2
S'x'
sbasg2
g32891
sbs(S'pie'
p32932
S'True'
p32933
tp32934
(icodemend.demo.code_suggest
Element
p32935
(dp32936
g10
I0
sg11
S'specify fractions direction , clockwise or counterclockwise .|||draw a shadow beneath the pie .|||plot axes frame with the chart .'
p32937
sg12
Vpie.True
p32938
sg14
(lp32939
sg2
g32933
sbs(S'barh'
p32940
S'_interpolation_steps'
p32941
tp32942
(icodemend.demo.code_suggest
Element
p32943
(dp32944
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p32945
sg12
Vbarh._interpolation_steps
p32946
sg14
(lp32947
sg2
g32941
sbs(S'barbs'
p32948
S'picker'
p32949
tp32950
(icodemend.demo.code_suggest
Element
p32951
(dp32952
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p32953
sg12
Vbarbs.picker
p32954
sg14
(lp32955
sg2
g32949
sbsS'render_rect_filled'
p32956
(icodemend.demo.code_suggest
Element
p32957
(dp32958
g10
I0
sg11
S'draw a filled rectangle from ( x1 , y1 ) to ( x2 , y2 ) . draw a filled black rectangle from ( x1 , y1 ) to ( x2 , y2 ) .'
p32959
sg12
Vrender_rect_filled
p32960
sg14
(lp32961
(icodemend.demo.code_suggest
Element
p32962
(dp32963
g10
I0
sg11
S'draw a filled rectangle from ( x1 , y1 ) to ( x2 , y2 ) . draw a filled black rectangle from ( x1 , y1 ) to ( x2 , y2 ) .'
p32964
sg12
Vrender_rect_filled.x1
p32965
sg14
(lp32966
sg2
S'x1'
p32967
sba(icodemend.demo.code_suggest
Element
p32968
(dp32969
g10
I0
sg11
S'draw a filled rectangle from ( x1 , y1 ) to ( x2 , y2 ) . draw a filled black rectangle from ( x1 , y1 ) to ( x2 , y2 ) .'
p32970
sg12
Vrender_rect_filled.x2
p32971
sg14
(lp32972
sg2
S'x2'
p32973
sbag150
a(icodemend.demo.code_suggest
Element
p32974
(dp32975
g10
I0
sg11
S'draw a filled rectangle from ( x1 , y1 ) to ( x2 , y2 ) . draw a filled black rectangle from ( x1 , y1 ) to ( x2 , y2 ) .'
p32976
sg12
Vrender_rect_filled.y2
p32977
sg14
(lp32978
sg2
S'y2'
p32979
sbasg2
g32956
sbs(g324
g102
g9951
tp32980
g9947
s(S'scatter'
p32981
g22197
tp32982
g22192
s(g245
g3075
S'1'
tp32983
(icodemend.demo.code_suggest
Element
p32984
(dp32985
g10
I1
sg11
S''
sg12
Vfigure.dpi.1
p32986
sg14
(lp32987
sg2
S'1'
sbs(S'contour'
p32988
g17844
tp32989
g17839
s(S'boxplot'
p32990
S'positions'
p32991
tp32992
(icodemend.demo.code_suggest
Element
p32993
(dp32994
g10
I17
sg11
S'sets the positions of the boxes . the ticks and limits are automatically set to match the positions .'
p32995
sg12
Vboxplot.positions
p32996
sg14
(lp32997
g4653
ag5061
a(icodemend.demo.code_suggest
Element
p32998
(dp32999
g10
I1
sg11
S''
sg12
Vboxplot.positions.[0, 1, 2]
p33000
sg14
(lp33001
sg2
S'[0, 1, 2]'
p33002
sba(icodemend.demo.code_suggest
Element
p33003
(dp33004
g10
I1
sg11
S''
sg12
Vboxplot.positions.[0]
p33005
sg14
(lp33006
sg2
S'[0]'
p33007
sba(icodemend.demo.code_suggest
Element
p33008
(dp33009
g10
I1
sg11
S''
sg12
Vboxplot.positions.[1, 2]
p33010
sg14
(lp33011
sg2
S'[1, 2]'
p33012
sba(icodemend.demo.code_suggest
Element
p33013
(dp33014
g10
I1
sg11
S''
sg12
Vboxplot.positions.[4, 5]
p33015
sg14
(lp33016
sg2
S'[4, 5]'
p33017
sbag10645
a(icodemend.demo.code_suggest
Element
p33018
(dp33019
g10
I1
sg11
S''
sg12
Vboxplot.positions.a
p33020
sg14
(lp33021
sg2
S'a'
sba(icodemend.demo.code_suggest
Element
p33022
(dp33023
g10
I1
sg11
S''
sg12
Vboxplot.positions.pos
p33024
sg14
(lp33025
sg2
S'pos'
p33026
sba(icodemend.demo.code_suggest
Element
p33027
(dp33028
g10
I1
sg11
S''
sg12
Vboxplot.positions.x
p33029
sg14
(lp33030
sg2
S'x'
sbasg2
g32991
sbsS'parse_yahoo_historical_ochl'
p33031
(icodemend.demo.code_suggest
Element
p33032
(dp33033
g10
I0
sg11
S'parse the historical data in file handle fh from yahoo finance .'
p33034
sg12
Vparse_yahoo_historical_ochl
p33035
sg14
(lp33036
(icodemend.demo.code_suggest
Element
p33037
(dp33038
g10
I0
sg11
S'if true ( default ) replace open , close , high , low prices with their adjusted values . the adjustment is by a scale factor , s = adjusted_close/close . adjusted prices are actual prices multiplied by s.'
p33039
sg12
Vparse_yahoo_historical_ochl.adjusted
p33040
sg14
(lp33041
sg2
S'adjusted'
p33042
sba(icodemend.demo.code_suggest
Element
p33043
(dp33044
g10
I0
sg11
S'if false ( default for compatibility with earlier versions ) return a list of tuples containing'
p33045
sg12
Vparse_yahoo_historical_ochl.asobject
p33046
sg14
(lp33047
sg2
S'asobject'
p33048
sbasg2
g33031
sbs(g93
g333
S'bbox_args'
p33049
tp33050
(icodemend.demo.code_suggest
Element
p33051
(dp33052
g10
I1
sg11
S''
sg12
Vannotate.bbox.bbox_args
p33053
sg14
(lp33054
sg2
g33049
sbs(g101
g118
g22005
tp33055
g22001
s(S'trigger_tool'
p33056
S'sender: object'
p33057
tp33058
(icodemend.demo.code_suggest
Element
p33059
(dp33060
g10
I0
sg11
S'object that wishes to trigger the tool'
p33061
sg12
Vtrigger_tool.sender: object
p33062
sg14
(lp33063
sg2
g33057
sbsS'set_size'
p33064
(icodemend.demo.code_suggest
Element
p33065
(dp33066
g10
I9
sg11
S'set the font size .'
p33067
sg12
Vset_size
p33068
sg14
(lp33069
sg2
g33064
sbs(S'plot'
p33070
g29922
tp33071
g29917
s(S'parse'
p33072
S'prop'
p33073
tp33074
(icodemend.demo.code_suggest
Element
p33075
(dp33076
g10
I0
sg11
S'parse the given math expression s at the given dpi . if prop is provided , it is a fontproperties object specifying the " default " font to use in the math expression , used for all non-math text .'
p33077
sg12
Vparse.prop
p33078
sg14
(lp33079
sg2
g33073
sbs(S'set_xticks'
p33080
S'ticks'
p33081
tp33082
(icodemend.demo.code_suggest
Element
p33083
(dp33084
g10
I1
sg11
S'set the x ticks with list of ticks'
p33085
sg12
Vset_xticks.ticks
p33086
sg14
(lp33087
(icodemend.demo.code_suggest
Element
p33088
(dp33089
g10
I1
sg11
S''
sg12
Vset_xticks.ticks.[0, 2, 4, 5, 30, 50]
p33090
sg14
(lp33091
sg2
S'[0, 2, 4, 5, 30, 50]'
p33092
sbasg2
g33081
sbsS'get_ticks_position'
p33093
(icodemend.demo.code_suggest
Element
p33094
(dp33095
g10
I0
sg11
S'return the ticks position ( left , right , both or unknown ) return the ticks position ( top , bottom , default or unknown )'
p33096
sg12
Vget_ticks_position
p33097
sg14
(lp33098
sg2
g33093
sbs(S'register_cmap'
p33099
S'cmap'
p33100
tp33101
(icodemend.demo.code_suggest
Element
p33102
(dp33103
g10
I6
sg11
S'in the first case , cmap must be a matplotlib.colors.colormap instance . the name is optional ; if absent , the name will be the name attribute of the cmap .'
p33104
sg12
Vregister_cmap.cmap
p33105
sg14
(lp33106
(icodemend.demo.code_suggest
Element
p33107
(dp33108
g10
I1
sg11
S''
sg12
Vregister_cmap.cmap.TEMPE
p33109
sg14
(lp33110
sg2
g9197
sba(icodemend.demo.code_suggest
Element
p33111
(dp33112
g10
I1
sg11
S''
sg12
Vregister_cmap.cmap.cmap3
p33113
sg14
(lp33114
sg2
g9113
sba(icodemend.demo.code_suggest
Element
p33115
(dp33116
g10
I1
sg11
S''
sg12
Vregister_cmap.cmap.dropout_high
p33117
sg14
(lp33118
sg2
g2848
sba(icodemend.demo.code_suggest
Element
p33119
(dp33120
g10
I1
sg11
S''
sg12
Vregister_cmap.cmap.greys
p33121
sg14
(lp33122
sg2
g9227
sba(icodemend.demo.code_suggest
Element
p33123
(dp33124
g10
I1
sg11
S''
sg12
Vregister_cmap.cmap.mycmap
p33125
sg14
(lp33126
sg2
S'mycmap'
p33127
sba(icodemend.demo.code_suggest
Element
p33128
(dp33129
g10
I1
sg11
S''
sg12
Vregister_cmap.cmap.newcmap
p33130
sg14
(lp33131
sg2
g17590
sbasg2
g33100
sbsS'get_orientation'
p33132
(icodemend.demo.code_suggest
Element
p33133
(dp33134
g10
I0
sg11
S'get the orientation of the event line , may be'
p33135
sg12
Vget_orientation
p33136
sg14
(lp33137
sg2
g33132
sbs(g944
g132
S"'darkgrey'"
p33138
tp33139
(icodemend.demo.code_suggest
Element
p33140
(dp33141
g10
I1
sg11
S''
sg12
Vbarh.color.'darkgrey'
p33142
sg14
(lp33143
sg2
g33138
sbsS'draw_event'
p33144
(icodemend.demo.code_suggest
Element
p33145
(dp33146
g10
I0
sg11
S"this method will be call all functions connected to the ' draw_event ' with a drawevent"
p33147
sg12
Vdraw_event
p33148
sg14
(lp33149
sg2
g33144
sbs(S'imshow'
p33150
g9263
tp33151
g9046
s(g245
g140
g30248
tp33152
g30244
s(S'plot_date'
p33153
g20015
tp33154
g20010
s(S'csd'
p33155
S'contains'
p33156
tp33157
(icodemend.demo.code_suggest
Element
p33158
(dp33159
g10
I0
sg11
S'replace the contains test used by this artist .'
p33160
sg12
Vcsd.contains
p33161
sg14
(lp33162
sg2
g33156
sbsS'transformed'
p33163
(icodemend.demo.code_suggest
Element
p33164
(dp33165
g10
I19
sg11
S'return a transformed copy of the path .'
p33166
sg12
Vtransformed
p33167
sg14
(lp33168
sg2
g33163
sbs(S'add'
p33169
S'color_cycle'
p33170
tp33171
(icodemend.demo.code_suggest
Element
p33172
(dp33173
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p33174
sg12
Vadd.color_cycle
p33175
sg14
(lp33176
sg2
g33170
sbs(g117
g118
g27749
tp33177
g27745
s(S'text'
p33178
S'path_effects'
p33179
tp33180
(icodemend.demo.code_suggest
Element
p33181
(dp33182
g10
I3
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p33183
sg12
Vtext.path_effects
p33184
sg14
(lp33185
(icodemend.demo.code_suggest
Element
p33186
(dp33187
g10
I1
sg11
S''
sg12
Vtext.path_effects.[patheffects/withSimplePatchShadow(shadow_rgbFace=(1, 1, 1))]
p33188
sg14
(lp33189
sg2
S'[patheffects.withSimplePatchShadow(shadow_rgbFace=(1, 1, 1))]'
p33190
sba(icodemend.demo.code_suggest
Element
p33191
(dp33192
g10
I1
sg11
S''
sg12
Vtext.path_effects.[pe/withStroke(linewidth=10, foreground='w')]
p33193
sg14
(lp33194
sg2
S"[pe.withStroke(linewidth=10, foreground='w')]"
p33195
sba(icodemend.demo.code_suggest
Element
p33196
(dp33197
g10
I1
sg11
S''
sg12
Vtext.path_effects.[pe/withStroke(linewidth=4, foreground='red')]
p33198
sg14
(lp33199
sg2
S"[pe.withStroke(linewidth=4, foreground='red')]"
p33200
sbasg2
g33179
sbs(S'vector_lengths'
p33201
S'axis'
p33202
tp33203
(icodemend.demo.code_suggest
Element
p33204
(dp33205
g10
I0
sg11
S'computes ( sum((x_i)^p))^(1/p ) for each { x_i } being the elements of x along the given axis . if axis is none , compute over all elements of x .'
p33206
sg12
Vvector_lengths.axis
p33207
sg14
(lp33208
sg2
g33202
sbsS'can_zoom'
p33209
(icodemend.demo.code_suggest
Element
p33210
(dp33211
g10
I0
sg11
S'return true if this axes supports the zoom box button functionality .'
p33212
sg12
Vcan_zoom
p33213
sg14
(lp33214
sg2
g33209
sbs(g252
g7452
g14320
tp33215
g14316
s(g93
g161
S'(1, var.max())'
p33216
tp33217
(icodemend.demo.code_suggest
Element
p33218
(dp33219
g10
I1
sg11
S''
sg12
Vannotate.xy.(1, var/max())
p33220
sg14
(lp33221
sg2
g33216
sbs(S'psd'
p33222
S'readonly'
p33223
tp33224
(icodemend.demo.code_suggest
Element
p33225
(dp33226
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p33227
sg12
Vpsd.readonly
p33228
sg14
(lp33229
sg2
g33223
sbs(S'semilogx'
p33230
S'position'
p33231
tp33232
(icodemend.demo.code_suggest
Element
p33233
(dp33234
g10
I0
sg11
S'set the axes position with'
p33235
sg12
Vsemilogx.position
p33236
sg14
(lp33237
sg2
g33231
sbs(S'__call__'
p33238
S'y'
tp33239
(icodemend.demo.code_suggest
Element
p33240
(dp33241
g10
I0
sg11
S'returns integer array with the same shape and x and y .|||x , y are array_like x and y coordinates of the same shape and any number of dimensions .'
p33242
sg12
V__call__.y
p33243
sg14
(lp33244
sg2
S'y'
sbsS'set_xbound'
p33245
(icodemend.demo.code_suggest
Element
p33246
(dp33247
g10
I5
sg11
S'set the lower and upper numerical bounds of the x-axis .'
p33248
sg12
Vset_xbound
p33249
sg14
(lp33250
sg2
g33245
sbs(g514
g325
S"'RdPu'"
p33251
tp33252
(icodemend.demo.code_suggest
Element
p33253
(dp33254
g10
I1
sg11
S''
sg12
Vpcolor.cmap.'RdPu'
p33255
sg14
(lp33256
sg2
g33251
sbs(S'add_axes'
p33257
S'left'
p33258
tp33259
(icodemend.demo.code_suggest
Element
p33260
(dp33261
g10
I0
sg11
S"add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal axes kwargs plus projection which sets the projection type of the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) . typical usage :"
p33262
sg12
Vadd_axes.left
p33263
sg14
(lp33264
sg2
g33258
sbs(S'set_xticklabels'
p33265
g17013
tp33266
g17008
s(g117
g118
g28489
tp33267
g28485
s(S'axvspan'
p33268
S'xmargin'
p33269
tp33270
(icodemend.demo.code_suggest
Element
p33271
(dp33272
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p33273
sg12
Vaxvspan.xmargin
p33274
sg14
(lp33275
sg2
g33269
sbs(g117
g909
S'4'
tp33276
g29257
s(g5848
g5849
S'60.0'
p33277
tp33278
(icodemend.demo.code_suggest
Element
p33279
(dp33280
g10
I1
sg11
S''
sg12
VSlider.valinit.60/0
p33281
sg14
(lp33282
sg2
g33277
sbs(g388
g389
g16979
tp33283
g16975
s(g5052
g2155
S'(x_min, x_max)'
p33284
tp33285
(icodemend.demo.code_suggest
Element
p33286
(dp33287
g10
I1
sg11
S''
sg12
Vgca.xlim.(x_min, x_max)
p33288
sg14
(lp33289
sg2
g33284
sbsS'draw_gouraud_triangle'
p33290
(icodemend.demo.code_suggest
Element
p33291
(dp33292
g10
I0
sg11
S'draw a gouraud-shaded triangle .'
p33293
sg12
Vdraw_gouraud_triangle
p33294
sg14
(lp33295
g10915
ag16541
a(icodemend.demo.code_suggest
Element
p33296
(dp33297
g10
I0
sg11
S'transform is an affine transform to apply to the points .'
p33298
sg12
Vdraw_gouraud_triangle.transform
p33299
sg14
(lp33300
sg2
S'transform'
p33301
sbasg2
g33290
sbs(S'set_contains'
p33302
S'props'
p33303
tp33304
(icodemend.demo.code_suggest
Element
p33305
(dp33306
g10
I0
sg11
S'if the mouse event is over the artist , return hit = true and props is a dictionary of properties you want returned with the contains test .'
p33307
sg12
Vset_contains.props
p33308
sg14
(lp33309
sg2
g33303
sbs(S'add_axes'
p33310
S'rasterized'
p33311
tp33312
(icodemend.demo.code_suggest
Element
p33313
(dp33314
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p33315
sg12
Vadd_axes.rasterized
p33316
sg14
(lp33317
sg2
g33311
sbs(S'autoscale'
p33318
S'A'
tp33319
(icodemend.demo.code_suggest
Element
p33320
(dp33321
g10
I0
sg11
S'set vmin , vmax to min , max of a .'
p33322
sg12
Vautoscale.A
p33323
sg14
(lp33324
sg2
S'A'
sbs(g93
g161
S'(0, 0.5)'
p33325
tp33326
(icodemend.demo.code_suggest
Element
p33327
(dp33328
g10
I1
sg11
S''
sg12
Vannotate.xy.(0, 0/5)
p33329
sg14
(lp33330
sg2
g33325
sbsS'fontName'
p33331
(icodemend.demo.code_suggest
Element
p33332
(dp33333
g10
I0
sg11
S'select a font based on fontprop and return a name suitable for op.selectfont .'
p33334
sg12
VfontName
p33335
sg14
(lp33336
sg2
g33331
sbs(S'get_xyz_where'
p33337
S'N'
tp33338
g17876
s(g139
g370
g370
tp33339
g1883
sS'get_xmajorticklabels'
p33340
(icodemend.demo.code_suggest
Element
p33341
(dp33342
g10
I2
sg11
S'get the xtick labels as a list of text instances .'
p33343
sg12
Vget_xmajorticklabels
p33344
sg14
(lp33345
sg2
g33340
sbs(g452
g453
g7174
tp33346
g7170
s(S'clabel'
p33347
S'v'
tp33348
g14917
sS'flatten'
p33349
(icodemend.demo.code_suggest
Element
p33350
(dp33351
g10
I100
sg11
S'returns a generator of flattened nested containers'
p33352
sg12
Vflatten
p33353
sg14
(lp33354
sg2
g33349
sbs(g109
g3075
S'256'
p33355
tp33356
(icodemend.demo.code_suggest
Element
p33357
(dp33358
g10
I1
sg11
S''
sg12
Vsavefig.dpi.256
p33359
sg14
(lp33360
sg2
g33355
sbs(S'errorbar'
p33361
S'color_cycle'
p33362
tp33363
(icodemend.demo.code_suggest
Element
p33364
(dp33365
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p33366
sg12
Verrorbar.color_cycle
p33367
sg14
(lp33368
sg2
g33362
sbs(S'psd'
p33369
S'prop_cycle'
p33370
tp33371
(icodemend.demo.code_suggest
Element
p33372
(dp33373
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p33374
sg12
Vpsd.prop_cycle
p33375
sg14
(lp33376
sg2
g33370
sbs(g1170
g132
S"['#3782CC', '#AFD5FA']"
p33377
tp33378
(icodemend.demo.code_suggest
Element
p33379
(dp33380
g10
I1
sg11
S''
sg12
Vhist.color.['#3782CC', '#AFD5FA']
p33381
sg14
(lp33382
sg2
g33377
sbsS'set_ticks'
p33383
(icodemend.demo.code_suggest
Element
p33384
(dp33385
g10
I62
sg11
S'set the locations of the tick marks from sequence ticks set tick locations .'
p33386
sg12
Vset_ticks
p33387
sg14
(lp33388
g20568
asg2
g33383
sbsS'set_bbox'
p33389
(icodemend.demo.code_suggest
Element
p33390
(dp33391
g10
I5
sg11
S'draw a bounding box around self .'
p33392
sg12
Vset_bbox
p33393
sg14
(lp33394
sg2
g33389
sbs(S'tricontourf'
p33395
g11636
tp33396
g11631
s(S'csd'
p33397
S'NFFT'
p33398
tp33399
(icodemend.demo.code_suggest
Element
p33400
(dp33401
g10
I0
sg11
S"the cross spectral density by welch 's average periodogram method . the vectors x and y are divided into nfft length segments . each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . the product of the direct ffts of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||if len(x ) < nfft or len(y ) < nfft , they will be zero padded to nfft ."
p33402
sg12
Vcsd.NFFT
p33403
sg14
(lp33404
sg2
g33398
sbs(S'axvline'
p33405
S'snap'
p33406
tp33407
(icodemend.demo.code_suggest
Element
p33408
(dp33409
g10
I0
sg11
S'sets the snap setting which may be'
p33410
sg12
Vaxvline.snap
p33411
sg14
(lp33412
sg2
g33406
sbs(S'get_path_collection_extents'
p33413
S'transforms'
p33414
tp33415
(icodemend.demo.code_suggest
Element
p33416
(dp33417
g10
I0
sg11
S'the way that paths , transforms and offsets are combined follows the same method as for collections . each is iterated over independently , so if you have 3 paths , 2 transforms and 1 offset , their combinations are as follows :|||transforms is a sequence of affine2d instances .'
p33418
sg12
Vget_path_collection_extents.transforms
p33419
sg14
(lp33420
sg2
g33414
sbs(g93
g161
S'(0, 0)'
p33421
tp33422
(icodemend.demo.code_suggest
Element
p33423
(dp33424
g10
I8
sg11
S''
sg12
Vannotate.xy.(0, 0)
p33425
sg14
(lp33426
sg2
g33421
sbs(g2814
g10936
S'[(-0.1), 0.1]'
p33427
tp33428
(icodemend.demo.code_suggest
Element
p33429
(dp33430
g10
I1
sg11
S''
sg12
Vadd.flows.[(-0/1), 0/1]
p33431
sg14
(lp33432
sg2
g33427
sbs(S'axhspan'
p33433
g24310
tp33434
g24305
s(S'text'
p33435
S'color_cycle'
p33436
tp33437
(icodemend.demo.code_suggest
Element
p33438
(dp33439
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p33440
sg12
Vtext.color_cycle
p33441
sg14
(lp33442
sg2
g33436
sbs(S'legend'
p33443
g14220
tp33444
g14203
s(g109
g19182
S"'raw'"
p33445
tp33446
(icodemend.demo.code_suggest
Element
p33447
(dp33448
g10
I1
sg11
S''
sg12
Vsavefig.format.'raw'
p33449
sg14
(lp33450
sg2
g33445
sbs(S'loglog'
p33451
S'clip_on'
p33452
tp33453
(icodemend.demo.code_suggest
Element
p33454
(dp33455
g10
I0
sg11
S'set whether artist uses clipping .'
p33456
sg12
Vloglog.clip_on
p33457
sg14
(lp33458
sg2
g33452
sbs(S'set_xticklabels'
p33459
g17336
tp33460
g17331
sS'properties'
p33461
(icodemend.demo.code_suggest
Element
p33462
(dp33463
g10
I4
sg11
S'return a dictionary mapping property name - > value for all artist props'
p33464
sg12
Vproperties
p33465
sg14
(lp33466
sg2
g33461
sbsS'start_event_loop_default'
p33467
(icodemend.demo.code_suggest
Element
p33468
(dp33469
g10
I0
sg11
S'start an event loop .'
p33470
sg12
Vstart_event_loop_default
p33471
sg14
(lp33472
g23186
asg2
g33467
sbs(g101
S'c'
g21475
tp33473
g21471
sS'get_dashpad'
p33474
(icodemend.demo.code_suggest
Element
p33475
(dp33476
g10
I0
sg11
S'get the extra spacing between the dash and the text , in canvas units .'
p33477
sg12
Vget_dashpad
p33478
sg14
(lp33479
sg2
g33474
sbsS'set_markersize'
p33480
(icodemend.demo.code_suggest
Element
p33481
(dp33482
g10
I6
sg11
S'set the marker size in points'
p33483
sg12
Vset_markersize
p33484
sg14
(lp33485
sg2
g33480
sbs(S'csd'
p33486
S'markevery'
p33487
tp33488
(icodemend.demo.code_suggest
Element
p33489
(dp33490
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p33491
sg12
Vcsd.markevery
p33492
sg14
(lp33493
sg2
g33487
sbs(g117
g118
g27478
tp33494
g27474
sS'set_family'
p33495
(icodemend.demo.code_suggest
Element
p33496
(dp33497
g10
I0
sg11
S'change the font family . set the font family .'
p33498
sg12
Vset_family
p33499
sg14
(lp33500
sg2
g33495
sbs(S'plot_date'
p33501
g20003
tp33502
g19998
s(g117
g118
g28629
tp33503
g28625
s(S'semilogx'
p33504
S'_interpolation_steps'
p33505
tp33506
(icodemend.demo.code_suggest
Element
p33507
(dp33508
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p33509
sg12
Vsemilogx._interpolation_steps
p33510
sg14
(lp33511
sg2
g33505
sbs(g93
S's'
S"' some string'"
p33512
tp33513
(icodemend.demo.code_suggest
Element
p33514
(dp33515
g10
I1
sg11
S''
sg12
Vannotate.s.' some string'
p33516
sg14
(lp33517
sg2
g33512
sbs(g332
g132
S"'b'"
p33518
tp33519
(icodemend.demo.code_suggest
Element
p33520
(dp33521
g10
I1
sg11
S''
sg12
Vtext.color.'b'
p33522
sg14
(lp33523
sg2
g33518
sbs(g117
S'y'
g29428
tp33524
g29424
s(S'subplot'
p33525
S'axisbg'
p33526
tp33527
(icodemend.demo.code_suggest
Element
p33528
(dp33529
g10
I3
sg11
S'the background color of the subplot , which can be any valid color specifier . see matplotlib.colors for more information .'
p33530
sg12
Vsubplot.axisbg
p33531
sg14
(lp33532
g10379
ag24589
a(icodemend.demo.code_suggest
Element
p33533
(dp33534
g10
I1
sg11
S''
sg12
Vsubplot.axisbg.'k'
p33535
sg14
(lp33536
sg2
S"'k'"
p33537
sbasg2
g33526
sbs(S'hexbin'
p33538
g25903
tp33539
g25898
s(g452
g453
g865
tp33540
g7218
s(g117
S'x'
g29343
tp33541
g29339
s(g452
g453
S'1'
tp33542
g7180
s(g109
g19182
S"'pdf'"
p33543
tp33544
(icodemend.demo.code_suggest
Element
p33545
(dp33546
g10
I13
sg11
S''
sg12
Vsavefig.format.'pdf'
p33547
sg14
(lp33548
sg2
g33543
sbs(g117
S'y'
g29488
tp33549
g29484
s(S'pcolor'
p33550
S'color'
p33551
tp33552
(icodemend.demo.code_suggest
Element
p33553
(dp33554
g10
I0
sg11
S'set both the edgecolor and the facecolor .'
p33555
sg12
Vpcolor.color
p33556
sg14
(lp33557
sg2
g33551
sbsS'plot_day_summary_oclh'
p33558
(icodemend.demo.code_suggest
Element
p33559
(dp33560
g10
I0
sg11
S'plots day summary'
p33561
sg12
Vplot_day_summary_oclh
p33562
sg14
(lp33563
(icodemend.demo.code_suggest
Element
p33564
(dp33565
g10
I0
sg11
S'an axes instance to plot to'
p33566
sg12
Vplot_day_summary_oclh.ax
p33567
sg14
(lp33568
sg2
S'ax'
p33569
sbag19084
a(icodemend.demo.code_suggest
Element
p33570
(dp33571
g10
I0
sg11
S'the color of the lines where close > = open'
p33572
sg12
Vplot_day_summary_oclh.colorup
p33573
sg14
(lp33574
sg2
S'colorup'
p33575
sba(icodemend.demo.code_suggest
Element
p33576
(dp33577
g10
I0
sg11
S'data to plot . time must be in float date format - see date2num'
p33578
sg12
Vplot_day_summary_oclh.quotes
p33579
sg14
(lp33580
sg2
S'quotes'
p33581
sba(icodemend.demo.code_suggest
Element
p33582
(dp33583
g10
I0
sg11
S'open/close tick marker in points'
p33584
sg12
Vplot_day_summary_oclh.ticksize
p33585
sg14
(lp33586
sg2
S'ticksize'
p33587
sbasg2
g33558
sbsS'get_subplotspec_list'
p33588
(icodemend.demo.code_suggest
Element
p33589
(dp33590
g10
I0
sg11
S'return a list of subplotspec from the given list of axes .'
p33591
sg12
Vget_subplotspec_list
p33592
sg14
(lp33593
sg2
g33588
sbs(g1003
S'widths'
p33594
S'1'
tp33595
g31178
s(S'iter_segments'
p33596
S'transform'
p33597
tp33598
(icodemend.demo.code_suggest
Element
p33599
(dp33600
g10
I0
sg11
S'if not none , the given affine transformation will be applied to the path .'
p33601
sg12
Viter_segments.transform
p33602
sg14
(lp33603
sg2
g33597
sbs(g93
g161
S'(y, x)'
p33604
tp33605
(icodemend.demo.code_suggest
Element
p33606
(dp33607
g10
I2
sg11
S''
sg12
Vannotate.xy.(y, x)
p33608
sg14
(lp33609
sg2
g33604
sbs(S'set_sizes'
p33610
S'dpi'
p33611
tp33612
(icodemend.demo.code_suggest
Element
p33613
(dp33614
g10
I0
sg11
S'the dpi of the canvas . defaults to 72.0 .'
p33615
sg12
Vset_sizes.dpi
p33616
sg14
(lp33617
sg2
g33611
sbs(S'psd'
p33618
S'yscale'
p33619
tp33620
(icodemend.demo.code_suggest
Element
p33621
(dp33622
g10
I0
sg11
S'set the scaling of the y-axis'
p33623
sg12
Vpsd.yscale
p33624
sg14
(lp33625
sg2
g33619
sbs(S'cohere'
p33626
S'markevery'
p33627
tp33628
(icodemend.demo.code_suggest
Element
p33629
(dp33630
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p33631
sg12
Vcohere.markevery
p33632
sg14
(lp33633
sg2
g33627
sbs(S'fill'
p33634
S'scalex'
p33635
tp33636
(icodemend.demo.code_suggest
Element
p33637
(dp33638
g10
I0
sg11
S'kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p33639
sg12
Vfill.scalex
p33640
sg14
(lp33641
sg2
g33635
sbs(S'quotes_historical_yahoo_ochl'
p33642
S'date1'
p33643
tp33644
(icodemend.demo.code_suggest
Element
p33645
(dp33646
g10
I0
sg11
S'start date'
p33647
sg12
Vquotes_historical_yahoo_ochl.date1
p33648
sg14
(lp33649
sg2
g33643
sbs(S'text'
p33650
S'readonly'
p33651
tp33652
(icodemend.demo.code_suggest
Element
p33653
(dp33654
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p33655
sg12
Vtext.readonly
p33656
sg14
(lp33657
sg2
g33651
sbs(g16
g945
g13827
tp33658
g13823
sS'toggle_toolitem'
p33659
(icodemend.demo.code_suggest
Element
p33660
(dp33661
g10
I0
sg11
S'toggle the toolitem without firing event'
p33662
sg12
Vtoggle_toolitem
p33663
sg14
(lp33664
(icodemend.demo.code_suggest
Element
p33665
(dp33666
g10
I0
sg11
S'id of the tool to toggle'
p33667
sg12
Vtoggle_toolitem.name
p33668
sg14
(lp33669
sg2
S'name'
p33670
sba(icodemend.demo.code_suggest
Element
p33671
(dp33672
g10
I0
sg11
S'whether to set this tool as toggled or not .'
p33673
sg12
Vtoggle_toolitem.toggled
p33674
sg14
(lp33675
sg2
S'toggled'
p33676
sbasg2
g33659
sbs(S'text'
p33677
S'rotation'
p33678
tp33679
(icodemend.demo.code_suggest
Element
p33680
(dp33681
g10
I35
sg11
S'set the rotation of the text'
p33682
sg12
Vtext.rotation
p33683
sg14
(lp33684
(icodemend.demo.code_suggest
Element
p33685
(dp33686
g10
I14
sg11
S''
sg12
Vtext.rotation.90
p33687
sg14
(lp33688
sg2
S'90'
p33689
sba(icodemend.demo.code_suggest
Element
p33690
(dp33691
g10
I8
sg11
S''
sg12
Vtext.rotation.'vertical'
p33692
sg14
(lp33693
sg2
S"'vertical'"
p33694
sba(icodemend.demo.code_suggest
Element
p33695
(dp33696
g10
I2
sg11
S''
sg12
Vtext.rotation.0
p33697
sg14
(lp33698
sg2
S'0'
sba(icodemend.demo.code_suggest
Element
p33699
(dp33700
g10
I1
sg11
S''
sg12
Vtext.rotation.-15
p33701
sg14
(lp33702
sg2
S'-15'
p33703
sba(icodemend.demo.code_suggest
Element
p33704
(dp33705
g10
I1
sg11
S''
sg12
Vtext.rotation.-45
p33706
sg14
(lp33707
sg2
S'-45'
p33708
sba(icodemend.demo.code_suggest
Element
p33709
(dp33710
g10
I1
sg11
S''
sg12
Vtext.rotation.12
p33711
sg14
(lp33712
sg2
S'12'
p33713
sba(icodemend.demo.code_suggest
Element
p33714
(dp33715
g10
I1
sg11
S''
sg12
Vtext.rotation.15
p33716
sg14
(lp33717
sg2
S'15'
p33718
sbag16561
a(icodemend.demo.code_suggest
Element
p33719
(dp33720
g10
I1
sg11
S''
sg12
Vtext.rotation.rotate_label
p33721
sg14
(lp33722
sg2
S'rotate_label'
p33723
sbag26539
ag22275
a(icodemend.demo.code_suggest
Element
p33724
(dp33725
g10
I1
sg11
S''
sg12
Vtext.rotation.trans_angle
p33726
sg14
(lp33727
sg2
S'trans_angle'
p33728
sbasg2
g33678
sbs(S'add'
p33729
S'hatch'
p33730
tp33731
(icodemend.demo.code_suggest
Element
p33732
(dp33733
g10
I0
sg11
S'set the hatching pattern'
p33734
sg12
Vadd.hatch
p33735
sg14
(lp33736
sg2
g33730
sbs(g117
g118
g27656
tp33737
g27652
s(g117
g4225
S'1'
tp33738
g29748
s(g245
g140
g30024
tp33739
g30020
s(g252
g24217
S'5'
tp33740
g14483
s(S'iter_segments'
p33741
S'clip'
p33742
tp33743
(icodemend.demo.code_suggest
Element
p33744
(dp33745
g10
I0
sg11
S'if not none , must be a four-tuple ( x1 , y1 , x2 , y2 ) defining a rectangle in which to clip the path .'
p33746
sg12
Viter_segments.clip
p33747
sg14
(lp33748
sg2
g33742
sbs(S'axvline'
p33749
S'contains'
p33750
tp33751
(icodemend.demo.code_suggest
Element
p33752
(dp33753
g10
I0
sg11
S'replace the contains test used by this artist .'
p33754
sg12
Vaxvline.contains
p33755
sg14
(lp33756
sg2
g33750
sbs(g332
g627
g627
tp33757
(icodemend.demo.code_suggest
Element
p33758
(dp33759
g10
I1
sg11
S''
sg12
Vtext.size.size
p33760
sg14
(lp33761
sg2
g627
sbs(S'add'
p33762
S'fill'
p33763
tp33764
(icodemend.demo.code_suggest
Element
p33765
(dp33766
g10
I0
sg11
S'set whether to fill the patch'
p33767
sg12
Vadd.fill
p33768
sg14
(lp33769
sg2
g33763
sbs(S'loglog'
p33770
S'position'
p33771
tp33772
(icodemend.demo.code_suggest
Element
p33773
(dp33774
g10
I0
sg11
S'set the axes position with'
p33775
sg12
Vloglog.position
p33776
sg14
(lp33777
sg2
g33771
sbs(g965
g118
S'2'
tp33778
(icodemend.demo.code_suggest
Element
p33779
(dp33780
g10
I1
sg11
S''
sg12
Vadd_axes.label.2
p33781
sg14
(lp33782
sg2
S'2'
sbs(S'candlestick2_ochl'
p33783
S'colordown'
p33784
tp33785
(icodemend.demo.code_suggest
Element
p33786
(dp33787
g10
I0
sg11
S'the color of the lines where close < open'
p33788
sg12
Vcandlestick2_ochl.colordown
p33789
sg14
(lp33790
sg2
g33784
sbs(g139
g140
g1807
tp33791
g1803
s(S'get_tool_keymap'
p33792
S'name'
p33793
tp33794
(icodemend.demo.code_suggest
Element
p33795
(dp33796
g10
I0
sg11
S'name of the tool'
p33797
sg12
Vget_tool_keymap.name
p33798
sg14
(lp33799
sg2
g33793
sbsS'pcolorfast'
p33800
(icodemend.demo.code_suggest
Element
p33801
(dp33802
g10
I1
sg11
S'pseudocolor plot of a 2-d array'
p33803
sg12
Vpcolorfast
p33804
sg14
(lp33805
(icodemend.demo.code_suggest
Element
p33806
(dp33807
g10
I0
sg11
S'xr , yr specify the ranges of x and y corresponding to the rectangular region bounding c . if :|||then x goes from x0 to x1 as the second index of c goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . all cells are rectangles of the same size . this is the fastest version .'
p33808
sg12
Vpcolorfast.C
p33809
sg14
(lp33810
sg2
S'C'
sba(icodemend.demo.code_suggest
Element
p33811
(dp33812
g10
I0
sg11
S'a matplotlib.colors.colormap instance from cm . if none , use rc settings .|||a matplotlib.colors.normalize instance is used to scale luminance data to 0,1 . if none , defaults to normalize ( )|||the alpha blending value|||vmin and vmax are used in conjunction with norm to normalize luminance data . if either are none , the min and max of the color array c is used . if you pass a norm instance , vmin and vmax will be none .'
p33813
sg12
Vpcolorfast.None
p33814
sg14
(lp33815
sg2
S'None'
p33816
sba(icodemend.demo.code_suggest
Element
p33817
(dp33818
g10
I0
sg11
S'x and y are 2d arrays with shape ( nr + 1 , nc + 1 ) that specify the ( x,y ) coordinates of the corners of the colored quadrilaterals ; the quadrilateral for c[i,j ] has corners at ( x[i,j],y[i,j ] ) , ( x[i,j+1],y[i,j+1 ] ) , ( x[i+1,j],y[i+1,j ] ) , ( x[i+1,j+1],y[i+1,j+1 ] ) . the cells need not be rectangular . this is the most general , but the slowest to render . it may produce faster and more compact output using ps , pdf , and svg backends , however .'
p33819
sg12
Vpcolorfast.X
p33820
sg14
(lp33821
sg2
S'X'
sba(icodemend.demo.code_suggest
Element
p33822
(dp33823
g10
I0
sg11
S'x and y are 2d arrays with shape ( nr + 1 , nc + 1 ) that specify the ( x,y ) coordinates of the corners of the colored quadrilaterals ; the quadrilateral for c[i,j ] has corners at ( x[i,j],y[i,j ] ) , ( x[i,j+1],y[i,j+1 ] ) , ( x[i+1,j],y[i+1,j ] ) , ( x[i+1,j+1],y[i+1,j+1 ] ) . the cells need not be rectangular . this is the most general , but the slowest to render . it may produce faster and more compact output using ps , pdf , and svg backends , however .'
p33824
sg12
Vpcolorfast.Y
p33825
sg14
(lp33826
sg2
S'Y'
sba(icodemend.demo.code_suggest
Element
p33827
(dp33828
g10
I0
sg11
S'the alpha blending value'
p33829
sg12
Vpcolorfast.alpha
p33830
sg14
(lp33831
sg2
S'alpha'
p33832
sba(icodemend.demo.code_suggest
Element
p33833
(dp33834
g10
I0
sg11
S'a matplotlib.colors.colormap instance from cm . if none , use rc settings .'
p33835
sg12
Vpcolorfast.cmap
p33836
sg14
(lp33837
sg2
S'cmap'
p33838
sba(icodemend.demo.code_suggest
Element
p33839
(dp33840
g10
I0
sg11
S'then x goes from x0 to x1 as the second index of c goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . all cells are rectangles of the same size . this is the fastest version .|||x , y are 1d arrays of length nc + 1 and nr + 1 , respectively , giving the x and y boundaries of the cells . hence the cells are rectangular but the grid may be nonuniform . the speed is intermediate . ( the grid is checked , and if found to be uniform the fast version is used . )|||x and y are 2d arrays with shape ( nr + 1 , nc + 1 ) that specify the ( x,y ) coordinates of the corners of the colored quadrilaterals ; the quadrilateral for c[i,j ] has corners at ( x[i,j],y[i,j ] ) , ( x[i,j+1],y[i,j+1 ] ) , ( x[i+1,j],y[i+1,j ] ) , ( x[i+1,j+1],y[i+1,j+1 ] ) . the cells need not be rectangular . this is the most general , but the slowest to render . it may produce faster and more compact output using ps , pdf , and svg backends , however .'
p33841
sg12
Vpcolorfast.nc
p33842
sg14
(lp33843
sg2
S'nc'
p33844
sba(icodemend.demo.code_suggest
Element
p33845
(dp33846
g10
I0
sg11
S'a matplotlib.colors.normalize instance is used to scale luminance data to 0,1 . if none , defaults to normalize ( )'
p33847
sg12
Vpcolorfast.norm
p33848
sg14
(lp33849
sg2
S'norm'
p33850
sbag8879
ag27299
a(icodemend.demo.code_suggest
Element
p33851
(dp33852
g10
I0
sg11
S'vmin and vmax are used in conjunction with norm to normalize luminance data . if either are none , the min and max of the color array c is used . if you pass a norm instance , vmin and vmax will be none .'
p33853
sg12
Vpcolorfast.vmin
p33854
sg14
(lp33855
sg2
S'vmin'
p33856
sbag5067
ag25150
ag22289
a(icodemend.demo.code_suggest
Element
p33857
(dp33858
g10
I0
sg11
S'xr , yr specify the ranges of x and y corresponding to the rectangular region bounding c . if :'
p33859
sg12
Vpcolorfast.xr
p33860
sg14
(lp33861
sg2
S'xr'
p33862
sbag20407
a(icodemend.demo.code_suggest
Element
p33863
(dp33864
g10
I0
sg11
S'then x goes from x0 to x1 as the second index of c goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . all cells are rectangles of the same size . this is the fastest version .'
p33865
sg12
Vpcolorfast.y0
p33866
sg14
(lp33867
sg2
S'y0'
p33868
sba(icodemend.demo.code_suggest
Element
p33869
(dp33870
g10
I0
sg11
S'then x goes from x0 to x1 as the second index of c goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . all cells are rectangles of the same size . this is the fastest version .'
p33871
sg12
Vpcolorfast.y1
p33872
sg14
(lp33873
sg2
S'y1'
p33874
sbag25664
asg2
g33800
sbs(S'axvspan'
p33875
S'label'
p33876
tp33877
(icodemend.demo.code_suggest
Element
p33878
(dp33879
g10
I0
sg11
S'set the label to s for auto legend .'
p33880
sg12
Vaxvspan.label
p33881
sg14
(lp33882
sg2
g33876
sbsS'value_escape'
p33883
(icodemend.demo.code_suggest
Element
p33884
(dp33885
g10
I0
sg11
S'sub(repl , string [ , count = 0 ] ) - - > newstring return the string obtained by replacing the leftmost non-overlapping occurrences of pattern in string by the replacement repl .'
p33886
sg12
Vvalue_escape
p33887
sg14
(lp33888
sg2
g33883
sbsS'stop_event_loop'
p33889
(icodemend.demo.code_suggest
Element
p33890
(dp33891
g10
I1
sg11
S'stop an event loop .'
p33892
sg12
Vstop_event_loop
p33893
sg14
(lp33894
sg2
g33889
sbs(S'hist'
p33895
S'weights'
p33896
tp33897
(icodemend.demo.code_suggest
Element
p33898
(dp33899
g10
I18
sg11
S'an array of weights , of the same shape as x. each value in x only contributes its associated weight towards the bin count ( instead of 1 ) . if normed is true , the weights are normalized , so that the integral of the density over the range remains 1 .'
p33900
sg12
Vhist.weights
p33901
sg14
(lp33902
(icodemend.demo.code_suggest
Element
p33903
(dp33904
g10
I6
sg11
S''
sg12
Vhist.weights.weights
p33905
sg14
(lp33906
sg2
g32850
sbag32853
a(icodemend.demo.code_suggest
Element
p33907
(dp33908
g10
I1
sg11
S''
sg12
Vhist.weights.[w0, w1, w2]
p33909
sg14
(lp33910
sg2
S'[w0, w1, w2]'
p33911
sba(icodemend.demo.code_suggest
Element
p33912
(dp33913
g10
I1
sg11
S''
sg12
Vhist.weights.b
p33914
sg14
(lp33915
sg2
S'b'
sba(icodemend.demo.code_suggest
Element
p33916
(dp33917
g10
I1
sg11
S''
sg12
Vhist.weights.weight
p33918
sg14
(lp33919
sg2
S'weight'
p33920
sba(icodemend.demo.code_suggest
Element
p33921
(dp33922
g10
I1
sg11
S''
sg12
Vhist.weights.wghts
p33923
sg14
(lp33924
sg2
S'wghts'
p33925
sbasg2
g33896
sbs(g4371
g7032
g17499
tp33926
g17495
s(S'hexbin'
p33927
g25813
tp33928
g25808
sS'rk4'
p33929
(icodemend.demo.code_suggest
Element
p33930
(dp33931
g10
I0
sg11
S'integrate 1d or nd system of odes using 4-th order runge-kutta .'
p33932
sg12
Vrk4
p33933
sg14
(lp33934
sg2
g33929
sbs(S'plot'
p33935
g29934
tp33936
g29929
s(S'angle_spectrum'
p33937
g18936
tp33938
g18931
s(S'angle_spectrum'
p33939
g18882
tp33940
g18877
s(S'get'
p33941
S'y'
tp33942
(icodemend.demo.code_suggest
Element
p33943
(dp33944
g10
I0
sg11
S'set the y position of the text'
p33945
sg12
Vget.y
p33946
sg14
(lp33947
sg2
S'y'
sbs(g2814
g118
S"'Laden'"
p33948
tp33949
(icodemend.demo.code_suggest
Element
p33950
(dp33951
g10
I1
sg11
S''
sg12
Vadd.label.'Laden'
p33952
sg14
(lp33953
sg2
g33948
sbs(S'hexbin'
p33954
g25879
tp33955
g25874
sS'apply_aspect'
p33956
(icodemend.demo.code_suggest
Element
p33957
(dp33958
g10
I2
sg11
S'use _ aspect ( ) and _ adjustable ( ) to modify the axes box or the view limits .'
p33959
sg12
Vapply_aspect
p33960
sg14
(lp33961
sg2
g33956
sbs(g6146
g8210
g3066
tp33962
g3062
s(S'annotate'
p33963
S'label'
p33964
tp33965
(icodemend.demo.code_suggest
Element
p33966
(dp33967
g10
I0
sg11
S'set the label to s for auto legend .'
p33968
sg12
Vannotate.label
p33969
sg14
(lp33970
sg2
g33964
sbs(g117
g118
g27551
tp33971
g27547
s(g5562
g325
g10835
tp33972
g10831
s(S'semilogx'
p33973
S'vertices'
p33974
tp33975
(icodemend.demo.code_suggest
Element
p33976
(dp33977
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p33978
sg12
Vsemilogx.vertices
p33979
sg14
(lp33980
sg2
g33974
sbs(S'pcolormesh'
p33981
S'cursor_props'
p33982
tp33983
(icodemend.demo.code_suggest
Element
p33984
(dp33985
g10
I0
sg11
S'set the cursor property as'
p33986
sg12
Vpcolormesh.cursor_props
p33987
sg14
(lp33988
sg2
g33982
sbs(g139
g18399
g2019
tp33989
g2015
sS'shrink'
p33990
(icodemend.demo.code_suggest
Element
p33991
(dp33992
g10
I0
sg11
S'shrinks one level smaller .'
p33993
sg12
Vshrink
p33994
sg14
(lp33995
sg2
g33990
sbs(S'quotes_historical_yahoo_ochl'
p33996
S'cachename'
p33997
tp33998
(icodemend.demo.code_suggest
Element
p33999
(dp34000
g10
I0
sg11
S'is the name of the local file cache . if none , will default to the md5 hash or the url ( which incorporates the ticker and date range )'
p34001
sg12
Vquotes_historical_yahoo_ochl.cachename
p34002
sg14
(lp34003
sg2
g33997
sbsS'onHilite'
p34004
(icodemend.demo.code_suggest
Element
p34005
(dp34006
g10
I0
sg11
S'mouse event processor which highlights the artists under the cursor .'
p34007
sg12
VonHilite
p34008
sg14
(lp34009
sg2
g34004
sbsS'update'
p34010
(icodemend.demo.code_suggest
Element
p34011
(dp34012
g10
I89
sg11
S'update the properties of this artist from the dictionary prop .'
p34013
sg12
Vupdate
p34014
sg14
(lp34015
g24915
a(icodemend.demo.code_suggest
Element
p34016
(dp34017
g10
I0
sg11
S'set the label to s for auto legend .'
p34018
sg12
Vupdate.label
p34019
sg14
(lp34020
sg2
S'label'
p34021
sbag5695
a(icodemend.demo.code_suggest
Element
p34022
(dp34023
g10
I0
sg11
S'update the properties of this artist from the dictionary prop .'
p34024
sg12
Vupdate.prop
p34025
sg14
(lp34026
sg2
S'prop'
p34027
sba(icodemend.demo.code_suggest
Element
p34028
(dp34029
g10
I0
sg11
S'sets the sketch parameters .'
p34030
sg12
Vupdate.sketch_params
p34031
sg14
(lp34032
sg2
S'sketch_params'
p34033
sbasg2
g34010
sbs(g6632
g4225
S'[0.01, 0.01, 0.98, 0.98]'
p34034
tp34035
(icodemend.demo.code_suggest
Element
p34036
(dp34037
g10
I1
sg11
S''
sg12
Vadd_subplot.position.[0/01, 0/01, 0/98, 0/98]
p34038
sg14
(lp34039
sg2
g34034
sbs(S'table'
p34040
S'yscale'
p34041
tp34042
(icodemend.demo.code_suggest
Element
p34043
(dp34044
g10
I0
sg11
S'set the scaling of the y-axis'
p34045
sg12
Vtable.yscale
p34046
sg14
(lp34047
sg2
g34041
sbs(g101
g102
g865
tp34048
g21902
s(S'pcolor'
p34049
S'axes'
p34050
tp34051
(icodemend.demo.code_suggest
Element
p34052
(dp34053
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p34054
sg12
Vpcolor.axes
p34055
sg14
(lp34056
sg2
g34050
sbs(g324
g785
g9392
tp34057
g9388
s(g109
S'papertype'
p34058
g865
tp34059
(icodemend.demo.code_suggest
Element
p34060
(dp34061
g10
I1
sg11
S''
sg12
Vsavefig.papertype.None
p34062
sg14
(lp34063
sg2
g865
sbs(g4371
g7032
g17549
tp34064
g17545
s(g117
g132
g7032
tp34065
g28732
s(S'set_xticklabels'
p34066
g17318
tp34067
g17313
s(S'colorbar'
p34068
g12037
tp34069
g12017
s(S'step'
p34070
S'y'
tp34071
(icodemend.demo.code_suggest
Element
p34072
(dp34073
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||x and y must be 1-d sequences , and it is assumed , but not checked , that x is uniformly increasing .'
p34074
sg12
Vstep.y
p34075
sg14
(lp34076
sg2
S'y'
sbs(S'loglog'
p34077
S'color_cycle'
p34078
tp34079
(icodemend.demo.code_suggest
Element
p34080
(dp34081
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p34082
sg12
Vloglog.color_cycle
p34083
sg14
(lp34084
sg2
g34078
sbs(S'axvline'
p34085
S'rasterized'
p34086
tp34087
(icodemend.demo.code_suggest
Element
p34088
(dp34089
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p34090
sg12
Vaxvline.rasterized
p34091
sg14
(lp34092
sg2
g34086
sbs(S'broken_barh'
p34093
S'axes'
p34094
tp34095
(icodemend.demo.code_suggest
Element
p34096
(dp34097
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p34098
sg12
Vbroken_barh.axes
p34099
sg14
(lp34100
sg2
g34094
sbs(S'loglog'
p34101
S'axes'
p34102
tp34103
(icodemend.demo.code_suggest
Element
p34104
(dp34105
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p34106
sg12
Vloglog.axes
p34107
sg14
(lp34108
sg2
g34102
sbs(S'clim'
p34109
S'vmax'
p34110
tp34111
(icodemend.demo.code_suggest
Element
p34112
(dp34113
g10
I0
sg11
S'if either vmin or vmax is none , the image min/max respectively will be used for color scaling .'
p34114
sg12
Vclim.vmax
p34115
sg14
(lp34116
sg2
g34110
sbs(S'broken_barh'
p34117
S'color_cycle'
p34118
tp34119
(icodemend.demo.code_suggest
Element
p34120
(dp34121
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p34122
sg12
Vbroken_barh.color_cycle
p34123
sg14
(lp34124
sg2
g34118
sbs(S'psd'
p34125
S'solid_joinstyle'
p34126
tp34127
(icodemend.demo.code_suggest
Element
p34128
(dp34129
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p34130
sg12
Vpsd.solid_joinstyle
p34131
sg14
(lp34132
sg2
g34126
sbs(S'semilogy'
p34133
S'markeredgecolor'
p34134
tp34135
(icodemend.demo.code_suggest
Element
p34136
(dp34137
g10
I0
sg11
S'set the marker edge color'
p34138
sg12
Vsemilogy.markeredgecolor
p34139
sg14
(lp34140
sg2
g34134
sbs(g1170
g118
S"'1'"
p34141
tp34142
(icodemend.demo.code_suggest
Element
p34143
(dp34144
g10
I1
sg11
S''
sg12
Vhist.label.'1'
p34145
sg14
(lp34146
sg2
g34141
sbsS'get_str_bbox_and_descent'
p34147
(icodemend.demo.code_suggest
Element
p34148
(dp34149
g10
I0
sg11
S'return the string bounding box'
p34150
sg12
Vget_str_bbox_and_descent
p34151
sg14
(lp34152
sg2
g34147
sbs(S'spy'
p34153
S'precision'
p34154
g32455
tp34155
g32451
sS'colorbar_factory'
p34156
(icodemend.demo.code_suggest
Element
p34157
(dp34158
g10
I0
sg11
S'creates a colorbar on the given axes for the given mappable .'
p34159
sg12
Vcolorbar_factory
p34160
sg14
(lp34161
sg2
g34156
sbs(S'magnitude_spectrum'
p34162
S'vertices'
p34163
tp34164
(icodemend.demo.code_suggest
Element
p34165
(dp34166
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p34167
sg12
Vmagnitude_spectrum.vertices
p34168
sg14
(lp34169
sg2
g34163
sbs(S'register_cmap'
p34170
g325
g9227
tp34171
g33119
s(S'figtext'
p34172
g11353
tp34173
g11348
s(S'axhline'
p34174
g3747
tp34175
g3742
s(S'set_yticklabels'
p34176
g18058
tp34177
g18053
s(S'arrow'
p34178
g2766
tp34179
g2761
s(g139
g140
g1672
tp34180
g1668
s(S'pcolor'
p34181
S'animated'
p34182
tp34183
(icodemend.demo.code_suggest
Element
p34184
(dp34185
g10
I0
sg11
S"set the artist 's animation state ."
p34186
sg12
Vpcolor.animated
p34187
sg14
(lp34188
sg2
g34182
sbs(g332
g13486
g17382
tp34189
g17378
s(S'quiver'
p34190
g31003
tp34191
g30998
s(g332
g132
S"'w'"
p34192
tp34193
(icodemend.demo.code_suggest
Element
p34194
(dp34195
g10
I2
sg11
S''
sg12
Vtext.color.'w'
p34196
sg14
(lp34197
sg2
g34192
sbs(S'axis_date'
p34198
g15253
tp34199
g15248
s(g252
g1010
g13943
tp34200
g13939
s(g26208
g11725
g1944
tp34201
g32324
s(S'plot_date'
p34202
g19799
tp34203
g19794
s(g117
g132
S'c'
tp34204
g28718
s(g2250
g909
S'2'
tp34205
g15663
sS'set_cursor_props'
p34206
(icodemend.demo.code_suggest
Element
p34207
(dp34208
g10
I0
sg11
S'set the cursor property as'
p34209
sg12
Vset_cursor_props
p34210
sg14
(lp34211
(icodemend.demo.code_suggest
Element
p34212
(dp34213
g10
I0
sg11
S'accepts : a ( float , color ) tuple'
p34214
sg12
Vset_cursor_props.color
p34215
sg14
(lp34216
sg2
S'color'
p34217
sba(icodemend.demo.code_suggest
Element
p34218
(dp34219
g10
I0
sg11
S'accepts : a ( float , color ) tuple'
p34220
sg12
Vset_cursor_props.float
p34221
sg14
(lp34222
sg2
S'float'
p34223
sbasg2
g34206
sbs(g245
g140
g30208
tp34224
g30204
s(g101
g118
g21970
tp34225
g21966
s(g5975
g2251
g6797
tp34226
g6793
s(S'barh'
p34227
S'zorder'
p34228
tp34229
(icodemend.demo.code_suggest
Element
p34230
(dp34231
g10
I2
sg11
S'set the zorder for the artist .'
p34232
sg12
Vbarh.zorder
p34233
sg14
(lp34234
g8012
asg2
g34228
sbsS'boxplot_stats'
p34235
(icodemend.demo.code_suggest
Element
p34236
(dp34237
g10
I1
sg11
S'returns list of dictionaries of staticists to be use to draw a series of box and whisker plots .'
p34238
sg12
Vboxplot_stats
p34239
sg14
(lp34240
g22296
ag12582
ag14820
a(icodemend.demo.code_suggest
Element
p34241
(dp34242
g10
I0
sg11
S"as a float , determines the reach of the whiskers past the first and third quartiles ( e.g. , q3 + whis*iqr , qr = interquartile range , q3-q1 ) . beyond the whiskers , data are considered outliers and are plotted as individual points . set this to an unreasonably high value to force the whiskers to show the min and max data . alternatively , set this to an ascending sequence of percentile ( e.g. , [ 5 , 95 ] ) to set the whiskers at specific percentiles of the data . finally , can whis be the string ' range ' to force the whiskers to the min and max of the data . in the edge case that the 25th and 75th percentiles are equivalent , whis will be automatically set to ' range '"
p34243
sg12
Vboxplot_stats.whis
p34244
sg14
(lp34245
sg2
S'whis'
p34246
sbasg2
g34235
sbs(S'arrow'
p34247
g2551
tp34248
g2546
s(S'hexbin'
p34249
S'C'
tp34250
g25688
s(g421
g421
g1944
tp34251
(icodemend.demo.code_suggest
Element
p34252
(dp34253
g10
I2
sg11
S''
sg12
Vfill.fill.False
p34254
sg14
(lp34255
sg2
g1944
sbs(g324
g785
g9462
tp34256
g9458
s(S'refine_field'
p34257
S'subdiv'
p34258
tp34259
(icodemend.demo.code_suggest
Element
p34260
(dp34261
g10
I8
sg11
S'recursion level for the subdivision . defaults to 3 . each triangle will be divided into 4**subdiv child triangles .'
p34262
sg12
Vrefine_field.subdiv
p34263
sg14
(lp34264
g16249
ag10761
asg2
g34258
sbs(g117
g118
g28604
tp34265
g28600
s(S'axvline'
p34266
S'sketch_params'
p34267
tp34268
(icodemend.demo.code_suggest
Element
p34269
(dp34270
g10
I0
sg11
S'sets the sketch parameters .'
p34271
sg12
Vaxvline.sketch_params
p34272
sg14
(lp34273
sg2
g34267
sbs(g93
g161
S'(0.3, 0.3)'
p34274
tp34275
(icodemend.demo.code_suggest
Element
p34276
(dp34277
g10
I2
sg11
S''
sg12
Vannotate.xy.(0/3, 0/3)
p34278
sg14
(lp34279
sg2
g34274
sbs(S'semilogy'
p34280
S'title'
p34281
tp34282
(icodemend.demo.code_suggest
Element
p34283
(dp34284
g10
I0
sg11
S'set a title for the axes .'
p34285
sg12
Vsemilogy.title
p34286
sg14
(lp34287
sg2
g34281
sbs(S'set_cmap'
p34288
S'cmap'
p34289
tp34290
(icodemend.demo.code_suggest
Element
p34291
(dp34292
g10
I0
sg11
S'cmap must be a colormap instance , or the name of a registered colormap .'
p34293
sg12
Vset_cmap.cmap
p34294
sg14
(lp34295
sg2
g34289
sbs(g8547
g7032
S'fbcolor'
p34296
tp34297
(icodemend.demo.code_suggest
Element
p34298
(dp34299
g10
I1
sg11
S''
sg12
Vpie.colors.fbcolor
p34300
sg14
(lp34301
sg2
g34296
sbs(S'loglog'
p34302
S'ymargin'
p34303
tp34304
(icodemend.demo.code_suggest
Element
p34305
(dp34306
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p34307
sg12
Vloglog.ymargin
p34308
sg14
(lp34309
sg2
g34303
sbs(g324
g325
g9059
tp34310
g9055
s(S'eventplot'
p34311
g23589
tp34312
g23584
s(g125
S'x'
S'0.2'
p34313
tp34314
(icodemend.demo.code_suggest
Element
p34315
(dp34316
g10
I1
sg11
S''
sg12
Vaxvline.x.0/2
p34317
sg14
(lp34318
sg2
g34313
sbs(g117
g118
g27969
tp34319
g27965
sS'nonsingular'
p34320
(icodemend.demo.code_suggest
Element
p34321
(dp34322
g10
I3
sg11
S'given the proposed upper and lower extent , adjust the range if it is too close to being singular ( i.e. a range of ~ 0 ) .'
p34323
sg12
Vnonsingular
p34324
sg14
(lp34325
sg2
g34320
sbs(g582
g132
g3321
tp34326
g3317
s(g5424
g102
S'0.4'
p34327
tp34328
(icodemend.demo.code_suggest
Element
p34329
(dp34330
g10
I3
sg11
S''
sg12
Vgrid.alpha.0/4
p34331
sg14
(lp34332
sg2
g34327
sbs(S'getp'
p34333
S'xticklabels'
p34334
tp34335
(icodemend.demo.code_suggest
Element
p34336
(dp34337
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p34338
sg12
Vgetp.xticklabels
p34339
sg14
(lp34340
sg2
g34334
sbs(S'set_xticklabels'
p34341
g16990
tp34342
g16931
s(g117
S'dashes'
p34343
g29714
tp34344
g29710
s(g117
g118
g28653
tp34345
g28649
sS'set_active'
p34346
(icodemend.demo.code_suggest
Element
p34347
(dp34348
g10
I4
sg11
S'trigger which radio button to make active . directly ( de)activate a check button by index . set whether the widget is active .'
p34349
sg12
Vset_active
p34350
sg14
(lp34351
sg2
g34346
sbs(g117
g4340
g29569
tp34352
g29565
s(g93
g4800
g25444
tp34353
g25440
s(g7484
S'marginals'
p34354
g438
tp34355
g25781
s(g117
g118
g28634
tp34356
g28630
s(S'angle_spectrum'
p34357
g18930
tp34358
g18925
s(g4998
g5025
S'3'
tp34359
(icodemend.demo.code_suggest
Element
p34360
(dp34361
g10
I1
sg11
S''
sg12
Vpcolormesh.vmax.3
p34362
sg14
(lp34363
sg2
S'3'
sbs(S'broken_barh'
p34364
S'position'
p34365
tp34366
(icodemend.demo.code_suggest
Element
p34367
(dp34368
g10
I0
sg11
S'set the axes position with'
p34369
sg12
Vbroken_barh.position
p34370
sg14
(lp34371
sg2
g34365
sbs(S'grid'
p34372
S'ymargin'
p34373
tp34374
(icodemend.demo.code_suggest
Element
p34375
(dp34376
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p34377
sg12
Vgrid.ymargin
p34378
sg14
(lp34379
sg2
g34373
sbs(g2250
g132
g30752
tp34380
g30748
s(S'to_rgb'
p34381
S'A'
tp34382
g20123
s(S'rgrids'
p34383
S'position'
p34384
tp34385
(icodemend.demo.code_suggest
Element
p34386
(dp34387
g10
I0
sg11
S'set the ( x , y ) position of the text'
p34388
sg12
Vrgrids.position
p34389
sg14
(lp34390
sg2
g34384
sbs(g514
g5025
S'1'
tp34391
g10551
sS'scroll_event'
p34392
(icodemend.demo.code_suggest
Element
p34393
(dp34394
g10
I0
sg11
S'backend derived classes should call this function on any scroll wheel event .'
p34395
sg12
Vscroll_event
p34396
sg14
(lp34397
sg2
g34392
sbsS'delete_masked_points'
p34398
(icodemend.demo.code_suggest
Element
p34399
(dp34400
g10
I0
sg11
S'find all masked and/or non-finite points in a set of arguments , and return the arguments with only the unmasked points remaining .'
p34401
sg12
Vdelete_masked_points
p34402
sg14
(lp34403
sg2
g34398
sbsS'popall'
p34404
(icodemend.demo.code_suggest
Element
p34405
(dp34406
g10
I0
sg11
S'empty a list'
p34407
sg12
Vpopall
p34408
sg14
(lp34409
sg2
g34404
sbs(S'plot_date'
p34410
g19805
tp34411
g19800
s(g2250
g132
g30767
tp34412
g30763
s(g101
S'c'
S'y'
tp34413
g21323
s(g7484
S'C'
S'w'
tp34414
g25705
s(g117
g2251
g29140
tp34415
g29136
s(g117
g118
g28149
tp34416
g28145
sS'get_spine_transform'
p34417
(icodemend.demo.code_suggest
Element
p34418
(dp34419
g10
I0
sg11
S'get the spine transform'
p34420
sg12
Vget_spine_transform
p34421
sg14
(lp34422
sg2
g34417
sbs(S'axvline'
p34423
S'xlabel'
p34424
tp34425
(icodemend.demo.code_suggest
Element
p34426
(dp34427
g10
I0
sg11
S'set the label for the xaxis .'
p34428
sg12
Vaxvline.xlabel
p34429
sg14
(lp34430
sg2
g34424
sbs(S'arrow'
p34431
g2575
tp34432
g2570
s(g109
g3075
g3075
tp34433
(icodemend.demo.code_suggest
Element
p34434
(dp34435
g10
I9
sg11
S''
sg12
Vsavefig.dpi.dpi
p34436
sg14
(lp34437
sg2
g3075
sbs(g93
g627
S'3'
tp34438
(icodemend.demo.code_suggest
Element
p34439
(dp34440
g10
I2
sg11
S''
sg12
Vannotate.size.3
p34441
sg14
(lp34442
sg2
S'3'
sbsS'set_weight'
p34443
(icodemend.demo.code_suggest
Element
p34444
(dp34445
g10
I1
sg11
S'set the font weight .'
p34446
sg12
Vset_weight
p34447
sg14
(lp34448
sg2
g34443
sbs(S'get_kern'
p34449
S'fontclassX'
p34450
tp34451
(icodemend.demo.code_suggest
Element
p34452
(dp34453
g10
I0
sg11
S'fontclassx : todo'
p34454
sg12
Vget_kern.fontclassX
p34455
sg14
(lp34456
sg2
g34450
sbs(S'refine_field'
p34457
S'refi_z'
p34458
tp34459
(icodemend.demo.code_suggest
Element
p34460
(dp34461
g10
I0
sg11
S'returns refi_tri ( refined triangulation ) , refi_z ( interpolated values of the field at the node of the refined triangulation ) .'
p34462
sg12
Vrefine_field.refi_z
p34463
sg14
(lp34464
sg2
g34458
sbs(S'plot'
p34465
g29585
tp34466
g29555
s(S'table'
p34467
S'url'
p34468
tp34469
(icodemend.demo.code_suggest
Element
p34470
(dp34471
g10
I0
sg11
S'sets the url for the artist'
p34472
sg12
Vtable.url
p34473
sg14
(lp34474
sg2
g34468
sbs(S'add_axes'
p34475
S'prop_cycle'
p34476
tp34477
(icodemend.demo.code_suggest
Element
p34478
(dp34479
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p34480
sg12
Vadd_axes.prop_cycle
p34481
sg14
(lp34482
sg2
g34476
sbs(g101
g4274
g21637
tp34483
g21633
s(S'gradient'
p34484
S'x, y'
p34485
tp34486
(icodemend.demo.code_suggest
Element
p34487
(dp34488
g10
I0
sg11
S'x and y coordinates of the same shape and any number of dimensions .'
p34489
sg12
Vgradient.x, y
p34490
sg14
(lp34491
sg2
g34485
sbsS'get_weight'
p34492
(icodemend.demo.code_suggest
Element
p34493
(dp34494
g10
I0
sg11
S"return the font weight , e.g. , ' bold ' or ' roman ' get the font weight as string or number set the font weight ."
p34495
sg12
Vget_weight
p34496
sg14
(lp34497
sg2
g34492
sbs(g2814
g10936
S'[1.0, (-0.3), (-0.1), (-0.1), (-0.5)]'
p34498
tp34499
(icodemend.demo.code_suggest
Element
p34500
(dp34501
g10
I1
sg11
S''
sg12
Vadd.flows.[1/0, (-0/3), (-0/1), (-0/1), (-0/5)]
p34502
sg14
(lp34503
sg2
g34498
sbs(S'axhspan'
p34504
g24334
tp34505
g24329
s(S'quotes_historical_yahoo_ochl'
p34506
S'ticker'
p34507
tp34508
(icodemend.demo.code_suggest
Element
p34509
(dp34510
g10
I0
sg11
S'stock ticker'
p34511
sg12
Vquotes_historical_yahoo_ochl.ticker
p34512
sg14
(lp34513
sg2
g34507
sbs(g117
g34343
g29719
tp34514
g29715
s(S'errorbar'
p34515
S'readonly'
p34516
tp34517
(icodemend.demo.code_suggest
Element
p34518
(dp34519
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p34520
sg12
Verrorbar.readonly
p34521
sg14
(lp34522
sg2
g34516
sbs(g421
g132
g1234
tp34523
g1230
s(S'pcolor'
p34524
S'yticklabels'
p34525
tp34526
(icodemend.demo.code_suggest
Element
p34527
(dp34528
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p34529
sg12
Vpcolor.yticklabels
p34530
sg14
(lp34531
sg2
g34525
sbs(g93
g161
S'(0.1, 0.8)'
p34532
tp34533
(icodemend.demo.code_suggest
Element
p34534
(dp34535
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/1, 0/8)
p34536
sg14
(lp34537
sg2
g34532
sbs(S'getpoints'
p34538
S'x2'
p34539
tp34540
(icodemend.demo.code_suggest
Element
p34541
(dp34542
g10
I0
sg11
S'for line segment defined by ( x1 , y1 ) and ( x2 , y2 ) return the points on the line that is perpendicular to the line and intersects ( x2 , y2 ) and the distance from ( x2 , y2 ) of the returned points is k .'
p34543
sg12
Vgetpoints.x2
p34544
sg14
(lp34545
sg2
g34539
sbs(S'hexbin'
p34546
g25933
tp34547
g25928
s(S'axis'
p34548
S'y'
tp34549
g15123
s(g7484
g325
g865
tp34550
g25719
s(S'shade_rgb'
p34551
S'elevation'
p34552
tp34553
(icodemend.demo.code_suggest
Element
p34554
(dp34555
g10
I0
sg11
S'a 2d array ( or equivalent ) of the height values used to generate a shaded map .'
p34556
sg12
Vshade_rgb.elevation
p34557
sg14
(lp34558
sg2
g34552
sbs(S'getpoints'
p34559
S'y2'
p34560
tp34561
(icodemend.demo.code_suggest
Element
p34562
(dp34563
g10
I0
sg11
S'for line segment defined by ( x1 , y1 ) and ( x2 , y2 ) return the points on the line that is perpendicular to the line and intersects ( x2 , y2 ) and the distance from ( x2 , y2 ) of the returned points is k .'
p34564
sg12
Vgetpoints.y2
p34565
sg14
(lp34566
sg2
g34560
sbs(S'plot_date'
p34567
g19901
tp34568
g19896
sS'spy'
p34569
(icodemend.demo.code_suggest
Element
p34570
(dp34571
g10
I5
sg11
S'plot the sparsity pattern on a 2-d array .'
p34572
sg12
Vspy
p34573
sg14
(lp34574
g32446
a(icodemend.demo.code_suggest
Element
p34575
(dp34576
g10
I0
sg11
S'the array to be plotted .|||spy(z ) plots the sparsity pattern of the 2-d array z .'
p34577
sg12
Vspy.Z
p34578
sg14
(lp34579
sg2
S'Z'
sba(icodemend.demo.code_suggest
Element
p34580
(dp34581
g10
I0
sg11
S"if ' equal ' , and extent is none , changes the axes aspect ratio to match that of the image . if extent is not none , the axes aspect ratio is changed to match that of the extent ."
p34582
sg12
Vspy.aspect
p34583
sg14
(lp34584
sg2
S'aspect'
p34585
sba(icodemend.demo.code_suggest
Element
p34586
(dp34587
g10
I0
sg11
S'place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes .'
p34588
sg12
Vspy.origin
p34589
sg14
(lp34590
sg2
S'origin'
p34591
sbasg2
g34569
sbs(S'axhspan'
p34592
g24430
tp34593
g24425
s(S'psd'
p34594
S'noverlap'
p34595
tp34596
(icodemend.demo.code_suggest
Element
p34597
(dp34598
g10
I0
sg11
S"the power spectral density by welch 's average periodogram method . the vector x is divided into nfft length segments . each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . the of each segment are averaged to compute , with a scaling to correct for power loss due to windowing ."
p34599
sg12
Vpsd.noverlap
p34600
sg14
(lp34601
sg2
g34595
sbsS'set_closed'
p34602
(icodemend.demo.code_suggest
Element
p34603
(dp34604
g10
I0
sg11
S'set if the polygon is closed'
p34605
sg12
Vset_closed
p34606
sg14
(lp34607
g27418
asg2
g34602
sbsS'flush_events'
p34608
(icodemend.demo.code_suggest
Element
p34609
(dp34610
g10
I2
sg11
S'flush the gui events for the figure .'
p34611
sg12
Vflush_events
p34612
sg14
(lp34613
sg2
g34608
sbs(S'magnitude_spectrum'
p34614
S'aspect'
p34615
tp34616
(icodemend.demo.code_suggest
Element
p34617
(dp34618
g10
I0
sg11
S'aspect'
p34619
sg12
Vmagnitude_spectrum.aspect
p34620
sg14
(lp34621
sg2
g34615
sbs(S'hexbin'
p34622
g25957
tp34623
g25952
s(S'plot_date'
p34624
g19829
tp34625
g19824
s(g109
g19182
S"u'png'"
p34626
tp34627
(icodemend.demo.code_suggest
Element
p34628
(dp34629
g10
I1
sg11
S''
sg12
Vsavefig.format.u'png'
p34630
sg14
(lp34631
sg2
g34626
sbs(g139
g18399
g1989
tp34632
g1985
s(S'axhline'
p34633
g3481
tp34634
g3472
s(S'pcolor'
p34635
S'closed'
p34636
tp34637
(icodemend.demo.code_suggest
Element
p34638
(dp34639
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p34640
sg12
Vpcolor.closed
p34641
sg14
(lp34642
sg2
g34636
sbs(S'magnitude_spectrum'
p34643
S'position'
p34644
tp34645
(icodemend.demo.code_suggest
Element
p34646
(dp34647
g10
I0
sg11
S'set the axes position with'
p34648
sg12
Vmagnitude_spectrum.position
p34649
sg14
(lp34650
sg2
g34644
sbsS'set_antialiaseds'
p34651
(icodemend.demo.code_suggest
Element
p34652
(dp34653
g10
I0
sg11
S'alias for set_antialiased'
p34654
sg12
Vset_antialiaseds
p34655
sg14
(lp34656
sg2
g34651
sbs(g117
g348
g29523
tp34657
g29519
sS'write'
p34658
(icodemend.demo.code_suggest
Element
p34659
(dp34660
g10
I32
sg11
S'write some data on the stream .'
p34661
sg12
Vwrite
p34662
sg14
(lp34663
sg2
g34658
sbs(g117
g132
g28879
tp34664
g28875
s(g117
g2392
g29081
tp34665
g29077
sS'matplotlib_fname'
p34666
(icodemend.demo.code_suggest
Element
p34667
(dp34668
g10
I1
sg11
S'get the location of the config file .'
p34669
sg12
Vmatplotlib_fname
p34670
sg14
(lp34671
sg2
g34666
sbsS'set_dashpush'
p34672
(icodemend.demo.code_suggest
Element
p34673
(dp34674
g10
I0
sg11
S'set the " push " of the textwithdash , which is the extra spacing between the beginning of the dash and the specified position .'
p34675
sg12
Vset_dashpush
p34676
sg14
(lp34677
sg2
g34672
sbs(g1170
g132
S"'w'"
p34678
tp34679
(icodemend.demo.code_suggest
Element
p34680
(dp34681
g10
I1
sg11
S''
sg12
Vhist.color.'w'
p34682
sg14
(lp34683
sg2
g34678
sbs(g93
g10118
S"'center'"
p34684
tp34685
(icodemend.demo.code_suggest
Element
p34686
(dp34687
g10
I5
sg11
S''
sg12
Vannotate.verticalalignment.'center'
p34688
sg14
(lp34689
sg2
g34684
sbs(S'cohere'
p34690
S'_interpolation_steps'
p34691
tp34692
(icodemend.demo.code_suggest
Element
p34693
(dp34694
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p34695
sg12
Vcohere._interpolation_steps
p34696
sg14
(lp34697
sg2
g34691
sbs(S'tricontourf'
p34698
S'z'
tp34699
g11695
s(S'plot_date'
p34700
g19997
tp34701
g19992
s(S'vector_lengths'
p34702
S'n'
tp34703
(icodemend.demo.code_suggest
Element
p34704
(dp34705
g10
I0
sg11
S'finds the length of a set of vectors in n dimensions . this is like the numpy.norm ( ) function for vectors , but has the ability to work over a particular axis of the supplied array or matrix .'
p34706
sg12
Vvector_lengths.n
p34707
sg14
(lp34708
sg2
S'n'
sbs(S'tripcolor'
p34709
S'cmap'
p34710
tp34711
(icodemend.demo.code_suggest
Element
p34712
(dp34713
g10
I1
sg11
S'set the colormap for luminance data|||a matplotlib.colors.colormap instance . if none , use rc settings . a matplotlib.colors.colormap instance . if none , use rc settings .'
p34714
sg12
Vtripcolor.cmap
p34715
sg14
(lp34716
sg2
g34710
sbs(g245
g140
g30468
tp34717
g30464
s(g1205
g583
g4581
tp34718
g4577
sS'open_group'
p34719
(icodemend.demo.code_suggest
Element
p34720
(dp34721
g10
I1
sg11
S'open a grouping element with label s .'
p34722
sg12
Vopen_group
p34723
sg14
(lp34724
g13319
ag31918
asg2
g34719
sbs(g117
g132
g28919
tp34725
g28915
s(g245
g3075
g3075
tp34726
(icodemend.demo.code_suggest
Element
p34727
(dp34728
g10
I6
sg11
S''
sg12
Vfigure.dpi.dpi
p34729
sg14
(lp34730
sg2
g3075
sbs(g117
g132
g28869
tp34731
g28865
s(S'pcolor'
p34732
S'sketch_params'
p34733
tp34734
(icodemend.demo.code_suggest
Element
p34735
(dp34736
g10
I0
sg11
S'sets the sketch parameters .'
p34737
sg12
Vpcolor.sketch_params
p34738
sg14
(lp34739
sg2
g34733
sbs(g93
g161
S'(1, 0)'
p34740
tp34741
(icodemend.demo.code_suggest
Element
p34742
(dp34743
g10
I7
sg11
S''
sg12
Vannotate.xy.(1, 0)
p34744
sg14
(lp34745
sg2
g34740
sbs(S'fill'
p34746
S'figure'
p34747
tp34748
(icodemend.demo.code_suggest
Element
p34749
(dp34750
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p34751
sg12
Vfill.figure
p34752
sg14
(lp34753
sg2
g34747
sbs(S'get_xaxis_text1_transform'
p34754
S'valign'
p34755
tp34756
(icodemend.demo.code_suggest
Element
p34757
(dp34758
g10
I0
sg11
S'where valign and halign are requested alignments for the text .'
p34759
sg12
Vget_xaxis_text1_transform.valign
p34760
sg14
(lp34761
sg2
g34755
sbs(g452
g453
g7188
tp34762
g7184
s(g101
g8545
S'4'
tp34763
g22096
s(g5424
g102
S'1.0'
p34764
tp34765
(icodemend.demo.code_suggest
Element
p34766
(dp34767
g10
I1
sg11
S''
sg12
Vgrid.alpha.1/0
p34768
sg14
(lp34769
sg2
g34764
sbs(S'plot'
p34770
g29125
tp34771
g29028
s(g117
g118
g27686
tp34772
g27682
sS'window_none'
p34773
(icodemend.demo.code_suggest
Element
p34774
(dp34775
g10
I0
sg11
S'no window function ; simply return x.'
p34776
sg12
Vwindow_none
p34777
sg14
(lp34778
sg2
g34773
sbs(g944
S'log'
p34779
g438
tp34780
g6584
s(S'scatter'
p34781
g22209
tp34782
g22204
s(S'axvline'
p34783
S'x'
tp34784
(icodemend.demo.code_suggest
Element
p34785
(dp34786
g10
I31
sg11
S'x position in data coordinates of the vertical line .'
p34787
sg12
Vaxvline.x
p34788
sg14
(lp34789
(icodemend.demo.code_suggest
Element
p34790
(dp34791
g10
I3
sg11
S''
sg12
Vaxvline.x.0/5
p34792
sg14
(lp34793
sg2
S'0.5'
p34794
sbag6100
a(icodemend.demo.code_suggest
Element
p34795
(dp34796
g10
I2
sg11
S''
sg12
Vaxvline.x.15
p34797
sg14
(lp34798
sg2
S'15'
p34799
sba(icodemend.demo.code_suggest
Element
p34800
(dp34801
g10
I2
sg11
S''
sg12
Vaxvline.x.5
p34802
sg14
(lp34803
sg2
S'5'
sba(icodemend.demo.code_suggest
Element
p34804
(dp34805
g10
I2
sg11
S''
sg12
Vaxvline.x.j
p34806
sg14
(lp34807
sg2
S'j'
sbag20309
ag34315
a(icodemend.demo.code_suggest
Element
p34808
(dp34809
g10
I1
sg11
S''
sg12
Vaxvline.x.0/22058956
p34810
sg14
(lp34811
sg2
S'0.22058956'
p34812
sbag16734
a(icodemend.demo.code_suggest
Element
p34813
(dp34814
g10
I1
sg11
S''
sg12
Vaxvline.x.100
p34815
sg14
(lp34816
sg2
S'100'
p34817
sbag15450
a(icodemend.demo.code_suggest
Element
p34818
(dp34819
g10
I1
sg11
S''
sg12
Vaxvline.x.2/3
p34820
sg14
(lp34821
sg2
S'2.3'
p34822
sba(icodemend.demo.code_suggest
Element
p34823
(dp34824
g10
I1
sg11
S''
sg12
Vaxvline.x.2/5
p34825
sg14
(lp34826
sg2
S'2.5'
p34827
sba(icodemend.demo.code_suggest
Element
p34828
(dp34829
g10
I1
sg11
S''
sg12
Vaxvline.x.6
p34830
sg14
(lp34831
sg2
S'6'
sba(icodemend.demo.code_suggest
Element
p34832
(dp34833
g10
I1
sg11
S''
sg12
Vaxvline.x.xc
p34834
sg14
(lp34835
sg2
S'xc'
p34836
sba(icodemend.demo.code_suggest
Element
p34837
(dp34838
g10
I1
sg11
S''
sg12
Vaxvline.x.xline
p34839
sg14
(lp34840
sg2
S'xline'
p34841
sba(icodemend.demo.code_suggest
Element
p34842
(dp34843
g10
I1
sg11
S''
sg12
Vaxvline.x.xmaj
p34844
sg14
(lp34845
sg2
g3385
sba(icodemend.demo.code_suggest
Element
p34846
(dp34847
g10
I1
sg11
S''
sg12
Vaxvline.x.xmin
p34848
sg14
(lp34849
sg2
g13269
sba(icodemend.demo.code_suggest
Element
p34850
(dp34851
g10
I1
sg11
S''
sg12
Vaxvline.x.xx
p34852
sg14
(lp34853
sg2
S'xx'
p34854
sba(icodemend.demo.code_suggest
Element
p34855
(dp34856
g10
I1
sg11
S''
sg12
Vaxvline.x.ymin
p34857
sg14
(lp34858
sg2
g126
sbasg2
S'x'
sbs(S'broken_barh'
p34859
S'aspect'
p34860
tp34861
(icodemend.demo.code_suggest
Element
p34862
(dp34863
g10
I0
sg11
S'aspect'
p34864
sg12
Vbroken_barh.aspect
p34865
sg14
(lp34866
sg2
g34860
sbs(S'semilogx'
p34867
S'markeredgecolor'
p34868
tp34869
(icodemend.demo.code_suggest
Element
p34870
(dp34871
g10
I0
sg11
S'set the marker edge color'
p34872
sg12
Vsemilogx.markeredgecolor
p34873
sg14
(lp34874
sg2
g34868
sbs(g6556
S'x'
S'pah'
p34875
tp34876
(icodemend.demo.code_suggest
Element
p34877
(dp34878
g10
I1
sg11
S''
sg12
Vvlines.x.pah
p34879
sg14
(lp34880
sg2
g34875
sbs(S'index_bar'
p34881
g8313
tp34882
g8308
s(g101
S'c'
S'x'
tp34883
g21342
s(S'phase_spectrum'
p34884
S'drawstyle'
p34885
tp34886
(icodemend.demo.code_suggest
Element
p34887
(dp34888
g10
I0
sg11
S'set the drawstyle of the plot'
p34889
sg12
Vphase_spectrum.drawstyle
p34890
sg14
(lp34891
sg2
g34885
sbs(S'barh'
p34892
S'markeredgecolor'
p34893
tp34894
(icodemend.demo.code_suggest
Element
p34895
(dp34896
g10
I0
sg11
S'where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p34897
sg12
Vbarh.markeredgecolor
p34898
sg14
(lp34899
sg2
g34893
sbsS'set_patch_line'
p34900
(icodemend.demo.code_suggest
Element
p34901
(dp34902
g10
I0
sg11
S'set the spine to be linear'
p34903
sg12
Vset_patch_line
p34904
sg14
(lp34905
sg2
g34900
sbs(g332
S's'
S"'column label'"
p34906
tp34907
(icodemend.demo.code_suggest
Element
p34908
(dp34909
g10
I1
sg11
S''
sg12
Vtext.s.'column label'
p34910
sg14
(lp34911
sg2
g34906
sbs(S'angle_spectrum'
p34912
g18822
tp34913
g18817
s(S'table'
p34914
S'codes'
p34915
tp34916
(icodemend.demo.code_suggest
Element
p34917
(dp34918
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p34919
sg12
Vtable.codes
p34920
sg14
(lp34921
sg2
g34915
sbs(S'subplots'
p34922
g2142
tp34923
g2137
s(S'fill_betweenx'
p34924
g20377
tp34925
g20372
sS'rec_summarize'
p34926
(icodemend.demo.code_suggest
Element
p34927
(dp34928
g10
I0
sg11
S'r is a numpy record array'
p34929
sg12
Vrec_summarize
p34930
sg14
(lp34931
(icodemend.demo.code_suggest
Element
p34932
(dp34933
g10
I0
sg11
S'summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname . the returned record array is identical to r , with extra arrays for each element in summaryfuncs .'
p34934
sg12
Vrec_summarize.attr
p34935
sg14
(lp34936
sg2
S'attr'
p34937
sbag13788
ag25085
ag24566
a(icodemend.demo.code_suggest
Element
p34938
(dp34939
g10
I0
sg11
S'summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname . the returned record array is identical to r , with extra arrays for each element in summaryfuncs .'
p34940
sg12
Vrec_summarize.r*[attr] and assign the\u000aoutput to a new attribute name *outname
p34941
sg14
(lp34942
sg2
S'r*[attr] and assign the\noutput to a new attribute name *outname'
p34943
sba(icodemend.demo.code_suggest
Element
p34944
(dp34945
g10
I0
sg11
S'summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname . the returned record array is identical to r , with extra arrays for each element in summaryfuncs .'
p34946
sg12
Vrec_summarize.summaryfuncs
p34947
sg14
(lp34948
sg2
S'summaryfuncs'
p34949
sbasg2
g34926
sbsS'set_message'
p34950
(icodemend.demo.code_suggest
Element
p34951
(dp34952
g10
I3
sg11
S'display a message on toolbar or in status bar'
p34953
sg12
Vset_message
p34954
sg14
(lp34955
(icodemend.demo.code_suggest
Element
p34956
(dp34957
g10
I0
sg11
S'message text'
p34958
sg12
Vset_message.s
p34959
sg14
(lp34960
sg2
S's'
sbasg2
g34950
sbs(S'semilogy'
p34961
S'agg_filter'
p34962
tp34963
(icodemend.demo.code_suggest
Element
p34964
(dp34965
g10
I0
sg11
S'set agg_filter fuction .'
p34966
sg12
Vsemilogy.agg_filter
p34967
sg14
(lp34968
sg2
g34962
sbsS'set_xdata'
p34969
(icodemend.demo.code_suggest
Element
p34970
(dp34971
g10
I48
sg11
S'set the data np.array for x'
p34972
sg12
Vset_xdata
p34973
sg14
(lp34974
sg2
g34969
sbs(g324
g785
g9492
tp34975
g9488
s(g332
g33920
S"'bold'"
p34976
tp34977
(icodemend.demo.code_suggest
Element
p34978
(dp34979
g10
I6
sg11
S''
sg12
Vtext.weight.'bold'
p34980
sg14
(lp34981
sg2
g34976
sbs(S'hexbin'
p34982
g25825
tp34983
g25820
sS'get_dash_capstyle'
p34984
(icodemend.demo.code_suggest
Element
p34985
(dp34986
g10
I0
sg11
S'get the cap style for dashed linestyles'
p34987
sg12
Vget_dash_capstyle
p34988
sg14
(lp34989
sg2
g34984
sbs(S'arrow'
p34990
g2599
tp34991
g2594
s(S'semilogy'
p34992
S'markerfacecoloralt'
p34993
tp34994
(icodemend.demo.code_suggest
Element
p34995
(dp34996
g10
I0
sg11
S'set the alternate marker face color .'
p34997
sg12
Vsemilogy.markerfacecoloralt
p34998
sg14
(lp34999
sg2
g34993
sbs(g101
g118
g22000
tp35000
g21996
s(S'phase_spectrum'
p35001
S'dash_capstyle'
p35002
tp35003
(icodemend.demo.code_suggest
Element
p35004
(dp35005
g10
I0
sg11
S'set the cap style for dashed linestyles'
p35006
sg12
Vphase_spectrum.dash_capstyle
p35007
sg14
(lp35008
sg2
g35002
sbs(S'semilogy'
p35009
S'sketch_params'
p35010
tp35011
(icodemend.demo.code_suggest
Element
p35012
(dp35013
g10
I0
sg11
S'sets the sketch parameters .'
p35014
sg12
Vsemilogy.sketch_params
p35015
sg14
(lp35016
sg2
g35010
sbs(S'drag_pan'
p35017
g23238
tp35018
g23233
s(S'contourf'
p35019
S'xunits'
p35020
tp35021
(icodemend.demo.code_suggest
Element
p35022
(dp35023
g10
I0
sg11
S'override axis units by specifying an instance of a matplotlib.units.conversioninterface .'
p35024
sg12
Vcontourf.xunits
p35025
sg14
(lp35026
sg2
g35020
sbsS'get_hinting_type'
p35027
(icodemend.demo.code_suggest
Element
p35028
(dp35029
g10
I0
sg11
S'get the freetype hinting type to use with this particular backend .'
p35030
sg12
Vget_hinting_type
p35031
sg14
(lp35032
sg2
g35027
sbs(g93
g161
S'(x0, y0)'
p35033
tp35034
(icodemend.demo.code_suggest
Element
p35035
(dp35036
g10
I1
sg11
S''
sg12
Vannotate.xy.(x0, y0)
p35037
sg14
(lp35038
sg2
g35033
sbs(g109
g3075
S'rez'
p35039
tp35040
(icodemend.demo.code_suggest
Element
p35041
(dp35042
g10
I1
sg11
S''
sg12
Vsavefig.dpi.rez
p35043
sg14
(lp35044
sg2
g35039
sbs(g452
g4163
S"'10'"
p35045
tp35046
(icodemend.demo.code_suggest
Element
p35047
(dp35048
g10
I1
sg11
S''
sg12
Verrorbar.markersize.'10'
p35049
sg14
(lp35050
sg2
g35045
sbs(g117
g118
g27448
tp35051
g27444
s(S'hexbin'
p35052
g25945
tp35053
g25940
s(S'contour'
p35054
g17838
tp35055
g17833
s(S'add_tool'
p35056
S'name'
p35057
tp35058
(icodemend.demo.code_suggest
Element
p35059
(dp35060
g10
I0
sg11
S'name of the tool , treated as the id , has to be unique'
p35061
sg12
Vadd_tool.name
p35062
sg14
(lp35063
sg2
g35057
sbs(S'remove_toolitem'
p35064
g15218
tp35065
g15213
s(S'stineman_interp'
p35066
S'yi'
p35067
tp35068
(icodemend.demo.code_suggest
Element
p35069
(dp35070
g10
I0
sg11
S'given data vectors x and y , the slope vector yp and a new abscissa vector xi , the function stineman_interp ( ) uses stineman interpolation to calculate a vector yi corresponding to xi .'
p35071
sg12
Vstineman_interp.yi
p35072
sg14
(lp35073
sg2
g35067
sbs(S'set_color_cycle'
p35074
S'clist'
p35075
tp35076
(icodemend.demo.code_suggest
Element
p35077
(dp35078
g10
I0
sg11
S'clist is a list of mpl color specifiers .'
p35079
sg12
Vset_color_cycle.clist
p35080
sg14
(lp35081
sg2
g35075
sbs(S'figtext'
p35082
g11443
tp35083
g11438
s(g16
g132
S"['red', 'green', 'blue', 'cyan', 'magenta']"
p35084
tp35085
(icodemend.demo.code_suggest
Element
p35086
(dp35087
g10
I1
sg11
S''
sg12
Vbar.color.['red', 'green', 'blue', 'cyan', 'magenta']
p35088
sg14
(lp35089
sg2
g35084
sbs(g252
g7452
g14310
tp35090
g14306
sS'rec_join'
p35091
(icodemend.demo.code_suggest
Element
p35092
(dp35093
g10
I0
sg11
S'join record arrays r1 and r2 on key ; key is a tuple of field names - - if key is a string it is assumed to be a single attribute name .'
p35094
sg12
Vrec_join
p35095
sg14
(lp35096
(icodemend.demo.code_suggest
Element
p35097
(dp35098
g10
I0
sg11
S'the defaults keyword is a dictionary filled with { column_name:default_value } pairs .'
p35099
sg12
Vrec_join.defaults
p35100
sg14
(lp35101
sg2
S'defaults'
p35102
sba(icodemend.demo.code_suggest
Element
p35103
(dp35104
g10
I0
sg11
S"the jointype keyword can be ' inner ' , ' outer ' , ' leftouter ' . to do a rightouter join just reverse r1 and r2 ."
p35105
sg12
Vrec_join.jointype
p35106
sg14
(lp35107
sg2
S'jointype'
p35108
sba(icodemend.demo.code_suggest
Element
p35109
(dp35110
g10
I0
sg11
S'join record arrays r1 and r2 on key ; key is a tuple of field names - - if key is a string it is assumed to be a single attribute name . if r1 and r2 have equal values on all the keys in the key tuple , then their fields will be merged into a new record array containing the intersection of the fields of r1 and r2 .'
p35111
sg12
Vrec_join.key
p35112
sg14
(lp35113
sg2
S'key'
p35114
sba(icodemend.demo.code_suggest
Element
p35115
(dp35116
g10
I0
sg11
S"join record arrays r1 and r2 on key ; key is a tuple of field names - - if key is a string it is assumed to be a single attribute name . if r1 and r2 have equal values on all the keys in the key tuple , then their fields will be merged into a new record array containing the intersection of the fields of r1 and r2 .|||the keywords r1postfix and r2postfix are postfixed to column names ( other than keys ) that are both in r1 and r2 .|||the jointype keyword can be ' inner ' , ' outer ' , ' leftouter ' . to do a rightouter join just reverse r1 and r2 .|||r1 ( also r2 ) must not have any duplicate keys ."
p35117
sg12
Vrec_join.r1
p35118
sg14
(lp35119
sg2
S'r1'
p35120
sba(icodemend.demo.code_suggest
Element
p35121
(dp35122
g10
I0
sg11
S'the keywords r1postfix and r2postfix are postfixed to column names ( other than keys ) that are both in r1 and r2 .'
p35123
sg12
Vrec_join.r1postfix
p35124
sg14
(lp35125
sg2
S'r1postfix'
p35126
sba(icodemend.demo.code_suggest
Element
p35127
(dp35128
g10
I0
sg11
S"join record arrays r1 and r2 on key ; key is a tuple of field names - - if key is a string it is assumed to be a single attribute name . if r1 and r2 have equal values on all the keys in the key tuple , then their fields will be merged into a new record array containing the intersection of the fields of r1 and r2 .|||the keywords r1postfix and r2postfix are postfixed to column names ( other than keys ) that are both in r1 and r2 .|||the jointype keyword can be ' inner ' , ' outer ' , ' leftouter ' . to do a rightouter join just reverse r1 and r2 .|||r1 ( also r2 ) must not have any duplicate keys ."
p35129
sg12
Vrec_join.r2
p35130
sg14
(lp35131
sg2
S'r2'
p35132
sba(icodemend.demo.code_suggest
Element
p35133
(dp35134
g10
I0
sg11
S'the keywords r1postfix and r2postfix are postfixed to column names ( other than keys ) that are both in r1 and r2 .'
p35135
sg12
Vrec_join.r2postfix
p35136
sg14
(lp35137
sg2
S'r2postfix'
p35138
sbasg2
g35091
sbs(S'quiver'
p35139
g31015
tp35140
g31010
s(g117
g118
g27964
tp35141
g27960
s(g324
g785
g9382
tp35142
g9378
s(S'psd'
p35143
S'freqs'
p35144
tp35145
(icodemend.demo.code_suggest
Element
p35146
(dp35147
g10
I0
sg11
S'if return_line is false , returns the tuple ( pxx , freqs ) . if return_line is true , returns the tuple ( pxx , freqs . line ) :'
p35148
sg12
Vpsd.freqs
p35149
sg14
(lp35150
sg2
g35144
sbs(S'axvline'
p35151
S'dash_joinstyle'
p35152
tp35153
(icodemend.demo.code_suggest
Element
p35154
(dp35155
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p35156
sg12
Vaxvline.dash_joinstyle
p35157
sg14
(lp35158
sg2
g35152
sbs(g34170
g325
g33127
tp35159
g33123
s(S'plot_date'
p35160
g19841
tp35161
g19836
s(g4355
S'interpolate'
p35162
g1944
tp35163
g20707
sS'disable'
p35164
(icodemend.demo.code_suggest
Element
p35165
(dp35166
g10
I0
sg11
S'release the canvas and disconnect press/release events disable the toggle tool'
p35167
sg12
Vdisable
p35168
sg14
(lp35169
sg2
g35164
sbs(g8547
g7032
g7032
tp35170
(icodemend.demo.code_suggest
Element
p35171
(dp35172
g10
I9
sg11
S''
sg12
Vpie.colors.colors
p35173
sg14
(lp35174
sg2
g7032
sbs(S'add_subplot'
p35175
S'left'
p35176
tp35177
(icodemend.demo.code_suggest
Element
p35178
(dp35179
g10
I0
sg11
S"add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal axes kwargs plus projection which sets the projection type of the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) . typical usage :"
p35180
sg12
Vadd_subplot.left
p35181
sg14
(lp35182
sg2
g35176
sbs(g117
g118
g28614
tp35183
g28610
s(S'angle_spectrum'
p35184
g18756
tp35185
g18751
s(g6632
g2155
S'((-2.5), 12.5)'
p35186
tp35187
(icodemend.demo.code_suggest
Element
p35188
(dp35189
g10
I1
sg11
S''
sg12
Vadd_subplot.xlim.((-2/5), 12/5)
p35190
sg14
(lp35191
sg2
g35186
sbs(S'axvline'
p35192
S'alpha'
p35193
tp35194
(icodemend.demo.code_suggest
Element
p35195
(dp35196
g10
I1
sg11
S'set the alpha value used for blending - not supported on all backends .'
p35197
sg12
Vaxvline.alpha
p35198
sg14
(lp35199
(icodemend.demo.code_suggest
Element
p35200
(dp35201
g10
I1
sg11
S''
sg12
Vaxvline.alpha.0/5
p35202
sg14
(lp35203
sg2
S'0.5'
p35204
sbasg2
g35193
sbs(S'plot'
p35205
g29952
tp35206
g29947
s(g117
g118
g27626
tp35207
g27622
s(g16
g132
S"'skyblue'"
p35208
tp35209
(icodemend.demo.code_suggest
Element
p35210
(dp35211
g10
I1
sg11
S''
sg12
Vbar.color.'skyblue'
p35212
sg14
(lp35213
sg2
g35208
sbs(S'poly_between'
p35214
S'y'
tp35215
(icodemend.demo.code_suggest
Element
p35216
(dp35217
g10
I0
sg11
S'return value is x , y arrays for use with matplotlib.axes.axes.fill ( ) .'
p35218
sg12
Vpoly_between.y
p35219
sg14
(lp35220
sg2
S'y'
sbs(g117
g348
g29508
tp35221
g29504
s(g245
g140
g30383
tp35222
g30379
s(g452
g118
S"'abw_up'"
p35223
tp35224
(icodemend.demo.code_suggest
Element
p35225
(dp35226
g10
I1
sg11
S''
sg12
Verrorbar.label.'abw_up'
p35227
sg14
(lp35228
sg2
g35223
sbs(S'add_subplot'
p35229
S'rasterized'
p35230
tp35231
(icodemend.demo.code_suggest
Element
p35232
(dp35233
g10
I3
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p35234
sg12
Vadd_subplot.rasterized
p35235
sg14
(lp35236
(icodemend.demo.code_suggest
Element
p35237
(dp35238
g10
I3
sg11
S''
sg12
Vadd_subplot.rasterized.True
p35239
sg14
(lp35240
sg2
g438
sbasg2
g35230
sbs(S'barh'
p35241
S'closed'
p35242
tp35243
(icodemend.demo.code_suggest
Element
p35244
(dp35245
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p35246
sg12
Vbarh.closed
p35247
sg14
(lp35248
sg2
g35242
sbs(S'csd'
p35249
S'solid_capstyle'
p35250
tp35251
(icodemend.demo.code_suggest
Element
p35252
(dp35253
g10
I0
sg11
S'set the cap style for solid linestyles'
p35254
sg12
Vcsd.solid_capstyle
p35255
sg14
(lp35256
sg2
g35250
sbs(g93
g4800
g25494
tp35257
g25490
sS'set_xticks'
p35258
(icodemend.demo.code_suggest
Element
p35259
(dp35260
g10
I249
sg11
S'set the x ticks with list of ticks'
p35261
sg12
Vset_xticks
p35262
sg14
(lp35263
g33083
asg2
g35258
sbs(g514
g2251
S"':'"
p35264
tp35265
(icodemend.demo.code_suggest
Element
p35266
(dp35267
g10
I1
sg11
S''
sg12
Vpcolor.linestyle.':'
p35268
sg14
(lp35269
sg2
g35264
sbs(S'cleaned'
p35270
S'sketch'
p35271
tp35272
(icodemend.demo.code_suggest
Element
p35273
(dp35274
g10
I0
sg11
S'if not none , must be a 3-tuple of the form ( scale , length , randomness ) , representing the sketch parameters .'
p35275
sg12
Vcleaned.sketch
p35276
sg14
(lp35277
sg2
g35271
sbsS'get_mec'
p35278
(icodemend.demo.code_suggest
Element
p35279
(dp35280
g10
I0
sg11
S'alias for get_markeredgecolor'
p35281
sg12
Vget_mec
p35282
sg14
(lp35283
sg2
g35278
sbs(S'eventplot'
p35284
g23529
tp35285
g23524
s(S'semilogy'
p35286
S'zorder'
p35287
tp35288
(icodemend.demo.code_suggest
Element
p35289
(dp35290
g10
I0
sg11
S'set the zorder for the artist .'
p35291
sg12
Vsemilogy.zorder
p35292
sg14
(lp35293
sg2
g35287
sbsS'get_mew'
p35294
(icodemend.demo.code_suggest
Element
p35295
(dp35296
g10
I0
sg11
S'alias for get_markeredgewidth'
p35297
sg12
Vget_mew
p35298
sg14
(lp35299
sg2
g35294
sbs(g324
g785
g9631
tp35300
g9627
s(g324
g785
g9522
tp35301
g9518
s(g332
S'backgroundcolor'
p35302
S"'white'"
p35303
tp35304
(icodemend.demo.code_suggest
Element
p35305
(dp35306
g10
I2
sg11
S''
sg12
Vtext.backgroundcolor.'white'
p35307
sg14
(lp35308
sg2
g35303
sbs(g324
g2183
g9812
tp35309
g9808
s(g117
g132
g28844
tp35310
g28840
s(S'plot'
p35311
g29874
tp35312
g29869
s(S'xlat'
p35313
g18448
tp35314
g18443
sS'score_size'
p35315
(icodemend.demo.code_suggest
Element
p35316
(dp35317
g10
I0
sg11
S'returns a match score between size1 and size2 .'
p35318
sg12
Vscore_size
p35319
sg14
(lp35320
(icodemend.demo.code_suggest
Element
p35321
(dp35322
g10
I0
sg11
S'otherwise , the result is the absolute distance between size1 and size2 , normalized so that the usual range of font sizes ( 6pt - 72pt ) will lie between 0.0 and 1.0 .|||returns a match score between size1 and size2 .'
p35323
sg12
Vscore_size.size1
p35324
sg14
(lp35325
sg2
S'size1'
p35326
sbag1114
asg2
g35315
sbs(S'draw_gouraud_triangles'
p35327
g15042
tp35328
g15037
s(g252
g253
g14196
tp35329
g14192
s(S'pcolor'
p35330
S'contains'
p35331
tp35332
(icodemend.demo.code_suggest
Element
p35333
(dp35334
g10
I0
sg11
S'replace the contains test used by this artist .'
p35335
sg12
Vpcolor.contains
p35336
sg14
(lp35337
sg2
g35331
sbs(g10369
g10370
S'120'
p35338
tp35339
(icodemend.demo.code_suggest
Element
p35340
(dp35341
g10
I1
sg11
S''
sg12
Vsave.fps.120
p35342
sg14
(lp35343
sg2
g35338
sbs(S'loglog'
p35344
S'transform'
p35345
tp35346
(icodemend.demo.code_suggest
Element
p35347
(dp35348
g10
I0
sg11
S'set the transformation instance used by this artist'
p35349
sg12
Vloglog.transform
p35350
sg14
(lp35351
sg2
g35345
sbs(g6146
S'use_clabeltext'
p35352
S'1'
tp35353
g14900
s(S'subplot2grid'
p35354
g22895
tp35355
g22873
sS'segments_intersect'
p35356
(icodemend.demo.code_suggest
Element
p35357
(dp35358
g10
I0
sg11
S'return true if s1 and s2 intersect .'
p35359
sg12
Vsegments_intersect
p35360
sg14
(lp35361
(icodemend.demo.code_suggest
Element
p35362
(dp35363
g10
I0
sg11
S'return true if s1 and s2 intersect . s1 and s2 are defined as :'
p35364
sg12
Vsegments_intersect.s1
p35365
sg14
(lp35366
sg2
S's1'
p35367
sba(icodemend.demo.code_suggest
Element
p35368
(dp35369
g10
I0
sg11
S'return true if s1 and s2 intersect . s1 and s2 are defined as :'
p35370
sg12
Vsegments_intersect.s2
p35371
sg14
(lp35372
sg2
S's2'
p35373
sbasg2
g35356
sbs(S'boxplot'
p35374
S'manage_xticks'
p35375
tp35376
(icodemend.demo.code_suggest
Element
p35377
(dp35378
g10
I0
sg11
S'if the function should adjust the xlim and xtick locations .'
p35379
sg12
Vboxplot.manage_xticks
p35380
sg14
(lp35381
sg2
g35375
sbs(g5640
g16843
S'1'
tp35382
g12012
s(g101
S'c'
g21531
tp35383
g21527
s(g101
g8538
g22071
tp35384
g22067
s(S'errorbar'
p35385
S'mew'
p35386
tp35387
(icodemend.demo.code_suggest
Element
p35388
(dp35389
g10
I2
sg11
S'where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p35390
sg12
Verrorbar.mew
p35391
sg14
(lp35392
(icodemend.demo.code_suggest
Element
p35393
(dp35394
g10
I2
sg11
S''
sg12
Verrorbar.mew.0
p35395
sg14
(lp35396
sg2
S'0'
sbasg2
g35386
sbs(S'axvspan'
p35397
S'clip_box'
p35398
tp35399
(icodemend.demo.code_suggest
Element
p35400
(dp35401
g10
I0
sg11
S"set the artist 's clip bbox ."
p35402
sg12
Vaxvspan.clip_box
p35403
sg14
(lp35404
sg2
g35398
sbsS'pdfRepr'
p35405
(icodemend.demo.code_suggest
Element
p35406
(dp35407
g10
I0
sg11
S'map python objects to pdf syntax .'
p35408
sg12
VpdfRepr
p35409
sg14
(lp35410
sg2
g35405
sbs(g117
g118
g28534
tp35411
g28530
sS'xcorr'
p35412
(icodemend.demo.code_suggest
Element
p35413
(dp35414
g10
I2
sg11
S'plot the cross correlation between x and y .'
p35415
sg12
Vxcorr
p35416
sg14
(lp35417
(icodemend.demo.code_suggest
Element
p35418
(dp35419
g10
I2
sg11
S'number of lags to show . if none , will return all 2 * len(x ) - 1 lags .'
p35420
sg12
Vxcorr.maxlags
p35421
sg14
(lp35422
(icodemend.demo.code_suggest
Element
p35423
(dp35424
g10
I2
sg11
S''
sg12
Vxcorr.maxlags.50
p35425
sg14
(lp35426
sg2
S'50'
p35427
sbasg2
S'maxlags'
p35428
sbag20158
a(icodemend.demo.code_suggest
Element
p35429
(dp35430
g10
I2
sg11
S'if true , axes.vlines is used to plot the vertical lines from the origin to the acorr . otherwise , axes.plot is used .'
p35431
sg12
Vxcorr.usevlines
p35432
sg14
(lp35433
g6605
asg2
S'usevlines'
p35434
sbag14981
a(icodemend.demo.code_suggest
Element
p35435
(dp35436
g10
I0
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||only used if usevlines is false ."
p35437
sg12
Vxcorr.linestyle
p35438
sg14
(lp35439
sg2
S'linestyle'
p35440
sbag1144
a(icodemend.demo.code_suggest
Element
p35441
(dp35442
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p35443
sg12
Vxcorr.markevery
p35444
sg14
(lp35445
sg2
S'markevery'
p35446
sba(icodemend.demo.code_suggest
Element
p35447
(dp35448
g10
I0
sg11
S'plot the cross correlation between x and y .'
p35449
sg12
Vxcorr.x
p35450
sg14
(lp35451
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p35452
(dp35453
g10
I0
sg11
S'plot the cross correlation between x and y .'
p35454
sg12
Vxcorr.y
p35455
sg14
(lp35456
sg2
S'y'
sbasg2
g35412
sbs(g93
g161
S'(9, 0)'
p35457
tp35458
(icodemend.demo.code_suggest
Element
p35459
(dp35460
g10
I1
sg11
S''
sg12
Vannotate.xy.(9, 0)
p35461
sg14
(lp35462
sg2
g35457
sbs(g252
g7452
g14290
tp35463
g14286
s(g5640
g16843
g12006
tp35464
g12002
s(S'broken_barh'
p35465
S'zorder'
p35466
tp35467
(icodemend.demo.code_suggest
Element
p35468
(dp35469
g10
I0
sg11
S'set the zorder for the artist .'
p35470
sg12
Vbroken_barh.zorder
p35471
sg14
(lp35472
sg2
g35466
sbs(S'contour'
p35473
g17665
tp35474
g17641
s(S'fetch_historical_yahoo'
p35475
S'cachename'
p35476
tp35477
(icodemend.demo.code_suggest
Element
p35478
(dp35479
g10
I0
sg11
S'cachename is the name of the local file cache . if none , will default to the md5 hash or the url ( which incorporates the ticker and date range )'
p35480
sg12
Vfetch_historical_yahoo.cachename
p35481
sg14
(lp35482
sg2
g35476
sbs(S'set_xticklabels'
p35483
g17229
tp35484
g17224
s(S'set_yticklabels'
p35485
g17985
tp35486
g17975
sS'get_joinstyle'
p35487
(icodemend.demo.code_suggest
Element
p35488
(dp35489
g10
I0
sg11
S"return the line join style as one of ( ' miter ' , ' round ' , ' bevel ' ) return the current joinstyle"
p35490
sg12
Vget_joinstyle
p35491
sg14
(lp35492
sg2
g35487
sbs(g245
g140
g30328
tp35493
g30324
s(S'semilogy'
p35494
S'clip_path'
p35495
tp35496
(icodemend.demo.code_suggest
Element
p35497
(dp35498
g10
I0
sg11
S"set the artist 's clip path , which may be"
p35499
sg12
Vsemilogy.clip_path
p35500
sg14
(lp35501
sg2
g35495
sbs(S'colorbar'
p35502
g12062
tp35503
g12053
s(g117
g132
g28755
tp35504
g28751
s(S'fill'
p35505
S'path_effects'
p35506
tp35507
(icodemend.demo.code_suggest
Element
p35508
(dp35509
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p35510
sg12
Vfill.path_effects
p35511
sg14
(lp35512
sg2
g35506
sbs(S'fill'
p35513
S'color_cycle'
p35514
tp35515
(icodemend.demo.code_suggest
Element
p35516
(dp35517
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p35518
sg12
Vfill.color_cycle
p35519
sg14
(lp35520
sg2
g35514
sbs(g16
g132
S"'#ff3333'"
p35521
tp35522
(icodemend.demo.code_suggest
Element
p35523
(dp35524
g10
I2
sg11
S''
sg12
Vbar.color.'#ff3333'
p35525
sg14
(lp35526
sg2
g35521
sbs(g5640
g5641
g11971
tp35527
g11967
s(S'magnitude_spectrum'
p35528
S'xlim'
p35529
tp35530
(icodemend.demo.code_suggest
Element
p35531
(dp35532
g10
I0
sg11
S'set the data limits for the xaxis'
p35533
sg12
Vmagnitude_spectrum.xlim
p35534
sg14
(lp35535
sg2
g35529
sbs(g2250
g132
g30762
tp35536
g30758
s(S'annotate'
p35537
S'ymargin'
p35538
tp35539
(icodemend.demo.code_suggest
Element
p35540
(dp35541
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p35542
sg12
Vannotate.ymargin
p35543
sg14
(lp35544
sg2
g35538
sbs(g2250
S'hatch'
p35545
g23723
tp35546
g23719
sS'set_dashes'
p35547
(icodemend.demo.code_suggest
Element
p35548
(dp35549
g10
I8
sg11
S'alias for set_linestyle'
p35550
sg12
Vset_dashes
p35551
sg14
(lp35552
sg2
g35547
sbsS'file_requires_unicode'
p35553
(icodemend.demo.code_suggest
Element
p35554
(dp35555
g10
I0
sg11
S'returns true if the given writable file-like object requires unicode to be written to it .'
p35556
sg12
Vfile_requires_unicode
p35557
sg14
(lp35558
sg2
g35553
sbs(g514
g667
g438
tp35559
(icodemend.demo.code_suggest
Element
p35560
(dp35561
g10
I1
sg11
S''
sg12
Vpcolor.picker.True
p35562
sg14
(lp35563
sg2
g438
sbs(S'eventplot'
p35564
g23601
tp35565
g23596
s(S'get_cmap'
p35566
S'name'
p35567
tp35568
(icodemend.demo.code_suggest
Element
p35569
(dp35570
g10
I2
sg11
S'if name is a matplotlib.colors.colormap instance , it will be returned .|||get a colormap instance , defaulting to rc values if name is none .|||if lut is not none it must be an integer giving the number of entries desired in the lookup table , and name must be a standard mpl colormap name .'
p35571
sg12
Vget_cmap.name
p35572
sg14
(lp35573
(icodemend.demo.code_suggest
Element
p35574
(dp35575
g10
I1
sg11
S''
sg12
Vget_cmap.name.'rainbow'
p35576
sg14
(lp35577
sg2
S"'rainbow'"
p35578
sba(icodemend.demo.code_suggest
Element
p35579
(dp35580
g10
I1
sg11
S''
sg12
Vget_cmap.name.'terrain'
p35581
sg14
(lp35582
sg2
S"'terrain'"
p35583
sbasg2
g35567
sbs(S'blend_hsv'
p35584
S'intensity'
p35585
tp35586
(icodemend.demo.code_suggest
Element
p35587
(dp35588
g10
I0
sg11
S'an mxnx1 array of floats ranging from 0 to 1 ( grayscale image ) .'
p35589
sg12
Vblend_hsv.intensity
p35590
sg14
(lp35591
sg2
g35585
sbs(S'axvline'
p35592
S'yscale'
p35593
tp35594
(icodemend.demo.code_suggest
Element
p35595
(dp35596
g10
I0
sg11
S'set the scaling of the y-axis'
p35597
sg12
Vaxvline.yscale
p35598
sg14
(lp35599
sg2
g35593
sbs(S'clabel'
p35600
g14852
tp35601
g14843
s(S'fill'
p35602
S'linestyle'
p35603
tp35604
(icodemend.demo.code_suggest
Element
p35605
(dp35606
g10
I0
sg11
S'set the patch linestyle'
p35607
sg12
Vfill.linestyle
p35608
sg14
(lp35609
sg2
g35603
sbs(g1170
g10211
g845
tp35610
g841
s(g117
g118
g28354
tp35611
g28350
s(S'phase_spectrum'
p35612
S'size_inches'
p35613
tp35614
(icodemend.demo.code_suggest
Element
p35615
(dp35616
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p35617
sg12
Vphase_spectrum.size_inches
p35618
sg14
(lp35619
sg2
g35613
sbs(S'hold'
p35620
g937
tp35621
g932
s(S'fill'
p35622
S'joinstyle'
p35623
tp35624
(icodemend.demo.code_suggest
Element
p35625
(dp35626
g10
I0
sg11
S'set the patch joinstyle'
p35627
sg12
Vfill.joinstyle
p35628
sg14
(lp35629
sg2
g35623
sbsS'get_xdata'
p35630
(icodemend.demo.code_suggest
Element
p35631
(dp35632
g10
I11
sg11
S'return the xdata .'
p35633
sg12
Vget_xdata
p35634
sg14
(lp35635
(icodemend.demo.code_suggest
Element
p35636
(dp35637
g10
I0
sg11
S'if orig is true , return the original data , else the processed data .'
p35638
sg12
Vget_xdata.orig
p35639
sg14
(lp35640
sg2
S'orig'
p35641
sbasg2
g35630
sbs(S'cohere'
p35642
S'drawstyle'
p35643
tp35644
(icodemend.demo.code_suggest
Element
p35645
(dp35646
g10
I0
sg11
S'set the drawstyle of the plot'
p35647
sg12
Vcohere.drawstyle
p35648
sg14
(lp35649
sg2
g35643
sbs(g139
g1283
g1867
tp35650
g1913
s(g324
g515
g515
tp35651
g9904
s(S'figtext'
p35652
g11317
tp35653
g11312
s(g117
g102
g29226
tp35654
g29222
s(g101
S's'
g7761
tp35655
g7757
s(S'violin'
p35656
g5601
tp35657
g5596
s(S'semilogy'
p35658
S'ylim'
p35659
tp35660
(icodemend.demo.code_suggest
Element
p35661
(dp35662
g10
I0
sg11
S'set the data limits for the yaxis'
p35663
sg12
Vsemilogy.ylim
p35664
sg14
(lp35665
sg2
g35659
sbs(S'HPacker'
p35666
S'align'
p35667
tp35668
(icodemend.demo.code_suggest
Element
p35669
(dp35670
g10
I2
sg11
S'alignment of boxes .'
p35671
sg12
VHPacker.align
p35672
sg14
(lp35673
(icodemend.demo.code_suggest
Element
p35674
(dp35675
g10
I2
sg11
S''
sg12
VHPacker.align.'center'
p35676
sg14
(lp35677
sg2
S"'center'"
p35678
sbasg2
g35667
sbs(S'barh'
p35679
S'color'
p35680
tp35681
(icodemend.demo.code_suggest
Element
p35682
(dp35683
g10
I33
sg11
S'the colors of the bars|||set both the edgecolor and the facecolor .'
p35684
sg12
Vbarh.color
p35685
sg14
(lp35686
g15315
a(icodemend.demo.code_suggest
Element
p35687
(dp35688
g10
I4
sg11
S''
sg12
Vbarh.color.'gray'
p35689
sg14
(lp35690
sg2
S"'gray'"
p35691
sbag32474
a(icodemend.demo.code_suggest
Element
p35692
(dp35693
g10
I2
sg11
S''
sg12
Vbarh.color.'#0070C0'
p35694
sg14
(lp35695
sg2
S"'#0070C0'"
p35696
sba(icodemend.demo.code_suggest
Element
p35697
(dp35698
g10
I2
sg11
S''
sg12
Vbarh.color.'#FFFF00'
p35699
sg14
(lp35700
sg2
S"'#FFFF00'"
p35701
sba(icodemend.demo.code_suggest
Element
p35702
(dp35703
g10
I2
sg11
S''
sg12
Vbarh.color.'g'
p35704
sg14
(lp35705
sg2
S"'g'"
p35706
sbag18409
a(icodemend.demo.code_suggest
Element
p35707
(dp35708
g10
I2
sg11
S''
sg12
Vbarh.color.'y'
p35709
sg14
(lp35710
sg2
S"'y'"
p35711
sba(icodemend.demo.code_suggest
Element
p35712
(dp35713
g10
I2
sg11
S''
sg12
Vbarh.color.colors
p35714
sg14
(lp35715
sg2
g7032
sba(icodemend.demo.code_suggest
Element
p35716
(dp35717
g10
I1
sg11
S''
sg12
Vbarh.color.'/25'
p35718
sg14
(lp35719
sg2
S"'.25'"
p35720
sba(icodemend.demo.code_suggest
Element
p35721
(dp35722
g10
I1
sg11
S''
sg12
Vbarh.color.'/75'
p35723
sg14
(lp35724
sg2
S"'.75'"
p35725
sba(icodemend.demo.code_suggest
Element
p35726
(dp35727
g10
I1
sg11
S''
sg12
Vbarh.color.'blue'
p35728
sg14
(lp35729
sg2
S"'blue'"
p35730
sbag33140
ag24797
a(icodemend.demo.code_suggest
Element
p35731
(dp35732
g10
I1
sg11
S''
sg12
Vbarh.color.'green'
p35733
sg14
(lp35734
sg2
S"'green'"
p35735
sba(icodemend.demo.code_suggest
Element
p35736
(dp35737
g10
I1
sg11
S''
sg12
Vbarh.color.'lightblue'
p35738
sg14
(lp35739
sg2
S"'lightblue'"
p35740
sba(icodemend.demo.code_suggest
Element
p35741
(dp35742
g10
I1
sg11
S''
sg12
Vbarh.color.['g', 'w']
p35743
sg14
(lp35744
sg2
S"['g', 'w']"
p35745
sba(icodemend.demo.code_suggest
Element
p35746
(dp35747
g10
I1
sg11
S''
sg12
Vbarh.color.c1
p35748
sg14
(lp35749
sg2
g20647
sba(icodemend.demo.code_suggest
Element
p35750
(dp35751
g10
I1
sg11
S''
sg12
Vbarh.color.c2
p35752
sg14
(lp35753
sg2
g21470
sbasg2
g35680
sbs(S'scatter'
p35754
g22191
tp35755
g22186
s(S'pcolormesh'
p35756
S'alpha'
p35757
tp35758
(icodemend.demo.code_suggest
Element
p35759
(dp35760
g10
I0
sg11
S'the alpha blending value|||set the alpha tranparencies of the collection .'
p35761
sg12
Vpcolormesh.alpha
p35762
sg14
(lp35763
sg2
g35757
sbsS'title'
p35764
(icodemend.demo.code_suggest
Element
p35765
(dp35766
g10
I345
sg11
S'set a title of the current axes .'
p35767
sg12
Vtitle
p35768
sg14
(lp35769
g32354
a(icodemend.demo.code_suggest
Element
p35770
(dp35771
g10
I1
sg11
S'set the font properties that control the text .'
p35772
sg12
Vtitle.fontproperties
p35773
sg14
(lp35774
(icodemend.demo.code_suggest
Element
p35775
(dp35776
g10
I1
sg11
S''
sg12
Vtitle.fontproperties.fontprop
p35777
sg14
(lp35778
sg2
S'fontprop'
p35779
sbasg2
S'fontproperties'
p35780
sba(icodemend.demo.code_suggest
Element
p35781
(dp35782
g10
I1
sg11
S'set the ( x , y ) position of the text'
p35783
sg12
Vtitle.position
p35784
sg14
(lp35785
(icodemend.demo.code_suggest
Element
p35786
(dp35787
g10
I1
sg11
S''
sg12
Vtitle.position.(0/5, 1)
p35788
sg14
(lp35789
sg2
S'(0.5, 1)'
p35790
sbasg2
S'position'
p35791
sba(icodemend.demo.code_suggest
Element
p35792
(dp35793
g10
I1
sg11
S'set the y position of the text'
p35794
sg12
Vtitle.y
p35795
sg14
(lp35796
(icodemend.demo.code_suggest
Element
p35797
(dp35798
g10
I1
sg11
S''
sg12
Vtitle.y.1/08
p35799
sg14
(lp35800
sg2
S'1.08'
p35801
sbasg2
S'y'
sba(icodemend.demo.code_suggest
Element
p35802
(dp35803
g10
I0
sg11
S'other keyword arguments are text properties , see text for a list of valid text properties .'
p35804
sg12
Vtitle.kwargs
p35805
sg14
(lp35806
sg2
S'kwargs'
p35807
sba(icodemend.demo.code_suggest
Element
p35808
(dp35809
g10
I0
sg11
S'text to use for the title'
p35810
sg12
Vtitle.label
p35811
sg14
(lp35812
sg2
S'label'
p35813
sba(icodemend.demo.code_suggest
Element
p35814
(dp35815
g10
I0
sg11
S"which title to set , defaults to ' center '"
p35816
sg12
Vtitle.loc
p35817
sg14
(lp35818
sg2
S'loc'
p35819
sba(icodemend.demo.code_suggest
Element
p35820
(dp35821
g10
I0
sg11
S'set text rotation mode .'
p35822
sg12
Vtitle.rotation_mode
p35823
sg14
(lp35824
sg2
S'rotation_mode'
p35825
sba(icodemend.demo.code_suggest
Element
p35826
(dp35827
g10
I0
sg11
S'set the text string s'
p35828
sg12
Vtitle.text
p35829
sg14
(lp35830
sg2
S'text'
p35831
sba(icodemend.demo.code_suggest
Element
p35832
(dp35833
g10
I0
sg11
S'set the x position of the text'
p35834
sg12
Vtitle.x
p35835
sg14
(lp35836
sg2
S'x'
sbasg2
g35764
sbs(g452
g2841
S"'.'"
p35837
tp35838
(icodemend.demo.code_suggest
Element
p35839
(dp35840
g10
I4
sg11
S''
sg12
Verrorbar.fmt.'/'
p35841
sg14
(lp35842
sg2
g35837
sbs(S'remove'
p35843
S'autolim'
p35844
tp35845
(icodemend.demo.code_suggest
Element
p35846
(dp35847
g10
I0
sg11
S'note : relim ( ) will not see collections even if the collection was added to axes with autolim = true .'
p35848
sg12
Vremove.autolim
p35849
sg14
(lp35850
sg2
g35844
sbsS'convert_yunits'
p35851
(icodemend.demo.code_suggest
Element
p35852
(dp35853
g10
I2
sg11
S'for artists in an axes , if the yaxis has units support , convert y using yaxis unit type'
p35854
sg12
Vconvert_yunits
p35855
sg14
(lp35856
(icodemend.demo.code_suggest
Element
p35857
(dp35858
g10
I0
sg11
S'for artists in an axes , if the yaxis has units support , convert y using yaxis unit type'
p35859
sg12
Vconvert_yunits.y
p35860
sg14
(lp35861
sg2
S'y'
sbasg2
g35851
sbs(g117
g102
g29236
tp35862
g29232
s(g117
g5546
g21068
tp35863
g21064
s(g766
g102
S'0.7'
p35864
tp35865
(icodemend.demo.code_suggest
Element
p35866
(dp35867
g10
I1
sg11
S''
sg12
Vcontourf.alpha.0/7
p35868
sg14
(lp35869
sg2
g35864
sbs(S'quiverkey'
p35870
S'fontconfig_pattern'
p35871
tp35872
(icodemend.demo.code_suggest
Element
p35873
(dp35874
g10
I0
sg11
S'set the properties by parsing a fontconfig pattern .'
p35875
sg12
Vquiverkey.fontconfig_pattern
p35876
sg14
(lp35877
sg2
g35871
sbs(g245
g140
g30138
tp35878
g30134
s(g117
S'solid_capstyle'
p35879
g29626
tp35880
g29622
s(g252
g4340
g546
tp35881
g542
s(g101
S'c'
g21309
tp35882
g21305
s(S'fill'
p35883
S'title'
p35884
tp35885
(icodemend.demo.code_suggest
Element
p35886
(dp35887
g10
I0
sg11
S'set a title for the axes .'
p35888
sg12
Vfill.title
p35889
sg14
(lp35890
sg2
g35884
sbs(S'plot'
p35891
g29814
tp35892
g29804
s(S'errorbar'
p35893
S'x'
tp35894
(icodemend.demo.code_suggest
Element
p35895
(dp35896
g10
I1
sg11
S'plot x versus y with error deltas in yerr and xerr . vertical errorbars are plotted if yerr is not none . horizontal errorbars are plotted if xerr is not none .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y . plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||plot x versus y with error deltas in yerr and xerr . vertical errorbars are plotted if yerr is not none . horizontal errorbars are plotted if xerr is not none .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y .|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .'
p35897
sg12
Verrorbar.x
p35898
sg14
(lp35899
sg2
S'x'
sbs(S'SimpleLineShadow'
p35900
S'alpha'
p35901
tp35902
(icodemend.demo.code_suggest
Element
p35903
(dp35904
g10
I0
sg11
S'the alpha transparency of the created shadow patch . default is 0.3 .'
p35905
sg12
VSimpleLineShadow.alpha
p35906
sg14
(lp35907
sg2
g35901
sbs(S'broken_barh'
p35908
S'xlim'
p35909
tp35910
(icodemend.demo.code_suggest
Element
p35911
(dp35912
g10
I0
sg11
S'set the data limits for the xaxis'
p35913
sg12
Vbroken_barh.xlim
p35914
sg14
(lp35915
sg2
g35909
sbs(g13338
g19538
g20749
tp35916
g20745
s(S'specgram'
p35917
S'Fs'
p35918
tp35919
(icodemend.demo.code_suggest
Element
p35920
(dp35921
g10
I4
sg11
S'the sampling frequency ( samples per time unit ) . it is used to calculate the fourier frequencies , freqs , in cycles per time unit . the default value is 2 .'
p35922
sg12
Vspecgram.Fs
p35923
sg14
(lp35924
(icodemend.demo.code_suggest
Element
p35925
(dp35926
g10
I3
sg11
S''
sg12
Vspecgram.Fs.fs
p35927
sg14
(lp35928
sg2
S'fs'
p35929
sba(icodemend.demo.code_suggest
Element
p35930
(dp35931
g10
I1
sg11
S''
sg12
Vspecgram.Fs.Fs
p35932
sg14
(lp35933
sg2
g7815
sbasg2
g35918
sbs(g101
S's'
g7578
tp35934
g7574
s(S'drange'
p35935
g23079
tp35936
g23074
s(S'semilogy'
p35937
S'None'
p35938
tp35939
(icodemend.demo.code_suggest
Element
p35940
(dp35941
g10
I0
sg11
S'the location of the minor yticks ; none defaults to autosubs , which depend on the number of decades in the plot ; see set_yscale ( ) for details .'
p35942
sg12
Vsemilogy.None
p35943
sg14
(lp35944
sg2
g35938
sbs(g125
g132
S"'k'"
p35945
tp35946
(icodemend.demo.code_suggest
Element
p35947
(dp35948
g10
I15
sg11
S''
sg12
Vaxvline.color.'k'
p35949
sg14
(lp35950
sg2
g35945
sbs(S'rec_join'
p35951
g35126
tp35952
g35121
s(g125
S'x'
g34822
tp35953
g34818
s(S'psd'
p35954
S'xscale'
p35955
tp35956
(icodemend.demo.code_suggest
Element
p35957
(dp35958
g10
I0
sg11
S'set the scaling of the x-axis'
p35959
sg12
Vpsd.xscale
p35960
sg14
(lp35961
sg2
g35955
sbs(S'axhline'
p35962
g3615
tp35963
g3610
s(S'get_unicode_index'
p35964
S'symbol'
p35965
tp35966
(icodemend.demo.code_suggest
Element
p35967
(dp35968
g10
I0
sg11
S"return the integer index ( from the unicode table ) of symbol . symbol can be a single unicode character , a tex command ( i.e. r'pi ' ) , or a type1 symbol name ( i.e. ' phi ' ) ."
p35969
sg12
Vget_unicode_index.symbol
p35970
sg14
(lp35971
sg2
g35965
sbs(g7484
g515
g515
tp35972
g25734
s(g93
g627
S'12'
p35973
tp35974
(icodemend.demo.code_suggest
Element
p35975
(dp35976
g10
I1
sg11
S''
sg12
Vannotate.size.12
p35977
sg14
(lp35978
sg2
g35973
sbsS'is_saving'
p35979
(icodemend.demo.code_suggest
Element
p35980
(dp35981
g10
I0
sg11
S'returns true when the renderer is in the process of saving to a file , rather than rendering for an on-screen buffer .'
p35982
sg12
Vis_saving
p35983
sg14
(lp35984
sg2
g35979
sbs(S'pcolormesh'
p35985
S'url'
p35986
tp35987
(icodemend.demo.code_suggest
Element
p35988
(dp35989
g10
I0
sg11
S'sets the url for the artist'
p35990
sg12
Vpcolormesh.url
p35991
sg14
(lp35992
sg2
g35986
sbs(g1003
S'showbox'
p35993
g1944
tp35994
(icodemend.demo.code_suggest
Element
p35995
(dp35996
g10
I1
sg11
S''
sg12
Vboxplot.showbox.False
p35997
sg14
(lp35998
sg2
g1944
sbsS'set_ylabel'
p35999
(icodemend.demo.code_suggest
Element
p36000
(dp36001
g10
I372
sg11
S'set the label for the yaxis'
p36002
sg12
Vset_ylabel
p36003
sg14
(lp36004
(icodemend.demo.code_suggest
Element
p36005
(dp36006
g10
I3
sg11
S'spacing in points between the label and the x-axis'
p36007
sg12
Vset_ylabel.labelpad
p36008
sg14
(lp36009
(icodemend.demo.code_suggest
Element
p36010
(dp36011
g10
I2
sg11
S''
sg12
Vset_ylabel.labelpad.20
p36012
sg14
(lp36013
sg2
S'20'
p36014
sba(icodemend.demo.code_suggest
Element
p36015
(dp36016
g10
I1
sg11
S''
sg12
Vset_ylabel.labelpad.25
p36017
sg14
(lp36018
sg2
S'25'
p36019
sbasg2
S'labelpad'
p36020
sba(icodemend.demo.code_suggest
Element
p36021
(dp36022
g10
I1
sg11
S'y label'
p36023
sg12
Vset_ylabel.ylabel
p36024
sg14
(lp36025
(icodemend.demo.code_suggest
Element
p36026
(dp36027
g10
I1
sg11
S''
sg12
Vset_ylabel.ylabel.'Y-Value 1'
p36028
sg14
(lp36029
sg2
S"'Y-Value 1'"
p36030
sbasg2
S'ylabel'
p36031
sba(icodemend.demo.code_suggest
Element
p36032
(dp36033
g10
I0
sg11
S'set the font properties that control the text .'
p36034
sg12
Vset_ylabel.fontproperties
p36035
sg14
(lp36036
sg2
S'fontproperties'
p36037
sba(icodemend.demo.code_suggest
Element
p36038
(dp36039
g10
I0
sg11
S'set the ( x , y ) position of the text'
p36040
sg12
Vset_ylabel.position
p36041
sg14
(lp36042
sg2
S'position'
p36043
sba(icodemend.demo.code_suggest
Element
p36044
(dp36045
g10
I0
sg11
S'set text rotation mode .'
p36046
sg12
Vset_ylabel.rotation_mode
p36047
sg14
(lp36048
sg2
S'rotation_mode'
p36049
sba(icodemend.demo.code_suggest
Element
p36050
(dp36051
g10
I0
sg11
S'set the text string s'
p36052
sg12
Vset_ylabel.text
p36053
sg14
(lp36054
sg2
S'text'
p36055
sbag26887
a(icodemend.demo.code_suggest
Element
p36056
(dp36057
g10
I0
sg11
S'set the y position of the text'
p36058
sg12
Vset_ylabel.y
p36059
sg14
(lp36060
sg2
S'y'
sbasg2
g35999
sbs(g101
g4274
g21705
tp36061
g21701
s(S'parse_afm'
p36062
S'dcomposite'
p36063
tp36064
(icodemend.demo.code_suggest
Element
p36065
(dp36066
g10
I0
sg11
S'parse the adobe font metics file in file handle fh . return value is a ( dhead , dcmetrics , dkernpairs , dcomposite ) tuple where dhead is a _ parse_header ( ) dict , dcmetrics is a _ parse_composites ( ) dict , dkernpairs is a _ parse_kern_pairs ( ) dict ( possibly { } ) , and dcomposite is a _ parse_composites ( ) dict ( possibly { } )'
p36067
sg12
Vparse_afm.dcomposite
p36068
sg14
(lp36069
sg2
g36063
sbs(S'bar'
p36070
S'edgecolor'
p36071
tp36072
(icodemend.demo.code_suggest
Element
p36073
(dp36074
g10
I17
sg11
S'the colors of the bar edges'
p36075
sg12
Vbar.edgecolor
p36076
sg14
(lp36077
(icodemend.demo.code_suggest
Element
p36078
(dp36079
g10
I7
sg11
S''
sg12
Vbar.edgecolor.'none'
p36080
sg14
(lp36081
sg2
S"'none'"
p36082
sba(icodemend.demo.code_suggest
Element
p36083
(dp36084
g10
I2
sg11
S''
sg12
Vbar.edgecolor.'black'
p36085
sg14
(lp36086
sg2
S"'black'"
p36087
sba(icodemend.demo.code_suggest
Element
p36088
(dp36089
g10
I1
sg11
S''
sg12
Vbar.edgecolor.''
p36090
sg14
(lp36091
sg2
S"''"
p36092
sbag15256
a(icodemend.demo.code_suggest
Element
p36093
(dp36094
g10
I1
sg11
S''
sg12
Vbar.edgecolor.'blue'
p36095
sg14
(lp36096
sg2
S"'blue'"
p36097
sbag690
a(icodemend.demo.code_suggest
Element
p36098
(dp36099
g10
I1
sg11
S''
sg12
Vbar.edgecolor.'k'
p36100
sg14
(lp36101
sg2
S"'k'"
p36102
sbag22441
a(icodemend.demo.code_suggest
Element
p36103
(dp36104
g10
I1
sg11
S''
sg12
Vbar.edgecolor.color
p36105
sg14
(lp36106
sg2
g132
sbasg2
g36071
sbs(g93
g4800
g25309
tp36107
g25305
s(g125
S'x'
g34817
tp36108
g34813
s(g20919
g7032
g1320
tp36109
g1316
s(S'add_axes'
p36110
S'xticks'
p36111
tp36112
(icodemend.demo.code_suggest
Element
p36113
(dp36114
g10
I1
sg11
S'set the x ticks with list of ticks'
p36115
sg12
Vadd_axes.xticks
p36116
sg14
(lp36117
g26765
asg2
g36111
sbsS'autoscale'
p36118
(icodemend.demo.code_suggest
Element
p36119
(dp36120
g10
I61
sg11
S'autoscale the scalar limits on the norm instance using the current array'
p36121
sg12
Vautoscale
p36122
sg14
(lp36123
g33320
a(icodemend.demo.code_suggest
Element
p36124
(dp36125
g10
I0
sg11
S'set vmin , vmax to min , max of a .'
p36126
sg12
Vautoscale.vmax
p36127
sg14
(lp36128
sg2
S'vmax'
p36129
sba(icodemend.demo.code_suggest
Element
p36130
(dp36131
g10
I0
sg11
S'set vmin , vmax to min , max of a .'
p36132
sg12
Vautoscale.vmin
p36133
sg14
(lp36134
sg2
S'vmin'
p36135
sbasg2
g36118
sbs(S'axhline'
p36136
g3437
tp36137
g3396
sS'set_solid_capstyle'
p36138
(icodemend.demo.code_suggest
Element
p36139
(dp36140
g10
I1
sg11
S'set the cap style for solid linestyles'
p36141
sg12
Vset_solid_capstyle
p36142
sg14
(lp36143
sg2
g36138
sbsS'get_offset_position'
p36144
(icodemend.demo.code_suggest
Element
p36145
(dp36146
g10
I0
sg11
S'returns how offsets are applied for the collection .'
p36147
sg12
Vget_offset_position
p36148
sg14
(lp36149
(icodemend.demo.code_suggest
Element
p36150
(dp36151
g10
I0
sg11
S"returns how offsets are applied for the collection . if offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . if offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
p36152
sg12
Vget_offset_position.offset_position
p36153
sg14
(lp36154
sg2
S'offset_position'
p36155
sbasg2
g36144
sbs(g117
g118
g27651
tp36156
g27647
s(g1205
g13269
g4557
tp36157
g4553
s(g117
g5546
g21063
tp36158
g21059
s(S'figtext'
p36159
g11526
tp36160
g11521
s(g582
g102
g3501
tp36161
g3497
s(S'date2num'
p36162
S'd'
tp36163
(icodemend.demo.code_suggest
Element
p36164
(dp36165
g10
I0
sg11
S'd is either a datetime instance or a sequence of datetimes .'
p36166
sg12
Vdate2num.d
p36167
sg14
(lp36168
sg2
S'd'
sbsS'get_results'
p36169
(icodemend.demo.code_suggest
Element
p36170
(dp36171
g10
I0
sg11
S'get the data needed by the backend to render the math expression . return a backend-specific tuple to return to the backend after all processing is done .'
p36172
sg12
Vget_results
p36173
sg14
(lp36174
sg2
g36169
sbs(S'contour'
p36175
g17815
tp36176
g17810
s(S'errorbar'
p36177
S'uplims'
p36178
tp36179
(icodemend.demo.code_suggest
Element
p36180
(dp36181
g10
I1
sg11
S'these arguments can be used to indicate that a value gives only upper/lower limits . in that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . to use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .'
p36182
sg12
Verrorbar.uplims
p36183
sg14
(lp36184
(icodemend.demo.code_suggest
Element
p36185
(dp36186
g10
I1
sg11
S''
sg12
Verrorbar.uplims.False
p36187
sg14
(lp36188
sg2
g1944
sbasg2
g36178
sbs(g16
g110
g36102
tp36189
g36098
sS'key_press_handler'
p36190
(icodemend.demo.code_suggest
Element
p36191
(dp36192
g10
I1
sg11
S'implement the default mpl key bindings for the canvas and toolbar described at navigation keyboard shortcuts'
p36193
sg12
Vkey_press_handler
p36194
sg14
(lp36195
sg2
g36190
sbs(g117
g118
g28174
tp36196
g28170
s(g324
g8780
g865
tp36197
g9894
sS'set_data'
p36198
(icodemend.demo.code_suggest
Element
p36199
(dp36200
g10
I156
sg11
S'set x and y positions of handles set the x and y data set the image array . set the grid for the pixel centers , and the pixel values .'
p36201
sg12
Vset_data
p36202
sg14
(lp36203
g14671
a(icodemend.demo.code_suggest
Element
p36204
(dp36205
g10
I0
sg11
S'specifying pixel centers'
p36206
sg12
Vset_data.x
p36207
sg14
(lp36208
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p36209
(dp36210
g10
I0
sg11
S'specifying pixel centers'
p36211
sg12
Vset_data.y
p36212
sg14
(lp36213
sg2
S'y'
sbasg2
g36198
sbs(g582
g2392
g3427
tp36214
g3423
s(S'set_yticklabels'
p36215
g18088
tp36216
g18083
sS'on_changed'
p36217
(icodemend.demo.code_suggest
Element
p36218
(dp36219
g10
I39
sg11
S'when the slider value is changed , call func with the new slider position'
p36220
sg12
Von_changed
p36221
sg14
(lp36222
(icodemend.demo.code_suggest
Element
p36223
(dp36224
g10
I0
sg11
S'when the slider value is changed , call func with the new slider position'
p36225
sg12
Von_changed.func
p36226
sg14
(lp36227
sg2
S'func'
p36228
sbasg2
g36217
sbs(S'plotting'
p36229
g15802
tp36230
g15797
s(S'triplot'
p36231
S'scalex'
p36232
tp36233
(icodemend.demo.code_suggest
Element
p36234
(dp36235
g10
I0
sg11
S'kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p36236
sg12
Vtriplot.scalex
p36237
sg14
(lp36238
sg2
g36232
sbs(S'Button'
p36239
g32056
tp36240
g32046
s(g452
g453
g7193
tp36241
g7189
s(S'plot_date'
p36242
g20087
tp36243
g20082
sS'list_fonts'
p36244
(icodemend.demo.code_suggest
Element
p36245
(dp36246
g10
I0
sg11
S'return a list of all fonts matching any of the extensions , possibly upper-cased , found recursively under the directory .'
p36247
sg12
Vlist_fonts
p36248
sg14
(lp36249
sg2
g36244
sbs(g582
g909
S'0'
tp36250
g3459
s(S'draggable'
p36251
S'bbox_to_anchor'
p36252
tp36253
(icodemend.demo.code_suggest
Element
p36254
(dp36255
g10
I0
sg11
S'the update parameter control which parameter of the legend changes when dragged . if update is " loc " , the loc paramter of the legend is changed . if " bbox " , the bbox_to_anchor parameter is changed .'
p36256
sg12
Vdraggable.bbox_to_anchor
p36257
sg14
(lp36258
sg2
g36252
sbsS'win32InstalledFonts'
p36259
(icodemend.demo.code_suggest
Element
p36260
(dp36261
g10
I0
sg11
S'search for fonts in the specified font directory , or use the system directories if none given .'
p36262
sg12
Vwin32InstalledFonts
p36263
sg14
(lp36264
(icodemend.demo.code_suggest
Element
p36265
(dp36266
g10
I0
sg11
S"search for fonts in the specified font directory , or use the system directories if none given . a list of truetype font filenames are returned by default , or afm fonts if fontext = = ' afm ' ."
p36267
sg12
Vwin32InstalledFonts.fontext
p36268
sg14
(lp36269
sg2
S'fontext'
p36270
sbasg2
g36259
sbs(g117
g102
g29201
tp36271
g29197
s(S'rec_groupby'
p36272
S'func'
p36273
tp36274
(icodemend.demo.code_suggest
Element
p36275
(dp36276
g10
I0
sg11
S'stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname . for example :'
p36277
sg12
Vrec_groupby.func
p36278
sg14
(lp36279
sg2
g36273
sbs(S'get_flat_tri_mask'
p36280
S'new_mask'
p36281
tp36282
(icodemend.demo.code_suggest
Element
p36283
(dp36284
g10
I0
sg11
S'returns a mask new_mask which allows to clean the encapsulated triangulation from its border-located flat triangles ( according to their circle_ratios ( ) ) . this mask is meant to be subsequently applied to the triangulation using matplotlib.tri.triangulation.set_mask ( ) . new_mask is an extension of the initial triangulation mask in the sense that an initially masked triangle will remain masked .|||the rationale behind this function is that a delaunay triangulation - of an unstructured set of points - sometimes contains almost flat triangles at its border , leading to artifacts in plots ( especially for high-resolution contouring ) . masked with computed new_mask , the encapsulated triangulation would contain no more unmasked border triangles with a circle ratio below min_circle_ratio , thus improving the mesh quality for subsequent plots or interpolation .|||the new_mask array is computed recursively ; at each step flat triangles are removed only if they share a side with the current mesh border . thus no new holes in the triangulated domain will be created .'
p36285
sg12
Vget_flat_tri_mask.new_mask
p36286
sg14
(lp36287
sg2
g36281
sbs(g252
g253
g14061
tp36288
g14057
s(g245
g3075
S'150'
p36289
tp36290
(icodemend.demo.code_suggest
Element
p36291
(dp36292
g10
I3
sg11
S''
sg12
Vfigure.dpi.150
p36293
sg14
(lp36294
sg2
g36289
sbsS'set_pad'
p36295
(icodemend.demo.code_suggest
Element
p36296
(dp36297
g10
I2
sg11
S'set the tick label pad in points'
p36298
sg12
Vset_pad
p36299
sg14
(lp36300
sg2
g36295
sbs(S'bar'
p36301
S'ecolor'
p36302
tp36303
(icodemend.demo.code_suggest
Element
p36304
(dp36305
g10
I8
sg11
S'specifies the color of errorbar(s ) default : none'
p36306
sg12
Vbar.ecolor
p36307
sg14
(lp36308
(icodemend.demo.code_suggest
Element
p36309
(dp36310
g10
I4
sg11
S''
sg12
Vbar.ecolor.'k'
p36311
sg14
(lp36312
sg2
S"'k'"
p36313
sba(icodemend.demo.code_suggest
Element
p36314
(dp36315
g10
I1
sg11
S''
sg12
Vbar.ecolor.'b'
p36316
sg14
(lp36317
sg2
S"'b'"
p36318
sbag5192
a(icodemend.demo.code_suggest
Element
p36319
(dp36320
g10
I1
sg11
S''
sg12
Vbar.ecolor.'g'
p36321
sg14
(lp36322
sg2
S"'g'"
p36323
sba(icodemend.demo.code_suggest
Element
p36324
(dp36325
g10
I1
sg11
S''
sg12
Vbar.ecolor.'r'
p36326
sg14
(lp36327
sg2
S"'r'"
p36328
sbasg2
g36302
sbs(g252
g1010
S'8'
tp36329
g13948
s(g1170
g1257
S'binBoundaries'
p36330
tp36331
(icodemend.demo.code_suggest
Element
p36332
(dp36333
g10
I2
sg11
S''
sg12
Vhist.bins.binBoundaries
p36334
sg14
(lp36335
sg2
g36330
sbs(g332
S'multialignment'
p36336
S"'left'"
p36337
tp36338
(icodemend.demo.code_suggest
Element
p36339
(dp36340
g10
I1
sg11
S''
sg12
Vtext.multialignment.'left'
p36341
sg14
(lp36342
sg2
g36337
sbs(g8682
g102
g5994
tp36343
g5990
s(S'phase_spectrum'
p36344
S'markeredgewidth'
p36345
tp36346
(icodemend.demo.code_suggest
Element
p36347
(dp36348
g10
I0
sg11
S'set the marker edge width in points'
p36349
sg12
Vphase_spectrum.markeredgewidth
p36350
sg14
(lp36351
sg2
g36345
sbs(S'figtext'
p36352
g11233
tp36353
g11228
s(S'griddata'
p36354
S'xi, yi'
p36355
tp36356
(icodemend.demo.code_suggest
Element
p36357
(dp36358
g10
I0
sg11
S'coordinates of grid points to interpolate to .'
p36359
sg12
Vgriddata.xi, yi
p36360
sg14
(lp36361
sg2
g36355
sbs(g252
g24217
g14468
tp36362
g14464
s(g117
S'drawstyle'
p36363
g29741
tp36364
g29737
s(g324
g785
g9781
tp36365
g9777
s(S'csd'
p36366
S'snap'
p36367
tp36368
(icodemend.demo.code_suggest
Element
p36369
(dp36370
g10
I0
sg11
S'sets the snap setting which may be'
p36371
sg12
Vcsd.snap
p36372
sg14
(lp36373
sg2
g36367
sbsS'HPacker'
p36374
(icodemend.demo.code_suggest
Element
p36375
(dp36376
g10
I2
sg11
S''
sg12
VHPacker
p36377
sg14
(lp36378
g35669
a(icodemend.demo.code_suggest
Element
p36379
(dp36380
g10
I2
sg11
S'boundary pad .'
p36381
sg12
VHPacker.pad
p36382
sg14
(lp36383
(icodemend.demo.code_suggest
Element
p36384
(dp36385
g10
I2
sg11
S''
sg12
VHPacker.pad.0
p36386
sg14
(lp36387
sg2
S'0'
sbasg2
S'pad'
p36388
sba(icodemend.demo.code_suggest
Element
p36389
(dp36390
g10
I2
sg11
S'spacing between items .'
p36391
sg12
VHPacker.sep
p36392
sg14
(lp36393
g15064
asg2
S'sep'
p36394
sba(icodemend.demo.code_suggest
Element
p36395
(dp36396
g10
I0
sg11
S'width and height of the container box , calculated if none .'
p36397
sg12
VHPacker.height
p36398
sg14
(lp36399
sg2
S'height'
p36400
sba(icodemend.demo.code_suggest
Element
p36401
(dp36402
g10
I0
sg11
S'packing mode .'
p36403
sg12
VHPacker.mode
p36404
sg14
(lp36405
sg2
S'mode'
p36406
sbasg2
g36374
sbs(g4998
g4459
S'-3'
p36407
tp36408
(icodemend.demo.code_suggest
Element
p36409
(dp36410
g10
I1
sg11
S''
sg12
Vpcolormesh.vmin.-3
p36411
sg14
(lp36412
sg2
g36407
sbs(g101
g4274
g21646
tp36413
g21642
s(S'add_axes'
p36414
S'clip_box'
p36415
tp36416
(icodemend.demo.code_suggest
Element
p36417
(dp36418
g10
I0
sg11
S"set the artist 's clip bbox ."
p36419
sg12
Vadd_axes.clip_box
p36420
sg14
(lp36421
sg2
g36415
sbs(S'axvline'
p36422
S'markeredgewidth'
p36423
tp36424
(icodemend.demo.code_suggest
Element
p36425
(dp36426
g10
I0
sg11
S'set the marker edge width in points'
p36427
sg12
Vaxvline.markeredgewidth
p36428
sg14
(lp36429
sg2
g36423
sbs(g117
g118
g28284
tp36430
g28280
s(g117
g4274
g28963
tp36431
g28959
s(g13284
g13486
S"'left'"
p36432
tp36433
(icodemend.demo.code_suggest
Element
p36434
(dp36435
g10
I1
sg11
S''
sg12
Vsuptitle.horizontalalignment.'left'
p36436
sg14
(lp36437
sg2
g36432
sbs(g1170
g1257
S'num_bins'
p36438
tp36439
(icodemend.demo.code_suggest
Element
p36440
(dp36441
g10
I1
sg11
S''
sg12
Vhist.bins.num_bins
p36442
sg14
(lp36443
sg2
g36438
sbsS'set_verts_and_codes'
p36444
(icodemend.demo.code_suggest
Element
p36445
(dp36446
g10
I0
sg11
S'this allows one to initialize vertices with path codes .'
p36447
sg12
Vset_verts_and_codes
p36448
sg14
(lp36449
sg2
g36444
sbs(S'fill_between'
p36450
S'step'
p36451
tp36452
(icodemend.demo.code_suggest
Element
p36453
(dp36454
g10
I0
sg11
S'if not none , fill with step logic .'
p36455
sg12
Vfill_between.step
p36456
sg14
(lp36457
sg2
g36451
sbs(S'figtext'
p36458
g11347
tp36459
g11342
sS'set_patchB'
p36460
(icodemend.demo.code_suggest
Element
p36461
(dp36462
g10
I0
sg11
S'set the begin patch'
p36463
sg12
Vset_patchB
p36464
sg14
(lp36465
sg2
g36460
sbsS'set_patchA'
p36466
(icodemend.demo.code_suggest
Element
p36467
(dp36468
g10
I0
sg11
S'set the begin patch .'
p36469
sg12
Vset_patchA
p36470
sg14
(lp36471
sg2
g36466
sbs(S'set_data'
p36472
S'y'
tp36473
g36209
s(S'tricontourf'
p36474
g11630
tp36475
g11625
s(g16
g2392
S'0'
tp36476
g32371
s(S'set_ylabel'
p36477
S'labelpad'
p36478
g36019
tp36479
g36015
s(S'barbs'
p36480
S'barb_increments'
p36481
tp36482
(icodemend.demo.code_suggest
Element
p36483
(dp36484
g10
I0
sg11
S"a dictionary of increments specifying values to associate with different parts of the barb . only those values one wishes to override need to be included . ' half ' - half barbs ( default is 5 ) ' full ' - full barbs ( default is 10 ) ' flag ' - flags ( default is 50 )"
p36485
sg12
Vbarbs.barb_increments
p36486
sg14
(lp36487
sg2
g36481
sbs(S'violin'
p36488
g5619
tp36489
g5614
s(S'cohere'
p36490
S'Fs'
p36491
tp36492
(icodemend.demo.code_suggest
Element
p36493
(dp36494
g10
I0
sg11
S'the sampling frequency ( samples per time unit ) . it is used to calculate the fourier frequencies , freqs , in cycles per time unit . the default value is 2 .'
p36495
sg12
Vcohere.Fs
p36496
sg14
(lp36497
sg2
g36491
sbs(g245
g140
g30558
tp36498
g30554
s(g117
g118
g28074
tp36499
g28070
s(S'barh'
p36500
S'xlolims'
p36501
tp36502
(icodemend.demo.code_suggest
Element
p36503
(dp36504
g10
I0
sg11
S'these arguments can be used to indicate that a value gives only upper/lower limits . in that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . to use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .'
p36505
sg12
Vbarh.xlolims
p36506
sg14
(lp36507
sg2
g36501
sbs(S'grid'
p36508
S'_interpolation_steps'
p36509
tp36510
(icodemend.demo.code_suggest
Element
p36511
(dp36512
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p36513
sg12
Vgrid._interpolation_steps
p36514
sg14
(lp36515
sg2
g36509
sbs(g324
g785
g9377
tp36516
g9373
s(S'clabel'
p36517
g14916
tp36518
g14911
sS'update_keymap'
p36519
(icodemend.demo.code_suggest
Element
p36520
(dp36521
g10
I0
sg11
S'set the keymap to associate with the specified tool'
p36522
sg12
Vupdate_keymap
p36523
sg14
(lp36524
(icodemend.demo.code_suggest
Element
p36525
(dp36526
g10
I0
sg11
S'name of the tool'
p36527
sg12
Vupdate_keymap.name
p36528
sg14
(lp36529
sg2
S'name'
p36530
sbasg2
g36519
sbs(S'arrow'
p36531
g2737
tp36532
g2732
s(g324
g10116
g9010
tp36533
g9006
s(S'axhline'
p36534
g3813
tp36535
g3808
s(g514
g325
g9094
tp36536
(icodemend.demo.code_suggest
Element
p36537
(dp36538
g10
I2
sg11
S''
sg12
Vpcolor.cmap.cm
p36539
sg14
(lp36540
sg2
g9094
sbs(g452
g1149
S"'black'"
p36541
tp36542
(icodemend.demo.code_suggest
Element
p36543
(dp36544
g10
I2
sg11
S''
sg12
Verrorbar.ecolor.'black'
p36545
sg14
(lp36546
sg2
g36541
sbs(g245
g140
g30483
tp36547
g30479
s(g117
g118
g28359
tp36548
g28355
sS'finish'
p36549
(icodemend.demo.code_suggest
Element
p36550
(dp36551
g10
I1
sg11
S'adjust the axes and return a list of information about the sankey subdiagram(s ) . finish any processing for writing the movie .'
p36552
sg12
Vfinish
p36553
sg14
(lp36554
sg2
g36549
sbsS'closest'
p36555
(icodemend.demo.code_suggest
Element
p36556
(dp36557
g10
I0
sg11
S'return index and pixel distance to closest index .'
p36558
sg12
Vclosest
p36559
sg14
(lp36560
sg2
g36555
sbs(S'legend'
p36561
g14506
tp36562
g14488
s(S'set_xticklabels'
p36563
g17055
tp36564
g17050
s(S'bar'
p36565
S'tick_label'
p36566
tp36567
(icodemend.demo.code_suggest
Element
p36568
(dp36569
g10
I0
sg11
S'the tick labels of the bars default : none'
p36570
sg12
Vbar.tick_label
p36571
sg14
(lp36572
sg2
g36566
sbs(S'pcolormesh'
p36573
S'title'
p36574
tp36575
(icodemend.demo.code_suggest
Element
p36576
(dp36577
g10
I0
sg11
S'set a title for the axes .'
p36578
sg12
Vpcolormesh.title
p36579
sg14
(lp36580
sg2
g36574
sbs(S'figtext'
p36581
g11407
tp36582
g11402
s(g245
g140
g30168
tp36583
g30164
s(S'gca'
p36584
S'url'
p36585
tp36586
(icodemend.demo.code_suggest
Element
p36587
(dp36588
g10
I0
sg11
S'sets the url for the artist'
p36589
sg12
Vgca.url
p36590
sg14
(lp36591
sg2
g36585
sbs(g93
g4800
g25574
tp36592
g25570
s(S'boxplot'
p36593
S'whiskerprops'
p36594
tp36595
(icodemend.demo.code_suggest
Element
p36596
(dp36597
g10
I1
sg11
S'if provided , will set the plotting style of the whiskers'
p36598
sg12
Vboxplot.whiskerprops
p36599
sg14
(lp36600
(icodemend.demo.code_suggest
Element
p36601
(dp36602
g10
I1
sg11
S''
sg12
Vboxplot.whiskerprops.{'linewidth': 0}
p36603
sg14
(lp36604
sg2
S"{'linewidth': 0}"
p36605
sbasg2
g36594
sbs(g117
g118
g28029
tp36606
g28025
s(g117
g118
g27789
tp36607
g27785
s(S'set_yticklabels'
p36608
g18309
tp36609
g18304
s(g332
g3084
S'ChineseFont1'
p36610
tp36611
(icodemend.demo.code_suggest
Element
p36612
(dp36613
g10
I1
sg11
S''
sg12
Vtext.fontproperties.ChineseFont1
p36614
sg14
(lp36615
sg2
g36610
sbsS'demean'
p36616
(icodemend.demo.code_suggest
Element
p36617
(dp36618
g10
I0
sg11
S'return x minus its mean along the specified axis .'
p36619
sg12
Vdemean
p36620
sg14
(lp36621
sg2
g36616
sbs(g2814
g118
S"'Entladen'"
p36622
tp36623
(icodemend.demo.code_suggest
Element
p36624
(dp36625
g10
I1
sg11
S''
sg12
Vadd.label.'Entladen'
p36626
sg14
(lp36627
sg2
g36622
sbs(g117
g4274
g28973
tp36628
g28969
s(S'rec_join'
p36629
g35132
tp36630
g35127
s(S'plot_day_summary_ohlc'
p36631
S'ticksize'
p36632
tp36633
(icodemend.demo.code_suggest
Element
p36634
(dp36635
g10
I0
sg11
S'open/close tick marker in points'
p36636
sg12
Vplot_day_summary_ohlc.ticksize
p36637
sg14
(lp36638
sg2
g36632
sbsS'quiverkey'
p36639
(icodemend.demo.code_suggest
Element
p36640
(dp36641
g10
I4
sg11
S'add a key to a quiver plot .'
p36642
sg12
Vquiverkey
p36643
sg14
(lp36644
(icodemend.demo.code_suggest
Element
p36645
(dp36646
g10
I3
sg11
S"coordinate system and units for x , y : ' axes ' and ' figure ' are normalized coordinate systems with 0,0 in the lower left and 1,1 in the upper right ; ' data ' are the axes data coordinates ( used for the locations of the vectors in the quiver plot itself ) ; ' inches ' is position in the figure in inches , with 0,0 at the lower left corner .|||the positioning of the key depends on x , y , coordinates , and labelpos . if labelpos is ' n ' or ' s ' , x , y give the position of the middle of the key arrow . if labelpos is ' e ' , x , y positions the head , and if labelpos is ' w ' , x , y positions the tail ; in either of these two cases , x , y is somewhere in the middle of the arrow+label key object ."
p36647
sg12
Vquiverkey.coordinates
p36648
sg14
(lp36649
(icodemend.demo.code_suggest
Element
p36650
(dp36651
g10
I3
sg11
S''
sg12
Vquiverkey.coordinates.'data'
p36652
sg14
(lp36653
sg2
S"'data'"
p36654
sbasg2
S'coordinates'
p36655
sbag16350
a(icodemend.demo.code_suggest
Element
p36656
(dp36657
g10
I1
sg11
S"position the label above , below , to the right , to the left of the arrow , respectively .|||the positioning of the key depends on x , y , coordinates , and labelpos . if labelpos is ' n ' or ' s ' , x , y give the position of the middle of the key arrow . if labelpos is ' e ' , x , y positions the head , and if labelpos is ' w ' , x , y positions the tail ; in either of these two cases , x , y is somewhere in the middle of the arrow+label key object ."
p36658
sg12
Vquiverkey.labelpos
p36659
sg14
(lp36660
(icodemend.demo.code_suggest
Element
p36661
(dp36662
g10
I1
sg11
S''
sg12
Vquiverkey.labelpos.'W'
p36663
sg14
(lp36664
sg2
S"'W'"
p36665
sbasg2
S'labelpos'
p36666
sba(icodemend.demo.code_suggest
Element
p36667
(dp36668
g10
I0
sg11
S'any additional keyword arguments are used to override vector properties taken from q .'
p36669
sg12
Vquiverkey.Q
p36670
sg14
(lp36671
sg2
S'Q'
sba(icodemend.demo.code_suggest
Element
p36672
(dp36673
g10
I0
sg11
S"the positioning of the key depends on x , y , coordinates , and labelpos . if labelpos is ' n ' or ' s ' , x , y give the position of the middle of the key arrow . if labelpos is ' e ' , x , y positions the head , and if labelpos is ' w ' , x , y positions the tail ; in either of these two cases , x , y is somewhere in the middle of the arrow+label key object ."
p36674
sg12
Vquiverkey.X
p36675
sg14
(lp36676
sg2
S'X'
sba(icodemend.demo.code_suggest
Element
p36677
(dp36678
g10
I0
sg11
S"the positioning of the key depends on x , y , coordinates , and labelpos . if labelpos is ' n ' or ' s ' , x , y give the position of the middle of the key arrow . if labelpos is ' e ' , x , y positions the head , and if labelpos is ' w ' , x , y positions the tail ; in either of these two cases , x , y is somewhere in the middle of the arrow+label key object ."
p36679
sg12
Vquiverkey.Y
p36680
sg14
(lp36681
sg2
S'Y'
sba(icodemend.demo.code_suggest
Element
p36682
(dp36683
g10
I0
sg11
S'overrides face and edge colors from q .'
p36684
sg12
Vquiverkey.color
p36685
sg14
(lp36686
sg2
S'color'
p36687
sbag35873
a(icodemend.demo.code_suggest
Element
p36688
(dp36689
g10
I0
sg11
S'defaults to default text color .'
p36690
sg12
Vquiverkey.labelcolor
p36691
sg14
(lp36692
sg2
S'labelcolor'
p36693
sba(icodemend.demo.code_suggest
Element
p36694
(dp36695
g10
I0
sg11
S'distance in inches between the arrow and the label . default is 0.1'
p36696
sg12
Vquiverkey.labelsep
p36697
sg14
(lp36698
sg2
S'labelsep'
p36699
sbasg2
g36639
sbs(g93
g18604
g22557
tp36700
g22553
s(g101
g325
g21764
tp36701
g21760
s(S'quiver'
p36702
g30889
tp36703
g30879
s(S'contourf'
p36704
S'linestyles'
p36705
tp36706
(icodemend.demo.code_suggest
Element
p36707
(dp36708
g10
I0
sg11
S"if linestyles is none , the default is ' solid ' unless the lines are monochrome . in that case , negative contours will take their linestyle from the matplotlibrc contour.negative_linestyle setting . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . if this iterable is shorter than the number of contour levels it will be repeated as necessary ."
p36709
sg12
Vcontourf.linestyles
p36710
sg14
(lp36711
sg2
g36705
sbsS'segment_hits'
p36712
(icodemend.demo.code_suggest
Element
p36713
(dp36714
g10
I0
sg11
S'determine if any line segments are within radius of a point .'
p36715
sg12
Vsegment_hits
p36716
sg14
(lp36717
sg2
g36712
sbs(g93
g161
S'(7, 5)'
p36718
tp36719
(icodemend.demo.code_suggest
Element
p36720
(dp36721
g10
I2
sg11
S''
sg12
Vannotate.xy.(7, 5)
p36722
sg14
(lp36723
sg2
g36718
sbs(g117
g4163
g11094
tp36724
g11090
s(g245
g3075
S'1080'
p36725
tp36726
(icodemend.demo.code_suggest
Element
p36727
(dp36728
g10
I1
sg11
S''
sg12
Vfigure.dpi.1080
p36729
sg14
(lp36730
sg2
g36725
sbs(g4
g26135
S"' '"
p36731
tp36732
(icodemend.demo.code_suggest
Element
p36733
(dp36734
g10
I2
sg11
S''
sg12
Vstem.markerfmt.' '
p36735
sg14
(lp36736
sg2
g36731
sbs(g101
S'c'
S'C'
tp36737
g21421
s(S'AnchoredText'
p36738
S's'
tp36739
(icodemend.demo.code_suggest
Element
p36740
(dp36741
g10
I0
sg11
S'text .'
p36742
sg12
VAnchoredText.s
p36743
sg14
(lp36744
sg2
S's'
sbs(S'set_yticklabels'
p36745
g18344
tp36746
g18339
s(g452
g1149
g865
tp36747
(icodemend.demo.code_suggest
Element
p36748
(dp36749
g10
I1
sg11
S''
sg12
Verrorbar.ecolor.None
p36750
sg14
(lp36751
sg2
g865
sbs(S'figtext'
p36752
g11365
tp36753
g11360
sS'set_label_coords'
p36754
(icodemend.demo.code_suggest
Element
p36755
(dp36756
g10
I11
sg11
S'set the coordinates of the label .'
p36757
sg12
Vset_label_coords
p36758
sg14
(lp36759
sg2
g36754
sbs(g16
g17
g17
tp36760
(icodemend.demo.code_suggest
Element
p36761
(dp36762
g10
I22
sg11
S''
sg12
Vbar.width.width
p36763
sg14
(lp36764
sg2
g17
sbsS'add_callback'
p36765
(icodemend.demo.code_suggest
Element
p36766
(dp36767
g10
I5
sg11
S"adds a callback function that will be called whenever one of the artist 's properties changes ."
p36768
sg12
Vadd_callback
p36769
sg14
(lp36770
(icodemend.demo.code_suggest
Element
p36771
(dp36772
g10
I0
sg11
S'replace the contains test used by this artist .'
p36773
sg12
Vadd_callback.contains
p36774
sg14
(lp36775
sg2
S'contains'
p36776
sbag24065
ag14990
a(icodemend.demo.code_suggest
Element
p36777
(dp36778
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p36779
sg12
Vadd_callback.picker
p36780
sg14
(lp36781
sg2
S'picker'
p36782
sbag31978
asg2
g36765
sbs(g252
g1010
S'9'
tp36783
g13944
s(S'errorbar'
p36784
S'sketch_params'
p36785
tp36786
(icodemend.demo.code_suggest
Element
p36787
(dp36788
g10
I0
sg11
S'sets the sketch parameters .'
p36789
sg12
Verrorbar.sketch_params
p36790
sg14
(lp36791
sg2
g36785
sbs(g101
g2392
S'1'
tp36792
g15675
sS'get_data_interval'
p36793
(icodemend.demo.code_suggest
Element
p36794
(dp36795
g10
I0
sg11
S'return the interval instance for this axis data limits'
p36796
sg12
Vget_data_interval
p36797
sg14
(lp36798
sg2
g36793
sbs(g16
g489
S'0.6'
p36799
tp36800
(icodemend.demo.code_suggest
Element
p36801
(dp36802
g10
I2
sg11
S''
sg12
Vbar.bottom.0/6
p36803
sg14
(lp36804
sg2
g36799
sbsS'psd'
p36805
(icodemend.demo.code_suggest
Element
p36806
(dp36807
g10
I6
sg11
S'plot the power spectral density .'
p36808
sg12
Vpsd
p36809
sg14
(lp36810
(icodemend.demo.code_suggest
Element
p36811
(dp36812
g10
I2
sg11
S"the power spectral density by welch 's average periodogram method . the vector x is divided into nfft length segments . each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . the of each segment are averaged to compute , with a scaling to correct for power loss due to windowing .|||a function or a vector of length nfft . to create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. the default is window_hanning ( ) . if a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
p36813
sg12
Vpsd.window
p36814
sg14
(lp36815
(icodemend.demo.code_suggest
Element
p36816
(dp36817
g10
I1
sg11
S''
sg12
Vpsd.window.blackman
p36818
sg14
(lp36819
sg2
S'blackman'
p36820
sbasg2
S'window'
p36821
sba(icodemend.demo.code_suggest
Element
p36822
(dp36823
g10
I1
sg11
S'the sampling frequency ( samples per time unit ) . it is used to calculate the fourier frequencies , freqs , in cycles per time unit . the default value is 2 .'
p36824
sg12
Vpsd.Fs
p36825
sg14
(lp36826
(icodemend.demo.code_suggest
Element
p36827
(dp36828
g10
I1
sg11
S''
sg12
Vpsd.Fs.sampleRate
p36829
sg14
(lp36830
sg2
S'sampleRate'
p36831
sbasg2
S'Fs'
p36832
sba(icodemend.demo.code_suggest
Element
p36833
(dp36834
g10
I1
sg11
S"the power spectral density by welch 's average periodogram method . the vector x is divided into nfft length segments . each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . the of each segment are averaged to compute , with a scaling to correct for power loss due to windowing .|||if len(x ) < nfft , it will be zero padded to nfft ."
p36835
sg12
Vpsd.NFFT
p36836
sg14
(lp36837
g27322
asg2
S'NFFT'
p36838
sba(icodemend.demo.code_suggest
Element
p36839
(dp36840
g10
I0
sg11
S'if return_line is false , returns the tuple ( pxx , freqs ) . if return_line is true , returns the tuple ( pxx , freqs . line ) :|||for plotting , the power is plotted as for decibels , though pxx itself is returned .'
p36841
sg12
Vpsd.Pxx
p36842
sg14
(lp36843
sg2
S'Pxx'
p36844
sbag15237
a(icodemend.demo.code_suggest
Element
p36845
(dp36846
g10
I0
sg11
S'set agg_filter fuction .'
p36847
sg12
Vpsd.agg_filter
p36848
sg14
(lp36849
sg2
S'agg_filter'
p36850
sba(icodemend.demo.code_suggest
Element
p36851
(dp36852
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p36853
sg12
Vpsd.alpha
p36854
sg14
(lp36855
sg2
S'alpha'
p36856
sbag26129
a(icodemend.demo.code_suggest
Element
p36857
(dp36858
g10
I0
sg11
S"set the artist 's animation state ."
p36859
sg12
Vpsd.animated
p36860
sg14
(lp36861
sg2
S'animated'
p36862
sba(icodemend.demo.code_suggest
Element
p36863
(dp36864
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p36865
sg12
Vpsd.antialiased
p36866
sg14
(lp36867
sg2
S'antialiased'
p36868
sba(icodemend.demo.code_suggest
Element
p36869
(dp36870
g10
I0
sg11
S'aspect'
p36871
sg12
Vpsd.aspect
p36872
sg14
(lp36873
sg2
S'aspect'
p36874
sba(icodemend.demo.code_suggest
Element
p36875
(dp36876
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p36877
sg12
Vpsd.axes
p36878
sg14
(lp36879
sg2
S'axes'
p36880
sba(icodemend.demo.code_suggest
Element
p36881
(dp36882
g10
I0
sg11
S"set the artist 's clip bbox ."
p36883
sg12
Vpsd.clip_box
p36884
sg14
(lp36885
sg2
S'clip_box'
p36886
sba(icodemend.demo.code_suggest
Element
p36887
(dp36888
g10
I0
sg11
S'set whether artist uses clipping .'
p36889
sg12
Vpsd.clip_on
p36890
sg14
(lp36891
sg2
S'clip_on'
p36892
sba(icodemend.demo.code_suggest
Element
p36893
(dp36894
g10
I0
sg11
S"set the artist 's clip path , which may be"
p36895
sg12
Vpsd.clip_path
p36896
sg14
(lp36897
sg2
S'clip_path'
p36898
sba(icodemend.demo.code_suggest
Element
p36899
(dp36900
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p36901
sg12
Vpsd.closed
p36902
sg14
(lp36903
sg2
S'closed'
p36904
sbag14784
a(icodemend.demo.code_suggest
Element
p36905
(dp36906
g10
I0
sg11
S'set the color of the line'
p36907
sg12
Vpsd.color
p36908
sg14
(lp36909
sg2
S'color'
p36910
sba(icodemend.demo.code_suggest
Element
p36911
(dp36912
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p36913
sg12
Vpsd.color_cycle
p36914
sg14
(lp36915
sg2
S'color_cycle'
p36916
sbag12089
a(icodemend.demo.code_suggest
Element
p36917
(dp36918
g10
I0
sg11
S'set the cursor property as'
p36919
sg12
Vpsd.cursor_props
p36920
sg14
(lp36921
sg2
S'cursor_props'
p36922
sba(icodemend.demo.code_suggest
Element
p36923
(dp36924
g10
I0
sg11
S'set the cap style for dashed linestyles'
p36925
sg12
Vpsd.dash_capstyle
p36926
sg14
(lp36927
sg2
S'dash_capstyle'
p36928
sba(icodemend.demo.code_suggest
Element
p36929
(dp36930
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p36931
sg12
Vpsd.dash_joinstyle
p36932
sg14
(lp36933
sg2
S'dash_joinstyle'
p36934
sba(icodemend.demo.code_suggest
Element
p36935
(dp36936
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p36937
sg12
Vpsd.dashes
p36938
sg14
(lp36939
sg2
S'dashes'
p36940
sba(icodemend.demo.code_suggest
Element
p36941
(dp36942
g10
I0
sg11
S"the power spectral density by welch 's average periodogram method . the vector x is divided into nfft length segments . each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . the of each segment are averaged to compute , with a scaling to correct for power loss due to windowing ."
p36943
sg12
Vpsd.detrend
p36944
sg14
(lp36945
sg2
S'detrend'
p36946
sba(icodemend.demo.code_suggest
Element
p36947
(dp36948
g10
I0
sg11
S'set the drawstyle of the plot'
p36949
sg12
Vpsd.drawstyle
p36950
sg14
(lp36951
sg2
S'drawstyle'
p36952
sba(icodemend.demo.code_suggest
Element
p36953
(dp36954
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p36955
sg12
Vpsd.figure
p36956
sg14
(lp36957
sg2
S'figure'
p36958
sba(icodemend.demo.code_suggest
Element
p36959
(dp36960
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p36961
sg12
Vpsd.fillstyle
p36962
sg14
(lp36963
sg2
S'fillstyle'
p36964
sbag35146
a(icodemend.demo.code_suggest
Element
p36965
(dp36966
g10
I0
sg11
S'sets the ( group ) id for the artist'
p36967
sg12
Vpsd.gid
p36968
sg14
(lp36969
sg2
S'gid'
p36970
sba(icodemend.demo.code_suggest
Element
p36971
(dp36972
g10
I0
sg11
S'set the hatching pattern'
p36973
sg12
Vpsd.hatch
p36974
sg14
(lp36975
sg2
S'hatch'
p36976
sba(icodemend.demo.code_suggest
Element
p36977
(dp36978
g10
I0
sg11
S'set the label to s for auto legend .'
p36979
sg12
Vpsd.label
p36980
sg14
(lp36981
sg2
S'label'
p36982
sba(icodemend.demo.code_suggest
Element
p36983
(dp36984
g10
I0
sg11
S'if return_line is false , returns the tuple ( pxx , freqs ) . if return_line is true , returns the tuple ( pxx , freqs . line ) :'
p36985
sg12
Vpsd.line
p36986
sg14
(lp36987
sg2
S'line'
p36988
sba(icodemend.demo.code_suggest
Element
p36989
(dp36990
g10
I0
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p36991
sg12
Vpsd.linestyle
p36992
sg14
(lp36993
sg2
S'linestyle'
p36994
sbag32101
ag6677
a(icodemend.demo.code_suggest
Element
p36995
(dp36996
g10
I0
sg11
S'set the marker edge color'
p36997
sg12
Vpsd.markeredgecolor
p36998
sg14
(lp36999
sg2
S'markeredgecolor'
p37000
sba(icodemend.demo.code_suggest
Element
p37001
(dp37002
g10
I0
sg11
S'set the marker edge width in points'
p37003
sg12
Vpsd.markeredgewidth
p37004
sg14
(lp37005
sg2
S'markeredgewidth'
p37006
sba(icodemend.demo.code_suggest
Element
p37007
(dp37008
g10
I0
sg11
S'set the marker face color .'
p37009
sg12
Vpsd.markerfacecolor
p37010
sg14
(lp37011
sg2
S'markerfacecolor'
p37012
sba(icodemend.demo.code_suggest
Element
p37013
(dp37014
g10
I0
sg11
S'set the alternate marker face color .'
p37015
sg12
Vpsd.markerfacecoloralt
p37016
sg14
(lp37017
sg2
S'markerfacecoloralt'
p37018
sbag11842
ag26592
ag34597
ag23273
ag23103
a(icodemend.demo.code_suggest
Element
p37019
(dp37020
g10
I0
sg11
S'sets the pick radius used for containment tests'
p37021
sg12
Vpsd.pickradius
p37022
sg14
(lp37023
sg2
S'pickradius'
p37024
sbag15466
ag33372
ag7499
ag33225
ag32130
a(icodemend.demo.code_suggest
Element
p37025
(dp37026
g10
I0
sg11
S"specifies which sides of the spectrum to return . default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided ."
p37027
sg12
Vpsd.sides
p37028
sg14
(lp37029
sg2
S'sides'
p37030
sba(icodemend.demo.code_suggest
Element
p37031
(dp37032
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p37033
sg12
Vpsd.size_inches
p37034
sg14
(lp37035
sg2
S'size_inches'
p37036
sba(icodemend.demo.code_suggest
Element
p37037
(dp37038
g10
I0
sg11
S'sets the sketch parameters .'
p37039
sg12
Vpsd.sketch_params
p37040
sg14
(lp37041
sg2
S'sketch_params'
p37042
sba(icodemend.demo.code_suggest
Element
p37043
(dp37044
g10
I0
sg11
S'sets the snap setting which may be'
p37045
sg12
Vpsd.snap
p37046
sg14
(lp37047
sg2
S'snap'
p37048
sba(icodemend.demo.code_suggest
Element
p37049
(dp37050
g10
I0
sg11
S'set the cap style for solid linestyles'
p37051
sg12
Vpsd.solid_capstyle
p37052
sg14
(lp37053
sg2
S'solid_capstyle'
p37054
sbag34128
a(icodemend.demo.code_suggest
Element
p37055
(dp37056
g10
I0
sg11
S'set a title for the axes .'
p37057
sg12
Vpsd.title
p37058
sg14
(lp37059
sg2
S'title'
p37060
sba(icodemend.demo.code_suggest
Element
p37061
(dp37062
g10
I0
sg11
S'set the transformation instance used by this artist'
p37063
sg12
Vpsd.transform
p37064
sg14
(lp37065
sg2
S'transform'
p37066
sba(icodemend.demo.code_suggest
Element
p37067
(dp37068
g10
I0
sg11
S'sets the url for the artist'
p37069
sg12
Vpsd.url
p37070
sg14
(lp37071
sg2
S'url'
p37072
sba(icodemend.demo.code_suggest
Element
p37073
(dp37074
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p37075
sg12
Vpsd.vertices
p37076
sg14
(lp37077
sg2
S'vertices'
p37078
sba(icodemend.demo.code_suggest
Element
p37079
(dp37080
g10
I0
sg11
S"set the artist 's visiblity ."
p37081
sg12
Vpsd.visible
p37082
sg14
(lp37083
sg2
S'visible'
p37084
sba(icodemend.demo.code_suggest
Element
p37085
(dp37086
g10
I0
sg11
S"the power spectral density by welch 's average periodogram method . the vector x is divided into nfft length segments . each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . the of each segment are averaged to compute , with a scaling to correct for power loss due to windowing .|||if len(x ) < nfft , it will be zero padded to nfft ."
p37087
sg12
Vpsd.x
p37088
sg14
(lp37089
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p37090
(dp37091
g10
I0
sg11
S'set the data np.array for x'
p37092
sg12
Vpsd.xdata
p37093
sg14
(lp37094
sg2
S'xdata'
p37095
sba(icodemend.demo.code_suggest
Element
p37096
(dp37097
g10
I0
sg11
S'set the label for the xaxis .'
p37098
sg12
Vpsd.xlabel
p37099
sg14
(lp37100
sg2
S'xlabel'
p37101
sbag3229
ag32596
ag35957
ag26920
a(icodemend.demo.code_suggest
Element
p37102
(dp37103
g10
I0
sg11
S'set the x ticks with list of ticks'
p37104
sg12
Vpsd.xticks
p37105
sg14
(lp37106
sg2
S'xticks'
p37107
sba(icodemend.demo.code_suggest
Element
p37108
(dp37109
g10
I0
sg11
S'set the data np.array for y'
p37110
sg12
Vpsd.ydata
p37111
sg14
(lp37112
sg2
S'ydata'
p37113
sbag6852
ag31718
ag26819
ag33621
a(icodemend.demo.code_suggest
Element
p37114
(dp37115
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p37116
sg12
Vpsd.yticklabels
p37117
sg14
(lp37118
sg2
S'yticklabels'
p37119
sbag4181
a(icodemend.demo.code_suggest
Element
p37120
(dp37121
g10
I0
sg11
S'set the zorder for the artist .'
p37122
sg12
Vpsd.zorder
p37123
sg14
(lp37124
sg2
S'zorder'
p37125
sbasg2
g36805
sbs(S'fill'
p37126
S'visible'
p37127
tp37128
(icodemend.demo.code_suggest
Element
p37129
(dp37130
g10
I0
sg11
S"set the artist 's visiblity ."
p37131
sg12
Vfill.visible
p37132
sg14
(lp37133
sg2
g37127
sbs(S'text'
p37134
S'xmargin'
p37135
tp37136
(icodemend.demo.code_suggest
Element
p37137
(dp37138
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p37139
sg12
Vtext.xmargin
p37140
sg14
(lp37141
sg2
g37135
sbsS'stride_windows'
p37142
(icodemend.demo.code_suggest
Element
p37143
(dp37144
g10
I0
sg11
S'get all windows of x with length n as a single array , using strides to avoid data duplication .'
p37145
sg12
Vstride_windows
p37146
sg14
(lp37147
sg2
g37142
sbsS'vector_lengths'
p37148
(icodemend.demo.code_suggest
Element
p37149
(dp37150
g10
I0
sg11
S'finds the length of a set of vectors in n dimensions .'
p37151
sg12
Vvector_lengths
p37152
sg14
(lp37153
g22775
ag33204
ag34704
asg2
g37148
sbs(S'hlines'
p37154
g5379
tp37155
g5374
s(S'boxplot'
p37156
S'capprops'
p37157
tp37158
(icodemend.demo.code_suggest
Element
p37159
(dp37160
g10
I1
sg11
S'if provided , will set the plotting style of the caps'
p37161
sg12
Vboxplot.capprops
p37162
sg14
(lp37163
(icodemend.demo.code_suggest
Element
p37164
(dp37165
g10
I1
sg11
S''
sg12
Vboxplot.capprops.{'linewidth': 1, 'color': [0/3, 0/3, 0/3]}
p37166
sg14
(lp37167
sg2
S"{'linewidth': 1, 'color': [0.3, 0.3, 0.3]}"
p37168
sbasg2
g37157
sbs(S'hexbin'
p37169
g25867
tp37170
g25862
s(S'axhline'
p37171
g3777
tp37172
g3772
s(S'Triangulation'
p37173
S'triangles'
p37174
tp37175
(icodemend.demo.code_suggest
Element
p37176
(dp37177
g10
I1
sg11
S'for each triangle , the indices of the three points that make up the triangle , ordered in an anticlockwise manner . if not specified , the delaunay triangulation is calculated .'
p37178
sg12
VTriangulation.triangles
p37179
sg14
(lp37180
(icodemend.demo.code_suggest
Element
p37181
(dp37182
g10
I1
sg11
S''
sg12
VTriangulation.triangles.tri
p37183
sg14
(lp37184
sg2
S'tri'
p37185
sbasg2
g37174
sbs(S'phase_spectrum'
p37186
S'line'
p37187
tp37188
(icodemend.demo.code_suggest
Element
p37189
(dp37190
g10
I0
sg11
S'returns the tuple ( spectrum , freqs , line ) :'
p37191
sg12
Vphase_spectrum.line
p37192
sg14
(lp37193
sg2
g37187
sbsS'get_cursor_data'
p37194
(icodemend.demo.code_suggest
Element
p37195
(dp37196
g10
I0
sg11
S'get the cursor data for a given event .'
p37197
sg12
Vget_cursor_data
p37198
sg14
(lp37199
sg2
g37194
sbs(g93
g4800
g25464
tp37200
g25460
s(g117
g118
g28469
tp37201
g28465
s(g117
g118
g27438
tp37202
g27434
sS'get_shared_x_axes'
p37203
(icodemend.demo.code_suggest
Element
p37204
(dp37205
g10
I0
sg11
S'return a copy of the shared axes grouper object for x axes'
p37206
sg12
Vget_shared_x_axes
p37207
sg14
(lp37208
sg2
g37203
sbsS'findobj'
p37209
(icodemend.demo.code_suggest
Element
p37210
(dp37211
g10
I5
sg11
S'find artist objects .'
p37212
sg12
Vfindobj
p37213
sg14
(lp37214
(icodemend.demo.code_suggest
Element
p37215
(dp37216
g10
I2
sg11
S'match can be'
p37217
sg12
Vfindobj.match
p37218
sg14
(lp37219
(icodemend.demo.code_suggest
Element
p37220
(dp37221
g10
I1
sg11
S''
sg12
Vfindobj.match.Text
p37222
sg14
(lp37223
sg2
S'Text'
p37224
sba(icodemend.demo.code_suggest
Element
p37225
(dp37226
g10
I1
sg11
S''
sg12
Vfindobj.match.match
p37227
sg14
(lp37228
sg2
S'match'
p37229
sbasg2
S'match'
p37230
sba(icodemend.demo.code_suggest
Element
p37231
(dp37232
g10
I1
sg11
S'if include_self is true ( default ) , include self in the list to be checked for a match .'
p37233
sg12
Vfindobj.include_self
p37234
sg14
(lp37235
(icodemend.demo.code_suggest
Element
p37236
(dp37237
g10
I1
sg11
S''
sg12
Vfindobj.include_self.False
p37238
sg14
(lp37239
sg2
g1944
sbasg2
S'include_self'
p37240
sbasg2
g37209
sbs(S'streamplot'
p37241
S'u'
tp37242
(icodemend.demo.code_suggest
Element
p37243
(dp37244
g10
I0
sg11
S'x and y-velocities . number of rows should match length of y , and the number of columns should match x.'
p37245
sg12
Vstreamplot.u
p37246
sg14
(lp37247
sg2
S'u'
sbs(g958
g8890
S'3'
tp37248
g22847
s(S'magnitude_spectrum'
p37249
S'clip_on'
p37250
tp37251
(icodemend.demo.code_suggest
Element
p37252
(dp37253
g10
I0
sg11
S'set whether artist uses clipping .'
p37254
sg12
Vmagnitude_spectrum.clip_on
p37255
sg14
(lp37256
sg2
g37250
sbs(S'hlines'
p37257
g5403
tp37258
g5398
s(g117
g118
g27646
tp37259
g27642
s(g245
g140
g30253
tp37260
g30249
s(S'errorbar'
p37261
S'axes'
p37262
tp37263
(icodemend.demo.code_suggest
Element
p37264
(dp37265
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p37266
sg12
Verrorbar.axes
p37267
sg14
(lp37268
sg2
g37262
sbs(S'axvspan'
p37269
S'ymax'
p37270
tp37271
(icodemend.demo.code_suggest
Element
p37272
(dp37273
g10
I3
sg11
S'draw a vertical span ( rectangle ) from xmin to xmax . with the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . that is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates .'
p37274
sg12
Vaxvspan.ymax
p37275
sg14
(lp37276
g23128
a(icodemend.demo.code_suggest
Element
p37277
(dp37278
g10
I1
sg11
S''
sg12
Vaxvspan.ymax.1
p37279
sg14
(lp37280
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p37281
(dp37282
g10
I1
sg11
S''
sg12
Vaxvspan.ymax.Y2
p37283
sg14
(lp37284
sg2
S'Y2'
p37285
sbasg2
g37270
sbs(S'annotate'
p37286
S'path_effects'
p37287
tp37288
(icodemend.demo.code_suggest
Element
p37289
(dp37290
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p37291
sg12
Vannotate.path_effects
p37292
sg14
(lp37293
sg2
g37287
sbs(g117
g2392
g29096
tp37294
g29092
sS'inside_poly'
p37295
(icodemend.demo.code_suggest
Element
p37296
(dp37297
g10
I0
sg11
S'points is a sequence of x , y points .'
p37298
sg12
Vinside_poly
p37299
sg14
(lp37300
(icodemend.demo.code_suggest
Element
p37301
(dp37302
g10
I0
sg11
S'points is a sequence of x , y points . verts is a sequence of x , y vertices of a polygon .'
p37303
sg12
Vinside_poly.points
p37304
sg14
(lp37305
sg2
S'points'
p37306
sbag19564
a(icodemend.demo.code_suggest
Element
p37307
(dp37308
g10
I0
sg11
S'points is a sequence of x , y points . verts is a sequence of x , y vertices of a polygon .'
p37309
sg12
Vinside_poly.x
p37310
sg14
(lp37311
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p37312
(dp37313
g10
I0
sg11
S'points is a sequence of x , y points . verts is a sequence of x , y vertices of a polygon .'
p37314
sg12
Vinside_poly.y
p37315
sg14
(lp37316
sg2
S'y'
sbasg2
g37295
sbs(S'add'
p37317
S'xticklabels'
p37318
tp37319
(icodemend.demo.code_suggest
Element
p37320
(dp37321
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p37322
sg12
Vadd.xticklabels
p37323
sg14
(lp37324
sg2
g37318
sbs(S'add'
p37325
S'contains'
p37326
tp37327
(icodemend.demo.code_suggest
Element
p37328
(dp37329
g10
I0
sg11
S'replace the contains test used by this artist .'
p37330
sg12
Vadd.contains
p37331
sg14
(lp37332
sg2
g37326
sbs(S'broken_barh'
p37333
S'vertices'
p37334
tp37335
(icodemend.demo.code_suggest
Element
p37336
(dp37337
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p37338
sg12
Vbroken_barh.vertices
p37339
sg14
(lp37340
sg2
g37334
sbs(S'set_yticklabels'
p37341
g18202
tp37342
g18197
s(g109
g32085
S'(lgd,)'
p37343
tp37344
(icodemend.demo.code_suggest
Element
p37345
(dp37346
g10
I2
sg11
S''
sg12
Vsavefig.bbox_extra_artists.(lgd,)
p37347
sg14
(lp37348
sg2
g37343
sbs(g5673
g132
S"'r'"
p37349
tp37350
(icodemend.demo.code_suggest
Element
p37351
(dp37352
g10
I2
sg11
S''
sg12
Vstreamplot.color.'r'
p37353
sg14
(lp37354
sg2
g37349
sbsS'volume_overlay'
p37355
(icodemend.demo.code_suggest
Element
p37356
(dp37357
g10
I1
sg11
S'add a volume overlay to the current axes .'
p37358
sg12
Vvolume_overlay
p37359
sg14
(lp37360
(icodemend.demo.code_suggest
Element
p37361
(dp37362
g10
I1
sg11
S'bar transparency'
p37363
sg12
Vvolume_overlay.alpha
p37364
sg14
(lp37365
(icodemend.demo.code_suggest
Element
p37366
(dp37367
g10
I1
sg11
S''
sg12
Vvolume_overlay.alpha.0/5
p37368
sg14
(lp37369
sg2
S'0.5'
p37370
sbasg2
S'alpha'
p37371
sba(icodemend.demo.code_suggest
Element
p37372
(dp37373
g10
I1
sg11
S'the color of the lines where close > = open'
p37374
sg12
Vvolume_overlay.colorup
p37375
sg14
(lp37376
g16017
asg2
S'colorup'
p37377
sba(icodemend.demo.code_suggest
Element
p37378
(dp37379
g10
I1
sg11
S'the bar width in points'
p37380
sg12
Vvolume_overlay.width
p37381
sg14
(lp37382
(icodemend.demo.code_suggest
Element
p37383
(dp37384
g10
I1
sg11
S''
sg12
Vvolume_overlay.width.1
p37385
sg14
(lp37386
sg2
S'1'
sbasg2
S'width'
p37387
sba(icodemend.demo.code_suggest
Element
p37388
(dp37389
g10
I0
sg11
S'an axes instance to plot to'
p37390
sg12
Vvolume_overlay.ax
p37391
sg14
(lp37392
sg2
S'ax'
p37393
sba(icodemend.demo.code_suggest
Element
p37394
(dp37395
g10
I0
sg11
S'a sequence of closes'
p37396
sg12
Vvolume_overlay.closes
p37397
sg14
(lp37398
sg2
S'closes'
p37399
sba(icodemend.demo.code_suggest
Element
p37400
(dp37401
g10
I0
sg11
S'the color of the lines where close < open'
p37402
sg12
Vvolume_overlay.colordown
p37403
sg14
(lp37404
sg2
S'colordown'
p37405
sbag27401
a(icodemend.demo.code_suggest
Element
p37406
(dp37407
g10
I0
sg11
S'a sequence of volumes'
p37408
sg12
Vvolume_overlay.volumes
p37409
sg14
(lp37410
sg2
S'volumes'
p37411
sbasg2
g37355
sbs(g16
g132
S"'green'"
p37412
tp37413
(icodemend.demo.code_suggest
Element
p37414
(dp37415
g10
I6
sg11
S''
sg12
Vbar.color.'green'
p37416
sg14
(lp37417
sg2
g37412
sbs(g514
g4459
S'-1'
p37418
tp37419
(icodemend.demo.code_suggest
Element
p37420
(dp37421
g10
I2
sg11
S''
sg12
Vpcolor.vmin.-1
p37422
sg14
(lp37423
sg2
g37418
sbs(S'add_subplot'
p37424
S'url'
p37425
tp37426
(icodemend.demo.code_suggest
Element
p37427
(dp37428
g10
I0
sg11
S'sets the url for the artist'
p37429
sg12
Vadd_subplot.url
p37430
sg14
(lp37431
sg2
g37425
sbs(S'csd'
p37432
S'yscale'
p37433
tp37434
(icodemend.demo.code_suggest
Element
p37435
(dp37436
g10
I0
sg11
S'set the scaling of the y-axis'
p37437
sg12
Vcsd.yscale
p37438
sg14
(lp37439
sg2
g37433
sbsS'get_url'
p37440
(icodemend.demo.code_suggest
Element
p37441
(dp37442
g10
I0
sg11
S'returns the url'
p37443
sg12
Vget_url
p37444
sg14
(lp37445
sg2
g37440
sbs(g93
g161
S'(x[25], y[25])'
p37446
tp37447
(icodemend.demo.code_suggest
Element
p37448
(dp37449
g10
I1
sg11
S''
sg12
Vannotate.xy.(x[25], y[25])
p37450
sg14
(lp37451
sg2
g37446
sbs(S'axvline'
p37452
S'title'
p37453
tp37454
(icodemend.demo.code_suggest
Element
p37455
(dp37456
g10
I0
sg11
S'set a title for the axes .'
p37457
sg12
Vaxvline.title
p37458
sg14
(lp37459
sg2
g37453
sbs(S'csd'
p37460
S'y'
tp37461
(icodemend.demo.code_suggest
Element
p37462
(dp37463
g10
I0
sg11
S"the cross spectral density by welch 's average periodogram method . the vectors x and y are divided into nfft length segments . each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . the product of the direct ffts of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||if len(x ) < nfft or len(y ) < nfft , they will be zero padded to nfft ."
p37464
sg12
Vcsd.y
p37465
sg14
(lp37466
sg2
S'y'
sbs(S'aliased_name_rest'
p37467
S's'
tp37468
(icodemend.demo.code_suggest
Element
p37469
(dp37470
g10
I0
sg11
S"return ' propname or alias ' if s has an alias , else return propname formatted for rest"
p37471
sg12
Valiased_name_rest.s
p37472
sg14
(lp37473
sg2
S's'
sbs(g101
g4274
g21700
tp37474
g21696
s(S'broken_barh'
p37475
S'clip_box'
p37476
tp37477
(icodemend.demo.code_suggest
Element
p37478
(dp37479
g10
I0
sg11
S"set the artist 's clip bbox ."
p37480
sg12
Vbroken_barh.clip_box
p37481
sg14
(lp37482
sg2
g37476
sbs(S'arrow'
p37483
g2813
tp37484
g2808
s(S'semilogx'
p37485
S'solid_capstyle'
p37486
tp37487
(icodemend.demo.code_suggest
Element
p37488
(dp37489
g10
I0
sg11
S'set the cap style for solid linestyles'
p37490
sg12
Vsemilogx.solid_capstyle
p37491
sg14
(lp37492
sg2
g37486
sbs(S'plot_date'
p37493
g20075
tp37494
g20070
s(g101
g325
g21826
tp37495
g21822
sS'get_horizontalalignment'
p37496
(icodemend.demo.code_suggest
Element
p37497
(dp37498
g10
I2
sg11
S'return the horizontal alignment as string .'
p37499
sg12
Vget_horizontalalignment
p37500
sg14
(lp37501
sg2
g37496
sbsS'get_cmap'
p37502
(icodemend.demo.code_suggest
Element
p37503
(dp37504
g10
I100
sg11
S'return the colormap'
p37505
sg12
Vget_cmap
p37506
sg14
(lp37507
g35569
a(icodemend.demo.code_suggest
Element
p37508
(dp37509
g10
I0
sg11
S'if lut is not none it must be an integer giving the number of entries desired in the lookup table , and name must be a standard mpl colormap name .'
p37510
sg12
Vget_cmap.lut
p37511
sg14
(lp37512
sg2
S'lut'
p37513
sbasg2
g37502
sbs(S'pcolor'
p37514
S'color_cycle'
p37515
tp37516
(icodemend.demo.code_suggest
Element
p37517
(dp37518
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p37519
sg12
Vpcolor.color_cycle
p37520
sg14
(lp37521
sg2
g37515
sbs(S'arrow'
p37522
g2605
tp37523
g2600
s(g117
g118
g28539
tp37524
g28535
s(S'annotate'
p37525
S'ylim'
p37526
tp37527
(icodemend.demo.code_suggest
Element
p37528
(dp37529
g10
I0
sg11
S'set the data limits for the yaxis'
p37530
sg12
Vannotate.ylim
p37531
sg14
(lp37532
sg2
g37526
sbs(g514
g325
S"'gray'"
p37533
tp37534
(icodemend.demo.code_suggest
Element
p37535
(dp37536
g10
I2
sg11
S''
sg12
Vpcolor.cmap.'gray'
p37537
sg14
(lp37538
sg2
g37533
sbsS'start'
p37539
(icodemend.demo.code_suggest
Element
p37540
(dp37541
g10
I49
sg11
S'start the timer object .'
p37542
sg12
Vstart
p37543
sg14
(lp37544
sg2
g37539
sbs(S'axvline'
p37545
S'ymax'
p37546
tp37547
(icodemend.demo.code_suggest
Element
p37548
(dp37549
g10
I14
sg11
S'should be between 0 and 1 , 0 being the bottom of the plot , 1 the top of the plot .'
p37550
sg12
Vaxvline.ymax
p37551
sg14
(lp37552
g25268
a(icodemend.demo.code_suggest
Element
p37553
(dp37554
g10
I1
sg11
S''
sg12
Vaxvline.ymax.0/75
p37555
sg14
(lp37556
sg2
S'0.75'
p37557
sba(icodemend.demo.code_suggest
Element
p37558
(dp37559
g10
I1
sg11
S''
sg12
Vaxvline.ymax.1/0
p37560
sg14
(lp37561
sg2
S'1.0'
p37562
sba(icodemend.demo.code_suggest
Element
p37563
(dp37564
g10
I1
sg11
S''
sg12
Vaxvline.ymax.1/2
p37565
sg14
(lp37566
sg2
S'1.2'
p37567
sba(icodemend.demo.code_suggest
Element
p37568
(dp37569
g10
I1
sg11
S''
sg12
Vaxvline.ymax.2
p37570
sg14
(lp37571
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p37572
(dp37573
g10
I1
sg11
S''
sg12
Vaxvline.ymax.40
p37574
sg14
(lp37575
sg2
S'40'
p37576
sbasg2
g37546
sbs(S'semilogy'
p37577
S'readonly'
p37578
tp37579
(icodemend.demo.code_suggest
Element
p37580
(dp37581
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p37582
sg12
Vsemilogy.readonly
p37583
sg14
(lp37584
sg2
g37578
sbs(S'set_xticklabels'
p37585
g17223
tp37586
g17218
s(S'add_axes'
p37587
S'xmargin'
p37588
tp37589
(icodemend.demo.code_suggest
Element
p37590
(dp37591
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p37592
sg12
Vadd_axes.xmargin
p37593
sg14
(lp37594
sg2
g37588
sbs(g1170
g437
g16041
tp37595
g16037
s(S'hexbin'
p37596
g25775
tp37597
g25765
s(S'plot_day_summary_oclh'
p37598
g33581
tp37599
g33576
s(S'figtext'
p37600
g11203
tp37601
g11198
s(S'subplots'
p37602
g2154
tp37603
g2149
s(S'Button'
p37604
g132
g11916
tp37605
g32030
s(g452
S'elinewidth'
p37606
S'3'
tp37607
(icodemend.demo.code_suggest
Element
p37608
(dp37609
g10
I3
sg11
S''
sg12
Verrorbar.elinewidth.3
p37610
sg14
(lp37611
sg2
S'3'
sbs(g245
g3075
S'72'
p37612
tp37613
(icodemend.demo.code_suggest
Element
p37614
(dp37615
g10
I4
sg11
S''
sg12
Vfigure.dpi.72
p37616
sg14
(lp37617
sg2
g37612
sbs(S'set_yticklabels'
p37618
g18256
tp37619
g18251
s(S'fill'
p37620
S'size_inches'
p37621
tp37622
(icodemend.demo.code_suggest
Element
p37623
(dp37624
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p37625
sg12
Vfill.size_inches
p37626
sg14
(lp37627
sg2
g37621
sbs(g117
g14753
g1944
tp37628
g12860
s(S'semilogx'
p37629
S'clip_on'
p37630
tp37631
(icodemend.demo.code_suggest
Element
p37632
(dp37633
g10
I0
sg11
S'set whether artist uses clipping .'
p37634
sg12
Vsemilogx.clip_on
p37635
sg14
(lp37636
sg2
g37630
sbs(S'broken_barh'
p37637
S'readonly'
p37638
tp37639
(icodemend.demo.code_suggest
Element
p37640
(dp37641
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p37642
sg12
Vbroken_barh.readonly
p37643
sg14
(lp37644
sg2
g37638
sbsS'get_sample_data'
p37645
(icodemend.demo.code_suggest
Element
p37646
(dp37647
g10
I14
sg11
S'return a sample data file .'
p37648
sg12
Vget_sample_data
p37649
sg14
(lp37650
g22670
ag14650
asg2
g37645
sbs(S'xticks'
p37651
g30589
tp37652
g30584
s(g4998
g8683
S"'flat'"
p37653
tp37654
(icodemend.demo.code_suggest
Element
p37655
(dp37656
g10
I1
sg11
S''
sg12
Vpcolormesh.shading.'flat'
p37657
sg14
(lp37658
sg2
g37653
sbs(S'eventplot'
p37659
g23445
tp37660
g23440
s(S'semilogx'
p37661
S'figure'
p37662
tp37663
(icodemend.demo.code_suggest
Element
p37664
(dp37665
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p37666
sg12
Vsemilogx.figure
p37667
sg14
(lp37668
sg2
g37662
sbs(S'title'
p37669
g35780
tp37670
g35770
s(g2182
g785
g785
tp37671
(icodemend.demo.code_suggest
Element
p37672
(dp37673
g10
I1
sg11
S''
sg12
Vmatshow.extent.extent
p37674
sg14
(lp37675
sg2
g785
sbs(S'eventplot'
p37676
g23493
tp37677
g23488
s(g436
g10211
g6319
tp37678
g6315
s(g324
g325
g9232
tp37679
g9228
s(g245
g140
g30528
tp37680
g30524
s(g514
g8538
S"'w'"
p37681
tp37682
(icodemend.demo.code_suggest
Element
p37683
(dp37684
g10
I2
sg11
S''
sg12
Vpcolor.edgecolors.'w'
p37685
sg14
(lp37686
sg2
g37681
sbs(g4371
g5025
g17729
tp37687
g17725
s(S'close'
p37688
S'num'
p37689
tp37690
(icodemend.demo.code_suggest
Element
p37691
(dp37692
g10
I0
sg11
S'close(num ) closes figure number num'
p37693
sg12
Vclose.num
p37694
sg14
(lp37695
sg2
g37689
sbs(S'quiver'
p37696
g30949
tp37697
g30944
s(g16
g489
S'lows'
p37698
tp37699
(icodemend.demo.code_suggest
Element
p37700
(dp37701
g10
I1
sg11
S''
sg12
Vbar.bottom.lows
p37702
sg14
(lp37703
sg2
g37698
sbsS'get_yaxis_text1_transform'
p37704
(icodemend.demo.code_suggest
Element
p37705
(dp37706
g10
I0
sg11
S'get the transformation used for drawing y-axis labels , which will add the given amount of padding ( in points ) between the axes and the label .'
p37707
sg12
Vget_yaxis_text1_transform
p37708
sg14
(lp37709
(icodemend.demo.code_suggest
Element
p37710
(dp37711
g10
I0
sg11
S'where valign and halign are requested alignments for the text .'
p37712
sg12
Vget_yaxis_text1_transform.halign
p37713
sg14
(lp37714
sg2
S'halign'
p37715
sbag14685
asg2
g37704
sbs(g4
g26135
S"'ro'"
p37716
tp37717
(icodemend.demo.code_suggest
Element
p37718
(dp37719
g10
I1
sg11
S''
sg12
Vstem.markerfmt.'ro'
p37720
sg14
(lp37721
sg2
g37716
sbsS'polar'
p37722
(icodemend.demo.code_suggest
Element
p37723
(dp37724
g10
I10
sg11
S'make a polar plot .'
p37725
sg12
Vpolar
p37726
sg14
(lp37727
(icodemend.demo.code_suggest
Element
p37728
(dp37729
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :'
p37730
sg12
Vpolar.args
p37731
sg14
(lp37732
sg2
S'args'
p37733
sba(icodemend.demo.code_suggest
Element
p37734
(dp37735
g10
I0
sg11
S'if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :'
p37736
sg12
Vpolar.fmt
p37737
sg14
(lp37738
sg2
S'fmt'
p37739
sba(icodemend.demo.code_suggest
Element
p37740
(dp37741
g10
I0
sg11
S'multiple theta , r arguments are supported , with format strings , as in plot ( ) .'
p37742
sg12
Vpolar.r
p37743
sg14
(lp37744
sg2
S'r'
sba(icodemend.demo.code_suggest
Element
p37745
(dp37746
g10
I0
sg11
S'kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p37747
sg12
Vpolar.scalex
p37748
sg14
(lp37749
sg2
S'scalex'
p37750
sba(icodemend.demo.code_suggest
Element
p37751
(dp37752
g10
I0
sg11
S'autoscale the view limits using the data limits . you can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to false . the autoscaling preserves any axis direction reversal that has already been done .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p37753
sg12
Vpolar.scaley
p37754
sg14
(lp37755
sg2
S'scaley'
p37756
sbag15880
a(icodemend.demo.code_suggest
Element
p37757
(dp37758
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .'
p37759
sg12
Vpolar.x
p37760
sg14
(lp37761
sg2
S'x'
sbag23752
asg2
g37722
sbs(g421
g8267
S"'none'"
p37762
tp37763
(icodemend.demo.code_suggest
Element
p37764
(dp37765
g10
I1
sg11
S''
sg12
Vfill.facecolor.'none'
p37766
sg14
(lp37767
sg2
g37762
sbs(S'errorbar'
p37768
S'rasterized'
p37769
tp37770
(icodemend.demo.code_suggest
Element
p37771
(dp37772
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p37773
sg12
Verrorbar.rasterized
p37774
sg14
(lp37775
sg2
g37769
sbs(g117
g118
g27671
tp37776
g27667
s(S'figtext'
p37777
g11413
tp37778
g11408
sS'set_clip_path'
p37779
(icodemend.demo.code_suggest
Element
p37780
(dp37781
g10
I11
sg11
S"set the artist 's clip path , which may be"
p37782
sg12
Vset_clip_path
p37783
sg14
(lp37784
sg2
g37779
sbs(g93
g4800
g25489
tp37785
g25485
s(S'set_array'
p37786
S'A'
tp37787
(icodemend.demo.code_suggest
Element
p37788
(dp37789
g10
I0
sg11
S'set the image array from numpy array a'
p37790
sg12
Vset_array.A
p37791
sg14
(lp37792
sg2
S'A'
sbsS'set_params'
p37793
(icodemend.demo.code_suggest
Element
p37794
(dp37795
g10
I2
sg11
S'set parameters within this locator .'
p37796
sg12
Vset_params
p37797
sg14
(lp37798
sg2
g37793
sbs(S'show'
p37799
S'warn'
p37800
tp37801
(icodemend.demo.code_suggest
Element
p37802
(dp37803
g10
I0
sg11
S'for non-gui backends , this does nothing , in which case a warning will be issued if warn is true ( default ) .'
p37804
sg12
Vshow.warn
p37805
sg14
(lp37806
sg2
g37800
sbs(g101
S's'
g7642
tp37807
g7638
s(S'trigger_tool'
p37808
S'canvasevent'
p37809
tp37810
(icodemend.demo.code_suggest
Element
p37811
(dp37812
g10
I0
sg11
S'original canvas event or none'
p37813
sg12
Vtrigger_tool.canvasevent
p37814
sg14
(lp37815
sg2
g37809
sbsS'set_width'
p37816
(icodemend.demo.code_suggest
Element
p37817
(dp37818
g10
I10
sg11
S'set the width rectangle'
p37819
sg12
Vset_width
p37820
sg14
(lp37821
sg2
g37816
sbs(S'add_axes'
p37822
S'xticklabels'
p37823
tp37824
(icodemend.demo.code_suggest
Element
p37825
(dp37826
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p37827
sg12
Vadd_axes.xticklabels
p37828
sg14
(lp37829
sg2
g37823
sbs(S'cohere'
p37830
S'ylabel'
p37831
tp37832
(icodemend.demo.code_suggest
Element
p37833
(dp37834
g10
I0
sg11
S'set the label for the yaxis'
p37835
sg12
Vcohere.ylabel
p37836
sg14
(lp37837
sg2
g37831
sbs(S'psd'
p37838
g36856
tp37839
g36851
s(S'quad2cubic'
p37840
S'y'
tp37841
g32886
s(g16
g34779
g1944
tp37842
(icodemend.demo.code_suggest
Element
p37843
(dp37844
g10
I6
sg11
S''
sg12
Vbar.log.False
p37845
sg14
(lp37846
sg2
g1944
sbs(g16
g17
S'0.05'
p37847
tp37848
(icodemend.demo.code_suggest
Element
p37849
(dp37850
g10
I2
sg11
S''
sg12
Vbar.width.0/05
p37851
sg14
(lp37852
sg2
g37847
sbs(S'scatter'
p37853
g21910
tp37854
g21833
s(S'barbs'
p37855
S'U'
tp37856
(icodemend.demo.code_suggest
Element
p37857
(dp37858
g10
I0
sg11
S'all arguments may be 1-d or 2-d arrays or sequences . if x and y are absent , they will be generated as a uniform grid . if u and v are 2-d arrays but x and y are 1-d , and if len(x ) and len(y ) match the column and row dimensions of u , then x and y will be expanded with numpy.meshgrid ( ) .|||u , v , c may be masked arrays , but masked x , y are not supported at present .'
p37859
sg12
Vbarbs.U
p37860
sg14
(lp37861
sg2
S'U'
sbs(g117
g118
g28184
tp37862
g28180
s(S'magnitude_spectrum'
p37863
S'markeredgecolor'
p37864
tp37865
(icodemend.demo.code_suggest
Element
p37866
(dp37867
g10
I0
sg11
S'set the marker edge color'
p37868
sg12
Vmagnitude_spectrum.markeredgecolor
p37869
sg14
(lp37870
sg2
g37864
sbs(g252
g4984
S'5'
tp37871
g14230
s(g117
g4274
g28978
tp37872
g28974
s(g332
g5546
S'transform_for_second_text'
p37873
tp37874
(icodemend.demo.code_suggest
Element
p37875
(dp37876
g10
I1
sg11
S''
sg12
Vtext.transform.transform_for_second_text
p37877
sg14
(lp37878
sg2
g37873
sbs(g252
g7452
g14271
tp37879
g14267
s(g1205
g1206
g4536
tp37880
g4532
s(S'set_xticklabels'
p37881
g17193
tp37882
g17188
s(g252
g253
g14066
tp37883
g14062
s(g117
g118
g27834
tp37884
g27830
s(g452
g2841
g865
tp37885
(icodemend.demo.code_suggest
Element
p37886
(dp37887
g10
I8
sg11
S''
sg12
Verrorbar.fmt.None
p37888
sg14
(lp37889
sg2
g865
sbs(g117
g118
g27799
tp37890
g27795
s(g117
g118
g28648
tp37891
g28644
s(g4998
g5025
S'0.6'
p37892
tp37893
(icodemend.demo.code_suggest
Element
p37894
(dp37895
g10
I1
sg11
S''
sg12
Vpcolormesh.vmax.0/6
p37896
sg14
(lp37897
sg2
g37892
sbs(S'AnchoredText'
p37898
S'loc'
p37899
tp37900
(icodemend.demo.code_suggest
Element
p37901
(dp37902
g10
I3
sg11
S'location code .'
p37903
sg12
VAnchoredText.loc
p37904
sg14
(lp37905
(icodemend.demo.code_suggest
Element
p37906
(dp37907
g10
I2
sg11
S''
sg12
VAnchoredText.loc.1
p37908
sg14
(lp37909
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p37910
(dp37911
g10
I1
sg11
S''
sg12
VAnchoredText.loc.2
p37912
sg14
(lp37913
sg2
S'2'
sbasg2
g37899
sbsS'set_bad'
p37914
(icodemend.demo.code_suggest
Element
p37915
(dp37916
g10
I25
sg11
S'set color to be used for masked values .'
p37917
sg12
Vset_bad
p37918
sg14
(lp37919
sg2
g37914
sbs(S'text'
p37920
S'wrap'
p37921
tp37922
(icodemend.demo.code_suggest
Element
p37923
(dp37924
g10
I0
sg11
S'sets the wrapping state for the text .'
p37925
sg12
Vtext.wrap
p37926
sg14
(lp37927
sg2
g37921
sbs(g5673
g2392
S'1'
tp37928
g6204
s(S'add_axes'
p37929
S'ylim'
p37930
tp37931
(icodemend.demo.code_suggest
Element
p37932
(dp37933
g10
I0
sg11
S'set the data limits for the yaxis'
p37934
sg12
Vadd_axes.ylim
p37935
sg14
(lp37936
sg2
g37930
sbs(g15996
g15307
S'1'
tp37937
g176
s(S'hexbin'
p37938
g25897
tp37939
g25892
s(S'errorbar'
p37940
S'scaley'
p37941
tp37942
(icodemend.demo.code_suggest
Element
p37943
(dp37944
g10
I0
sg11
S'kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p37945
sg12
Verrorbar.scaley
p37946
sg14
(lp37947
sg2
g37941
sbs(S'angle_spectrum'
p37948
g18918
tp37949
g18913
s(S'add_axes'
p37950
S'label'
p37951
tp37952
(icodemend.demo.code_suggest
Element
p37953
(dp37954
g10
I10
sg11
S'set the label to s for auto legend .'
p37955
sg12
Vadd_axes.label
p37956
sg14
(lp37957
(icodemend.demo.code_suggest
Element
p37958
(dp37959
g10
I2
sg11
S''
sg12
Vadd_axes.label.'twin'
p37960
sg14
(lp37961
sg2
S"'twin'"
p37962
sbag21254
a(icodemend.demo.code_suggest
Element
p37963
(dp37964
g10
I1
sg11
S''
sg12
Vadd_axes.label.'ax2'
p37965
sg14
(lp37966
sg2
S"'ax2'"
p37967
sba(icodemend.demo.code_suggest
Element
p37968
(dp37969
g10
I1
sg11
S''
sg12
Vadd_axes.label.'axes1'
p37970
sg14
(lp37971
sg2
S"'axes1'"
p37972
sba(icodemend.demo.code_suggest
Element
p37973
(dp37974
g10
I1
sg11
S''
sg12
Vadd_axes.label.1
p37975
sg14
(lp37976
sg2
S'1'
sbag33779
asg2
g37951
sbs(g34170
g325
g9197
tp37977
g33107
s(g117
g118
g28404
tp37978
g28400
s(S'text'
p37979
S'backgroundcolor'
p37980
tp37981
(icodemend.demo.code_suggest
Element
p37982
(dp37983
g10
I2
sg11
S'set the background color of the text by updating the bbox .'
p37984
sg12
Vtext.backgroundcolor
p37985
sg14
(lp37986
g35305
asg2
g37980
sbs(g117
g118
g28009
tp37987
g28005
s(S'add_callback'
p37988
g36782
tp37989
g36777
s(S'angle_spectrum'
p37990
g18942
tp37991
g18937
sS'start_pan'
p37992
(icodemend.demo.code_suggest
Element
p37993
(dp37994
g10
I0
sg11
S'called when a pan operation has started .'
p37995
sg12
Vstart_pan
p37996
sg14
(lp37997
(icodemend.demo.code_suggest
Element
p37998
(dp37999
g10
I0
sg11
S'x , y are the mouse coordinates in display coords . button is the mouse button number :'
p38000
sg12
Vstart_pan.x
p38001
sg14
(lp38002
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p38003
(dp38004
g10
I0
sg11
S'x , y are the mouse coordinates in display coords . button is the mouse button number :'
p38005
sg12
Vstart_pan.y
p38006
sg14
(lp38007
sg2
S'y'
sbasg2
g37992
sbs(S'set_yticklabels'
p38008
g18100
tp38009
g18095
s(S'contourf'
p38010
S'True'
p38011
tp38012
(icodemend.demo.code_suggest
Element
p38013
(dp38014
g10
I0
sg11
S"enable/disable corner masking , which only has an effect if z is a masked array . if false , any quad touching a masked point is masked out . if true , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . if ' legacy ' , the old contouring algorithm is used , which is equivalent to false and is deprecated , only remaining whilst the new algorithm is tested fully . if not specified , the default is taken from rcparams['contour.corner_mask ' ] , which is true unless it has been modified .|||enable antialiasing , overriding the defaults . for filled contours , the default is true . for line contours , it is taken from rcparams['lines.antialiased ' ] ."
p38015
sg12
Vcontourf.True
p38016
sg14
(lp38017
sg2
g38011
sbs(g582
g132
g3336
tp38018
g3332
s(g944
g132
g35701
tp38019
g35697
s(S'cohere'
p38020
S'label'
p38021
tp38022
(icodemend.demo.code_suggest
Element
p38023
(dp38024
g10
I0
sg11
S'set the label to s for auto legend .'
p38025
sg12
Vcohere.label
p38026
sg14
(lp38027
sg2
g38021
sbs(g117
g118
g28479
tp38028
g28475
s(S'PdfPages'
p38029
g31549
tp38030
g31544
s(S'psd'
p38031
g36958
tp38032
g36953
s(g252
g1010
g13906
tp38033
g13902
s(S'broken_barh'
p38034
g8267
S"'red'"
p38035
tp38036
(icodemend.demo.code_suggest
Element
p38037
(dp38038
g10
I1
sg11
S''
sg12
Vbroken_barh.facecolor.'red'
p38039
sg14
(lp38040
sg2
g38035
sbs(S'psd'
p38041
g36832
tp38042
g36822
s(S'axvline'
p38043
S'position'
p38044
tp38045
(icodemend.demo.code_suggest
Element
p38046
(dp38047
g10
I0
sg11
S'set the axes position with'
p38048
sg12
Vaxvline.position
p38049
sg14
(lp38050
sg2
g38044
sbs(g101
g102
g21842
tp38051
g21838
s(S'set_sketch_params'
p38052
g3956
tp38053
g3951
sS'set_contains'
p38054
(icodemend.demo.code_suggest
Element
p38055
(dp38056
g10
I0
sg11
S'replace the contains test used by this artist .'
p38057
sg12
Vset_contains
p38058
sg14
(lp38059
(icodemend.demo.code_suggest
Element
p38060
(dp38061
g10
I0
sg11
S'if the mouse event is over the artist , return hit = true and props is a dictionary of properties you want returned with the contains test .'
p38062
sg12
Vset_contains.hit
p38063
sg14
(lp38064
sg2
S'hit'
p38065
sbag33305
asg2
g38054
sbsS'install_repl_displayhook'
p38066
(icodemend.demo.code_suggest
Element
p38067
(dp38068
g10
I0
sg11
S'install a repl display hook so that any stale figure are automatically redrawn when control is returned to the repl .'
p38069
sg12
Vinstall_repl_displayhook
p38070
sg14
(lp38071
sg2
g38066
sbs(S'contour'
p38072
S'Y'
tp38073
g17782
s(g93
S'family'
p38074
S"'sans-serif'"
p38075
tp38076
(icodemend.demo.code_suggest
Element
p38077
(dp38078
g10
I1
sg11
S''
sg12
Vannotate.family.'sans-serif'
p38079
sg14
(lp38080
sg2
g38075
sbsS'press_zoom'
p38081
(icodemend.demo.code_suggest
Element
p38082
(dp38083
g10
I1
sg11
S'the press mouse button in zoom to rect mode callback'
p38084
sg12
Vpress_zoom
p38085
sg14
(lp38086
sg2
g38081
sbs(S'xcorr'
p38087
g35440
tp38088
g35435
s(S'errorbar'
p38089
S'ylabel'
p38090
tp38091
(icodemend.demo.code_suggest
Element
p38092
(dp38093
g10
I0
sg11
S'set the label for the yaxis'
p38094
sg12
Verrorbar.ylabel
p38095
sg14
(lp38096
sg2
g38090
sbs(g6632
g13338
S'((-0.5), 3)'
p38097
tp38098
(icodemend.demo.code_suggest
Element
p38099
(dp38100
g10
I1
sg11
S''
sg12
Vadd_subplot.ylim.((-0/5), 3)
p38101
sg14
(lp38102
sg2
g38097
sbs(S'axhline'
p38103
g3537
tp38104
g3532
s(g26208
g19538
g32308
tp38105
g32304
sS'logspace'
p38106
(icodemend.demo.code_suggest
Element
p38107
(dp38108
g10
I20
sg11
S'return n values logarithmically spaced between xmin and xmax .'
p38109
sg12
Vlogspace
p38110
sg14
(lp38111
sg2
g38106
sbs(g16
g489
S'property1_1'
p38112
tp38113
(icodemend.demo.code_suggest
Element
p38114
(dp38115
g10
I1
sg11
S''
sg12
Vbar.bottom.property1_1
p38116
sg14
(lp38117
sg2
g38112
sbs(S'pcolor'
p38118
S'offsets'
p38119
tp38120
(icodemend.demo.code_suggest
Element
p38121
(dp38122
g10
I0
sg11
S'set the offsets for the collection .'
p38123
sg12
Vpcolor.offsets
p38124
sg14
(lp38125
sg2
g38119
sbs(g324
g325
g9148
tp38126
g9144
s(g8266
g8267
g8151
tp38127
g8147
s(g10679
g2392
g5305
tp38128
g5301
s(g101
S'c'
g21564
tp38129
g21560
s(S'text'
p38130
S'weight'
p38131
tp38132
(icodemend.demo.code_suggest
Element
p38133
(dp38134
g10
I7
sg11
S'set the font weight .'
p38135
sg12
Vtext.weight
p38136
sg14
(lp38137
g34978
a(icodemend.demo.code_suggest
Element
p38138
(dp38139
g10
I1
sg11
S''
sg12
Vtext.weight.'heavy'
p38140
sg14
(lp38141
sg2
S"'heavy'"
p38142
sbasg2
g38131
sbs(S'barbs'
p38143
S'flagcolor'
p38144
tp38145
(icodemend.demo.code_suggest
Element
p38146
(dp38147
g10
I0
sg11
S'specifies the color of any flags on the barb . this parameter is analagous to the facecolor parameter for polygons , which can be used instead . however this parameter will override facecolor . if this is not set ( and c has not either ) then flagcolor will be set to match barbcolor so that the barb has a uniform color . if c has been set , flagcolor has no effect .'
p38148
sg12
Vbarbs.flagcolor
p38149
sg14
(lp38150
sg2
g38144
sbs(S'thumbnail'
p38151
S'thumbfile'
p38152
tp38153
(icodemend.demo.code_suggest
Element
p38154
(dp38155
g10
I0
sg11
S'the thumbnail filename|||make a thumbnail of image in infile with output filename thumbfile .'
p38156
sg12
Vthumbnail.thumbfile
p38157
sg14
(lp38158
sg2
g38152
sbs(g332
g333
g25042
tp38159
g25038
s(g324
g325
g9128
tp38160
g9124
s(S'plot_date'
p38161
g20021
tp38162
g20016
s(S'add_tools_to_container'
p38163
g25660
tp38164
g25655
s(S'tricontour'
p38165
g1404
tp38166
g1399
sS'set_gid'
p38167
(icodemend.demo.code_suggest
Element
p38168
(dp38169
g10
I0
sg11
S'sets the ( group ) id for the artist'
p38170
sg12
Vset_gid
p38171
sg14
(lp38172
sg2
g38167
sbs(g93
g4800
g25409
tp38173
g25405
sS'get_gridlines'
p38174
(icodemend.demo.code_suggest
Element
p38175
(dp38176
g10
I0
sg11
S'return the grid lines as a list of line2d instance'
p38177
sg12
Vget_gridlines
p38178
sg14
(lp38179
sg2
g38174
sbs(S'semilogx'
p38180
S'url'
p38181
tp38182
(icodemend.demo.code_suggest
Element
p38183
(dp38184
g10
I0
sg11
S'sets the url for the artist'
p38185
sg12
Vsemilogx.url
p38186
sg14
(lp38187
sg2
g38181
sbs(S'angle_spectrum'
p38188
g18714
tp38189
g18709
s(S'pcolor'
p38190
S'clim'
p38191
tp38192
(icodemend.demo.code_suggest
Element
p38193
(dp38194
g10
I0
sg11
S'set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp'
p38195
sg12
Vpcolor.clim
p38196
sg14
(lp38197
sg2
g38191
sbs(g452
g132
g31853
tp38198
g31849
s(S'inside_poly'
p38199
g37306
tp38200
g37301
s(S'refine_field'
p38201
S'z'
tp38202
(icodemend.demo.code_suggest
Element
p38203
(dp38204
g10
I0
sg11
S'values of the field to refine , defined at the nodes of the encapsulated triangulation . ( n_points is the number of points in the initial triangulation )'
p38205
sg12
Vrefine_field.z
p38206
sg14
(lp38207
sg2
S'z'
sbs(g245
g13636
S'figure_id'
p38208
tp38209
(icodemend.demo.code_suggest
Element
p38210
(dp38211
g10
I1
sg11
S''
sg12
Vfigure.num.figure_id
p38212
sg14
(lp38213
sg2
g38208
sbsS'set_paths'
p38214
(icodemend.demo.code_suggest
Element
p38215
(dp38216
g10
I2
sg11
S'this allows one to delay initialization of the vertices .'
p38217
sg12
Vset_paths
p38218
sg14
(lp38219
sg2
g38214
sbs(S'acorr'
p38220
g15946
tp38221
g15937
s(g2250
S'headwidth'
p38222
g627
tp38223
g30837
s(g8266
g2392
S'2'
tp38224
g24665
sS'contains'
p38225
(icodemend.demo.code_suggest
Element
p38226
(dp38227
g10
I15
sg11
S'test whether the mouse event occurred in the collection .'
p38228
sg12
Vcontains
p38229
sg14
(lp38230
(icodemend.demo.code_suggest
Element
p38231
(dp38232
g10
I0
sg11
S"returns true if any values are within the radius along with { ' ind ' : pointlist } , where pointlist is the set of points within the radius ."
p38233
sg12
Vcontains.pointlist
p38234
sg14
(lp38235
sg2
S'pointlist'
p38236
sbasg2
g38225
sbs(g245
g140
g30049
tp38237
g30045
sS'set_sizes'
p38238
(icodemend.demo.code_suggest
Element
p38239
(dp38240
g10
I0
sg11
S'set the sizes of each member of the collection .'
p38241
sg12
Vset_sizes
p38242
sg14
(lp38243
g33613
ag31475
asg2
g38238
sbs(S'set_xscale'
p38244
S'nonposx'
p38245
g15146
tp38246
g15142
s(S'cohere_pairs'
p38247
S'ij'
p38248
tp38249
(icodemend.demo.code_suggest
Element
p38250
(dp38251
g10
I0
sg11
S'ij is a list of tuples . each tuple is a pair of indexes into the columns of x for which you want to compute coherence . for example , if x has 64 columns , and you want to compute all nonredundant pairs , define ij as :|||compute the coherence and phase for all pairs ij , in x .'
p38252
sg12
Vcohere_pairs.ij
p38253
sg14
(lp38254
sg2
g38248
sbs(S'eventplot'
p38255
g23361
tp38256
g23356
s(g324
g8780
g9856
tp38257
g9852
s(S'axvline'
p38258
S'figure'
p38259
tp38260
(icodemend.demo.code_suggest
Element
p38261
(dp38262
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p38263
sg12
Vaxvline.figure
p38264
sg14
(lp38265
sg2
g38259
sbsS'withSimplePatchShadow'
p38266
(icodemend.demo.code_suggest
Element
p38267
(dp38268
g10
I0
sg11
S''
sg12
VwithSimplePatchShadow
p38269
sg14
(lp38270
(icodemend.demo.code_suggest
Element
p38271
(dp38272
g10
I0
sg11
S'extra keywords are stored and passed through to abstractpatheffect._update_gc ( ) .'
p38273
sg12
VwithSimplePatchShadow.**kwargs
p38274
sg14
(lp38275
sg2
S'**kwargs'
p38276
sbag15157
a(icodemend.demo.code_suggest
Element
p38277
(dp38278
g10
I0
sg11
S'the offset of the shadow in points .'
p38279
sg12
VwithSimplePatchShadow.offset
p38280
sg14
(lp38281
sg2
S'offset'
p38282
sbag23119
a(icodemend.demo.code_suggest
Element
p38283
(dp38284
g10
I0
sg11
S'the shadow color .'
p38285
sg12
VwithSimplePatchShadow.shadow_rgbFace
p38286
sg14
(lp38287
sg2
S'shadow_rgbFace'
p38288
sbasg2
g38266
sbsS'refresh_locators'
p38289
(icodemend.demo.code_suggest
Element
p38290
(dp38291
g10
I0
sg11
S'redraw the canvases , update the locators'
p38292
sg12
Vrefresh_locators
p38293
sg14
(lp38294
sg2
g38289
sbsS'get_style'
p38295
(icodemend.demo.code_suggest
Element
p38296
(dp38297
g10
I1
sg11
S'return the font style . return the font style as string'
p38298
sg12
Vget_style
p38299
sg14
(lp38300
sg2
g38295
sbs(S'pcolormesh'
p38301
S'xticklabels'
p38302
tp38303
(icodemend.demo.code_suggest
Element
p38304
(dp38305
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p38306
sg12
Vpcolormesh.xticklabels
p38307
sg14
(lp38308
sg2
g38302
sbsS'update_datalim_numerix'
p38309
(icodemend.demo.code_suggest
Element
p38310
(dp38311
g10
I0
sg11
S'update the data lim bbox with seq of xy tups'
p38312
sg12
Vupdate_datalim_numerix
p38313
sg14
(lp38314
sg2
g38309
sbs(S'fill'
p38315
S'x'
tp38316
(icodemend.demo.code_suggest
Element
p38317
(dp38318
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||an arbitrary number of x , y , color groups can be specified :|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||if you would like to fill below a curve , e.g. , shade a region between 0 and y along x , use fill_between ( )|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing . for example , to plot a polygon with vertices at x , y in blue . :'
p38319
sg12
Vfill.x
p38320
sg14
(lp38321
sg2
S'x'
sbs(g117
g118
g27824
tp38322
g27820
s(S'findobj'
p38323
g37229
g37224
tp38324
g37220
s(S'set_xticklabels'
p38325
g17067
tp38326
g17062
s(S'matshow'
p38327
S'alpha'
p38328
tp38329
(icodemend.demo.code_suggest
Element
p38330
(dp38331
g10
I2
sg11
S'the alpha blending value , between 0 ( transparent ) and 1 ( opaque )'
p38332
sg12
Vmatshow.alpha
p38333
sg14
(lp38334
(icodemend.demo.code_suggest
Element
p38335
(dp38336
g10
I2
sg11
S''
sg12
Vmatshow.alpha.0/75
p38337
sg14
(lp38338
sg2
S'0.75'
p38339
sbasg2
g38328
sbs(S'semilogy'
p38340
S'pickradius'
p38341
tp38342
(icodemend.demo.code_suggest
Element
p38343
(dp38344
g10
I0
sg11
S'sets the pick radius used for containment tests'
p38345
sg12
Vsemilogy.pickradius
p38346
sg14
(lp38347
sg2
g38341
sbs(g109
g110
g31376
tp38348
g31372
s(S'semilogx'
p38349
S'yticklabels'
p38350
tp38351
(icodemend.demo.code_suggest
Element
p38352
(dp38353
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p38354
sg12
Vsemilogx.yticklabels
p38355
sg14
(lp38356
sg2
g38350
sbs(S'psd'
p38357
g36934
tp38358
g36929
s(g93
S'linespacing'
p38359
S'2.0'
p38360
tp38361
(icodemend.demo.code_suggest
Element
p38362
(dp38363
g10
I1
sg11
S''
sg12
Vannotate.linespacing.2/0
p38364
sg14
(lp38365
sg2
g38360
sbsS'get_bbox_patch'
p38366
(icodemend.demo.code_suggest
Element
p38367
(dp38368
g10
I0
sg11
S'return the bbox patch object .'
p38369
sg12
Vget_bbox_patch
p38370
sg14
(lp38371
sg2
g38366
sbs(S'set_xticklabels'
p38372
g17109
tp38373
g17104
s(g139
g140
g1822
tp38374
g1818
s(g4355
g4356
g4356
tp38375
(icodemend.demo.code_suggest
Element
p38376
(dp38377
g10
I1
sg11
S''
sg12
Vfill_between.where.where
p38378
sg14
(lp38379
sg2
g4356
sbs(S'hexbin'
p38380
g25753
tp38381
g25748
s(S'plot'
p38382
g29731
tp38383
g29726
s(S'pcolormesh'
p38384
S'closed'
p38385
tp38386
(icodemend.demo.code_suggest
Element
p38387
(dp38388
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p38389
sg12
Vpcolormesh.closed
p38390
sg14
(lp38391
sg2
g38385
sbs(S'pcolormesh'
p38392
S'rasterized'
p38393
tp38394
(icodemend.demo.code_suggest
Element
p38395
(dp38396
g10
I1
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p38397
sg12
Vpcolormesh.rasterized
p38398
sg14
(lp38399
g31516
asg2
g38393
sbs(g2182
g10116
g27290
tp38400
g27286
sS'get_major_locator'
p38401
(icodemend.demo.code_suggest
Element
p38402
(dp38403
g10
I3
sg11
S'get the locator of the major ticker'
p38404
sg12
Vget_major_locator
p38405
sg14
(lp38406
sg2
g38401
sbs(g766
g666
g4023
tp38407
g4019
sS'set_xmargin'
p38408
(icodemend.demo.code_suggest
Element
p38409
(dp38410
g10
I1
sg11
S'set padding of x data limits prior to autoscaling .'
p38411
sg12
Vset_xmargin
p38412
sg14
(lp38413
(icodemend.demo.code_suggest
Element
p38414
(dp38415
g10
I0
sg11
S'm times the data interval will be added to each end of that interval before it is used in autoscaling .'
p38416
sg12
Vset_xmargin.m
p38417
sg14
(lp38418
sg2
S'm'
sbasg2
g38408
sbs(g117
g4163
S'0'
tp38419
g11057
sS'stop_filter'
p38420
(icodemend.demo.code_suggest
Element
p38421
(dp38422
g10
I0
sg11
S'used in aggrenderer .'
p38423
sg12
Vstop_filter
p38424
sg14
(lp38425
(icodemend.demo.code_suggest
Element
p38426
(dp38427
g10
I0
sg11
S'used in aggrenderer . switch back to the original renderer . the contents of the temporary renderer is processed with the filter_func and is drawn on the original renderer as an image .'
p38428
sg12
Vstop_filter.filter_func
p38429
sg14
(lp38430
sg2
S'filter_func'
p38431
sbasg2
g38420
sbs(S'set_xlim'
p38432
g4601
tp38433
g4588
sS'motion_notify_event'
p38434
(icodemend.demo.code_suggest
Element
p38435
(dp38436
g10
I0
sg11
S'backend derived classes should call this function on any motion-notify-event .'
p38437
sg12
Vmotion_notify_event
p38438
sg14
(lp38439
sg2
g38434
sbs(S'LightSource'
p38440
S'azdeg'
p38441
tp38442
(icodemend.demo.code_suggest
Element
p38443
(dp38444
g10
I0
sg11
S'the azimuth ( 0-360 , degrees clockwise from north ) of the light source . defaults to 315 degrees ( from the northwest ) .'
p38445
sg12
VLightSource.azdeg
p38446
sg14
(lp38447
sg2
g38441
sbs(S'errorbar'
p38448
S'cursor_props'
p38449
tp38450
(icodemend.demo.code_suggest
Element
p38451
(dp38452
g10
I0
sg11
S'set the cursor property as'
p38453
sg12
Verrorbar.cursor_props
p38454
sg14
(lp38455
sg2
g38449
sbs(S'magnitude_spectrum'
p38456
S'sketch_params'
p38457
tp38458
(icodemend.demo.code_suggest
Element
p38459
(dp38460
g10
I0
sg11
S'sets the sketch parameters .'
p38461
sg12
Vmagnitude_spectrum.sketch_params
p38462
sg14
(lp38463
sg2
g38457
sbsS'GaussianKDE'
p38464
(icodemend.demo.code_suggest
Element
p38465
(dp38466
g10
I0
sg11
S''
sg12
VGaussianKDE
p38467
sg14
(lp38468
(icodemend.demo.code_suggest
Element
p38469
(dp38470
g10
I0
sg11
S"the method used to calculate the estimator bandwidth . this can be ' scott ' , ' silverman ' , a scalar constant or a callable . if a scalar , this will be used directly as kde.factor . if a callable , it should take a gaussiankde instance as only parameter and return a scalar . if none ( default ) , ' scott ' is used ."
p38471
sg12
VGaussianKDE.bw_method
p38472
sg14
(lp38473
sg2
S'bw_method'
p38474
sba(icodemend.demo.code_suggest
Element
p38475
(dp38476
g10
I0
sg11
S'datapoints to estimate from . in case of univariate data this is a 1-d array , otherwise a 2-d array with shape ( # of dims , # of data ) .'
p38477
sg12
VGaussianKDE.dataset
p38478
sg14
(lp38479
sg2
S'dataset'
p38480
sbasg2
g38464
sbsS'get_dash_joinstyle'
p38481
(icodemend.demo.code_suggest
Element
p38482
(dp38483
g10
I0
sg11
S'get the join style for dashed linestyles'
p38484
sg12
Vget_dash_joinstyle
p38485
sg14
(lp38486
sg2
g38481
sbs(S'yticks'
p38487
g16103
tp38488
g16098
s(S'add_subplot'
p38489
S'title'
p38490
tp38491
(icodemend.demo.code_suggest
Element
p38492
(dp38493
g10
I1
sg11
S'set a title for the axes .'
p38494
sg12
Vadd_subplot.title
p38495
sg14
(lp38496
g6635
asg2
g38490
sbs(S'get'
p38497
S'key'
p38498
tp38499
(icodemend.demo.code_suggest
Element
p38500
(dp38501
g10
I0
sg11
S'return the axes instance that was added with key . if it is not present , return none .'
p38502
sg12
Vget.key
p38503
sg14
(lp38504
sg2
g38498
sbsS'draw_artist'
p38505
(icodemend.demo.code_suggest
Element
p38506
(dp38507
g10
I28
sg11
S'this method can only be used after an initial draw which caches the renderer . draw matplotlib.artist.artist instance a only - - this is available only after the figure is drawn'
p38508
sg12
Vdraw_artist
p38509
sg14
(lp38510
g15221
asg2
g38505
sbs(g101
S'c'
g21541
tp38511
g21537
s(g582
g583
S'3'
tp38512
g3477
s(S'eventplot'
p38513
g23553
tp38514
g23548
s(g324
g10116
g9019
tp38515
g9015
s(g93
g132
S'textcolor'
p38516
tp38517
(icodemend.demo.code_suggest
Element
p38518
(dp38519
g10
I1
sg11
S''
sg12
Vannotate.color.textcolor
p38520
sg14
(lp38521
sg2
g38516
sbs(g452
g453
S'c'
tp38522
g7247
s(S'semilogx'
p38523
S'args'
p38524
tp38525
(icodemend.demo.code_suggest
Element
p38526
(dp38527
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :'
p38528
sg12
Vsemilogx.args
p38529
sg14
(lp38530
sg2
g38524
sbs(S'arrow'
p38531
g2611
tp38532
g2606
sS'get_xbound'
p38533
(icodemend.demo.code_suggest
Element
p38534
(dp38535
g10
I1
sg11
S'returns the x-axis numerical bounds where'
p38536
sg12
Vget_xbound
p38537
sg14
(lp38538
sg2
g38533
sbs(g93
g4800
g25499
tp38539
g25495
s(S'semilogx'
p38540
S'sketch_params'
p38541
tp38542
(icodemend.demo.code_suggest
Element
p38543
(dp38544
g10
I0
sg11
S'sets the sketch parameters .'
p38545
sg12
Vsemilogx.sketch_params
p38546
sg14
(lp38547
sg2
g38541
sbs(g117
g118
g28234
tp38548
g28230
s(S'axvline'
p38549
S'ymargin'
p38550
tp38551
(icodemend.demo.code_suggest
Element
p38552
(dp38553
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p38554
sg12
Vaxvline.ymargin
p38555
sg14
(lp38556
sg2
g38550
sbs(g117
S'x'
g29308
tp38557
g29304
sS'set_fc'
p38558
(icodemend.demo.code_suggest
Element
p38559
(dp38560
g10
I0
sg11
S'alias for set_facecolor'
p38561
sg12
Vset_fc
p38562
sg14
(lp38563
sg2
g38558
sbs(g101
g8267
g22137
tp38564
g22133
s(S'semilogy'
p38565
S'url'
p38566
tp38567
(icodemend.demo.code_suggest
Element
p38568
(dp38569
g10
I0
sg11
S'sets the url for the artist'
p38570
sg12
Vsemilogy.url
p38571
sg14
(lp38572
sg2
g38566
sbs(S'contour'
p38573
g17803
tp38574
g17798
s(S'quiver'
p38575
g30922
tp38576
g30917
s(S'ylabel'
p38577
S'y'
tp38578
(icodemend.demo.code_suggest
Element
p38579
(dp38580
g10
I0
sg11
S'set the y axis label of the current axis .'
p38581
sg12
Vylabel.y
p38582
sg14
(lp38583
sg2
S'y'
sbs(g93
g161
S'point'
p38584
tp38585
(icodemend.demo.code_suggest
Element
p38586
(dp38587
g10
I1
sg11
S''
sg12
Vannotate.xy.point
p38588
sg14
(lp38589
sg2
g38584
sbs(g452
g453
S'z'
tp38590
g7290
s(g5975
S'y'
g19692
tp38591
g19688
s(S'errorbar'
p38592
S'alpha'
p38593
tp38594
(icodemend.demo.code_suggest
Element
p38595
(dp38596
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p38597
sg12
Verrorbar.alpha
p38598
sg14
(lp38599
sg2
g38593
sbsS'isowner'
p38600
(icodemend.demo.code_suggest
Element
p38601
(dp38602
g10
I0
sg11
S'return true if o owns this lock'
p38603
sg12
Visowner
p38604
sg14
(lp38605
(icodemend.demo.code_suggest
Element
p38606
(dp38607
g10
I0
sg11
S'return true if o owns this lock'
p38608
sg12
Visowner.o
p38609
sg14
(lp38610
sg2
S'o'
sbasg2
g38600
sbs(g8266
g126
S'0.1'
p38611
tp38612
(icodemend.demo.code_suggest
Element
p38613
(dp38614
g10
I1
sg11
S''
sg12
Vaxvspan.ymin.0/1
p38615
sg14
(lp38616
sg2
g38611
sbs(g139
g370
S'4'
tp38617
g1837
s(g332
g13486
g17377
tp38618
g17373
s(S'grid'
p38619
S'markeredgecolor'
p38620
tp38621
(icodemend.demo.code_suggest
Element
p38622
(dp38623
g10
I0
sg11
S'set the marker edge color'
p38624
sg12
Vgrid.markeredgecolor
p38625
sg14
(lp38626
sg2
g38620
sbs(g766
g325
g16485
tp38627
g16481
sS'pts_to_midstep'
p38628
(icodemend.demo.code_suggest
Element
p38629
(dp38630
g10
I0
sg11
S'covert continuous line to pre-steps'
p38631
sg12
Vpts_to_midstep
p38632
sg14
(lp38633
g31322
a(icodemend.demo.code_suggest
Element
p38634
(dp38635
g10
I0
sg11
S'any number of y arrays to be turned into steps . all must be the same length as x'
p38636
sg12
Vpts_to_midstep.y1, y2, ///
p38637
sg14
(lp38638
sg2
S'y1, y2, ...'
p38639
sbasg2
g38628
sbs(g93
g132
S"'blue'"
p38640
tp38641
(icodemend.demo.code_suggest
Element
p38642
(dp38643
g10
I1
sg11
S''
sg12
Vannotate.color.'blue'
p38644
sg14
(lp38645
sg2
g38640
sbs(g6632
g13338
S'(0, 1)'
p38646
tp38647
(icodemend.demo.code_suggest
Element
p38648
(dp38649
g10
I4
sg11
S''
sg12
Vadd_subplot.ylim.(0, 1)
p38650
sg14
(lp38651
sg2
g38646
sbs(S'ginput'
p38652
g14741
tp38653
g14736
s(S'axhline'
p38654
g3555
tp38655
g3550
s(g16
g132
S"'#b0c4de'"
p38656
tp38657
(icodemend.demo.code_suggest
Element
p38658
(dp38659
g10
I2
sg11
S''
sg12
Vbar.color.'#b0c4de'
p38660
sg14
(lp38661
sg2
g38656
sbsS'set_linelength'
p38662
(icodemend.demo.code_suggest
Element
p38663
(dp38664
g10
I0
sg11
S'set the length of the lines used to mark each event'
p38665
sg12
Vset_linelength
p38666
sg14
(lp38667
sg2
g38662
sbs(S'volume_overlay3'
p38668
S'colorup'
p38669
tp38670
(icodemend.demo.code_suggest
Element
p38671
(dp38672
g10
I0
sg11
S'the color of the lines where close1 > = close0'
p38673
sg12
Vvolume_overlay3.colorup
p38674
sg14
(lp38675
sg2
g38669
sbs(g452
g909
S'0'
tp38676
(icodemend.demo.code_suggest
Element
p38677
(dp38678
g10
I2
sg11
S''
sg12
Verrorbar.zorder.0
p38679
sg14
(lp38680
sg2
S'0'
sbs(S'quiver'
p38681
g31135
tp38682
g31130
s(S'scatter'
p38683
g22215
tp38684
g22210
s(S'magnitude_spectrum'
p38685
S'marker'
p38686
tp38687
(icodemend.demo.code_suggest
Element
p38688
(dp38689
g10
I0
sg11
S'set the line marker'
p38690
sg12
Vmagnitude_spectrum.marker
p38691
sg14
(lp38692
sg2
g38686
sbs(g252
g13469
g14522
tp38693
g14518
s(g324
g325
g9094
tp38694
g9090
s(g252
g12879
g14439
tp38695
g14435
s(g117
g132
g28849
tp38696
g28845
sS'check_update'
p38697
(icodemend.demo.code_suggest
Element
p38698
(dp38699
g10
I0
sg11
S'if mappable has changed since the last check , return true ; else return false'
p38700
sg12
Vcheck_update
p38701
sg14
(lp38702
sg2
g38697
sbs(S'MarkerStyle'
p38703
g20968
tp38704
g20963
sS'get_horizontal_stem_width'
p38705
(icodemend.demo.code_suggest
Element
p38706
(dp38707
g10
I0
sg11
S'return the standard horizontal stem width as float , or none if not specified in afm file .'
p38708
sg12
Vget_horizontal_stem_width
p38709
sg14
(lp38710
sg2
g38705
sbs(g324
g325
g9242
tp38711
g9238
s(S'gca'
p38712
S'readonly'
p38713
tp38714
(icodemend.demo.code_suggest
Element
p38715
(dp38716
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p38717
sg12
Vgca.readonly
p38718
sg14
(lp38719
sg2
g38713
sbs(S'barh'
p38720
S'clip_box'
p38721
tp38722
(icodemend.demo.code_suggest
Element
p38723
(dp38724
g10
I0
sg11
S"set the artist 's clip bbox ."
p38725
sg12
Vbarh.clip_box
p38726
sg14
(lp38727
sg2
g38721
sbs(S'hexbin'
p38728
g25969
tp38729
g25964
sS'xaxis_date'
p38730
(icodemend.demo.code_suggest
Element
p38731
(dp38732
g10
I35
sg11
S'sets up x-axis ticks and labels that treat the x data as dates .'
p38733
sg12
Vxaxis_date
p38734
sg14
(lp38735
(icodemend.demo.code_suggest
Element
p38736
(dp38737
g10
I1
sg11
S'tz is a timezone string or tzinfo instance . defaults to rc value .'
p38738
sg12
Vxaxis_date.tz
p38739
sg14
(lp38740
(icodemend.demo.code_suggest
Element
p38741
(dp38742
g10
I1
sg11
S''
sg12
Vxaxis_date.tz.None
p38743
sg14
(lp38744
sg2
g865
sbasg2
S'tz'
p38745
sbasg2
g38730
sbs(S'rec_join'
p38746
g35120
tp38747
g35115
s(S'violinplot'
p38748
g21155
tp38749
g21150
s(S'violin'
p38750
g5595
tp38751
g5590
s(S'semilogx'
p38752
S'zorder'
p38753
tp38754
(icodemend.demo.code_suggest
Element
p38755
(dp38756
g10
I1
sg11
S'set the zorder for the artist .'
p38757
sg12
Vsemilogx.zorder
p38758
sg14
(lp38759
g6427
asg2
g38753
sbsS'writeTrailer'
p38760
(icodemend.demo.code_suggest
Element
p38761
(dp38762
g10
I0
sg11
S'write out the pdf trailer .'
p38763
sg12
VwriteTrailer
p38764
sg14
(lp38765
sg2
g38760
sbs(S'set_xticklabels'
p38766
g17097
tp38767
g17092
s(S'contains_point'
p38768
S'radius'
p38769
tp38770
(icodemend.demo.code_suggest
Element
p38771
(dp38772
g10
I0
sg11
S'radius allows the path to be made slightly larger or smaller .'
p38773
sg12
Vcontains_point.radius
p38774
sg14
(lp38775
sg2
g38769
sbs(g93
g38074
S"'computer modern roman'"
p38776
tp38777
(icodemend.demo.code_suggest
Element
p38778
(dp38779
g10
I1
sg11
S''
sg12
Vannotate.family.'computer modern roman'
p38780
sg14
(lp38781
sg2
g38776
sbs(S'errorbar'
p38782
S'xerr'
p38783
tp38784
(icodemend.demo.code_suggest
Element
p38785
(dp38786
g10
I12
sg11
S'if a scalar number , len(n ) array-like object , or an nx1 array-like object , errorbars are drawn at + /-value relative to the data . if a sequence of shape 2xn , errorbars are drawn at - row1 and + row2 relative to the data .|||plot x versus y with error deltas in yerr and xerr . vertical errorbars are plotted if yerr is not none . horizontal errorbars are plotted if xerr is not none .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y .'
p38787
sg12
Verrorbar.xerr
p38788
sg14
(lp38789
g27064
a(icodemend.demo.code_suggest
Element
p38790
(dp38791
g10
I1
sg11
S''
sg12
Verrorbar.xerr.0/1
p38792
sg14
(lp38793
sg2
S'0.1'
p38794
sba(icodemend.demo.code_suggest
Element
p38795
(dp38796
g10
I1
sg11
S''
sg12
Verrorbar.xerr.0/5
p38797
sg14
(lp38798
sg2
S'0.5'
p38799
sbag2366
ag20113
a(icodemend.demo.code_suggest
Element
p38800
(dp38801
g10
I1
sg11
S''
sg12
Verrorbar.xerr.terr
p38802
sg14
(lp38803
sg2
S'terr'
p38804
sbasg2
g38783
sbsS'set_locs'
p38805
(icodemend.demo.code_suggest
Element
p38806
(dp38807
g10
I0
sg11
S'set the locations of the ticks'
p38808
sg12
Vset_locs
p38809
sg14
(lp38810
sg2
g38805
sbs(g16
g1262
g1262
tp38811
g1258
s(S'quiverkey'
p38812
g36666
tp38813
g36656
s(g117
g118
g27879
tp38814
g27875
sS'set_height'
p38815
(icodemend.demo.code_suggest
Element
p38816
(dp38817
g10
I13
sg11
S'set the width rectangle'
p38818
sg12
Vset_height
p38819
sg14
(lp38820
sg2
g38815
sbs(S'plot'
p38821
g29892
tp38822
g29887
s(g93
S'arrowprops'
p38823
g25042
tp38824
(icodemend.demo.code_suggest
Element
p38825
(dp38826
g10
I1
sg11
S''
sg12
Vannotate.arrowprops.props
p38827
sg14
(lp38828
sg2
g25042
sbs(g6556
g132
S"'r'"
p38829
tp38830
(icodemend.demo.code_suggest
Element
p38831
(dp38832
g10
I2
sg11
S''
sg12
Vvlines.color.'r'
p38833
sg14
(lp38834
sg2
g38829
sbs(g245
g140
g30563
tp38835
g30559
s(S'plot'
p38836
g28668
tp38837
g27429
s(S'angle_spectrum'
p38838
g18816
tp38839
g18811
s(g4371
g8545
g1102
tp38840
g1098
sS'base'
p38841
(icodemend.demo.code_suggest
Element
p38842
(dp38843
g10
I5
sg11
S'change the base for labeling - warning set the base of the log scaling ( major tick every base**i , i integer )'
p38844
sg12
Vbase
p38845
sg14
(lp38846
(icodemend.demo.code_suggest
Element
p38847
(dp38848
g10
I0
sg11
S'change the base for labeling - warning : should always match the base used for loglocator'
p38849
sg12
Vbase.base
p38850
sg14
(lp38851
sg2
S'base'
p38852
sbasg2
g38841
sbsS'get_hatch_path'
p38853
(icodemend.demo.code_suggest
Element
p38854
(dp38855
g10
I0
sg11
S'returns a path for the current hatch .'
p38856
sg12
Vget_hatch_path
p38857
sg14
(lp38858
sg2
g38853
sbs(S'set_ylabel'
p38859
g36037
tp38860
g36032
s(S'set_xticklabels'
p38861
g17282
tp38862
g17277
s(S'get'
p38863
S'sketch_params'
p38864
tp38865
(icodemend.demo.code_suggest
Element
p38866
(dp38867
g10
I0
sg11
S'sets the sketch parameters .'
p38868
sg12
Vget.sketch_params
p38869
sg14
(lp38870
sg2
g38864
sbs(g944
g132
g35745
tp38871
g35741
s(S'errorbar'
p38872
S'solid_joinstyle'
p38873
tp38874
(icodemend.demo.code_suggest
Element
p38875
(dp38876
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p38877
sg12
Verrorbar.solid_joinstyle
p38878
sg14
(lp38879
sg2
g38873
sbs(g117
g2392
S'5'
tp38880
g29055
s(S'title'
p38881
g35813
tp38882
g35808
s(g101
g102
g21887
tp38883
g21883
sS'semilogx'
p38884
(icodemend.demo.code_suggest
Element
p38885
(dp38886
g10
I10
sg11
S'make a plot with log scaling on the x axis .'
p38887
sg12
Vsemilogx
p38888
sg14
(lp38889
(icodemend.demo.code_suggest
Element
p38890
(dp38891
g10
I1
sg11
S'base of the x logarithm'
p38892
sg12
Vsemilogx.basex
p38893
sg14
(lp38894
(icodemend.demo.code_suggest
Element
p38895
(dp38896
g10
I1
sg11
S''
sg12
Vsemilogx.basex.2
p38897
sg14
(lp38898
sg2
S'2'
sbasg2
S'basex'
p38899
sba(icodemend.demo.code_suggest
Element
p38900
(dp38901
g10
I1
sg11
S'set the label to s for auto legend .'
p38902
sg12
Vsemilogx.label
p38903
sg14
(lp38904
g13298
asg2
S'label'
p38905
sbag38755
a(icodemend.demo.code_suggest
Element
p38906
(dp38907
g10
I0
sg11
S'the location of the minor xticks ; none defaults to autosubs , which depend on the number of decades in the plot ; see set_xscale ( ) for details .'
p38908
sg12
Vsemilogx.None
p38909
sg14
(lp38910
sg2
S'None'
p38911
sbag33507
ag22800
ag16711
ag23111
ag5829
ag17948
ag38526
a(icodemend.demo.code_suggest
Element
p38912
(dp38913
g10
I0
sg11
S'aspect'
p38914
sg12
Vsemilogx.aspect
p38915
sg14
(lp38916
sg2
S'aspect'
p38917
sba(icodemend.demo.code_suggest
Element
p38918
(dp38919
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p38920
sg12
Vsemilogx.axes
p38921
sg14
(lp38922
sg2
S'axes'
p38923
sba(icodemend.demo.code_suggest
Element
p38924
(dp38925
g10
I0
sg11
S"set the artist 's clip bbox ."
p38926
sg12
Vsemilogx.clip_box
p38927
sg14
(lp38928
sg2
S'clip_box'
p38929
sbag37632
ag8019
a(icodemend.demo.code_suggest
Element
p38930
(dp38931
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p38932
sg12
Vsemilogx.closed
p38933
sg14
(lp38934
sg2
S'closed'
p38935
sba(icodemend.demo.code_suggest
Element
p38936
(dp38937
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p38938
sg12
Vsemilogx.codes
p38939
sg14
(lp38940
sg2
S'codes'
p38941
sba(icodemend.demo.code_suggest
Element
p38942
(dp38943
g10
I0
sg11
S'set the color of the line'
p38944
sg12
Vsemilogx.color
p38945
sg14
(lp38946
sg2
S'color'
p38947
sba(icodemend.demo.code_suggest
Element
p38948
(dp38949
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p38950
sg12
Vsemilogx.color_cycle
p38951
sg14
(lp38952
sg2
S'color_cycle'
p38953
sba(icodemend.demo.code_suggest
Element
p38954
(dp38955
g10
I0
sg11
S'replace the contains test used by this artist .'
p38956
sg12
Vsemilogx.contains
p38957
sg14
(lp38958
sg2
S'contains'
p38959
sbag12171
ag25624
a(icodemend.demo.code_suggest
Element
p38960
(dp38961
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p38962
sg12
Vsemilogx.dash_joinstyle
p38963
sg14
(lp38964
sg2
S'dash_joinstyle'
p38965
sba(icodemend.demo.code_suggest
Element
p38966
(dp38967
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p38968
sg12
Vsemilogx.dashes
p38969
sg14
(lp38970
sg2
S'dashes'
p38971
sba(icodemend.demo.code_suggest
Element
p38972
(dp38973
g10
I0
sg11
S'set the drawstyle of the plot'
p38974
sg12
Vsemilogx.drawstyle
p38975
sg14
(lp38976
sg2
S'drawstyle'
p38977
sbag37664
a(icodemend.demo.code_suggest
Element
p38978
(dp38979
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p38980
sg12
Vsemilogx.fillstyle
p38981
sg14
(lp38982
sg2
S'fillstyle'
p38983
sba(icodemend.demo.code_suggest
Element
p38984
(dp38985
g10
I0
sg11
S'if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :'
p38986
sg12
Vsemilogx.fmt
p38987
sg14
(lp38988
sg2
S'fmt'
p38989
sba(icodemend.demo.code_suggest
Element
p38990
(dp38991
g10
I0
sg11
S'sets the ( group ) id for the artist'
p38992
sg12
Vsemilogx.gid
p38993
sg14
(lp38994
sg2
S'gid'
p38995
sbag24574
a(icodemend.demo.code_suggest
Element
p38996
(dp38997
g10
I0
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p38998
sg12
Vsemilogx.linestyle
p38999
sg14
(lp39000
sg2
S'linestyle'
p39001
sba(icodemend.demo.code_suggest
Element
p39002
(dp39003
g10
I0
sg11
S'set the line width in points'
p39004
sg12
Vsemilogx.linewidth
p39005
sg14
(lp39006
sg2
S'linewidth'
p39007
sba(icodemend.demo.code_suggest
Element
p39008
(dp39009
g10
I0
sg11
S'set the line marker'
p39010
sg12
Vsemilogx.marker
p39011
sg14
(lp39012
sg2
S'marker'
p39013
sbag34870
ag23855
ag8382
a(icodemend.demo.code_suggest
Element
p39014
(dp39015
g10
I0
sg11
S'set the alternate marker face color .'
p39016
sg12
Vsemilogx.markerfacecoloralt
p39017
sg14
(lp39018
sg2
S'markerfacecoloralt'
p39019
sba(icodemend.demo.code_suggest
Element
p39020
(dp39021
g10
I0
sg11
S'set the marker size in points'
p39022
sg12
Vsemilogx.markersize
p39023
sg14
(lp39024
sg2
S'markersize'
p39025
sbag20344
a(icodemend.demo.code_suggest
Element
p39026
(dp39027
g10
I0
sg11
S'non-positive values in x can be masked as invalid , or clipped to a very small positive number'
p39028
sg12
Vsemilogx.nonposx
p39029
sg14
(lp39030
sg2
S'nonposx'
p39031
sba(icodemend.demo.code_suggest
Element
p39032
(dp39033
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p39034
sg12
Vsemilogx.path_effects
p39035
sg14
(lp39036
sg2
S'path_effects'
p39037
sbag10243
a(icodemend.demo.code_suggest
Element
p39038
(dp39039
g10
I0
sg11
S'sets the pick radius used for containment tests'
p39040
sg12
Vsemilogx.pickradius
p39041
sg14
(lp39042
sg2
S'pickradius'
p39043
sbag33233
a(icodemend.demo.code_suggest
Element
p39044
(dp39045
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p39046
sg12
Vsemilogx.prop_cycle
p39047
sg14
(lp39048
sg2
S'prop_cycle'
p39049
sbag23177
ag6170
a(icodemend.demo.code_suggest
Element
p39050
(dp39051
g10
I0
sg11
S'kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p39052
sg12
Vsemilogx.scalex
p39053
sg14
(lp39054
sg2
S'scalex'
p39055
sbag4772
ag18630
ag38543
a(icodemend.demo.code_suggest
Element
p39056
(dp39057
g10
I0
sg11
S'sets the snap setting which may be'
p39058
sg12
Vsemilogx.snap
p39059
sg14
(lp39060
sg2
S'snap'
p39061
sbag37488
a(icodemend.demo.code_suggest
Element
p39062
(dp39063
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p39064
sg12
Vsemilogx.solid_joinstyle
p39065
sg14
(lp39066
sg2
S'solid_joinstyle'
p39067
sba(icodemend.demo.code_suggest
Element
p39068
(dp39069
g10
I0
sg11
S'the location of the minor xticks ; none defaults to autosubs , which depend on the number of decades in the plot ; see set_xscale ( ) for details .'
p39070
sg12
Vsemilogx.subsx
p39071
sg14
(lp39072
sg2
S'subsx'
p39073
sbag5843
a(icodemend.demo.code_suggest
Element
p39074
(dp39075
g10
I0
sg11
S'set the transformation instance used by this artist'
p39076
sg12
Vsemilogx.transform
p39077
sg14
(lp39078
sg2
S'transform'
p39079
sbag38183
ag33976
a(icodemend.demo.code_suggest
Element
p39080
(dp39081
g10
I0
sg11
S"set the artist 's visiblity ."
p39082
sg12
Vsemilogx.visible
p39083
sg14
(lp39084
sg2
S'visible'
p39085
sba(icodemend.demo.code_suggest
Element
p39086
(dp39087
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||make a plot with log scaling on the x axis .|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .'
p39088
sg12
Vsemilogx.x
p39089
sg14
(lp39090
sg2
S'x'
sbag24057
a(icodemend.demo.code_suggest
Element
p39091
(dp39092
g10
I0
sg11
S'set the label for the xaxis .'
p39093
sg12
Vsemilogx.xlabel
p39094
sg14
(lp39095
sg2
S'xlabel'
p39096
sba(icodemend.demo.code_suggest
Element
p39097
(dp39098
g10
I0
sg11
S'set the data limits for the xaxis'
p39099
sg12
Vsemilogx.xlim
p39100
sg14
(lp39101
sg2
S'xlim'
p39102
sba(icodemend.demo.code_suggest
Element
p39103
(dp39104
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p39105
sg12
Vsemilogx.xmargin
p39106
sg14
(lp39107
sg2
S'xmargin'
p39108
sba(icodemend.demo.code_suggest
Element
p39109
(dp39110
g10
I0
sg11
S'set the scaling of the x-axis'
p39111
sg12
Vsemilogx.xscale
p39112
sg14
(lp39113
sg2
S'xscale'
p39114
sba(icodemend.demo.code_suggest
Element
p39115
(dp39116
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p39117
sg12
Vsemilogx.xticklabels
p39118
sg14
(lp39119
sg2
S'xticklabels'
p39120
sba(icodemend.demo.code_suggest
Element
p39121
(dp39122
g10
I0
sg11
S'set the x ticks with list of ticks'
p39123
sg12
Vsemilogx.xticks
p39124
sg14
(lp39125
sg2
S'xticks'
p39126
sbag8205
ag13569
a(icodemend.demo.code_suggest
Element
p39127
(dp39128
g10
I0
sg11
S'set the label for the yaxis'
p39129
sg12
Vsemilogx.ylabel
p39130
sg14
(lp39131
sg2
S'ylabel'
p39132
sbag15443
a(icodemend.demo.code_suggest
Element
p39133
(dp39134
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p39135
sg12
Vsemilogx.ymargin
p39136
sg14
(lp39137
sg2
S'ymargin'
p39138
sba(icodemend.demo.code_suggest
Element
p39139
(dp39140
g10
I0
sg11
S'set the scaling of the y-axis'
p39141
sg12
Vsemilogx.yscale
p39142
sg14
(lp39143
sg2
S'yscale'
p39144
sbag38352
ag26434
asg2
g38884
sbsS'semilogy'
p39145
(icodemend.demo.code_suggest
Element
p39146
(dp39147
g10
I23
sg11
S'make a plot with log scaling on the y axis .'
p39148
sg12
Vsemilogy
p39149
sg14
(lp39150
(icodemend.demo.code_suggest
Element
p39151
(dp39152
g10
I2
sg11
S'set the line width in points'
p39153
sg12
Vsemilogy.linewidth
p39154
sg14
(lp39155
(icodemend.demo.code_suggest
Element
p39156
(dp39157
g10
I1
sg11
S''
sg12
Vsemilogy.linewidth.1
p39158
sg14
(lp39159
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p39160
(dp39161
g10
I1
sg11
S''
sg12
Vsemilogy.linewidth.2
p39162
sg14
(lp39163
sg2
S'2'
sbasg2
S'linewidth'
p39164
sbag25061
ag26065
a(icodemend.demo.code_suggest
Element
p39165
(dp39166
g10
I1
sg11
S'set the marker face color .'
p39167
sg12
Vsemilogy.markerfacecolor
p39168
sg14
(lp39169
(icodemend.demo.code_suggest
Element
p39170
(dp39171
g10
I1
sg11
S''
sg12
Vsemilogy.markerfacecolor.'white'
p39172
sg14
(lp39173
sg2
S"'white'"
p39174
sbasg2
S'markerfacecolor'
p39175
sbag35940
ag4189
ag34964
a(icodemend.demo.code_suggest
Element
p39176
(dp39177
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p39178
sg12
Vsemilogy.alpha
p39179
sg14
(lp39180
sg2
S'alpha'
p39181
sbag8229
a(icodemend.demo.code_suggest
Element
p39182
(dp39183
g10
I0
sg11
S"set the artist 's animation state ."
p39184
sg12
Vsemilogy.animated
p39185
sg14
(lp39186
sg2
S'animated'
p39187
sba(icodemend.demo.code_suggest
Element
p39188
(dp39189
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p39190
sg12
Vsemilogy.antialiased
p39191
sg14
(lp39192
sg2
S'antialiased'
p39193
sbag22831
a(icodemend.demo.code_suggest
Element
p39194
(dp39195
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p39196
sg12
Vsemilogy.axes
p39197
sg14
(lp39198
sg2
S'axes'
p39199
sbag12525
ag20435
a(icodemend.demo.code_suggest
Element
p39200
(dp39201
g10
I0
sg11
S'set whether artist uses clipping .'
p39202
sg12
Vsemilogy.clip_on
p39203
sg14
(lp39204
sg2
S'clip_on'
p39205
sbag35497
ag12232
ag4708
a(icodemend.demo.code_suggest
Element
p39206
(dp39207
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p39208
sg12
Vsemilogy.color_cycle
p39209
sg14
(lp39210
sg2
S'color_cycle'
p39211
sba(icodemend.demo.code_suggest
Element
p39212
(dp39213
g10
I0
sg11
S'replace the contains test used by this artist .'
p39214
sg12
Vsemilogy.contains
p39215
sg14
(lp39216
sg2
S'contains'
p39217
sba(icodemend.demo.code_suggest
Element
p39218
(dp39219
g10
I0
sg11
S'set the cursor property as'
p39220
sg12
Vsemilogy.cursor_props
p39221
sg14
(lp39222
sg2
S'cursor_props'
p39223
sba(icodemend.demo.code_suggest
Element
p39224
(dp39225
g10
I0
sg11
S'set the cap style for dashed linestyles'
p39226
sg12
Vsemilogy.dash_capstyle
p39227
sg14
(lp39228
sg2
S'dash_capstyle'
p39229
sba(icodemend.demo.code_suggest
Element
p39230
(dp39231
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p39232
sg12
Vsemilogy.dash_joinstyle
p39233
sg14
(lp39234
sg2
S'dash_joinstyle'
p39235
sba(icodemend.demo.code_suggest
Element
p39236
(dp39237
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p39238
sg12
Vsemilogy.dashes
p39239
sg14
(lp39240
sg2
S'dashes'
p39241
sba(icodemend.demo.code_suggest
Element
p39242
(dp39243
g10
I0
sg11
S'set the drawstyle of the plot'
p39244
sg12
Vsemilogy.drawstyle
p39245
sg14
(lp39246
sg2
S'drawstyle'
p39247
sba(icodemend.demo.code_suggest
Element
p39248
(dp39249
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p39250
sg12
Vsemilogy.figure
p39251
sg14
(lp39252
sg2
S'figure'
p39253
sba(icodemend.demo.code_suggest
Element
p39254
(dp39255
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p39256
sg12
Vsemilogy.fillstyle
p39257
sg14
(lp39258
sg2
S'fillstyle'
p39259
sba(icodemend.demo.code_suggest
Element
p39260
(dp39261
g10
I0
sg11
S'sets the ( group ) id for the artist'
p39262
sg12
Vsemilogy.gid
p39263
sg14
(lp39264
sg2
S'gid'
p39265
sbag10538
ag20296
ag6745
ag34136
a(icodemend.demo.code_suggest
Element
p39266
(dp39267
g10
I0
sg11
S'set the marker edge width in points'
p39268
sg12
Vsemilogy.markeredgewidth
p39269
sg14
(lp39270
sg2
S'markeredgewidth'
p39271
sbag34995
a(icodemend.demo.code_suggest
Element
p39272
(dp39273
g10
I0
sg11
S'set the marker size in points'
p39274
sg12
Vsemilogy.markersize
p39275
sg14
(lp39276
sg2
S'markersize'
p39277
sba(icodemend.demo.code_suggest
Element
p39278
(dp39279
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p39280
sg12
Vsemilogy.markevery
p39281
sg14
(lp39282
sg2
S'markevery'
p39283
sba(icodemend.demo.code_suggest
Element
p39284
(dp39285
g10
I0
sg11
S'non-positive values in y can be masked as invalid , or clipped to a very small positive number'
p39286
sg12
Vsemilogy.nonposy
p39287
sg14
(lp39288
sg2
S'nonposy'
p39289
sba(icodemend.demo.code_suggest
Element
p39290
(dp39291
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p39292
sg12
Vsemilogy.path_effects
p39293
sg14
(lp39294
sg2
S'path_effects'
p39295
sba(icodemend.demo.code_suggest
Element
p39296
(dp39297
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p39298
sg12
Vsemilogy.picker
p39299
sg14
(lp39300
sg2
S'picker'
p39301
sbag38343
ag19151
ag24199
a(icodemend.demo.code_suggest
Element
p39302
(dp39303
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p39304
sg12
Vsemilogy.rasterized
p39305
sg14
(lp39306
sg2
S'rasterized'
p39307
sbag37580
a(icodemend.demo.code_suggest
Element
p39308
(dp39309
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p39310
sg12
Vsemilogy.size_inches
p39311
sg14
(lp39312
sg2
S'size_inches'
p39313
sbag35012
ag18480
a(icodemend.demo.code_suggest
Element
p39314
(dp39315
g10
I0
sg11
S'set the cap style for solid linestyles'
p39316
sg12
Vsemilogy.solid_capstyle
p39317
sg14
(lp39318
sg2
S'solid_capstyle'
p39319
sbag31498
ag15194
ag34283
a(icodemend.demo.code_suggest
Element
p39320
(dp39321
g10
I0
sg11
S'set the transformation instance used by this artist'
p39322
sg12
Vsemilogy.transform
p39323
sg14
(lp39324
sg2
S'transform'
p39325
sbag38568
a(icodemend.demo.code_suggest
Element
p39326
(dp39327
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p39328
sg12
Vsemilogy.vertices
p39329
sg14
(lp39330
sg2
S'vertices'
p39331
sba(icodemend.demo.code_suggest
Element
p39332
(dp39333
g10
I0
sg11
S"set the artist 's visiblity ."
p39334
sg12
Vsemilogy.visible
p39335
sg14
(lp39336
sg2
S'visible'
p39337
sba(icodemend.demo.code_suggest
Element
p39338
(dp39339
g10
I0
sg11
S'set the data np.array for x'
p39340
sg12
Vsemilogy.xdata
p39341
sg14
(lp39342
sg2
S'xdata'
p39343
sbag7954
a(icodemend.demo.code_suggest
Element
p39344
(dp39345
g10
I0
sg11
S'set the data limits for the xaxis'
p39346
sg12
Vsemilogy.xlim
p39347
sg14
(lp39348
sg2
S'xlim'
p39349
sba(icodemend.demo.code_suggest
Element
p39350
(dp39351
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p39352
sg12
Vsemilogy.xmargin
p39353
sg14
(lp39354
sg2
S'xmargin'
p39355
sba(icodemend.demo.code_suggest
Element
p39356
(dp39357
g10
I0
sg11
S'set the scaling of the x-axis'
p39358
sg12
Vsemilogy.xscale
p39359
sg14
(lp39360
sg2
S'xscale'
p39361
sba(icodemend.demo.code_suggest
Element
p39362
(dp39363
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p39364
sg12
Vsemilogy.xticklabels
p39365
sg14
(lp39366
sg2
S'xticklabels'
p39367
sbag616
ag2268
a(icodemend.demo.code_suggest
Element
p39368
(dp39369
g10
I0
sg11
S'set the data np.array for y'
p39370
sg12
Vsemilogy.ydata
p39371
sg14
(lp39372
sg2
S'ydata'
p39373
sba(icodemend.demo.code_suggest
Element
p39374
(dp39375
g10
I0
sg11
S'set the label for the yaxis'
p39376
sg12
Vsemilogy.ylabel
p39377
sg14
(lp39378
sg2
S'ylabel'
p39379
sbag35661
ag7064
ag19103
ag25677
a(icodemend.demo.code_suggest
Element
p39380
(dp39381
g10
I0
sg11
S'set the y ticks with list of ticks'
p39382
sg12
Vsemilogy.yticks
p39383
sg14
(lp39384
sg2
S'yticks'
p39385
sbag35289
asg2
g39145
sbs(g117
g118
g28389
tp39386
g28385
s(g16
g17
S'0.25'
p39387
tp39388
(icodemend.demo.code_suggest
Element
p39389
(dp39390
g10
I3
sg11
S''
sg12
Vbar.width.0/25
p39391
sg14
(lp39392
sg2
g39387
sbs(g4371
g4459
S'0'
tp39393
g17740
s(g252
g4984
S'7'
tp39394
g14238
s(S'pcolormesh'
p39395
S'array'
p39396
tp39397
(icodemend.demo.code_suggest
Element
p39398
(dp39399
g10
I0
sg11
S'set the image array from numpy array a'
p39400
sg12
Vpcolormesh.array
p39401
sg14
(lp39402
sg2
g39396
sbs(S'plot_date'
p39403
g19781
tp39404
g19776
s(g109
g19182
S"'PNG'"
p39405
tp39406
(icodemend.demo.code_suggest
Element
p39407
(dp39408
g10
I3
sg11
S''
sg12
Vsavefig.format.'PNG'
p39409
sg14
(lp39410
sg2
g39405
sbs(S'grid'
p39411
S'antialiased'
p39412
tp39413
(icodemend.demo.code_suggest
Element
p39414
(dp39415
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p39416
sg12
Vgrid.antialiased
p39417
sg14
(lp39418
sg2
g39412
sbs(g16
g132
g21314
tp39419
(icodemend.demo.code_suggest
Element
p39420
(dp39421
g10
I2
sg11
S''
sg12
Vbar.color.col
p39422
sg14
(lp39423
sg2
g21314
sbs(S'add_patch'
p39424
S'p'
tp39425
(icodemend.demo.code_suggest
Element
p39426
(dp39427
g10
I0
sg11
S'add a patch p to the list of axes patches ; the clipbox will be set to the axes clipping box . if the transform is not set , it will be set to transdata .'
p39428
sg12
Vadd_patch.p
p39429
sg14
(lp39430
sg2
S'p'
sbs(g5640
g8068
g12051
tp39431
g12047
s(S'cleaned'
p39432
S'code'
p39433
tp39434
(icodemend.demo.code_suggest
Element
p39435
(dp39436
g10
I0
sg11
S'iterates over all of the curve segments in the path . each iteration returns a 2-tuple ( vertices , code ) , where vertices is a sequence of 1 - 3 coordinate pairs , and code is one of the path codes .'
p39437
sg12
Vcleaned.code
p39438
sg14
(lp39439
sg2
g39433
sbs(S'set_yticklabels'
p39440
g18006
tp39441
g17996
s(S'axhline'
p39442
g3825
tp39443
g3820
s(g252
g1010
g13961
tp39444
g13957
s(S'contourf'
p39445
S'norm'
p39446
tp39447
(icodemend.demo.code_suggest
Element
p39448
(dp39449
g10
I13
sg11
S'a matplotlib.colors.normalize instance for scaling data values to colors . if norm is none and colors is none , the default linear scaling is used .'
p39450
sg12
Vcontourf.norm
p39451
sg14
(lp39452
g10396
a(icodemend.demo.code_suggest
Element
p39453
(dp39454
g10
I1
sg11
S''
sg12
Vcontourf.norm.log_norm
p39455
sg14
(lp39456
sg2
g9916
sba(icodemend.demo.code_suggest
Element
p39457
(dp39458
g10
I1
sg11
S''
sg12
Vcontourf.norm.norml
p39459
sg14
(lp39460
sg2
S'norml'
p39461
sbasg2
g39446
sbs(g101
S'c'
g21461
tp39462
g21457
s(g13542
S'length'
p39463
S'7'
tp39464
g32149
s(g117
g118
g27979
tp39465
g27975
s(S'axvline'
p39466
S'zorder'
p39467
tp39468
(icodemend.demo.code_suggest
Element
p39469
(dp39470
g10
I7
sg11
S'set the zorder for the artist .'
p39471
sg12
Vaxvline.zorder
p39472
sg14
(lp39473
g911
ag22955
a(icodemend.demo.code_suggest
Element
p39474
(dp39475
g10
I1
sg11
S''
sg12
Vaxvline.zorder.5
p39476
sg14
(lp39477
sg2
S'5'
sbasg2
g39467
sbs(g101
g4274
g21724
tp39478
g21720
s(S'pcolormesh'
p39479
S'vmax'
p39480
tp39481
(icodemend.demo.code_suggest
Element
p39482
(dp39483
g10
I14
sg11
S'vmin and vmax are used in conjunction with norm to normalize luminance data . if either is none , it is autoscaled to the respective min or max of the color array c . if not none , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .'
p39484
sg12
Vpcolormesh.vmax
p39485
sg14
(lp39486
(icodemend.demo.code_suggest
Element
p39487
(dp39488
g10
I3
sg11
S''
sg12
Vpcolormesh.vmax.1
p39489
sg14
(lp39490
sg2
S'1'
sbag7808
a(icodemend.demo.code_suggest
Element
p39491
(dp39492
g10
I2
sg11
S''
sg12
Vpcolormesh.vmax.4
p39493
sg14
(lp39494
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p39495
(dp39496
g10
I2
sg11
S''
sg12
Vpcolormesh.vmax.5
p39497
sg14
(lp39498
sg2
S'5'
sbag37894
a(icodemend.demo.code_suggest
Element
p39499
(dp39500
g10
I1
sg11
S''
sg12
Vpcolormesh.vmax.100
p39501
sg14
(lp39502
sg2
S'100'
p39503
sbag34360
a(icodemend.demo.code_suggest
Element
p39504
(dp39505
g10
I1
sg11
S''
sg12
Vpcolormesh.vmax.7
p39506
sg14
(lp39507
sg2
S'7'
sbasg2
g39480
sbsg12070
(icodemend.demo.code_suggest
Element
p39508
(dp39509
g10
I0
sg11
S''
sg12
VSimplePatchShadow
p39510
sg14
(lp39511
(icodemend.demo.code_suggest
Element
p39512
(dp39513
g10
I0
sg11
S'extra keywords are stored and passed through to abstractpatheffect._update_gc ( ) .'
p39514
sg12
VSimplePatchShadow.**kwargs
p39515
sg14
(lp39516
sg2
S'**kwargs'
p39517
sba(icodemend.demo.code_suggest
Element
p39518
(dp39519
g10
I0
sg11
S'the alpha transparency of the created shadow patch . default is 0.3 . http://matplotlib.1069221.n5.nabble.com/path-effects-question-td27630.html'
p39520
sg12
VSimplePatchShadow.alpha
p39521
sg14
(lp39522
sg2
S'alpha'
p39523
sbag31490
a(icodemend.demo.code_suggest
Element
p39524
(dp39525
g10
I0
sg11
S'a scale factor to apply to the rgbface color if shadow_rgbface is not specified . default is 0.3 .'
p39526
sg12
VSimplePatchShadow.rho
p39527
sg14
(lp39528
sg2
S'rho'
p39529
sbag12073
asg2
g12070
sbsS'get_frame_on'
p39530
(icodemend.demo.code_suggest
Element
p39531
(dp39532
g10
I0
sg11
S'get whether the axes rectangle patch is drawn get whether the legend box patch is drawn'
p39533
sg12
Vget_frame_on
p39534
sg14
(lp39535
sg2
g39530
sbsS'reset_position'
p39536
(icodemend.demo.code_suggest
Element
p39537
(dp39538
g10
I0
sg11
S'make the original position the active position'
p39539
sg12
Vreset_position
p39540
sg14
(lp39541
sg2
g39536
sbs(g324
g8780
g9870
tp39542
g9866
s(g16
g110
g36082
tp39543
g36078
s(S'set_xticklabels'
p39544
g17139
tp39545
g17134
s(g125
g19538
S'2'
tp39546
g37568
s(S'figtext'
p39547
g11567
tp39548
g11562
s(g93
g161
S'(start, y_height)'
p39549
tp39550
(icodemend.demo.code_suggest
Element
p39551
(dp39552
g10
I1
sg11
S''
sg12
Vannotate.xy.(start, y_height)
p39553
sg14
(lp39554
sg2
g39549
sbs(g252
S'borderpad'
p39555
g14557
tp39556
g14553
sS'update_position'
p39557
(icodemend.demo.code_suggest
Element
p39558
(dp39559
g10
I0
sg11
S'set the location of tick in data coords with scalar loc'
p39560
sg12
Vupdate_position
p39561
sg14
(lp39562
g20615
asg2
g39557
sbs(S'text'
p39563
S'xticklabels'
p39564
tp39565
(icodemend.demo.code_suggest
Element
p39566
(dp39567
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p39568
sg12
Vtext.xticklabels
p39569
sg14
(lp39570
sg2
g39564
sbs(S'cohere'
p39571
S'cursor_props'
p39572
tp39573
(icodemend.demo.code_suggest
Element
p39574
(dp39575
g10
I0
sg11
S'set the cursor property as'
p39576
sg12
Vcohere.cursor_props
p39577
sg14
(lp39578
sg2
g39572
sbs(S'fftsurr'
p39579
S'x'
tp39580
(icodemend.demo.code_suggest
Element
p39581
(dp39582
g10
I0
sg11
S'compute an fft phase randomized surrogate of x .'
p39583
sg12
Vfftsurr.x
p39584
sg14
(lp39585
sg2
S'x'
sbs(S'add_axes'
p39586
S'url'
p39587
tp39588
(icodemend.demo.code_suggest
Element
p39589
(dp39590
g10
I0
sg11
S'sets the url for the artist'
p39591
sg12
Vadd_axes.url
p39592
sg14
(lp39593
sg2
g39587
sbs(g93
g161
S'(5, 2)'
p39594
tp39595
(icodemend.demo.code_suggest
Element
p39596
(dp39597
g10
I1
sg11
S''
sg12
Vannotate.xy.(5, 2)
p39598
sg14
(lp39599
sg2
g39594
sbs(S'streamplot'
p39600
S'arrowsize'
p39601
tp39602
(icodemend.demo.code_suggest
Element
p39603
(dp39604
g10
I4
sg11
S'factor scale arrow size .'
p39605
sg12
Vstreamplot.arrowsize
p39606
sg14
(lp39607
(icodemend.demo.code_suggest
Element
p39608
(dp39609
g10
I4
sg11
S''
sg12
Vstreamplot.arrowsize.3
p39610
sg14
(lp39611
sg2
S'3'
sbasg2
g39601
sbs(g245
g140
g30223
tp39612
g30219
s(S'get_metrics'
p39613
g22252
tp39614
g22247
s(S'add_subplot'
p39615
S'vertices'
p39616
tp39617
(icodemend.demo.code_suggest
Element
p39618
(dp39619
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p39620
sg12
Vadd_subplot.vertices
p39621
sg14
(lp39622
sg2
g39616
sbs(S'angle_spectrum'
p39623
g18870
tp39624
g18865
s(S'add_lines'
p39625
S'colors'
p39626
tp39627
(icodemend.demo.code_suggest
Element
p39628
(dp39629
g10
I0
sg11
S'colors and linewidths must be scalars or sequences the same length as levels .'
p39630
sg12
Vadd_lines.colors
p39631
sg14
(lp39632
sg2
g39626
sbs(S'add_tools_to_manager'
p39633
g3010
tp39634
g3005
s(S'xcorr'
p39635
S'y'
tp39636
g35452
s(g944
g2364
S'pos_xerr'
p39637
tp39638
(icodemend.demo.code_suggest
Element
p39639
(dp39640
g10
I1
sg11
S''
sg12
Vbarh.xerr.pos_xerr
p39641
sg14
(lp39642
sg2
g39637
sbs(g332
S'path_effects'
p39643
g33190
tp39644
g33186
sS'set_autoscaley_on'
p39645
(icodemend.demo.code_suggest
Element
p39646
(dp39647
g10
I3
sg11
S'set whether autoscaling for the y-axis is applied on plot commands'
p39648
sg12
Vset_autoscaley_on
p39649
sg14
(lp39650
sg2
g39645
sbs(S'errorbar'
p39651
S'path_effects'
p39652
tp39653
(icodemend.demo.code_suggest
Element
p39654
(dp39655
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p39656
sg12
Verrorbar.path_effects
p39657
sg14
(lp39658
sg2
g39652
sbs(g117
g118
g27759
tp39659
g27755
s(g5562
g325
g10840
tp39660
g10836
s(S'set_yticklabels'
p39661
g18094
tp39662
g18089
s(S'arrow'
p39663
g2515
tp39664
g2505
s(S'semilogx'
p39665
g39138
tp39666
g39133
s(g93
g161
S'(2000.0, 10.5)'
p39667
tp39668
(icodemend.demo.code_suggest
Element
p39669
(dp39670
g10
I1
sg11
S''
sg12
Vannotate.xy.(2000/0, 10/5)
p39671
sg14
(lp39672
sg2
g39667
sbsS'setp'
p39673
(icodemend.demo.code_suggest
Element
p39674
(dp39675
g10
I179
sg11
S'set a property on an artist object .'
p39676
sg12
Vsetp
p39677
sg14
(lp39678
(icodemend.demo.code_suggest
Element
p39679
(dp39680
g10
I0
sg11
S"obj is a artist instance , e.g. , line2d or an instance of a axes or matplotlib.text.text . if the property is ' somename ' , this function returns"
p39681
sg12
Vsetp.obj
p39682
sg14
(lp39683
sg2
S'obj'
p39684
sba(icodemend.demo.code_suggest
Element
p39685
(dp39686
g10
I0
sg11
S"return the value of object 's property . property is an optional string for the property you want to return|||obj is a artist instance , e.g. , line2d or an instance of a axes or matplotlib.text.text . if the property is ' somename ' , this function returns"
p39687
sg12
Vsetp.property
p39688
sg14
(lp39689
sg2
S'property'
p39690
sbasg2
g39673
sbsS'boxplot'
p39691
(icodemend.demo.code_suggest
Element
p39692
(dp39693
g10
I92
sg11
S'make a box and whisker plot .'
p39694
sg12
Vboxplot
p39695
sg14
(lp39696
g32993
ag25230
ag31163
ag10946
ag20486
a(icodemend.demo.code_suggest
Element
p39697
(dp39698
g10
I5
sg11
S'if true , will toggle one the rendering of the fliers'
p39699
sg12
Vboxplot.showfliers
p39700
sg14
(lp39701
(icodemend.demo.code_suggest
Element
p39702
(dp39703
g10
I3
sg11
S''
sg12
Vboxplot.showfliers.False
p39704
sg14
(lp39705
sg2
g1944
sba(icodemend.demo.code_suggest
Element
p39706
(dp39707
g10
I2
sg11
S''
sg12
Vboxplot.showfliers.True
p39708
sg14
(lp39709
sg2
g438
sbasg2
S'showfliers'
p39710
sba(icodemend.demo.code_suggest
Element
p39711
(dp39712
g10
I4
sg11
S'if false produces boxes with the line2d artist if true produces boxes with the patch artist'
p39713
sg12
Vboxplot.patch_artist
p39714
sg14
(lp39715
(icodemend.demo.code_suggest
Element
p39716
(dp39717
g10
I3
sg11
S''
sg12
Vboxplot.patch_artist.True
p39718
sg14
(lp39719
sg2
g438
sbag12164
asg2
S'patch_artist'
p39720
sba(icodemend.demo.code_suggest
Element
p39721
(dp39722
g10
I3
sg11
S'if true , will toggle one the rendering of box'
p39723
sg12
Vboxplot.showbox
p39724
sg14
(lp39725
(icodemend.demo.code_suggest
Element
p39726
(dp39727
g10
I2
sg11
S''
sg12
Vboxplot.showbox.True
p39728
sg14
(lp39729
sg2
g438
sbag35995
asg2
S'showbox'
p39730
sba(icodemend.demo.code_suggest
Element
p39731
(dp39732
g10
I3
sg11
S'if true , will toggle one the rendering of the means'
p39733
sg12
Vboxplot.showmeans
p39734
sg14
(lp39735
g32621
asg2
S'showmeans'
p39736
sba(icodemend.demo.code_suggest
Element
p39737
(dp39738
g10
I3
sg11
S"as a float , determines the reach of the whiskers past the first and third quartiles ( e.g. , q3 + whis*iqr , iqr = interquartile range , q3-q1 ) . beyond the whiskers , data are considered outliers and are plotted as individual points . set this to an unreasonably high value to force the whiskers to show the min and max values . alternatively , set this to an ascending sequence of percentile ( e.g. , [ 5 , 95 ] ) to set the whiskers at specific percentiles of the data . finally , whis can be the string ' range ' to force the whiskers to the min and max of the data . in the edge case that the 25th and 75th percentiles are equivalent , whis will be automatically set to ' range ' ."
p39739
sg12
Vboxplot.whis
p39740
sg14
(lp39741
(icodemend.demo.code_suggest
Element
p39742
(dp39743
g10
I2
sg11
S''
sg12
Vboxplot.whis.[5, 95]
p39744
sg14
(lp39745
sg2
S'[5, 95]'
p39746
sba(icodemend.demo.code_suggest
Element
p39747
(dp39748
g10
I1
sg11
S''
sg12
Vboxplot.whis.1/5
p39749
sg14
(lp39750
sg2
S'1.5'
p39751
sbasg2
S'whis'
p39752
sbag19600
a(icodemend.demo.code_suggest
Element
p39753
(dp39754
g10
I2
sg11
S'if true , will toggle one the rendering of the caps'
p39755
sg12
Vboxplot.showcaps
p39756
sg14
(lp39757
(icodemend.demo.code_suggest
Element
p39758
(dp39759
g10
I2
sg11
S''
sg12
Vboxplot.showcaps.True
p39760
sg14
(lp39761
sg2
g438
sbasg2
S'showcaps'
p39762
sba(icodemend.demo.code_suggest
Element
p39763
(dp39764
g10
I1
sg11
S"specifies whether to bootstrap the confidence intervals around the median for notched boxplots . if bootstrap==none , no bootstrapping is performed , and notches are calculated using a gaussian-based asymptotic approximation ( see mcgill , r. , tukey , j.w. , and larsen , w.a. , 1978 , and kendall and stuart , 1967 ) . otherwise , bootstrap specifies the number of times to bootstrap the median to determine it 's 95% confidence intervals . values between 1000 and 10000 are recommended ."
p39765
sg12
Vboxplot.bootstrap
p39766
sg14
(lp39767
(icodemend.demo.code_suggest
Element
p39768
(dp39769
g10
I1
sg11
S''
sg12
Vboxplot.bootstrap.None
p39770
sg14
(lp39771
sg2
g865
sbasg2
S'bootstrap'
p39772
sbag37159
a(icodemend.demo.code_suggest
Element
p39773
(dp39774
g10
I1
sg11
S'array or sequence whose first dimension ( or length ) is compatible with x and whose second dimension is 2 . when the current element of conf_intervals is not none , the notch locations computed by matplotlib are overridden ( assuming notch is true ) . when an element of conf_intervals is none , boxplot compute notches the method specified by the other kwargs ( e.g. , bootstrap ) .'
p39775
sg12
Vboxplot.conf_intervals
p39776
sg14
(lp39777
(icodemend.demo.code_suggest
Element
p39778
(dp39779
g10
I1
sg11
S''
sg12
Vboxplot.conf_intervals.None
p39780
sg14
(lp39781
sg2
g865
sbasg2
S'conf_intervals'
p39782
sbag18523
a(icodemend.demo.code_suggest
Element
p39783
(dp39784
g10
I1
sg11
S'if provided , will set the plotting style of the means'
p39785
sg12
Vboxplot.meanprops
p39786
sg14
(lp39787
g6819
asg2
S'meanprops'
p39788
sbag10154
a(icodemend.demo.code_suggest
Element
p39789
(dp39790
g10
I1
sg11
S'an array or sequence whose first dimension ( or length ) is compatible with x . this overrides the medians computed by matplotlib for each element of usermedians that is not none . when an element of usermedians = = none , the median will be computed by matplotlib as normal .'
p39791
sg12
Vboxplot.usermedians
p39792
sg14
(lp39793
(icodemend.demo.code_suggest
Element
p39794
(dp39795
g10
I1
sg11
S''
sg12
Vboxplot.usermedians.None
p39796
sg14
(lp39797
sg2
g865
sbasg2
S'usermedians'
p39798
sbag36596
a(icodemend.demo.code_suggest
Element
p39799
(dp39800
g10
I1
sg11
S'the input data .|||make a box and whisker plot for each column of x or each vector in sequence x . the box extends from the lower to upper quartile values of the data , with a line at the median . the whiskers extend from the box to show the range of the data . flier points are those past the end of the whiskers .'
p39801
sg12
Vboxplot.x
p39802
sg14
(lp39803
(icodemend.demo.code_suggest
Element
p39804
(dp39805
g10
I1
sg11
S''
sg12
Vboxplot.x.'day'
p39806
sg14
(lp39807
sg2
S"'day'"
p39808
sbasg2
S'x'
sba(icodemend.demo.code_suggest
Element
p39809
(dp39810
g10
I0
sg11
S'if provided , will set the plotting style of the boxes'
p39811
sg12
Vboxplot.boxprops
p39812
sg14
(lp39813
sg2
S'boxprops'
p39814
sba(icodemend.demo.code_suggest
Element
p39815
(dp39816
g10
I0
sg11
S'labels for each dataset . length must be compatible with dimensions of x'
p39817
sg12
Vboxplot.labels
p39818
sg14
(lp39819
sg2
S'labels'
p39820
sbag35377
asg2
g39691
sbs(S'contour'
p39821
S'z'
tp39822
g17828
s(g332
g39643
g33195
tp39823
g33191
s(g15061
S'align'
p39824
g35678
tp39825
g35674
s(S'normpdf'
p39826
g5130
tp39827
g5125
s(S'add_subplot'
p39828
S'xmargin'
p39829
tp39830
(icodemend.demo.code_suggest
Element
p39831
(dp39832
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p39833
sg12
Vadd_subplot.xmargin
p39834
sg14
(lp39835
sg2
g39829
sbs(S'bubble'
p39836
S'o'
tp39837
g12922
s(S'hexbin'
p39838
S'y'
tp39839
g26023
s(g101
g325
g21754
tp39840
g21750
s(S'gca'
p39841
S'ylim'
p39842
tp39843
(icodemend.demo.code_suggest
Element
p39844
(dp39845
g10
I1
sg11
S'set the data limits for the yaxis'
p39846
sg12
Vgca.ylim
p39847
sg14
(lp39848
(icodemend.demo.code_suggest
Element
p39849
(dp39850
g10
I1
sg11
S''
sg12
Vgca.ylim.(y_min, y_max)
p39851
sg14
(lp39852
sg2
S'(y_min, y_max)'
p39853
sbasg2
g39842
sbs(S'legend_artist'
p39854
S'fontsize'
p39855
tp39856
(icodemend.demo.code_suggest
Element
p39857
(dp39858
g10
I0
sg11
S'the fontsize in pixels . the artists being created should be scaled according to the given fontsize .'
p39859
sg12
Vlegend_artist.fontsize
p39860
sg14
(lp39861
sg2
g39855
sbs(g4998
g5025
g39503
tp39862
g39499
s(S'magnitude_spectrum'
p39863
S'visible'
p39864
tp39865
(icodemend.demo.code_suggest
Element
p39866
(dp39867
g10
I0
sg11
S"set the artist 's visiblity ."
p39868
sg12
Vmagnitude_spectrum.visible
p39869
sg14
(lp39870
sg2
g39864
sbs(S'csd'
p39871
S'markerfacecolor'
p39872
tp39873
(icodemend.demo.code_suggest
Element
p39874
(dp39875
g10
I0
sg11
S'set the marker face color .'
p39876
sg12
Vcsd.markerfacecolor
p39877
sg14
(lp39878
sg2
g39872
sbsS'clean'
p39879
(icodemend.demo.code_suggest
Element
p39880
(dp39881
g10
I0
sg11
S'clean dead weak references from the dictionary'
p39882
sg12
Vclean
p39883
sg14
(lp39884
sg2
g39879
sbs(g5424
g132
S"'#ffffff'"
p39885
tp39886
(icodemend.demo.code_suggest
Element
p39887
(dp39888
g10
I1
sg11
S''
sg12
Vgrid.color.'#ffffff'
p39889
sg14
(lp39890
sg2
g39885
sbs(g324
g785
g9576
tp39891
g9572
s(g332
g389
g33723
tp39892
g33719
s(g117
g118
g28219
tp39893
g28215
s(g93
g161
S'(116.4, 39.9)'
p39894
tp39895
(icodemend.demo.code_suggest
Element
p39896
(dp39897
g10
I1
sg11
S''
sg12
Vannotate.xy.(116/4, 39/9)
p39898
sg14
(lp39899
sg2
g39894
sbs(g1205
g13269
S'7'
tp39900
g4562
s(S'pcolormesh'
p39901
S'zorder'
p39902
tp39903
(icodemend.demo.code_suggest
Element
p39904
(dp39905
g10
I1
sg11
S'set the zorder for the artist .'
p39906
sg12
Vpcolormesh.zorder
p39907
sg14
(lp39908
(icodemend.demo.code_suggest
Element
p39909
(dp39910
g10
I1
sg11
S''
sg12
Vpcolormesh.zorder.5
p39911
sg14
(lp39912
sg2
S'5'
sbasg2
g39902
sbs(g93
g161
S'(x0, 1)'
p39913
tp39914
(icodemend.demo.code_suggest
Element
p39915
(dp39916
g10
I1
sg11
S''
sg12
Vannotate.xy.(x0, 1)
p39917
sg14
(lp39918
sg2
g39913
sbsS'has_data'
p39919
(icodemend.demo.code_suggest
Element
p39920
(dp39921
g10
I0
sg11
S'return true if any artists have been added to axes .'
p39922
sg12
Vhas_data
p39923
sg14
(lp39924
(icodemend.demo.code_suggest
Element
p39925
(dp39926
g10
I0
sg11
S'this should not be used to determine whether the datalim need to be updated , and may not actually be useful for anything .'
p39927
sg12
Vhas_data.dataLim
p39928
sg14
(lp39929
sg2
S'dataLim'
p39930
sbasg2
g39919
sbs(S'format_xdata'
p39931
S'x'
tp39932
(icodemend.demo.code_suggest
Element
p39933
(dp39934
g10
I0
sg11
S'return x string formatted . this function will use the attribute self.fmt_xdata if it is callable , else will fall back on the xaxis major formatter'
p39935
sg12
Vformat_xdata.x
p39936
sg14
(lp39937
sg2
S'x'
sbs(S'csd'
p39938
S'solid_joinstyle'
p39939
tp39940
(icodemend.demo.code_suggest
Element
p39941
(dp39942
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p39943
sg12
Vcsd.solid_joinstyle
p39944
sg14
(lp39945
sg2
g39939
sbs(g245
g140
g30448
tp39946
g30444
s(S'axvspan'
p39947
S'size_inches'
p39948
tp39949
(icodemend.demo.code_suggest
Element
p39950
(dp39951
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p39952
sg12
Vaxvspan.size_inches
p39953
sg14
(lp39954
sg2
g39948
sbs(S'arrow'
p39955
g2448
tp39956
g2405
s(g117
g118
g28504
tp39957
g28500
s(g93
g161
S'((-1), (-1))'
p39958
tp39959
(icodemend.demo.code_suggest
Element
p39960
(dp39961
g10
I1
sg11
S''
sg12
Vannotate.xy.((-1), (-1))
p39962
sg14
(lp39963
sg2
g39958
sbsS'circle'
p39964
(icodemend.demo.code_suggest
Element
p39965
(dp39966
g10
I3
sg11
S''
sg12
Vcircle
p39967
sg14
(lp39968
(icodemend.demo.code_suggest
Element
p39969
(dp39970
g10
I0
sg11
S'the center of the circle . default ( 0 , 0 ) .'
p39971
sg12
Vcircle.center
p39972
sg14
(lp39973
sg2
S'center'
p39974
sba(icodemend.demo.code_suggest
Element
p39975
(dp39976
g10
I0
sg11
S'the radius of the circle . default is 1 .'
p39977
sg12
Vcircle.radius
p39978
sg14
(lp39979
sg2
S'radius'
p39980
sba(icodemend.demo.code_suggest
Element
p39981
(dp39982
g10
I0
sg11
S'whether the created path should have the " readonly " argument set when creating the path instance .'
p39983
sg12
Vcircle.readonly
p39984
sg14
(lp39985
sg2
S'readonly'
p39986
sbasg2
g39964
sbs(g324
g10116
g9005
tp39987
g9001
s(S'angle_spectrum'
p39988
g18971
tp39989
g18966
sS'get_hatch'
p39990
(icodemend.demo.code_suggest
Element
p39991
(dp39992
g10
I0
sg11
S'return the current hatching pattern'
p39993
sg12
Vget_hatch
p39994
sg14
(lp39995
sg2
g39990
sbs(S'shade_rgb'
p39996
S'fraction'
p39997
tp39998
(icodemend.demo.code_suggest
Element
p39999
(dp40000
g10
I0
sg11
S'increases or decreases the contrast of the hillshade . values greater than one will cause intermediate values to move closer to full illumination or shadow ( and clipping any values that move beyond 0 or 1 ) . note that this is not visually or mathematically the same as vertical exaggeration .'
p40001
sg12
Vshade_rgb.fraction
p40002
sg14
(lp40003
sg2
g39997
sbs(S'contourf'
p40004
S'extend'
p40005
tp40006
(icodemend.demo.code_suggest
Element
p40007
(dp40008
g10
I3
sg11
S"unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included . these added ranges are then mapped to the special colormap values which default to the ends of the colormap range , but can be set via matplotlib.colors.colormap.set_under ( ) and matplotlib.colors.colormap.set_over ( ) methods ."
p40009
sg12
Vcontourf.extend
p40010
sg14
(lp40011
(icodemend.demo.code_suggest
Element
p40012
(dp40013
g10
I3
sg11
S''
sg12
Vcontourf.extend.'both'
p40014
sg14
(lp40015
sg2
S"'both'"
p40016
sbasg2
g40005
sbsS'set_annotation_clip'
p40017
(icodemend.demo.code_suggest
Element
p40018
(dp40019
g10
I0
sg11
S'set annotation_clip attribute .'
p40020
sg12
Vset_annotation_clip
p40021
sg14
(lp40022
g10530
asg2
g40017
sbs(g766
g7032
g19293
tp40023
g19289
s(g1170
g132
S"['b', 'g', 'y', 'purple', 'pink', 'crimson', 'burlywood', 'chartreuse', 'magenta', 'firebrick', 'cyan', 'black', 'darkgoldenrod', 'gray', 'g', 'k']"
p40024
tp40025
(icodemend.demo.code_suggest
Element
p40026
(dp40027
g10
I1
sg11
S''
sg12
Vhist.color.['b', 'g', 'y', 'purple', 'pink', 'crimson', 'burlywood', 'chartreuse', 'magenta', 'firebrick', 'cyan', 'black', 'darkgoldenrod', 'gray', 'g', 'k']
p40028
sg14
(lp40029
sg2
g40024
sbs(g5640
g5641
g11916
tp40030
g11912
s(S'set_data'
p40031
S'x'
tp40032
g36204
s(S'quiver'
p40033
g31069
tp40034
g31064
s(S'getp'
p40035
S'anchor'
p40036
tp40037
(icodemend.demo.code_suggest
Element
p40038
(dp40039
g10
I0
sg11
S'anchor'
p40040
sg12
Vgetp.anchor
p40041
sg14
(lp40042
sg2
g40036
sbs(S'cohere'
p40043
S'hatch'
p40044
tp40045
(icodemend.demo.code_suggest
Element
p40046
(dp40047
g10
I0
sg11
S'set the hatching pattern'
p40048
sg12
Vcohere.hatch
p40049
sg14
(lp40050
sg2
g40044
sbs(g8547
S'labeldistance'
p40051
S'1.1'
p40052
tp40053
(icodemend.demo.code_suggest
Element
p40054
(dp40055
g10
I1
sg11
S''
sg12
Vpie.labeldistance.1/1
p40056
sg14
(lp40057
sg2
g40052
sbs(g245
g140
g30408
tp40058
g30404
s(g8266
g110
S"'none'"
p40059
tp40060
(icodemend.demo.code_suggest
Element
p40061
(dp40062
g10
I1
sg11
S''
sg12
Vaxvspan.edgecolor.'none'
p40063
sg14
(lp40064
sg2
g40059
sbs(S'axhline'
p40065
S'y'
tp40066
g3348
sS'add_table'
p40067
(icodemend.demo.code_suggest
Element
p40068
(dp40069
g10
I2
sg11
S'add a table instance to the list of axes tables'
p40070
sg12
Vadd_table
p40071
sg14
(lp40072
sg2
g40067
sbs(S'broken_barh'
p40073
S'size_inches'
p40074
tp40075
(icodemend.demo.code_suggest
Element
p40076
(dp40077
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p40078
sg12
Vbroken_barh.size_inches
p40079
sg14
(lp40080
sg2
g40074
sbs(g582
g909
S'3'
tp40081
g3463
sS'offset_line'
p40082
(icodemend.demo.code_suggest
Element
p40083
(dp40084
g10
I0
sg11
S'offsets an array y by + / - an error and returns a tuple ( y - err , y + err ) .'
p40085
sg12
Voffset_line
p40086
sg14
(lp40087
(icodemend.demo.code_suggest
Element
p40088
(dp40089
g10
I0
sg11
S'offsets an array y by + / - an error and returns a tuple ( y - err , y + err ) .'
p40090
sg12
Voffset_line.y
p40091
sg14
(lp40092
sg2
S'y'
sbasg2
g40082
sbs(g332
g8625
g438
tp40093
(icodemend.demo.code_suggest
Element
p40094
(dp40095
g10
I1
sg11
S''
sg12
Vtext.animated.True
p40096
sg14
(lp40097
sg2
g438
sbs(g16
g132
S'bar_color'
p40098
tp40099
(icodemend.demo.code_suggest
Element
p40100
(dp40101
g10
I1
sg11
S''
sg12
Vbar.color.bar_color
p40102
sg14
(lp40103
sg2
g40098
sbs(S'add_subplot'
p40104
S'xticklabels'
p40105
tp40106
(icodemend.demo.code_suggest
Element
p40107
(dp40108
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p40109
sg12
Vadd_subplot.xticklabels
p40110
sg14
(lp40111
sg2
g40105
sbs(g117
g909
S'0'
tp40112
g29253
s(S'grid'
p40113
S'dashes'
p40114
tp40115
(icodemend.demo.code_suggest
Element
p40116
(dp40117
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p40118
sg12
Vgrid.dashes
p40119
sg14
(lp40120
sg2
g40114
sbs(g944
g118
S"'N'"
p40121
tp40122
(icodemend.demo.code_suggest
Element
p40123
(dp40124
g10
I1
sg11
S''
sg12
Vbarh.label.'N'
p40125
sg14
(lp40126
sg2
g40121
sbs(S'magnitude_spectrum'
p40127
S'color'
p40128
tp40129
(icodemend.demo.code_suggest
Element
p40130
(dp40131
g10
I0
sg11
S'set the color of the line'
p40132
sg12
Vmagnitude_spectrum.color
p40133
sg14
(lp40134
sg2
g40128
sbs(S'semilogx'
p40135
g38959
tp40136
g38954
s(S'hlines'
p40137
g5306
tp40138
g5291
s(S'get'
p40139
S'aspect'
p40140
tp40141
(icodemend.demo.code_suggest
Element
p40142
(dp40143
g10
I0
sg11
S'aspect'
p40144
sg12
Vget.aspect
p40145
sg14
(lp40146
sg2
g40140
sbs(S'Triangulation'
p40147
S'triangles'
p40148
g37185
tp40149
g37181
s(S'semilogx'
p40150
g39096
tp40151
g39091
s(g117
g2392
g29124
tp40152
g29120
s(g16
g132
S"'#deb0b0'"
p40153
tp40154
(icodemend.demo.code_suggest
Element
p40155
(dp40156
g10
I2
sg11
S''
sg12
Vbar.color.'#deb0b0'
p40157
sg14
(lp40158
sg2
g40153
sbs(S'magnitude_spectrum'
p40159
S'xticklabels'
p40160
tp40161
(icodemend.demo.code_suggest
Element
p40162
(dp40163
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p40164
sg12
Vmagnitude_spectrum.xticklabels
p40165
sg14
(lp40166
sg2
g40160
sbs(S'axvspan'
p40167
S'position'
p40168
tp40169
(icodemend.demo.code_suggest
Element
p40170
(dp40171
g10
I0
sg11
S'set the axes position with'
p40172
sg12
Vaxvspan.position
p40173
sg14
(lp40174
sg2
g40168
sbs(S'magnitude_spectrum'
p40175
S'codes'
p40176
tp40177
(icodemend.demo.code_suggest
Element
p40178
(dp40179
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p40180
sg12
Vmagnitude_spectrum.codes
p40181
sg14
(lp40182
sg2
g40176
sbs(g101
g8545
g22112
tp40183
g22108
s(S'loglog'
p40184
S'xticklabels'
p40185
tp40186
(icodemend.demo.code_suggest
Element
p40187
(dp40188
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p40189
sg12
Vloglog.xticklabels
p40190
sg14
(lp40191
sg2
g40185
sbs(S'hist'
p40192
S'stacked'
p40193
tp40194
(icodemend.demo.code_suggest
Element
p40195
(dp40196
g10
I11
sg11
S"if true , multiple data are stacked on top of each other if false multiple data are aranged side by side if histtype is ' bar ' or on top of each other if histtype is ' step '"
p40197
sg12
Vhist.stacked
p40198
sg14
(lp40199
g10578
asg2
g40193
sbs(g117
g909
g29293
tp40200
g29289
s(S'barh'
p40201
S'plotline'
p40202
tp40203
(icodemend.demo.code_suggest
Element
p40204
(dp40205
g10
I0
sg11
S'returns ( plotline , caplines , barlinecols ) :'
p40206
sg12
Vbarh.plotline
p40207
sg14
(lp40208
sg2
g40202
sbs(S'set_xticklabels'
p40209
g17217
tp40210
g17212
s(S'get_xaxis_text2_transform'
p40211
g27174
tp40212
g27169
s(g36477
S'ylabel'
p40213
g36030
tp40214
g36026
s(S'legend'
p40215
g14202
tp40216
g13992
s(S'imshow'
p40217
g9971
tp40218
g9923
s(S'add_subplot'
p40219
S'ylim'
p40220
tp40221
(icodemend.demo.code_suggest
Element
p40222
(dp40223
g10
I11
sg11
S'set the data limits for the yaxis'
p40224
sg12
Vadd_subplot.ylim
p40225
sg14
(lp40226
g38648
ag23783
ag38099
ag24007
ag16188
ag24868
ag13340
asg2
g40220
sbs(S'errorbar'
p40227
S'scalex'
p40228
tp40229
(icodemend.demo.code_suggest
Element
p40230
(dp40231
g10
I0
sg11
S'kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p40232
sg12
Verrorbar.scalex
p40233
sg14
(lp40234
sg2
g40228
sbs(g117
g118
g28379
tp40235
g28375
s(S'add_subplot'
p40236
S'label'
p40237
tp40238
(icodemend.demo.code_suggest
Element
p40239
(dp40240
g10
I0
sg11
S'set the label to s for auto legend .'
p40241
sg12
Vadd_subplot.label
p40242
sg14
(lp40243
sg2
g40237
sbs(g117
g909
g29288
tp40244
g29284
s(g117
g4274
g4274
tp40245
g28945
s(S'quiver'
p40246
g31051
tp40247
g31046
s(g944
g1262
g13832
tp40248
(icodemend.demo.code_suggest
Element
p40249
(dp40250
g10
I1
sg11
S''
sg12
Vbarh.left.good
p40251
sg14
(lp40252
sg2
g13832
sbs(S'psd'
p40253
g37078
tp40254
g37073
s(g117
g5775
g29382
tp40255
g29378
s(S'csd'
p40256
S'ymargin'
p40257
tp40258
(icodemend.demo.code_suggest
Element
p40259
(dp40260
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p40261
sg12
Vcsd.ymargin
p40262
sg14
(lp40263
sg2
g40257
sbs(g101
S'c'
S'r'
tp40264
g21552
s(S'hexbin'
p40265
S'N'
tp40266
g25797
sS'set_file'
p40267
(icodemend.demo.code_suggest
Element
p40268
(dp40269
g10
I3
sg11
S'set the filename of the fontfile to use .'
p40270
sg12
Vset_file
p40271
sg14
(lp40272
sg2
g40267
sbsS'set_fill'
p40273
(icodemend.demo.code_suggest
Element
p40274
(dp40275
g10
I0
sg11
S'set whether to fill the patch'
p40276
sg12
Vset_fill
p40277
sg14
(lp40278
sg2
g40273
sbs(S'quotes_historical_yahoo_ochl'
p40279
S'date2'
p40280
tp40281
(icodemend.demo.code_suggest
Element
p40282
(dp40283
g10
I0
sg11
S'end date'
p40284
sg12
Vquotes_historical_yahoo_ochl.date2
p40285
sg14
(lp40286
sg2
g40280
sbs(g93
g4800
g25294
tp40287
g25290
sS'get_linelength'
p40288
(icodemend.demo.code_suggest
Element
p40289
(dp40290
g10
I0
sg11
S'get the length of the lines used to mark each event'
p40291
sg12
Vget_linelength
p40292
sg14
(lp40293
sg2
g40288
sbs(g766
g515
g9916
tp40294
g39453
s(S'errorbar'
p40295
S'xdata'
p40296
tp40297
(icodemend.demo.code_suggest
Element
p40298
(dp40299
g10
I0
sg11
S'set the data np.array for x'
p40300
sg12
Verrorbar.xdata
p40301
sg14
(lp40302
sg2
g40296
sbs(g117
S'x'
g29318
tp40303
g29314
s(S'loglog'
p40304
S'clip_box'
p40305
tp40306
(icodemend.demo.code_suggest
Element
p40307
(dp40308
g10
I0
sg11
S"set the artist 's clip bbox ."
p40309
sg12
Vloglog.clip_box
p40310
sg14
(lp40311
sg2
g40305
sbs(S'update_coords'
p40312
S'y'
tp40313
(icodemend.demo.code_suggest
Element
p40314
(dp40315
g10
I0
sg11
S"computes the actual x , y coordinates for text based on the input x , y and the dashlength . since the rotation is with respect to the actual canvas 's coordinates we need to map back and forth ."
p40316
sg12
Vupdate_coords.y
p40317
sg14
(lp40318
sg2
S'y'
sbs(g12176
g909
g6263
tp40319
g6259
s(S'pcolormesh'
p40320
S'edgecolor'
p40321
tp40322
(icodemend.demo.code_suggest
Element
p40323
(dp40324
g10
I2
sg11
S'set the edgecolor(s ) of the collection .'
p40325
sg12
Vpcolormesh.edgecolor
p40326
sg14
(lp40327
g15967
ag10250
asg2
g40321
sbs(S'semilogy'
p40328
g2392
S'2'
tp40329
g39160
s(S'figtext'
p40330
g11437
tp40331
g11432
s(S'rec_groupby'
p40332
S'x'
tp40333
(icodemend.demo.code_suggest
Element
p40334
(dp40335
g10
I0
sg11
S'stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname . for example :'
p40336
sg12
Vrec_groupby.x
p40337
sg14
(lp40338
sg2
S'x'
sbs(g5424
g2251
S"'-'"
p40339
tp40340
(icodemend.demo.code_suggest
Element
p40341
(dp40342
g10
I18
sg11
S''
sg12
Vgrid.linestyle.'-'
p40343
sg14
(lp40344
sg2
g40339
sbs(g245
g140
g30433
tp40345
g30429
s(S'semilogy'
p40346
g39367
tp40347
g39362
s(S'angle_spectrum'
p40348
g18810
tp40349
g18805
s(g324
g667
S'5'
tp40350
g5771
s(S'axvline'
p40351
S'hatch'
p40352
tp40353
(icodemend.demo.code_suggest
Element
p40354
(dp40355
g10
I0
sg11
S'set the hatching pattern'
p40356
sg12
Vaxvline.hatch
p40357
sg14
(lp40358
sg2
g40352
sbs(g117
g23011
g29663
tp40359
g29659
s(S'semilogy'
p40360
g39277
tp40361
g39272
s(S'add'
p40362
S'prop_cycle'
p40363
tp40364
(icodemend.demo.code_suggest
Element
p40365
(dp40366
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p40367
sg12
Vadd.prop_cycle
p40368
sg14
(lp40369
sg2
g40363
sbs(S'plotting'
p40370
g15760
tp40371
g15755
s(S'warn_deprecated'
p40372
S'message'
p40373
tp40374
(icodemend.demo.code_suggest
Element
p40375
(dp40376
g10
I0
sg11
S'override the default deprecation message . the format specifier %(func)s may be used for the name of the function , and %(alternative)s may be used in the deprecation message to insert the name of an alternative to the deprecated function . %(obj_type ) may be used to insert a friendly name for the type of object being deprecated .'
p40377
sg12
Vwarn_deprecated.message
p40378
sg14
(lp40379
sg2
g40373
sbsS'set_mew'
p40380
(icodemend.demo.code_suggest
Element
p40381
(dp40382
g10
I0
sg11
S'alias for set_markeredgewidth'
p40383
sg12
Vset_mew
p40384
sg14
(lp40385
sg2
g40380
sbs(g117
S'antialiased'
p40386
g1944
tp40387
g29700
sS'set_mec'
p40388
(icodemend.demo.code_suggest
Element
p40389
(dp40390
g10
I0
sg11
S'alias for set_markeredgecolor'
p40391
sg12
Vset_mec
p40392
sg14
(lp40393
sg2
g40388
sbs(S'gca'
p40394
S'xticklabels'
p40395
tp40396
(icodemend.demo.code_suggest
Element
p40397
(dp40398
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p40399
sg12
Vgca.xticklabels
p40400
sg14
(lp40401
sg2
g40395
sbs(g117
g348
g29533
tp40402
g29529
sS'set_mutation_aspect'
p40403
(icodemend.demo.code_suggest
Element
p40404
(dp40405
g10
I0
sg11
S'set the aspect ratio of the bbox mutation .'
p40406
sg12
Vset_mutation_aspect
p40407
sg14
(lp40408
sg2
g40403
sbs(g452
g453
g7279
tp40409
g7275
s(S'errorbar'
p40410
S'xlim'
p40411
tp40412
(icodemend.demo.code_suggest
Element
p40413
(dp40414
g10
I0
sg11
S'set the data limits for the xaxis'
p40415
sg12
Verrorbar.xlim
p40416
sg14
(lp40417
sg2
g40411
sbs(S'magnitude_spectrum'
p40418
S'markeredgewidth'
p40419
tp40420
(icodemend.demo.code_suggest
Element
p40421
(dp40422
g10
I0
sg11
S'set the marker edge width in points'
p40423
sg12
Vmagnitude_spectrum.markeredgewidth
p40424
sg14
(lp40425
sg2
g40419
sbs(g16
g39824
g3184
tp40426
g3180
s(S'save'
p40427
S'fps'
p40428
tp40429
(icodemend.demo.code_suggest
Element
p40430
(dp40431
g10
I13
sg11
S"fps is the frames per second in the movie . defaults to none , which will use the animation 's specified interval to set the frames per second ."
p40432
sg12
Vsave.fps
p40433
sg14
(lp40434
(icodemend.demo.code_suggest
Element
p40435
(dp40436
g10
I5
sg11
S''
sg12
Vsave.fps.30
p40437
sg14
(lp40438
sg2
S'30'
p40439
sba(icodemend.demo.code_suggest
Element
p40440
(dp40441
g10
I2
sg11
S''
sg12
Vsave.fps.15
p40442
sg14
(lp40443
sg2
S'15'
p40444
sbag10372
a(icodemend.demo.code_suggest
Element
p40445
(dp40446
g10
I1
sg11
S''
sg12
Vsave.fps.10
p40447
sg14
(lp40448
sg2
S'10'
p40449
sbag35340
ag22330
a(icodemend.demo.code_suggest
Element
p40450
(dp40451
g10
I1
sg11
S''
sg12
Vsave.fps.4
p40452
sg14
(lp40453
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p40454
(dp40455
g10
I1
sg11
S''
sg12
Vsave.fps.6
p40456
sg14
(lp40457
sg2
S'6'
sbasg2
g40428
sbs(g101
g102
g21857
tp40458
g21853
s(S'savefig'
p40459
S'orientation'
p40460
tp40461
(icodemend.demo.code_suggest
Element
p40462
(dp40463
g10
I3
sg11
S'not supported on all backends ; currently only on postscript output'
p40464
sg12
Vsavefig.orientation
p40465
sg14
(lp40466
(icodemend.demo.code_suggest
Element
p40467
(dp40468
g10
I2
sg11
S''
sg12
Vsavefig.orientation.'landscape'
p40469
sg14
(lp40470
sg2
S"'landscape'"
p40471
sba(icodemend.demo.code_suggest
Element
p40472
(dp40473
g10
I1
sg11
S''
sg12
Vsavefig.orientation.'portrait'
p40474
sg14
(lp40475
sg2
S"'portrait'"
p40476
sbasg2
g40460
sbs(g245
g140
g30348
tp40477
g30344
s(g252
g253
g14026
tp40478
g14022
sS'add_tool'
p40479
(icodemend.demo.code_suggest
Element
p40480
(dp40481
g10
I0
sg11
S'add tool to toolmanager adds a tool to this container'
p40482
sg12
Vadd_tool
p40483
sg14
(lp40484
(icodemend.demo.code_suggest
Element
p40485
(dp40486
g10
I0
sg11
S'the name of the group to add this tool to .'
p40487
sg12
Vadd_tool.group
p40488
sg14
(lp40489
sg2
S'group'
p40490
sbag35059
a(icodemend.demo.code_suggest
Element
p40491
(dp40492
g10
I0
sg11
S'the position within the group to place this tool . defaults to end .'
p40493
sg12
Vadd_tool.position
p40494
sg14
(lp40495
sg2
S'position'
p40496
sba(icodemend.demo.code_suggest
Element
p40497
(dp40498
g10
I0
sg11
S'the tool to add , see toolmanager.get_tool . reference to find the class of the tool to added .|||add tool to toolmanager'
p40499
sg12
Vadd_tool.tool
p40500
sg14
(lp40501
sg2
S'tool'
p40502
sbasg2
g40479
sbs(S'grid'
p40503
S'linestyle'
p40504
tp40505
(icodemend.demo.code_suggest
Element
p40506
(dp40507
g10
I27
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p40508
sg12
Vgrid.linestyle
p40509
sg14
(lp40510
g40341
a(icodemend.demo.code_suggest
Element
p40511
(dp40512
g10
I8
sg11
S''
sg12
Vgrid.linestyle.'--'
p40513
sg14
(lp40514
sg2
S"'--'"
p40515
sba(icodemend.demo.code_suggest
Element
p40516
(dp40517
g10
I1
sg11
S''
sg12
Vgrid.linestyle.'solid'
p40518
sg14
(lp40519
sg2
S"'solid'"
p40520
sbasg2
g40504
sbs(S'add'
p40521
S'readonly'
p40522
tp40523
(icodemend.demo.code_suggest
Element
p40524
(dp40525
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p40526
sg12
Vadd.readonly
p40527
sg14
(lp40528
sg2
g40522
sbs(S'phase_spectrum'
p40529
S'pickradius'
p40530
tp40531
(icodemend.demo.code_suggest
Element
p40532
(dp40533
g10
I0
sg11
S'sets the pick radius used for containment tests'
p40534
sg12
Vphase_spectrum.pickradius
p40535
sg14
(lp40536
sg2
g40530
sbs(S'legend'
p40537
g14361
tp40538
g14347
s(S'arrow'
p40539
g2665
tp40540
g2660
sS'button_press_event'
p40541
(icodemend.demo.code_suggest
Element
p40542
(dp40543
g10
I0
sg11
S'backend derived classes should call this function on any mouse button press .'
p40544
sg12
Vbutton_press_event
p40545
sg14
(lp40546
sg2
g40541
sbs(g245
g140
g30228
tp40547
g30224
s(g101
g102
g21892
tp40548
g21888
s(S'grid'
p40549
S'xscale'
p40550
tp40551
(icodemend.demo.code_suggest
Element
p40552
(dp40553
g10
I0
sg11
S'set the scaling of the x-axis'
p40554
sg12
Vgrid.xscale
p40555
sg14
(lp40556
sg2
g40550
sbs(g1170
g1257
S'n'
tp40557
(icodemend.demo.code_suggest
Element
p40558
(dp40559
g10
I2
sg11
S''
sg12
Vhist.bins.n
p40560
sg14
(lp40561
sg2
S'n'
sbs(g582
g2392
g3432
tp40562
g3428
s(S'pcolorfast'
p40563
S'C'
tp40564
g33806
s(g117
g118
g27561
tp40565
g27557
s(S'errorbar'
p40566
S'markerfacecolor'
p40567
tp40568
(icodemend.demo.code_suggest
Element
p40569
(dp40570
g10
I0
sg11
S'set the marker face color .|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p40571
sg12
Verrorbar.markerfacecolor
p40572
sg14
(lp40573
sg2
g40567
sbs(S'psd'
p40574
g37072
tp40575
g37067
s(S'matshow'
p40576
S'X'
tp40577
(icodemend.demo.code_suggest
Element
p40578
(dp40579
g10
I0
sg11
S'display the image in x to current axes . x may be a float array , a uint8 array or a pil image . if x is an array , it can have the following shapes :'
p40580
sg12
Vmatshow.X
p40581
sg14
(lp40582
sg2
S'X'
sbs(S'find_tex_file'
p40583
S'format'
p40584
tp40585
(icodemend.demo.code_suggest
Element
p40586
(dp40587
g10
I0
sg11
S'call kpsewhich to find a file in the texmf tree . if format is not none , it is used as the value for the - - format option .'
p40588
sg12
Vfind_tex_file.format
p40589
sg14
(lp40590
sg2
g40584
sbsS'blend_hsv'
p40591
(icodemend.demo.code_suggest
Element
p40592
(dp40593
g10
I0
sg11
S'take the input data array , convert to hsv values in the given colormap , then adjust those color values to give the impression of a shaded relief map with a specified light source .'
p40594
sg12
Vblend_hsv
p40595
sg14
(lp40596
(icodemend.demo.code_suggest
Element
p40597
(dp40598
g10
I0
sg11
S'the maximum saturation value that the intensity map can shift the output image to . defaults to 1 .'
p40599
sg12
Vblend_hsv.hsv_max_sat
p40600
sg14
(lp40601
sg2
S'hsv_max_sat'
p40602
sba(icodemend.demo.code_suggest
Element
p40603
(dp40604
g10
I0
sg11
S'the maximum value ( " v " in " hsv " ) that the intensity map can shift the output image to . defaults to 1 .'
p40605
sg12
Vblend_hsv.hsv_max_val
p40606
sg14
(lp40607
sg2
S'hsv_max_val'
p40608
sbag20690
ag23880
ag35587
a(icodemend.demo.code_suggest
Element
p40609
(dp40610
g10
I0
sg11
S'an mxnx3 rgb array of floats ranging from 0 to 1 ( color image ) .'
p40611
sg12
Vblend_hsv.rgb
p40612
sg14
(lp40613
sg2
S'rgb'
p40614
sbasg2
g40591
sbs(g139
g3075
g2050
tp40615
g2046
s(g117
g132
g28794
tp40616
g28790
s(S'get_xheight'
p40617
g2319
tp40618
g2314
s(S'pcolormesh'
p40619
S'xlabel'
p40620
tp40621
(icodemend.demo.code_suggest
Element
p40622
(dp40623
g10
I0
sg11
S'set the label for the xaxis .'
p40624
sg12
Vpcolormesh.xlabel
p40625
sg14
(lp40626
sg2
g40620
sbs(S'table'
p40627
S'path_effects'
p40628
tp40629
(icodemend.demo.code_suggest
Element
p40630
(dp40631
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p40632
sg12
Vtable.path_effects
p40633
sg14
(lp40634
sg2
g40628
sbs(g324
g785
g9407
tp40635
g9403
s(S'set_yticklabels'
p40636
g18034
tp40637
g18029
s(S'Normal'
p40638
S'offset'
p40639
tp40640
(icodemend.demo.code_suggest
Element
p40641
(dp40642
g10
I0
sg11
S'the offset to apply to the path , measured in points .'
p40643
sg12
VNormal.offset
p40644
sg14
(lp40645
sg2
g40639
sbs(S'pcolormesh'
p40646
S'clim'
p40647
tp40648
(icodemend.demo.code_suggest
Element
p40649
(dp40650
g10
I0
sg11
S'set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp'
p40651
sg12
Vpcolormesh.clim
p40652
sg14
(lp40653
sg2
g40647
sbs(S'axvspan'
p40654
S'ymargin'
p40655
tp40656
(icodemend.demo.code_suggest
Element
p40657
(dp40658
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p40659
sg12
Vaxvspan.ymargin
p40660
sg14
(lp40661
sg2
g40655
sbs(g93
g161
S'(radians(Az), (90 - E))'
p40662
tp40663
(icodemend.demo.code_suggest
Element
p40664
(dp40665
g10
I1
sg11
S''
sg12
Vannotate.xy.(radians(Az), (90 - E))
p40666
sg14
(lp40667
sg2
g40662
sbs(g117
S'x'
g29328
tp40668
g29324
s(g93
g4800
g25369
tp40669
g25365
s(g93
g909
S'9'
tp40670
g8750
s(g245
g140
g30119
tp40671
g30115
s(g958
g8890
S'4'
tp40672
g22851
s(S'add_subplot'
p40673
S"projection='polar'"
p40674
tp40675
(icodemend.demo.code_suggest
Element
p40676
(dp40677
g10
I0
sg11
S"kwargs are legal axes kwargs plus projection , which chooses a projection type for the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) ."
p40678
sg12
Vadd_subplot.projection='polar'
p40679
sg14
(lp40680
sg2
g40674
sbsS'set_stretch'
p40681
(icodemend.demo.code_suggest
Element
p40682
(dp40683
g10
I0
sg11
S'set the font stretch ( horizontal condensation or expansion ) . set the font stretch or width .'
p40684
sg12
Vset_stretch
p40685
sg14
(lp40686
sg2
g40681
sbsS'stride_repeat'
p40687
(icodemend.demo.code_suggest
Element
p40688
(dp40689
g10
I0
sg11
S'repeat the values in an array in a memory-efficient manner .'
p40690
sg12
Vstride_repeat
p40691
sg14
(lp40692
sg2
g40687
sbs(g324
g785
g9412
tp40693
g9408
s(g117
g118
g27463
tp40694
g27459
s(g245
g140
g30333
tp40695
g30329
s(S'barbs'
p40696
S'fill_empty'
p40697
tp40698
(icodemend.demo.code_suggest
Element
p40699
(dp40700
g10
I0
sg11
S'a flag on whether the empty barbs ( circles ) that are drawn should be filled with the flag color . if they are not filled , they will be drawn such that no color is applied to the center . default is false'
p40701
sg12
Vbarbs.fill_empty
p40702
sg14
(lp40703
sg2
g40697
sbs(S'clabel'
p40704
g14894
tp40705
g14885
s(S'figtext'
p40706
g11215
tp40707
g11210
s(S'phase_spectrum'
p40708
S'ylim'
p40709
tp40710
(icodemend.demo.code_suggest
Element
p40711
(dp40712
g10
I0
sg11
S'set the data limits for the yaxis'
p40713
sg12
Vphase_spectrum.ylim
p40714
sg14
(lp40715
sg2
g40709
sbs(S'set_hatch'
p40716
g8259
tp40717
g8254
sS'get_ms'
p40718
(icodemend.demo.code_suggest
Element
p40719
(dp40720
g10
I0
sg11
S'alias for get_markersize'
p40721
sg12
Vget_ms
p40722
sg14
(lp40723
sg2
g40718
sbs(g117
g118
g27705
tp40724
g27701
s(g16
g489
S'3'
tp40725
(icodemend.demo.code_suggest
Element
p40726
(dp40727
g10
I1
sg11
S''
sg12
Vbar.bottom.3
p40728
sg14
(lp40729
sg2
S'3'
sbs(S'distances_along_curve'
p40730
S'N'
tp40731
g16295
s(g117
g13057
g25220
tp40732
g25216
s(S'annotate'
p40733
S'position'
p40734
tp40735
(icodemend.demo.code_suggest
Element
p40736
(dp40737
g10
I0
sg11
S'set the axes position with|||set the ( x , y ) position of the text'
p40738
sg12
Vannotate.position
p40739
sg14
(lp40740
sg2
g40734
sbs(S'errorbar'
p40741
S'xlabel'
p40742
tp40743
(icodemend.demo.code_suggest
Element
p40744
(dp40745
g10
I0
sg11
S'set the label for the xaxis .'
p40746
sg12
Verrorbar.xlabel
p40747
sg14
(lp40748
sg2
g40742
sbs(S'candlestick2_ochl'
p40749
S'closes'
p40750
tp40751
(icodemend.demo.code_suggest
Element
p40752
(dp40753
g10
I0
sg11
S'sequence of closing values'
p40754
sg12
Vcandlestick2_ochl.closes
p40755
sg14
(lp40756
sg2
g40750
sbs(g332
g627
S'8'
tp40757
(icodemend.demo.code_suggest
Element
p40758
(dp40759
g10
I1
sg11
S''
sg12
Vtext.size.8
p40760
sg14
(lp40761
sg2
S'8'
sbs(S'angle_spectrum'
p40762
g18924
tp40763
g18919
s(S'streamplot'
p40764
S'norm'
p40765
tp40766
(icodemend.demo.code_suggest
Element
p40767
(dp40768
g10
I0
sg11
S'normalize object used to scale luminance data to 0 , 1 . if none , stretch ( min , max ) to ( 0 , 1 ) . only necessary when color is an array .'
p40769
sg12
Vstreamplot.norm
p40770
sg14
(lp40771
sg2
g40765
sbsS'is_writable_file_like'
p40772
(icodemend.demo.code_suggest
Element
p40773
(dp40774
g10
I0
sg11
S'return true if obj looks like a file object with a write method'
p40775
sg12
Vis_writable_file_like
p40776
sg14
(lp40777
(icodemend.demo.code_suggest
Element
p40778
(dp40779
g10
I0
sg11
S'return true if obj looks like a file object with a write method'
p40780
sg12
Vis_writable_file_like.obj
p40781
sg14
(lp40782
sg2
S'obj'
p40783
sba(icodemend.demo.code_suggest
Element
p40784
(dp40785
g10
I0
sg11
S'return true if obj looks like a file object with a write method'
p40786
sg12
Vis_writable_file_like.write
p40787
sg14
(lp40788
sg2
S'write'
p40789
sbasg2
g40772
sbs(S'grid'
p40790
S'picker'
p40791
tp40792
(icodemend.demo.code_suggest
Element
p40793
(dp40794
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p40795
sg12
Vgrid.picker
p40796
sg14
(lp40797
sg2
g40791
sbs(S'errorbar'
p40798
S'markeredgewith'
p40799
tp40800
(icodemend.demo.code_suggest
Element
p40801
(dp40802
g10
I0
sg11
S'where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p40803
sg12
Verrorbar.markeredgewith
p40804
sg14
(lp40805
sg2
g40799
sbs(g1003
g1004
g438
tp40806
g10955
s(S'candlestick2_ohlc'
p40807
S'lows'
p40808
tp40809
(icodemend.demo.code_suggest
Element
p40810
(dp40811
g10
I0
sg11
S'sequence of low values'
p40812
sg12
Vcandlestick2_ohlc.lows
p40813
sg14
(lp40814
sg2
g40808
sbs(g245
g140
g30318
tp40815
g30314
s(S'to_polygons'
p40816
S'width'
p40817
tp40818
(icodemend.demo.code_suggest
Element
p40819
(dp40820
g10
I0
sg11
S'if width and height are both non-zero then the lines will be simplified so that vertices outside of ( 0 , 0 ) , ( width , height ) will be clipped .'
p40821
sg12
Vto_polygons.width
p40822
sg14
(lp40823
sg2
g40817
sbs(S'set_sketch_params'
p40824
g3950
tp40825
g3945
s(S'angle_spectrum'
p40826
g18888
tp40827
g18883
s(g20499
g20500
g15520
tp40828
g15516
s(S'plot'
p40829
g29298
tp40830
g29248
s(g117
g118
g27989
tp40831
g27985
s(g958
g8890
S'6'
tp40832
g22859
sS'stem'
p40833
(icodemend.demo.code_suggest
Element
p40834
(dp40835
g10
I19
sg11
S'create a stem plot .'
p40836
sg12
Vstem
p40837
sg14
(lp40838
(icodemend.demo.code_suggest
Element
p40839
(dp40840
g10
I5
sg11
S'a stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . a horizontal line at 0 is is plotted using basefmt .'
p40841
sg12
Vstem.markerfmt
p40842
sg14
(lp40843
g36733
ag26138
ag37718
asg2
S'markerfmt'
p40844
sbag27048
a(icodemend.demo.code_suggest
Element
p40845
(dp40846
g10
I2
sg11
S'a stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . a horizontal line at 0 is is plotted using basefmt .'
p40847
sg12
Vstem.basefmt
p40848
sg14
(lp40849
g8
asg2
S'basefmt'
p40850
sba(icodemend.demo.code_suggest
Element
p40851
(dp40852
g10
I0
sg11
S'return value is a tuple ( markerline , stemlines , baseline ) .'
p40853
sg12
Vstem.baseline
p40854
sg14
(lp40855
sg2
S'baseline'
p40856
sbag8390
ag3070
ag15164
a(icodemend.demo.code_suggest
Element
p40857
(dp40858
g10
I0
sg11
S'a stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . a horizontal line at 0 is is plotted using basefmt .'
p40859
sg12
Vstem.y
p40860
sg14
(lp40861
sg2
S'y'
sbasg2
g40833
sbs(g1170
g118
S"'data'"
p40862
tp40863
(icodemend.demo.code_suggest
Element
p40864
(dp40865
g10
I1
sg11
S''
sg12
Vhist.label.'data'
p40866
sg14
(lp40867
sg2
g40862
sbsS'step'
p40868
(icodemend.demo.code_suggest
Element
p40869
(dp40870
g10
I38
sg11
S'make a step plot .'
p40871
sg12
Vstep
p40872
sg14
(lp40873
(icodemend.demo.code_suggest
Element
p40874
(dp40875
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :'
p40876
sg12
Vstep.args
p40877
sg14
(lp40878
sg2
S'args'
p40879
sba(icodemend.demo.code_suggest
Element
p40880
(dp40881
g10
I0
sg11
S'if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :'
p40882
sg12
Vstep.fmt
p40883
sg14
(lp40884
sg2
S'fmt'
p40885
sbag26895
ag32432
a(icodemend.demo.code_suggest
Element
p40886
(dp40887
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||x and y must be 1-d sequences , and it is assumed , but not checked , that x is uniformly increasing .'
p40888
sg12
Vstep.x
p40889
sg14
(lp40890
sg2
S'x'
sbag34072
asg2
g40868
sbs(S'get_kern'
p40891
S'fontsizeX'
p40892
tp40893
(icodemend.demo.code_suggest
Element
p40894
(dp40895
g10
I0
sg11
S'fontsizex : the fontsize in points'
p40896
sg12
Vget_kern.fontsizeX
p40897
sg14
(lp40898
sg2
g40892
sbs(g101
S's'
g7563
tp40899
g7559
s(g16
S'orientation'
p40900
S"'horizontal'"
p40901
tp40902
(icodemend.demo.code_suggest
Element
p40903
(dp40904
g10
I1
sg11
S''
sg12
Vbar.orientation.'horizontal'
p40905
sg14
(lp40906
sg2
g40901
sbsS'get_locator'
p40907
(icodemend.demo.code_suggest
Element
p40908
(dp40909
g10
I0
sg11
S'pick the best locator based on a distance .'
p40910
sg12
Vget_locator
p40911
sg14
(lp40912
sg2
g40907
sbs(S'specgram'
p40913
S'window'
p40914
tp40915
(icodemend.demo.code_suggest
Element
p40916
(dp40917
g10
I0
sg11
S'compute and plot a spectrogram of data in x . data are split into nfft length segments and the spectrum of each section is computed . the windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap . the spectrogram is plotted as a colormap ( using imshow ) .|||a function or a vector of length nfft . to create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. the default is window_hanning ( ) . if a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment .'
p40918
sg12
Vspecgram.window
p40919
sg14
(lp40920
sg2
g40914
sbs(S'figtext'
p40921
g11485
tp40922
g11480
s(g16
g132
S"'.75'"
p40923
tp40924
(icodemend.demo.code_suggest
Element
p40925
(dp40926
g10
I4
sg11
S''
sg12
Vbar.color.'/75'
p40927
sg14
(lp40928
sg2
g40923
sbs(S'quiver'
p40929
S'Y'
tp40930
g30933
s(S'index_bar'
p40931
g8307
tp40932
g8302
s(S'axvspan'
p40933
S'clip_on'
p40934
tp40935
(icodemend.demo.code_suggest
Element
p40936
(dp40937
g10
I1
sg11
S'set whether artist uses clipping .'
p40938
sg12
Vaxvspan.clip_on
p40939
sg14
(lp40940
(icodemend.demo.code_suggest
Element
p40941
(dp40942
g10
I1
sg11
S''
sg12
Vaxvspan.clip_on.False
p40943
sg14
(lp40944
sg2
g1944
sbasg2
g40934
sbs(S'Slider'
p40945
S'valmin'
p40946
tp40947
(icodemend.demo.code_suggest
Element
p40948
(dp40949
g10
I1
sg11
S'the minimum value of the slider'
p40950
sg12
VSlider.valmin
p40951
sg14
(lp40952
(icodemend.demo.code_suggest
Element
p40953
(dp40954
g10
I1
sg11
S''
sg12
VSlider.valmin.0/0
p40955
sg14
(lp40956
sg2
S'0.0'
p40957
sbasg2
g40946
sbs(S'get_paths_extents'
p40958
S'transforms'
p40959
tp40960
(icodemend.demo.code_suggest
Element
p40961
(dp40962
g10
I0
sg11
S'transforms is an optional sequence of affine2d instances to apply to each path .'
p40963
sg12
Vget_paths_extents.transforms
p40964
sg14
(lp40965
sg2
g40959
sbs(g944
g132
g35711
tp40966
g35707
s(S'errorbar'
p40967
S'solid_capstyle'
p40968
tp40969
(icodemend.demo.code_suggest
Element
p40970
(dp40971
g10
I0
sg11
S'set the cap style for solid linestyles'
p40972
sg12
Verrorbar.solid_capstyle
p40973
sg14
(lp40974
sg2
g40968
sbs(g8547
g8548
g19502
tp40975
g19498
s(S'set_yticklabels'
p40976
g18238
tp40977
g18233
sS'get_picker'
p40978
(icodemend.demo.code_suggest
Element
p40979
(dp40980
g10
I0
sg11
S'return the picker object used by this artist'
p40981
sg12
Vget_picker
p40982
sg14
(lp40983
sg2
g40978
sbs(S'barh'
p40984
S'capthick'
p40985
tp40986
(icodemend.demo.code_suggest
Element
p40987
(dp40988
g10
I0
sg11
S'an alias kwarg to markeredgewidth ( a.k.a. - mew ) . this setting is a more sensible name for the property that controls the thickness of the error bar cap in points . for backwards compatibility , if mew or markeredgewidth are given , then they will over-ride capthick . this may change in future releases .'
p40989
sg12
Vbarh.capthick
p40990
sg14
(lp40991
sg2
g40985
sbs(S'set_xticklabels'
p40992
g17259
tp40993
g17254
s(S'csd'
p40994
S'dash_capstyle'
p40995
tp40996
(icodemend.demo.code_suggest
Element
p40997
(dp40998
g10
I0
sg11
S'set the cap style for dashed linestyles'
p40999
sg12
Vcsd.dash_capstyle
p41000
sg14
(lp41001
sg2
g40995
sbs(S'axvline'
p41002
S'readonly'
p41003
tp41004
(icodemend.demo.code_suggest
Element
p41005
(dp41006
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p41007
sg12
Vaxvline.readonly
p41008
sg14
(lp41009
sg2
g41003
sbsg40638
(icodemend.demo.code_suggest
Element
p41010
(dp41011
g10
I0
sg11
S''
sg12
VNormal
p41012
sg14
(lp41013
g40641
asg2
g40638
sbs(g8266
g132
S"'red'"
p41014
tp41015
(icodemend.demo.code_suggest
Element
p41016
(dp41017
g10
I5
sg11
S''
sg12
Vaxvspan.color.'red'
p41018
sg14
(lp41019
sg2
g41014
sbs(S'add_axes'
p41020
S'bottom'
p41021
tp41022
(icodemend.demo.code_suggest
Element
p41023
(dp41024
g10
I0
sg11
S"add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal axes kwargs plus projection which sets the projection type of the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) . typical usage :"
p41025
sg12
Vadd_axes.bottom
p41026
sg14
(lp41027
sg2
g41021
sbs(g8266
g126
S'0'
tp41028
(icodemend.demo.code_suggest
Element
p41029
(dp41030
g10
I1
sg11
S''
sg12
Vaxvspan.ymin.0
p41031
sg14
(lp41032
sg2
S'0'
sbs(S'fill'
p41033
S'snap'
p41034
tp41035
(icodemend.demo.code_suggest
Element
p41036
(dp41037
g10
I0
sg11
S'sets the snap setting which may be'
p41038
sg12
Vfill.snap
p41039
sg14
(lp41040
sg2
g41034
sbs(S'getpoints'
p41041
S'x1'
p41042
tp41043
(icodemend.demo.code_suggest
Element
p41044
(dp41045
g10
I0
sg11
S'for line segment defined by ( x1 , y1 ) and ( x2 , y2 ) return the points on the line that is perpendicular to the line and intersects ( x2 , y2 ) and the distance from ( x2 , y2 ) of the returned points is k .'
p41046
sg12
Vgetpoints.x1
p41047
sg14
(lp41048
sg2
g41042
sbs(S'gca'
p41049
S'anchor'
p41050
tp41051
(icodemend.demo.code_suggest
Element
p41052
(dp41053
g10
I0
sg11
S'anchor'
p41054
sg12
Vgca.anchor
p41055
sg14
(lp41056
sg2
g41050
sbs(S'barh'
p41057
S'ylim'
p41058
tp41059
(icodemend.demo.code_suggest
Element
p41060
(dp41061
g10
I0
sg11
S'set the data limits for the yaxis'
p41062
sg12
Vbarh.ylim
p41063
sg14
(lp41064
sg2
g41058
sbs(S'entropy'
p41065
S'y'
tp41066
g26967
s(S'csd'
p41067
S'sketch_params'
p41068
tp41069
(icodemend.demo.code_suggest
Element
p41070
(dp41071
g10
I0
sg11
S'sets the sketch parameters .'
p41072
sg12
Vcsd.sketch_params
p41073
sg14
(lp41074
sg2
g41068
sbs(g117
g118
g28204
tp41075
g28200
sS'set_facecolor'
p41076
(icodemend.demo.code_suggest
Element
p41077
(dp41078
g10
I66
sg11
S'set the facecolor(s ) of the collection .'
p41079
sg12
Vset_facecolor
p41080
sg14
(lp41081
(icodemend.demo.code_suggest
Element
p41082
(dp41083
g10
I0
sg11
S"set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||if c is ' none ' , the patch will not be filled ."
p41084
sg12
Vset_facecolor.c
p41085
sg14
(lp41086
sg2
S'c'
sbasg2
g41076
sbs(S'add_axes'
p41087
S'cursor_props'
p41088
tp41089
(icodemend.demo.code_suggest
Element
p41090
(dp41091
g10
I0
sg11
S'set the cursor property as'
p41092
sg12
Vadd_axes.cursor_props
p41093
sg14
(lp41094
sg2
g41088
sbs(S'stineman_interp'
p41095
S'yp'
p41096
tp41097
(icodemend.demo.code_suggest
Element
p41098
(dp41099
g10
I0
sg11
S'for yp = none , the routine automatically determines the slopes using the slopes ( ) routine .|||given data vectors x and y , the slope vector yp and a new abscissa vector xi , the function stineman_interp ( ) uses stineman interpolation to calculate a vector yi corresponding to xi .'
p41100
sg12
Vstineman_interp.yp
p41101
sg14
(lp41102
sg2
g41096
sbs(S'phase_spectrum'
p41103
S'markerfacecolor'
p41104
tp41105
(icodemend.demo.code_suggest
Element
p41106
(dp41107
g10
I0
sg11
S'set the marker face color .'
p41108
sg12
Vphase_spectrum.markerfacecolor
p41109
sg14
(lp41110
sg2
g41104
sbs(g245
g140
g30074
tp41111
g30070
sS'xaxis_inverted'
p41112
(icodemend.demo.code_suggest
Element
p41113
(dp41114
g10
I0
sg11
S'returns true if the x-axis is inverted .'
p41115
sg12
Vxaxis_inverted
p41116
sg14
(lp41117
sg2
g41112
sbs(g109
g8267
S"'red'"
p41118
tp41119
(icodemend.demo.code_suggest
Element
p41120
(dp41121
g10
I1
sg11
S''
sg12
Vsavefig.facecolor.'red'
p41122
sg14
(lp41123
sg2
g41118
sbsS'get_depth'
p41124
(icodemend.demo.code_suggest
Element
p41125
(dp41126
g10
I0
sg11
S'returns the offset of the baseline from the bottom of the image in pixels .'
p41127
sg12
Vget_depth
p41128
sg14
(lp41129
sg2
g41124
sbs(g117
g132
g28785
tp41130
g28781
s(S'axvline'
p41131
S'agg_filter'
p41132
tp41133
(icodemend.demo.code_suggest
Element
p41134
(dp41135
g10
I0
sg11
S'set agg_filter fuction .'
p41136
sg12
Vaxvline.agg_filter
p41137
sg14
(lp41138
sg2
g41132
sbsS'clear'
p41139
(icodemend.demo.code_suggest
Element
p41140
(dp41141
g10
I50
sg11
S'clear the cursor'
p41142
sg12
Vclear
p41143
sg14
(lp41144
sg2
g41139
sbsS'plot_day_summary2_ochl'
p41145
(icodemend.demo.code_suggest
Element
p41146
(dp41147
g10
I0
sg11
S'represent the time , open , close , high , low , as a vertical line ranging from low to high .'
p41148
sg12
Vplot_day_summary2_ochl
p41149
sg14
(lp41150
g15744
a(icodemend.demo.code_suggest
Element
p41151
(dp41152
g10
I0
sg11
S'sequence of closing values'
p41153
sg12
Vplot_day_summary2_ochl.closes
p41154
sg14
(lp41155
sg2
S'closes'
p41156
sbag14770
ag13347
a(icodemend.demo.code_suggest
Element
p41157
(dp41158
g10
I0
sg11
S'sequence of high values'
p41159
sg12
Vplot_day_summary2_ochl.highs
p41160
sg14
(lp41161
sg2
S'highs'
p41162
sba(icodemend.demo.code_suggest
Element
p41163
(dp41164
g10
I0
sg11
S'sequence of low values'
p41165
sg12
Vplot_day_summary2_ochl.lows
p41166
sg14
(lp41167
sg2
S'lows'
p41168
sba(icodemend.demo.code_suggest
Element
p41169
(dp41170
g10
I0
sg11
S'sequence of opening values'
p41171
sg12
Vplot_day_summary2_ochl.opens
p41172
sg14
(lp41173
sg2
S'opens'
p41174
sba(icodemend.demo.code_suggest
Element
p41175
(dp41176
g10
I0
sg11
S'size of open and close ticks in points'
p41177
sg12
Vplot_day_summary2_ochl.ticksize
p41178
sg14
(lp41179
sg2
S'ticksize'
p41180
sbasg2
g41145
sbs(g324
g10116
g9039
tp41181
g9035
s(g93
g4800
g25429
tp41182
g25425
s(S'bxp'
p41183
S'meanprops'
p41184
tp41185
(icodemend.demo.code_suggest
Element
p41186
(dp41187
g10
I0
sg11
S'if provided , will set the plotting style of the means'
p41188
sg12
Vbxp.meanprops
p41189
sg14
(lp41190
sg2
g41184
sbs(S'csd'
p41191
S'picker'
p41192
tp41193
(icodemend.demo.code_suggest
Element
p41194
(dp41195
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p41196
sg12
Vcsd.picker
p41197
sg14
(lp41198
sg2
g41192
sbs(S'axvline'
p41199
S'clip_on'
p41200
tp41201
(icodemend.demo.code_suggest
Element
p41202
(dp41203
g10
I4
sg11
S'set whether artist uses clipping .'
p41204
sg12
Vaxvline.clip_on
p41205
sg14
(lp41206
(icodemend.demo.code_suggest
Element
p41207
(dp41208
g10
I4
sg11
S''
sg12
Vaxvline.clip_on.False
p41209
sg14
(lp41210
sg2
g1944
sbasg2
g41200
sbs(S'plot'
p41211
g29408
tp41212
g29373
s(S'fill'
p41213
S'xlabel'
p41214
tp41215
(icodemend.demo.code_suggest
Element
p41216
(dp41217
g10
I0
sg11
S'set the label for the xaxis .'
p41218
sg12
Vfill.xlabel
p41219
sg14
(lp41220
sg2
g41214
sbs(g101
S's'
S'4'
tp41221
g7643
s(S'phase_spectrum'
p41222
S'window'
p41223
tp41224
(icodemend.demo.code_suggest
Element
p41225
(dp41226
g10
I0
sg11
S'compute the phase spectrum ( unwrapped angle spectrum ) of x . data is padded to a length of pad_to and the windowing function window is applied to the signal .|||a function or a vector of length nfft . to create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. the default is window_hanning ( ) . if a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment .'
p41227
sg12
Vphase_spectrum.window
p41228
sg14
(lp41229
sg2
g41223
sbsS'get_axes_locator'
p41230
(icodemend.demo.code_suggest
Element
p41231
(dp41232
g10
I1
sg11
S'return axes_locator'
p41233
sg12
Vget_axes_locator
p41234
sg14
(lp41235
sg2
g41230
sbs(S'axes'
p41236
g7413
tp41237
g7408
s(g117
g132
g28678
tp41238
g28674
sS'Triangulation'
p41239
(icodemend.demo.code_suggest
Element
p41240
(dp41241
g10
I32
sg11
S''
sg12
VTriangulation
p41242
sg14
(lp41243
g37176
a(icodemend.demo.code_suggest
Element
p41244
(dp41245
g10
I0
sg11
S'which triangles are masked out .'
p41246
sg12
VTriangulation.mask
p41247
sg14
(lp41248
sg2
S'mask'
p41249
sba(icodemend.demo.code_suggest
Element
p41250
(dp41251
g10
I0
sg11
S'coordinates of grid points .'
p41252
sg12
VTriangulation.x, y
p41253
sg14
(lp41254
sg2
S'x, y'
p41255
sbasg2
g41239
sbs(S'barh'
p41256
S'picker'
p41257
tp41258
(icodemend.demo.code_suggest
Element
p41259
(dp41260
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p41261
sg12
Vbarh.picker
p41262
sg14
(lp41263
sg2
g41257
sbs(g324
g10116
g865
tp41264
g9011
s(g139
g370
g1872
tp41265
g1868
s(S'stop_filter'
p41266
g38431
tp41267
g38426
s(g1170
g1257
g1257
tp41268
(icodemend.demo.code_suggest
Element
p41269
(dp41270
g10
I16
sg11
S''
sg12
Vhist.bins.bins
p41271
sg14
(lp41272
sg2
g1257
sbs(g117
g118
g27894
tp41273
g27890
s(S'set_ymargin'
p41274
S'm'
tp41275
(icodemend.demo.code_suggest
Element
p41276
(dp41277
g10
I0
sg11
S'm times the data interval will be added to each end of that interval before it is used in autoscaling .'
p41278
sg12
Vset_ymargin.m
p41279
sg14
(lp41280
sg2
S'm'
sbs(g93
g161
S'(piccoX, peakY)'
p41281
tp41282
(icodemend.demo.code_suggest
Element
p41283
(dp41284
g10
I2
sg11
S''
sg12
Vannotate.xy.(piccoX, peakY)
p41285
sg14
(lp41286
sg2
g41281
sbs(g324
g785
g9696
tp41287
g9692
s(S'axvline'
p41288
S'ylim'
p41289
tp41290
(icodemend.demo.code_suggest
Element
p41291
(dp41292
g10
I0
sg11
S'set the data limits for the yaxis'
p41293
sg12
Vaxvline.ylim
p41294
sg14
(lp41295
sg2
g41289
sbsS'set_backgroundcolor'
p41296
(icodemend.demo.code_suggest
Element
p41297
(dp41298
g10
I1
sg11
S'set the background color of the text by updating the bbox .'
p41299
sg12
Vset_backgroundcolor
p41300
sg14
(lp41301
sg2
g41296
sbs(S'plot'
p41302
g29181
tp41303
g29126
s(S'phase_spectrum'
p41304
S'clip_path'
p41305
tp41306
(icodemend.demo.code_suggest
Element
p41307
(dp41308
g10
I0
sg11
S"set the artist 's clip path , which may be"
p41309
sg12
Vphase_spectrum.clip_path
p41310
sg14
(lp41311
sg2
g41305
sbs(S'volume_overlay2'
p41312
S'colordown'
p41313
tp41314
(icodemend.demo.code_suggest
Element
p41315
(dp41316
g10
I0
sg11
S'the color of the lines where close < open'
p41317
sg12
Vvolume_overlay2.colordown
p41318
sg14
(lp41319
sg2
g41313
sbs(g245
g140
g30523
tp41320
g30519
sS'delaxes'
p41321
(icodemend.demo.code_suggest
Element
p41322
(dp41323
g10
I11
sg11
S'remove an axes from the current figure . remove a from the figure and update the current axes'
p41324
sg12
Vdelaxes
p41325
sg14
(lp41326
(icodemend.demo.code_suggest
Element
p41327
(dp41328
g10
I0
sg11
S"remove an axes from the current figure . if ax does n't exist , an error will be raised ."
p41329
sg12
Vdelaxes.ax
p41330
sg14
(lp41331
sg2
S'ax'
p41332
sbasg2
g41321
sbsS'soundex'
p41333
(icodemend.demo.code_suggest
Element
p41334
(dp41335
g10
I0
sg11
S'soundex module conforming to odell-russell algorithm'
p41336
sg12
Vsoundex
p41337
sg14
(lp41338
sg2
g41333
sbs(S'plotting'
p41339
g15856
tp41340
g15851
s(S'streamplot'
p41341
S'y'
tp41342
(icodemend.demo.code_suggest
Element
p41343
(dp41344
g10
I0
sg11
S'an evenly spaced grid .'
p41345
sg12
Vstreamplot.y
p41346
sg14
(lp41347
sg2
S'y'
sbs(S'axhline'
p41348
g3753
tp41349
g3748
s(S'cohere'
p41350
S'yticklabels'
p41351
tp41352
(icodemend.demo.code_suggest
Element
p41353
(dp41354
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p41355
sg12
Vcohere.yticklabels
p41356
sg14
(lp41357
sg2
g41351
sbs(S'tricontour'
p41358
S'z'
tp41359
g1441
s(S'annotate'
p41360
S'rotation_mode'
p41361
tp41362
(icodemend.demo.code_suggest
Element
p41363
(dp41364
g10
I0
sg11
S'set text rotation mode .'
p41365
sg12
Vannotate.rotation_mode
p41366
sg14
(lp41367
sg2
g41361
sbs(S'grid'
p41368
S'title'
p41369
tp41370
(icodemend.demo.code_suggest
Element
p41371
(dp41372
g10
I0
sg11
S'set a title for the axes .'
p41373
sg12
Vgrid.title
p41374
sg14
(lp41375
sg2
g41369
sbs(S'index_bar'
p41376
g8319
tp41377
g8314
s(S'vlines'
p41378
S'picker'
p41379
tp41380
(icodemend.demo.code_suggest
Element
p41381
(dp41382
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p41383
sg12
Vvlines.picker
p41384
sg14
(lp41385
sg2
g41379
sbsS'update_datalim_bounds'
p41386
(icodemend.demo.code_suggest
Element
p41387
(dp41388
g10
I0
sg11
S'update the datalim to include the given bbox bounds'
p41389
sg12
Vupdate_datalim_bounds
p41390
sg14
(lp41391
(icodemend.demo.code_suggest
Element
p41392
(dp41393
g10
I0
sg11
S'update the datalim to include the given bbox bounds'
p41394
sg12
Vupdate_datalim_bounds.bounds
p41395
sg14
(lp41396
sg2
S'bounds'
p41397
sbasg2
g41386
sbs(g1170
g118
S"'Normal'"
p41398
tp41399
(icodemend.demo.code_suggest
Element
p41400
(dp41401
g10
I1
sg11
S''
sg12
Vhist.label.'Normal'
p41402
sg14
(lp41403
sg2
g41398
sbs(S'barh'
p41404
S'align'
p41405
tp41406
(icodemend.demo.code_suggest
Element
p41407
(dp41408
g10
I42
sg11
S'if edge , aligns bars by their left edges ( for vertical bars ) and by their bottom edges ( for horizontal bars ) . if center , interpret the left argument as the coordinates of the centers of the bars .'
p41409
sg12
Vbarh.align
p41410
sg14
(lp41411
(icodemend.demo.code_suggest
Element
p41412
(dp41413
g10
I42
sg11
S''
sg12
Vbarh.align.'center'
p41414
sg14
(lp41415
sg2
S"'center'"
p41416
sbasg2
g41405
sbs(S'tricontourf'
p41417
g11688
tp41418
g11683
s(S'text'
p41419
S'color'
p41420
tp41421
(icodemend.demo.code_suggest
Element
p41422
(dp41423
g10
I49
sg11
S'set the foreground color of the text'
p41424
sg12
Vtext.color
p41425
sg14
(lp41426
g10883
a(icodemend.demo.code_suggest
Element
p41427
(dp41428
g10
I6
sg11
S''
sg12
Vtext.color.'blue'
p41429
sg14
(lp41430
sg2
S"'blue'"
p41431
sba(icodemend.demo.code_suggest
Element
p41432
(dp41433
g10
I6
sg11
S''
sg12
Vtext.color.'white'
p41434
sg14
(lp41435
sg2
S"'white'"
p41436
sba(icodemend.demo.code_suggest
Element
p41437
(dp41438
g10
I5
sg11
S''
sg12
Vtext.color.'green'
p41439
sg14
(lp41440
sg2
S"'green'"
p41441
sbag25670
ag21221
a(icodemend.demo.code_suggest
Element
p41442
(dp41443
g10
I3
sg11
S''
sg12
Vtext.color.color
p41444
sg14
(lp41445
sg2
g132
sba(icodemend.demo.code_suggest
Element
p41446
(dp41447
g10
I2
sg11
S''
sg12
Vtext.color.'k'
p41448
sg14
(lp41449
sg2
S"'k'"
p41450
sbag34194
a(icodemend.demo.code_suggest
Element
p41451
(dp41452
g10
I1
sg11
S''
sg12
Vtext.color.'0/25'
p41453
sg14
(lp41454
sg2
S"'0.25'"
p41455
sbag33520
a(icodemend.demo.code_suggest
Element
p41456
(dp41457
g10
I1
sg11
S''
sg12
Vtext.color.'black'
p41458
sg14
(lp41459
sg2
S"'black'"
p41460
sba(icodemend.demo.code_suggest
Element
p41461
(dp41462
g10
I1
sg11
S''
sg12
Vtext.color.'g'
p41463
sg14
(lp41464
sg2
S"'g'"
p41465
sbag32468
asg2
g41420
sbs(S'title'
p41466
g35791
tp41467
g35781
s(S'legend'
p41468
g14375
tp41469
g14362
s(g16
g453
g12763
tp41470
g12759
sS'get_yaxis_text2_transform'
p41471
(icodemend.demo.code_suggest
Element
p41472
(dp41473
g10
I0
sg11
S'get the transformation used for drawing the secondary y-axis labels , which will add the given amount of padding ( in points ) between the axes and the label .'
p41474
sg12
Vget_yaxis_text2_transform
p41475
sg14
(lp41476
g20849
a(icodemend.demo.code_suggest
Element
p41477
(dp41478
g10
I0
sg11
S'where valign and halign are requested alignments for the text .'
p41479
sg12
Vget_yaxis_text2_transform.valign
p41480
sg14
(lp41481
sg2
S'valign'
p41482
sbasg2
g41471
sbs(g16
g132
S"'b'"
p41483
tp41484
(icodemend.demo.code_suggest
Element
p41485
(dp41486
g10
I19
sg11
S''
sg12
Vbar.color.'b'
p41487
sg14
(lp41488
sg2
g41483
sbs(g93
g161
S'(i, (j + 0.5))'
p41489
tp41490
(icodemend.demo.code_suggest
Element
p41491
(dp41492
g10
I1
sg11
S''
sg12
Vannotate.xy.(i, (j + 0/5))
p41493
sg14
(lp41494
sg2
g41489
sbs(g324
g785
g9327
tp41495
g9323
s(g101
g8545
S'0'
tp41496
g22100
s(g93
g4800
g25534
tp41497
g25530
s(g252
g7452
g14335
tp41498
g14331
s(g101
S's'
g7628
tp41499
g7624
s(g4998
g325
S'red_blue'
p41500
tp41501
(icodemend.demo.code_suggest
Element
p41502
(dp41503
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.red_blue
p41504
sg14
(lp41505
sg2
g41500
sbs(g252
g1010
g13929
tp41506
g13925
s(S'axhspan'
p41507
g24322
tp41508
g24317
s(g101
g35545
g20996
tp41509
g20992
s(S'loglog'
p41510
S'title'
p41511
tp41512
(icodemend.demo.code_suggest
Element
p41513
(dp41514
g10
I0
sg11
S'set a title for the axes .'
p41515
sg12
Vloglog.title
p41516
sg14
(lp41517
sg2
g41511
sbs(g452
S'xuplims'
p41518
g1944
tp41519
g10173
s(g5640
g8068
S's'
tp41520
g12043
s(S'bar'
p41521
S'log'
p41522
tp41523
(icodemend.demo.code_suggest
Element
p41524
(dp41525
g10
I9
sg11
S'if true , sets the axis to be log scale . default : false'
p41526
sg12
Vbar.log
p41527
sg14
(lp41528
g37843
a(icodemend.demo.code_suggest
Element
p41529
(dp41530
g10
I3
sg11
S''
sg12
Vbar.log.True
p41531
sg14
(lp41532
sg2
g438
sbasg2
g41522
sbs(S'format_coord'
p41533
S'y'
tp41534
(icodemend.demo.code_suggest
Element
p41535
(dp41536
g10
I0
sg11
S'return a format string formatting the x , y coord'
p41537
sg12
Vformat_coord.y
p41538
sg14
(lp41539
sg2
S'y'
sbs(S'magnitude_spectrum'
p41540
S'contains'
p41541
tp41542
(icodemend.demo.code_suggest
Element
p41543
(dp41544
g10
I0
sg11
S'replace the contains test used by this artist .'
p41545
sg12
Vmagnitude_spectrum.contains
p41546
sg14
(lp41547
sg2
g41541
sbs(S'cohere'
p41548
S'agg_filter'
p41549
tp41550
(icodemend.demo.code_suggest
Element
p41551
(dp41552
g10
I0
sg11
S'set agg_filter fuction .'
p41553
sg12
Vcohere.agg_filter
p41554
sg14
(lp41555
sg2
g41549
sbs(S'barbs'
p41556
S'contains'
p41557
tp41558
(icodemend.demo.code_suggest
Element
p41559
(dp41560
g10
I0
sg11
S'replace the contains test used by this artist .'
p41561
sg12
Vbarbs.contains
p41562
sg14
(lp41563
sg2
g41557
sbs(g8943
g966
S"'northpolar'"
p41564
tp41565
(icodemend.demo.code_suggest
Element
p41566
(dp41567
g10
I1
sg11
S''
sg12
Vsubplot.projection.'northpolar'
p41568
sg14
(lp41569
sg2
g41564
sbs(S'annotate'
p41570
S'size_inches'
p41571
tp41572
(icodemend.demo.code_suggest
Element
p41573
(dp41574
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p41575
sg12
Vannotate.size_inches
p41576
sg14
(lp41577
sg2
g41571
sbsS'bxp'
p41578
(icodemend.demo.code_suggest
Element
p41579
(dp41580
g10
I1
sg11
S'drawing function for box and whisker plots .'
p41581
sg12
Vbxp
p41582
sg14
(lp41583
(icodemend.demo.code_suggest
Element
p41584
(dp41585
g10
I0
sg11
S'if provided , will set the plotting style of the boxes'
p41586
sg12
Vbxp.boxprops
p41587
sg14
(lp41588
sg2
S'boxprops'
p41589
sba(icodemend.demo.code_suggest
Element
p41590
(dp41591
g10
I0
sg11
S'a list of dictionaries containing stats for each boxplot . required keys are :'
p41592
sg12
Vbxp.bxpstats
p41593
sg14
(lp41594
sg2
S'bxpstats'
p41595
sbag10075
a(icodemend.demo.code_suggest
Element
p41596
(dp41597
g10
I0
sg11
S'if provided will set the plotting style of the fliers'
p41598
sg12
Vbxp.flierprops
p41599
sg14
(lp41600
sg2
S'flierprops'
p41601
sba(icodemend.demo.code_suggest
Element
p41602
(dp41603
g10
I0
sg11
S'if the function should adjust the xlim and xtick locations .'
p41604
sg12
Vbxp.manage_xticks
p41605
sg14
(lp41606
sg2
S'manage_xticks'
p41607
sbag23221
ag41186
a(icodemend.demo.code_suggest
Element
p41608
(dp41609
g10
I0
sg11
S'if provided , will set the plotting style of the medians'
p41610
sg12
Vbxp.medianprops
p41611
sg14
(lp41612
sg2
S'medianprops'
p41613
sba(icodemend.demo.code_suggest
Element
p41614
(dp41615
g10
I0
sg11
S'if false produces boxes with the line2d artist . if true produces boxes with the patch artist .'
p41616
sg12
Vbxp.patch_artist
p41617
sg14
(lp41618
sg2
S'patch_artist'
p41619
sba(icodemend.demo.code_suggest
Element
p41620
(dp41621
g10
I0
sg11
S'sets the positions of the boxes . the ticks and limits are automatically set to match the positions .'
p41622
sg12
Vbxp.positions
p41623
sg14
(lp41624
sg2
S'positions'
p41625
sbag24224
a(icodemend.demo.code_suggest
Element
p41626
(dp41627
g10
I0
sg11
S'if true , will toggle one the rendering of the caps'
p41628
sg12
Vbxp.showcaps
p41629
sg14
(lp41630
sg2
S'showcaps'
p41631
sba(icodemend.demo.code_suggest
Element
p41632
(dp41633
g10
I0
sg11
S'if true , will toggle one the rendering of the fliers'
p41634
sg12
Vbxp.showfliers
p41635
sg14
(lp41636
sg2
S'showfliers'
p41637
sba(icodemend.demo.code_suggest
Element
p41638
(dp41639
g10
I0
sg11
S'if true , will toggle one the rendering of the means'
p41640
sg12
Vbxp.showmeans
p41641
sg14
(lp41642
sg2
S'showmeans'
p41643
sba(icodemend.demo.code_suggest
Element
p41644
(dp41645
g10
I0
sg11
S'if false ( default ) , produces a rectangular box plot . if true , will produce a notched box plot'
p41646
sg12
Vbxp.shownotches
p41647
sg14
(lp41648
sg2
S'shownotches'
p41649
sba(icodemend.demo.code_suggest
Element
p41650
(dp41651
g10
I0
sg11
S'if true ( default ) , makes the boxes vertical . if false , makes horizontal boxes .'
p41652
sg12
Vbxp.vert
p41653
sg14
(lp41654
sg2
S'vert'
p41655
sba(icodemend.demo.code_suggest
Element
p41656
(dp41657
g10
I0
sg11
S'if provided , will set the plotting style of the whiskers'
p41658
sg12
Vbxp.whiskerprops
p41659
sg14
(lp41660
sg2
S'whiskerprops'
p41661
sbag18638
ag26531
asg2
g41578
sbs(S'get_offset_position'
p41662
g36155
tp41663
g36150
sS'enter_notify_event'
p41664
(icodemend.demo.code_suggest
Element
p41665
(dp41666
g10
I0
sg11
S'backend derived classes should call this function when entering canvas'
p41667
sg12
Venter_notify_event
p41668
sg14
(lp41669
sg2
g41664
sbs(S'candlestick2_ochl'
p41670
S'ax'
p41671
tp41672
(icodemend.demo.code_suggest
Element
p41673
(dp41674
g10
I0
sg11
S'an axes instance to plot to'
p41675
sg12
Vcandlestick2_ochl.ax
p41676
sg14
(lp41677
sg2
g41671
sbs(S'figtext'
p41678
g11520
tp41679
g11515
s(g8943
g966
S"'polar'"
p41680
tp41681
(icodemend.demo.code_suggest
Element
p41682
(dp41683
g10
I5
sg11
S''
sg12
Vsubplot.projection.'polar'
p41684
sg14
(lp41685
sg2
g41680
sbs(S'broken_barh'
p41686
S'clip_path'
p41687
tp41688
(icodemend.demo.code_suggest
Element
p41689
(dp41690
g10
I0
sg11
S"set the artist 's clip path , which may be"
p41691
sg12
Vbroken_barh.clip_path
p41692
sg14
(lp41693
sg2
g41687
sbs(S'annotate'
p41694
S'color'
p41695
tp41696
(icodemend.demo.code_suggest
Element
p41697
(dp41698
g10
I10
sg11
S'set the foreground color of the text'
p41699
sg12
Vannotate.color
p41700
sg14
(lp41701
(icodemend.demo.code_suggest
Element
p41702
(dp41703
g10
I2
sg11
S''
sg12
Vannotate.color.'r'
p41704
sg14
(lp41705
sg2
S"'r'"
p41706
sbag510
ag38642
a(icodemend.demo.code_suggest
Element
p41707
(dp41708
g10
I1
sg11
S''
sg12
Vannotate.color.'darkslategrey'
p41709
sg14
(lp41710
sg2
S"'darkslategrey'"
p41711
sbag23258
a(icodemend.demo.code_suggest
Element
p41712
(dp41713
g10
I1
sg11
S''
sg12
Vannotate.color.'white'
p41714
sg14
(lp41715
sg2
S"'white'"
p41716
sbag26770
a(icodemend.demo.code_suggest
Element
p41717
(dp41718
g10
I1
sg11
S''
sg12
Vannotate.color.color
p41719
sg14
(lp41720
sg2
g132
sbag38518
asg2
g41695
sbs(S'contourf'
p41721
S'N'
tp41722
(icodemend.demo.code_suggest
Element
p41723
(dp41724
g10
I1
sg11
S'contour up to n automatically-chosen levels .'
p41725
sg12
Vcontourf.N
p41726
sg14
(lp41727
(icodemend.demo.code_suggest
Element
p41728
(dp41729
g10
I1
sg11
S''
sg12
Vcontourf.N.20
p41730
sg14
(lp41731
sg2
S'20'
p41732
sbasg2
S'N'
sbs(S'add'
p41733
S'snap'
p41734
tp41735
(icodemend.demo.code_suggest
Element
p41736
(dp41737
g10
I0
sg11
S'sets the snap setting which may be'
p41738
sg12
Vadd.snap
p41739
sg14
(lp41740
sg2
g41734
sbs(g332
g627
S"'large'"
p41741
tp41742
(icodemend.demo.code_suggest
Element
p41743
(dp41744
g10
I2
sg11
S''
sg12
Vtext.size.'large'
p41745
sg14
(lp41746
sg2
g41741
sbs(S'hist'
p41747
S'hatch'
p41748
tp41749
(icodemend.demo.code_suggest
Element
p41750
(dp41751
g10
I1
sg11
S'set the hatching pattern'
p41752
sg12
Vhist.hatch
p41753
sg14
(lp41754
(icodemend.demo.code_suggest
Element
p41755
(dp41756
g10
I1
sg11
S''
sg12
Vhist.hatch.'/'
p41757
sg14
(lp41758
sg2
S"'/'"
p41759
sbasg2
g41748
sbsS'findSystemFonts'
p41760
(icodemend.demo.code_suggest
Element
p41761
(dp41762
g10
I9
sg11
S'search for fonts in the specified font paths .'
p41763
sg12
VfindSystemFonts
p41764
sg14
(lp41765
sg2
g41760
sbs(S'matshow'
p41766
S'filterrad'
p41767
tp41768
(icodemend.demo.code_suggest
Element
p41769
(dp41770
g10
I0
sg11
S"the filter radius for filters that have a radius parameter , i.e. when interpolation is one of : ' sinc ' , ' lanczos ' or ' blackman '"
p41771
sg12
Vmatshow.filterrad
p41772
sg14
(lp41773
sg2
g41767
sbs(S'arrow'
p41774
g2801
tp41775
g2796
s(S'grid'
p41776
S'path_effects'
p41777
tp41778
(icodemend.demo.code_suggest
Element
p41779
(dp41780
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p41781
sg12
Vgrid.path_effects
p41782
sg14
(lp41783
sg2
g41777
sbs(g324
g785
g865
tp41784
g9533
s(S'add'
p41785
S'url'
p41786
tp41787
(icodemend.demo.code_suggest
Element
p41788
(dp41789
g10
I0
sg11
S'sets the url for the artist'
p41790
sg12
Vadd.url
p41791
sg14
(lp41792
sg2
g41786
sbs(S'matshow'
p41793
S'cmap'
p41794
tp41795
(icodemend.demo.code_suggest
Element
p41796
(dp41797
g10
I17
sg11
S'if none , default to rc image.cmap value . cmap is ignored when x has rgb(a ) information'
p41798
sg12
Vmatshow.cmap
p41799
sg14
(lp41800
(icodemend.demo.code_suggest
Element
p41801
(dp41802
g10
I2
sg11
S''
sg12
Vmatshow.cmap.'seismic'
p41803
sg14
(lp41804
sg2
S"'seismic'"
p41805
sbag24902
a(icodemend.demo.code_suggest
Element
p41806
(dp41807
g10
I1
sg11
S''
sg12
Vmatshow.cmap.'Pastel1'
p41808
sg14
(lp41809
sg2
S"'Pastel1'"
p41810
sbag30669
a(icodemend.demo.code_suggest
Element
p41811
(dp41812
g10
I1
sg11
S''
sg12
Vmatshow.cmap.cmap
p41813
sg14
(lp41814
sg2
g325
sbasg2
g41794
sbs(S'get_window_extent'
p41815
S'args'
p41816
tp41817
(icodemend.demo.code_suggest
Element
p41818
(dp41819
g10
I0
sg11
S'get the axes bounding box in display space ; args and kwargs are empty'
p41820
sg12
Vget_window_extent.args
p41821
sg14
(lp41822
sg2
g41816
sbs(S'axvspan'
p41823
S'ylabel'
p41824
tp41825
(icodemend.demo.code_suggest
Element
p41826
(dp41827
g10
I0
sg11
S'set the label for the yaxis'
p41828
sg12
Vaxvspan.ylabel
p41829
sg14
(lp41830
sg2
g41824
sbs(g2250
g909
S'1'
tp41831
g15659
sS'make_axes'
p41832
(icodemend.demo.code_suggest
Element
p41833
(dp41834
g10
I5
sg11
S'resize and reposition parent axes , and return a child axes suitable for a colorbar'
p41835
sg12
Vmake_axes
p41836
sg14
(lp41837
sg2
g41832
sbsS'get_gid'
p41838
(icodemend.demo.code_suggest
Element
p41839
(dp41840
g10
I0
sg11
S'returns the group id'
p41841
sg12
Vget_gid
p41842
sg14
(lp41843
sg2
g41838
sbs(S'psd'
p41844
S'x'
tp41845
g37085
s(g125
g2392
S'4'
tp41846
(icodemend.demo.code_suggest
Element
p41847
(dp41848
g10
I5
sg11
S''
sg12
Vaxvline.linewidth.4
p41849
sg14
(lp41850
sg2
S'4'
sbs(S'set_label'
p41851
S's'
tp41852
(icodemend.demo.code_suggest
Element
p41853
(dp41854
g10
I0
sg11
S'set the label to s for auto legend .'
p41855
sg12
Vset_label.s
p41856
sg14
(lp41857
sg2
S's'
sbs(S'pcolor'
p41858
S'array'
p41859
tp41860
(icodemend.demo.code_suggest
Element
p41861
(dp41862
g10
I0
sg11
S'set the image array from numpy array a'
p41863
sg12
Vpcolor.array
p41864
sg14
(lp41865
sg2
g41859
sbs(S'draw_gouraud_triangles'
p41866
g15048
tp41867
g15043
sS'set_dash_joinstyle'
p41868
(icodemend.demo.code_suggest
Element
p41869
(dp41870
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p41871
sg12
Vset_dash_joinstyle
p41872
sg14
(lp41873
sg2
g41868
sbs(S'scatter'
p41874
g22117
tp41875
g22091
s(g93
g4800
g25414
tp41876
g25410
s(g582
g2251
g3452
tp41877
g3448
s(g2814
S'connect'
p41878
S'(3, 0)'
p41879
tp41880
(icodemend.demo.code_suggest
Element
p41881
(dp41882
g10
I1
sg11
S''
sg12
Vadd.connect.(3, 0)
p41883
sg14
(lp41884
sg2
g41879
sbs(S'loglog'
p41885
S'size_inches'
p41886
tp41887
(icodemend.demo.code_suggest
Element
p41888
(dp41889
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p41890
sg12
Vloglog.size_inches
p41891
sg14
(lp41892
sg2
g41886
sbs(S'bar'
p41893
S'width'
p41894
tp41895
(icodemend.demo.code_suggest
Element
p41896
(dp41897
g10
I139
sg11
S'the width(s ) of the bars default : 0.8'
p41898
sg12
Vbar.width
p41899
sg14
(lp41900
g36761
ag8795
a(icodemend.demo.code_suggest
Element
p41901
(dp41902
g10
I11
sg11
S''
sg12
Vbar.width.0/5
p41903
sg14
(lp41904
sg2
S'0.5'
p41905
sbag31458
ag6128
a(icodemend.demo.code_suggest
Element
p41906
(dp41907
g10
I5
sg11
S''
sg12
Vbar.width.0/2
p41908
sg14
(lp41909
sg2
S'0.2'
p41910
sbag31993
a(icodemend.demo.code_suggest
Element
p41911
(dp41912
g10
I5
sg11
S''
sg12
Vbar.width.5
p41913
sg14
(lp41914
sg2
S'5'
sba(icodemend.demo.code_suggest
Element
p41915
(dp41916
g10
I5
sg11
S''
sg12
Vbar.width.w
p41917
sg14
(lp41918
sg2
S'w'
sba(icodemend.demo.code_suggest
Element
p41919
(dp41920
g10
I3
sg11
S''
sg12
Vbar.width.0/1
p41921
sg14
(lp41922
sg2
S'0.1'
p41923
sbag39389
a(icodemend.demo.code_suggest
Element
p41924
(dp41925
g10
I3
sg11
S''
sg12
Vbar.width.1/0
p41926
sg14
(lp41927
sg2
S'1.0'
p41928
sbag20
ag37849
a(icodemend.demo.code_suggest
Element
p41929
(dp41930
g10
I2
sg11
S''
sg12
Vbar.width.100
p41931
sg14
(lp41932
sg2
S'100'
p41933
sba(icodemend.demo.code_suggest
Element
p41934
(dp41935
g10
I2
sg11
S''
sg12
Vbar.width.b_width
p41936
sg14
(lp41937
sg2
S'b_width'
p41938
sbag12279
a(icodemend.demo.code_suggest
Element
p41939
(dp41940
g10
I2
sg11
S''
sg12
Vbar.width.binwidth
p41941
sg14
(lp41942
sg2
S'binwidth'
p41943
sba(icodemend.demo.code_suggest
Element
p41944
(dp41945
g10
I1
sg11
S''
sg12
Vbar.width.0/0001
p41946
sg14
(lp41947
sg2
S'0.0001'
p41948
sbag10622
a(icodemend.demo.code_suggest
Element
p41949
(dp41950
g10
I1
sg11
S''
sg12
Vbar.width.0/015
p41951
sg14
(lp41952
sg2
S'0.015'
p41953
sba(icodemend.demo.code_suggest
Element
p41954
(dp41955
g10
I1
sg11
S''
sg12
Vbar.width.0/02
p41956
sg14
(lp41957
sg2
S'0.02'
p41958
sba(icodemend.demo.code_suggest
Element
p41959
(dp41960
g10
I1
sg11
S''
sg12
Vbar.width.0/7
p41961
sg14
(lp41962
sg2
S'0.7'
p41963
sba(icodemend.demo.code_suggest
Element
p41964
(dp41965
g10
I1
sg11
S''
sg12
Vbar.width.0/75
p41966
sg14
(lp41967
sg2
S'0.75'
p41968
sba(icodemend.demo.code_suggest
Element
p41969
(dp41970
g10
I1
sg11
S''
sg12
Vbar.width.1000
p41971
sg14
(lp41972
sg2
S'1000'
p41973
sba(icodemend.demo.code_suggest
Element
p41974
(dp41975
g10
I1
sg11
S''
sg12
Vbar.width.1e-05
p41976
sg14
(lp41977
sg2
S'1e-05'
p41978
sbag4507
a(icodemend.demo.code_suggest
Element
p41979
(dp41980
g10
I1
sg11
S''
sg12
Vbar.width.200
p41981
sg14
(lp41982
sg2
S'200'
p41983
sba(icodemend.demo.code_suggest
Element
p41984
(dp41985
g10
I1
sg11
S''
sg12
Vbar.width.30
p41986
sg14
(lp41987
sg2
S'30'
p41988
sba(icodemend.demo.code_suggest
Element
p41989
(dp41990
g10
I1
sg11
S''
sg12
Vbar.width.8
p41991
sg14
(lp41992
sg2
S'8'
sbag13066
a(icodemend.demo.code_suggest
Element
p41993
(dp41994
g10
I1
sg11
S''
sg12
Vbar.width.bin_size
p41995
sg14
(lp41996
sg2
S'bin_size'
p41997
sbag13754
a(icodemend.demo.code_suggest
Element
p41998
(dp41999
g10
I1
sg11
S''
sg12
Vbar.width.dw
p42000
sg14
(lp42001
sg2
S'dw'
p42002
sba(icodemend.demo.code_suggest
Element
p42003
(dp42004
g10
I1
sg11
S''
sg12
Vbar.width.gap
p42005
sg14
(lp42006
sg2
S'gap'
p42007
sbag26571
a(icodemend.demo.code_suggest
Element
p42008
(dp42009
g10
I1
sg11
S''
sg12
Vbar.width.widths
p42010
sg14
(lp42011
sg2
g33594
sbasg2
g41894
sbsS'get_array'
p42012
(icodemend.demo.code_suggest
Element
p42013
(dp42014
g10
I10
sg11
S'return the array'
p42015
sg12
Vget_array
p42016
sg14
(lp42017
sg2
g42012
sbs(S'streamplot'
p42018
S'arrowstyle'
p42019
tp42020
(icodemend.demo.code_suggest
Element
p42021
(dp42022
g10
I5
sg11
S'arrow style specification . see fancyarrowpatch .'
p42023
sg12
Vstreamplot.arrowstyle
p42024
sg14
(lp42025
(icodemend.demo.code_suggest
Element
p42026
(dp42027
g10
I3
sg11
S''
sg12
Vstreamplot.arrowstyle.'-'
p42028
sg14
(lp42029
sg2
S"'-'"
p42030
sbag22316
ag16161
asg2
g42019
sbs(S'barh'
p42031
S'ylabel'
p42032
tp42033
(icodemend.demo.code_suggest
Element
p42034
(dp42035
g10
I0
sg11
S'set the label for the yaxis'
p42036
sg12
Vbarh.ylabel
p42037
sg14
(lp42038
sg2
g42032
sbs(S'barbs'
p42039
S'url'
p42040
tp42041
(icodemend.demo.code_suggest
Element
p42042
(dp42043
g10
I0
sg11
S'sets the url for the artist'
p42044
sg12
Vbarbs.url
p42045
sg14
(lp42046
sg2
g42040
sbs(g93
g4800
g25394
tp42047
g25390
sS'get_sketch_params'
p42048
(icodemend.demo.code_suggest
Element
p42049
(dp42050
g10
I0
sg11
S'returns the sketch parameters for the artist .'
p42051
sg12
Vget_sketch_params
p42052
sg14
(lp42053
sg2
g42048
sbs(g388
g389
S'0'
tp42054
g16946
s(g245
g3075
S'300'
p42055
tp42056
(icodemend.demo.code_suggest
Element
p42057
(dp42058
g10
I4
sg11
S''
sg12
Vfigure.dpi.300
p42059
sg14
(lp42060
sg2
g42055
sbs(S'magnitude_spectrum'
p42061
S'markevery'
p42062
tp42063
(icodemend.demo.code_suggest
Element
p42064
(dp42065
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p42066
sg12
Vmagnitude_spectrum.markevery
p42067
sg14
(lp42068
sg2
g42062
sbs(S'set_xticks'
p42069
S'ticks'
p42070
g33092
tp42071
g33088
s(g16
g132
S"'#3333ff'"
p42072
tp42073
(icodemend.demo.code_suggest
Element
p42074
(dp42075
g10
I2
sg11
S''
sg12
Vbar.color.'#3333ff'
p42076
sg14
(lp42077
sg2
g42072
sbs(S'annotate'
p42078
S'fontproperties'
p42079
tp42080
(icodemend.demo.code_suggest
Element
p42081
(dp42082
g10
I1
sg11
S'set the font properties that control the text .'
p42083
sg12
Vannotate.fontproperties
p42084
sg14
(lp42085
(icodemend.demo.code_suggest
Element
p42086
(dp42087
g10
I1
sg11
S''
sg12
Vannotate.fontproperties.ChineseFont1
p42088
sg14
(lp42089
sg2
g36610
sbasg2
g42079
sbsS'ticklabel_format'
p42090
(icodemend.demo.code_suggest
Element
p42091
(dp42092
g10
I28
sg11
S'change the scalarformatter used by default for linear axes .'
p42093
sg12
Vticklabel_format
p42094
sg14
(lp42095
sg2
g42090
sbs(S'plot'
p42096
g29752
tp42097
g29743
s(S'bar'
p42098
S'orientation'
p42099
tp42100
(icodemend.demo.code_suggest
Element
p42101
(dp42102
g10
I1
sg11
S'the orientation of the bars .'
p42103
sg12
Vbar.orientation
p42104
sg14
(lp42105
g40903
asg2
g42099
sbs(S'loglog'
p42106
S'ydata'
p42107
tp42108
(icodemend.demo.code_suggest
Element
p42109
(dp42110
g10
I0
sg11
S'set the data np.array for y'
p42111
sg12
Vloglog.ydata
p42112
sg14
(lp42113
sg2
g42107
sbsS'set_default_weight'
p42114
(icodemend.demo.code_suggest
Element
p42115
(dp42116
g10
I0
sg11
S'set the default font weight .'
p42117
sg12
Vset_default_weight
p42118
sg14
(lp42119
sg2
g42114
sbs(g324
g785
g9661
tp42120
g9657
s(S'set_ylim'
p42121
g32344
tp42122
g32339
s(g5424
g2392
S'1.5'
p42123
tp42124
(icodemend.demo.code_suggest
Element
p42125
(dp42126
g10
I1
sg11
S''
sg12
Vgrid.linewidth.1/5
p42127
sg14
(lp42128
sg2
g42123
sbsS'update_ticks'
p42129
(icodemend.demo.code_suggest
Element
p42130
(dp42131
g10
I7
sg11
S'force the update of the ticks and ticklabels .'
p42132
sg12
Vupdate_ticks
p42133
sg14
(lp42134
sg2
g42129
sbsS'get_label_text'
p42135
(icodemend.demo.code_suggest
Element
p42136
(dp42137
g10
I0
sg11
S'get the text of the label'
p42138
sg12
Vget_label_text
p42139
sg14
(lp42140
sg2
g42135
sbs(g944
g132
g35691
tp42141
g35687
s(g117
g102
g29196
tp42142
g29192
s(g4371
g666
g17631
tp42143
g17627
s(g117
g2878
S'2'
tp42144
g19379
s(g2814
g118
S"'Rekuperator'"
p42145
tp42146
(icodemend.demo.code_suggest
Element
p42147
(dp42148
g10
I1
sg11
S''
sg12
Vadd.label.'Rekuperator'
p42149
sg14
(lp42150
sg2
g42145
sbs(g5424
g2392
S'0.75'
p42151
tp42152
(icodemend.demo.code_suggest
Element
p42153
(dp42154
g10
I1
sg11
S''
sg12
Vgrid.linewidth.0/75
p42155
sg14
(lp42156
sg2
g42151
sbs(S'hist'
p42157
S'bottom'
p42158
tp42159
(icodemend.demo.code_suggest
Element
p42160
(dp42161
g10
I0
sg11
S'location of the bottom baseline of each bin . if a scalar , the base line for each bin is shifted by the same amount . if an array , each bin is shifted independently and the length of bottom must match the number of bins . if none , defaults to 0 .'
p42162
sg12
Vhist.bottom
p42163
sg14
(lp42164
sg2
g42158
sbs(S'plot'
p42165
g29958
tp42166
g29953
s(S'tripcolor'
p42167
S'edgecolors'
p42168
tp42169
(icodemend.demo.code_suggest
Element
p42170
(dp42171
g10
I1
sg11
S"if none , the rc setting is used by default . if ' none ' , edges will not be visible . an mpl color or sequence of colors will set the edge color"
p42172
sg12
Vtripcolor.edgecolors
p42173
sg14
(lp42174
g13576
asg2
g42168
sbsS'hist2d'
p42175
(icodemend.demo.code_suggest
Element
p42176
(dp42177
g10
I16
sg11
S'make a 2d histogram plot .'
p42178
sg12
Vhist2d
p42179
sg14
(lp42180
g6310
a(icodemend.demo.code_suggest
Element
p42181
(dp42182
g10
I1
sg11
S'normalize histogram .'
p42183
sg12
Vhist2d.normed
p42184
sg14
(lp42185
g440
asg2
S'normed'
p42186
sba(icodemend.demo.code_suggest
Element
p42187
(dp42188
g10
I1
sg11
S'an array of values w_i weighing each sample ( x_i , y_i ) .'
p42189
sg12
Vhist2d.weights
p42190
sg14
(lp42191
sg2
S'weights'
p42192
sba(icodemend.demo.code_suggest
Element
p42193
(dp42194
g10
I0
sg11
S'the bin specification :'
p42195
sg12
Vhist2d.bins: [None | int | [int, int] | array_like | [array, array]]
p42196
sg14
(lp42197
sg2
S'bins: [None | int | [int, int] | array_like | [array, array]]'
p42198
sbag13703
a(icodemend.demo.code_suggest
Element
p42199
(dp42200
g10
I0
sg11
S'all bins that has count less than cmin will not be displayed and these count values in the return value count histogram will also be set to nan upon return'
p42201
sg12
Vhist2d.cmin
p42202
sg14
(lp42203
sg2
S'cmin'
p42204
sba(icodemend.demo.code_suggest
Element
p42205
(dp42206
g10
I0
sg11
S'input values'
p42207
sg12
Vhist2d.x, y: array_like, shape (n, )
p42208
sg14
(lp42209
sg2
S'x, y: array_like, shape (n, )'
p42210
sbasg2
g42175
sbs(S'plot_date'
p42211
g20009
tp42212
g20004
s(S'cohere'
p42213
S'Cxy'
p42214
tp42215
(icodemend.demo.code_suggest
Element
p42216
(dp42217
g10
I0
sg11
S'the return value is a tuple ( cxy , f ) , where f are the frequencies of the coherence vector .'
p42218
sg12
Vcohere.Cxy
p42219
sg14
(lp42220
sg2
g42214
sbsS'get_majorticklocs'
p42221
(icodemend.demo.code_suggest
Element
p42222
(dp42223
g10
I5
sg11
S'get the major tick locations in data coordinates as a numpy array'
p42224
sg12
Vget_majorticklocs
p42225
sg14
(lp42226
sg2
g42221
sbs(g1170
g1257
S'[0, 10, 20, 30]'
p42227
tp42228
(icodemend.demo.code_suggest
Element
p42229
(dp42230
g10
I1
sg11
S''
sg12
Vhist.bins.[0, 10, 20, 30]
p42231
sg14
(lp42232
sg2
g42227
sbsS'get_xticklines'
p42233
(icodemend.demo.code_suggest
Element
p42234
(dp42235
g10
I2
sg11
S'get the xtick lines as a list of line2d instances'
p42236
sg12
Vget_xticklines
p42237
sg14
(lp42238
sg2
g42233
sbs(g388
g389
g16989
tp42239
g16985
s(g4371
g325
g17575
tp42240
g17571
s(S'suptitle'
p42241
S'horizontalalignment'
p42242
tp42243
(icodemend.demo.code_suggest
Element
p42244
(dp42245
g10
I1
sg11
S'the horizontal alignment of the text'
p42246
sg12
Vsuptitle.horizontalalignment
p42247
sg14
(lp42248
g36434
asg2
g42242
sbs(S'errorbar'
p42249
S'linestyle'
p42250
tp42251
(icodemend.demo.code_suggest
Element
p42252
(dp42253
g10
I5
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p42254
sg12
Verrorbar.linestyle
p42255
sg14
(lp42256
g24184
a(icodemend.demo.code_suggest
Element
p42257
(dp42258
g10
I2
sg11
S''
sg12
Verrorbar.linestyle.'dashed'
p42259
sg14
(lp42260
sg2
S"'dashed'"
p42261
sba(icodemend.demo.code_suggest
Element
p42262
(dp42263
g10
I1
sg11
S''
sg12
Verrorbar.linestyle.''
p42264
sg14
(lp42265
sg2
S"''"
p42266
sbasg2
g42250
sbs(S'axvline'
p42267
S'dashes'
p42268
tp42269
(icodemend.demo.code_suggest
Element
p42270
(dp42271
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p42272
sg12
Vaxvline.dashes
p42273
sg14
(lp42274
sg2
g42268
sbs(g5424
g132
S"'r'"
p42275
tp42276
(icodemend.demo.code_suggest
Element
p42277
(dp42278
g10
I3
sg11
S''
sg12
Vgrid.color.'r'
p42279
sg14
(lp42280
sg2
g42275
sbsS'rms_flat'
p42281
(icodemend.demo.code_suggest
Element
p42282
(dp42283
g10
I0
sg11
S'return the root mean square of all the elements of a , flattened out .'
p42284
sg12
Vrms_flat
p42285
sg14
(lp42286
g16527
asg2
g42281
sbs(g2250
g102
g30877
tp42287
g30873
s(S'tricontourf'
p42288
g11664
tp42289
g11659
s(S'movavg'
p42290
S'n'
tp42291
g6863
sS'disconnect_events'
p42292
(icodemend.demo.code_suggest
Element
p42293
(dp42294
g10
I0
sg11
S'disconnect all events created by this widget .'
p42295
sg12
Vdisconnect_events
p42296
sg14
(lp42297
sg2
g42292
sbs(S'plot'
p42298
g29758
tp42299
g29753
s(S'center_matrix'
p42300
g4499
tp42301
g4494
s(g93
g4800
g25344
tp42302
g25340
sS'update_coords'
p42303
(icodemend.demo.code_suggest
Element
p42304
(dp42305
g10
I0
sg11
S'computes the actual x , y coordinates for text based on the input x , y and the dashlength .'
p42306
sg12
Vupdate_coords
p42307
sg14
(lp42308
(icodemend.demo.code_suggest
Element
p42309
(dp42310
g10
I0
sg11
S"computes the actual x , y coordinates for text based on the input x , y and the dashlength . since the rotation is with respect to the actual canvas 's coordinates we need to map back and forth ."
p42311
sg12
Vupdate_coords.dashlength
p42312
sg14
(lp42313
sg2
S'dashlength'
p42314
sbag26457
ag40314
asg2
g42303
sbs(g109
S'bbox_inches'
p42315
S'0'
tp42316
(icodemend.demo.code_suggest
Element
p42317
(dp42318
g10
I3
sg11
S''
sg12
Vsavefig.bbox_inches.0
p42319
sg14
(lp42320
sg2
S'0'
sbs(g101
g102
S'1'
tp42321
g21898
sS'get_kern'
p42322
(icodemend.demo.code_suggest
Element
p42323
(dp42324
g10
I0
sg11
S'get the kerning distance for font between sym1 and sym2 .'
p42325
sg12
Vget_kern
p42326
sg14
(lp42327
g22467
a(icodemend.demo.code_suggest
Element
p42328
(dp42329
g10
I0
sg11
S'fontx : one of the tex font names :'
p42330
sg12
Vget_kern.fontX
p42331
sg14
(lp42332
sg2
S'fontX'
p42333
sbag34452
ag40894
a(icodemend.demo.code_suggest
Element
p42334
(dp42335
g10
I0
sg11
S'get the kerning distance for font between sym1 and sym2 .'
p42336
sg12
Vget_kern.sym1
p42337
sg14
(lp42338
sg2
S'sym1'
p42339
sbag22414
a(icodemend.demo.code_suggest
Element
p42340
(dp42341
g10
I0
sg11
S"symx : a symbol in raw tex form . e.g. , ' 1 ' , ' x ' or ' sigma '"
p42342
sg12
Vget_kern.symX
p42343
sg14
(lp42344
sg2
S'symX'
p42345
sbasg2
g42322
sbs(g324
g785
g9641
tp42346
g9637
s(g1170
g10211
g820
tp42347
g816
sS'get_extents'
p42348
(icodemend.demo.code_suggest
Element
p42349
(dp42350
g10
I3
sg11
S'returns the extents ( xmin , ymin , xmax , ymax ) of the path . return a bbox object defining the axis-aligned extents of the patch .'
p42351
sg12
Vget_extents
p42352
sg14
(lp42353
g31729
a(icodemend.demo.code_suggest
Element
p42354
(dp42355
g10
I0
sg11
S'returns the extents ( xmin , ymin , xmax , ymax ) of the path .'
p42356
sg12
Vget_extents.xmax
p42357
sg14
(lp42358
sg2
S'xmax'
p42359
sbag19334
a(icodemend.demo.code_suggest
Element
p42360
(dp42361
g10
I0
sg11
S'returns the extents ( xmin , ymin , xmax , ymax ) of the path .'
p42362
sg12
Vget_extents.ymax
p42363
sg14
(lp42364
sg2
S'ymax'
p42365
sbag1130
asg2
g42348
sbsS'get_fontext_synonyms'
p42366
(icodemend.demo.code_suggest
Element
p42367
(dp42368
g10
I0
sg11
S'return a list of file extensions extensions that are synonyms for the given file extension fileext .'
p42369
sg12
Vget_fontext_synonyms
p42370
sg14
(lp42371
g3920
asg2
g42366
sbs(S'axhline'
p42372
g3651
tp42373
g3646
s(S'twinx'
p42374
g21199
tp42375
g21194
s(S'quiver'
p42376
g31153
tp42377
g31148
s(g12176
g8267
g24273
tp42378
g24269
s(g117
g118
g27522
tp42379
g27518
s(g4355
g4356
S'mask'
p42380
tp42381
(icodemend.demo.code_suggest
Element
p42382
(dp42383
g10
I1
sg11
S''
sg12
Vfill_between.where.mask
p42384
sg14
(lp42385
sg2
g42380
sbs(S'axis'
p42386
g15106
tp42387
g15101
s(S'get_split_ind'
p42388
S'seq'
p42389
tp42390
(icodemend.demo.code_suggest
Element
p42391
(dp42392
g10
I0
sg11
S'seq is a list of words . return the index into seq such that :'
p42393
sg12
Vget_split_ind.seq
p42394
sg14
(lp42395
sg2
g42389
sbs(S'set_xticklabels'
p42396
g17007
tp42397
g17002
s(S'set_ylim'
p42398
g32338
tp42399
g32329
s(S'add'
p42400
S'size_inches'
p42401
tp42402
(icodemend.demo.code_suggest
Element
p42403
(dp42404
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p42405
sg12
Vadd.size_inches
p42406
sg14
(lp42407
sg2
g42401
sbs(g101
g8538
g7032
tp42408
g22077
s(g944
g945
S'1'
tp42409
(icodemend.demo.code_suggest
Element
p42410
(dp42411
g10
I1
sg11
S''
sg12
Vbarh.height.1
p42412
sg14
(lp42413
sg2
S'1'
sbsS'contiguous_regions'
p42414
(icodemend.demo.code_suggest
Element
p42415
(dp42416
g10
I0
sg11
S'return a list of ( ind0 , ind1 ) such that mask[ind0'
p42417
sg12
Vcontiguous_regions
p42418
sg14
(lp42419
sg2
g42414
sbs(S'add_axes'
p42420
S'gid'
p42421
tp42422
(icodemend.demo.code_suggest
Element
p42423
(dp42424
g10
I0
sg11
S'sets the ( group ) id for the artist'
p42425
sg12
Vadd_axes.gid
p42426
sg14
(lp42427
sg2
g42421
sbsS'set_offset_position'
p42428
(icodemend.demo.code_suggest
Element
p42429
(dp42430
g10
I4
sg11
S'set how offsets are applied .'
p42431
sg12
Vset_offset_position
p42432
sg14
(lp42433
(icodemend.demo.code_suggest
Element
p42434
(dp42435
g10
I0
sg11
S"set how offsets are applied . if offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . if offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
p42436
sg12
Vset_offset_position.offset_position
p42437
sg14
(lp42438
sg2
S'offset_position'
p42439
sbasg2
g42428
sbsS'iter_segments'
p42440
(icodemend.demo.code_suggest
Element
p42441
(dp42442
g10
I6
sg11
S'iterates over all of the curve segments in the path .'
p42443
sg12
Viter_segments
p42444
sg14
(lp42445
(icodemend.demo.code_suggest
Element
p42446
(dp42447
g10
I2
sg11
S'vertices that do not affect the appearance of the path . if false , perform no simplification . if none , use the should_simplify member variable .'
p42448
sg12
Viter_segments.simplify
p42449
sg14
(lp42450
g16698
asg2
S'simplify'
p42451
sbag33744
a(icodemend.demo.code_suggest
Element
p42452
(dp42453
g10
I0
sg11
S'iterates over all of the curve segments in the path . each iteration returns a 2-tuple ( vertices , code ) , where vertices is a sequence of 1 - 3 coordinate pairs , and code is one of the path codes .'
p42454
sg12
Viter_segments.code
p42455
sg14
(lp42456
sg2
S'code'
p42457
sbag31467
ag16763
ag31614
a(icodemend.demo.code_suggest
Element
p42458
(dp42459
g10
I0
sg11
S"if none , auto-snap to pixels , to reduce fuzziness of rectilinear lines . if true , force snapping , and if false , do n't snap ."
p42460
sg12
Viter_segments.snap
p42461
sg14
(lp42462
sg2
S'snap'
p42463
sba(icodemend.demo.code_suggest
Element
p42464
(dp42465
g10
I0
sg11
S'as a hint for the snapping algorithm .'
p42466
sg12
Viter_segments.stroke_width
p42467
sg14
(lp42468
sg2
S'stroke_width'
p42469
sbag33599
ag6525
asg2
g42440
sbs(S'subplot'
p42470
S'nrows'
p42471
tp42472
(icodemend.demo.code_suggest
Element
p42473
(dp42474
g10
I0
sg11
S'where nrows and ncols are used to notionally split the figure into nrows * ncols sub-axes , and plot_number is used to identify the particular subplot that this function is to create within the notional grid . plot_number starts at 1 , increments across rows first and has a maximum of nrows * ncols .|||in the case when nrows , ncols and plot_number are all less than 10 , a convenience exists , such that the a 3 digit number can be given instead , where the hundreds represent nrows , the tens represent ncols and the units represent plot_number . for instance :'
p42475
sg12
Vsubplot.nrows
p42476
sg14
(lp42477
sg2
g42471
sbs(S'cohere'
p42478
S'title'
p42479
tp42480
(icodemend.demo.code_suggest
Element
p42481
(dp42482
g10
I0
sg11
S'set a title for the axes .'
p42483
sg12
Vcohere.title
p42484
sg14
(lp42485
sg2
g42479
sbs(g117
g118
g27621
tp42486
g27617
s(S'get_path_collection_extents'
p42487
S'master_transform'
p42488
tp42489
(icodemend.demo.code_suggest
Element
p42490
(dp42491
g10
I0
sg11
S'master_transform is a global transformation to apply to all paths'
p42492
sg12
Vget_path_collection_extents.master_transform
p42493
sg14
(lp42494
sg2
g42488
sbs(S'grid'
p42495
S'xdata'
p42496
tp42497
(icodemend.demo.code_suggest
Element
p42498
(dp42499
g10
I0
sg11
S'set the data np.array for x'
p42500
sg12
Vgrid.xdata
p42501
sg14
(lp42502
sg2
g42496
sbsS'pickle_load'
p42503
(icodemend.demo.code_suggest
Element
p42504
(dp42505
g10
I0
sg11
S"equivalent to pickle.load(open(filename , ' r ' ) ) but closes the file to prevent filehandle leakage ."
p42506
sg12
Vpickle_load
p42507
sg14
(lp42508
sg2
g42503
sbs(g117
g2392
g29091
tp42509
g29087
s(g109
g2175
S'1'
tp42510
(icodemend.demo.code_suggest
Element
p42511
(dp42512
g10
I1
sg11
S''
sg12
Vsavefig.pad_inches.1
p42513
sg14
(lp42514
sg2
S'1'
sbs(g4998
g8683
S"'gouraud'"
p42515
tp42516
(icodemend.demo.code_suggest
Element
p42517
(dp42518
g10
I2
sg11
S''
sg12
Vpcolormesh.shading.'gouraud'
p42519
sg14
(lp42520
sg2
g42515
sbs(g5975
S'x'
g6911
tp42521
g6907
s(S'add'
p42522
S'ylabel'
p42523
tp42524
(icodemend.demo.code_suggest
Element
p42525
(dp42526
g10
I0
sg11
S'set the label for the yaxis'
p42527
sg12
Vadd.ylabel
p42528
sg14
(lp42529
sg2
g42523
sbs(S'errorbar'
p42530
S'elinewidth'
p42531
tp42532
(icodemend.demo.code_suggest
Element
p42533
(dp42534
g10
I11
sg11
S'the linewidth of the errorbar lines . if none , use the linewidth .'
p42535
sg12
Verrorbar.elinewidth
p42536
sg14
(lp42537
(icodemend.demo.code_suggest
Element
p42538
(dp42539
g10
I3
sg11
S''
sg12
Verrorbar.elinewidth.2
p42540
sg14
(lp42541
sg2
S'2'
sbag37608
a(icodemend.demo.code_suggest
Element
p42542
(dp42543
g10
I2
sg11
S''
sg12
Verrorbar.elinewidth.1/0
p42544
sg14
(lp42545
sg2
S'1.0'
p42546
sba(icodemend.demo.code_suggest
Element
p42547
(dp42548
g10
I1
sg11
S''
sg12
Verrorbar.elinewidth.4
p42549
sg14
(lp42550
sg2
S'4'
sba(icodemend.demo.code_suggest
Element
p42551
(dp42552
g10
I1
sg11
S''
sg12
Verrorbar.elinewidth.6
p42553
sg14
(lp42554
sg2
S'6'
sba(icodemend.demo.code_suggest
Element
p42555
(dp42556
g10
I1
sg11
S''
sg12
Verrorbar.elinewidth.None
p42557
sg14
(lp42558
sg2
g865
sbasg2
g42531
sbsS'get_figwidth'
p42559
(icodemend.demo.code_suggest
Element
p42560
(dp42561
g10
I4
sg11
S'return the figwidth as a float'
p42562
sg12
Vget_figwidth
p42563
sg14
(lp42564
sg2
g42559
sbs(S'broken_barh'
p42565
S'codes'
p42566
tp42567
(icodemend.demo.code_suggest
Element
p42568
(dp42569
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p42570
sg12
Vbroken_barh.codes
p42571
sg14
(lp42572
sg2
g42566
sbs(S'tricontour'
p42573
g1386
tp42574
g1381
s(S'longest_contiguous_ones'
p42575
S'x'
tp42576
g13668
s(g16
g2392
S'2'
tp42577
g32375
s(g117
g118
g28269
tp42578
g28265
s(g101
g118
g22015
tp42579
g22011
s(S'pcolormesh'
p42580
S'figure'
p42581
tp42582
(icodemend.demo.code_suggest
Element
p42583
(dp42584
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p42585
sg12
Vpcolormesh.figure
p42586
sg14
(lp42587
sg2
g42581
sbs(S'stackplot'
p42588
S'x'
tp42589
g10460
s(g101
S'c'
g21300
tp42590
g21296
s(g10369
g10370
S'6'
tp42591
g40454
sS'onpick'
p42592
(icodemend.demo.code_suggest
Element
p42593
(dp42594
g10
I0
sg11
S'when the line is picked , update the set of selected indicies .'
p42595
sg12
Vonpick
p42596
sg14
(lp42597
sg2
g42592
sbs(g245
g140
g30283
tp42598
g30279
s(S'axhline'
p42599
g3849
tp42600
g3844
s(S'pcolormesh'
p42601
S'ylim'
p42602
tp42603
(icodemend.demo.code_suggest
Element
p42604
(dp42605
g10
I0
sg11
S'set the data limits for the yaxis'
p42606
sg12
Vpcolormesh.ylim
p42607
sg14
(lp42608
sg2
g42602
sbsS'close_group'
p42609
(icodemend.demo.code_suggest
Element
p42610
(dp42611
g10
I0
sg11
S'close a grouping element with label s is only currently used by backend_svg'
p42612
sg12
Vclose_group
p42613
sg14
(lp42614
g32496
asg2
g42609
sbs(g93
g161
S'((posx - (len(n) * 0.1)), (posy + 0.1))'
p42615
tp42616
(icodemend.demo.code_suggest
Element
p42617
(dp42618
g10
I1
sg11
S''
sg12
Vannotate.xy.((posx - (len(n) * 0/1)), (posy + 0/1))
p42619
sg14
(lp42620
sg2
g42615
sbs(g93
g627
S'14'
p42621
tp42622
(icodemend.demo.code_suggest
Element
p42623
(dp42624
g10
I2
sg11
S''
sg12
Vannotate.size.14
p42625
sg14
(lp42626
sg2
g42621
sbs(g252
g5782
g14423
tp42627
g14419
s(g26208
S'top'
p42628
S'2'
tp42629
g32284
sS'is_color_like'
p42630
(icodemend.demo.code_suggest
Element
p42631
(dp42632
g10
I0
sg11
S'return true if c can be converted to rgb'
p42633
sg12
Vis_color_like
p42634
sg14
(lp42635
(icodemend.demo.code_suggest
Element
p42636
(dp42637
g10
I0
sg11
S'return true if c can be converted to rgb'
p42638
sg12
Vis_color_like.RGB
p42639
sg14
(lp42640
sg2
S'RGB'
p42641
sbag32795
asg2
g42630
sbs(S'plot'
p42642
g29970
tp42643
g29965
s(S'add_toolitem'
p42644
S'toggle'
p42645
tp42646
(icodemend.demo.code_suggest
Element
p42647
(dp42648
g10
I0
sg11
S'true : the button is a toggle ( change the pressed/unpressed state between consecutive clicks )'
p42649
sg12
Vadd_toolitem.toggle
p42650
sg14
(lp42651
sg2
g42645
sbs(S'axhspan'
p42652
g24471
tp42653
g24466
s(S'barh'
p42654
S'yerr'
p42655
tp42656
(icodemend.demo.code_suggest
Element
p42657
(dp42658
g10
I0
sg11
S'if a scalar number , len(n ) array-like object , or an nx1 array-like object , errorbars are drawn at + /-value relative to the data . if a sequence of shape 2xn , errorbars are drawn at - row1 and + row2 relative to the data .|||plot x versus y with error deltas in yerr and xerr . vertical errorbars are plotted if yerr is not none . horizontal errorbars are plotted if xerr is not none .|||if not none , will be used to generate errorbar(s ) on the bar chart|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y . if not none , will be used to generate errorbar(s ) on the bar chart'
p42659
sg12
Vbarh.yerr
p42660
sg14
(lp42661
sg2
g42655
sbs(g452
S'capthick'
p42662
S'2'
tp42663
(icodemend.demo.code_suggest
Element
p42664
(dp42665
g10
I1
sg11
S''
sg12
Verrorbar.capthick.2
p42666
sg14
(lp42667
sg2
S'2'
sbs(S'axhspan'
p42668
g24418
tp42669
g24413
s(S'axvline'
p42670
S'aspect'
p42671
tp42672
(icodemend.demo.code_suggest
Element
p42673
(dp42674
g10
I0
sg11
S'aspect'
p42675
sg12
Vaxvline.aspect
p42676
sg14
(lp42677
sg2
g42671
sbs(g117
g132
g28864
tp42678
g28860
s(g117
g118
g27959
tp42679
g27955
s(S'plotting'
p42680
g15784
tp42681
g15779
s(S'figtext'
p42682
g11561
tp42683
g11556
s(g101
g102
g21852
tp42684
g21848
s(g117
g4274
g28953
tp42685
g28949
sS'margins'
p42686
(icodemend.demo.code_suggest
Element
p42687
(dp42688
g10
I51
sg11
S'set or retrieve autoscaling margins .'
p42689
sg12
Vmargins
p42690
sg14
(lp42691
(icodemend.demo.code_suggest
Element
p42692
(dp42693
g10
I0
sg11
S'all three forms above set the xmargin and ymargin parameters . all keyword parameters are optional . a single argument specifies both xmargin and ymargin . the tight parameter is passed to autoscale_view ( ) , which is executed after a margin is changed ; the default here is true , on the assumption that when margins are specified , no additional padding to match tick marks is usually desired . setting tight to none will preserve the previous setting .'
p42694
sg12
Vmargins.tight
p42695
sg14
(lp42696
sg2
S'tight'
p42697
sba(icodemend.demo.code_suggest
Element
p42698
(dp42699
g10
I0
sg11
S'specifying any margin changes only the autoscaling ; for example , if xmargin is not none , then xmargin times the x data interval will be added to each end of that interval before it is used in autoscaling .'
p42700
sg12
Vmargins.xmargin
p42701
sg14
(lp42702
sg2
S'xmargin'
p42703
sbasg2
g42686
sbs(g514
g325
S'test_cmap'
p42704
tp42705
(icodemend.demo.code_suggest
Element
p42706
(dp42707
g10
I1
sg11
S''
sg12
Vpcolor.cmap.test_cmap
p42708
sg14
(lp42709
sg2
g42704
sbs(S'axhline'
p42710
g3789
tp42711
g3784
s(g5975
S'y'
g19697
tp42712
g19693
s(g93
g161
g161
tp42713
(icodemend.demo.code_suggest
Element
p42714
(dp42715
g10
I1
sg11
S''
sg12
Vannotate.xy.xy
p42716
sg14
(lp42717
sg2
g161
sbs(g252
g253
g14096
tp42718
g14092
s(g93
g94
g5526
tp42719
g5522
s(S'broken_barh'
p42720
S'yrange'
p42721
tp42722
(icodemend.demo.code_suggest
Element
p42723
(dp42724
g10
I0
sg11
S'a collection of horizontal bars spanning yrange with a sequence of xranges .'
p42725
sg12
Vbroken_barh.yrange
p42726
sg14
(lp42727
sg2
g42721
sbs(S'barh'
p42728
S'antialiased'
p42729
tp42730
(icodemend.demo.code_suggest
Element
p42731
(dp42732
g10
I0
sg11
S'set whether to use antialiased rendering'
p42733
sg12
Vbarh.antialiased
p42734
sg14
(lp42735
sg2
g42729
sbs(g117
g118
g28229
tp42736
g28225
s(g332
g132
g41431
tp42737
g41427
s(g16
g489
S'meta_total'
p42738
tp42739
(icodemend.demo.code_suggest
Element
p42740
(dp42741
g10
I1
sg11
S''
sg12
Vbar.bottom.meta_total
p42742
sg14
(lp42743
sg2
g42738
sbs(g452
g12650
S'20'
p42744
tp42745
(icodemend.demo.code_suggest
Element
p42746
(dp42747
g10
I2
sg11
S''
sg12
Verrorbar.capsize.20
p42748
sg14
(lp42749
sg2
g42744
sbsS'set_default_intervals'
p42750
(icodemend.demo.code_suggest
Element
p42751
(dp42752
g10
I0
sg11
S'set the default limits for the axis interval if they are not mutated'
p42753
sg12
Vset_default_intervals
p42754
sg14
(lp42755
sg2
g42750
sbsS'date2num'
p42756
(icodemend.demo.code_suggest
Element
p42757
(dp42758
g10
I47
sg11
S'd is either a datetime instance or a sequence of datetimes .'
p42759
sg12
Vdate2num
p42760
sg14
(lp42761
g36164
ag15348
a(icodemend.demo.code_suggest
Element
p42762
(dp42763
g10
I0
sg11
S'return value is a floating point number ( or sequence of floats ) which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 utc , plus one . the addition of one here is a historical artifact . also , note that the gregorian calendar is assumed ; this is not universal practice . for details , see the module docstring .'
p42764
sg12
Vdate2num.plus
p42765
sg14
(lp42766
sg2
S'plus'
p42767
sbasg2
g42756
sbs(g324
g325
g325
tp42768
g9051
s(g5640
g5641
g11946
tp42769
g11942
s(S'set_xticklabels'
p42770
g17181
tp42771
g17176
s(S'scatter'
p42772
g22233
tp42773
g22228
s(S'plot'
p42774
g29856
tp42775
g29851
s(S'semilogy'
p42776
g39301
tp42777
g39296
s(g582
g132
g3316
tp42778
g3312
sS'set_xlabel'
p42779
(icodemend.demo.code_suggest
Element
p42780
(dp42781
g10
I313
sg11
S'set the label for the xaxis .'
p42782
sg12
Vset_xlabel
p42783
sg14
(lp42784
(icodemend.demo.code_suggest
Element
p42785
(dp42786
g10
I1
sg11
S'spacing in points between the label and the x-axis'
p42787
sg12
Vset_xlabel.labelpad
p42788
sg14
(lp42789
(icodemend.demo.code_suggest
Element
p42790
(dp42791
g10
I1
sg11
S''
sg12
Vset_xlabel.labelpad.-35
p42792
sg14
(lp42793
sg2
S'-35'
p42794
sbasg2
S'labelpad'
p42795
sba(icodemend.demo.code_suggest
Element
p42796
(dp42797
g10
I0
sg11
S'set the font properties that control the text .'
p42798
sg12
Vset_xlabel.fontproperties
p42799
sg14
(lp42800
sg2
S'fontproperties'
p42801
sba(icodemend.demo.code_suggest
Element
p42802
(dp42803
g10
I0
sg11
S'set the ( x , y ) position of the text'
p42804
sg12
Vset_xlabel.position
p42805
sg14
(lp42806
sg2
S'position'
p42807
sbag1122
a(icodemend.demo.code_suggest
Element
p42808
(dp42809
g10
I0
sg11
S'set the text string s'
p42810
sg12
Vset_xlabel.text
p42811
sg14
(lp42812
sg2
S'text'
p42813
sba(icodemend.demo.code_suggest
Element
p42814
(dp42815
g10
I0
sg11
S'set the x position of the text'
p42816
sg12
Vset_xlabel.x
p42817
sg14
(lp42818
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p42819
(dp42820
g10
I0
sg11
S'x label'
p42821
sg12
Vset_xlabel.xlabel
p42822
sg14
(lp42823
sg2
S'xlabel'
p42824
sba(icodemend.demo.code_suggest
Element
p42825
(dp42826
g10
I0
sg11
S'set the y position of the text'
p42827
sg12
Vset_xlabel.y
p42828
sg14
(lp42829
sg2
S'y'
sbasg2
g42779
sbsS'set_visible'
p42830
(icodemend.demo.code_suggest
Element
p42831
(dp42832
g10
I333
sg11
S"set the artist 's visiblity ."
p42833
sg12
Vset_visible
p42834
sg14
(lp42835
sg2
g42830
sbsS'deprecated'
p42836
(icodemend.demo.code_suggest
Element
p42837
(dp42838
g10
I0
sg11
S'decorator to mark a function as deprecated .'
p42839
sg12
Vdeprecated
p42840
sg14
(lp42841
(icodemend.demo.code_suggest
Element
p42842
(dp42843
g10
I0
sg11
S'an alternative function that the user may use in place of the deprecated function . the deprecation warning will tell the user about this alternative if provided .'
p42844
sg12
Vdeprecated.alternative
p42845
sg14
(lp42846
sg2
S'alternative'
p42847
sbag13333
a(icodemend.demo.code_suggest
Element
p42848
(dp42849
g10
I0
sg11
S'the name of the deprecated function ; if not provided the name is automatically determined from the passed in function , though this is useful in the case of renamed functions , where the new function is just assigned to the name of the deprecated function . for example :'
p42850
sg12
Vdeprecated.name
p42851
sg14
(lp42852
sg2
S'name'
p42853
sba(icodemend.demo.code_suggest
Element
p42854
(dp42855
g10
I0
sg11
S'if true , uses a pendingdeprecationwarning instead of a deprecationwarning .'
p42856
sg12
Vdeprecated.pending
p42857
sg14
(lp42858
sg2
S'pending'
p42859
sba(icodemend.demo.code_suggest
Element
p42860
(dp42861
g10
I0
sg11
S'the release at which this api became deprecated . this is required .'
p42862
sg12
Vdeprecated.since
p42863
sg14
(lp42864
sg2
S'since'
p42865
sbasg2
g42836
sbs(g93
g5546
g5556
tp42866
(icodemend.demo.code_suggest
Element
p42867
(dp42868
g10
I1
sg11
S''
sg12
Vannotate.transform.trans
p42869
sg14
(lp42870
sg2
g5556
sbs(g117
g118
g27864
tp42871
g27860
s(S'add_lines'
p42872
S'levels'
p42873
tp42874
(icodemend.demo.code_suggest
Element
p42875
(dp42876
g10
I0
sg11
S'colors and linewidths must be scalars or sequences the same length as levels .'
p42877
sg12
Vadd_lines.levels
p42878
sg14
(lp42879
sg2
g42873
sbs(S'get'
p42880
S'position'
p42881
tp42882
(icodemend.demo.code_suggest
Element
p42883
(dp42884
g10
I0
sg11
S'set the axes position with|||set the ( x , y ) position of the text'
p42885
sg12
Vget.position
p42886
sg14
(lp42887
sg2
g42881
sbsS'update_from'
p42888
(icodemend.demo.code_suggest
Element
p42889
(dp42890
g10
I1
sg11
S'copy properties from other to self'
p42891
sg12
Vupdate_from
p42892
sg14
(lp42893
g30604
ag4764
a(icodemend.demo.code_suggest
Element
p42894
(dp42895
g10
I0
sg11
S'copy properties from other to self .'
p42896
sg12
Vupdate_from.other
p42897
sg14
(lp42898
sg2
S'other'
p42899
sbasg2
g42888
sbs(g93
g4800
g25484
tp42900
g25480
sS'epoch2num'
p42901
(icodemend.demo.code_suggest
Element
p42902
(dp42903
g10
I3
sg11
S'convert an epoch or sequence of epochs to the new date format , that is days since 0001 .'
p42904
sg12
Vepoch2num
p42905
sg14
(lp42906
sg2
g42901
sbsS'draw_markers'
p42907
(icodemend.demo.code_suggest
Element
p42908
(dp42909
g10
I1
sg11
S'draws a marker at each of the vertices in path .'
p42910
sg12
Vdraw_markers
p42911
sg14
(lp42912
sg2
g42907
sbs(S'broken_barh'
p42913
S'visible'
p42914
tp42915
(icodemend.demo.code_suggest
Element
p42916
(dp42917
g10
I0
sg11
S"set the artist 's visiblity ."
p42918
sg12
Vbroken_barh.visible
p42919
sg14
(lp42920
sg2
g42914
sbs(S'suptitle'
p42921
S'rotation_mode'
p42922
tp42923
(icodemend.demo.code_suggest
Element
p42924
(dp42925
g10
I0
sg11
S'set text rotation mode .'
p42926
sg12
Vsuptitle.rotation_mode
p42927
sg14
(lp42928
sg2
g42922
sbs(g117
g118
g28419
tp42929
g28415
s(S'mpl_connect'
p42930
S's'
tp42931
g4691
s(S'eventplot'
p42932
g23379
tp42933
g23374
s(S'thetagrids'
p42934
S'marker'
p42935
tp42936
(icodemend.demo.code_suggest
Element
p42937
(dp42938
g10
I0
sg11
S'set the line marker'
p42939
sg12
Vthetagrids.marker
p42940
sg14
(lp42941
sg2
g42935
sbs(S'fill'
p42942
S'facecolor'
p42943
tp42944
(icodemend.demo.code_suggest
Element
p42945
(dp42946
g10
I2
sg11
S'set the patch face color'
p42947
sg12
Vfill.facecolor
p42948
sg14
(lp42949
g37764
asg2
g42943
sbs(S'imshow'
p42950
g9802
tp42951
g9264
s(S'tricontour'
p42952
g1370
tp42953
g1365
s(g4998
g325
g9123
tp42954
(icodemend.demo.code_suggest
Element
p42955
(dp42956
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.new_cmap
p42957
sg14
(lp42958
sg2
g9123
sbs(g117
g132
g28698
tp42959
g28694
s(S'phase_spectrum'
p42960
S'xlabel'
p42961
tp42962
(icodemend.demo.code_suggest
Element
p42963
(dp42964
g10
I0
sg11
S'set the label for the xaxis .'
p42965
sg12
Vphase_spectrum.xlabel
p42966
sg14
(lp42967
sg2
g42961
sbs(g6425
S'basex'
p42968
S'2'
tp42969
g38895
s(S'csd'
p42970
S'label'
p42971
tp42972
(icodemend.demo.code_suggest
Element
p42973
(dp42974
g10
I0
sg11
S'set the label to s for auto legend .'
p42975
sg12
Vcsd.label
p42976
sg14
(lp42977
sg2
g42971
sbs(g117
g118
g28144
tp42978
g28140
s(g93
g38823
S"{'facecolor': 'black', 'shrink': 0.05}"
p42979
tp42980
(icodemend.demo.code_suggest
Element
p42981
(dp42982
g10
I2
sg11
S''
sg12
Vannotate.arrowprops.{'facecolor': 'black', 'shrink': 0/05}
p42983
sg14
(lp42984
sg2
g42979
sbsS'get_yscale'
p42985
(icodemend.demo.code_suggest
Element
p42986
(dp42987
g10
I1
sg11
S'return the yaxis scale string'
p42988
sg12
Vget_yscale
p42989
sg14
(lp42990
sg2
g42985
sbs(S'quiverkey'
p42991
g36687
tp42992
g36682
s(S'angle_spectrum'
p42993
g18894
tp42994
g18889
s(S'errorbar'
p42995
S'markersize'
p42996
tp42997
(icodemend.demo.code_suggest
Element
p42998
(dp42999
g10
I5
sg11
S'set the marker size in points|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p43000
sg12
Verrorbar.markersize
p43001
sg14
(lp43002
(icodemend.demo.code_suggest
Element
p43003
(dp43004
g10
I3
sg11
S''
sg12
Verrorbar.markersize.8
p43005
sg14
(lp43006
sg2
S'8'
sbag35047
a(icodemend.demo.code_suggest
Element
p43007
(dp43008
g10
I1
sg11
S''
sg12
Verrorbar.markersize.2
p43009
sg14
(lp43010
sg2
S'2'
sbasg2
g42996
sbs(S'stackplot'
p43011
S'y'
tp43012
g10465
s(g332
g389
g33728
tp43013
g33724
s(S'hexbin'
p43014
g25891
tp43015
g25886
sS'set_markeredgecolor'
p43016
(icodemend.demo.code_suggest
Element
p43017
(dp43018
g10
I0
sg11
S'set the marker edge color'
p43019
sg12
Vset_markeredgecolor
p43020
sg14
(lp43021
sg2
g43016
sbs(S'clip_to_bbox'
p43022
S'inside'
p43023
tp43024
(icodemend.demo.code_suggest
Element
p43025
(dp43026
g10
I0
sg11
S'if inside is true , clip to the inside of the box , otherwise to the outside of the box .'
p43027
sg12
Vclip_to_bbox.inside
p43028
sg14
(lp43029
sg2
g43023
sbs(S'barh'
p43030
S'yscale'
p43031
tp43032
(icodemend.demo.code_suggest
Element
p43033
(dp43034
g10
I0
sg11
S'set the scaling of the y-axis'
p43035
sg12
Vbarh.yscale
p43036
sg14
(lp43037
sg2
g43031
sbs(g93
g4800
g25419
tp43038
g25415
s(S'csd'
p43039
S'anchor'
p43040
tp43041
(icodemend.demo.code_suggest
Element
p43042
(dp43043
g10
I0
sg11
S'anchor'
p43044
sg12
Vcsd.anchor
p43045
sg14
(lp43046
sg2
g43040
sbs(S'scatter'
p43047
g21730
tp43048
g21613
s(g117
g2392
g29054
tp43049
g29050
s(g252
g4334
g14360
tp43050
g14356
s(S'candlestick2_ochl'
p43051
S'highs'
p43052
tp43053
(icodemend.demo.code_suggest
Element
p43054
(dp43055
g10
I0
sg11
S'sequence of high values'
p43056
sg12
Vcandlestick2_ochl.highs
p43057
sg14
(lp43058
sg2
g43052
sbs(S'figtext'
p43059
g11449
tp43060
g11444
s(S'axhline'
p43061
g3795
tp43062
g3790
s(g93
g4800
g25299
tp43063
g25295
s(S'tripcolor'
p43064
S'vmax'
p43065
tp43066
(icodemend.demo.code_suggest
Element
p43067
(dp43068
g10
I0
sg11
S'vmin and vmax are used in conjunction with norm to normalize luminance data . if either is none , it is autoscaled to the respective min or max of the color array c . if not none , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .'
p43069
sg12
Vtripcolor.vmax
p43070
sg14
(lp43071
sg2
g43065
sbs(g252
g1010
S'2'
tp43072
g13898
s(g332
g5546
S'trans_axlabel'
p43073
tp43074
(icodemend.demo.code_suggest
Element
p43075
(dp43076
g10
I1
sg11
S''
sg12
Vtext.transform.trans_axlabel
p43077
sg14
(lp43078
sg2
g43073
sbsS'VPacker'
p43079
(icodemend.demo.code_suggest
Element
p43080
(dp43081
g10
I1
sg11
S''
sg12
VVPacker
p43082
sg14
(lp43083
(icodemend.demo.code_suggest
Element
p43084
(dp43085
g10
I1
sg11
S'boundary pad .'
p43086
sg12
VVPacker.pad
p43087
sg14
(lp43088
(icodemend.demo.code_suggest
Element
p43089
(dp43090
g10
I1
sg11
S''
sg12
VVPacker.pad.0
p43091
sg14
(lp43092
sg2
S'0'
sbasg2
S'pad'
p43093
sba(icodemend.demo.code_suggest
Element
p43094
(dp43095
g10
I1
sg11
S'spacing between items .'
p43096
sg12
VVPacker.sep
p43097
sg14
(lp43098
(icodemend.demo.code_suggest
Element
p43099
(dp43100
g10
I1
sg11
S''
sg12
VVPacker.sep.0
p43101
sg14
(lp43102
sg2
S'0'
sbasg2
S'sep'
p43103
sba(icodemend.demo.code_suggest
Element
p43104
(dp43105
g10
I0
sg11
S'alignment of boxes .'
p43106
sg12
VVPacker.align
p43107
sg14
(lp43108
sg2
S'align'
p43109
sbag15172
ag23735
asg2
g43079
sbs(S'plot_date'
p43110
g19865
tp43111
g19860
s(g109
g8267
S"'gray'"
p43112
tp43113
(icodemend.demo.code_suggest
Element
p43114
(dp43115
g10
I1
sg11
S''
sg12
Vsavefig.facecolor.'gray'
p43116
sg14
(lp43117
sg2
g43112
sbs(S'hist'
p43118
S'orientation'
p43119
tp43120
(icodemend.demo.code_suggest
Element
p43121
(dp43122
g10
I11
sg11
S"if ' horizontal ' , barh will be used for bar-type histograms and the bottom kwarg will be the left edges ."
p43123
sg12
Vhist.orientation
p43124
sg14
(lp43125
(icodemend.demo.code_suggest
Element
p43126
(dp43127
g10
I10
sg11
S''
sg12
Vhist.orientation.'horizontal'
p43128
sg14
(lp43129
sg2
S"'horizontal'"
p43130
sba(icodemend.demo.code_suggest
Element
p43131
(dp43132
g10
I1
sg11
S''
sg12
Vhist.orientation.u'horizontal'
p43133
sg14
(lp43134
sg2
S"u'horizontal'"
p43135
sbasg2
g43119
sbs(S'cohere'
p43136
S'dashes'
p43137
tp43138
(icodemend.demo.code_suggest
Element
p43139
(dp43140
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p43141
sg12
Vcohere.dashes
p43142
sg14
(lp43143
sg2
g43137
sbs(g10679
g2251
g5338
tp43144
g5334
s(g117
g118
g28279
tp43145
g28275
s(S'broken_barh'
p43146
S'url'
p43147
tp43148
(icodemend.demo.code_suggest
Element
p43149
(dp43150
g10
I0
sg11
S'sets the url for the artist'
p43151
sg12
Vbroken_barh.url
p43152
sg14
(lp43153
sg2
g43147
sbs(S'get_yticklabels'
p43154
g31751
tp43155
g31746
s(S'phase_spectrum'
p43156
S'cursor_props'
p43157
tp43158
(icodemend.demo.code_suggest
Element
p43159
(dp43160
g10
I0
sg11
S'set the cursor property as'
p43161
sg12
Vphase_spectrum.cursor_props
p43162
sg14
(lp43163
sg2
g43157
sbsS'close'
p43164
(icodemend.demo.code_suggest
Element
p43165
(dp43166
g10
I156
sg11
S'close a figure window . finalize this object , making the underlying file a complete pdf file . close the underlying file if it is open .'
p43167
sg12
Vclose
p43168
sg14
(lp43169
(icodemend.demo.code_suggest
Element
p43170
(dp43171
g10
I0
sg11
S'close(h ) where h is a figure instance , closes that figure'
p43172
sg12
Vclose.h
p43173
sg14
(lp43174
sg2
S'h'
sba(icodemend.demo.code_suggest
Element
p43175
(dp43176
g10
I0
sg11
S'close(name ) where name is a string , closes figure with that label'
p43177
sg12
Vclose.name
p43178
sg14
(lp43179
sg2
S'name'
p43180
sbag37691
asg2
g43164
sbs(g139
g140
g1682
tp43181
g1678
sS'report_memory'
p43182
(icodemend.demo.code_suggest
Element
p43183
(dp43184
g10
I1
sg11
S'return the memory consumed by process'
p43185
sg12
Vreport_memory
p43186
sg14
(lp43187
sg2
g43182
sbsS'get_yticks'
p43188
(icodemend.demo.code_suggest
Element
p43189
(dp43190
g10
I12
sg11
S'return the y ticks as a list of locations'
p43191
sg12
Vget_yticks
p43192
sg14
(lp43193
sg2
g43188
sbs(S'eventplot'
p43194
g23577
tp43195
g23572
s(S'complex_spectrum'
p43196
g32920
tp43197
g32915
sS'get_height'
p43198
(icodemend.demo.code_suggest
Element
p43199
(dp43200
g10
I19
sg11
S'return the height of the rectangle'
p43201
sg12
Vget_height
p43202
sg14
(lp43203
sg2
g43198
sbs(S'deprecated'
p43204
g42859
tp43205
g42854
s(g117
g348
g29528
tp43206
g29524
s(S'semilogy'
p43207
g39175
tp43208
g39165
s(S'errorbar'
p43209
S'fmt'
p43210
tp43211
(icodemend.demo.code_suggest
Element
p43212
(dp43213
g10
I43
sg11
S"if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||the plot format symbol . if fmt is ' none ' ( case-insensitive ) , only the errorbars are plotted . this is used for adding errorbars to a bar plot , for example . default is ' ' , an empty plot format string ; properties are then identical to the defaults for plot ( ) . the plot format symbol . if fmt is ' none ' ( case-insensitive ) , only the errorbars are plotted . this is used for adding errorbars to a bar plot , for example . default is ' ' , an empty plot format string ; properties are then identical to the defaults for plot ( ) ."
p43214
sg12
Verrorbar.fmt
p43215
sg14
(lp43216
(icodemend.demo.code_suggest
Element
p43217
(dp43218
g10
I16
sg11
S''
sg12
Verrorbar.fmt.'o'
p43219
sg14
(lp43220
sg2
S"'o'"
p43221
sbag37886
a(icodemend.demo.code_suggest
Element
p43222
(dp43223
g10
I4
sg11
S''
sg12
Verrorbar.fmt.'-o'
p43224
sg14
(lp43225
sg2
S"'-o'"
p43226
sbag35839
ag14932
ag12428
a(icodemend.demo.code_suggest
Element
p43227
(dp43228
g10
I1
sg11
S''
sg12
Verrorbar.fmt.'+'
p43229
sg14
(lp43230
sg2
S"'+'"
p43231
sbag2844
a(icodemend.demo.code_suggest
Element
p43232
(dp43233
g10
I1
sg11
S''
sg12
Verrorbar.fmt.'k+'
p43234
sg14
(lp43235
sg2
S"'k+'"
p43236
sba(icodemend.demo.code_suggest
Element
p43237
(dp43238
g10
I1
sg11
S''
sg12
Verrorbar.fmt.'k<'
p43239
sg14
(lp43240
sg2
S"'k<'"
p43241
sba(icodemend.demo.code_suggest
Element
p43242
(dp43243
g10
I1
sg11
S''
sg12
Verrorbar.fmt.'kv'
p43244
sg14
(lp43245
sg2
S"'kv'"
p43246
sba(icodemend.demo.code_suggest
Element
p43247
(dp43248
g10
I1
sg11
S''
sg12
Verrorbar.fmt.'ro-'
p43249
sg14
(lp43250
sg2
S"'ro-'"
p43251
sba(icodemend.demo.code_suggest
Element
p43252
(dp43253
g10
I1
sg11
S''
sg12
Verrorbar.fmt.color
p43254
sg14
(lp43255
sg2
g132
sbag23663
asg2
g43210
sbs(g5640
g10482
g10496
tp43256
g10492
s(S'magnitude_spectrum'
p43257
S'prop_cycle'
p43258
tp43259
(icodemend.demo.code_suggest
Element
p43260
(dp43261
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p43262
sg12
Vmagnitude_spectrum.prop_cycle
p43263
sg14
(lp43264
sg2
g43258
sbs(g245
g13636
g865
tp43265
(icodemend.demo.code_suggest
Element
p43266
(dp43267
g10
I6
sg11
S''
sg12
Vfigure.num.None
p43268
sg14
(lp43269
sg2
g865
sbs(g101
S's'
g7568
tp43270
g7564
s(g16
g489
S'0'
tp43271
(icodemend.demo.code_suggest
Element
p43272
(dp43273
g10
I3
sg11
S''
sg12
Vbar.bottom.0
p43274
sg14
(lp43275
sg2
S'0'
sbs(S'add_subplot'
p43276
S'bottom'
p43277
tp43278
(icodemend.demo.code_suggest
Element
p43279
(dp43280
g10
I0
sg11
S"add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal axes kwargs plus projection which sets the projection type of the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) . typical usage :"
p43281
sg12
Vadd_subplot.bottom
p43282
sg14
(lp43283
sg2
g43277
sbs(g13542
g39463
S'8'
tp43284
g32153
s(S'angle_spectrum'
p43285
g18846
tp43286
g18841
s(g93
g161
S'(x1, y2)'
p43287
tp43288
(icodemend.demo.code_suggest
Element
p43289
(dp43290
g10
I1
sg11
S''
sg12
Vannotate.xy.(x1, y2)
p43291
sg14
(lp43292
sg2
g43287
sbs(g117
g118
g28084
tp43293
g28080
s(g332
g8768
g1944
tp43294
(icodemend.demo.code_suggest
Element
p43295
(dp43296
g10
I2
sg11
S''
sg12
Vtext.clip_on.False
p43297
sg14
(lp43298
sg2
g1944
sbs(S'barbs'
p43299
S'xticklabels'
p43300
tp43301
(icodemend.demo.code_suggest
Element
p43302
(dp43303
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p43304
sg12
Vbarbs.xticklabels
p43305
sg14
(lp43306
sg2
g43300
sbs(S'figtext'
p43307
g11383
tp43308
g11378
s(g139
g3075
g2060
tp43309
g2056
s(S'hexbin'
p43310
g25993
tp43311
g25988
s(g4371
g7032
g17534
tp43312
g17530
s(S'add_subplot'
p43313
S'cursor_props'
p43314
tp43315
(icodemend.demo.code_suggest
Element
p43316
(dp43317
g10
I0
sg11
S'set the cursor property as'
p43318
sg12
Vadd_subplot.cursor_props
p43319
sg14
(lp43320
sg2
g43314
sbs(S'broken_barh'
p43321
S'path_effects'
p43322
tp43323
(icodemend.demo.code_suggest
Element
p43324
(dp43325
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p43326
sg12
Vbroken_barh.path_effects
p43327
sg14
(lp43328
sg2
g43322
sbs(S'hexbin'
p43329
g26004
tp43330
g25999
s(g26208
g42628
g32283
tp43331
g32279
s(g6632
g8780
S'1'
tp43332
g16680
sS'add_patch'
p43333
(icodemend.demo.code_suggest
Element
p43334
(dp43335
g10
I190
sg11
S'add a patch p to the list of axes patches ; the clipbox will be set to the axes clipping box .'
p43336
sg12
Vadd_patch
p43337
sg14
(lp43338
g39426
asg2
g43333
sbs(S'set_cursor_props'
p43339
g34223
tp43340
g34218
s(S'base'
p43341
g38852
tp43342
g38847
s(g766
g102
S'0.33'
p43343
tp43344
(icodemend.demo.code_suggest
Element
p43345
(dp43346
g10
I1
sg11
S''
sg12
Vcontourf.alpha.0/33
p43347
sg14
(lp43348
sg2
g43343
sbs(g332
g36336
S"'right'"
p43349
tp43350
(icodemend.demo.code_suggest
Element
p43351
(dp43352
g10
I1
sg11
S''
sg12
Vtext.multialignment.'right'
p43353
sg14
(lp43354
sg2
g43349
sbs(g1170
g118
S"'y'"
p43355
tp43356
(icodemend.demo.code_suggest
Element
p43357
(dp43358
g10
I1
sg11
S''
sg12
Vhist.label.'y'
p43359
sg14
(lp43360
sg2
g43355
sbs(S'phase_spectrum'
p43361
S'ymargin'
p43362
tp43363
(icodemend.demo.code_suggest
Element
p43364
(dp43365
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p43366
sg12
Vphase_spectrum.ymargin
p43367
sg14
(lp43368
sg2
g43362
sbs(g324
g515
g9921
tp43369
g9917
s(g117
g4163
g11039
tp43370
g11035
s(S'get_extents'
p43371
g42359
tp43372
g42354
s(g117
g118
g28554
tp43373
g28550
s(g139
g3075
g2070
tp43374
g2066
s(g1170
g118
S"'first answer'"
p43375
tp43376
(icodemend.demo.code_suggest
Element
p43377
(dp43378
g10
I1
sg11
S''
sg12
Vhist.label.'first answer'
p43379
sg14
(lp43380
sg2
g43375
sbs(g101
g8545
g865
tp43381
g22113
s(g944
g132
g20647
tp43382
g35746
s(S'is_numlike'
p43383
S'obj'
p43384
tp43385
(icodemend.demo.code_suggest
Element
p43386
(dp43387
g10
I0
sg11
S'return true if obj looks like a number'
p43388
sg12
Vis_numlike.obj
p43389
sg14
(lp43390
sg2
g43384
sbs(S'errorbar'
p43391
S'antialiased'
p43392
tp43393
(icodemend.demo.code_suggest
Element
p43394
(dp43395
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p43396
sg12
Verrorbar.antialiased
p43397
sg14
(lp43398
sg2
g43392
sbs(S'plot'
p43399
g29725
tp43400
g29705
s(g2250
g6064
g627
tp43401
g30857
s(g6632
g966
S"'My_Axes'"
p43402
tp43403
(icodemend.demo.code_suggest
Element
p43404
(dp43405
g10
I1
sg11
S''
sg12
Vadd_subplot.projection.'My_Axes'
p43406
sg14
(lp43407
sg2
g43402
sbs(g101
g8267
g22132
tp43408
g22128
s(g16
g132
S"'k'"
p43409
tp43410
(icodemend.demo.code_suggest
Element
p43411
(dp43412
g10
I3
sg11
S''
sg12
Vbar.color.'k'
p43413
sg14
(lp43414
sg2
g43409
sbs(g324
g785
g9626
tp43415
g9622
s(S'add_toolitem'
p43416
S'group'
p43417
tp43418
(icodemend.demo.code_suggest
Element
p43419
(dp43420
g10
I0
sg11
S'name of the group that this tool belongs to'
p43421
sg12
Vadd_toolitem.group
p43422
sg14
(lp43423
sg2
g43417
sbsS'restrict_dict'
p43424
(icodemend.demo.code_suggest
Element
p43425
(dp43426
g10
I0
sg11
S'return a dictionary that contains those keys that appear in both d and keys , with values from d.'
p43427
sg12
Vrestrict_dict
p43428
sg14
(lp43429
sg2
g43424
sbs(S'warn_deprecated'
p43430
S'pending'
p43431
tp43432
(icodemend.demo.code_suggest
Element
p43433
(dp43434
g10
I0
sg11
S'if true , uses a pendingdeprecationwarning instead of a deprecationwarning .'
p43435
sg12
Vwarn_deprecated.pending
p43436
sg14
(lp43437
sg2
g43431
sbs(S'circle_ratios'
p43438
S'rescale'
p43439
tp43440
(icodemend.demo.code_suggest
Element
p43441
(dp43442
g10
I0
sg11
S'to avoid unduly low values due to a difference of scale between the 2 axis , the triangular mesh can first be rescaled to fit inside a unit square with scale_factors ( only if rescale is true , which is its default value ) .|||if true , a rescaling will be internally performed ( based on scale_factors , so that the ( unmasked ) triangles fit exactly inside a unit square mesh . default is true .'
p43443
sg12
Vcircle_ratios.rescale
p43444
sg14
(lp43445
sg2
g43439
sbs(g117
g348
g29538
tp43446
g29534
s(g117
g8768
g438
tp43447
g29368
s(g26208
g489
S'0'
tp43448
g32259
sS'gray'
p43449
(icodemend.demo.code_suggest
Element
p43450
(dp43451
g10
I11
sg11
S'set the default colormap to gray and apply to current image if any .'
p43452
sg12
Vgray
p43453
sg14
(lp43454
sg2
g43449
sbs(S'set_ylabel'
p43455
g36043
tp43456
g36038
sS'get_markevery'
p43457
(icodemend.demo.code_suggest
Element
p43458
(dp43459
g10
I0
sg11
S'return the markevery setting'
p43460
sg12
Vget_markevery
p43461
sg14
(lp43462
sg2
g43457
sbs(S'barh'
p43463
S'facecolor'
p43464
tp43465
(icodemend.demo.code_suggest
Element
p43466
(dp43467
g10
I4
sg11
S'set the patch face color'
p43468
sg12
Vbarh.facecolor
p43469
sg14
(lp43470
(icodemend.demo.code_suggest
Element
p43471
(dp43472
g10
I1
sg11
S''
sg12
Vbarh.facecolor.'white'
p43473
sg14
(lp43474
sg2
S"'white'"
p43475
sbasg2
g43464
sbs(S'text'
p43476
S'codes'
p43477
tp43478
(icodemend.demo.code_suggest
Element
p43479
(dp43480
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p43481
sg12
Vtext.codes
p43482
sg14
(lp43483
sg2
g43477
sbs(S'__call__'
p43484
S'x'
tp43485
(icodemend.demo.code_suggest
Element
p43486
(dp43487
g10
I0
sg11
S'returns integer array with the same shape and x and y .|||x , y are array_like x and y coordinates of the same shape and any number of dimensions .'
p43488
sg12
V__call__.x
p43489
sg14
(lp43490
sg2
S'x'
sbsS'legend_artist'
p43491
(icodemend.demo.code_suggest
Element
p43492
(dp43493
g10
I0
sg11
S'return the artist that this handlerbase generates for the given original artist/handle .'
p43494
sg12
Vlegend_artist
p43495
sg14
(lp43496
g39857
a(icodemend.demo.code_suggest
Element
p43497
(dp43498
g10
I0
sg11
S"the box which has been created to hold this legend entry 's artists . artists created in the legend_artist method must be added to this handlebox inside this method ."
p43499
sg12
Vlegend_artist.handlebox
p43500
sg14
(lp43501
sg2
S'handlebox'
p43502
sba(icodemend.demo.code_suggest
Element
p43503
(dp43504
g10
I0
sg11
S'the legend for which these legend artists are being created .'
p43505
sg12
Vlegend_artist.legend
p43506
sg14
(lp43507
sg2
S'legend'
p43508
sba(icodemend.demo.code_suggest
Element
p43509
(dp43510
g10
I0
sg11
S'the object for which these legend artists are being created .'
p43511
sg12
Vlegend_artist.orig_handle
p43512
sg14
(lp43513
sg2
S'orig_handle'
p43514
sbasg2
g43491
sbs(g6556
g2392
g17
tp43515
(icodemend.demo.code_suggest
Element
p43516
(dp43517
g10
I1
sg11
S''
sg12
Vvlines.linewidth.width
p43518
sg14
(lp43519
sg2
g17
sbs(S'angle_spectrum'
p43520
g18750
tp43521
g18745
s(S'hexbin'
p43522
g25747
tp43523
g25729
s(S'magnitude_spectrum'
p43524
S'ylabel'
p43525
tp43526
(icodemend.demo.code_suggest
Element
p43527
(dp43528
g10
I0
sg11
S'set the label for the yaxis'
p43529
sg12
Vmagnitude_spectrum.ylabel
p43530
sg14
(lp43531
sg2
g43525
sbs(g117
g4163
S'4'
tp43532
g11053
s(g4090
g4091
g438
tp43533
g4914
s(g4340
g3084
g35779
tp43534
g35775
s(g13532
g7815
g35929
tp43535
g35925
s(g117
g5775
g29402
tp43536
g29398
s(g1003
g4403
g25244
tp43537
g25240
s(S'pcolormesh'
p43538
S'facecolor'
p43539
tp43540
(icodemend.demo.code_suggest
Element
p43541
(dp43542
g10
I0
sg11
S'set the facecolor(s ) of the collection .'
p43543
sg12
Vpcolormesh.facecolor
p43544
sg14
(lp43545
sg2
g43539
sbs(g324
g785
g9771
tp43546
g9767
s(S'get_xyz_where'
p43547
S'z'
tp43548
g17891
s(g117
S'y'
g29468
tp43549
g29464
s(S'eventplot'
p43550
g23535
tp43551
g23530
s(g252
g253
g14166
tp43552
g14162
s(S'update_datalim_bounds'
p43553
g41397
tp43554
g41392
s(g117
g2392
g29086
tp43555
g29082
s(g101
g8267
g22127
tp43556
g22123
s(g5673
g16158
g42030
tp43557
g42026
s(g766
g666
g3983
tp43558
g3979
s(S'text'
p43559
S'fontproperties'
p43560
tp43561
(icodemend.demo.code_suggest
Element
p43562
(dp43563
g10
I5
sg11
S'set the font properties that control the text .'
p43564
sg12
Vtext.fontproperties
p43565
sg14
(lp43566
g5478
ag36612
ag3087
a(icodemend.demo.code_suggest
Element
p43567
(dp43568
g10
I1
sg11
S''
sg12
Vtext.fontproperties.fp
p43569
sg14
(lp43570
sg2
S'fp'
p43571
sbasg2
g43560
sbs(S'psd'
p43572
g37125
tp43573
g37120
s(S'annotate'
p43574
S'gid'
p43575
tp43576
(icodemend.demo.code_suggest
Element
p43577
(dp43578
g10
I0
sg11
S'sets the ( group ) id for the artist'
p43579
sg12
Vannotate.gid
p43580
sg14
(lp43581
sg2
g43575
sbs(S'set_yticklabels'
p43582
g18148
tp43583
g18143
s(S'set_yscale'
p43584
g15545
tp43585
g15540
s(S'figimage'
p43586
S'X'
tp43587
g3248
s(S'axvline'
p43588
S'ylabel'
p43589
tp43590
(icodemend.demo.code_suggest
Element
p43591
(dp43592
g10
I0
sg11
S'set the label for the yaxis'
p43593
sg12
Vaxvline.ylabel
p43594
sg14
(lp43595
sg2
g43589
sbs(S'quad2cubic'
p43596
S'x'
tp43597
g32881
s(g117
g132
g28804
tp43598
g28800
s(S'rec_summarize'
p43599
g34949
tp43600
g34944
s(g125
S'x'
g126
tp43601
g34855
s(S'loglog'
p43602
S'linestyle'
p43603
tp43604
(icodemend.demo.code_suggest
Element
p43605
(dp43606
g10
I0
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p43607
sg12
Vloglog.linestyle
p43608
sg14
(lp43609
sg2
g43603
sbs(S'render_glyph'
p43610
g31431
tp43611
g31426
s(g5424
g132
S"'g'"
p43612
tp43613
(icodemend.demo.code_suggest
Element
p43614
(dp43615
g10
I2
sg11
S''
sg12
Vgrid.color.'g'
p43616
sg14
(lp43617
sg2
g43612
sbs(g332
g333
g25047
tp43618
g25043
s(S'fill'
p43619
S'transform'
p43620
tp43621
(icodemend.demo.code_suggest
Element
p43622
(dp43623
g10
I0
sg11
S'set the transform instance used by this artist .'
p43624
sg12
Vfill.transform
p43625
sg14
(lp43626
sg2
g43620
sbs(S'pcolormesh'
p43627
S'size_inches'
p43628
tp43629
(icodemend.demo.code_suggest
Element
p43630
(dp43631
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p43632
sg12
Vpcolormesh.size_inches
p43633
sg14
(lp43634
sg2
g43628
sbs(S'hitlist'
p43635
g19175
tp43636
g19170
s(g324
g325
g9217
tp43637
g9213
sS'get_ybound'
p43638
(icodemend.demo.code_suggest
Element
p43639
(dp43640
g10
I4
sg11
S'return y-axis numerical bounds in the form of lowerbound < upperbound'
p43641
sg12
Vget_ybound
p43642
sg14
(lp43643
sg2
g43638
sbs(g139
g140
g1498
tp43644
g1494
s(S'fill'
p43645
S'readonly'
p43646
tp43647
(icodemend.demo.code_suggest
Element
p43648
(dp43649
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p43650
sg12
Vfill.readonly
p43651
sg14
(lp43652
sg2
g43646
sbs(S'angle_spectrum'
p43653
g18965
tp43654
g18960
s(S'set_xticklabels'
p43655
g17235
tp43656
g17230
s(S'figtext'
p43657
g11341
tp43658
g11336
sS'cohere'
p43659
(icodemend.demo.code_suggest
Element
p43660
(dp43661
g10
I2
sg11
S'plot the coherence between x and y .'
p43662
sg12
Vcohere
p43663
sg14
(lp43664
g42216
ag36493
ag34693
ag41551
ag18489
a(icodemend.demo.code_suggest
Element
p43665
(dp43666
g10
I0
sg11
S'anchor'
p43667
sg12
Vcohere.anchor
p43668
sg14
(lp43669
sg2
S'anchor'
p43670
sbag20642
a(icodemend.demo.code_suggest
Element
p43671
(dp43672
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p43673
sg12
Vcohere.antialiased
p43674
sg14
(lp43675
sg2
S'antialiased'
p43676
sba(icodemend.demo.code_suggest
Element
p43677
(dp43678
g10
I0
sg11
S'aspect'
p43679
sg12
Vcohere.aspect
p43680
sg14
(lp43681
sg2
S'aspect'
p43682
sba(icodemend.demo.code_suggest
Element
p43683
(dp43684
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p43685
sg12
Vcohere.axes
p43686
sg14
(lp43687
sg2
S'axes'
p43688
sba(icodemend.demo.code_suggest
Element
p43689
(dp43690
g10
I0
sg11
S"set the artist 's clip bbox ."
p43691
sg12
Vcohere.clip_box
p43692
sg14
(lp43693
sg2
S'clip_box'
p43694
sba(icodemend.demo.code_suggest
Element
p43695
(dp43696
g10
I0
sg11
S'set whether artist uses clipping .'
p43697
sg12
Vcohere.clip_on
p43698
sg14
(lp43699
sg2
S'clip_on'
p43700
sbag22746
ag27257
a(icodemend.demo.code_suggest
Element
p43701
(dp43702
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p43703
sg12
Vcohere.codes
p43704
sg14
(lp43705
sg2
S'codes'
p43706
sba(icodemend.demo.code_suggest
Element
p43707
(dp43708
g10
I0
sg11
S'set the color of the line'
p43709
sg12
Vcohere.color
p43710
sg14
(lp43711
sg2
S'color'
p43712
sbag8037
ag23169
ag39574
ag10673
ag4728
ag43139
ag35645
a(icodemend.demo.code_suggest
Element
p43713
(dp43714
g10
I0
sg11
S'the return value is a tuple ( cxy , f ) , where f are the frequencies of the coherence vector .'
p43715
sg12
Vcohere.f
p43716
sg14
(lp43717
sg2
S'f'
sba(icodemend.demo.code_suggest
Element
p43718
(dp43719
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p43720
sg12
Vcohere.figure
p43721
sg14
(lp43722
sg2
S'figure'
p43723
sba(icodemend.demo.code_suggest
Element
p43724
(dp43725
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p43726
sg12
Vcohere.fillstyle
p43727
sg14
(lp43728
sg2
S'fillstyle'
p43729
sbag30662
ag40046
ag38023
a(icodemend.demo.code_suggest
Element
p43730
(dp43731
g10
I0
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p43732
sg12
Vcohere.linestyle
p43733
sg14
(lp43734
sg2
S'linestyle'
p43735
sbag14658
a(icodemend.demo.code_suggest
Element
p43736
(dp43737
g10
I0
sg11
S'set the line marker'
p43738
sg12
Vcohere.marker
p43739
sg14
(lp43740
sg2
S'marker'
p43741
sba(icodemend.demo.code_suggest
Element
p43742
(dp43743
g10
I0
sg11
S'set the marker edge color'
p43744
sg12
Vcohere.markeredgecolor
p43745
sg14
(lp43746
sg2
S'markeredgecolor'
p43747
sba(icodemend.demo.code_suggest
Element
p43748
(dp43749
g10
I0
sg11
S'set the marker edge width in points'
p43750
sg12
Vcohere.markeredgewidth
p43751
sg14
(lp43752
sg2
S'markeredgewidth'
p43753
sbag23004
ag24679
a(icodemend.demo.code_suggest
Element
p43754
(dp43755
g10
I0
sg11
S'set the marker size in points'
p43756
sg12
Vcohere.markersize
p43757
sg14
(lp43758
sg2
S'markersize'
p43759
sbag33629
a(icodemend.demo.code_suggest
Element
p43760
(dp43761
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p43762
sg12
Vcohere.path_effects
p43763
sg14
(lp43764
sg2
S'path_effects'
p43765
sba(icodemend.demo.code_suggest
Element
p43766
(dp43767
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p43768
sg12
Vcohere.picker
p43769
sg14
(lp43770
sg2
S'picker'
p43771
sba(icodemend.demo.code_suggest
Element
p43772
(dp43773
g10
I0
sg11
S'sets the pick radius used for containment tests'
p43774
sg12
Vcohere.pickradius
p43775
sg14
(lp43776
sg2
S'pickradius'
p43777
sbag8612
ag8198
a(icodemend.demo.code_suggest
Element
p43778
(dp43779
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p43780
sg12
Vcohere.rasterized
p43781
sg14
(lp43782
sg2
S'rasterized'
p43783
sba(icodemend.demo.code_suggest
Element
p43784
(dp43785
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p43786
sg12
Vcohere.readonly
p43787
sg14
(lp43788
sg2
S'readonly'
p43789
sba(icodemend.demo.code_suggest
Element
p43790
(dp43791
g10
I0
sg11
S"specifies which sides of the spectrum to return . default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided ."
p43792
sg12
Vcohere.sides
p43793
sg14
(lp43794
sg2
S'sides'
p43795
sba(icodemend.demo.code_suggest
Element
p43796
(dp43797
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p43798
sg12
Vcohere.size_inches
p43799
sg14
(lp43800
sg2
S'size_inches'
p43801
sbag2323
a(icodemend.demo.code_suggest
Element
p43802
(dp43803
g10
I0
sg11
S'sets the snap setting which may be'
p43804
sg12
Vcohere.snap
p43805
sg14
(lp43806
sg2
S'snap'
p43807
sba(icodemend.demo.code_suggest
Element
p43808
(dp43809
g10
I0
sg11
S'set the cap style for solid linestyles'
p43810
sg12
Vcohere.solid_capstyle
p43811
sg14
(lp43812
sg2
S'solid_capstyle'
p43813
sbag5167
ag42481
a(icodemend.demo.code_suggest
Element
p43814
(dp43815
g10
I0
sg11
S'set the transformation instance used by this artist'
p43816
sg12
Vcohere.transform
p43817
sg14
(lp43818
sg2
S'transform'
p43819
sba(icodemend.demo.code_suggest
Element
p43820
(dp43821
g10
I0
sg11
S'sets the url for the artist'
p43822
sg12
Vcohere.url
p43823
sg14
(lp43824
sg2
S'url'
p43825
sba(icodemend.demo.code_suggest
Element
p43826
(dp43827
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p43828
sg12
Vcohere.vertices
p43829
sg14
(lp43830
sg2
S'vertices'
p43831
sba(icodemend.demo.code_suggest
Element
p43832
(dp43833
g10
I0
sg11
S"set the artist 's visiblity ."
p43834
sg12
Vcohere.visible
p43835
sg14
(lp43836
sg2
S'visible'
p43837
sba(icodemend.demo.code_suggest
Element
p43838
(dp43839
g10
I0
sg11
S'a function or a vector of length nfft . to create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. the default is window_hanning ( ) . if a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment .'
p43840
sg12
Vcohere.window
p43841
sg14
(lp43842
sg2
S'window'
p43843
sbag4220
a(icodemend.demo.code_suggest
Element
p43844
(dp43845
g10
I0
sg11
S'set the data np.array for x'
p43846
sg12
Vcohere.xdata
p43847
sg14
(lp43848
sg2
S'xdata'
p43849
sba(icodemend.demo.code_suggest
Element
p43850
(dp43851
g10
I0
sg11
S'set the label for the xaxis .'
p43852
sg12
Vcohere.xlabel
p43853
sg14
(lp43854
sg2
S'xlabel'
p43855
sba(icodemend.demo.code_suggest
Element
p43856
(dp43857
g10
I0
sg11
S'set the data limits for the xaxis'
p43858
sg12
Vcohere.xlim
p43859
sg14
(lp43860
sg2
S'xlim'
p43861
sba(icodemend.demo.code_suggest
Element
p43862
(dp43863
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p43864
sg12
Vcohere.xmargin
p43865
sg14
(lp43866
sg2
S'xmargin'
p43867
sbag32243
ag26937
ag16727
a(icodemend.demo.code_suggest
Element
p43868
(dp43869
g10
I0
sg11
S'plot the coherence between x and y .|||plot the coherence between x and y . coherence is the normalized cross spectral density :'
p43870
sg12
Vcohere.y
p43871
sg14
(lp43872
sg2
S'y'
sbag15587
ag37833
a(icodemend.demo.code_suggest
Element
p43873
(dp43874
g10
I0
sg11
S'set the data limits for the yaxis'
p43875
sg12
Vcohere.ylim
p43876
sg14
(lp43877
sg2
S'ylim'
p43878
sba(icodemend.demo.code_suggest
Element
p43879
(dp43880
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p43881
sg12
Vcohere.ymargin
p43882
sg14
(lp43883
sg2
S'ymargin'
p43884
sba(icodemend.demo.code_suggest
Element
p43885
(dp43886
g10
I0
sg11
S'set the scaling of the y-axis'
p43887
sg12
Vcohere.yscale
p43888
sg14
(lp43889
sg2
S'yscale'
p43890
sbag41353
ag12645
a(icodemend.demo.code_suggest
Element
p43891
(dp43892
g10
I0
sg11
S'set the zorder for the artist .'
p43893
sg12
Vcohere.zorder
p43894
sg14
(lp43895
sg2
S'zorder'
p43896
sbasg2
g43659
sbs(g944
g1149
S"'r'"
p43897
tp43898
(icodemend.demo.code_suggest
Element
p43899
(dp43900
g10
I1
sg11
S''
sg12
Vbarh.ecolor.'r'
p43901
sg14
(lp43902
sg2
g43897
sbs(g21163
g132
g17973
tp43903
g17969
sS'get_minor_locator'
p43904
(icodemend.demo.code_suggest
Element
p43905
(dp43906
g10
I0
sg11
S'get the locator of the minor ticker'
p43907
sg12
Vget_minor_locator
p43908
sg14
(lp43909
sg2
g43904
sbs(S'candlestick_ochl'
p43910
g26292
tp43911
g26287
s(S'barh'
p43912
S'capsize'
p43913
tp43914
(icodemend.demo.code_suggest
Element
p43915
(dp43916
g10
I0
sg11
S'the length of the error bar caps in points ; if none , it will take the value from errorbar.capsize rcparam .|||determines the length in points of the error bar caps default : none , which will take the value from the errorbar.capsize rcparam . determines the length in points of the error bar caps default : none , which will take the value from the errorbar.capsize rcparam .'
p43917
sg12
Vbarh.capsize
p43918
sg14
(lp43919
sg2
g43913
sbs(g16
g489
S'0.2'
p43920
tp43921
(icodemend.demo.code_suggest
Element
p43922
(dp43923
g10
I1
sg11
S''
sg12
Vbar.bottom.0/2
p43924
sg14
(lp43925
sg2
g43920
sbs(S'from_levels_and_colors'
p43926
g666
g666
tp43927
(icodemend.demo.code_suggest
Element
p43928
(dp43929
g10
I1
sg11
S''
sg12
Vfrom_levels_and_colors.levels.levels
p43930
sg14
(lp43931
sg2
g666
sbs(S'pcolorfast'
p43932
S'X'
tp43933
g33817
sS'get_xminorticklabels'
p43934
(icodemend.demo.code_suggest
Element
p43935
(dp43936
g10
I0
sg11
S'get the x minor tick labels as a list of matplotlib.text.text instances .'
p43937
sg12
Vget_xminorticklabels
p43938
sg14
(lp43939
sg2
g43934
sbs(g139
g140
g1568
tp43940
g1564
s(g117
g118
g27904
tp43941
g27900
s(g332
g667
S'10'
p43942
tp43943
(icodemend.demo.code_suggest
Element
p43944
(dp43945
g10
I1
sg11
S''
sg12
Vtext.picker.10
p43946
sg14
(lp43947
sg2
g43942
sbs(g252
g253
g14191
tp43948
g14187
s(g245
g3075
S'70'
p43949
tp43950
(icodemend.demo.code_suggest
Element
p43951
(dp43952
g10
I1
sg11
S''
sg12
Vfigure.dpi.70
p43953
sg14
(lp43954
sg2
g43949
sbs(S'text'
p43955
S'yticks'
p43956
tp43957
(icodemend.demo.code_suggest
Element
p43958
(dp43959
g10
I0
sg11
S'set the y ticks with list of ticks'
p43960
sg12
Vtext.yticks
p43961
sg14
(lp43962
sg2
g43956
sbs(S'set_xticklabels'
p43963
g17031
tp43964
g17026
sS'csv2rec'
p43965
(icodemend.demo.code_suggest
Element
p43966
(dp43967
g10
I14
sg11
S'load data from comma/space/tab delimited file in fname into a numpy record array and return the record array .'
p43968
sg12
Vcsv2rec
p43969
sg14
(lp43970
(icodemend.demo.code_suggest
Element
p43971
(dp43972
g10
I5
sg11
S'if names is none , a header row is required to automatically assign the recarray names . the headers will be lower cased , spaces will be converted to underscores , and illegal attribute name characters removed . if names is not none , it is a sequence of names to use for the column names . in this case , it is assumed there is no header row .'
p43973
sg12
Vcsv2rec.names
p43974
sg14
(lp43975
g24908
ag17908
ag27314
a(icodemend.demo.code_suggest
Element
p43976
(dp43977
g10
I1
sg11
S''
sg12
Vcsv2rec.names.['tag', 'count']
p43978
sg14
(lp43979
sg2
S"['tag', 'count']"
p43980
sbasg2
S'names'
p43981
sba(icodemend.demo.code_suggest
Element
p43982
(dp43983
g10
I0
sg11
S'load data from comma/space/tab delimited file in fname into a numpy record array and return the record array .'
p43984
sg12
Vcsv2rec.fname
p43985
sg14
(lp43986
sg2
S'fname'
p43987
sbasg2
g43965
sbs(g117
g118
g28569
tp43988
g28565
s(S'gca'
p43989
S'codes'
p43990
tp43991
(icodemend.demo.code_suggest
Element
p43992
(dp43993
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p43994
sg12
Vgca.codes
p43995
sg14
(lp43996
sg2
g43990
sbs(S'stem'
p43997
g40844
tp43998
g40839
s(g252
g253
g14081
tp43999
g14077
s(S'barh'
p44000
S'xlim'
p44001
tp44002
(icodemend.demo.code_suggest
Element
p44003
(dp44004
g10
I0
sg11
S'set the data limits for the xaxis'
p44005
sg12
Vbarh.xlim
p44006
sg14
(lp44007
sg2
g44001
sbs(S'axhspan'
p44008
g24448
tp44009
g24443
s(S'psd'
p44010
g36982
tp44011
g36977
s(S'fill'
p44012
S'rasterized'
p44013
tp44014
(icodemend.demo.code_suggest
Element
p44015
(dp44016
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p44017
sg12
Vfill.rasterized
p44018
sg14
(lp44019
sg2
g44013
sbs(S'gca'
p44020
S'xlabel'
p44021
tp44022
(icodemend.demo.code_suggest
Element
p44023
(dp44024
g10
I0
sg11
S'set the label for the xaxis .'
p44025
sg12
Vgca.xlabel
p44026
sg14
(lp44027
sg2
g44021
sbs(S'eventplot'
p44028
g23481
tp44029
g23476
s(g388
g389
g16984
tp44030
g16980
s(g452
g2841
g43236
tp44031
g43232
s(g16
g945
g13837
tp44032
g13833
s(S'annotate'
p44033
S'wrap'
p44034
tp44035
(icodemend.demo.code_suggest
Element
p44036
(dp44037
g10
I0
sg11
S'sets the wrapping state for the text .'
p44038
sg12
Vannotate.wrap
p44039
sg14
(lp44040
sg2
g44034
sbs(S'gca'
p44041
S'hatch'
p44042
tp44043
(icodemend.demo.code_suggest
Element
p44044
(dp44045
g10
I0
sg11
S'set the hatching pattern'
p44046
sg12
Vgca.hatch
p44047
sg14
(lp44048
sg2
g44042
sbs(S'angle_spectrum'
p44049
g18762
tp44050
g18757
s(g245
g140
g30084
tp44051
g30080
s(S'broken_barh'
p44052
S'edgecolor'
p44053
tp44054
(icodemend.demo.code_suggest
Element
p44055
(dp44056
g10
I0
sg11
S'set the edgecolor(s ) of the collection .'
p44057
sg12
Vbroken_barh.edgecolor
p44058
sg14
(lp44059
sg2
g44053
sbs(S'toggle_toolitem'
p44060
g33670
tp44061
g33665
s(S'savefig'
p44062
S'facecolor'
p44063
tp44064
(icodemend.demo.code_suggest
Element
p44065
(dp44066
g10
I12
sg11
S'the colors of the figure rectangle'
p44067
sg12
Vsavefig.facecolor
p44068
sg14
(lp44069
g24042
a(icodemend.demo.code_suggest
Element
p44070
(dp44071
g10
I2
sg11
S''
sg12
Vsavefig.facecolor.[0/9, 0/9, 0/9]
p44072
sg14
(lp44073
sg2
S'[0.9, 0.9, 0.9]'
p44074
sba(icodemend.demo.code_suggest
Element
p44075
(dp44076
g10
I1
sg11
S''
sg12
Vsavefig.facecolor.'g'
p44077
sg14
(lp44078
sg2
S"'g'"
p44079
sbag43114
a(icodemend.demo.code_suggest
Element
p44080
(dp44081
g10
I1
sg11
S''
sg12
Vsavefig.facecolor.'k'
p44082
sg14
(lp44083
sg2
S"'k'"
p44084
sbag41120
a(icodemend.demo.code_suggest
Element
p44085
(dp44086
g10
I1
sg11
S''
sg12
Vsavefig.facecolor.'y'
p44087
sg14
(lp44088
sg2
S"'y'"
p44089
sbasg2
g44063
sbs(S'get_valid_values'
p44090
S'set_attr'
p44091
tp44092
(icodemend.demo.code_suggest
Element
p44093
(dp44094
g10
I0
sg11
S'this is done by querying the docstring of the function set_attr for a line that begins with accepts :'
p44095
sg12
Vget_valid_values.set_attr
p44096
sg14
(lp44097
sg2
g44091
sbs(S'imread'
p44098
S'fname'
p44099
tp44100
(icodemend.demo.code_suggest
Element
p44101
(dp44102
g10
I0
sg11
S'fname may be a string path , a valid url , or a python file-like object . if using a file object , it must be opened in binary mode .'
p44103
sg12
Vimread.fname
p44104
sg14
(lp44105
sg2
g44099
sbs(g324
g785
g9487
tp44106
g9483
s(S'pcolor'
p44107
S'edgecolors'
p44108
tp44109
(icodemend.demo.code_suggest
Element
p44110
(dp44111
g10
I11
sg11
S"if none , the rc setting is used by default . if ' none ' , edges will not be visible . an mpl color or sequence of colors will set the edge color"
p44112
sg12
Vpcolor.edgecolors
p44113
sg14
(lp44114
g31482
ag37683
a(icodemend.demo.code_suggest
Element
p44115
(dp44116
g10
I1
sg11
S''
sg12
Vpcolor.edgecolors.'black'
p44117
sg14
(lp44118
sg2
S"'black'"
p44119
sba(icodemend.demo.code_suggest
Element
p44120
(dp44121
g10
I1
sg11
S''
sg12
Vpcolor.edgecolors.'none'
p44122
sg14
(lp44123
sg2
S"'none'"
p44124
sba(icodemend.demo.code_suggest
Element
p44125
(dp44126
g10
I1
sg11
S''
sg12
Vpcolor.edgecolors.'white'
p44127
sg14
(lp44128
sg2
S"'white'"
p44129
sbag21130
asg2
g44108
sbs(g2250
g20325
g30810
tp44130
g30806
s(S'barh'
p44131
S'False'
p44132
tp44133
(icodemend.demo.code_suggest
Element
p44134
(dp44135
g10
I0
sg11
S'these arguments can be used to indicate that a value gives only upper/lower limits . in that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . to use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||if true , will plot the errorbars above the plot symbols . default is below .'
p44136
sg12
Vbarh.False
p44137
sg14
(lp44138
sg2
g44132
sbs(g101
S'c'
g21355
tp44139
g21351
s(g101
g325
g21749
tp44140
g21745
sS'format_data'
p44141
(icodemend.demo.code_suggest
Element
p44142
(dp44143
g10
I1
sg11
S'return a formatted string representation of a number'
p44144
sg12
Vformat_data
p44145
sg14
(lp44146
sg2
g44141
sbs(S'axhspan'
p44147
g24358
tp44148
g24353
s(S'cohere'
p44149
g43807
tp44150
g43802
s(S'axvline'
p44151
S'animated'
p44152
tp44153
(icodemend.demo.code_suggest
Element
p44154
(dp44155
g10
I0
sg11
S"set the artist 's animation state ."
p44156
sg12
Vaxvline.animated
p44157
sg14
(lp44158
sg2
g44152
sbs(S'axhspan'
p44159
S'x'
tp44160
g24449
s(g245
g140
g30243
tp44161
g30239
s(g944
g118
S"'$\\\\lambda$D'"
p44162
tp44163
(icodemend.demo.code_suggest
Element
p44164
(dp44165
g10
I1
sg11
S''
sg12
Vbarh.label.'$\u005c\u005clambda$D'
p44166
sg14
(lp44167
sg2
g44162
sbsS'draggable'
p44168
(icodemend.demo.code_suggest
Element
p44169
(dp44170
g10
I5
sg11
S'set the draggable state - - if state is'
p44171
sg12
Vdraggable
p44172
sg14
(lp44173
g36254
a(icodemend.demo.code_suggest
Element
p44174
(dp44175
g10
I0
sg11
S'the update parameter control which parameter of the legend changes when dragged . if update is " loc " , the loc paramter of the legend is changed . if " bbox " , the bbox_to_anchor parameter is changed .'
p44176
sg12
Vdraggable.loc
p44177
sg14
(lp44178
sg2
S'loc'
p44179
sbasg2
g44168
sbs(g117
g118
g28049
tp44180
g28045
s(S'axvspan'
p44181
S'edgecolor'
p44182
tp44183
(icodemend.demo.code_suggest
Element
p44184
(dp44185
g10
I4
sg11
S'set the patch edge color'
p44186
sg12
Vaxvspan.edgecolor
p44187
sg14
(lp44188
(icodemend.demo.code_suggest
Element
p44189
(dp44190
g10
I1
sg11
S''
sg12
Vaxvspan.edgecolor.'#FFCC66'
p44191
sg14
(lp44192
sg2
S"'#FFCC66'"
p44193
sba(icodemend.demo.code_suggest
Element
p44194
(dp44195
g10
I1
sg11
S''
sg12
Vaxvspan.edgecolor.'#cc33ff'
p44196
sg14
(lp44197
sg2
S"'#cc33ff'"
p44198
sba(icodemend.demo.code_suggest
Element
p44199
(dp44200
g10
I1
sg11
S''
sg12
Vaxvspan.edgecolor.'black'
p44201
sg14
(lp44202
sg2
S"'black'"
p44203
sbag40061
asg2
g44182
sbs(g101
g8538
g22089
tp44204
g22085
s(g452
g132
g31868
tp44205
g31864
s(g93
g161
S'(1.01, 0.5)'
p44206
tp44207
(icodemend.demo.code_suggest
Element
p44208
(dp44209
g10
I1
sg11
S''
sg12
Vannotate.xy.(1/01, 0/5)
p44210
sg14
(lp44211
sg2
g44206
sbsS'restore'
p44212
(icodemend.demo.code_suggest
Element
p44213
(dp44214
g10
I2
sg11
S'restore the graphics context from the stack - needed only for backends that save graphics contexts on a stack'
p44215
sg12
Vrestore
p44216
sg14
(lp44217
sg2
g44212
sbs(S'gca'
p44218
S'animated'
p44219
tp44220
(icodemend.demo.code_suggest
Element
p44221
(dp44222
g10
I0
sg11
S"set the artist 's animation state ."
p44223
sg12
Vgca.animated
p44224
sg14
(lp44225
sg2
g44219
sbs(S'plot_date'
p44226
g19853
tp44227
g19848
s(S'axis'
p44228
g15133
tp44229
g15128
s(g2250
S'headaxislength'
p44230
g24895
tp44231
g24891
s(S'figtext'
p44232
g11335
tp44233
g11330
s(S'get_ticklabels'
p44234
g10751
tp44235
g10746
s(g93
g161
S'(xs[j], ys[j])'
p44236
tp44237
(icodemend.demo.code_suggest
Element
p44238
(dp44239
g10
I2
sg11
S''
sg12
Vannotate.xy.(xs[j], ys[j])
p44240
sg14
(lp44241
sg2
g44236
sbs(S'grid'
p44242
S'zorder'
p44243
tp44244
(icodemend.demo.code_suggest
Element
p44245
(dp44246
g10
I4
sg11
S'set the zorder for the artist .'
p44247
sg12
Vgrid.zorder
p44248
sg14
(lp44249
g5759
asg2
g44243
sbs(g5975
S'y'
S'm'
tp44250
g19679
s(g101
g325
g21779
tp44251
g21775
s(S'stackplot'
p44252
S'r'
tp44253
g10455
s(g13338
g19538
g20754
tp44254
g20750
s(g93
g4800
g25324
tp44255
g25320
s(S'xaxis_date'
p44256
g12810
g865
tp44257
g38741
s(g117
g118
g28109
tp44258
g28105
s(g117
g5775
g29407
tp44259
g29403
s(S'pcolormesh'
p44260
S'offset_position'
p44261
tp44262
(icodemend.demo.code_suggest
Element
p44263
(dp44264
g10
I0
sg11
S'set how offsets are applied .'
p44265
sg12
Vpcolormesh.offset_position
p44266
sg14
(lp44267
sg2
g44261
sbs(S'phase_spectrum'
p44268
S'visible'
p44269
tp44270
(icodemend.demo.code_suggest
Element
p44271
(dp44272
g10
I0
sg11
S"set the artist 's visiblity ."
p44273
sg12
Vphase_spectrum.visible
p44274
sg14
(lp44275
sg2
g44269
sbs(g109
g19182
g19182
tp44276
(icodemend.demo.code_suggest
Element
p44277
(dp44278
g10
I1
sg11
S''
sg12
Vsavefig.format.format
p44279
sg14
(lp44280
sg2
g19182
sbs(S'fill'
p44281
S'ylabel'
p44282
tp44283
(icodemend.demo.code_suggest
Element
p44284
(dp44285
g10
I0
sg11
S'set the label for the yaxis'
p44286
sg12
Vfill.ylabel
p44287
sg14
(lp44288
sg2
g44282
sbs(S'semilogy'
p44289
g39271
tp44290
g39266
s(g452
g132
g31833
tp44291
g31829
s(S'add_subplot'
p44292
S'xlabel'
p44293
tp44294
(icodemend.demo.code_suggest
Element
p44295
(dp44296
g10
I0
sg11
S'set the label for the xaxis .'
p44297
sg12
Vadd_subplot.xlabel
p44298
sg14
(lp44299
sg2
g44293
sbs(S'pcolor'
p44300
S'X'
tp44301
(icodemend.demo.code_suggest
Element
p44302
(dp44303
g10
I0
sg11
S'if either or both of x and y are 1-d arrays or column vectors , they will be expanded as needed into the appropriate 2-d arrays , making a rectangular grid .|||the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .|||x , y and c may be masked arrays . if either c[i , j ] , or one of the vertices surrounding c[i,j ] ( x or y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||x and y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for c[i,j ] has corners at :|||matlab pcolor ( ) always discards the last row and column of c , but matplotlib displays the last row and column if x and y are not specified , or if x and y have one more row and column than c .|||ideally the dimensions of x and y should be one greater than those of c ; if the dimensions are the same , then the last row and column of c will be ignored .'
p44304
sg12
Vpcolor.X
p44305
sg14
(lp44306
sg2
S'X'
sbs(g245
g140
g30099
tp44307
g30095
sS'get_prop_tup'
p44308
(icodemend.demo.code_suggest
Element
p44309
(dp44310
g10
I0
sg11
S'return a hashable tuple of properties .'
p44311
sg12
Vget_prop_tup
p44312
sg14
(lp44313
sg2
g44308
sbsS'home'
p44314
(icodemend.demo.code_suggest
Element
p44315
(dp44316
g10
I3
sg11
S'push the first element onto the top of the stack restore the original view recall the first view and position from the stack'
p44317
sg12
Vhome
p44318
sg14
(lp44319
sg2
g44314
sbs(g582
g132
g3311
tp44320
g3307
sS'less_simple_linear_interpolation'
p44321
(icodemend.demo.code_suggest
Element
p44322
(dp44323
g10
I0
sg11
S'this function provides simple ( but somewhat less so than cbook.simple_linear_interpolation ( ) ) linear interpolation .'
p44324
sg12
Vless_simple_linear_interpolation
p44325
sg14
(lp44326
sg2
g44321
sbs(S'barh'
p44327
S'contains'
p44328
tp44329
(icodemend.demo.code_suggest
Element
p44330
(dp44331
g10
I0
sg11
S'replace the contains test used by this artist .'
p44332
sg12
Vbarh.contains
p44333
sg14
(lp44334
sg2
g44328
sbs(S'grid'
p44335
S'closed'
p44336
tp44337
(icodemend.demo.code_suggest
Element
p44338
(dp44339
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p44340
sg12
Vgrid.closed
p44341
sg14
(lp44342
sg2
g44336
sbs(S'grid'
p44343
S'b'
tp44344
(icodemend.demo.code_suggest
Element
p44345
(dp44346
g10
I16
sg11
S"if b is none and len(kwargs)==0 , toggle the grid state . if kwargs are supplied , it is assumed that you want a grid and b is thus set to true .|||set the axes grids on or off ; b is a boolean . ( for matlab compatibility , b may also be a string , ' on ' or ' off ' . )"
p44347
sg12
Vgrid.b
p44348
sg14
(lp44349
(icodemend.demo.code_suggest
Element
p44350
(dp44351
g10
I16
sg11
S''
sg12
Vgrid.b.True
p44352
sg14
(lp44353
sg2
g438
sbasg2
S'b'
sbs(g101
g118
S't'
tp44354
g22052
s(S'add_subplot'
p44355
S'gid'
p44356
tp44357
(icodemend.demo.code_suggest
Element
p44358
(dp44359
g10
I0
sg11
S'sets the ( group ) id for the artist'
p44360
sg12
Vadd_subplot.gid
p44361
sg14
(lp44362
sg2
g44356
sbs(S'bxp'
p44363
g41631
tp44364
g41626
s(g117
g4274
g29022
tp44365
g29018
s(S'plot'
p44366
g29916
tp44367
g29911
sS'cohere_pairs'
p44368
(icodemend.demo.code_suggest
Element
p44369
(dp44370
g10
I0
sg11
S'compute the coherence and phase for all pairs ij , in x .'
p44371
sg12
Vcohere_pairs
p44372
sg14
(lp44373
(icodemend.demo.code_suggest
Element
p44374
(dp44375
g10
I0
sg11
S'ij is a list of tuples . each tuple is a pair of indexes into the columns of x for which you want to compute coherence . for example , if x has 64 columns , and you want to compute all nonredundant pairs , define ij as :|||x is a numsamples * numcols array|||compute the coherence and phase for all pairs ij , in x .|||for a large number of pairs , cohere_pairs ( ) can be much more efficient than just calling cohere ( ) for each pair , because it caches most of the intensive computations . if is the number of pairs , this function is for most of the heavy lifting , whereas calling cohere for each pair is . however , because of the caching , it is also more memory intensive , making 2 additional complex arrays with approximately the same number of elements as x .'
p44376
sg12
Vcohere_pairs.X
p44377
sg14
(lp44378
sg2
S'X'
sbag38250
a(icodemend.demo.code_suggest
Element
p44379
(dp44380
g10
I0
sg11
S'x is a numsamples * numcols array'
p44381
sg12
Vcohere_pairs.numCols
p44382
sg14
(lp44383
sg2
S'numCols'
p44384
sba(icodemend.demo.code_suggest
Element
p44385
(dp44386
g10
I0
sg11
S'x is a numsamples * numcols array'
p44387
sg12
Vcohere_pairs.numSamples
p44388
sg14
(lp44389
sg2
S'numSamples'
p44390
sbag990
asg2
g44368
sbs(g332
g10118
g26797
tp44391
g26793
s(g5112
g437
g438
tp44392
g15942
s(S'boxplot'
p44393
g39814
tp44394
g39809
s(g93
g161
S'(x[10], (exp2[10] + exp1[10]))'
p44395
tp44396
(icodemend.demo.code_suggest
Element
p44397
(dp44398
g10
I1
sg11
S''
sg12
Vannotate.xy.(x[10], (exp2[10] + exp1[10]))
p44399
sg14
(lp44400
sg2
g44395
sbs(g117
g118
g28429
tp44401
g28425
s(g117
g118
g27779
tp44402
g27775
s(g245
g3075
S'DPI'
p44403
tp44404
(icodemend.demo.code_suggest
Element
p44405
(dp44406
g10
I1
sg11
S''
sg12
Vfigure.dpi.DPI
p44407
sg14
(lp44408
sg2
g44403
sbs(g93
g4800
g25609
tp44409
g25605
sS'set_title'
p44410
(icodemend.demo.code_suggest
Element
p44411
(dp44412
g10
I299
sg11
S'set the legend title . set a title for the axes .'
p44413
sg12
Vset_title
p44414
sg14
(lp44415
(icodemend.demo.code_suggest
Element
p44416
(dp44417
g10
I6
sg11
S'set the font properties that control the text .'
p44418
sg12
Vset_title.fontproperties
p44419
sg14
(lp44420
g12680
asg2
S'fontproperties'
p44421
sba(icodemend.demo.code_suggest
Element
p44422
(dp44423
g10
I2
sg11
S'set the x position of the text'
p44424
sg12
Vset_title.x
p44425
sg14
(lp44426
(icodemend.demo.code_suggest
Element
p44427
(dp44428
g10
I2
sg11
S''
sg12
Vset_title.x.-0/1
p44429
sg14
(lp44430
sg2
S'-0.1'
p44431
sbasg2
S'x'
sba(icodemend.demo.code_suggest
Element
p44432
(dp44433
g10
I2
sg11
S'set the y position of the text'
p44434
sg12
Vset_title.y
p44435
sg14
(lp44436
g27374
asg2
S'y'
sba(icodemend.demo.code_suggest
Element
p44437
(dp44438
g10
I1
sg11
S"which title to set , defaults to ' center '"
p44439
sg12
Vset_title.loc
p44440
sg14
(lp44441
(icodemend.demo.code_suggest
Element
p44442
(dp44443
g10
I1
sg11
S''
sg12
Vset_title.loc.'right'
p44444
sg14
(lp44445
sg2
S"'right'"
p44446
sbasg2
S'loc'
p44447
sbag20505
a(icodemend.demo.code_suggest
Element
p44448
(dp44449
g10
I0
sg11
S'a dictionary controlling the appearance of the title text , the default fontdict is :'
p44450
sg12
Vset_title.fontdict
p44451
sg14
(lp44452
sg2
S'fontdict'
p44453
sba(icodemend.demo.code_suggest
Element
p44454
(dp44455
g10
I0
sg11
S'other keyword arguments are text properties , see text for a list of valid text properties .'
p44456
sg12
Vset_title.kwargs
p44457
sg14
(lp44458
sg2
S'kwargs'
p44459
sba(icodemend.demo.code_suggest
Element
p44460
(dp44461
g10
I0
sg11
S'text to use for the title'
p44462
sg12
Vset_title.label
p44463
sg14
(lp44464
sg2
S'label'
p44465
sba(icodemend.demo.code_suggest
Element
p44466
(dp44467
g10
I0
sg11
S'set the ( x , y ) position of the text'
p44468
sg12
Vset_title.position
p44469
sg14
(lp44470
sg2
S'position'
p44471
sbag7507
a(icodemend.demo.code_suggest
Element
p44472
(dp44473
g10
I0
sg11
S'set the text string s'
p44474
sg12
Vset_title.text
p44475
sg14
(lp44476
sg2
S'text'
p44477
sbasg2
g44410
sbs(g332
g132
g132
tp44478
g41442
s(g8266
g8267
g8161
tp44479
g8157
s(g139
g18399
g1984
tp44480
g1980
s(S'angle_spectrum'
p44481
g18989
tp44482
g18984
s(S'vlines'
p44483
S'contains'
p44484
tp44485
(icodemend.demo.code_suggest
Element
p44486
(dp44487
g10
I0
sg11
S'replace the contains test used by this artist .'
p44488
sg12
Vvlines.contains
p44489
sg14
(lp44490
sg2
g44484
sbs(g245
g140
g30213
tp44491
g30209
s(S'text'
p44492
S'clip_on'
p44493
tp44494
(icodemend.demo.code_suggest
Element
p44495
(dp44496
g10
I5
sg11
S'set whether artist uses clipping .'
p44497
sg12
Vtext.clip_on
p44498
sg14
(lp44499
(icodemend.demo.code_suggest
Element
p44500
(dp44501
g10
I3
sg11
S''
sg12
Vtext.clip_on.True
p44502
sg14
(lp44503
sg2
g438
sbag43295
asg2
g44493
sbs(S'savefig'
p44504
S'pad_inches'
p44505
tp44506
(icodemend.demo.code_suggest
Element
p44507
(dp44508
g10
I12
sg11
S"amount of padding around the figure when bbox_inches is ' tight ' ."
p44509
sg12
Vsavefig.pad_inches
p44510
sg14
(lp44511
g20283
a(icodemend.demo.code_suggest
Element
p44512
(dp44513
g10
I3
sg11
S''
sg12
Vsavefig.pad_inches.0/0
p44514
sg14
(lp44515
sg2
S'0.0'
p44516
sbag2178
a(icodemend.demo.code_suggest
Element
p44517
(dp44518
g10
I1
sg11
S''
sg12
Vsavefig.pad_inches.0/5
p44519
sg14
(lp44520
sg2
S'0.5'
p44521
sbag42511
asg2
g44505
sbs(g6217
g8267
g2514
tp44522
g2510
s(g6632
g8780
g16679
tp44523
g16675
s(S'frange'
p44524
S'npts'
p44525
tp44526
(icodemend.demo.code_suggest
Element
p44527
(dp44528
g10
I0
sg11
S"frange ( ) can also be called with the keyword npts . this sets the number of points the list should contain ( and overrides the value step might have been given ) . numpy.arange ( ) does n't offer this option ."
p44529
sg12
Vfrange.npts
p44530
sg14
(lp44531
sg2
g44525
sbsS'option_scale_image'
p44532
(icodemend.demo.code_suggest
Element
p44533
(dp44534
g10
I0
sg11
S'override this method for renderers that support arbitrary scaling of image ( most of the vector backend ) .'
p44535
sg12
Voption_scale_image
p44536
sg14
(lp44537
sg2
g44532
sbs(S'gca'
p44538
S'axes'
p44539
tp44540
(icodemend.demo.code_suggest
Element
p44541
(dp44542
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p44543
sg12
Vgca.axes
p44544
sg14
(lp44545
sg2
g44539
sbs(g8547
g40051
S'0.8'
p44546
tp44547
(icodemend.demo.code_suggest
Element
p44548
(dp44549
g10
I1
sg11
S''
sg12
Vpie.labeldistance.0/8
p44550
sg14
(lp44551
sg2
g44546
sbs(g766
g325
g16490
tp44552
g16486
s(g766
g666
g4008
tp44553
g4004
s(g93
g161
S'(X[i], y)'
p44554
tp44555
(icodemend.demo.code_suggest
Element
p44556
(dp44557
g10
I1
sg11
S''
sg12
Vannotate.xy.(X[i], y)
p44558
sg14
(lp44559
sg2
g44554
sbs(S'hexbin'
p44560
g25951
tp44561
g25946
s(S'matshow'
p44562
S'extent'
p44563
tp44564
(icodemend.demo.code_suggest
Element
p44565
(dp44566
g10
I2
sg11
S'the location , in data-coordinates , of the lower-left and upper-right corners . if none , the image is positioned such that the pixel centers fall on zero-based ( row , column ) indices .'
p44567
sg12
Vmatshow.extent
p44568
sg14
(lp44569
g8960
ag37672
asg2
g44563
sbsS'get_window_title'
p44570
(icodemend.demo.code_suggest
Element
p44571
(dp44572
g10
I0
sg11
S'get the title text of the window containing the figure .'
p44573
sg12
Vget_window_title
p44574
sg14
(lp44575
sg2
g44570
sbsS'get_aa'
p44576
(icodemend.demo.code_suggest
Element
p44577
(dp44578
g10
I0
sg11
S'alias for get_antialiased returns true if the patch is to be drawn with antialiasing .'
p44579
sg12
Vget_aa
p44580
sg14
(lp44581
sg2
g44576
sbs(S'fill'
p44582
S'clip_box'
p44583
tp44584
(icodemend.demo.code_suggest
Element
p44585
(dp44586
g10
I0
sg11
S"set the artist 's clip bbox ."
p44587
sg12
Vfill.clip_box
p44588
sg14
(lp44589
sg2
g44583
sbs(g101
g4274
g21675
tp44590
g21671
s(S'semilogx'
p44591
g38971
tp44592
g38966
s(S'grid'
p44593
S'url'
p44594
tp44595
(icodemend.demo.code_suggest
Element
p44596
(dp44597
g10
I0
sg11
S'sets the url for the artist'
p44598
sg12
Vgrid.url
p44599
sg14
(lp44600
sg2
g44594
sbsS'is_figure_set'
p44601
(icodemend.demo.code_suggest
Element
p44602
(dp44603
g10
I0
sg11
S'returns true if the artist is assigned to a figure .'
p44604
sg12
Vis_figure_set
p44605
sg14
(lp44606
sg2
g44601
sbs(S'angle_spectrum'
p44607
g18780
tp44608
g18775
s(S'psd'
p44609
g37084
tp44610
g37079
s(g16
g132
S"'#b8ff5c'"
p44611
tp44612
(icodemend.demo.code_suggest
Element
p44613
(dp44614
g10
I1
sg11
S''
sg12
Vbar.color.'#b8ff5c'
p44615
sg14
(lp44616
sg2
g44611
sbs(g139
g18399
g2024
tp44617
g2020
s(g139
g140
g1817
tp44618
g1813
s(S'plot_date'
p44619
g19967
tp44620
g19962
s(S'quiver'
p44621
g30784
tp44622
g30769
s(g252
g702
S'4'
tp44623
g14502
s(g245
g140
g30478
tp44624
g30474
s(g93
g161
S'(i, j)'
p44625
tp44626
(icodemend.demo.code_suggest
Element
p44627
(dp44628
g10
I2
sg11
S''
sg12
Vannotate.xy.(i, j)
p44629
sg14
(lp44630
sg2
g44625
sbs(g16
g489
S'yoff'
p44631
tp44632
(icodemend.demo.code_suggest
Element
p44633
(dp44634
g10
I2
sg11
S''
sg12
Vbar.bottom.yoff
p44635
sg14
(lp44636
sg2
g44631
sbs(g514
g325
g33127
tp44637
(icodemend.demo.code_suggest
Element
p44638
(dp44639
g10
I1
sg11
S''
sg12
Vpcolor.cmap.mycmap
p44640
sg14
(lp44641
sg2
g33127
sbsS'set_transform'
p44642
(icodemend.demo.code_suggest
Element
p44643
(dp44644
g10
I12
sg11
S'set the transform instance used by this artist .'
p44645
sg12
Vset_transform
p44646
sg14
(lp44647
sg2
g44642
sbs(g93
g18604
g22552
tp44648
g22548
s(g5975
g118
g19732
tp44649
g19728
s(S'shade_rgb'
p44650
S'dy'
p44651
tp44652
(icodemend.demo.code_suggest
Element
p44653
(dp44654
g10
I0
sg11
S'the y-spacing ( rows ) of the input elevation grid .'
p44655
sg12
Vshade_rgb.dy
p44656
sg14
(lp44657
sg2
g44651
sbs(g6217
g132
g2424
tp44658
g2420
s(g452
S'xlolims'
p44659
g1944
tp44660
(icodemend.demo.code_suggest
Element
p44661
(dp44662
g10
I1
sg11
S''
sg12
Verrorbar.xlolims.False
p44663
sg14
(lp44664
sg2
g1944
sbs(S'toolmanager_connect'
p44665
S's'
tp44666
g12198
s(S'plot'
p44667
g29826
tp44668
g29821
s(S'axvspan'
p44669
S'path_effects'
p44670
tp44671
(icodemend.demo.code_suggest
Element
p44672
(dp44673
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p44674
sg12
Vaxvspan.path_effects
p44675
sg14
(lp44676
sg2
g44670
sbs(S'grid'
p44677
S'linewidth'
p44678
tp44679
(icodemend.demo.code_suggest
Element
p44680
(dp44681
g10
I22
sg11
S'set the line width in points'
p44682
sg12
Vgrid.linewidth
p44683
sg14
(lp44684
g12415
ag24178
a(icodemend.demo.code_suggest
Element
p44685
(dp44686
g10
I3
sg11
S''
sg12
Vgrid.linewidth.1
p44687
sg14
(lp44688
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p44689
(dp44690
g10
I2
sg11
S''
sg12
Vgrid.linewidth.0/5
p44691
sg14
(lp44692
sg2
S'0.5'
p44693
sba(icodemend.demo.code_suggest
Element
p44694
(dp44695
g10
I1
sg11
S''
sg12
Vgrid.linewidth.0/2
p44696
sg14
(lp44697
sg2
S'0.2'
p44698
sbag23645
ag42153
ag42125
asg2
g44678
sbs(g139
g370
g1857
tp44699
g1853
sS'generate_fontconfig_pattern'
p44700
(icodemend.demo.code_suggest
Element
p44701
(dp44702
g10
I0
sg11
S'given a dictionary of key/value pairs , generates a fontconfig pattern string .'
p44703
sg12
Vgenerate_fontconfig_pattern
p44704
sg14
(lp44705
sg2
g44700
sbs(S'text'
p44706
S'multialignment'
p44707
tp44708
(icodemend.demo.code_suggest
Element
p44709
(dp44710
g10
I2
sg11
S'set the alignment for multiple lines layout .'
p44711
sg12
Vtext.multialignment
p44712
sg14
(lp44713
g36339
ag43351
asg2
g44707
sbs(g16
g17
g41963
tp44714
g41959
s(S'xkcd'
p44715
S'randomness'
p44716
tp44717
(icodemend.demo.code_suggest
Element
p44718
(dp44719
g10
I1
sg11
S'the scale factor by which the length is shrunken or expanded .'
p44720
sg12
Vxkcd.randomness
p44721
sg14
(lp44722
g15999
asg2
g44716
sbs(S'plot_date'
p44723
g19889
tp44724
g19884
s(g125
g126
g126
tp44725
(icodemend.demo.code_suggest
Element
p44726
(dp44727
g10
I1
sg11
S''
sg12
Vaxvline.ymin.ymin
p44728
sg14
(lp44729
sg2
g126
sbsS'set_cmap'
p44730
(icodemend.demo.code_suggest
Element
p44731
(dp44732
g10
I7
sg11
S'set the colormap for luminance data'
p44733
sg12
Vset_cmap
p44734
sg14
(lp44735
g34291
asg2
g44730
sbs(S'locator_params'
p44736
g16378
tp44737
g16373
s(g452
g453
S'0'
tp44738
g7209
sS'safe_isinf'
p44739
(icodemend.demo.code_suggest
Element
p44740
(dp44741
g10
I0
sg11
S'numpy.isinf ( ) for arbitrary types'
p44742
sg12
Vsafe_isinf
p44743
sg14
(lp44744
sg2
g44739
sbs(S'close'
p44745
S'h'
tp44746
g43170
s(S'wrap'
p44747
g6406
tp44748
g6401
s(S'connect'
p44749
S'func'
p44750
tp44751
(icodemend.demo.code_suggest
Element
p44752
(dp44753
g10
I0
sg11
S'register func to be called when a signal s is generated func will be called connect event with string s to func . the signature of func is :'
p44754
sg12
Vconnect.func
p44755
sg14
(lp44756
sg2
g44750
sbs(g93
g161
S'((length / 2.0), ypos)'
p44757
tp44758
(icodemend.demo.code_suggest
Element
p44759
(dp44760
g10
I1
sg11
S''
sg12
Vannotate.xy.((length / 2/0), ypos)
p44761
sg14
(lp44762
sg2
g44757
sbs(S'fill'
p44763
S'label'
p44764
tp44765
(icodemend.demo.code_suggest
Element
p44766
(dp44767
g10
I0
sg11
S'set the label to s for auto legend .'
p44768
sg12
Vfill.label
p44769
sg14
(lp44770
sg2
g44764
sbs(S'pcolor'
p44771
S'y'
tp44772
(icodemend.demo.code_suggest
Element
p44773
(dp44774
g10
I0
sg11
S'note that the column index corresponds to the x - coordinate , and the row index corresponds to y ; for details , see the grid orientation section below .|||x and y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for c[i,j ] has corners at :'
p44775
sg12
Vpcolor.y
p44776
sg14
(lp44777
sg2
S'y'
sbsS'start_rasterizing'
p44778
(icodemend.demo.code_suggest
Element
p44779
(dp44780
g10
I0
sg11
S'used in mixedmoderenderer .'
p44781
sg12
Vstart_rasterizing
p44782
sg14
(lp44783
sg2
g44778
sbsS'score_style'
p44784
(icodemend.demo.code_suggest
Element
p44785
(dp44786
g10
I0
sg11
S'returns a match score between style1 and style2 .'
p44787
sg12
Vscore_style
p44788
sg14
(lp44789
(icodemend.demo.code_suggest
Element
p44790
(dp44791
g10
I0
sg11
S'returns a match score between style1 and style2 .'
p44792
sg12
Vscore_style.style1
p44793
sg14
(lp44794
sg2
S'style1'
p44795
sba(icodemend.demo.code_suggest
Element
p44796
(dp44797
g10
I0
sg11
S'returns a match score between style1 and style2 .'
p44798
sg12
Vscore_style.style2
p44799
sg14
(lp44800
sg2
S'style2'
p44801
sbasg2
g44784
sbs(g332
S'y'
S'5'
tp44802
(icodemend.demo.code_suggest
Element
p44803
(dp44804
g10
I1
sg11
S''
sg12
Vtext.y.5
p44805
sg14
(lp44806
sg2
S'5'
sbs(g117
g118
g28134
tp44807
g28130
s(S'tricontourf'
p44808
g11658
tp44809
g11653
s(g324
g785
g9512
tp44810
g9508
sS'paintEvent'
p44811
(icodemend.demo.code_suggest
Element
p44812
(dp44813
g10
I0
sg11
S'copy the image from the agg canvas to the qt.drawable .'
p44814
sg12
VpaintEvent
p44815
sg14
(lp44816
sg2
g44811
sbs(g117
g118
g28249
tp44817
g28245
sS'get_texts'
p44818
(icodemend.demo.code_suggest
Element
p44819
(dp44820
g10
I6
sg11
S'return a list of text.text instance in the legend'
p44821
sg12
Vget_texts
p44822
sg14
(lp44823
sg2
g44818
sbs(S'frange'
p44824
S'step'
p44825
tp44826
(icodemend.demo.code_suggest
Element
p44827
(dp44828
g10
I0
sg11
S"frange ( ) can also be called with the keyword npts . this sets the number of points the list should contain ( and overrides the value step might have been given ) . numpy.arange ( ) does n't offer this option .|||when step is given , it specifies the increment ( or decrement ) . all arguments can be floating point numbers ."
p44829
sg12
Vfrange.step
p44830
sg14
(lp44831
sg2
g44825
sbs(g5975
g2841
g19672
tp44832
g19668
s(g101
S'c'
g21470
tp44833
g21466
s(g93
g161
S'(1, 10)'
p44834
tp44835
(icodemend.demo.code_suggest
Element
p44836
(dp44837
g10
I1
sg11
S''
sg12
Vannotate.xy.(1, 10)
p44838
sg14
(lp44839
sg2
g44834
sbs(S'set_xticklabels'
p44840
g17151
tp44841
g17146
s(g324
g785
g9282
tp44842
g9278
s(S'hillshade'
p44843
g6486
tp44844
g6481
s(S'csd'
p44845
S'xticks'
p44846
tp44847
(icodemend.demo.code_suggest
Element
p44848
(dp44849
g10
I0
sg11
S'set the x ticks with list of ticks'
p44850
sg12
Vcsd.xticks
p44851
sg14
(lp44852
sg2
g44846
sbsS'get_tool_keymap'
p44853
(icodemend.demo.code_suggest
Element
p44854
(dp44855
g10
I0
sg11
S'get the keymap associated with the specified tool'
p44856
sg12
Vget_tool_keymap
p44857
sg14
(lp44858
g33795
asg2
g44853
sbs(S'gca'
p44859
S'closed'
p44860
tp44861
(icodemend.demo.code_suggest
Element
p44862
(dp44863
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p44864
sg12
Vgca.closed
p44865
sg14
(lp44866
sg2
g44860
sbs(g101
g8538
g21336
tp44867
g22081
s(S'errorbar'
p44868
S'animated'
p44869
tp44870
(icodemend.demo.code_suggest
Element
p44871
(dp44872
g10
I0
sg11
S"set the artist 's animation state ."
p44873
sg12
Verrorbar.animated
p44874
sg14
(lp44875
sg2
g44869
sbs(g452
g132
g31848
tp44876
g31844
s(S'errorbar'
p44877
S'xlolims'
p44878
tp44879
(icodemend.demo.code_suggest
Element
p44880
(dp44881
g10
I1
sg11
S'these arguments can be used to indicate that a value gives only upper/lower limits . in that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . to use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .'
p44882
sg12
Verrorbar.xlolims
p44883
sg14
(lp44884
g44661
asg2
g44878
sbs(g101
S'c'
g21456
tp44885
g21452
s(S'hist'
p44886
S'n0'
p44887
tp44888
(icodemend.demo.code_suggest
Element
p44889
(dp44890
g10
I0
sg11
S'compute and draw the histogram of x . the return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .'
p44891
sg12
Vhist.n0
p44892
sg14
(lp44893
sg2
g44887
sbs(S'dict_delall'
p44894
S'd'
tp44895
(icodemend.demo.code_suggest
Element
p44896
(dp44897
g10
I0
sg11
S'delete all of the keys from the dict d'
p44898
sg12
Vdict_delall.d
p44899
sg14
(lp44900
sg2
S'd'
sbs(g324
g785
g9472
tp44901
g9468
sS'frange'
p44902
(icodemend.demo.code_suggest
Element
p44903
(dp44904
g10
I0
sg11
S'return a numpy ndarray containing a progression of floats .'
p44905
sg12
Vfrange
p44906
sg14
(lp44907
g26564
a(icodemend.demo.code_suggest
Element
p44908
(dp44909
g10
I0
sg11
S'frange(x0 , x1 ) returns [ x0 , x0+1 , x0+2 , ... , x1 ] ; start defaults to 0 , and the endpoint is included . this behavior is different from that of range ( ) and numpy.arange ( ) . this is deliberate , since frange ( ) will probably be more useful for generating lists of points for function evaluation , and endpoints are often desired in this use . the usual behavior of range ( ) can be obtained by setting the keyword closed = 0 , in this case , frange ( ) basically becomes : func:numpy.arange ` .'
p44910
sg12
Vfrange.is included
p44911
sg14
(lp44912
sg2
S'is included'
p44913
sbag44527
a(icodemend.demo.code_suggest
Element
p44914
(dp44915
g10
I0
sg11
S'frange(x0 , x1 ) returns [ x0 , x0+1 , x0+2 , ... , x1 ] ; start defaults to 0 , and the endpoint is included . this behavior is different from that of range ( ) and numpy.arange ( ) . this is deliberate , since frange ( ) will probably be more useful for generating lists of points for function evaluation , and endpoints are often desired in this use . the usual behavior of range ( ) can be obtained by setting the keyword closed = 0 , in this case , frange ( ) basically becomes : func:numpy.arange ` .'
p44916
sg12
Vfrange.start
p44917
sg14
(lp44918
sg2
S'start'
p44919
sbag44827
a(icodemend.demo.code_suggest
Element
p44920
(dp44921
g10
I0
sg11
S'frange(x0,x1,d ) returns [ x0,x0+d,x0+2d,...,xfin ] where xfin < = x1 .'
p44922
sg12
Vfrange.x1
p44923
sg14
(lp44924
sg2
S'x1'
p44925
sba(icodemend.demo.code_suggest
Element
p44926
(dp44927
g10
I0
sg11
S'frange(x0,x1,d ) returns [ x0,x0+d,x0+2d,...,xfin ] where xfin < = x1 .'
p44928
sg12
Vfrange.xfin
p44929
sg14
(lp44930
sg2
S'xfin'
p44931
sbasg2
g44902
sbs(g252
g4984
g4984
tp44932
g14242
s(S'set_title'
p44933
S'y'
tp44934
g44432
sS'set_clip_rectangle'
p44935
(icodemend.demo.code_suggest
Element
p44936
(dp44937
g10
I0
sg11
S'set the clip rectangle with sequence ( left , bottom , width , height )'
p44938
sg12
Vset_clip_rectangle
p44939
sg14
(lp44940
sg2
g44935
sbs(S'semilogx'
p44941
g39132
tp44942
g39127
s(S'fill'
p44943
S'picker'
p44944
tp44945
(icodemend.demo.code_suggest
Element
p44946
(dp44947
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p44948
sg12
Vfill.picker
p44949
sg14
(lp44950
sg2
g44944
sbs(S'tricontourf'
p44951
g11694
tp44952
g11689
s(S'thetagrids'
p44953
S'lines'
p44954
tp44955
(icodemend.demo.code_suggest
Element
p44956
(dp44957
g10
I0
sg11
S'if no arguments are passed , return a tuple ( lines , labels ) where lines is an array of radial gridlines ( line2d instances ) and labels is an array of tick labels ( text instances ) :|||return value is a list of tuples ( lines , labels ) :'
p44958
sg12
Vthetagrids.lines
p44959
sg14
(lp44960
sg2
g44954
sbs(g109
S'transparent'
p44961
S"'True'"
p44962
tp44963
(icodemend.demo.code_suggest
Element
p44964
(dp44965
g10
I2
sg11
S''
sg12
Vsavefig.transparent.'True'
p44966
sg14
(lp44967
sg2
g44962
sbs(S'angle_spectrum'
p44968
g18654
tp44969
g18649
s(g117
g348
g29513
tp44970
g29509
sS'grab_mouse'
p44971
(icodemend.demo.code_suggest
Element
p44972
(dp44973
g10
I1
sg11
S'set the child axes which are currently grabbing the mouse events .'
p44974
sg12
Vgrab_mouse
p44975
sg14
(lp44976
sg2
g44971
sbs(g43926
g15305
S"'max'"
p44977
tp44978
(icodemend.demo.code_suggest
Element
p44979
(dp44980
g10
I1
sg11
S''
sg12
Vfrom_levels_and_colors.extend.'max'
p44981
sg14
(lp44982
sg2
g44977
sbs(g252
g39555
g14567
tp44983
g14563
s(S'quiver'
p44984
g31093
tp44985
g31088
s(g245
g140
g30089
tp44986
g30085
s(S'semilogx'
p44987
g39114
tp44988
g39109
s(g324
g8780
g9893
tp44989
g9889
sS'register_backend'
p44990
(icodemend.demo.code_suggest
Element
p44991
(dp44992
g10
I0
sg11
S'register a backend for saving to a given file format .'
p44993
sg12
Vregister_backend
p44994
sg14
(lp44995
sg2
g44990
sbs(g117
g118
g27869
tp44996
g27865
s(g26208
g19538
g32313
tp44997
g32309
s(S'xcorr'
p44998
S'x'
tp44999
g35447
s(S'axhspan'
p45000
g24513
tp45001
g24508
s(S'getp'
p45002
S'ylim'
p45003
tp45004
(icodemend.demo.code_suggest
Element
p45005
(dp45006
g10
I0
sg11
S'set the data limits for the yaxis'
p45007
sg12
Vgetp.ylim
p45008
sg14
(lp45009
sg2
g45003
sbs(g93
g94
g5541
tp45010
g5537
s(S'plot'
p45011
g29886
tp45012
g29881
s(S'pcolor'
p45013
S'vmin'
p45014
tp45015
(icodemend.demo.code_suggest
Element
p45016
(dp45017
g10
I12
sg11
S'vmin and vmax are used in conjunction with norm to normalize luminance data . if either is none , it is autoscaled to the respective min or max of the color array c . if not none , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .'
p45018
sg12
Vpcolor.vmin
p45019
sg14
(lp45020
g37420
a(icodemend.demo.code_suggest
Element
p45021
(dp45022
g10
I2
sg11
S''
sg12
Vpcolor.vmin.0
p45023
sg14
(lp45024
sg2
S'0'
sbag24522
a(icodemend.demo.code_suggest
Element
p45025
(dp45026
g10
I1
sg11
S''
sg12
Vpcolor.vmin.-4
p45027
sg14
(lp45028
sg2
S'-4'
p45029
sbag32439
a(icodemend.demo.code_suggest
Element
p45030
(dp45031
g10
I1
sg11
S''
sg12
Vpcolor.vmin.0/1
p45032
sg14
(lp45033
sg2
S'0.1'
p45034
sbasg2
g45014
sbs(S'stem'
p45035
S'y'
tp45036
g40857
s(g101
g118
g22042
tp45037
g22038
s(S'plot'
p45038
g29940
tp45039
g29935
sS'get_xlabel'
p45040
(icodemend.demo.code_suggest
Element
p45041
(dp45042
g10
I1
sg11
S'get the xlabel text string .'
p45043
sg12
Vget_xlabel
p45044
sg14
(lp45045
sg2
g45040
sbs(g1170
g118
S"'accepted answer'"
p45046
tp45047
(icodemend.demo.code_suggest
Element
p45048
(dp45049
g10
I1
sg11
S''
sg12
Vhist.label.'accepted answer'
p45050
sg14
(lp45051
sg2
g45046
sbs(g101
g2392
S'3'
tp45052
g15693
s(S'errorbar'
p45053
S'dash_joinstyle'
p45054
tp45055
(icodemend.demo.code_suggest
Element
p45056
(dp45057
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p45058
sg12
Verrorbar.dash_joinstyle
p45059
sg14
(lp45060
sg2
g45054
sbsS'reverse_dict'
p45061
(icodemend.demo.code_suggest
Element
p45062
(dp45063
g10
I0
sg11
S'reverse the dictionary - - may lose data if values are not unique !'
p45064
sg12
Vreverse_dict
p45065
sg14
(lp45066
sg2
g45061
sbs(S'arrow'
p45067
g2527
tp45068
g2522
s(g5975
g4274
g19717
tp45069
g19713
s(g26208
g8607
g438
tp45070
g32334
s(S'magnitude_spectrum'
p45071
S'yticks'
p45072
tp45073
(icodemend.demo.code_suggest
Element
p45074
(dp45075
g10
I0
sg11
S'set the y ticks with list of ticks'
p45076
sg12
Vmagnitude_spectrum.yticks
p45077
sg14
(lp45078
sg2
g45072
sbs(g245
g140
g30064
tp45079
g30060
s(g6556
S'x'
S'vert_line'
p45080
tp45081
(icodemend.demo.code_suggest
Element
p45082
(dp45083
g10
I1
sg11
S''
sg12
Vvlines.x.vert_line
p45084
sg14
(lp45085
sg2
g45080
sbs(g117
g118
g28119
tp45086
g28115
s(S'semilogy'
p45087
g39295
tp45088
g39290
s(g93
g10118
S"'bottom'"
p45089
tp45090
(icodemend.demo.code_suggest
Element
p45091
(dp45092
g10
I3
sg11
S''
sg12
Vannotate.verticalalignment.'bottom'
p45093
sg14
(lp45094
sg2
g45089
sbs(S'figtext'
p45095
g11359
tp45096
g11354
sS'set_rotation_mode'
p45097
(icodemend.demo.code_suggest
Element
p45098
(dp45099
g10
I2
sg11
S'set text rotation mode .'
p45100
sg12
Vset_rotation_mode
p45101
sg14
(lp45102
g26803
a(icodemend.demo.code_suggest
Element
p45103
(dp45104
g10
I0
sg11
S'set text rotation mode . if " anchor " , the un-rotated text will first aligned according to their ha and va , and then will be rotated with the alignement reference point as a origin . if none ( default ) , the text will be rotated first then will be aligned .'
p45105
sg12
Vset_rotation_mode.va
p45106
sg14
(lp45107
sg2
S'va'
p45108
sbasg2
g45097
sbs(S'barh'
p45109
S'prop_cycle'
p45110
tp45111
(icodemend.demo.code_suggest
Element
p45112
(dp45113
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p45114
sg12
Vbarh.prop_cycle
p45115
sg14
(lp45116
sg2
g45110
sbs(S'gca'
p45117
S'contains'
p45118
tp45119
(icodemend.demo.code_suggest
Element
p45120
(dp45121
g10
I0
sg11
S'replace the contains test used by this artist .'
p45122
sg12
Vgca.contains
p45123
sg14
(lp45124
sg2
g45118
sbs(S'tricontourf'
p45125
S'V'
tp45126
g11637
s(g93
g132
g41706
tp45127
g41702
s(S'thetagrids'
p45128
S'angles'
p45129
tp45130
(icodemend.demo.code_suggest
Element
p45131
(dp45132
g10
I0
sg11
S'angles is in degrees .'
p45133
sg12
Vthetagrids.angles
p45134
sg14
(lp45135
sg2
g45129
sbs(g101
S'c'
g21489
tp45136
g21485
s(S'axvline'
p45137
S'yticks'
p45138
tp45139
(icodemend.demo.code_suggest
Element
p45140
(dp45141
g10
I0
sg11
S'set the y ticks with list of ticks'
p45142
sg12
Vaxvline.yticks
p45143
sg14
(lp45144
sg2
g45138
sbs(S'tricontour'
p45145
g1353
tp45146
g1348
s(S'plot_date'
p45147
S'y'
tp45148
g19674
s(S'angle_spectrum'
p45149
g18858
tp45150
g18853
s(g117
g118
g27919
tp45151
g27915
s(g93
g161
S'(0.5, 0.5)'
p45152
tp45153
(icodemend.demo.code_suggest
Element
p45154
(dp45155
g10
I8
sg11
S''
sg12
Vannotate.xy.(0/5, 0/5)
p45156
sg14
(lp45157
sg2
g45152
sbs(g1170
g34779
g438
tp45158
(icodemend.demo.code_suggest
Element
p45159
(dp45160
g10
I3
sg11
S''
sg12
Vhist.log.True
p45161
sg14
(lp45162
sg2
g438
sbs(g452
g118
S'k'
tp45163
(icodemend.demo.code_suggest
Element
p45164
(dp45165
g10
I1
sg11
S''
sg12
Verrorbar.label.k
p45166
sg14
(lp45167
sg2
S'k'
sbs(g252
g253
g14111
tp45168
g14107
sS'get_snap'
p45169
(icodemend.demo.code_suggest
Element
p45170
(dp45171
g10
I0
sg11
S'returns the snap setting which may be'
p45172
sg12
Vget_snap
p45173
sg14
(lp45174
sg2
g45169
sbsS'end_pan'
p45175
(icodemend.demo.code_suggest
Element
p45176
(dp45177
g10
I0
sg11
S'called when a pan operation completes ( when the mouse button is up . )'
p45178
sg12
Vend_pan
p45179
sg14
(lp45180
sg2
g45175
sbs(S'thetagrids'
p45181
S'text'
p45182
tp45183
(icodemend.demo.code_suggest
Element
p45184
(dp45185
g10
I0
sg11
S'set the text string s'
p45186
sg12
Vthetagrids.text
p45187
sg14
(lp45188
sg2
g45182
sbs(S'pcolormesh'
p45189
S'label'
p45190
tp45191
(icodemend.demo.code_suggest
Element
p45192
(dp45193
g10
I0
sg11
S'set the label to s for auto legend .'
p45194
sg12
Vpcolormesh.label
p45195
sg14
(lp45196
sg2
g45190
sbs(g117
g2392
S'8'
tp45197
g29112
s(S'barh'
p45198
S'fmt'
p45199
tp45200
(icodemend.demo.code_suggest
Element
p45201
(dp45202
g10
I0
sg11
S"the plot format symbol . if fmt is ' none ' ( case-insensitive ) , only the errorbars are plotted . this is used for adding errorbars to a bar plot , for example . default is ' ' , an empty plot format string ; properties are then identical to the defaults for plot ( ) ."
p45203
sg12
Vbarh.fmt
p45204
sg14
(lp45205
sg2
g45199
sbs(g93
g161
S'(xx, yy)'
p45206
tp45207
(icodemend.demo.code_suggest
Element
p45208
(dp45209
g10
I1
sg11
S''
sg12
Vannotate.xy.(xx, yy)
p45210
sg14
(lp45211
sg2
g45206
sbs(g101
g8267
g22142
tp45212
g22138
s(g324
g325
g9202
tp45213
g9198
s(g139
g140
g1752
tp45214
g1748
s(g139
g1283
S'2'
tp45215
g1893
s(g4998
g515
g515
tp45216
(icodemend.demo.code_suggest
Element
p45217
(dp45218
g10
I6
sg11
S''
sg12
Vpcolormesh.norm.norm
p45219
sg14
(lp45220
sg2
g515
sbs(g16
g17
g41933
tp45221
g41929
s(g4371
g4459
g4459
tp45222
g17744
s(S'barbs'
p45223
S'edgecolor'
p45224
tp45225
(icodemend.demo.code_suggest
Element
p45226
(dp45227
g10
I0
sg11
S'set the edgecolor(s ) of the collection .'
p45228
sg12
Vbarbs.edgecolor
p45229
sg14
(lp45230
sg2
g45224
sbs(S'pie'
p45231
S'frame'
p45232
tp45233
(icodemend.demo.code_suggest
Element
p45234
(dp45235
g10
I0
sg11
S'plot axes frame with the chart .'
p45236
sg12
Vpie.frame
p45237
sg14
(lp45238
sg2
g45232
sbs(S'eventplot'
p45239
g23373
tp45240
g23368
s(S'tricontour'
p45241
g1364
tp45242
g1359
s(S'autoscale'
p45243
g36135
tp45244
g36130
sS'setup'
p45245
(icodemend.demo.code_suggest
Element
p45246
(dp45247
g10
I10
sg11
S'perform setup for writing the movie file .'
p45248
sg12
Vsetup
p45249
sg14
(lp45250
sg2
g45245
sbs(S'barh'
p45251
S'x'
tp45252
(icodemend.demo.code_suggest
Element
p45253
(dp45254
g10
I0
sg11
S'plot x versus y with error deltas in yerr and xerr . vertical errorbars are plotted if yerr is not none . horizontal errorbars are plotted if xerr is not none .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y .'
p45255
sg12
Vbarh.x
p45256
sg14
(lp45257
sg2
S'x'
sbs(g10369
g13047
g13027
tp45258
g13023
s(S'plot_day_summary2_ochl'
p45259
g41174
tp45260
g41169
s(g10679
g132
g5274
tp45261
g5270
s(g101
g515
g865
tp45262
g22177
s(S'boxplot'
p45263
g39762
tp45264
g39753
s(S'savefig'
p45265
S'None'
p45266
tp45267
(icodemend.demo.code_suggest
Element
p45268
(dp45269
g10
I0
sg11
S"the resolution in dots per inch . if none it will default to the value savefig.dpi in the matplotlibrc file . if ' figure ' it will set the dpi to be the value of the figure ."
p45270
sg12
Vsavefig.None
p45271
sg14
(lp45272
sg2
g45266
sbsS'pprint_setters_rest'
p45273
(icodemend.demo.code_suggest
Element
p45274
(dp45275
g10
I0
sg11
S'if prop is none , return a list of strings of all settable properies and their valid values .'
p45276
sg12
Vpprint_setters_rest
p45277
sg14
(lp45278
(icodemend.demo.code_suggest
Element
p45279
(dp45280
g10
I0
sg11
S'if prop is none , return a list of strings of all settable properies and their valid values . format the output for rest|||if prop is not none , it is a valid property name and that property will be returned as a string of property : valid values .'
p45281
sg12
Vpprint_setters_rest.prop
p45282
sg14
(lp45283
sg2
S'prop'
p45284
sbasg2
g45273
sbsS'warn_deprecated'
p45285
(icodemend.demo.code_suggest
Element
p45286
(dp45287
g10
I0
sg11
S'used to display deprecation warning in a standard way .'
p45288
sg12
Vwarn_deprecated
p45289
sg14
(lp45290
(icodemend.demo.code_suggest
Element
p45291
(dp45292
g10
I0
sg11
S'an alternative function that the user may use in place of the deprecated function . the deprecation warning will tell the user about this alternative if provided .'
p45293
sg12
Vwarn_deprecated.alternative
p45294
sg14
(lp45295
sg2
S'alternative'
p45296
sbag40375
a(icodemend.demo.code_suggest
Element
p45297
(dp45298
g10
I0
sg11
S'the name of the deprecated function ; if not provided the name is automatically determined from the passed in function , though this is useful in the case of renamed functions , where the new function is just assigned to the name of the deprecated function . for example :'
p45299
sg12
Vwarn_deprecated.name
p45300
sg14
(lp45301
sg2
S'name'
p45302
sbag20427
ag43433
ag25074
asg2
g45285
sbs(S'suptitle'
p45303
S'position'
p45304
tp45305
(icodemend.demo.code_suggest
Element
p45306
(dp45307
g10
I0
sg11
S'set the ( x , y ) position of the text'
p45308
sg12
Vsuptitle.position
p45309
sg14
(lp45310
sg2
g45304
sbs(g139
g140
g1797
tp45311
g1793
s(S'contour'
p45312
g17765
tp45313
g17760
s(g93
g4800
g25334
tp45314
g25330
s(g117
g118
g27546
tp45315
g27542
s(S'pcolor'
p45316
S'anchor'
p45317
tp45318
(icodemend.demo.code_suggest
Element
p45319
(dp45320
g10
I0
sg11
S'anchor'
p45321
sg12
Vpcolor.anchor
p45322
sg14
(lp45323
sg2
g45317
sbs(S'imshow'
p45324
g9994
tp45325
g9989
s(g93
g33920
S"'bold'"
p45326
tp45327
(icodemend.demo.code_suggest
Element
p45328
(dp45329
g10
I1
sg11
S''
sg12
Vannotate.weight.'bold'
p45330
sg14
(lp45331
sg2
g45326
sbs(S'barh'
p45332
S'mec'
p45333
tp45334
(icodemend.demo.code_suggest
Element
p45335
(dp45336
g10
I0
sg11
S'where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p45337
sg12
Vbarh.mec
p45338
sg14
(lp45339
sg2
g45333
sbs(g1003
S'showfliers'
p45340
g438
tp45341
g39706
s(g452
g2364
g38799
tp45342
g38795
s(g332
g132
g41450
tp45343
g41446
s(S'axvspan'
p45344
S'transform'
p45345
tp45346
(icodemend.demo.code_suggest
Element
p45347
(dp45348
g10
I0
sg11
S'set the transform instance used by this artist .'
p45349
sg12
Vaxvspan.transform
p45350
sg14
(lp45351
sg2
g45345
sbs(S'text'
p45352
S'fontdict'
p45353
tp45354
(icodemend.demo.code_suggest
Element
p45355
(dp45356
g10
I3
sg11
S'a dictionary to override the default text properties . if fontdict is none , the defaults are determined by your rc parameters .'
p45357
sg12
Vtext.fontdict
p45358
sg14
(lp45359
(icodemend.demo.code_suggest
Element
p45360
(dp45361
g10
I2
sg11
S''
sg12
Vtext.fontdict.None
p45362
sg14
(lp45363
sg2
g865
sba(icodemend.demo.code_suggest
Element
p45364
(dp45365
g10
I1
sg11
S''
sg12
Vtext.fontdict.font
p45366
sg14
(lp45367
sg2
g17000
sbasg2
g45353
sbs(S'get'
p45368
S'color_cycle'
p45369
tp45370
(icodemend.demo.code_suggest
Element
p45371
(dp45372
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p45373
sg12
Vget.color_cycle
p45374
sg14
(lp45375
sg2
g45369
sbs(S'CubicTriInterpolator'
p45376
S'triangulation'
p45377
tp45378
(icodemend.demo.code_suggest
Element
p45379
(dp45380
g10
I0
sg11
S'the triangulation to interpolate over .'
p45381
sg12
VCubicTriInterpolator.triangulation
p45382
sg14
(lp45383
sg2
g45377
sbs(S'barbs'
p45384
S'flip_barb'
p45385
tp45386
(icodemend.demo.code_suggest
Element
p45387
(dp45388
g10
I0
sg11
S'either a single boolean flag or an array of booleans . single boolean indicates whether the lines and flags should point opposite to normal for all barbs . an array ( which should be the same size as the other data arrays ) indicates whether to flip for each individual barb . normal behavior is for the barbs and lines to point right ( comes from wind barbs having these features point towards low pressure in the northern hemisphere . ) default is false'
p45389
sg12
Vbarbs.flip_barb
p45390
sg14
(lp45391
sg2
g45385
sbs(g245
g140
g30308
tp45392
g30304
s(g421
g102
g32398
tp45393
g32394
sS'get_formatd'
p45394
(icodemend.demo.code_suggest
Element
p45395
(dp45396
g10
I0
sg11
S'build a formatd guaranteed to have a key for every dtype name'
p45397
sg12
Vget_formatd
p45398
sg14
(lp45399
sg2
g45394
sbs(S'text'
p45400
S'figure'
p45401
tp45402
(icodemend.demo.code_suggest
Element
p45403
(dp45404
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p45405
sg12
Vtext.figure
p45406
sg14
(lp45407
sg2
g45401
sbs(g452
g132
g31838
tp45408
g31834
s(S'Button'
p45409
g32034
tp45410
g32025
s(S'csd'
p45411
S'_interpolation_steps'
p45412
tp45413
(icodemend.demo.code_suggest
Element
p45414
(dp45415
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p45416
sg12
Vcsd._interpolation_steps
p45417
sg14
(lp45418
sg2
g45412
sbsS'get_split_ind'
p45419
(icodemend.demo.code_suggest
Element
p45420
(dp45421
g10
I0
sg11
S'seq is a list of words .'
p45422
sg12
Vget_split_ind
p45423
sg14
(lp45424
g42391
asg2
g45419
sbs(S'axvline'
p45425
S'codes'
p45426
tp45427
(icodemend.demo.code_suggest
Element
p45428
(dp45429
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p45430
sg12
Vaxvline.codes
p45431
sg14
(lp45432
sg2
g45426
sbsS'add_toolitem'
p45433
(icodemend.demo.code_suggest
Element
p45434
(dp45435
g10
I0
sg11
S'add a toolitem to the container'
p45436
sg12
Vadd_toolitem
p45437
sg14
(lp45438
(icodemend.demo.code_suggest
Element
p45439
(dp45440
g10
I0
sg11
S'description of the tool , used for the tooltips'
p45441
sg12
Vadd_toolitem.description
p45442
sg14
(lp45443
sg2
S'description'
p45444
sbag43419
ag24604
a(icodemend.demo.code_suggest
Element
p45445
(dp45446
g10
I0
sg11
S"name of the tool to add , this gets used as the tool 's id and as the default label of the buttons"
p45447
sg12
Vadd_toolitem.name
p45448
sg14
(lp45449
sg2
S'name'
p45450
sbag16848
ag42647
asg2
g45433
sbs(g101
g118
g21945
tp45451
g21941
s(S'getp'
p45452
S'prop_cycle'
p45453
tp45454
(icodemend.demo.code_suggest
Element
p45455
(dp45456
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p45457
sg12
Vgetp.prop_cycle
p45458
sg14
(lp45459
sg2
g45453
sbs(S'semilogx'
p45460
g39049
tp45461
g39044
s(S'broken_barh'
p45462
S'transform'
p45463
tp45464
(icodemend.demo.code_suggest
Element
p45465
(dp45466
g10
I0
sg11
S'set the transform instance used by this artist .'
p45467
sg12
Vbroken_barh.transform
p45468
sg14
(lp45469
sg2
g45463
sbs(g37604
S'hovercolor'
p45470
g20196
tp45471
g20192
s(g245
g140
g30129
tp45472
g30125
s(g101
S's'
g7711
tp45473
g7707
sS'set_xscale'
p45474
(icodemend.demo.code_suggest
Element
p45475
(dp45476
g10
I46
sg11
S'set the scaling of the x-axis'
p45477
sg12
Vset_xscale
p45478
sg14
(lp45479
g4234
ag15137
a(icodemend.demo.code_suggest
Element
p45480
(dp45481
g10
I0
sg11
S'the base of the logarithm'
p45482
sg12
Vset_xscale.basey
p45483
sg14
(lp45484
sg2
S'basey'
p45485
sba(icodemend.demo.code_suggest
Element
p45486
(dp45487
g10
I0
sg11
S'this allows the linear range ( - linthresh to linthresh ) to be stretched relative to the logarithmic range . its value is the number of decades to use for each half of the linear range . for example , when linscale = = 1.0 ( the default ) , the space used for the positive and negative halves of the linear range will be equal to one decade in the logarithmic range .'
p45488
sg12
Vset_xscale.linscalex
p45489
sg14
(lp45490
sg2
S'linscalex'
p45491
sba(icodemend.demo.code_suggest
Element
p45492
(dp45493
g10
I0
sg11
S'this allows the linear range ( - linthresh to linthresh ) to be stretched relative to the logarithmic range . its value is the number of decades to use for each half of the linear range . for example , when linscale = = 1.0 ( the default ) , the space used for the positive and negative halves of the linear range will be equal to one decade in the logarithmic range .'
p45494
sg12
Vset_xscale.linscaley
p45495
sg14
(lp45496
sg2
S'linscaley'
p45497
sbag19404
ag27015
ag41
ag11137
ag26738
ag23670
asg2
g45474
sbs(g5640
g10482
g10511
tp45498
g10507
sS'set_tight_layout'
p45499
(icodemend.demo.code_suggest
Element
p45500
(dp45501
g10
I0
sg11
S'set whether tight_layout ( ) is used upon drawing .'
p45502
sg12
Vset_tight_layout
p45503
sg14
(lp45504
sg2
g45499
sbs(g117
S'scaley'
p45505
g1944
tp45506
g23657
s(S'update'
p45507
g34027
tp45508
g34022
s(g1170
g118
S"['first70', 'next15', 'last5']"
p45509
tp45510
(icodemend.demo.code_suggest
Element
p45511
(dp45512
g10
I1
sg11
S''
sg12
Vhist.label.['first70', 'next15', 'last5']
p45513
sg14
(lp45514
sg2
g45509
sbsS'pop_state'
p45515
(icodemend.demo.code_suggest
Element
p45516
(dp45517
g10
I0
sg11
S'pop a state off of the stack .'
p45518
sg12
Vpop_state
p45519
sg14
(lp45520
sg2
g45515
sbs(g324
g785
g9701
tp45521
g9697
sS'alphaState'
p45522
(icodemend.demo.code_suggest
Element
p45523
(dp45524
g10
I0
sg11
S'return name of an extgstate that sets alpha to the given value'
p45525
sg12
ValphaState
p45526
sg14
(lp45527
sg2
g45522
sbsS'weeks'
p45528
(icodemend.demo.code_suggest
Element
p45529
(dp45530
g10
I0
sg11
S'return weeks as days .'
p45531
sg12
Vweeks
p45532
sg14
(lp45533
sg2
g45528
sbs(g514
g4459
S'0'
tp45534
g45021
s(g16
g132
S"'purple'"
p45535
tp45536
(icodemend.demo.code_suggest
Element
p45537
(dp45538
g10
I1
sg11
S''
sg12
Vbar.color.'purple'
p45539
sg14
(lp45540
sg2
g45535
sbs(S'add'
p45541
S'closed'
p45542
tp45543
(icodemend.demo.code_suggest
Element
p45544
(dp45545
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p45546
sg12
Vadd.closed
p45547
sg14
(lp45548
sg2
g45542
sbs(S'volume_overlay3'
p45549
S'alpha'
p45550
tp45551
(icodemend.demo.code_suggest
Element
p45552
(dp45553
g10
I0
sg11
S'bar transparency'
p45554
sg12
Vvolume_overlay3.alpha
p45555
sg14
(lp45556
sg2
g45550
sbs(S'start_pan'
p45557
S'x'
tp45558
g37998
s(g252
g253
g14151
tp45559
g14147
s(S'rec_groupby'
p45560
S'stats'
p45561
tp45562
(icodemend.demo.code_suggest
Element
p45563
(dp45564
g10
I0
sg11
S'return record array has dtype names for each attribute name in the groupby argument , with the associated group values , and for each outname name in the stats argument , with the associated stat summary output .|||stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname . for example :'
p45565
sg12
Vrec_groupby.stats
p45566
sg14
(lp45567
sg2
g45561
sbs(S'cohere'
p45568
S'f'
tp45569
g43713
s(S'set_edgecolor'
p45570
S'c'
tp45571
(icodemend.demo.code_suggest
Element
p45572
(dp45573
g10
I0
sg11
S"set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||if c is ' face ' , the edge color will always be the same as the face color . if it is ' none ' , the patch boundary will not be drawn ."
p45574
sg12
Vset_edgecolor.c
p45575
sg14
(lp45576
sg2
S'c'
sbsS'is_numlike'
p45577
(icodemend.demo.code_suggest
Element
p45578
(dp45579
g10
I1
sg11
S'return true if obj looks like a number'
p45580
sg12
Vis_numlike
p45581
sg14
(lp45582
g43386
asg2
g45577
sbs(g117
g4163
S'5'
tp45583
g11017
s(g766
g325
g16475
tp45584
g16471
s(S'csd'
p45585
S'position'
p45586
tp45587
(icodemend.demo.code_suggest
Element
p45588
(dp45589
g10
I0
sg11
S'set the axes position with'
p45590
sg12
Vcsd.position
p45591
sg14
(lp45592
sg2
g45586
sbs(g101
g118
g21925
tp45593
g21921
sS'volume_overlay2'
p45594
(icodemend.demo.code_suggest
Element
p45595
(dp45596
g10
I0
sg11
S'add a volume overlay to the current axes .'
p45597
sg12
Vvolume_overlay2
p45598
sg14
(lp45599
(icodemend.demo.code_suggest
Element
p45600
(dp45601
g10
I0
sg11
S'bar transparency'
p45602
sg12
Vvolume_overlay2.alpha
p45603
sg14
(lp45604
sg2
S'alpha'
p45605
sba(icodemend.demo.code_suggest
Element
p45606
(dp45607
g10
I0
sg11
S'an axes instance to plot to'
p45608
sg12
Vvolume_overlay2.ax
p45609
sg14
(lp45610
sg2
S'ax'
p45611
sbag31774
ag41315
a(icodemend.demo.code_suggest
Element
p45612
(dp45613
g10
I0
sg11
S'the color of the lines where close > = open'
p45614
sg12
Vvolume_overlay2.colorup
p45615
sg14
(lp45616
sg2
S'colorup'
p45617
sba(icodemend.demo.code_suggest
Element
p45618
(dp45619
g10
I0
sg11
S'a sequence of volumes'
p45620
sg12
Vvolume_overlay2.volumes
p45621
sg14
(lp45622
sg2
S'volumes'
p45623
sba(icodemend.demo.code_suggest
Element
p45624
(dp45625
g10
I0
sg11
S'the bar width in points'
p45626
sg12
Vvolume_overlay2.width
p45627
sg14
(lp45628
sg2
S'width'
p45629
sbasg2
g45594
sbsS'volume_overlay3'
p45630
(icodemend.demo.code_suggest
Element
p45631
(dp45632
g10
I1
sg11
S'add a volume overlay to the current axes .'
p45633
sg12
Vvolume_overlay3
p45634
sg14
(lp45635
g45552
a(icodemend.demo.code_suggest
Element
p45636
(dp45637
g10
I0
sg11
S'an axes instance to plot to'
p45638
sg12
Vvolume_overlay3.ax
p45639
sg14
(lp45640
sg2
S'ax'
p45641
sba(icodemend.demo.code_suggest
Element
p45642
(dp45643
g10
I0
sg11
S'the color of the lines where close1 < close0'
p45644
sg12
Vvolume_overlay3.colordown
p45645
sg14
(lp45646
sg2
S'colordown'
p45647
sbag38671
a(icodemend.demo.code_suggest
Element
p45648
(dp45649
g10
I0
sg11
S'data to plot . time must be in float date format - see date2num'
p45650
sg12
Vvolume_overlay3.quotes
p45651
sg14
(lp45652
sg2
S'quotes'
p45653
sbag26078
asg2
g45630
sbs(S'plot_day_summary2_ohlc'
p45654
g8455
tp45655
g8450
sS'createFontList'
p45656
(icodemend.demo.code_suggest
Element
p45657
(dp45658
g10
I1
sg11
S'a function to create a font lookup list .'
p45659
sg12
VcreateFontList
p45660
sg14
(lp45661
sg2
g45656
sbs(S'text'
p45662
S'url'
p45663
tp45664
(icodemend.demo.code_suggest
Element
p45665
(dp45666
g10
I0
sg11
S'sets the url for the artist'
p45667
sg12
Vtext.url
p45668
sg14
(lp45669
sg2
g45663
sbs(S'arrow'
p45670
g2713
tp45671
g2708
s(S'set_yticklabels'
p45672
g18356
tp45673
g18351
s(g139
g1283
S'4'
tp45674
g1901
s(S'title'
p45675
g35807
tp45676
g35802
sS'bone'
p45677
(icodemend.demo.code_suggest
Element
p45678
(dp45679
g10
I0
sg11
S'set the default colormap to bone and apply to current image if any .'
p45680
sg12
Vbone
p45681
sg14
(lp45682
sg2
g45677
sbs(g16
g132
g7032
tp45683
(icodemend.demo.code_suggest
Element
p45684
(dp45685
g10
I9
sg11
S''
sg12
Vbar.color.colors
p45686
sg14
(lp45687
sg2
g7032
sbs(S'arrow'
p45688
g2653
tp45689
g2648
s(S'bar'
p45690
S'capsize'
p45691
tp45692
(icodemend.demo.code_suggest
Element
p45693
(dp45694
g10
I0
sg11
S'determines the length in points of the error bar caps default : none , which will take the value from the errorbar.capsize rcparam .'
p45695
sg12
Vbar.capsize
p45696
sg14
(lp45697
sg2
g45691
sbs(g34170
g325
g2848
tp45698
g33115
s(S'table'
p45699
S'position'
p45700
tp45701
(icodemend.demo.code_suggest
Element
p45702
(dp45703
g10
I0
sg11
S'set the axes position with'
p45704
sg12
Vtable.position
p45705
sg14
(lp45706
sg2
g45700
sbs(S'trigger_tool'
p45707
S'name'
p45708
tp45709
(icodemend.demo.code_suggest
Element
p45710
(dp45711
g10
I0
sg11
S'name(id ) of the tool triggered from within the container name of the tool'
p45712
sg12
Vtrigger_tool.name
p45713
sg14
(lp45714
sg2
g45708
sbs(g117
g118
S't'
tp45715
g28640
s(g324
g785
g9741
tp45716
g9737
sS'uninstall_repl_displayhook'
p45717
(icodemend.demo.code_suggest
Element
p45718
(dp45719
g10
I0
sg11
S'uninstalls the matplotlib display hook .'
p45720
sg12
Vuninstall_repl_displayhook
p45721
sg14
(lp45722
sg2
g45717
sbs(g514
g110
S"'white'"
p45723
tp45724
(icodemend.demo.code_suggest
Element
p45725
(dp45726
g10
I1
sg11
S''
sg12
Vpcolor.edgecolor.'white'
p45727
sg14
(lp45728
sg2
g45723
sbs(g452
g2841
g43241
tp45729
g43237
s(S'plotting'
p45730
g15790
tp45731
g15785
sS'draw_path_collection'
p45732
(icodemend.demo.code_suggest
Element
p45733
(dp45734
g10
I0
sg11
S'draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds .'
p45735
sg12
Vdraw_path_collection
p45736
sg14
(lp45737
(icodemend.demo.code_suggest
Element
p45738
(dp45739
g10
I0
sg11
S'draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . the offsets in offsets are first transformed by offsettrans before being applied . offset_position may be either " screen " or " data " depending on the space that the offsets are in .'
p45740
sg12
Vdraw_path_collection.antialiaseds
p45741
sg14
(lp45742
sg2
S'antialiaseds'
p45743
sbag16274
ag12377
a(icodemend.demo.code_suggest
Element
p45744
(dp45745
g10
I0
sg11
S'draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . the offsets in offsets are first transformed by offsettrans before being applied . offset_position may be either " screen " or " data " depending on the space that the offsets are in .'
p45746
sg12
Vdraw_path_collection.linestyles
p45747
sg14
(lp45748
sg2
S'linestyles'
p45749
sbag13723
ag16137
ag7889
ag14973
asg2
g45732
sbsS'gradient'
p45750
(icodemend.demo.code_suggest
Element
p45751
(dp45752
g10
I18
sg11
S'returns a list of 2 masked arrays containing interpolated derivatives at the specified x,y points .'
p45753
sg12
Vgradient
p45754
sg14
(lp45755
g34487
asg2
g45750
sbs(S'get_kern'
p45756
g42345
tp45757
g42340
s(g40328
g2392
S'1'
tp45758
g39156
s(g2814
g118
S"'two'"
p45759
tp45760
(icodemend.demo.code_suggest
Element
p45761
(dp45762
g10
I1
sg11
S''
sg12
Vadd.label.'two'
p45763
sg14
(lp45764
sg2
g45759
sbs(S'clabel'
p45765
g14904
tp45766
g14895
s(g117
g118
g27839
tp45767
g27835
s(g117
g118
g13734
tp45768
g27706
s(g101
g102
S'a'
tp45769
g21906
sS'get_fontproperties'
p45770
(icodemend.demo.code_suggest
Element
p45771
(dp45772
g10
I0
sg11
S'return the fontproperties object'
p45773
sg12
Vget_fontproperties
p45774
sg14
(lp45775
sg2
g45770
sbs(S'add_subplot'
p45776
S'yticklabels'
p45777
tp45778
(icodemend.demo.code_suggest
Element
p45779
(dp45780
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p45781
sg12
Vadd_subplot.yticklabels
p45782
sg14
(lp45783
sg2
g45777
sbs(g26208
g42628
g32297
tp45784
g32293
s(g117
g118
g28304
tp45785
g28300
s(S'table'
p45786
S'snap'
p45787
tp45788
(icodemend.demo.code_suggest
Element
p45789
(dp45790
g10
I0
sg11
S'sets the snap setting which may be'
p45791
sg12
Vtable.snap
p45792
sg14
(lp45793
sg2
g45787
sbsS'set_color_cycle'
p45794
(icodemend.demo.code_suggest
Element
p45795
(dp45796
g10
I21
sg11
S'set the color cycle for any future plot commands on this axes .'
p45797
sg12
Vset_color_cycle
p45798
sg14
(lp45799
g35077
asg2
g45794
sbs(S'get_metrics'
p45800
g22246
tp45801
g22241
s(S'add_subplot'
p45802
S'xticks'
p45803
tp45804
(icodemend.demo.code_suggest
Element
p45805
(dp45806
g10
I6
sg11
S'set the x ticks with list of ticks'
p45807
sg12
Vadd_subplot.xticks
p45808
sg14
(lp45809
(icodemend.demo.code_suggest
Element
p45810
(dp45811
g10
I5
sg11
S''
sg12
Vadd_subplot.xticks.[]
p45812
sg14
(lp45813
sg2
S'[]'
p45814
sbasg2
g45803
sbs(g93
g132
g41711
tp45815
g41707
s(g582
g132
g3306
tp45816
g3302
sS'rgb_to_hsv'
p45817
(icodemend.demo.code_suggest
Element
p45818
(dp45819
g10
I4
sg11
S'convert float rgb values ( in the range [ 0 , 1 ] ) , in a numpy array to hsv values .'
p45820
sg12
Vrgb_to_hsv
p45821
sg14
(lp45822
(icodemend.demo.code_suggest
Element
p45823
(dp45824
g10
I0
sg11
S'all values must be in the range [ 0 , 1 ]'
p45825
sg12
Vrgb_to_hsv.arr
p45826
sg14
(lp45827
sg2
S'arr'
p45828
sbasg2
g45817
sbs(S'annotate'
p45829
S'x'
tp45830
(icodemend.demo.code_suggest
Element
p45831
(dp45832
g10
I0
sg11
S'set the x position of the text'
p45833
sg12
Vannotate.x
p45834
sg14
(lp45835
sg2
S'x'
sbs(S'errorbar'
p45836
S'markevery'
p45837
tp45838
(icodemend.demo.code_suggest
Element
p45839
(dp45840
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p45841
sg12
Verrorbar.markevery
p45842
sg14
(lp45843
sg2
g45837
sbs(S'eventplot'
p45844
g23469
tp45845
g23464
s(S'candlestick2_ohlc'
p45846
S'closes'
p45847
tp45848
(icodemend.demo.code_suggest
Element
p45849
(dp45850
g10
I0
sg11
S'sequence of closing values'
p45851
sg12
Vcandlestick2_ohlc.closes
p45852
sg14
(lp45853
sg2
g45847
sbsS'get_alpha'
p45854
(icodemend.demo.code_suggest
Element
p45855
(dp45856
g10
I1
sg11
S'return the alpha value used for blending - not supported on all backends'
p45857
sg12
Vget_alpha
p45858
sg14
(lp45859
sg2
g45854
sbs(S'axvspan'
p45860
S'xscale'
p45861
tp45862
(icodemend.demo.code_suggest
Element
p45863
(dp45864
g10
I0
sg11
S'set the scaling of the x-axis'
p45865
sg12
Vaxvspan.xscale
p45866
sg14
(lp45867
sg2
g45861
sbs(S'context'
p45868
S'style'
p45869
tp45870
(icodemend.demo.code_suggest
Element
p45871
(dp45872
g10
I0
sg11
S'a style specification . valid options are :'
p45873
sg12
Vcontext.style
p45874
sg14
(lp45875
sg2
g45869
sbs(S'add_subplot'
p45876
S'clip_box'
p45877
tp45878
(icodemend.demo.code_suggest
Element
p45879
(dp45880
g10
I0
sg11
S"set the artist 's clip bbox ."
p45881
sg12
Vadd_subplot.clip_box
p45882
sg14
(lp45883
sg2
g45877
sbs(g139
g140
g1732
tp45884
g1728
s(S'blend_hsv'
p45885
g40614
tp45886
g40609
s(S'pcolor'
p45887
S'None'
p45888
tp45889
(icodemend.demo.code_suggest
Element
p45890
(dp45891
g10
I0
sg11
S"vmin and vmax are used in conjunction with norm to normalize luminance data . if either is none , it is autoscaled to the respective min or max of the color array c . if not none , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||if none , the rc setting is used by default . if ' none ' , edges will not be visible . an mpl color or sequence of colors will set the edge color|||the alpha blending value|||a matplotlib.colors.colormap instance . if none , use rc settings .|||an matplotlib.colors.normalize instance is used to scale luminance data to 0,1 . if none , defaults to normalize ( ) ."
p45892
sg12
Vpcolor.None
p45893
sg14
(lp45894
sg2
g45888
sbs(S'volume_overlay2'
p45895
g45617
tp45896
g45612
sS'get_x'
p45897
(icodemend.demo.code_suggest
Element
p45898
(dp45899
g10
I7
sg11
S'return the left coord of the rectangle'
p45900
sg12
Vget_x
p45901
sg14
(lp45902
sg2
g45897
sbsS'get_y'
p45903
(icodemend.demo.code_suggest
Element
p45904
(dp45905
g10
I0
sg11
S'return the bottom coord of the rectangle'
p45906
sg12
Vget_y
p45907
sg14
(lp45908
sg2
g45903
sbs(g139
g140
g1662
tp45909
g1658
sS'fill_between'
p45910
(icodemend.demo.code_suggest
Element
p45911
(dp45912
g10
I132
sg11
S'make filled polygons between two curves .'
p45913
sg12
Vfill_between
p45914
sg14
(lp45915
(icodemend.demo.code_suggest
Element
p45916
(dp45917
g10
I16
sg11
S'if none , default to fill between everywhere . if not none , it is an n-length numpy boolean array and the fill will only happen over the regions where where==true .'
p45918
sg12
Vfill_between.where
p45919
sg14
(lp45920
g42382
ag38376
ag27220
ag4359
asg2
S'where'
p45921
sba(icodemend.demo.code_suggest
Element
p45922
(dp45923
g10
I10
sg11
S'create a polycollection filling the regions between y1 and y2 where where==true|||an n-length array ( or scalar ) of the y data'
p45924
sg12
Vfill_between.y2
p45925
sg14
(lp45926
(icodemend.demo.code_suggest
Element
p45927
(dp45928
g10
I6
sg11
S''
sg12
Vfill_between.y2.y2
p45929
sg14
(lp45930
sg2
S'y2'
p45931
sba(icodemend.demo.code_suggest
Element
p45932
(dp45933
g10
I2
sg11
S''
sg12
Vfill_between.y2.-6
p45934
sg14
(lp45935
sg2
S'-6'
p45936
sba(icodemend.demo.code_suggest
Element
p45937
(dp45938
g10
I1
sg11
S''
sg12
Vfill_between.y2.0/0
p45939
sg14
(lp45940
sg2
S'0.0'
p45941
sbasg2
S'y2'
p45942
sbag20698
ag36453
ag7078
a(icodemend.demo.code_suggest
Element
p45943
(dp45944
g10
I0
sg11
S'create a polycollection filling the regions between y1 and y2 where where==true|||an n-length array ( or scalar ) of the y data'
p45945
sg12
Vfill_between.y1
p45946
sg14
(lp45947
sg2
S'y1'
p45948
sbasg2
g45910
sbsS'key_press_event'
p45949
(icodemend.demo.code_suggest
Element
p45950
(dp45951
g10
I0
sg11
S"this method will be call all functions connected to the ' key_press_event ' with a keyevent"
p45952
sg12
Vkey_press_event
p45953
sg14
(lp45954
sg2
g45949
sbsS'show_popup'
p45955
(icodemend.demo.code_suggest
Element
p45956
(dp45957
g10
I0
sg11
S'display message in a popup - - gui only'
p45958
sg12
Vshow_popup
p45959
sg14
(lp45960
sg2
g45955
sbs(S'axvspan'
p45961
S'figure'
p45962
tp45963
(icodemend.demo.code_suggest
Element
p45964
(dp45965
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p45966
sg12
Vaxvspan.figure
p45967
sg14
(lp45968
sg2
g45962
sbsS'get_c'
p45969
(icodemend.demo.code_suggest
Element
p45970
(dp45971
g10
I0
sg11
S'alias for get_color'
p45972
sg12
Vget_c
p45973
sg14
(lp45974
sg2
g45969
sbs(g252
g253
g14076
tp45975
g14072
s(S'set_prop_cycle'
p45976
S'itr'
p45977
tp45978
(icodemend.demo.code_suggest
Element
p45979
(dp45980
g10
I0
sg11
S'finite-length iterable of the property values . these values are validated and will raise a valueerror if invalid .'
p45981
sg12
Vset_prop_cycle.itr
p45982
sg14
(lp45983
sg2
g45977
sbs(S'add_axes'
p45984
S'xlabel'
p45985
tp45986
(icodemend.demo.code_suggest
Element
p45987
(dp45988
g10
I0
sg11
S'set the label for the xaxis .'
p45989
sg12
Vadd_axes.xlabel
p45990
sg14
(lp45991
sg2
g45985
sbs(S'text'
p45992
S'withdash'
p45993
tp45994
(icodemend.demo.code_suggest
Element
p45995
(dp45996
g10
I2
sg11
S'creates a textwithdash instance instead of a text instance .'
p45997
sg12
Vtext.withdash
p45998
sg14
(lp45999
g16173
a(icodemend.demo.code_suggest
Element
p46000
(dp46001
g10
I1
sg11
S''
sg12
Vtext.withdash.True
p46002
sg14
(lp46003
sg2
g438
sbasg2
g45993
sbs(S'broken_barh'
p46004
S'xscale'
p46005
tp46006
(icodemend.demo.code_suggest
Element
p46007
(dp46008
g10
I0
sg11
S'set the scaling of the x-axis'
p46009
sg12
Vbroken_barh.xscale
p46010
sg14
(lp46011
sg2
g46005
sbs(S'csd'
p46012
S'color_cycle'
p46013
tp46014
(icodemend.demo.code_suggest
Element
p46015
(dp46016
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p46017
sg12
Vcsd.color_cycle
p46018
sg14
(lp46019
sg2
g46013
sbs(S'csd'
p46020
S'x'
tp46021
(icodemend.demo.code_suggest
Element
p46022
(dp46023
g10
I0
sg11
S"the cross spectral density by welch 's average periodogram method . the vectors x and y are divided into nfft length segments . each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . the product of the direct ffts of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||if len(x ) < nfft or len(y ) < nfft , they will be zero padded to nfft ."
p46024
sg12
Vcsd.x
p46025
sg14
(lp46026
sg2
S'x'
sbs(g117
g118
g27631
tp46027
g27627
s(g332
g389
g33708
tp46028
g33704
sS'inferno'
p46029
(icodemend.demo.code_suggest
Element
p46030
(dp46031
g10
I0
sg11
S'set the default colormap to inferno and apply to current image if any .'
p46032
sg12
Vinferno
p46033
sg14
(lp46034
sg2
g46029
sbs(g101
g118
g13397
tp46035
g22030
s(S'get'
p46036
S'yticklabels'
p46037
tp46038
(icodemend.demo.code_suggest
Element
p46039
(dp46040
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p46041
sg12
Vget.yticklabels
p46042
sg14
(lp46043
sg2
g46037
sbs(g109
g3075
S'200'
p46044
tp46045
(icodemend.demo.code_suggest
Element
p46046
(dp46047
g10
I4
sg11
S''
sg12
Vsavefig.dpi.200
p46048
sg14
(lp46049
sg2
g46044
sbs(S'save'
p46050
S'filename'
p46051
tp46052
(icodemend.demo.code_suggest
Element
p46053
(dp46054
g10
I0
sg11
S'filename is the output filename , e.g. , mymovie.mp4'
p46055
sg12
Vsave.filename
p46056
sg14
(lp46057
sg2
g46051
sbs(S'boxplot'
p46058
g39772
tp46059
g39763
s(S'to_rgba'
p46060
S'x'
tp46061
g12974
s(S'legend'
p46062
g14622
tp46063
g14617
s(S'barh'
p46064
S'ms'
p46065
tp46066
(icodemend.demo.code_suggest
Element
p46067
(dp46068
g10
I0
sg11
S'where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p46069
sg12
Vbarh.ms
p46070
sg14
(lp46071
sg2
g46065
sbs(g41239
g41249
tp46072
g41244
s(g766
g666
g4048
tp46073
g4044
s(S'add'
p46074
S'facecolor'
p46075
tp46076
(icodemend.demo.code_suggest
Element
p46077
(dp46078
g10
I0
sg11
S'set the patch face color'
p46079
sg12
Vadd.facecolor
p46080
sg14
(lp46081
sg2
g46075
sbs(g5975
g132
g19641
tp46082
g19637
s(g4998
g325
S"'Greens'"
p46083
tp46084
(icodemend.demo.code_suggest
Element
p46085
(dp46086
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.'Greens'
p46087
sg14
(lp46088
sg2
g46083
sbs(g8547
S'explode'
p46089
g46089
tp46090
(icodemend.demo.code_suggest
Element
p46091
(dp46092
g10
I12
sg11
S''
sg12
Vpie.explode.explode
p46093
sg14
(lp46094
sg2
g46089
sbs(S'grid'
p46095
S'xmargin'
p46096
tp46097
(icodemend.demo.code_suggest
Element
p46098
(dp46099
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p46100
sg12
Vgrid.xmargin
p46101
sg14
(lp46102
sg2
g46096
sbs(S'candlestick2_ochl'
p46103
S'colorup'
p46104
tp46105
(icodemend.demo.code_suggest
Element
p46106
(dp46107
g10
I0
sg11
S'the color of the lines where close > = open'
p46108
sg12
Vcandlestick2_ochl.colorup
p46109
sg14
(lp46110
sg2
g46104
sbs(g245
g140
g30034
tp46111
g30030
s(g117
g132
g28731
tp46112
g28727
s(S'plot_day_summary2_ohlc'
p46113
g8461
tp46114
g8456
s(g117
g102
g29211
tp46115
g29207
s(g93
g161
S'(m, 0)'
p46116
tp46117
(icodemend.demo.code_suggest
Element
p46118
(dp46119
g10
I1
sg11
S''
sg12
Vannotate.xy.(m, 0)
p46120
sg14
(lp46121
sg2
g46116
sbs(S'hexbin'
p46122
g25831
tp46123
g25826
s(S'set_title'
p46124
g44421
tp46125
g44416
s(S'VPacker'
p46126
S'pad'
p46127
S'0'
tp46128
g43089
s(g252
g7452
g14330
tp46129
g14326
sS'get_positions'
p46130
(icodemend.demo.code_suggest
Element
p46131
(dp46132
g10
I0
sg11
S'return an array containing the floating-point values of the positions'
p46133
sg12
Vget_positions
p46134
sg14
(lp46135
sg2
g46130
sbs(S'barh'
p46136
S'readonly'
p46137
tp46138
(icodemend.demo.code_suggest
Element
p46139
(dp46140
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p46141
sg12
Vbarh.readonly
p46142
sg14
(lp46143
sg2
g46137
sbs(S'imshow'
p46144
g9045
tp46145
g8986
s(S'rec_join'
p46146
g35102
tp46147
g35097
sS'get_fontstyle'
p46148
(icodemend.demo.code_suggest
Element
p46149
(dp46150
g10
I0
sg11
S'alias for get_style'
p46151
sg12
Vget_fontstyle
p46152
sg14
(lp46153
sg2
g46148
sbs(g1170
g1257
S'101'
p46154
tp46155
(icodemend.demo.code_suggest
Element
p46156
(dp46157
g10
I1
sg11
S''
sg12
Vhist.bins.101
p46158
sg14
(lp46159
sg2
g46154
sbs(S'volume_overlay'
p46160
g37411
tp46161
g37406
s(S'loglog'
p46162
S'subsx'
p46163
tp46164
(icodemend.demo.code_suggest
Element
p46165
(dp46166
g10
I0
sg11
S'the location of the minor x /y ticks ; none defaults to autosubs , which depend on the number of decades in the plot ; see matplotlib.axes.axes.set_xscale ( ) / matplotlib.axes.axes.set_yscale ( ) for details'
p46167
sg12
Vloglog.subsx
p46168
sg14
(lp46169
sg2
g46163
sbs(g117
g118
g28449
tp46170
g28445
s(g93
g161
S'(theta[i], r[i])'
p46171
tp46172
(icodemend.demo.code_suggest
Element
p46173
(dp46174
g10
I1
sg11
S''
sg12
Vannotate.xy.(theta[i], r[i])
p46175
sg14
(lp46176
sg2
g46171
sbs(S'set_text'
p46177
S's'
tp46178
g13872
s(S'gca'
p46179
S'yticklabels'
p46180
tp46181
(icodemend.demo.code_suggest
Element
p46182
(dp46183
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p46184
sg12
Vgca.yticklabels
p46185
sg14
(lp46186
sg2
g46180
sbs(g16
g34779
g438
tp46187
g41529
sS'makeMappingArray'
p46188
(icodemend.demo.code_suggest
Element
p46189
(dp46190
g10
I0
sg11
S'create an n - element 1-d lookup table'
p46191
sg12
VmakeMappingArray
p46192
sg14
(lp46193
(icodemend.demo.code_suggest
Element
p46194
(dp46195
g10
I0
sg11
S'create an n - element 1-d lookup table'
p46196
sg12
VmakeMappingArray.N
p46197
sg14
(lp46198
sg2
S'N'
sba(icodemend.demo.code_suggest
Element
p46199
(dp46200
g10
I0
sg11
S'data represented by a list of x,y0,y1 mapping correspondences . each element in this list represents how a value between 0 and 1 ( inclusive ) represented by x is mapped to a corresponding value between 0 and 1 ( inclusive ) . the two values of y are to allow for discontinuous mapping functions ( say as might be found in a sawtooth ) where y0 represents the value of y for values of x < = to that given , and y1 is the value to be used for x > than that given ) . the list must start with x=0 , end with x=1 , and all values of x must be in increasing order . values between the given mapping points are determined by simple linear interpolation .'
p46201
sg12
VmakeMappingArray.data
p46202
sg14
(lp46203
sg2
S'data'
p46204
sbasg2
g46188
sbs(S'semilogy'
p46205
g39229
tp46206
g39224
s(S'annotate'
p46207
S'picker'
p46208
tp46209
(icodemend.demo.code_suggest
Element
p46210
(dp46211
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p46212
sg12
Vannotate.picker
p46213
sg14
(lp46214
sg2
g46208
sbs(S'annotate'
p46215
S'bbox'
p46216
tp46217
(icodemend.demo.code_suggest
Element
p46218
(dp46219
g10
I23
sg11
S'draw a bounding box around self .'
p46220
sg12
Vannotate.bbox
p46221
sg14
(lp46222
g33051
a(icodemend.demo.code_suggest
Element
p46223
(dp46224
g10
I1
sg11
S''
sg12
Vannotate.bbox.{'facecolor': 'white'}
p46225
sg14
(lp46226
sg2
S"{'facecolor': 'white'}"
p46227
sbasg2
g46216
sbs(g965
g118
S'1'
tp46228
g37973
s(S'barbs'
p46229
S'closed'
p46230
tp46231
(icodemend.demo.code_suggest
Element
p46232
(dp46233
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p46234
sg12
Vbarbs.closed
p46235
sg14
(lp46236
sg2
g46230
sbs(g117
g118
g28039
tp46237
g28035
s(S'plot_day_summary_oclh'
p46238
g33569
tp46239
g33564
s(g125
g132
S"'gray'"
p46240
tp46241
(icodemend.demo.code_suggest
Element
p46242
(dp46243
g10
I1
sg11
S''
sg12
Vaxvline.color.'gray'
p46244
sg14
(lp46245
sg2
g46240
sbs(g117
g118
g28519
tp46246
g28515
s(g4998
g325
g21831
tp46247
(icodemend.demo.code_suggest
Element
p46248
(dp46249
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.varvid
p46250
sg14
(lp46251
sg2
g21831
sbs(S'ttfFontProperty'
p46252
S'font'
p46253
tp46254
(icodemend.demo.code_suggest
Element
p46255
(dp46256
g10
I0
sg11
S'font is a ft2font instance .'
p46257
sg12
VttfFontProperty.font
p46258
sg14
(lp46259
sg2
g46253
sbs(S'iter_segments'
p46260
g42457
tp46261
g42452
s(S'savefig'
p46262
S'bbox_inches'
p46263
tp46264
(icodemend.demo.code_suggest
Element
p46265
(dp46266
g10
I71
sg11
S"bbox in inches . only the given portion of the figure is saved . if ' tight ' , try to figure out the tight bbox of the figure ."
p46267
sg12
Vsavefig.bbox_inches
p46268
sg14
(lp46269
(icodemend.demo.code_suggest
Element
p46270
(dp46271
g10
I61
sg11
S''
sg12
Vsavefig.bbox_inches.'tight'
p46272
sg14
(lp46273
sg2
S"'tight'"
p46274
sba(icodemend.demo.code_suggest
Element
p46275
(dp46276
g10
I4
sg11
S''
sg12
Vsavefig.bbox_inches.extent
p46277
sg14
(lp46278
sg2
g785
sbag42317
asg2
g46263
sbs(g1003
S'bootstrap'
p46279
g865
tp46280
g39768
s(g944
g132
g35730
tp46281
g35726
s(S'set_linestyle'
p46282
g15983
tp46283
g15978
sS'points_to_pixels'
p46284
(icodemend.demo.code_suggest
Element
p46285
(dp46286
g10
I7
sg11
S'convert points to display units'
p46287
sg12
Vpoints_to_pixels
p46288
sg14
(lp46289
sg2
g46284
sbs(S'eventplot'
p46290
g23487
tp46291
g23482
s(g16
g132
g21365
tp46292
(icodemend.demo.code_suggest
Element
p46293
(dp46294
g10
I2
sg11
S''
sg12
Vbar.color.cs
p46295
sg14
(lp46296
sg2
g21365
sbs(g109
g3075
S'1'
tp46297
(icodemend.demo.code_suggest
Element
p46298
(dp46299
g10
I1
sg11
S''
sg12
Vsavefig.dpi.1
p46300
sg14
(lp46301
sg2
S'1'
sbs(g8352
g583
g15089
tp46302
g15085
s(g252
g13469
g14542
tp46303
g14538
s(g93
g4800
g25349
tp46304
g25345
s(S'set_aspect'
p46305
S'anchor'
p46306
S"'C'"
p46307
tp46308
(icodemend.demo.code_suggest
Element
p46309
(dp46310
g10
I1
sg11
S''
sg12
Vset_aspect.anchor.'C'
p46311
sg14
(lp46312
sg2
g46307
sbs(S'angle_spectrum'
p46313
g18690
tp46314
g18685
s(S'barh'
p46315
S'agg_filter'
p46316
tp46317
(icodemend.demo.code_suggest
Element
p46318
(dp46319
g10
I0
sg11
S'set agg_filter fuction .'
p46320
sg12
Vbarh.agg_filter
p46321
sg14
(lp46322
sg2
g46316
sbs(S'hist'
p46323
S'linestyle'
p46324
tp46325
(icodemend.demo.code_suggest
Element
p46326
(dp46327
g10
I1
sg11
S'set the patch linestyle'
p46328
sg12
Vhist.linestyle
p46329
sg14
(lp46330
(icodemend.demo.code_suggest
Element
p46331
(dp46332
g10
I1
sg11
S''
sg12
Vhist.linestyle.'dashed'
p46333
sg14
(lp46334
sg2
S"'dashed'"
p46335
sbasg2
g46324
sbs(g944
g2364
S'neg_xerr'
p46336
tp46337
(icodemend.demo.code_suggest
Element
p46338
(dp46339
g10
I1
sg11
S''
sg12
Vbarh.xerr.neg_xerr
p46340
sg14
(lp46341
sg2
g46336
sbs(g1170
g2251
g46335
tp46342
g46331
sS'__call__'
p46343
(icodemend.demo.code_suggest
Element
p46344
(dp46345
g10
I2
sg11
S'returns a masked array containing interpolated values at the specified x,y points .'
p46346
sg12
V__call__
p46347
sg14
(lp46348
g43486
ag24242
ag33240
asg2
g46343
sbs(g5848
S'valfmt'
p46349
S"'%d'"
p46350
tp46351
(icodemend.demo.code_suggest
Element
p46352
(dp46353
g10
I4
sg11
S''
sg12
VSlider.valfmt.'%d'
p46354
sg14
(lp46355
sg2
g46350
sbs(S'plot_day_summary2_ochl'
p46356
g41156
tp46357
g41151
s(S'quiverkey'
p46358
S'coordinates'
p46359
g36654
tp46360
g36650
s(g252
g253
g14086
tp46361
g14082
sS'stop'
p46362
(icodemend.demo.code_suggest
Element
p46363
(dp46364
g10
I0
sg11
S'stop the timer .'
p46365
sg12
Vstop
p46366
sg14
(lp46367
sg2
g46362
sbs(S'axhline'
p46368
g3801
tp46369
g3796
s(S'arrow'
p46370
g2458
tp46371
g2449
s(S'to_rgba'
p46372
g12973
tp46373
g12968
s(S'csd'
p46374
S'visible'
p46375
tp46376
(icodemend.demo.code_suggest
Element
p46377
(dp46378
g10
I0
sg11
S"set the artist 's visiblity ."
p46379
sg12
Vcsd.visible
p46380
sg14
(lp46381
sg2
g46375
sbs(S'errorbar'
p46382
S'markeredgewidth'
p46383
tp46384
(icodemend.demo.code_suggest
Element
p46385
(dp46386
g10
I0
sg11
S'set the marker edge width in points'
p46387
sg12
Verrorbar.markeredgewidth
p46388
sg14
(lp46389
sg2
g46383
sbs(g117
g118
g27591
tp46390
g27587
s(S'aliased_name'
p46391
S's'
tp46392
(icodemend.demo.code_suggest
Element
p46393
(dp46394
g10
I0
sg11
S"return ' propname or alias ' if s has an alias , else return propname ."
p46395
sg12
Valiased_name.s
p46396
sg14
(lp46397
sg2
S's'
sbs(S'imshow'
p46398
S'X'
tp46399
g9972
s(S'psd'
p46400
g37036
tp46401
g37031
s(S'unmasked_index_ranges'
p46402
S'N'
tp46403
g7349
s(S'axvline'
p46404
S'fillstyle'
p46405
tp46406
(icodemend.demo.code_suggest
Element
p46407
(dp46408
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p46409
sg12
Vaxvline.fillstyle
p46410
sg14
(lp46411
sg2
g46405
sbs(g101
g118
g22060
tp46412
g22056
sS'bar'
p46413
(icodemend.demo.code_suggest
Element
p46414
(dp46415
g10
I445
sg11
S'make a bar plot .'
p46416
sg12
Vbar
p46417
sg14
(lp46418
(icodemend.demo.code_suggest
Element
p46419
(dp46420
g10
I233
sg11
S'the colors of the bar faces'
p46421
sg12
Vbar.color
p46422
sg14
(lp46423
(icodemend.demo.code_suggest
Element
p46424
(dp46425
g10
I42
sg11
S''
sg12
Vbar.color.'r'
p46426
sg14
(lp46427
sg2
S"'r'"
p46428
sbag41485
a(icodemend.demo.code_suggest
Element
p46429
(dp46430
g10
I19
sg11
S''
sg12
Vbar.color.'g'
p46431
sg14
(lp46432
sg2
S"'g'"
p46433
sba(icodemend.demo.code_suggest
Element
p46434
(dp46435
g10
I14
sg11
S''
sg12
Vbar.color.'y'
p46436
sg14
(lp46437
sg2
S"'y'"
p46438
sba(icodemend.demo.code_suggest
Element
p46439
(dp46440
g10
I11
sg11
S''
sg12
Vbar.color.color
p46441
sg14
(lp46442
sg2
g132
sbag7461
ag45684
ag26244
ag37414
ag40925
a(icodemend.demo.code_suggest
Element
p46443
(dp46444
g10
I4
sg11
S''
sg12
Vbar.color.'blue'
p46445
sg14
(lp46446
sg2
S"'blue'"
p46447
sba(icodemend.demo.code_suggest
Element
p46448
(dp46449
g10
I4
sg11
S''
sg12
Vbar.color.'grey'
p46450
sg14
(lp46451
sg2
S"'grey'"
p46452
sbag43411
ag7115
ag42074
ag23264
ag31411
ag38658
ag40155
ag35523
a(icodemend.demo.code_suggest
Element
p46453
(dp46454
g10
I2
sg11
S''
sg12
Vbar.color.'cyan'
p46455
sg14
(lp46456
sg2
S"'cyan'"
p46457
sbag39420
ag46293
ag22523
ag20450
a(icodemend.demo.code_suggest
Element
p46458
(dp46459
g10
I1
sg11
S''
sg12
Vbar.color.'#33CC33'
p46460
sg14
(lp46461
sg2
S"'#33CC33'"
p46462
sbag27086
ag16609
a(icodemend.demo.code_suggest
Element
p46463
(dp46464
g10
I1
sg11
S''
sg12
Vbar.color.'#6699FF'
p46465
sg14
(lp46466
sg2
S"'#6699FF'"
p46467
sba(icodemend.demo.code_suggest
Element
p46468
(dp46469
g10
I1
sg11
S''
sg12
Vbar.color.'#76787a'
p46470
sg14
(lp46471
sg2
S"'#76787a'"
p46472
sba(icodemend.demo.code_suggest
Element
p46473
(dp46474
g10
I1
sg11
S''
sg12
Vbar.color.'#88aa33'
p46475
sg14
(lp46476
sg2
S"'#88aa33'"
p46477
sba(icodemend.demo.code_suggest
Element
p46478
(dp46479
g10
I1
sg11
S''
sg12
Vbar.color.'#A0D0D0'
p46480
sg14
(lp46481
sg2
S"'#A0D0D0'"
p46482
sba(icodemend.demo.code_suggest
Element
p46483
(dp46484
g10
I1
sg11
S''
sg12
Vbar.color.'#FF6666'
p46485
sg14
(lp46486
sg2
S"'#FF6666'"
p46487
sbag44613
ag7514
a(icodemend.demo.code_suggest
Element
p46488
(dp46489
g10
I1
sg11
S''
sg12
Vbar.color.'0/6'
p46490
sg14
(lp46491
sg2
S"'0.6'"
p46492
sbag18403
a(icodemend.demo.code_suggest
Element
p46493
(dp46494
g10
I1
sg11
S''
sg12
Vbar.color.'ForestGreen'
p46495
sg14
(lp46496
sg2
S"'ForestGreen'"
p46497
sba(icodemend.demo.code_suggest
Element
p46498
(dp46499
g10
I1
sg11
S''
sg12
Vbar.color.'black'
p46500
sg14
(lp46501
sg2
S"'black'"
p46502
sbag30689
ag12369
ag20232
ag3899
ag45537
ag35210
ag32234
a(icodemend.demo.code_suggest
Element
p46503
(dp46504
g10
I1
sg11
S''
sg12
Vbar.color.C
p46505
sg14
(lp46506
sg2
S'C'
sbag35086
ag26256
ag40100
ag20649
a(icodemend.demo.code_suggest
Element
p46507
(dp46508
g10
I1
sg11
S''
sg12
Vbar.color.c2
p46509
sg14
(lp46510
sg2
g21470
sbag27125
ag11763
ag2829
ag7492
ag18579
a(icodemend.demo.code_suggest
Element
p46511
(dp46512
g10
I1
sg11
S''
sg12
Vbar.color.my_colors
p46513
sg14
(lp46514
sg2
g24646
sbasg2
S'color'
p46515
sbag41896
ag3175
a(icodemend.demo.code_suggest
Element
p46516
(dp46517
g10
I71
sg11
S'the y coordinate(s ) of the bars default : none'
p46518
sg12
Vbar.bottom
p46519
sg14
(lp46520
(icodemend.demo.code_suggest
Element
p46521
(dp46522
g10
I5
sg11
S''
sg12
Vbar.bottom.0/0
p46523
sg14
(lp46524
sg2
S'0.0'
p46525
sba(icodemend.demo.code_suggest
Element
p46526
(dp46527
g10
I4
sg11
S''
sg12
Vbar.bottom.A
p46528
sg14
(lp46529
sg2
S'A'
sbag2163
ag43272
ag36801
ag20469
ag16058
ag25198
a(icodemend.demo.code_suggest
Element
p46530
(dp46531
g10
I2
sg11
S''
sg12
Vbar.bottom.menMeans
p46532
sg14
(lp46533
sg2
S'menMeans'
p46534
sbag44633
ag43922
a(icodemend.demo.code_suggest
Element
p46535
(dp46536
g10
I1
sg11
S''
sg12
Vbar.bottom.0/89
p46537
sg14
(lp46538
sg2
S'0.89'
p46539
sbag40726
ag31758
a(icodemend.demo.code_suggest
Element
p46540
(dp46541
g10
I1
sg11
S''
sg12
Vbar.bottom.NonOECD
p46542
sg14
(lp46543
sg2
S'NonOECD'
p46544
sba(icodemend.demo.code_suggest
Element
p46545
(dp46546
g10
I1
sg11
S''
sg12
Vbar.bottom.b_rel
p46547
sg14
(lp46548
sg2
S'b_rel'
p46549
sbag13078
a(icodemend.demo.code_suggest
Element
p46550
(dp46551
g10
I1
sg11
S''
sg12
Vbar.bottom.bottoms
p46552
sg14
(lp46553
sg2
S'bottoms'
p46554
sba(icodemend.demo.code_suggest
Element
p46555
(dp46556
g10
I1
sg11
S''
sg12
Vbar.bottom.data1_rel
p46557
sg14
(lp46558
sg2
S'data1_rel'
p46559
sba(icodemend.demo.code_suggest
Element
p46560
(dp46561
g10
I1
sg11
S''
sg12
Vbar.bottom.good
p46562
sg14
(lp46563
sg2
g13832
sba(icodemend.demo.code_suggest
Element
p46564
(dp46565
g10
I1
sg11
S''
sg12
Vbar.bottom.kitchen
p46566
sg14
(lp46567
sg2
S'kitchen'
p46568
sbag37700
ag492
ag42740
ag38114
ag6322
ag23704
ag22536
a(icodemend.demo.code_suggest
Element
p46569
(dp46570
g10
I1
sg11
S''
sg12
Vbar.bottom.y1
p46571
sg14
(lp46572
sg2
S'y1'
p46573
sbasg2
S'bottom'
p46574
sbag12736
ag36073
ag32366
ag13804
ag1238
ag41524
ag36304
ag5175
ag42101
ag45693
ag36568
a(icodemend.demo.code_suggest
Element
p46575
(dp46576
g10
I0
sg11
S'if not none , will be used to generate errorbar(s ) on the bar chart default : none'
p46577
sg12
Vbar.xerr
p46578
sg14
(lp46579
sg2
S'xerr'
p46580
sbasg2
g46413
sbsS'remove_tool'
p46581
(icodemend.demo.code_suggest
Element
p46582
(dp46583
g10
I0
sg11
S'remove tool from toolmanager'
p46584
sg12
Vremove_tool
p46585
sg14
(lp46586
(icodemend.demo.code_suggest
Element
p46587
(dp46588
g10
I0
sg11
S'name of the tool'
p46589
sg12
Vremove_tool.name
p46590
sg14
(lp46591
sg2
S'name'
p46592
sbasg2
g46581
sbsS'blend_overlay'
p46593
(icodemend.demo.code_suggest
Element
p46594
(dp46595
g10
I0
sg11
S'combines an rgb image with an intensity map using " overlay " blending .'
p46596
sg12
Vblend_overlay
p46597
sg14
(lp46598
(icodemend.demo.code_suggest
Element
p46599
(dp46600
g10
I0
sg11
S'an mxnx1 array of floats ranging from 0 to 1 ( grayscale image ) .'
p46601
sg12
Vblend_overlay.intensity
p46602
sg14
(lp46603
sg2
S'intensity'
p46604
sbag24728
asg2
g46593
sbsS'ioff'
p46605
(icodemend.demo.code_suggest
Element
p46606
(dp46607
g10
I16
sg11
S'turn interactive mode off .'
p46608
sg12
Vioff
p46609
sg14
(lp46610
sg2
g46605
sbs(S'complex_spectrum'
p46611
S'x'
tp46612
g32927
s(S'set_message'
p46613
S's'
tp46614
g34956
s(S'magnitude_spectrum'
p46615
S'ydata'
p46616
tp46617
(icodemend.demo.code_suggest
Element
p46618
(dp46619
g10
I0
sg11
S'set the data np.array for y'
p46620
sg12
Vmagnitude_spectrum.ydata
p46621
sg14
(lp46622
sg2
g46616
sbsS'contourf'
p46623
(icodemend.demo.code_suggest
Element
p46624
(dp46625
g10
I168
sg11
S'plot contours .'
p46626
sg12
Vcontourf
p46627
sg14
(lp46628
g16452
ag3960
a(icodemend.demo.code_suggest
Element
p46629
(dp46630
g10
I13
sg11
S'the alpha blending value'
p46631
sg12
Vcontourf.alpha
p46632
sg14
(lp46633
g769
a(icodemend.demo.code_suggest
Element
p46634
(dp46635
g10
I3
sg11
S''
sg12
Vcontourf.alpha.0/75
p46636
sg14
(lp46637
sg2
S'0.75'
p46638
sba(icodemend.demo.code_suggest
Element
p46639
(dp46640
g10
I2
sg11
S''
sg12
Vcontourf.alpha.0/5
p46641
sg14
(lp46642
sg2
S'0.5'
p46643
sba(icodemend.demo.code_suggest
Element
p46644
(dp46645
g10
I1
sg11
S''
sg12
Vcontourf.alpha.0/3
p46646
sg14
(lp46647
sg2
S'0.3'
p46648
sbag43345
a(icodemend.demo.code_suggest
Element
p46649
(dp46650
g10
I1
sg11
S''
sg12
Vcontourf.alpha.0/66
p46651
sg14
(lp46652
sg2
S'0.66'
p46653
sbag35866
asg2
S'alpha'
p46654
sbag39448
ag19269
a(icodemend.demo.code_suggest
Element
p46655
(dp46656
g10
I8
sg11
S'if not none , either or both of these values will be supplied to the matplotlib.colors.normalize instance , overriding the default color scaling based on levels .'
p46657
sg12
Vcontourf.vmax
p46658
sg14
(lp46659
(icodemend.demo.code_suggest
Element
p46660
(dp46661
g10
I1
sg11
S''
sg12
Vcontourf.vmax.1
p46662
sg14
(lp46663
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p46664
(dp46665
g10
I1
sg11
S''
sg12
Vcontourf.vmax.8
p46666
sg14
(lp46667
sg2
S'8'
sbag20654
a(icodemend.demo.code_suggest
Element
p46668
(dp46669
g10
I1
sg11
S''
sg12
Vcontourf.vmax.v_max
p46670
sg14
(lp46671
sg2
S'v_max'
p46672
sbasg2
S'vmax'
p46673
sbag6082
a(icodemend.demo.code_suggest
Element
p46674
(dp46675
g10
I4
sg11
S"if none , the first value of z will correspond to the lower left corner , location ( 0,0 ) . if ' image ' , the rc value for image.origin will be used . this keyword is not active if x and y are specified in the call to contour ."
p46676
sg12
Vcontourf.origin
p46677
sg14
(lp46678
g10020
a(icodemend.demo.code_suggest
Element
p46679
(dp46680
g10
I1
sg11
S''
sg12
Vcontourf.origin.'lower'
p46681
sg14
(lp46682
sg2
S"'lower'"
p46683
sbasg2
S'origin'
p46684
sbag40007
a(icodemend.demo.code_suggest
Element
p46685
(dp46686
g10
I2
sg11
S"enable antialiasing , overriding the defaults . for filled contours , the default is true . for line contours , it is taken from rcparams['lines.antialiased ' ] ."
p46687
sg12
Vcontourf.antialiased
p46688
sg14
(lp46689
(icodemend.demo.code_suggest
Element
p46690
(dp46691
g10
I2
sg11
S''
sg12
Vcontourf.antialiased.True
p46692
sg14
(lp46693
sg2
g438
sbasg2
S'antialiased'
p46694
sbag41723
a(icodemend.demo.code_suggest
Element
p46695
(dp46696
g10
I0
sg11
S"enable/disable corner masking , which only has an effect if z is a masked array . if false , any quad touching a masked point is masked out . if true , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . if ' legacy ' , the old contouring algorithm is used , which is equivalent to false and is deprecated , only remaining whilst the new algorithm is tested fully . if not specified , the default is taken from rcparams['contour.corner_mask ' ] , which is true unless it has been modified .|||enable antialiasing , overriding the defaults . for filled contours , the default is true . for line contours , it is taken from rcparams['lines.antialiased ' ] ."
p46697
sg12
Vcontourf.False
p46698
sg14
(lp46699
sg2
S'False'
p46700
sba(icodemend.demo.code_suggest
Element
p46701
(dp46702
g10
I0
sg11
S"if linestyles is none , the default is ' solid ' unless the lines are monochrome . in that case , negative contours will take their linestyle from the matplotlibrc contour.negative_linestyle setting . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . if this iterable is shorter than the number of contour levels it will be repeated as necessary .|||if none , the colormap specified by cmap will be used . if a string , like ' r ' or ' red ' , all levels will be plotted in this color . if a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||if locator is none , the default maxnlocator is used . the locator is used to determine the contour levels if they are not given explicitly via the v argument .|||a matplotlib.colors.normalize instance for scaling data values to colors . if norm is none and colors is none , the default linear scaling is used .|||if none , the first value of z will correspond to the lower left corner , location ( 0,0 ) . if ' image ' , the rc value for image.origin will be used . this keyword is not active if x and y are specified in the call to contour .|||a cm colormap instance or none . if cmap is none and colors is none , a default colormap is used .|||if linewidths is none , the default width in lines.linewidth in matplotlibrc is used . if a number , all levels will be plotted with this linewidth . if a tuple , different levels will be plotted with different linewidths in the order specified .|||override axis units by specifying an instance of a matplotlib.units.conversioninterface .|||if not none , either or both of these values will be supplied to the matplotlib.colors.normalize instance , overriding the default color scaling based on levels ."
p46703
sg12
Vcontourf.None
p46704
sg14
(lp46705
sg2
S'None'
p46706
sbag38013
a(icodemend.demo.code_suggest
Element
p46707
(dp46708
g10
I0
sg11
S'fill the len(v)-1 regions between the values in v , which must be in increasing order .|||draw contour lines at the values specified in sequence v , which must be in increasing order .'
p46709
sg12
Vcontourf.V
p46710
sg14
(lp46711
sg2
S'V'
sba(icodemend.demo.code_suggest
Element
p46712
(dp46713
g10
I0
sg11
S'x , y specify the ( x , y ) coordinates of the surface|||x and y must both be 2-d with the same shape as z , or they must both be 1-d such that len(x ) is the number of columns in z and len(y ) is the number of rows in z .'
p46714
sg12
Vcontourf.X
p46715
sg14
(lp46716
sg2
S'X'
sbag305
a(icodemend.demo.code_suggest
Element
p46717
(dp46718
g10
I0
sg11
S'make a contour plot of an array z . the level values are chosen automatically .|||x and y must both be 2-d with the same shape as z , or they must both be 1-d such that len(x ) is the number of columns in z and len(y ) is the number of rows in z .'
p46719
sg12
Vcontourf.Z
p46720
sg14
(lp46721
sg2
S'Z'
sbag31655
ag7137
ag36707
a(icodemend.demo.code_suggest
Element
p46722
(dp46723
g10
I0
sg11
S'if linewidths is none , the default width in lines.linewidth in matplotlibrc is used . if a number , all levels will be plotted with this linewidth . if a tuple , different levels will be plotted with different linewidths in the order specified .'
p46724
sg12
Vcontourf.linewidths
p46725
sg14
(lp46726
sg2
S'linewidths'
p46727
sba(icodemend.demo.code_suggest
Element
p46728
(dp46729
g10
I0
sg11
S'if locator is none , the default maxnlocator is used . the locator is used to determine the contour levels if they are not given explicitly via the v argument .'
p46730
sg12
Vcontourf.locator
p46731
sg14
(lp46732
sg2
S'locator'
p46733
sbag3113
ag35022
a(icodemend.demo.code_suggest
Element
p46734
(dp46735
g10
I0
sg11
S'override axis units by specifying an instance of a matplotlib.units.conversioninterface .'
p46736
sg12
Vcontourf.yunits
p46737
sg14
(lp46738
sg2
S'yunits'
p46739
sba(icodemend.demo.code_suggest
Element
p46740
(dp46741
g10
I0
sg11
S'there is one exception : if the lowest boundary coincides with the minimum value of the z array , then that minimum value will be included in the lowest interval .'
p46742
sg12
Vcontourf.z
p46743
sg14
(lp46744
sg2
S'z'
sba(icodemend.demo.code_suggest
Element
p46745
(dp46746
g10
I0
sg11
S'note : contourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :'
p46747
sg12
Vcontourf.z1
p46748
sg14
(lp46749
sg2
S'z1'
p46750
sba(icodemend.demo.code_suggest
Element
p46751
(dp46752
g10
I0
sg11
S'note : contourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :'
p46753
sg12
Vcontourf.z2
p46754
sg14
(lp46755
sg2
S'z2'
p46756
sbasg2
g46623
sbs(S'rgrids'
p46757
S'marker'
p46758
tp46759
(icodemend.demo.code_suggest
Element
p46760
(dp46761
g10
I0
sg11
S'set the line marker'
p46762
sg12
Vrgrids.marker
p46763
sg14
(lp46764
sg2
g46758
sbs(S'legend'
p46765
g14444
tp46766
g14430
s(S'annotate'
p46767
S'linestyle'
p46768
tp46769
(icodemend.demo.code_suggest
Element
p46770
(dp46771
g10
I0
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p46772
sg12
Vannotate.linestyle
p46773
sg14
(lp46774
sg2
g46768
sbs(g1170
g118
g118
tp46775
(icodemend.demo.code_suggest
Element
p46776
(dp46777
g10
I1
sg11
S''
sg12
Vhist.label.label
p46778
sg14
(lp46779
sg2
g118
sbs(g16
g1262
g1257
tp46780
g1253
s(S'bxp'
p46781
g41655
tp46782
g41650
s(S'thumbnail'
p46783
S'infile'
p46784
tp46785
(icodemend.demo.code_suggest
Element
p46786
(dp46787
g10
I0
sg11
S'have pillow installed|||make a thumbnail of image in infile with output filename thumbfile .'
p46788
sg12
Vthumbnail.infile
p46789
sg14
(lp46790
sg2
g46784
sbs(S'offset_line'
p46791
S'y'
tp46792
g40088
s(S'hexbin'
p46793
g25885
tp46794
g25880
sS'bivariate_normal'
p46795
(icodemend.demo.code_suggest
Element
p46796
(dp46797
g10
I53
sg11
S'bivariate gaussian distribution for equal shape x , y .'
p46798
sg12
Vbivariate_normal
p46799
sg14
(lp46800
(icodemend.demo.code_suggest
Element
p46801
(dp46802
g10
I0
sg11
S'bivariate gaussian distribution for equal shape x , y .'
p46803
sg12
Vbivariate_normal.X
p46804
sg14
(lp46805
sg2
S'X'
sbag6367
asg2
g46795
sbs(S'errorbar'
p46806
S'barlinecols'
p46807
tp46808
(icodemend.demo.code_suggest
Element
p46809
(dp46810
g10
I0
sg11
S'returns ( plotline , caplines , barlinecols ) :'
p46811
sg12
Verrorbar.barlinecols
p46812
sg14
(lp46813
sg2
g46807
sbs(S'shade_rgb'
p46814
S'blend_mode'
p46815
tp46816
(icodemend.demo.code_suggest
Element
p46817
(dp46818
g10
I0
sg11
S'the type of blending used to combine the colormapped data values with the illumination intensity . for backwards compatibility , this defaults to " hsv " . note that for most topographic surfaces , " overlay " or " soft " appear more visually realistic . if a user-defined function is supplied , it is expected to combine an mxnx3 rgb array of floats ( ranging 0 to 1 ) with an mxnx1 hillshade array ( also 0 to 1 ) . ( call signature func(rgb , illum , * * kwargs ) ) additional kwargs supplied to this function will be passed on to the blend_mode function .'
p46819
sg12
Vshade_rgb.blend_mode
p46820
sg14
(lp46821
sg2
g46815
sbsS'get_yaxis_transform'
p46822
(icodemend.demo.code_suggest
Element
p46823
(dp46824
g10
I0
sg11
S'get the transformation used for drawing y-axis labels , ticks and gridlines .'
p46825
sg12
Vget_yaxis_transform
p46826
sg14
(lp46827
sg2
g46822
sbs(S'axhspan'
p46828
g24501
tp46829
g24496
s(S'hist'
p46830
S'n1'
p46831
tp46832
(icodemend.demo.code_suggest
Element
p46833
(dp46834
g10
I0
sg11
S'compute and draw the histogram of x . the return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .'
p46835
sg12
Vhist.n1
p46836
sg14
(lp46837
sg2
g46831
sbs(S'table'
p46838
S'sketch_params'
p46839
tp46840
(icodemend.demo.code_suggest
Element
p46841
(dp46842
g10
I0
sg11
S'sets the sketch parameters .'
p46843
sg12
Vtable.sketch_params
p46844
sg14
(lp46845
sg2
g46839
sbs(S'is_writable_file_like'
p46846
g40789
tp46847
g40784
s(g4371
g666
g4053
tp46848
g17636
s(g16
g1149
g36323
tp46849
g36319
s(g117
g5775
g29397
tp46850
g29393
s(S'magnitude_spectrum'
p46851
S'axes'
p46852
tp46853
(icodemend.demo.code_suggest
Element
p46854
(dp46855
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p46856
sg12
Vmagnitude_spectrum.axes
p46857
sg14
(lp46858
sg2
g46852
sbs(g4340
S'fontdict'
p46859
g17000
tp46860
g32359
s(g101
g4274
g13397
tp46861
g21706
s(g324
g785
g9372
tp46862
g9368
s(g6603
S'maxlags'
p46863
g35427
tp46864
g35423
s(S'errorbar'
p46865
S'plotline'
p46866
tp46867
(icodemend.demo.code_suggest
Element
p46868
(dp46869
g10
I0
sg11
S'returns ( plotline , caplines , barlinecols ) :'
p46870
sg12
Verrorbar.plotline
p46871
sg14
(lp46872
sg2
g46866
sbs(g117
g118
g27984
tp46873
g27980
s(S'phase_spectrum'
p46874
S'markersize'
p46875
tp46876
(icodemend.demo.code_suggest
Element
p46877
(dp46878
g10
I0
sg11
S'set the marker size in points'
p46879
sg12
Vphase_spectrum.markersize
p46880
sg14
(lp46881
sg2
g46875
sbs(S'poly_between'
p46882
S'ylower'
p46883
tp46884
(icodemend.demo.code_suggest
Element
p46885
(dp46886
g10
I0
sg11
S'given a sequence of x , ylower and yupper , return the polygon that fills the regions between them . ylower or yupper can be scalar or iterable . if they are iterable , they must be equal in length to x .'
p46887
sg12
Vpoly_between.ylower
p46888
sg14
(lp46889
sg2
g46883
sbs(S'set_ylabel'
p46890
g36031
tp46891
g36021
s(S'polar'
p46892
S'x'
tp46893
g37757
sS'format_xdata'
p46894
(icodemend.demo.code_suggest
Element
p46895
(dp46896
g10
I1
sg11
S'return x string formatted .'
p46897
sg12
Vformat_xdata
p46898
sg14
(lp46899
g39933
asg2
g46894
sbsS'get_units'
p46900
(icodemend.demo.code_suggest
Element
p46901
(dp46902
g10
I0
sg11
S'return the units for axis'
p46903
sg12
Vget_units
p46904
sg14
(lp46905
sg2
g46900
sbs(S'text'
p46906
S'size'
p46907
tp46908
(icodemend.demo.code_suggest
Element
p46909
(dp46910
g10
I33
sg11
S'set the font size .'
p46911
sg12
Vtext.size
p46912
sg14
(lp46913
(icodemend.demo.code_suggest
Element
p46914
(dp46915
g10
I6
sg11
S''
sg12
Vtext.size.'medium'
p46916
sg14
(lp46917
sg2
S"'medium'"
p46918
sba(icodemend.demo.code_suggest
Element
p46919
(dp46920
g10
I6
sg11
S''
sg12
Vtext.size.30
p46921
sg14
(lp46922
sg2
S'30'
p46923
sbag13293
ag41743
ag24765
ag20717
a(icodemend.demo.code_suggest
Element
p46924
(dp46925
g10
I2
sg11
S''
sg12
Vtext.size.25
p46926
sg14
(lp46927
sg2
S'25'
p46928
sba(icodemend.demo.code_suggest
Element
p46929
(dp46930
g10
I2
sg11
S''
sg12
Vtext.size.50
p46931
sg14
(lp46932
sg2
S'50'
p46933
sbag10308
ag5997
a(icodemend.demo.code_suggest
Element
p46934
(dp46935
g10
I1
sg11
S''
sg12
Vtext.size.14
p46936
sg14
(lp46937
sg2
S'14'
p46938
sbag630
a(icodemend.demo.code_suggest
Element
p46939
(dp46940
g10
I1
sg11
S''
sg12
Vtext.size.200
p46941
sg14
(lp46942
sg2
S'200'
p46943
sbag40758
ag33758
asg2
g46907
sbs(g101
S'c'
g21365
tp46944
g21361
sS'get_verticalalignment'
p46945
(icodemend.demo.code_suggest
Element
p46946
(dp46947
g10
I0
sg11
S'return the vertical alignment as string .'
p46948
sg12
Vget_verticalalignment
p46949
sg14
(lp46950
sg2
g46945
sbs(g139
g140
g1578
tp46951
g1574
s(g139
g140
g1543
tp46952
g1539
s(S'axhline'
p46953
g3531
tp46954
g3526
s(g4355
g45931
g45936
tp46955
g45932
sS'trigger'
p46956
(icodemend.demo.code_suggest
Element
p46957
(dp46958
g10
I0
sg11
S'call draw_rubberband or remove_rubberband based on data calls enable or disable based on toggled value called when this tool gets used'
p46959
sg12
Vtrigger
p46960
sg14
(lp46961
(icodemend.demo.code_suggest
Element
p46962
(dp46963
g10
I0
sg11
S'extra data'
p46964
sg12
Vtrigger.data: object
p46965
sg14
(lp46966
sg2
S'data: object'
p46967
sba(icodemend.demo.code_suggest
Element
p46968
(dp46969
g10
I0
sg11
S'the canvas event that caused this tool to be called'
p46970
sg12
Vtrigger.event: `Event`
p46971
sg14
(lp46972
sg2
S'event: `Event`'
p46973
sbag27108
asg2
g46956
sbs(S'vlines'
p46974
S'hatch'
p46975
tp46976
(icodemend.demo.code_suggest
Element
p46977
(dp46978
g10
I0
sg11
S'set the hatching pattern'
p46979
sg12
Vvlines.hatch
p46980
sg14
(lp46981
sg2
g46975
sbs(S'pcolormesh'
p46982
S'linestyle'
p46983
tp46984
(icodemend.demo.code_suggest
Element
p46985
(dp46986
g10
I0
sg11
S'set the patch linestyle|||set the linestyle(s ) for the collection .'
p46987
sg12
Vpcolormesh.linestyle
p46988
sg14
(lp46989
sg2
g46983
sbs(S'quiver'
p46990
g30895
tp46991
g30890
s(g252
g4340
g566
tp46992
g562
s(g766
g102
g46638
tp46993
g46634
s(S'arrow'
p46994
g2695
tp46995
g2690
s(S'to_rgb'
p46996
g20139
tp46997
g20134
s(g766
g515
g39461
tp46998
g39457
s(S'quiver'
p46999
g31105
tp47000
g31100
s(S'eventplot'
p47001
g23415
tp47002
g23410
s(S'quiver'
p47003
g30911
tp47004
g30906
s(S'axhspan'
p47005
g24280
tp47006
g24275
s(g324
g325
S'c'
tp47007
g9105
s(S'pcolor'
p47008
S'xticks'
p47009
tp47010
(icodemend.demo.code_suggest
Element
p47011
(dp47012
g10
I0
sg11
S'set the x ticks with list of ticks'
p47013
sg12
Vpcolor.xticks
p47014
sg14
(lp47015
sg2
g47009
sbs(g452
g118
S"'DR errors'"
p47016
tp47017
(icodemend.demo.code_suggest
Element
p47018
(dp47019
g10
I1
sg11
S''
sg12
Verrorbar.label.'DR errors'
p47020
sg14
(lp47021
sg2
g47016
sbs(g101
g325
g21774
tp47022
g21770
s(g101
S'c'
g21360
tp47023
g21356
s(g958
g8890
S'1'
tp47024
g22855
sS'get_title'
p47025
(icodemend.demo.code_suggest
Element
p47026
(dp47027
g10
I2
sg11
S'get an axes title . return text instance for the legend title'
p47028
sg12
Vget_title
p47029
sg14
(lp47030
(icodemend.demo.code_suggest
Element
p47031
(dp47032
g10
I0
sg11
S"which title to get , defaults to ' center '"
p47033
sg12
Vget_title.loc
p47034
sg14
(lp47035
sg2
S'loc'
p47036
sbasg2
g47025
sbs(S'legend'
p47037
g13991
tp47038
g13883
sS'get_figure'
p47039
(icodemend.demo.code_suggest
Element
p47040
(dp47041
g10
I9
sg11
S'return the figure instance the artist belongs to .'
p47042
sg12
Vget_figure
p47043
sg14
(lp47044
sg2
g47039
sbs(S'AnchoredText'
p47045
S'pad'
p47046
tp47047
(icodemend.demo.code_suggest
Element
p47048
(dp47049
g10
I0
sg11
S'pad between the text and the frame as fraction of the font size .'
p47050
sg12
VAnchoredText.pad
p47051
sg14
(lp47052
sg2
g47046
sbs(S'set_yscale'
p47053
g15557
tp47054
g15552
s(S'text'
p47055
S'picker'
p47056
tp47057
(icodemend.demo.code_suggest
Element
p47058
(dp47059
g10
I1
sg11
S'set the epsilon for picking used by this artist'
p47060
sg12
Vtext.picker
p47061
sg14
(lp47062
g43944
asg2
g47056
sbs(g1003
g35993
g438
tp47063
g39726
s(S'errorbar'
p47064
S'xscale'
p47065
tp47066
(icodemend.demo.code_suggest
Element
p47067
(dp47068
g10
I0
sg11
S'set the scaling of the x-axis'
p47069
sg12
Verrorbar.xscale
p47070
sg14
(lp47071
sg2
g47065
sbs(g1170
g132
S"'green'"
p47072
tp47073
(icodemend.demo.code_suggest
Element
p47074
(dp47075
g10
I3
sg11
S''
sg12
Vhist.color.'green'
p47076
sg14
(lp47077
sg2
g47072
sbs(g1170
g437
S'1'
tp47078
g16033
sS'evaluate'
p47079
(icodemend.demo.code_suggest
Element
p47080
(dp47081
g10
I2
sg11
S'evaluate the estimated pdf on a set of points .'
p47082
sg12
Vevaluate
p47083
sg14
(lp47084
g8123
asg2
g47079
sbs(g117
g118
g27814
tp47085
g27810
s(g93
g94
g5536
tp47086
g5532
s(S'quiver'
p47087
g30985
tp47088
g30980
s(S'hexbin'
p47089
g25987
tp47090
g25982
s(S'plot'
p47091
g29372
tp47092
g29359
sS'candlestick2_ohlc'
p47093
(icodemend.demo.code_suggest
Element
p47094
(dp47095
g10
I0
sg11
S'represent the open , close as a bar line and high low range as a vertical line .'
p47096
sg12
Vcandlestick2_ohlc
p47097
sg14
(lp47098
(icodemend.demo.code_suggest
Element
p47099
(dp47100
g10
I0
sg11
S'bar transparency'
p47101
sg12
Vcandlestick2_ohlc.alpha
p47102
sg14
(lp47103
sg2
S'alpha'
p47104
sba(icodemend.demo.code_suggest
Element
p47105
(dp47106
g10
I0
sg11
S'an axes instance to plot to'
p47107
sg12
Vcandlestick2_ohlc.ax
p47108
sg14
(lp47109
sg2
S'ax'
p47110
sbag45849
a(icodemend.demo.code_suggest
Element
p47111
(dp47112
g10
I0
sg11
S'the color of the lines where close < open'
p47113
sg12
Vcandlestick2_ohlc.colordown
p47114
sg14
(lp47115
sg2
S'colordown'
p47116
sbag13423
a(icodemend.demo.code_suggest
Element
p47117
(dp47118
g10
I0
sg11
S'sequence of high values'
p47119
sg12
Vcandlestick2_ohlc.highs
p47120
sg14
(lp47121
sg2
S'highs'
p47122
sbag40810
ag14939
ag5878
asg2
g47093
sbs(S'figtext'
p47123
g11389
tp47124
g11384
s(S'csd'
p47125
S'marker'
p47126
tp47127
(icodemend.demo.code_suggest
Element
p47128
(dp47129
g10
I0
sg11
S'set the line marker'
p47130
sg12
Vcsd.marker
p47131
sg14
(lp47132
sg2
g47126
sbs(S'add_axes'
p47133
S'color_cycle'
p47134
tp47135
(icodemend.demo.code_suggest
Element
p47136
(dp47137
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p47138
sg12
Vadd_axes.color_cycle
p47139
sg14
(lp47140
sg2
g47134
sbs(S'eventplot'
p47141
g23559
tp47142
g23554
s(S'axvline'
p47143
S'clip_box'
p47144
tp47145
(icodemend.demo.code_suggest
Element
p47146
(dp47147
g10
I0
sg11
S"set the artist 's clip bbox ."
p47148
sg12
Vaxvline.clip_box
p47149
sg14
(lp47150
sg2
g47144
sbs(g101
S'c'
g21336
tp47151
g21332
s(S'semilogx'
p47152
g39120
tp47153
g39115
sS'get_connectionstyle'
p47154
(icodemend.demo.code_suggest
Element
p47155
(dp47156
g10
I0
sg11
S'return the connectionstyle instance'
p47157
sg12
Vget_connectionstyle
p47158
sg14
(lp47159
sg2
g47154
sbs(S'quiver'
p47160
g31009
tp47161
g31004
s(S'psd'
p47162
g36892
tp47163
g36887
sS'set_label2'
p47164
(icodemend.demo.code_suggest
Element
p47165
(dp47166
g10
I0
sg11
S'set the text of ticklabel2'
p47167
sg12
Vset_label2
p47168
sg14
(lp47169
sg2
g47164
sbsS'set_label1'
p47170
(icodemend.demo.code_suggest
Element
p47171
(dp47172
g10
I0
sg11
S'set the text of ticklabel'
p47173
sg12
Vset_label1
p47174
sg14
(lp47175
sg2
g47170
sbs(S'boxplot'
p47176
g39820
tp47177
g39815
s(g117
g118
g27999
tp47178
g27995
s(S'stackplot'
p47179
g10437
tp47180
g10428
s(S'hexbin'
p47181
g26057
tp47182
g26052
s(g5424
g102
S'0.3'
p47183
tp47184
(icodemend.demo.code_suggest
Element
p47185
(dp47186
g10
I1
sg11
S''
sg12
Vgrid.alpha.0/3
p47187
sg14
(lp47188
sg2
g47183
sbs(S'annotate'
p47189
S'family'
p47190
tp47191
(icodemend.demo.code_suggest
Element
p47192
(dp47193
g10
I2
sg11
S'set the font family .'
p47194
sg12
Vannotate.family
p47195
sg14
(lp47196
g38778
ag38077
asg2
g47190
sbs(g252
g253
g14046
tp47197
g14042
s(S'boxplot'
p47198
g39752
tp47199
g39737
s(S'xcorr'
p47200
g35446
tp47201
g35441
s(S'makeMappingArray'
p47202
g46204
tp47203
g46199
sS'get_xaxis_text1_transform'
p47204
(icodemend.demo.code_suggest
Element
p47205
(dp47206
g10
I0
sg11
S'get the transformation used for drawing x-axis labels , which will add the given amount of padding ( in points ) between the axes and the label .'
p47207
sg12
Vget_xaxis_text1_transform
p47208
sg14
(lp47209
g5047
ag34757
asg2
g47204
sbs(g332
g389
g33713
tp47210
g33709
s(S'shade'
p47211
S'cmap'
p47212
tp47213
(icodemend.demo.code_suggest
Element
p47214
(dp47215
g10
I0
sg11
S"the colormap used to color the data array . note that this must be a colormap instance . for example , rather than passing in cmap='gist_earth ' , use cmap=plt.get_cmap('gist_earth ' ) instead ."
p47216
sg12
Vshade.cmap
p47217
sg14
(lp47218
sg2
g47212
sbs(S'vlines'
p47219
S'x'
tp47220
(icodemend.demo.code_suggest
Element
p47221
(dp47222
g10
I3
sg11
S'x-indexes where to plot the lines .'
p47223
sg12
Vvlines.x
p47224
sg14
(lp47225
g22447
ag34877
ag45082
asg2
S'x'
sbsS'send_message'
p47226
(icodemend.demo.code_suggest
Element
p47227
(dp47228
g10
I0
sg11
S'call matplotlib.backend_managers.toolmanager.message_event'
p47229
sg12
Vsend_message
p47230
sg14
(lp47231
sg2
g47226
sbs(S'eventplot'
p47232
g23439
tp47233
g23434
sS'set_offsets'
p47234
(icodemend.demo.code_suggest
Element
p47235
(dp47236
g10
I26
sg11
S'set the offsets for the collection .'
p47237
sg12
Vset_offsets
p47238
sg14
(lp47239
(icodemend.demo.code_suggest
Element
p47240
(dp47241
g10
I0
sg11
S'set the offsets for the collection . offsets can be a scalar or a sequence .'
p47242
sg12
Vset_offsets.offsets
p47243
sg14
(lp47244
sg2
S'offsets'
p47245
sbasg2
g47234
sbs(g7484
S'C'
g865
tp47246
g25693
s(g245
g140
g30343
tp47247
g30339
s(g16
g110
g132
tp47248
g36103
s(g8547
g4334
g438
tp47249
(icodemend.demo.code_suggest
Element
p47250
(dp47251
g10
I11
sg11
S''
sg12
Vpie.shadow.True
p47252
sg14
(lp47253
sg2
g438
sbsS'get_children'
p47254
(icodemend.demo.code_suggest
Element
p47255
(dp47256
g10
I18
sg11
S'return a list of the child artist`s this'
p47257
sg12
Vget_children
p47258
sg14
(lp47259
sg2
g47254
sbs(S'getp'
p47260
S'yticks'
p47261
tp47262
(icodemend.demo.code_suggest
Element
p47263
(dp47264
g10
I0
sg11
S'set the y ticks with list of ticks'
p47265
sg12
Vgetp.yticks
p47266
sg14
(lp47267
sg2
g47261
sbsS'save'
p47268
(icodemend.demo.code_suggest
Element
p47269
(dp47270
g10
I60
sg11
S'saves a movie file by drawing every frame .'
p47271
sg12
Vsave
p47272
sg14
(lp47273
g40430
ag13018
ag32647
ag26682
a(icodemend.demo.code_suggest
Element
p47274
(dp47275
g10
I1
sg11
S'codec is the video codec to be used . not all codecs are supported by a given moviewriter . if none is given , this defaults to the value specified by the rcparam animation.codec .'
p47276
sg12
Vsave.codec
p47277
sg14
(lp47278
(icodemend.demo.code_suggest
Element
p47279
(dp47280
g10
I1
sg11
S''
sg12
Vsave.codec.'avi'
p47281
sg14
(lp47282
sg2
S"'avi'"
p47283
sbasg2
S'codec'
p47284
sbag736
ag13481
ag20519
ag46053
asg2
g47268
sbs(g101
S'c'
g21375
tp47285
g21371
s(g31215
S's'
tp47286
g31226
s(S'table'
p47287
S'xscale'
p47288
tp47289
(icodemend.demo.code_suggest
Element
p47290
(dp47291
g10
I0
sg11
S'set the scaling of the x-axis'
p47292
sg12
Vtable.xscale
p47293
sg14
(lp47294
sg2
g47288
sbs(S'axhspan'
p47295
g24370
tp47296
g24365
s(g139
g140
g1518
tp47297
g1514
s(g101
g4274
S'm'
tp47298
g21638
sS'iter_ticks'
p47299
(icodemend.demo.code_suggest
Element
p47300
(dp47301
g10
I1
sg11
S'iterate through all of the major and minor ticks .'
p47302
sg12
Viter_ticks
p47303
sg14
(lp47304
sg2
g47299
sbs(S'axvline'
p47305
S'drawstyle'
p47306
tp47307
(icodemend.demo.code_suggest
Element
p47308
(dp47309
g10
I0
sg11
S'set the drawstyle of the plot'
p47310
sg12
Vaxvline.drawstyle
p47311
sg14
(lp47312
sg2
g47306
sbs(g139
g3075
g2055
tp47313
g2051
s(S'table'
p47314
S'linestyle'
p47315
tp47316
(icodemend.demo.code_suggest
Element
p47317
(dp47318
g10
I0
sg11
S'set the patch linestyle'
p47319
sg12
Vtable.linestyle
p47320
sg14
(lp47321
sg2
g47315
sbs(S'axvspan'
p47322
S'snap'
p47323
tp47324
(icodemend.demo.code_suggest
Element
p47325
(dp47326
g10
I0
sg11
S'sets the snap setting which may be'
p47327
sg12
Vaxvspan.snap
p47328
sg14
(lp47329
sg2
g47323
sbs(g332
g909
S'5'
tp47330
g6895
s(g8547
g8548
S'x'
tp47331
g19528
s(g5424
g132
S"'0.65'"
p47332
tp47333
(icodemend.demo.code_suggest
Element
p47334
(dp47335
g10
I1
sg11
S''
sg12
Vgrid.color.'0/65'
p47336
sg14
(lp47337
sg2
g47332
sbs(g324
g785
g9726
tp47338
g9722
s(S'axvspan'
p47339
S'vertices'
p47340
tp47341
(icodemend.demo.code_suggest
Element
p47342
(dp47343
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p47344
sg12
Vaxvspan.vertices
p47345
sg14
(lp47346
sg2
g47340
sbs(g93
g35302
S"'w'"
p47347
tp47348
(icodemend.demo.code_suggest
Element
p47349
(dp47350
g10
I1
sg11
S''
sg12
Vannotate.backgroundcolor.'w'
p47351
sg14
(lp47352
sg2
g47347
sbs(g93
g4800
g25559
tp47353
g25555
s(S'figtext'
p47354
g389
g11184
tp47355
g11180
s(S'add_axes'
p47356
S'picker'
p47357
tp47358
(icodemend.demo.code_suggest
Element
p47359
(dp47360
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p47361
sg12
Vadd_axes.picker
p47362
sg14
(lp47363
sg2
g47357
sbs(g117
g118
g27487
tp47364
g27483
sS'intersects_bbox'
p47365
(icodemend.demo.code_suggest
Element
p47366
(dp47367
g10
I1
sg11
S'returns true if this path intersects a given bbox .'
p47368
sg12
Vintersects_bbox
p47369
sg14
(lp47370
g31632
asg2
g47365
sbsS'get_str_bbox'
p47371
(icodemend.demo.code_suggest
Element
p47372
(dp47373
g10
I0
sg11
S'return the string bounding box'
p47374
sg12
Vget_str_bbox
p47375
sg14
(lp47376
sg2
g47371
sbs(g452
g348
S'[0, 1, 0, 0.1]'
p47377
tp47378
(icodemend.demo.code_suggest
Element
p47379
(dp47380
g10
I1
sg11
S''
sg12
Verrorbar.markeredgecolor.[0, 1, 0, 0/1]
p47381
sg14
(lp47382
sg2
g47377
sbs(S'barbs'
p47383
S'pivot'
p47384
tp47385
(icodemend.demo.code_suggest
Element
p47386
(dp47387
g10
I1
sg11
S"the part of the arrow that is at the grid point ; the arrow rotates about this point , hence the name pivot . default is ' tip '"
p47388
sg12
Vbarbs.pivot
p47389
sg14
(lp47390
(icodemend.demo.code_suggest
Element
p47391
(dp47392
g10
I1
sg11
S''
sg12
Vbarbs.pivot.'middle'
p47393
sg14
(lp47394
sg2
S"'middle'"
p47395
sbasg2
g47384
sbs(g125
g126
S'0.25'
p47396
tp47397
(icodemend.demo.code_suggest
Element
p47398
(dp47399
g10
I1
sg11
S''
sg12
Vaxvline.ymin.0/25
p47400
sg14
(lp47401
sg2
g47396
sbs(g245
g140
g30298
tp47402
g30294
s(g93
g161
S'(113, 40.5)'
p47403
tp47404
(icodemend.demo.code_suggest
Element
p47405
(dp47406
g10
I1
sg11
S''
sg12
Vannotate.xy.(113, 40/5)
p47407
sg14
(lp47408
sg2
g47403
sbs(g16
g17
g41943
tp47409
g41939
sS'add_subplot'
p47410
(icodemend.demo.code_suggest
Element
p47411
(dp47412
g10
I1446
sg11
S'add a subplot .'
p47413
sg12
Vadd_subplot
p47414
sg14
(lp47415
(icodemend.demo.code_suggest
Element
p47416
(dp47417
g10
I191
sg11
S"in addition to projection , the following kwargs are supported :|||kwargs are legal axes kwargs plus projection , which chooses a projection type for the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) .|||add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal axes kwargs plus projection which sets the projection type of the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) . typical usage :"
p47418
sg12
Vadd_subplot.projection
p47419
sg14
(lp47420
g24721
a(icodemend.demo.code_suggest
Element
p47421
(dp47422
g10
I7
sg11
S''
sg12
Vadd_subplot.projection.'polar'
p47423
sg14
(lp47424
sg2
S"'polar'"
p47425
sba(icodemend.demo.code_suggest
Element
p47426
(dp47427
g10
I3
sg11
S''
sg12
Vadd_subplot.projection.u'polar'
p47428
sg14
(lp47429
sg2
S"u'polar'"
p47430
sbag43404
a(icodemend.demo.code_suggest
Element
p47431
(dp47432
g10
I1
sg11
S''
sg12
Vadd_subplot.projection.'lower_hammer'
p47433
sg14
(lp47434
sg2
S"'lower_hammer'"
p47435
sbag32739
asg2
S'projection'
p47436
sbag16670
a(icodemend.demo.code_suggest
Element
p47437
(dp47438
g10
I11
sg11
S'set the data limits for the xaxis'
p47439
sg12
Vadd_subplot.xlim
p47440
sg14
(lp47441
(icodemend.demo.code_suggest
Element
p47442
(dp47443
g10
I3
sg11
S''
sg12
Vadd_subplot.xlim.(1, 10)
p47444
sg14
(lp47445
sg2
S'(1, 10)'
p47446
sbag13495
a(icodemend.demo.code_suggest
Element
p47447
(dp47448
g10
I1
sg11
S''
sg12
Vadd_subplot.xlim.((-0/5), 3)
p47449
sg14
(lp47450
sg2
S'((-0.5), 3)'
p47451
sba(icodemend.demo.code_suggest
Element
p47452
(dp47453
g10
I1
sg11
S''
sg12
Vadd_subplot.xlim.((-1), 5)
p47454
sg14
(lp47455
sg2
S'((-1), 5)'
p47456
sbag35188
a(icodemend.demo.code_suggest
Element
p47457
(dp47458
g10
I1
sg11
S''
sg12
Vadd_subplot.xlim.(0, 1)
p47459
sg14
(lp47460
sg2
S'(0, 1)'
p47461
sba(icodemend.demo.code_suggest
Element
p47462
(dp47463
g10
I1
sg11
S''
sg12
Vadd_subplot.xlim.(x[0], x[(-1)])
p47464
sg14
(lp47465
sg2
S'(x[0], x[(-1)])'
p47466
sba(icodemend.demo.code_suggest
Element
p47467
(dp47468
g10
I1
sg11
S''
sg12
Vadd_subplot.xlim.xlim
p47469
sg14
(lp47470
sg2
g2155
sbasg2
S'xlim'
p47471
sbag40222
a(icodemend.demo.code_suggest
Element
p47472
(dp47473
g10
I7
sg11
S'set the y ticks with list of ticks'
p47474
sg12
Vadd_subplot.yticks
p47475
sg14
(lp47476
g20272
asg2
S'yticks'
p47477
sbag45805
ag35232
a(icodemend.demo.code_suggest
Element
p47478
(dp47479
g10
I2
sg11
S'set the axes position with'
p47480
sg12
Vadd_subplot.position
p47481
sg14
(lp47482
g34036
ag27380
asg2
S'position'
p47483
sba(icodemend.demo.code_suggest
Element
p47484
(dp47485
g10
I1
sg11
S"set the artist 's animation state ."
p47486
sg12
Vadd_subplot.animated
p47487
sg14
(lp47488
g8628
asg2
S'animated'
p47489
sba(icodemend.demo.code_suggest
Element
p47490
(dp47491
g10
I1
sg11
S'set the axes instance in which the artist resides , if any .'
p47492
sg12
Vadd_subplot.axes
p47493
sg14
(lp47494
sg2
S'axes'
p47495
sbag38492
ag19342
a(icodemend.demo.code_suggest
Element
p47496
(dp47497
g10
I0
sg11
S'set agg_filter fuction .'
p47498
sg12
Vadd_subplot.agg_filter
p47499
sg14
(lp47500
sg2
S'agg_filter'
p47501
sba(icodemend.demo.code_suggest
Element
p47502
(dp47503
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p47504
sg12
Vadd_subplot.alpha
p47505
sg14
(lp47506
sg2
S'alpha'
p47507
sba(icodemend.demo.code_suggest
Element
p47508
(dp47509
g10
I0
sg11
S'anchor'
p47510
sg12
Vadd_subplot.anchor
p47511
sg14
(lp47512
sg2
S'anchor'
p47513
sba(icodemend.demo.code_suggest
Element
p47514
(dp47515
g10
I0
sg11
S'if the figure already has a subplot with key ( args , kwargs ) then it will simply make that subplot current and return it .'
p47516
sg12
Vadd_subplot.args
p47517
sg14
(lp47518
sg2
S'args'
p47519
sbag43279
ag45879
a(icodemend.demo.code_suggest
Element
p47520
(dp47521
g10
I0
sg11
S'set whether artist uses clipping .'
p47522
sg12
Vadd_subplot.clip_on
p47523
sg14
(lp47524
sg2
S'clip_on'
p47525
sbag10206
a(icodemend.demo.code_suggest
Element
p47526
(dp47527
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p47528
sg12
Vadd_subplot.closed
p47529
sg14
(lp47530
sg2
S'closed'
p47531
sba(icodemend.demo.code_suggest
Element
p47532
(dp47533
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p47534
sg12
Vadd_subplot.codes
p47535
sg14
(lp47536
sg2
S'codes'
p47537
sba(icodemend.demo.code_suggest
Element
p47538
(dp47539
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p47540
sg12
Vadd_subplot.color_cycle
p47541
sg14
(lp47542
sg2
S'color_cycle'
p47543
sbag15330
ag43316
ag44358
ag12629
a(icodemend.demo.code_suggest
Element
p47544
(dp47545
g10
I0
sg11
S"add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal axes kwargs plus projection which sets the projection type of the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) . typical usage :"
p47546
sg12
Vadd_subplot.height
p47547
sg14
(lp47548
sg2
S'height'
p47549
sbag40239
ag35178
a(icodemend.demo.code_suggest
Element
p47550
(dp47551
g10
I0
sg11
S'set the patch linestyle'
p47552
sg12
Vadd_subplot.linestyle
p47553
sg14
(lp47554
sg2
S'linestyle'
p47555
sbag24805
ag10065
a(icodemend.demo.code_suggest
Element
p47556
(dp47557
g10
I0
sg11
S"kwargs are legal axes kwargs plus projection , which chooses a projection type for the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) ."
p47558
sg12
Vadd_subplot.polar=True
p47559
sg14
(lp47560
sg2
S'polar=True'
p47561
sbag40676
ag32489
a(icodemend.demo.code_suggest
Element
p47562
(dp47563
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p47564
sg12
Vadd_subplot.readonly
p47565
sg14
(lp47566
sg2
S'readonly'
p47567
sba(icodemend.demo.code_suggest
Element
p47568
(dp47569
g10
I0
sg11
S"add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal axes kwargs plus projection which sets the projection type of the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) . typical usage :"
p47570
sg12
Vadd_subplot.rect
p47571
sg14
(lp47572
sg2
S'rect'
p47573
sba(icodemend.demo.code_suggest
Element
p47574
(dp47575
g10
I0
sg11
S'sets the sketch parameters .'
p47576
sg12
Vadd_subplot.sketch_params
p47577
sg14
(lp47578
sg2
S'sketch_params'
p47579
sba(icodemend.demo.code_suggest
Element
p47580
(dp47581
g10
I0
sg11
S'sets the snap setting which may be'
p47582
sg12
Vadd_subplot.snap
p47583
sg14
(lp47584
sg2
S'snap'
p47585
sba(icodemend.demo.code_suggest
Element
p47586
(dp47587
g10
I0
sg11
S'set the transform instance used by this artist .'
p47588
sg12
Vadd_subplot.transform
p47589
sg14
(lp47590
sg2
S'transform'
p47591
sbag37427
ag39618
a(icodemend.demo.code_suggest
Element
p47592
(dp47593
g10
I0
sg11
S"set the artist 's visiblity ."
p47594
sg12
Vadd_subplot.visible
p47595
sg14
(lp47596
sg2
S'visible'
p47597
sba(icodemend.demo.code_suggest
Element
p47598
(dp47599
g10
I0
sg11
S"add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal axes kwargs plus projection which sets the projection type of the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) . typical usage :"
p47600
sg12
Vadd_subplot.width
p47601
sg14
(lp47602
sg2
S'width'
p47603
sbag44295
ag39831
a(icodemend.demo.code_suggest
Element
p47604
(dp47605
g10
I0
sg11
S'set the scaling of the x-axis'
p47606
sg12
Vadd_subplot.xscale
p47607
sg14
(lp47608
sg2
S'xscale'
p47609
sbag40107
ag19420
a(icodemend.demo.code_suggest
Element
p47610
(dp47611
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p47612
sg12
Vadd_subplot.ymargin
p47613
sg14
(lp47614
sg2
S'ymargin'
p47615
sbag5212
ag45779
a(icodemend.demo.code_suggest
Element
p47616
(dp47617
g10
I0
sg11
S'set the zorder for the artist .'
p47618
sg12
Vadd_subplot.zorder
p47619
sg14
(lp47620
sg2
S'zorder'
p47621
sbasg2
g47410
sbsS'ignore'
p47622
(icodemend.demo.code_suggest
Element
p47623
(dp47624
g10
I1
sg11
S'return true if event should be ignored . return true if event should be ignored'
p47625
sg12
Vignore
p47626
sg14
(lp47627
g31535
asg2
g47622
sbs(S'hist'
p47628
S'log'
p47629
tp47630
(icodemend.demo.code_suggest
Element
p47631
(dp47632
g10
I4
sg11
S'if true , the histogram axis will be set to a log scale . if log is true and x is a 1d array , empty bins will be filtered out and only the non-empty ( n , bins , patches ) will be returned .'
p47633
sg12
Vhist.log
p47634
sg14
(lp47635
g45159
a(icodemend.demo.code_suggest
Element
p47636
(dp47637
g10
I1
sg11
S''
sg12
Vhist.log.log
p47638
sg14
(lp47639
sg2
g34779
sbasg2
g47629
sbs(S'angle_spectrum'
p47640
g18840
tp47641
g18835
s(g965
g909
S'-10.0'
p47642
tp47643
(icodemend.demo.code_suggest
Element
p47644
(dp47645
g10
I2
sg11
S''
sg12
Vadd_axes.zorder.-10/0
p47646
sg14
(lp47647
sg2
g47642
sbs(g452
g453
g7289
tp47648
g7285
s(g245
g140
g30323
tp47649
g30319
s(g2182
g10116
g27295
tp47650
g27291
s(S'grid'
p47651
S'markerfacecoloralt'
p47652
tp47653
(icodemend.demo.code_suggest
Element
p47654
(dp47655
g10
I0
sg11
S'set the alternate marker face color .'
p47656
sg12
Vgrid.markerfacecoloralt
p47657
sg14
(lp47658
sg2
g47652
sbs(S'get_xdata'
p47659
g35641
tp47660
g35636
s(g766
g666
g3998
tp47661
g3994
s(g93
g4800
g25479
tp47662
g25475
s(S'grid'
p47663
S'yscale'
p47664
tp47665
(icodemend.demo.code_suggest
Element
p47666
(dp47667
g10
I0
sg11
S'set the scaling of the y-axis'
p47668
sg12
Vgrid.yscale
p47669
sg14
(lp47670
sg2
g47664
sbsS'aliased_name_rest'
p47671
(icodemend.demo.code_suggest
Element
p47672
(dp47673
g10
I0
sg11
S"return ' propname or alias ' if s has an alias , else return propname formatted for rest"
p47674
sg12
Valiased_name_rest
p47675
sg14
(lp47676
g37469
asg2
g47671
sbs(g93
g161
S'(x, (y + 10))'
p47677
tp47678
(icodemend.demo.code_suggest
Element
p47679
(dp47680
g10
I1
sg11
S''
sg12
Vannotate.xy.(x, (y + 10))
p47681
sg14
(lp47682
sg2
g47677
sbs(S'plot'
p47683
g29027
tp47684
g28935
s(S'plot_date'
p47685
g19673
tp47686
g19648
s(g117
g118
g28259
tp47687
g28255
s(S'set_xscale'
p47688
g45497
tp47689
g45492
s(S'axhline'
p47690
g3639
tp47691
g3634
s(S'csd'
p47692
S'ylabel'
p47693
tp47694
(icodemend.demo.code_suggest
Element
p47695
(dp47696
g10
I0
sg11
S'set the label for the yaxis'
p47697
sg12
Vcsd.ylabel
p47698
sg14
(lp47699
sg2
g47693
sbs(g324
g785
g9656
tp47700
g9652
s(g11790
g11806
tp47701
g11801
s(S'title'
p47702
g35831
tp47703
g35826
s(g16
g453
g12758
tp47704
g12754
sS'subs'
p47705
(icodemend.demo.code_suggest
Element
p47706
(dp47707
g10
I2
sg11
S'set the minor ticks the log scaling every base**i*subs[j ]'
p47708
sg12
Vsubs
p47709
sg14
(lp47710
sg2
g47705
sbs(g1170
g437
g1944
tp47711
g16046
sS'math_to_image'
p47712
(icodemend.demo.code_suggest
Element
p47713
(dp47714
g10
I0
sg11
S'given a math expression , renders it in a closely-clipped bounding box to an image file .'
p47715
sg12
Vmath_to_image
p47716
sg14
(lp47717
sg2
g47712
sbs(g245
g140
g30548
tp47718
g30544
s(g93
S'annotation_clip'
p47719
g1944
tp47720
(icodemend.demo.code_suggest
Element
p47721
(dp47722
g10
I5
sg11
S''
sg12
Vannotate.annotation_clip.False
p47723
sg14
(lp47724
sg2
g1944
sbs(g324
g102
g9966
tp47725
g9962
s(S'get_sample_data'
p47726
S'asfileobj'
p47727
g1944
tp47728
g22675
s(S'tricontour'
p47729
g1410
tp47730
g1405
s(g252
g5782
g14428
tp47731
g14424
s(S'contour'
p47732
g17591
tp47733
g17551
s(S'axvspan'
p47734
S'prop_cycle'
p47735
tp47736
(icodemend.demo.code_suggest
Element
p47737
(dp47738
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p47739
sg12
Vaxvspan.prop_cycle
p47740
sg14
(lp47741
sg2
g47735
sbs(S'axhline'
p47742
g3741
tp47743
g3736
s(S'set_xticklabels'
p47744
g17091
tp47745
g17086
s(g117
g118
g27601
tp47746
g27597
s(g4371
g325
g17570
tp47747
g17566
s(S'semilogy'
p47748
g39313
tp47749
g39308
s(g101
S's'
g7786
tp47750
g7782
sS'ttfdict_to_fnames'
p47751
(icodemend.demo.code_suggest
Element
p47752
(dp47753
g10
I0
sg11
S'flatten a ttfdict to all the filenames it contains'
p47754
sg12
Vttfdict_to_fnames
p47755
sg14
(lp47756
sg2
g47751
sbs(g332
g3084
g43571
tp47757
g43567
s(S'fill'
p47758
S'url'
p47759
tp47760
(icodemend.demo.code_suggest
Element
p47761
(dp47762
g10
I0
sg11
S'sets the url for the artist'
p47763
sg12
Vfill.url
p47764
sg14
(lp47765
sg2
g47759
sbs(S'plot'
p47766
g29554
tp47767
g29499
s(S'pcolor'
p47768
S'ymargin'
p47769
tp47770
(icodemend.demo.code_suggest
Element
p47771
(dp47772
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p47773
sg12
Vpcolor.ymargin
p47774
sg14
(lp47775
sg2
g47769
sbs(S'add'
p47776
S'cursor_props'
p47777
tp47778
(icodemend.demo.code_suggest
Element
p47779
(dp47780
g10
I0
sg11
S'set the cursor property as'
p47781
sg12
Vadd.cursor_props
p47782
sg14
(lp47783
sg2
g47777
sbs(S'axvspan'
p47784
S'xmax'
p47785
tp47786
(icodemend.demo.code_suggest
Element
p47787
(dp47788
g10
I0
sg11
S'draw a vertical span ( rectangle ) from xmin to xmax . with the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . that is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates .'
p47789
sg12
Vaxvspan.xmax
p47790
sg14
(lp47791
sg2
g47785
sbs(S'phase_spectrum'
p47792
S'snap'
p47793
tp47794
(icodemend.demo.code_suggest
Element
p47795
(dp47796
g10
I0
sg11
S'sets the snap setting which may be'
p47797
sg12
Vphase_spectrum.snap
p47798
sg14
(lp47799
sg2
g47793
sbs(g16013
g17
S'1'
tp47800
g37383
s(g7484
g515
g865
tp47801
g25738
s(g388
g13486
g13165
tp47802
g13161
s(S'figaspect'
p47803
g3129
tp47804
g3124
s(g324
g8780
S'4'
tp47805
g9885
s(S'add_axes'
p47806
S'yticklabels'
p47807
tp47808
(icodemend.demo.code_suggest
Element
p47809
(dp47810
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p47811
sg12
Vadd_axes.yticklabels
p47812
sg14
(lp47813
sg2
g47807
sbs(S'add'
p47814
S'key'
p47815
tp47816
(icodemend.demo.code_suggest
Element
p47817
(dp47818
g10
I0
sg11
S'add axes a , with key key , to the stack , and return the stack .'
p47819
sg12
Vadd.key
p47820
sg14
(lp47821
sg2
g47815
sbs(g1170
g1257
S'24'
p47822
tp47823
(icodemend.demo.code_suggest
Element
p47824
(dp47825
g10
I1
sg11
S''
sg12
Vhist.bins.24
p47826
sg14
(lp47827
sg2
g47822
sbs(g1170
S'rwidth'
p47828
S'1.0'
p47829
tp47830
(icodemend.demo.code_suggest
Element
p47831
(dp47832
g10
I3
sg11
S''
sg12
Vhist.rwidth.1/0
p47833
sg14
(lp47834
sg2
g47829
sbs(S'has_data'
p47835
g39930
tp47836
g39925
s(S'imshow'
p47837
g9832
tp47838
g9803
s(g452
g2841
g43221
tp47839
g43217
sS'yscale'
p47840
(icodemend.demo.code_suggest
Element
p47841
(dp47842
g10
I37
sg11
S'set the scaling of the y - axis .'
p47843
sg12
Vyscale
p47844
sg14
(lp47845
g7985
asg2
g47840
sbs(g93
g161
S'(3, 0)'
p47846
tp47847
(icodemend.demo.code_suggest
Element
p47848
(dp47849
g10
I1
sg11
S''
sg12
Vannotate.xy.(3, 0)
p47850
sg14
(lp47851
sg2
g47846
sbs(S'set_xlabel'
p47852
g42795
tp47853
g42785
sS'specgram'
p47854
(icodemend.demo.code_suggest
Element
p47855
(dp47856
g10
I10
sg11
S'plot a spectrogram .'
p47857
sg12
Vspecgram
p47858
sg14
(lp47859
g35920
a(icodemend.demo.code_suggest
Element
p47860
(dp47861
g10
I2
sg11
S'compute and plot a spectrogram of data in x . data are split into nfft length segments and the spectrum of each section is computed . the windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap . the spectrogram is plotted as a colormap ( using imshow ) .'
p47862
sg12
Vspecgram.noverlap
p47863
sg14
(lp47864
g17473
ag13536
asg2
S'noverlap'
p47865
sbag26161
a(icodemend.demo.code_suggest
Element
p47866
(dp47867
g10
I0
sg11
S'returns the tuple ( spectrum , freqs , t , im ) :'
p47868
sg12
Vspecgram.freqs
p47869
sg14
(lp47870
sg2
S'freqs'
p47871
sba(icodemend.demo.code_suggest
Element
p47872
(dp47873
g10
I0
sg11
S'returns the tuple ( spectrum , freqs , t , im ) :'
p47874
sg12
Vspecgram.im
p47875
sg14
(lp47876
sg2
S'im'
p47877
sba(icodemend.demo.code_suggest
Element
p47878
(dp47879
g10
I0
sg11
S"specifies which sides of the spectrum to return . default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided ."
p47880
sg12
Vspecgram.sides
p47881
sg14
(lp47882
sg2
S'sides'
p47883
sba(icodemend.demo.code_suggest
Element
p47884
(dp47885
g10
I0
sg11
S'returns the tuple ( spectrum , freqs , t , im ) :'
p47886
sg12
Vspecgram.spectrum
p47887
sg14
(lp47888
sg2
S'spectrum'
p47889
sba(icodemend.demo.code_suggest
Element
p47890
(dp47891
g10
I0
sg11
S'returns the tuple ( spectrum , freqs , t , im ) :'
p47892
sg12
Vspecgram.t
p47893
sg14
(lp47894
sg2
S't'
sbag40916
ag7869
asg2
g47854
sbs(g324
g785
g9417
tp47895
g9413
sS'set_usetex'
p47896
(icodemend.demo.code_suggest
Element
p47897
(dp47898
g10
I0
sg11
S'set this text object to render using tex ( or not ) .'
p47899
sg12
Vset_usetex
p47900
sg14
(lp47901
sg2
g47896
sbs(S'hist'
p47902
S'patches'
p47903
tp47904
(icodemend.demo.code_suggest
Element
p47905
(dp47906
g10
I0
sg11
S'compute and draw the histogram of x . the return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .'
p47907
sg12
Vhist.patches
p47908
sg14
(lp47909
sg2
g47903
sbs(S'specgram'
p47910
g47889
tp47911
g47884
s(S'figure'
p47912
S'edgecolor :'
p47913
tp47914
(icodemend.demo.code_suggest
Element
p47915
(dp47916
g10
I0
sg11
S'the border color . if not provided , defaults to rc figure.edgecolor'
p47917
sg12
Vfigure.edgecolor :
p47918
sg14
(lp47919
sg2
g47913
sbs(g1205
g8607
g438
tp47920
g4597
sS'magnitude_spectrum'
p47921
(icodemend.demo.code_suggest
Element
p47922
(dp47923
g10
I2
sg11
S'plot the magnitude spectrum .'
p47924
sg12
Vmagnitude_spectrum
p47925
sg14
(lp47926
(icodemend.demo.code_suggest
Element
p47927
(dp47928
g10
I2
sg11
S'the sampling frequency ( samples per time unit ) . it is used to calculate the fourier frequencies , freqs , in cycles per time unit . the default value is 2 .'
p47929
sg12
Vmagnitude_spectrum.Fs
p47930
sg14
(lp47931
(icodemend.demo.code_suggest
Element
p47932
(dp47933
g10
I1
sg11
S''
sg12
Vmagnitude_spectrum.Fs.Fs
p47934
sg14
(lp47935
sg2
g7815
sbag27186
asg2
S'Fs'
p47936
sba(icodemend.demo.code_suggest
Element
p47937
(dp47938
g10
I1
sg11
S'compute the magnitude spectrum of x . data is padded to a length of pad_to and the windowing function window is applied to the signal .|||a function or a vector of length nfft . to create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. the default is window_hanning ( ) . if a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment .'
p47939
sg12
Vmagnitude_spectrum.window
p47940
sg14
(lp47941
sg2
S'window'
p47942
sba(icodemend.demo.code_suggest
Element
p47943
(dp47944
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p47945
sg12
Vmagnitude_spectrum._interpolation_steps
p47946
sg14
(lp47947
sg2
S'_interpolation_steps'
p47948
sba(icodemend.demo.code_suggest
Element
p47949
(dp47950
g10
I0
sg11
S'set agg_filter fuction .'
p47951
sg12
Vmagnitude_spectrum.agg_filter
p47952
sg14
(lp47953
sg2
S'agg_filter'
p47954
sba(icodemend.demo.code_suggest
Element
p47955
(dp47956
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p47957
sg12
Vmagnitude_spectrum.alpha
p47958
sg14
(lp47959
sg2
S'alpha'
p47960
sba(icodemend.demo.code_suggest
Element
p47961
(dp47962
g10
I0
sg11
S'anchor'
p47963
sg12
Vmagnitude_spectrum.anchor
p47964
sg14
(lp47965
sg2
S'anchor'
p47966
sba(icodemend.demo.code_suggest
Element
p47967
(dp47968
g10
I0
sg11
S"set the artist 's animation state ."
p47969
sg12
Vmagnitude_spectrum.animated
p47970
sg14
(lp47971
sg2
S'animated'
p47972
sba(icodemend.demo.code_suggest
Element
p47973
(dp47974
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p47975
sg12
Vmagnitude_spectrum.antialiased
p47976
sg14
(lp47977
sg2
S'antialiased'
p47978
sbag34617
ag46854
ag31680
ag37252
ag10700
a(icodemend.demo.code_suggest
Element
p47979
(dp47980
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p47981
sg12
Vmagnitude_spectrum.closed
p47982
sg14
(lp47983
sg2
S'closed'
p47984
sbag40178
ag40130
ag24754
ag41543
ag16771
a(icodemend.demo.code_suggest
Element
p47985
(dp47986
g10
I0
sg11
S'set the cap style for dashed linestyles'
p47987
sg12
Vmagnitude_spectrum.dash_capstyle
p47988
sg14
(lp47989
sg2
S'dash_capstyle'
p47990
sbag15716
ag6642
ag12362
ag7056
a(icodemend.demo.code_suggest
Element
p47991
(dp47992
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p47993
sg12
Vmagnitude_spectrum.fillstyle
p47994
sg14
(lp47995
sg2
S'fillstyle'
p47996
sba(icodemend.demo.code_suggest
Element
p47997
(dp47998
g10
I0
sg11
S'returns the tuple ( spectrum , freqs , line ) :'
p47999
sg12
Vmagnitude_spectrum.freqs
p48000
sg14
(lp48001
sg2
S'freqs'
p48002
sba(icodemend.demo.code_suggest
Element
p48003
(dp48004
g10
I0
sg11
S'sets the ( group ) id for the artist'
p48005
sg12
Vmagnitude_spectrum.gid
p48006
sg14
(lp48007
sg2
S'gid'
p48008
sbag18466
ag31797
ag13369
ag6010
ag3030
ag38688
ag37866
ag40421
ag10411
a(icodemend.demo.code_suggest
Element
p48009
(dp48010
g10
I0
sg11
S'set the alternate marker face color .'
p48011
sg12
Vmagnitude_spectrum.markerfacecoloralt
p48012
sg14
(lp48013
sg2
S'markerfacecoloralt'
p48014
sba(icodemend.demo.code_suggest
Element
p48015
(dp48016
g10
I0
sg11
S'set the marker size in points'
p48017
sg12
Vmagnitude_spectrum.markersize
p48018
sg14
(lp48019
sg2
S'markersize'
p48020
sbag42064
a(icodemend.demo.code_suggest
Element
p48021
(dp48022
g10
I0
sg11
S'compute the magnitude spectrum of x . data is padded to a length of pad_to and the windowing function window is applied to the signal .'
p48023
sg12
Vmagnitude_spectrum.pad_to
p48024
sg14
(lp48025
sg2
S'pad_to'
p48026
sbag10930
a(icodemend.demo.code_suggest
Element
p48027
(dp48028
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p48029
sg12
Vmagnitude_spectrum.picker
p48030
sg14
(lp48031
sg2
S'picker'
p48032
sba(icodemend.demo.code_suggest
Element
p48033
(dp48034
g10
I0
sg11
S'sets the pick radius used for containment tests'
p48035
sg12
Vmagnitude_spectrum.pickradius
p48036
sg14
(lp48037
sg2
S'pickradius'
p48038
sbag34646
ag43260
a(icodemend.demo.code_suggest
Element
p48039
(dp48040
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p48041
sg12
Vmagnitude_spectrum.rasterized
p48042
sg14
(lp48043
sg2
S'rasterized'
p48044
sbag8404
a(icodemend.demo.code_suggest
Element
p48045
(dp48046
g10
I0
sg11
S"specifies which sides of the spectrum to return . default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided ."
p48047
sg12
Vmagnitude_spectrum.sides
p48048
sg14
(lp48049
sg2
S'sides'
p48050
sba(icodemend.demo.code_suggest
Element
p48051
(dp48052
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p48053
sg12
Vmagnitude_spectrum.size_inches
p48054
sg14
(lp48055
sg2
S'size_inches'
p48056
sbag38459
a(icodemend.demo.code_suggest
Element
p48057
(dp48058
g10
I0
sg11
S'sets the snap setting which may be'
p48059
sg12
Vmagnitude_spectrum.snap
p48060
sg14
(lp48061
sg2
S'snap'
p48062
sbag27335
ag24772
a(icodemend.demo.code_suggest
Element
p48063
(dp48064
g10
I0
sg11
S'returns the tuple ( spectrum , freqs , line ) :'
p48065
sg12
Vmagnitude_spectrum.spectrum
p48066
sg14
(lp48067
sg2
S'spectrum'
p48068
sba(icodemend.demo.code_suggest
Element
p48069
(dp48070
g10
I0
sg11
S'set a title for the axes .'
p48071
sg12
Vmagnitude_spectrum.title
p48072
sg14
(lp48073
sg2
S'title'
p48074
sbag8499
a(icodemend.demo.code_suggest
Element
p48075
(dp48076
g10
I0
sg11
S'sets the url for the artist'
p48077
sg12
Vmagnitude_spectrum.url
p48078
sg14
(lp48079
sg2
S'url'
p48080
sbag34165
ag39866
ag17479
ag7019
a(icodemend.demo.code_suggest
Element
p48081
(dp48082
g10
I0
sg11
S'set the label for the xaxis .'
p48083
sg12
Vmagnitude_spectrum.xlabel
p48084
sg14
(lp48085
sg2
S'xlabel'
p48086
sbag35531
a(icodemend.demo.code_suggest
Element
p48087
(dp48088
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p48089
sg12
Vmagnitude_spectrum.xmargin
p48090
sg14
(lp48091
sg2
S'xmargin'
p48092
sbag5932
ag40162
a(icodemend.demo.code_suggest
Element
p48093
(dp48094
g10
I0
sg11
S'set the x ticks with list of ticks'
p48095
sg12
Vmagnitude_spectrum.xticks
p48096
sg14
(lp48097
sg2
S'xticks'
p48098
sbag46618
ag43527
a(icodemend.demo.code_suggest
Element
p48099
(dp48100
g10
I0
sg11
S'set the data limits for the yaxis'
p48101
sg12
Vmagnitude_spectrum.ylim
p48102
sg14
(lp48103
sg2
S'ylim'
p48104
sbag16145
a(icodemend.demo.code_suggest
Element
p48105
(dp48106
g10
I0
sg11
S'set the scaling of the y-axis'
p48107
sg12
Vmagnitude_spectrum.yscale
p48108
sg14
(lp48109
sg2
S'yscale'
p48110
sbag32628
ag45074
a(icodemend.demo.code_suggest
Element
p48111
(dp48112
g10
I0
sg11
S'set the zorder for the artist .'
p48113
sg12
Vmagnitude_spectrum.zorder
p48114
sg14
(lp48115
sg2
S'zorder'
p48116
sbasg2
g47921
sbs(g139
g370
S'3'
tp48117
g1833
sS'contains_points'
p48118
(icodemend.demo.code_suggest
Element
p48119
(dp48120
g10
I5
sg11
S'returns a bool array which is true if the path contains the corresponding point .'
p48121
sg12
Vcontains_points
p48122
sg14
(lp48123
g10364
a(icodemend.demo.code_suggest
Element
p48124
(dp48125
g10
I0
sg11
S'if transform is not none , the path will be transformed before performing the test .'
p48126
sg12
Vcontains_points.transform
p48127
sg14
(lp48128
sg2
S'transform'
p48129
sbasg2
g48118
sbs(g1170
g32850
g33920
tp48130
g33916
sS'get_paths_extents'
p48131
(icodemend.demo.code_suggest
Element
p48132
(dp48133
g10
I0
sg11
S'given a sequence of path objects and optional transform objects , returns the bounding box that encapsulates all of them .'
p48134
sg12
Vget_paths_extents
p48135
sg14
(lp48136
g10692
ag40961
asg2
g48131
sbs(S'quiver'
p48137
g30867
tp48138
g30862
s(S'add'
p48139
S'alpha'
p48140
tp48141
(icodemend.demo.code_suggest
Element
p48142
(dp48143
g10
I0
sg11
S'set the alpha tranparency of the patch .'
p48144
sg12
Vadd.alpha
p48145
sg14
(lp48146
sg2
g48140
sbs(g16
g132
g46487
tp48147
g46483
s(g21163
g4225
g18016
tp48148
g18012
sS'add_lines'
p48149
(icodemend.demo.code_suggest
Element
p48150
(dp48151
g10
I2
sg11
S'add the lines from a non-filled contourset to the colorbar . draw lines on the colorbar .'
p48152
sg12
Vadd_lines
p48153
sg14
(lp48154
g39628
ag24169
ag42875
ag26180
asg2
g48149
sbs(S'pcolor'
p48155
S'cmap'
p48156
tp48157
(icodemend.demo.code_suggest
Element
p48158
(dp48159
g10
I45
sg11
S'set the colormap for luminance data|||a matplotlib.colors.colormap instance . if none , use rc settings .'
p48160
sg12
Vpcolor.cmap
p48161
sg14
(lp48162
(icodemend.demo.code_suggest
Element
p48163
(dp48164
g10
I9
sg11
S''
sg12
Vpcolor.cmap.cmap
p48165
sg14
(lp48166
sg2
g325
sba(icodemend.demo.code_suggest
Element
p48167
(dp48168
g10
I5
sg11
S''
sg12
Vpcolor.cmap.my_cmap
p48169
sg14
(lp48170
sg2
g9074
sba(icodemend.demo.code_suggest
Element
p48171
(dp48172
g10
I3
sg11
S''
sg12
Vpcolor.cmap.'RdBu'
p48173
sg14
(lp48174
sg2
S"'RdBu'"
p48175
sbag37535
ag10975
ag36537
a(icodemend.demo.code_suggest
Element
p48176
(dp48177
g10
I2
sg11
S''
sg12
Vpcolor.cmap.new_map
p48178
sg14
(lp48179
sg2
g9242
sba(icodemend.demo.code_suggest
Element
p48180
(dp48181
g10
I1
sg11
S''
sg12
Vpcolor.cmap.'Greys'
p48182
sg14
(lp48183
sg2
S"'Greys'"
p48184
sbag33253
a(icodemend.demo.code_suggest
Element
p48185
(dp48186
g10
I1
sg11
S''
sg12
Vpcolor.cmap.'RdYlGn'
p48187
sg14
(lp48188
sg2
S"'RdYlGn'"
p48189
sba(icodemend.demo.code_suggest
Element
p48190
(dp48191
g10
I1
sg11
S''
sg12
Vpcolor.cmap.'spectral'
p48192
sg14
(lp48193
sg2
S"'spectral'"
p48194
sba(icodemend.demo.code_suggest
Element
p48195
(dp48196
g10
I1
sg11
S''
sg12
Vpcolor.cmap.cMap
p48197
sg14
(lp48198
sg2
g26750
sbag3162
ag44638
ag42706
asg2
g48156
sbs(S'Path'
p48199
g11800
tp48200
g11795
s(g252
g7452
g14300
tp48201
g14296
s(S'axvline'
p48202
S'solid_capstyle'
p48203
tp48204
(icodemend.demo.code_suggest
Element
p48205
(dp48206
g10
I0
sg11
S'set the cap style for solid linestyles'
p48207
sg12
Vaxvline.solid_capstyle
p48208
sg14
(lp48209
sg2
g48203
sbs(g514
g4459
g45029
tp48210
g45025
s(S'phase_spectrum'
p48211
S'pad_to'
p48212
tp48213
(icodemend.demo.code_suggest
Element
p48214
(dp48215
g10
I0
sg11
S'compute the phase spectrum ( unwrapped angle spectrum ) of x . data is padded to a length of pad_to and the windowing function window is applied to the signal .'
p48216
sg12
Vphase_spectrum.pad_to
p48217
sg14
(lp48218
sg2
g48212
sbs(g6632
g2155
g47461
tp48219
g47457
s(S'quiver'
p48220
g30961
tp48221
g30956
s(g252
g24834
S'3'
tp48222
g14216
s(S'deprecated'
p48223
g42865
tp48224
g42860
sS'text'
p48225
(icodemend.demo.code_suggest
Element
p48226
(dp48227
g10
I374
sg11
S'add text to the axes .'
p48228
sg12
Vtext
p48229
sg14
(lp48230
(icodemend.demo.code_suggest
Element
p48231
(dp48232
g10
I88
sg11
S'set the transform instance used by this artist .'
p48233
sg12
Vtext.transform
p48234
sg14
(lp48235
g8410
a(icodemend.demo.code_suggest
Element
p48236
(dp48237
g10
I2
sg11
S''
sg12
Vtext.transform.trans
p48238
sg14
(lp48239
sg2
g5556
sba(icodemend.demo.code_suggest
Element
p48240
(dp48241
g10
I1
sg11
S''
sg12
Vtext.transform.None
p48242
sg14
(lp48243
sg2
g865
sba(icodemend.demo.code_suggest
Element
p48244
(dp48245
g10
I1
sg11
S''
sg12
Vtext.transform.text_trans
p48246
sg14
(lp48247
sg2
S'text_trans'
p48248
sbag43075
ag18421
ag37875
asg2
S'transform'
p48249
sbag17363
ag41422
ag26778
ag33680
ag46909
ag25028
ag38133
ag6871
ag44495
ag43562
ag45355
ag33181
a(icodemend.demo.code_suggest
Element
p48250
(dp48251
g10
I3
sg11
S'text'
p48252
sg12
Vtext.s
p48253
sg14
(lp48254
g34908
a(icodemend.demo.code_suggest
Element
p48255
(dp48256
g10
I1
sg11
S''
sg12
Vtext.s.'row label'
p48257
sg14
(lp48258
sg2
S"'row label'"
p48259
sbasg2
S's'
sbag37982
a(icodemend.demo.code_suggest
Element
p48260
(dp48261
g10
I2
sg11
S'set the font family .'
p48262
sg12
Vtext.family
p48263
sg14
(lp48264
(icodemend.demo.code_suggest
Element
p48265
(dp48266
g10
I1
sg11
S''
sg12
Vtext.family.'monospace'
p48267
sg14
(lp48268
sg2
S"'monospace'"
p48269
sba(icodemend.demo.code_suggest
Element
p48270
(dp48271
g10
I1
sg11
S''
sg12
Vtext.family.'serif'
p48272
sg14
(lp48273
sg2
S"'serif'"
p48274
sbasg2
S'family'
p48275
sbag44709
a(icodemend.demo.code_suggest
Element
p48276
(dp48277
g10
I2
sg11
S'set the ( x , y ) position of the text'
p48278
sg12
Vtext.position
p48279
sg14
(lp48280
(icodemend.demo.code_suggest
Element
p48281
(dp48282
g10
I1
sg11
S''
sg12
Vtext.position.(((((numpy/e ** (-6)) - 3) / 2) + 0/1), 0/1)
p48283
sg14
(lp48284
sg2
S'(((((numpy.e ** (-6)) - 3) / 2) + 0.1), 0.1)'
p48285
sba(icodemend.demo.code_suggest
Element
p48286
(dp48287
g10
I1
sg11
S''
sg12
Vtext.position.(0/1, (((numpy/log(3) / 2) + 3) + 0/1))
p48288
sg14
(lp48289
sg2
S'(0.1, (((numpy.log(3) / 2) + 3) + 0.1))'
p48290
sbasg2
S'position'
p48291
sba(icodemend.demo.code_suggest
Element
p48292
(dp48293
g10
I2
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p48294
sg12
Vtext.rasterized
p48295
sg14
(lp48296
g23050
asg2
S'rasterized'
p48297
sbag45995
ag22577
a(icodemend.demo.code_suggest
Element
p48298
(dp48299
g10
I2
sg11
S'set the y position of the text'
p48300
sg12
Vtext.y
p48301
sg14
(lp48302
g32218
ag44803
asg2
S'y'
sba(icodemend.demo.code_suggest
Element
p48303
(dp48304
g10
I1
sg11
S"set the artist 's animation state ."
p48305
sg12
Vtext.animated
p48306
sg14
(lp48307
g40094
asg2
S'animated'
p48308
sba(icodemend.demo.code_suggest
Element
p48309
(dp48310
g10
I1
sg11
S'sets the ( group ) id for the artist'
p48311
sg12
Vtext.gid
p48312
sg14
(lp48313
g26518
asg2
S'gid'
p48314
sbag47058
ag293
ag27236
ag5485
a(icodemend.demo.code_suggest
Element
p48315
(dp48316
g10
I0
sg11
S'set agg_filter fuction .'
p48317
sg12
Vtext.agg_filter
p48318
sg14
(lp48319
sg2
S'agg_filter'
p48320
sba(icodemend.demo.code_suggest
Element
p48321
(dp48322
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p48323
sg12
Vtext.alpha
p48324
sg14
(lp48325
sg2
S'alpha'
p48326
sba(icodemend.demo.code_suggest
Element
p48327
(dp48328
g10
I0
sg11
S'anchor'
p48329
sg12
Vtext.anchor
p48330
sg14
(lp48331
sg2
S'anchor'
p48332
sbag8100
ag27093
a(icodemend.demo.code_suggest
Element
p48333
(dp48334
g10
I0
sg11
S"set the artist 's clip bbox ."
p48335
sg12
Vtext.clip_box
p48336
sg14
(lp48337
sg2
S'clip_box'
p48338
sba(icodemend.demo.code_suggest
Element
p48339
(dp48340
g10
I0
sg11
S"set the artist 's clip path , which may be"
p48341
sg12
Vtext.clip_path
p48342
sg14
(lp48343
sg2
S'clip_path'
p48344
sba(icodemend.demo.code_suggest
Element
p48345
(dp48346
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p48347
sg12
Vtext.closed
p48348
sg14
(lp48349
sg2
S'closed'
p48350
sbag43479
ag33438
ag8368
ag17408
ag45403
a(icodemend.demo.code_suggest
Element
p48351
(dp48352
g10
I0
sg11
S'set the properties by parsing a fontconfig pattern .'
p48353
sg12
Vtext.fontconfig_pattern
p48354
sg14
(lp48355
sg2
S'fontconfig_pattern'
p48356
sba(icodemend.demo.code_suggest
Element
p48357
(dp48358
g10
I0
sg11
S'set the hatching pattern'
p48359
sg12
Vtext.hatch
p48360
sg14
(lp48361
sg2
S'hatch'
p48362
sbag17458
a(icodemend.demo.code_suggest
Element
p48363
(dp48364
g10
I0
sg11
S'set the label to s for auto legend .'
p48365
sg12
Vtext.label
p48366
sg14
(lp48367
sg2
S'label'
p48368
sbag32118
a(icodemend.demo.code_suggest
Element
p48369
(dp48370
g10
I0
sg11
S'set the patch linestyle'
p48371
sg12
Vtext.linestyle
p48372
sg14
(lp48373
sg2
S'linestyle'
p48374
sbag23063
ag33653
ag15018
a(icodemend.demo.code_suggest
Element
p48375
(dp48376
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p48377
sg12
Vtext.size_inches
p48378
sg14
(lp48379
sg2
S'size_inches'
p48380
sba(icodemend.demo.code_suggest
Element
p48381
(dp48382
g10
I0
sg11
S'sets the sketch parameters .'
p48383
sg12
Vtext.sketch_params
p48384
sg14
(lp48385
sg2
S'sketch_params'
p48386
sba(icodemend.demo.code_suggest
Element
p48387
(dp48388
g10
I0
sg11
S'sets the snap setting which may be'
p48389
sg12
Vtext.snap
p48390
sg14
(lp48391
sg2
S'snap'
p48392
sba(icodemend.demo.code_suggest
Element
p48393
(dp48394
g10
I0
sg11
S'set the font stretch ( horizontal condensation or expansion ) .'
p48395
sg12
Vtext.stretch
p48396
sg14
(lp48397
sg2
S'stretch'
p48398
sba(icodemend.demo.code_suggest
Element
p48399
(dp48400
g10
I0
sg11
S'set the text string s'
p48401
sg12
Vtext.text
p48402
sg14
(lp48403
sg2
S'text'
p48404
sbag7108
ag45665
a(icodemend.demo.code_suggest
Element
p48405
(dp48406
g10
I0
sg11
S'set this text object to render using tex ( or not ) .'
p48407
sg12
Vtext.usetex
p48408
sg14
(lp48409
sg2
S'usetex'
p48410
sba(icodemend.demo.code_suggest
Element
p48411
(dp48412
g10
I0
sg11
S"set the font variant , either ' normal ' or ' small-caps ' ."
p48413
sg12
Vtext.variant
p48414
sg14
(lp48415
sg2
S'variant'
p48416
sba(icodemend.demo.code_suggest
Element
p48417
(dp48418
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p48419
sg12
Vtext.vertices
p48420
sg14
(lp48421
sg2
S'vertices'
p48422
sbag37923
ag24612
a(icodemend.demo.code_suggest
Element
p48423
(dp48424
g10
I0
sg11
S'set the label for the xaxis .'
p48425
sg12
Vtext.xlabel
p48426
sg14
(lp48427
sg2
S'xlabel'
p48428
sba(icodemend.demo.code_suggest
Element
p48429
(dp48430
g10
I0
sg11
S'set the data limits for the xaxis'
p48431
sg12
Vtext.xlim
p48432
sg14
(lp48433
sg2
S'xlim'
p48434
sbag37137
a(icodemend.demo.code_suggest
Element
p48435
(dp48436
g10
I0
sg11
S'set the scaling of the x-axis'
p48437
sg12
Vtext.xscale
p48438
sg14
(lp48439
sg2
S'xscale'
p48440
sbag39566
a(icodemend.demo.code_suggest
Element
p48441
(dp48442
g10
I0
sg11
S'set the x ticks with list of ticks'
p48443
sg12
Vtext.xticks
p48444
sg14
(lp48445
sg2
S'xticks'
p48446
sba(icodemend.demo.code_suggest
Element
p48447
(dp48448
g10
I0
sg11
S'set the label for the yaxis'
p48449
sg12
Vtext.ylabel
p48450
sg14
(lp48451
sg2
S'ylabel'
p48452
sbag5434
a(icodemend.demo.code_suggest
Element
p48453
(dp48454
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p48455
sg12
Vtext.ymargin
p48456
sg14
(lp48457
sg2
S'ymargin'
p48458
sba(icodemend.demo.code_suggest
Element
p48459
(dp48460
g10
I0
sg11
S'set the scaling of the y-axis'
p48461
sg12
Vtext.yscale
p48462
sg14
(lp48463
sg2
S'yscale'
p48464
sba(icodemend.demo.code_suggest
Element
p48465
(dp48466
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p48467
sg12
Vtext.yticklabels
p48468
sg14
(lp48469
sg2
S'yticklabels'
p48470
sbag43958
asg2
g48225
sbs(g245
g140
g30498
tp48471
g30494
sS'get_figheight'
p48472
(icodemend.demo.code_suggest
Element
p48473
(dp48474
g10
I4
sg11
S'return the figheight as a float'
p48475
sg12
Vget_figheight
p48476
sg14
(lp48477
sg2
g48472
sbs(g332
g4225
g48290
tp48478
g48286
s(S'semilogy'
p48479
g39217
tp48480
g39212
s(S'set_ylabel'
p48481
g36020
tp48482
g36005
s(S'tricontour'
p48483
S'V'
tp48484
g1371
s(g117
g8625
g438
tp48485
g29644
sS'viridis'
p48486
(icodemend.demo.code_suggest
Element
p48487
(dp48488
g10
I0
sg11
S'set the default colormap to viridis and apply to current image if any .'
p48489
sg12
Vviridis
p48490
sg14
(lp48491
sg2
g48486
sbs(g20499
S'nonposy'
p48492
g2340
tp48493
g2336
s(S'set_yticklabels'
p48494
g18017
tp48495
g18007
s(S'quiver'
p48496
g30979
tp48497
g30974
s(S'autoscale'
p48498
g36129
tp48499
g36124
s(g766
g102
g46648
tp48500
g46644
s(g514
g8538
g44124
tp48501
g44120
s(S'axvspan'
p48502
S'y'
tp48503
(icodemend.demo.code_suggest
Element
p48504
(dp48505
g10
I0
sg11
S'x coords are in data units and y coords are in axes ( relative 0-1 ) units .|||draw a vertical span ( rectangle ) from xmin to xmax . with the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . that is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates .'
p48506
sg12
Vaxvspan.y
p48507
sg14
(lp48508
sg2
S'y'
sbs(S'add'
p48509
S'picker'
p48510
tp48511
(icodemend.demo.code_suggest
Element
p48512
(dp48513
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p48514
sg12
Vadd.picker
p48515
sg14
(lp48516
sg2
g48510
sbs(S'axhspan'
p48517
g24298
tp48518
g24293
s(g245
g140
g30044
tp48519
g30040
s(g514
g325
g26750
tp48520
g48195
s(g93
g18604
g22562
tp48521
g22558
s(g32020
g32062
tp48522
g32057
sS'get_ec'
p48523
(icodemend.demo.code_suggest
Element
p48524
(dp48525
g10
I0
sg11
S'return the edge color of the patch .'
p48526
sg12
Vget_ec
p48527
sg14
(lp48528
sg2
g48523
sbs(S'angle_spectrum'
p48529
g19019
tp48530
g19014
s(S'yticks'
p48531
S'x'
tp48532
g16116
s(S'convert_xunits'
p48533
S'x'
tp48534
(icodemend.demo.code_suggest
Element
p48535
(dp48536
g10
I0
sg11
S'for artists in an axes , if the xaxis has units support , convert x using xaxis unit type'
p48537
sg12
Vconvert_xunits.x
p48538
sg14
(lp48539
sg2
S'x'
sbs(g117
g118
g27696
tp48540
g27692
sS'get_yminorticklabels'
p48541
(icodemend.demo.code_suggest
Element
p48542
(dp48543
g10
I0
sg11
S'get the minor y tick labels as a list of text instances .'
p48544
sg12
Vget_yminorticklabels
p48545
sg14
(lp48546
sg2
g48541
sbs(S'loglog'
p48547
S'subsy'
p48548
tp48549
(icodemend.demo.code_suggest
Element
p48550
(dp48551
g10
I0
sg11
S'the location of the minor x /y ticks ; none defaults to autosubs , which depend on the number of decades in the plot ; see matplotlib.axes.axes.set_xscale ( ) / matplotlib.axes.axes.set_yscale ( ) for details'
p48552
sg12
Vloglog.subsy
p48553
sg14
(lp48554
sg2
g48548
sbs(S'score_stretch'
p48555
S'stretch2'
p48556
tp48557
(icodemend.demo.code_suggest
Element
p48558
(dp48559
g10
I0
sg11
S'the result is the absolute value of the difference between the css numeric values of stretch1 and stretch2 , normalized between 0.0 and 1.0 .|||returns a match score between stretch1 and stretch2 .'
p48560
sg12
Vscore_stretch.stretch2
p48561
sg14
(lp48562
sg2
g48556
sbs(S'tricontour'
p48563
g1422
tp48564
g1417
s(S'axhspan'
p48565
g24400
tp48566
g24395
s(S'text'
p48567
g48326
tp48568
g48321
s(g332
g39643
g33200
tp48569
g33196
s(g93
g627
S'16'
p48570
tp48571
(icodemend.demo.code_suggest
Element
p48572
(dp48573
g10
I1
sg11
S''
sg12
Vannotate.size.16
p48574
sg14
(lp48575
sg2
g48570
sbs(g5848
g5849
S'5'
tp48576
(icodemend.demo.code_suggest
Element
p48577
(dp48578
g10
I2
sg11
S''
sg12
VSlider.valinit.5
p48579
sg14
(lp48580
sg2
S'5'
sbs(S'clf'
p48581
S'keep_observers'
p48582
tp48583
(icodemend.demo.code_suggest
Element
p48584
(dp48585
g10
I0
sg11
S'set keep_observers to true if , for example , a gui widget is tracking the axes in the figure .'
p48586
sg12
Vclf.keep_observers
p48587
sg14
(lp48588
sg2
g48582
sbs(S'hist2d'
p48589
g42198
tp48590
g42193
s(S'imshow'
p48591
g10000
tp48592
g9995
s(g1205
g1262
S'0'
tp48593
g4522
s(g26208
g489
g32267
tp48594
g32263
s(S'add_subplot'
p48595
g47621
tp48596
g47616
s(g245
g140
g30104
tp48597
g30100
s(S'drange'
p48598
g23091
tp48599
g23086
s(S'rec_join'
p48600
g35108
tp48601
g35103
s(S'ginput'
p48602
S'n'
S'4'
tp48603
g14720
s(S'grid'
p48604
S'dash_capstyle'
p48605
tp48606
(icodemend.demo.code_suggest
Element
p48607
(dp48608
g10
I0
sg11
S'set the cap style for dashed linestyles'
p48609
sg12
Vgrid.dash_capstyle
p48610
sg14
(lp48611
sg2
g48605
sbs(S'cohere'
p48612
g43855
tp48613
g43850
s(S'legend'
p48614
g14251
tp48615
g14221
s(S'pcolor'
p48616
S'position'
p48617
tp48618
(icodemend.demo.code_suggest
Element
p48619
(dp48620
g10
I0
sg11
S'set the axes position with'
p48621
sg12
Vpcolor.position
p48622
sg14
(lp48623
sg2
g48617
sbs(S'suptitle'
p48624
S'verticalalignment'
p48625
tp48626
(icodemend.demo.code_suggest
Element
p48627
(dp48628
g10
I1
sg11
S'the vertical alignment of the text'
p48629
sg12
Vsuptitle.verticalalignment
p48630
sg14
(lp48631
g13287
asg2
g48625
sbs(g452
g37606
S'6'
tp48632
g42551
s(g117
g118
g28454
tp48633
g28450
s(S'semilogy'
p48634
g39283
tp48635
g39278
s(S'legend'
p48636
g14454
tp48637
g14445
s(g8352
g13269
g13629
tp48638
g13625
s(S'eventplot'
p48639
g23511
tp48640
g23506
s(g117
g132
g28894
tp48641
g28890
s(S'specgram'
p48642
g47877
tp48643
g47872
s(g117
g118
g27571
tp48644
g27567
s(g5640
g5641
g11911
tp48645
g11907
s(g944
g132
g35696
tp48646
g35692
s(S'axhline'
p48647
g3453
tp48648
g3438
s(S'axhline'
p48649
g3837
tp48650
g3832
sS'box'
p48651
(icodemend.demo.code_suggest
Element
p48652
(dp48653
g10
I4
sg11
S'turn the axes box on or off .'
p48654
sg12
Vbox
p48655
sg14
(lp48656
(icodemend.demo.code_suggest
Element
p48657
(dp48658
g10
I0
sg11
S"if on is none , toggle state .|||turn the axes box on or off . on may be a boolean or a string , ' on ' or ' off ' ."
p48659
sg12
Vbox.on
p48660
sg14
(lp48661
sg2
S'on'
p48662
sbasg2
g48651
sbs(S'set_yticklabels'
p48663
g18112
tp48664
g18107
s(S'semilogy'
p48665
g39355
tp48666
g39350
s(g4
S'linefmt'
p48667
g27057
tp48668
g27053
sS'broken_barh'
p48669
(icodemend.demo.code_suggest
Element
p48670
(dp48671
g10
I10
sg11
S'plot horizontal bars .'
p48672
sg12
Vbroken_barh
p48673
sg14
(lp48674
(icodemend.demo.code_suggest
Element
p48675
(dp48676
g10
I2
sg11
S'set the facecolor(s ) of the collection .'
p48677
sg12
Vbroken_barh.facecolor
p48678
sg14
(lp48679
(icodemend.demo.code_suggest
Element
p48680
(dp48681
g10
I1
sg11
S''
sg12
Vbroken_barh.facecolor.'green'
p48682
sg14
(lp48683
sg2
S"'green'"
p48684
sbag38037
asg2
S'facecolor'
p48685
sba(icodemend.demo.code_suggest
Element
p48686
(dp48687
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p48688
sg12
Vbroken_barh._interpolation_steps
p48689
sg14
(lp48690
sg2
S'_interpolation_steps'
p48691
sbag22662
a(icodemend.demo.code_suggest
Element
p48692
(dp48693
g10
I0
sg11
S'set the alpha tranparencies of the collection .'
p48694
sg12
Vbroken_barh.alpha
p48695
sg14
(lp48696
sg2
S'alpha'
p48697
sba(icodemend.demo.code_suggest
Element
p48698
(dp48699
g10
I0
sg11
S'anchor'
p48700
sg12
Vbroken_barh.anchor
p48701
sg14
(lp48702
sg2
S'anchor'
p48703
sba(icodemend.demo.code_suggest
Element
p48704
(dp48705
g10
I0
sg11
S"set the artist 's animation state ."
p48706
sg12
Vbroken_barh.animated
p48707
sg14
(lp48708
sg2
S'animated'
p48709
sbag32785
ag15700
ag34862
ag34096
a(icodemend.demo.code_suggest
Element
p48710
(dp48711
g10
I0
sg11
S'set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp'
p48712
sg12
Vbroken_barh.clim
p48713
sg14
(lp48714
sg2
S'clim'
p48715
sbag37478
a(icodemend.demo.code_suggest
Element
p48716
(dp48717
g10
I0
sg11
S'set whether artist uses clipping .'
p48718
sg12
Vbroken_barh.clip_on
p48719
sg14
(lp48720
sg2
S'clip_on'
p48721
sbag41689
a(icodemend.demo.code_suggest
Element
p48722
(dp48723
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p48724
sg12
Vbroken_barh.closed
p48725
sg14
(lp48726
sg2
S'closed'
p48727
sbag12481
ag42568
ag5469
ag34120
a(icodemend.demo.code_suggest
Element
p48728
(dp48729
g10
I0
sg11
S'replace the contains test used by this artist .'
p48730
sg12
Vbroken_barh.contains
p48731
sg14
(lp48732
sg2
S'contains'
p48733
sbag2261
ag44055
a(icodemend.demo.code_suggest
Element
p48734
(dp48735
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p48736
sg12
Vbroken_barh.figure
p48737
sg14
(lp48738
sg2
S'figure'
p48739
sbag2865
ag19121
ag23915
ag15480
a(icodemend.demo.code_suggest
Element
p48740
(dp48741
g10
I0
sg11
S'set the linewidth(s ) for the collection .'
p48742
sg12
Vbroken_barh.linewidth
p48743
sg14
(lp48744
sg2
S'linewidth'
p48745
sba(icodemend.demo.code_suggest
Element
p48746
(dp48747
g10
I0
sg11
S'set the normalization instance'
p48748
sg12
Vbroken_barh.norm
p48749
sg14
(lp48750
sg2
S'norm'
p48751
sbag600
a(icodemend.demo.code_suggest
Element
p48752
(dp48753
g10
I0
sg11
S'set the offsets for the collection .'
p48754
sg12
Vbroken_barh.offsets
p48755
sg14
(lp48756
sg2
S'offsets'
p48757
sbag43324
a(icodemend.demo.code_suggest
Element
p48758
(dp48759
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p48760
sg12
Vbroken_barh.picker
p48761
sg14
(lp48762
sg2
S'picker'
p48763
sbag34367
a(icodemend.demo.code_suggest
Element
p48764
(dp48765
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p48766
sg12
Vbroken_barh.prop_cycle
p48767
sg14
(lp48768
sg2
S'prop_cycle'
p48769
sba(icodemend.demo.code_suggest
Element
p48770
(dp48771
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p48772
sg12
Vbroken_barh.rasterized
p48773
sg14
(lp48774
sg2
S'rasterized'
p48775
sbag37640
ag40076
ag7369
a(icodemend.demo.code_suggest
Element
p48776
(dp48777
g10
I0
sg11
S'sets the sketch parameters .'
p48778
sg12
Vbroken_barh.sketch_params
p48779
sg14
(lp48780
sg2
S'sketch_params'
p48781
sbag10788
a(icodemend.demo.code_suggest
Element
p48782
(dp48783
g10
I0
sg11
S'set a title for the axes .'
p48784
sg12
Vbroken_barh.title
p48785
sg14
(lp48786
sg2
S'title'
p48787
sbag45465
ag43149
ag37336
ag42916
a(icodemend.demo.code_suggest
Element
p48788
(dp48789
g10
I0
sg11
S'set the label for the xaxis .'
p48790
sg12
Vbroken_barh.xlabel
p48791
sg14
(lp48792
sg2
S'xlabel'
p48793
sbag35911
a(icodemend.demo.code_suggest
Element
p48794
(dp48795
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p48796
sg12
Vbroken_barh.xmargin
p48797
sg14
(lp48798
sg2
S'xmargin'
p48799
sbag27343
ag46007
a(icodemend.demo.code_suggest
Element
p48800
(dp48801
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p48802
sg12
Vbroken_barh.xticklabels
p48803
sg14
(lp48804
sg2
S'xticklabels'
p48805
sba(icodemend.demo.code_suggest
Element
p48806
(dp48807
g10
I0
sg11
S'set the x ticks with list of ticks'
p48808
sg12
Vbroken_barh.xticks
p48809
sg14
(lp48810
sg2
S'xticks'
p48811
sbag14798
a(icodemend.demo.code_suggest
Element
p48812
(dp48813
g10
I0
sg11
S'set the data limits for the yaxis'
p48814
sg12
Vbroken_barh.ylim
p48815
sg14
(lp48816
sg2
S'ylim'
p48817
sbag26195
ag42723
a(icodemend.demo.code_suggest
Element
p48818
(dp48819
g10
I0
sg11
S'set the scaling of the y-axis'
p48820
sg12
Vbroken_barh.yscale
p48821
sg14
(lp48822
sg2
S'yscale'
p48823
sbag6238
a(icodemend.demo.code_suggest
Element
p48824
(dp48825
g10
I0
sg11
S'set the y ticks with list of ticks'
p48826
sg12
Vbroken_barh.yticks
p48827
sg14
(lp48828
sg2
S'yticks'
p48829
sbag35468
asg2
g48669
sbs(g109
g2175
g44516
tp48830
g44512
s(g245
g140
g30568
tp48831
g30564
s(S'cleaned'
p48832
S'snap'
p48833
tp48834
(icodemend.demo.code_suggest
Element
p48835
(dp48836
g10
I0
sg11
S"if none , auto-snap to pixels , to reduce fuzziness of rectilinear lines . if true , force snapping , and if false , do n't snap ."
p48837
sg12
Vcleaned.snap
p48838
sg14
(lp48839
sg2
g48833
sbs(g93
g4800
g25514
tp48840
g25510
s(g6217
g132
g2429
tp48841
g2425
s(g252
g253
g14021
tp48842
g14017
s(S'set_yticklabels'
p48843
g18136
tp48844
g18131
s(S'text'
p48845
g48380
tp48846
g48375
s(S'plot'
p48847
g28934
tp48848
g28669
s(g117
g909
g29283
tp48849
g29279
s(g93
g4800
g25329
tp48850
g25325
s(g93
g161
S'(0, ypos)'
p48851
tp48852
(icodemend.demo.code_suggest
Element
p48853
(dp48854
g10
I1
sg11
S''
sg12
Vannotate.xy.(0, ypos)
p48855
sg14
(lp48856
sg2
g48851
sbs(S'annotate'
p48857
S'axes'
p48858
tp48859
(icodemend.demo.code_suggest
Element
p48860
(dp48861
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p48862
sg12
Vannotate.axes
p48863
sg14
(lp48864
sg2
g48858
sbs(g4998
g4459
S'-7'
p48865
tp48866
(icodemend.demo.code_suggest
Element
p48867
(dp48868
g10
I1
sg11
S''
sg12
Vpcolormesh.vmin.-7
p48869
sg14
(lp48870
sg2
g48865
sbs(S'annotate'
p48871
S'color_cycle'
p48872
tp48873
(icodemend.demo.code_suggest
Element
p48874
(dp48875
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p48876
sg12
Vannotate.color_cycle
p48877
sg14
(lp48878
sg2
g48872
sbs(S'errorbar'
p48879
S'False'
p48880
tp48881
(icodemend.demo.code_suggest
Element
p48882
(dp48883
g10
I0
sg11
S'these arguments can be used to indicate that a value gives only upper/lower limits . in that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . to use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||if true , will plot the errorbars above the plot symbols . default is below .'
p48884
sg12
Verrorbar.False
p48885
sg14
(lp48886
sg2
g48880
sbs(S'axhline'
p48887
g3561
tp48888
g3556
sS'cross_from_below'
p48889
(icodemend.demo.code_suggest
Element
p48890
(dp48891
g10
I0
sg11
S"return the indices into x where x crosses some threshold from below , e.g. , the i 's where"
p48892
sg12
Vcross_from_below
p48893
sg14
(lp48894
(icodemend.demo.code_suggest
Element
p48895
(dp48896
g10
I0
sg11
S"return the indices into x where x crosses some threshold from below , e.g. , the i 's where :"
p48897
sg12
Vcross_from_below.x
p48898
sg14
(lp48899
sg2
S'x'
sbasg2
g48889
sbs(S'get'
p48900
S'xticks'
p48901
tp48902
(icodemend.demo.code_suggest
Element
p48903
(dp48904
g10
I0
sg11
S'set the x ticks with list of ticks'
p48905
sg12
Vget.xticks
p48906
sg14
(lp48907
sg2
g48901
sbs(g93
g4800
g25314
tp48908
g25310
s(g5975
g4274
g19712
tp48909
g19708
s(S'barh'
p48910
S'yticks'
p48911
tp48912
(icodemend.demo.code_suggest
Element
p48913
(dp48914
g10
I0
sg11
S'set the y ticks with list of ticks'
p48915
sg12
Vbarh.yticks
p48916
sg14
(lp48917
sg2
g48911
sbs(S'index_bar'
p48918
g8337
tp48919
g8332
s(S'plot'
p48920
g29910
tp48921
g29905
s(g101
S'c'
S'h'
tp48922
g21513
s(S'semilogy'
p48923
g39205
tp48924
g39200
sS'remove_callback'
p48925
(icodemend.demo.code_suggest
Element
p48926
(dp48927
g10
I0
sg11
S'remove a callback based on its id .'
p48928
sg12
Vremove_callback
p48929
sg14
(lp48930
(icodemend.demo.code_suggest
Element
p48931
(dp48932
g10
I0
sg11
S'remove a callback based on its id .'
p48933
sg12
Vremove_callback.id
p48934
sg14
(lp48935
sg2
S'id'
p48936
sbasg2
g48925
sbs(g766
g40386
g438
tp48937
g46690
s(g1170
g118
S"'Dist C'"
p48938
tp48939
(icodemend.demo.code_suggest
Element
p48940
(dp48941
g10
I1
sg11
S''
sg12
Vhist.label.'Dist C'
p48942
sg14
(lp48943
sg2
g48938
sbs(g944
g945
S'5.0'
p48944
tp48945
(icodemend.demo.code_suggest
Element
p48946
(dp48947
g10
I1
sg11
S''
sg12
Vbarh.height.5/0
p48948
sg14
(lp48949
sg2
g48944
sbs(S'psd'
p48950
g36976
tp48951
g36971
s(S'plot_date'
p48952
g19961
tp48953
g19956
s(g101
g118
g21975
tp48954
g21971
s(g5424
g132
S"'w'"
p48955
tp48956
(icodemend.demo.code_suggest
Element
p48957
(dp48958
g10
I7
sg11
S''
sg12
Vgrid.color.'w'
p48959
sg14
(lp48960
sg2
g48955
sbs(g324
g785
g9357
tp48961
g9353
s(g252
g253
g14136
tp48962
g14132
s(g252
g253
g14106
tp48963
g14102
s(S'phase_spectrum'
p48964
S'position'
p48965
tp48966
(icodemend.demo.code_suggest
Element
p48967
(dp48968
g10
I0
sg11
S'set the axes position with'
p48969
sg12
Vphase_spectrum.position
p48970
sg14
(lp48971
sg2
g48965
sbsS'rc_context'
p48972
(icodemend.demo.code_suggest
Element
p48973
(dp48974
g10
I3
sg11
S'return a context manager for managing rc settings .'
p48975
sg12
Vrc_context
p48976
sg14
(lp48977
sg2
g48972
sbs(S'text'
p48978
g48338
tp48979
g48333
s(S'AnchoredText'
p48980
S'borderpad'
p48981
tp48982
(icodemend.demo.code_suggest
Element
p48983
(dp48984
g10
I0
sg11
S'pad between the frame and the axes ( or bbox_to_anchor ) .'
p48985
sg12
VAnchoredText.borderpad
p48986
sg14
(lp48987
sg2
g48981
sbs(g101
S's'
g7731
tp48988
g7727
s(S'waitforbuttonpress'
p48989
S'timeout'
p48990
S'0.5'
p48991
tp48992
(icodemend.demo.code_suggest
Element
p48993
(dp48994
g10
I1
sg11
S''
sg12
Vwaitforbuttonpress.timeout.0/5
p48995
sg14
(lp48996
sg2
g48991
sbs(g101
S's'
g7600
tp48997
g7596
s(g944
g1262
S'lefts'
p48998
tp48999
(icodemend.demo.code_suggest
Element
p49000
(dp49001
g10
I4
sg11
S''
sg12
Vbarh.left.lefts
p49002
sg14
(lp49003
sg2
g48998
sbsS'ttfFontProperty'
p49004
(icodemend.demo.code_suggest
Element
p49005
(dp49006
g10
I0
sg11
S'a function for populating the fontkey by extracting information from the truetype font file .'
p49007
sg12
VttfFontProperty
p49008
sg14
(lp49009
g46255
asg2
g49004
sbs(g4371
g7032
g17504
tp49010
g17500
s(g26208
g126
S'0'
tp49011
g4821
s(g20499
g20500
g15510
tp49012
g15506
s(g944
g39824
g41416
tp49013
g41412
sS'pink'
p49014
(icodemend.demo.code_suggest
Element
p49015
(dp49016
g10
I0
sg11
S'set the default colormap to pink and apply to current image if any .'
p49017
sg12
Vpink
p49018
sg14
(lp49019
sg2
g49014
sbs(g93
g4800
g25539
tp49020
g25535
s(S'add'
p49021
S'animated'
p49022
tp49023
(icodemend.demo.code_suggest
Element
p49024
(dp49025
g10
I0
sg11
S"set the artist 's animation state ."
p49026
sg12
Vadd.animated
p49027
sg14
(lp49028
sg2
g49022
sbs(g245
g3075
S'80'
p49029
tp49030
(icodemend.demo.code_suggest
Element
p49031
(dp49032
g10
I10
sg11
S''
sg12
Vfigure.dpi.80
p49033
sg14
(lp49034
sg2
g49029
sbs(g117
g118
g28294
tp49035
g28290
s(g324
g785
g9561
tp49036
g9557
s(g117
g118
g27473
tp49037
g27469
s(S'annotate'
p49038
S'multialignment'
p49039
tp49040
(icodemend.demo.code_suggest
Element
p49041
(dp49042
g10
I0
sg11
S'set the alignment for multiple lines layout .'
p49043
sg12
Vannotate.multialignment
p49044
sg14
(lp49045
sg2
g49039
sbs(g101
S'c'
g21395
tp49046
g21391
s(S'candlestick2_ohlc'
p49047
g47122
tp49048
g47117
s(S'annotate'
p49049
S'y'
tp49050
(icodemend.demo.code_suggest
Element
p49051
(dp49052
g10
I0
sg11
S'set the y position of the text'
p49053
sg12
Vannotate.y
p49054
sg14
(lp49055
sg2
S'y'
sbs(g139
g140
g1528
tp49056
g1524
s(S'barh'
p49057
S'xscale'
p49058
tp49059
(icodemend.demo.code_suggest
Element
p49060
(dp49061
g10
I0
sg11
S'set the scaling of the x-axis'
p49062
sg12
Vbarh.xscale
p49063
sg14
(lp49064
sg2
g49058
sbsS'set_ymargin'
p49065
(icodemend.demo.code_suggest
Element
p49066
(dp49067
g10
I1
sg11
S'set padding of y data limits prior to autoscaling .'
p49068
sg12
Vset_ymargin
p49069
sg14
(lp49070
g41276
asg2
g49065
sbsS'grow'
p49071
(icodemend.demo.code_suggest
Element
p49072
(dp49073
g10
I0
sg11
S'grows one level larger .'
p49074
sg12
Vgrow
p49075
sg14
(lp49076
sg2
g49071
sbs(g4371
g102
g17702
tp49077
g17698
s(S'angle_spectrum'
p49078
g18672
tp49079
g18667
s(S'isowner'
p49080
S'o'
tp49081
g38606
s(S'pcolorfast'
p49082
g33850
tp49083
g33845
s(g514
g325
g9242
tp49084
g48176
s(g245
g140
g30463
tp49085
g30459
s(g117
g909
S'3'
tp49086
g29275
s(S'hlines'
p49087
g5373
tp49088
g5368
s(g117
g118
g27769
tp49089
g27765
s(g117
g4163
g11012
tp49090
g11008
sS'get_minorticklocs'
p49091
(icodemend.demo.code_suggest
Element
p49092
(dp49093
g10
I4
sg11
S'get the minor tick locations in data coordinates as a numpy array'
p49094
sg12
Vget_minorticklocs
p49095
sg14
(lp49096
sg2
g49091
sbs(g965
g2155
g2955
tp49097
g2951
s(S'figtext'
p49098
g11263
tp49099
g11258
s(S'polar'
p49100
g37733
tp49101
g37728
s(g139
g140
g1787
tp49102
g1783
s(S'wrap'
p49103
g6412
tp49104
g6407
s(S'axvline'
p49105
S'marker'
p49106
tp49107
(icodemend.demo.code_suggest
Element
p49108
(dp49109
g10
I0
sg11
S'set the line marker'
p49110
sg12
Vaxvline.marker
p49111
sg14
(lp49112
sg2
g49106
sbs(S'barbs'
p49113
S'linestyle'
p49114
tp49115
(icodemend.demo.code_suggest
Element
p49116
(dp49117
g10
I0
sg11
S'set the patch linestyle|||set the linestyle(s ) for the collection .'
p49118
sg12
Vbarbs.linestyle
p49119
sg14
(lp49120
sg2
g49114
sbsS'set_mfc'
p49121
(icodemend.demo.code_suggest
Element
p49122
(dp49123
g10
I0
sg11
S'alias for set_markerfacecolor'
p49124
sg12
Vset_mfc
p49125
sg14
(lp49126
sg2
g49121
sbsS'set_fontweight'
p49127
(icodemend.demo.code_suggest
Element
p49128
(dp49129
g10
I0
sg11
S'alias for set_weight'
p49130
sg12
Vset_fontweight
p49131
sg14
(lp49132
sg2
g49127
sbs(g93
g18604
g22567
tp49133
g22563
s(g1170
g118
S"'B'"
p49134
tp49135
(icodemend.demo.code_suggest
Element
p49136
(dp49137
g10
I1
sg11
S''
sg12
Vhist.label.'B'
p49138
sg14
(lp49139
sg2
g49134
sbs(S'csd'
p49140
S'xticklabels'
p49141
tp49142
(icodemend.demo.code_suggest
Element
p49143
(dp49144
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p49145
sg12
Vcsd.xticklabels
p49146
sg14
(lp49147
sg2
g49141
sbs(g117
g118
g28564
tp49148
g28560
s(S'set_yscale'
p49149
g15563
tp49150
g15558
s(g117
g118
g28599
tp49151
g28595
s(S'magnitude_spectrum'
p49152
g48038
tp49153
g48033
sS'get_figlabels'
p49154
(icodemend.demo.code_suggest
Element
p49155
(dp49156
g10
I0
sg11
S'return a list of existing figure labels .'
p49157
sg12
Vget_figlabels
p49158
sg14
(lp49159
sg2
g49154
sbs(g117
g118
g27556
tp49160
g27552
s(g388
g3084
g17000
tp49161
g16996
s(g5424
g132
S"'0.75'"
p49162
tp49163
(icodemend.demo.code_suggest
Element
p49164
(dp49165
g10
I2
sg11
S''
sg12
Vgrid.color.'0/75'
p49166
sg14
(lp49167
sg2
g49162
sbsS'save_figure'
p49168
(icodemend.demo.code_suggest
Element
p49169
(dp49170
g10
I1
sg11
S'save the current figure'
p49171
sg12
Vsave_figure
p49172
sg14
(lp49173
sg2
g49168
sbs(S'rc'
p49174
g2980
tp49175
g2975
s(S'refine_triangulation'
p49176
g26654
tp49177
g26641
s(S'figtext'
p49178
g11185
tp49179
g11175
s(S'pcolormesh'
p49180
S'prop_cycle'
p49181
tp49182
(icodemend.demo.code_suggest
Element
p49183
(dp49184
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p49185
sg12
Vpcolormesh.prop_cycle
p49186
sg14
(lp49187
sg2
g49181
sbs(g965
g4340
g4206
tp49188
g4202
s(S'csd'
p49189
S'sides'
p49190
tp49191
(icodemend.demo.code_suggest
Element
p49192
(dp49193
g10
I0
sg11
S"specifies which sides of the spectrum to return . default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided ."
p49194
sg12
Vcsd.sides
p49195
sg14
(lp49196
sg2
g49190
sbs(S'add_subplot'
p49197
g47543
tp49198
g47538
s(S'bxp'
p49199
g41601
tp49200
g41596
s(S'pcolormesh'
p49201
S'transform'
p49202
tp49203
(icodemend.demo.code_suggest
Element
p49204
(dp49205
g10
I2
sg11
S'set the transform instance used by this artist .'
p49206
sg12
Vpcolormesh.transform
p49207
sg14
(lp49208
sg2
g49202
sbs(S'hist2d'
p49209
g42210
tp49210
g42205
s(g117
g132
g28765
tp49211
g28761
s(g944
g2392
S'0'
tp49212
(icodemend.demo.code_suggest
Element
p49213
(dp49214
g10
I1
sg11
S''
sg12
Vbarh.linewidth.0
p49215
sg14
(lp49216
sg2
S'0'
sbs(S'plot_date'
p49217
g20051
tp49218
g20046
s(S'barh'
p49219
S'xlabel'
p49220
tp49221
(icodemend.demo.code_suggest
Element
p49222
(dp49223
g10
I0
sg11
S'set the label for the xaxis .'
p49224
sg12
Vbarh.xlabel
p49225
sg14
(lp49226
sg2
g49220
sbsS'set_dashdirection'
p49227
(icodemend.demo.code_suggest
Element
p49228
(dp49229
g10
I0
sg11
S'set the direction of the dash following the text .'
p49230
sg12
Vset_dashdirection
p49231
sg14
(lp49232
sg2
g49227
sbs(S'axhspan'
p49233
g24436
tp49234
g24431
s(S'psd'
p49235
g36910
tp49236
g36905
sS'issubclass_safe'
p49237
(icodemend.demo.code_suggest
Element
p49238
(dp49239
g10
I0
sg11
S'return issubclass(x , klass ) and return false on a typeerror'
p49240
sg12
Vissubclass_safe
p49241
sg14
(lp49242
sg2
g49237
sbs(S'set_xticklabels'
p49243
g17253
tp49244
g17248
s(S'axhspan'
p49245
g24489
tp49246
g24484
s(S'pan'
p49247
S'numsteps'
p49248
tp49249
(icodemend.demo.code_suggest
Element
p49250
(dp49251
g10
I0
sg11
S'pan numsteps ( can be positive or negative )'
p49252
sg12
Vpan.numsteps
p49253
sg14
(lp49254
sg2
g49248
sbs(g139
g140
g1777
tp49255
g1773
sS'streamplot'
p49256
(icodemend.demo.code_suggest
Element
p49257
(dp49258
g10
I19
sg11
S'draws streamlines of a vector flow .'
p49259
sg12
Vstreamplot
p49260
sg14
(lp49261
(icodemend.demo.code_suggest
Element
p49262
(dp49263
g10
I19
sg11
S'streamline color . when given an array with the same shape as velocities , color values are converted to colors using cmap .'
p49264
sg12
Vstreamplot.color
p49265
sg14
(lp49266
g5676
a(icodemend.demo.code_suggest
Element
p49267
(dp49268
g10
I4
sg11
S''
sg12
Vstreamplot.color.'k'
p49269
sg14
(lp49270
sg2
S"'k'"
p49271
sba(icodemend.demo.code_suggest
Element
p49272
(dp49273
g10
I2
sg11
S''
sg12
Vstreamplot.color.'b'
p49274
sg14
(lp49275
sg2
S"'b'"
p49276
sbag37351
ag20782
ag16583
a(icodemend.demo.code_suggest
Element
p49277
(dp49278
g10
I1
sg11
S''
sg12
Vstreamplot.color.(0, 0, 1, 0/3)
p49279
sg14
(lp49280
sg2
S'(0, 0, 1, 0.3)'
p49281
sbag7466
a(icodemend.demo.code_suggest
Element
p49282
(dp49283
g10
I1
sg11
S''
sg12
Vstreamplot.color.gspeed
p49284
sg14
(lp49285
sg2
S'gspeed'
p49286
sbasg2
S'color'
p49287
sba(icodemend.demo.code_suggest
Element
p49288
(dp49289
g10
I13
sg11
S'controls the closeness of streamlines . when density = 1 , the domain is divided into a 30x30 grid---density linearly scales this grid . each cell in the grid can have , at most , one traversing streamline . for different densities in each direction , use [ density_x , density_y ] .'
p49290
sg12
Vstreamplot.density
p49291
sg14
(lp49292
g24821
a(icodemend.demo.code_suggest
Element
p49293
(dp49294
g10
I5
sg11
S''
sg12
Vstreamplot.density.2
p49295
sg14
(lp49296
sg2
S'2'
sba(icodemend.demo.code_suggest
Element
p49297
(dp49298
g10
I2
sg11
S''
sg12
Vstreamplot.density.(1, 1)
p49299
sg14
(lp49300
sg2
S'(1, 1)'
p49301
sbasg2
S'density'
p49302
sbag6199
ag42021
ag39603
ag343
ag17921
ag40767
a(icodemend.demo.code_suggest
Element
p49303
(dp49304
g10
I0
sg11
S'coordinates of starting points for the streamlines . in data coordinates , the same as the x and y arrays .'
p49305
sg12
Vstreamplot.start_points
p49306
sg14
(lp49307
sg2
S'start_points'
p49308
sbag37243
ag31568
a(icodemend.demo.code_suggest
Element
p49309
(dp49310
g10
I0
sg11
S'an evenly spaced grid .'
p49311
sg12
Vstreamplot.x
p49312
sg14
(lp49313
sg2
S'x'
sbag41343
a(icodemend.demo.code_suggest
Element
p49314
(dp49315
g10
I0
sg11
S'any number'
p49316
sg12
Vstreamplot.zorder
p49317
sg14
(lp49318
sg2
S'zorder'
p49319
sbasg2
g49256
sbs(g324
g325
g9168
tp49320
g9164
s(g4998
g4459
S'-10'
p49321
tp49322
(icodemend.demo.code_suggest
Element
p49323
(dp49324
g10
I1
sg11
S''
sg12
Vpcolormesh.vmin.-10
p49325
sg14
(lp49326
sg2
g49321
sbs(S'twiny'
p49327
S'y'
tp49328
g21183
s(S'axhspan'
p49329
g24340
tp49330
g24335
s(g5848
g5849
S'0.5'
p49331
tp49332
(icodemend.demo.code_suggest
Element
p49333
(dp49334
g10
I3
sg11
S''
sg12
VSlider.valinit.0/5
p49335
sg14
(lp49336
sg2
g49331
sbs(S'update_from'
p49337
g42899
tp49338
g42894
s(S'boxplot_stats'
p49339
g34246
tp49340
g34241
s(S'arrow'
p49341
g2623
tp49342
g2618
s(S'magnitude_spectrum'
p49343
g48110
tp49344
g48105
s(g324
g785
g9636
tp49345
g9632
s(S'axhline'
p49346
g3633
tp49347
g3628
s(S'get_kern'
p49348
g42333
tp49349
g42328
s(g324
g785
g785
tp49350
g9269
s(g93
g161
S'(0, (-0.1))'
p49351
tp49352
(icodemend.demo.code_suggest
Element
p49353
(dp49354
g10
I1
sg11
S''
sg12
Vannotate.xy.(0, (-0/1))
p49355
sg14
(lp49356
sg2
g49351
sbs(g4998
g325
S"'Blues'"
p49357
tp49358
(icodemend.demo.code_suggest
Element
p49359
(dp49360
g10
I3
sg11
S''
sg12
Vpcolormesh.cmap.'Blues'
p49361
sg14
(lp49362
sg2
g49357
sbs(S'Slider'
p49363
S'dragging'
p49364
tp49365
(icodemend.demo.code_suggest
Element
p49366
(dp49367
g10
I0
sg11
S'if the slider can be dragged by the mouse'
p49368
sg12
VSlider.dragging
p49369
sg14
(lp49370
sg2
g49364
sbs(S'hexbin'
p49371
g26045
tp49372
g26040
s(g944
g132
g35725
tp49373
g35721
s(S'set_xlim'
p49374
S'x'
tp49375
g4630
sS'tick_top'
p49376
(icodemend.demo.code_suggest
Element
p49377
(dp49378
g10
I13
sg11
S'use ticks only on top'
p49379
sg12
Vtick_top
p49380
sg14
(lp49381
sg2
g49376
sbsS'set_patch_circle'
p49382
(icodemend.demo.code_suggest
Element
p49383
(dp49384
g10
I2
sg11
S'set the spine to be circular'
p49385
sg12
Vset_patch_circle
p49386
sg14
(lp49387
sg2
g49382
sbsS'get_lines'
p49388
(icodemend.demo.code_suggest
Element
p49389
(dp49390
g10
I15
sg11
S'return a list of lines.line2d instances in the legend return a list of lines contained by the axes'
p49391
sg12
Vget_lines
p49392
sg14
(lp49393
sg2
g49388
sbs(g139
g140
g1722
tp49394
g1718
s(S'cohere'
p49395
g43861
tp49396
g43856
s(g944
g118
S"'TI'"
p49397
tp49398
(icodemend.demo.code_suggest
Element
p49399
(dp49400
g10
I1
sg11
S''
sg12
Vbarh.label.'TI'
p49401
sg14
(lp49402
sg2
g49397
sbsS'get_navigate_mode'
p49403
(icodemend.demo.code_suggest
Element
p49404
(dp49405
g10
I0
sg11
S'get the navigation toolbar button status'
p49406
sg12
Vget_navigate_mode
p49407
sg14
(lp49408
sg2
g49403
sbs(g1003
g14825
g1944
tp49409
g20495
s(g245
g140
g30493
tp49410
g30489
s(S'getp'
p49411
S'property'
p49412
tp49413
(icodemend.demo.code_suggest
Element
p49414
(dp49415
g10
I0
sg11
S"return the value of object 's property . property is an optional string for the property you want to return|||obj is a artist instance , e.g. , line2d or an instance of a axes or matplotlib.text.text . if the property is ' somename ' , this function returns"
p49416
sg12
Vgetp.property
p49417
sg14
(lp49418
sg2
g49412
sbs(g93
g4800
g25404
tp49419
g25400
s(g324
g785
g9751
tp49420
g9747
s(S'barh'
p49421
S'error_kw :'
p49422
tp49423
(icodemend.demo.code_suggest
Element
p49424
(dp49425
g10
I0
sg11
S'dictionary of kwargs to be passed to errorbar method . ecolor and capsize may be specified here rather than as independent kwargs .'
p49426
sg12
Vbarh.error_kw :
p49427
sg14
(lp49428
sg2
g49422
sbsS'pcolor'
p49429
(icodemend.demo.code_suggest
Element
p49430
(dp49431
g10
I94
sg11
S'create a pseudocolor plot of a 2-d array .'
p49432
sg12
Vpcolor
p49433
sg14
(lp49434
g48158
ag45016
ag44110
ag10546
ag12889
a(icodemend.demo.code_suggest
Element
p49435
(dp49436
g10
I2
sg11
S'set the edgecolor(s ) of the collection .'
p49437
sg12
Vpcolor.edgecolor
p49438
sg14
(lp49439
g24956
ag45725
asg2
S'edgecolor'
p49440
sba(icodemend.demo.code_suggest
Element
p49441
(dp49442
g10
I2
sg11
S'set the patch linestyle|||set the linestyle(s ) for the collection .'
p49443
sg12
Vpcolor.linestyle
p49444
sg14
(lp49445
g35266
ag32109
asg2
S'linestyle'
p49446
sbag32075
ag23196
a(icodemend.demo.code_suggest
Element
p49447
(dp49448
g10
I1
sg11
S'set the epsilon for picking used by this artist'
p49449
sg12
Vpcolor.picker
p49450
sg14
(lp49451
g35560
asg2
S'picker'
p49452
sbag22281
ag26497
ag45890
ag44302
a(icodemend.demo.code_suggest
Element
p49453
(dp49454
g10
I0
sg11
S'if either or both of x and y are 1-d arrays or column vectors , they will be expanded as needed into the appropriate 2-d arrays , making a rectangular grid .|||the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .|||x , y and c may be masked arrays . if either c[i , j ] , or one of the vertices surrounding c[i,j ] ( x or y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||x and y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for c[i,j ] has corners at :|||matlab pcolor ( ) always discards the last row and column of c , but matplotlib displays the last row and column if x and y are not specified , or if x and y have one more row and column than c .|||ideally the dimensions of x and y should be one greater than those of c ; if the dimensions are the same , then the last row and column of c will be ignored .'
p49455
sg12
Vpcolor.Y
p49456
sg14
(lp49457
sg2
S'Y'
sba(icodemend.demo.code_suggest
Element
p49458
(dp49459
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p49460
sg12
Vpcolor._interpolation_steps
p49461
sg14
(lp49462
sg2
S'_interpolation_steps'
p49463
sba(icodemend.demo.code_suggest
Element
p49464
(dp49465
g10
I0
sg11
S'set agg_filter fuction .'
p49466
sg12
Vpcolor.agg_filter
p49467
sg14
(lp49468
sg2
S'agg_filter'
p49469
sba(icodemend.demo.code_suggest
Element
p49470
(dp49471
g10
I0
sg11
S'the alpha blending value|||set the alpha tranparencies of the collection .'
p49472
sg12
Vpcolor.alpha
p49473
sg14
(lp49474
sg2
S'alpha'
p49475
sbag45319
ag34184
ag5821
ag41861
a(icodemend.demo.code_suggest
Element
p49476
(dp49477
g10
I0
sg11
S'aspect'
p49478
sg12
Vpcolor.aspect
p49479
sg14
(lp49480
sg2
S'aspect'
p49481
sbag34052
ag38193
a(icodemend.demo.code_suggest
Element
p49482
(dp49483
g10
I0
sg11
S"set the artist 's clip bbox ."
p49484
sg12
Vpcolor.clip_box
p49485
sg14
(lp49486
sg2
S'clip_box'
p49487
sbag24861
ag34638
a(icodemend.demo.code_suggest
Element
p49488
(dp49489
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p49490
sg12
Vpcolor.codes
p49491
sg14
(lp49492
sg2
S'codes'
p49493
sbag33553
ag37517
ag35333
ag22483
a(icodemend.demo.code_suggest
Element
p49494
(dp49495
g10
I0
sg11
S'set the facecolor(s ) of the collection .'
p49496
sg12
Vpcolor.facecolor
p49497
sg14
(lp49498
sg2
S'facecolor'
p49499
sbag11720
a(icodemend.demo.code_suggest
Element
p49500
(dp49501
g10
I0
sg11
S'sets the ( group ) id for the artist'
p49502
sg12
Vpcolor.gid
p49503
sg14
(lp49504
sg2
S'gid'
p49505
sbag16747
ag5956
ag15202
ag13463
a(icodemend.demo.code_suggest
Element
p49506
(dp49507
g10
I0
sg11
S'set how offsets are applied .'
p49508
sg12
Vpcolor.offset_position
p49509
sg14
(lp49510
sg2
S'offset_position'
p49511
sbag38121
ag31955
ag48619
a(icodemend.demo.code_suggest
Element
p49512
(dp49513
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p49514
sg12
Vpcolor.prop_cycle
p49515
sg14
(lp49516
sg2
S'prop_cycle'
p49517
sba(icodemend.demo.code_suggest
Element
p49518
(dp49519
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p49520
sg12
Vpcolor.rasterized
p49521
sg14
(lp49522
sg2
S'rasterized'
p49523
sbag15426
a(icodemend.demo.code_suggest
Element
p49524
(dp49525
g10
I0
sg11
S"if ' faceted ' , a black grid is drawn around each rectangle ; if ' flat ' , edges are not drawn . default is ' flat ' , contrary to matlab . this kwarg is deprecated ; please use ' edgecolors ' instead : shading='flat ' - - edgecolors='none ' shading='faceted - - edgecolors='k '"
p49526
sg12
Vpcolor.shading
p49527
sg14
(lp49528
sg2
S'shading'
p49529
sbag4427
a(icodemend.demo.code_suggest
Element
p49530
(dp49531
g10
I0
sg11
S'set the sizes of each member of the collection .'
p49532
sg12
Vpcolor.sizes
p49533
sg14
(lp49534
sg2
S'sizes'
p49535
sbag34735
ag5493
ag22726
a(icodemend.demo.code_suggest
Element
p49536
(dp49537
g10
I0
sg11
S'set the transform instance used by this artist .'
p49538
sg12
Vpcolor.transform
p49539
sg14
(lp49540
sg2
S'transform'
p49541
sba(icodemend.demo.code_suggest
Element
p49542
(dp49543
g10
I0
sg11
S'sets the url for the artist'
p49544
sg12
Vpcolor.url
p49545
sg14
(lp49546
sg2
S'url'
p49547
sbag31805
a(icodemend.demo.code_suggest
Element
p49548
(dp49549
g10
I0
sg11
S"set the artist 's visiblity ."
p49550
sg12
Vpcolor.visible
p49551
sg14
(lp49552
sg2
S'visible'
p49553
sbag2245
a(icodemend.demo.code_suggest
Element
p49554
(dp49555
g10
I0
sg11
S'set the label for the xaxis .'
p49556
sg12
Vpcolor.xlabel
p49557
sg14
(lp49558
sg2
S'xlabel'
p49559
sba(icodemend.demo.code_suggest
Element
p49560
(dp49561
g10
I0
sg11
S'set the data limits for the xaxis'
p49562
sg12
Vpcolor.xlim
p49563
sg14
(lp49564
sg2
S'xlim'
p49565
sbag11742
a(icodemend.demo.code_suggest
Element
p49566
(dp49567
g10
I0
sg11
S'set the scaling of the x-axis'
p49568
sg12
Vpcolor.xscale
p49569
sg14
(lp49570
sg2
S'xscale'
p49571
sba(icodemend.demo.code_suggest
Element
p49572
(dp49573
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p49574
sg12
Vpcolor.xticklabels
p49575
sg14
(lp49576
sg2
S'xticklabels'
p49577
sbag47011
ag44773
a(icodemend.demo.code_suggest
Element
p49578
(dp49579
g10
I0
sg11
S'set the label for the yaxis'
p49580
sg12
Vpcolor.ylabel
p49581
sg14
(lp49582
sg2
S'ylabel'
p49583
sbag23031
ag47771
a(icodemend.demo.code_suggest
Element
p49584
(dp49585
g10
I0
sg11
S'set the scaling of the y-axis'
p49586
sg12
Vpcolor.yscale
p49587
sg14
(lp49588
sg2
S'yscale'
p49589
sbag34527
a(icodemend.demo.code_suggest
Element
p49590
(dp49591
g10
I0
sg11
S'set the y ticks with list of ticks'
p49592
sg12
Vpcolor.yticks
p49593
sg14
(lp49594
sg2
S'yticks'
p49595
sba(icodemend.demo.code_suggest
Element
p49596
(dp49597
g10
I0
sg11
S'set the zorder for the artist .'
p49598
sg12
Vpcolor.zorder
p49599
sg14
(lp49600
sg2
S'zorder'
p49601
sbasg2
g49429
sbsS'get_xy'
p49602
(icodemend.demo.code_suggest
Element
p49603
(dp49604
g10
I6
sg11
S'get the vertices of the path return the left and bottom coords of the rectangle'
p49605
sg12
Vget_xy
p49606
sg14
(lp49607
sg2
g49602
sbsS'shade_rgb'
p49608
(icodemend.demo.code_suggest
Element
p49609
(dp49610
g10
I0
sg11
S'take the input rgb array ( ny*nx*3 ) adjust their color values to given the impression of a shaded relief map with a specified light source using the elevation ( ny*nx ) .'
p49611
sg12
Vshade_rgb
p49612
sg14
(lp49613
g46817
a(icodemend.demo.code_suggest
Element
p49614
(dp49615
g10
I0
sg11
S'the x-spacing ( columns ) of the input elevation grid .'
p49616
sg12
Vshade_rgb.dx
p49617
sg14
(lp49618
sg2
S'dx'
p49619
sbag44653
ag34554
ag39999
ag22357
ag4843
asg2
g49608
sbs(S'text'
p49620
g48464
tp49621
g48459
sS'subplot'
p49622
(icodemend.demo.code_suggest
Element
p49623
(dp49624
g10
I639
sg11
S'return a subplot axes positioned by the given grid definition .'
p49625
sg12
Vsubplot
p49626
sg14
(lp49627
(icodemend.demo.code_suggest
Element
p49628
(dp49629
g10
I24
sg11
S'a string giving the name of a custom projection to be used for the subplot . this projection must have been previously registered . see matplotlib.projections .'
p49630
sg12
Vsubplot.projection
p49631
sg14
(lp49632
g8946
ag41682
a(icodemend.demo.code_suggest
Element
p49633
(dp49634
g10
I4
sg11
S''
sg12
Vsubplot.projection.proj
p49635
sg14
(lp49636
sg2
S'proj'
p49637
sba(icodemend.demo.code_suggest
Element
p49638
(dp49639
g10
I1
sg11
S''
sg12
Vsubplot.projection.'MyRectilinearAxes'
p49640
sg14
(lp49641
sg2
S"'MyRectilinearAxes'"
p49642
sba(icodemend.demo.code_suggest
Element
p49643
(dp49644
g10
I1
sg11
S''
sg12
Vsubplot.projection.'eastpolar'
p49645
sg14
(lp49646
sg2
S"'eastpolar'"
p49647
sbag41566
asg2
S'projection'
p49648
sba(icodemend.demo.code_suggest
Element
p49649
(dp49650
g10
I13
sg11
S'a boolean flag indicating whether the subplot plot should be a polar projection . defaults to false .'
p49651
sg12
Vsubplot.polar
p49652
sg14
(lp49653
(icodemend.demo.code_suggest
Element
p49654
(dp49655
g10
I13
sg11
S''
sg12
Vsubplot.polar.True
p49656
sg14
(lp49657
sg2
g438
sbasg2
S'polar'
p49658
sbag33528
ag2379
ag42473
a(icodemend.demo.code_suggest
Element
p49659
(dp49660
g10
I0
sg11
S'where nrows and ncols are used to notionally split the figure into nrows * ncols sub-axes , and plot_number is used to identify the particular subplot that this function is to create within the notional grid . plot_number starts at 1 , increments across rows first and has a maximum of nrows * ncols .|||in the case when nrows , ncols and plot_number are all less than 10 , a convenience exists , such that the a 3 digit number can be given instead , where the hundreds represent nrows , the tens represent ncols and the units represent plot_number . for instance :'
p49661
sg12
Vsubplot.plot_number
p49662
sg14
(lp49663
sg2
S'plot_number'
p49664
sbag7092
asg2
g49622
sbs(g5424
g2392
g44693
tp49665
g44689
s(g117
g118
g28309
tp49666
g28305
s(g109
g19182
S"'PDF'"
p49667
tp49668
(icodemend.demo.code_suggest
Element
p49669
(dp49670
g10
I1
sg11
S''
sg12
Vsavefig.format.'PDF'
p49671
sg14
(lp49672
sg2
g49667
sbs(S'subplot2grid'
p49673
g22912
tp49674
g22907
sS'detrend_none'
p49675
(icodemend.demo.code_suggest
Element
p49676
(dp49677
g10
I0
sg11
S'return x'
p49678
sg12
Vdetrend_none
p49679
sg14
(lp49680
sg2
g49675
sbs(S'vlines'
p49681
S'array'
p49682
tp49683
(icodemend.demo.code_suggest
Element
p49684
(dp49685
g10
I0
sg11
S'set the image array from numpy array a'
p49686
sg12
Vvlines.array
p49687
sg14
(lp49688
sg2
g49682
sbs(g117
g118
g27819
tp49689
g27815
s(S'tricontour'
p49690
g1398
tp49691
g1393
s(g245
g140
g30029
tp49692
g30025
s(S'quiver'
p49693
g30795
tp49694
g30785
sS'score_variant'
p49695
(icodemend.demo.code_suggest
Element
p49696
(dp49697
g10
I0
sg11
S'returns a match score between variant1 and variant2 .'
p49698
sg12
Vscore_variant
p49699
sg14
(lp49700
g26303
ag13861
asg2
g49695
sbs(S'phase_spectrum'
p49701
S'figure'
p49702
tp49703
(icodemend.demo.code_suggest
Element
p49704
(dp49705
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p49706
sg12
Vphase_spectrum.figure
p49707
sg14
(lp49708
sg2
g49702
sbsS'reserveObject'
p49709
(icodemend.demo.code_suggest
Element
p49710
(dp49711
g10
I0
sg11
S'reserve an id for an indirect object .'
p49712
sg12
VreserveObject
p49713
sg14
(lp49714
sg2
g49709
sbs(g10369
g10370
S'4'
tp49715
g40450
s(g252
g4984
S'1'
tp49716
g14234
s(S'broken_barh'
p49717
g48823
tp49718
g48818
s(S'boxplot'
p49719
g39720
tp49720
g39711
s(S'refine_field'
p49721
S'refi_tri'
p49722
tp49723
(icodemend.demo.code_suggest
Element
p49724
(dp49725
g10
I0
sg11
S'returns refi_tri ( refined triangulation ) , refi_z ( interpolated values of the field at the node of the refined triangulation ) .'
p49726
sg12
Vrefine_field.refi_tri
p49727
sg14
(lp49728
sg2
g49722
sbs(g43079
g43093
tp49729
g43084
s(S'quiver'
p49730
g31027
tp49731
g31022
s(S'set_xscale'
p49732
g45491
tp49733
g45486
s(S'quiverkey'
p49734
g36693
tp49735
g36688
s(g16
g489
g46534
tp49736
g46530
s(g117
g4163
g11030
tp49737
g11026
s(g117
g118
g27536
tp49738
g27532
s(g101
S's'
g7781
tp49739
g7777
s(g101
S'c'
g21480
tp49740
g21476
s(g101
S's'
g627
tp49741
g7587
s(S'eventplot'
p49742
g23403
tp49743
g23398
s(S'cohere'
p49744
g43723
tp49745
g43718
sS'quotes_historical_yahoo_ohlc'
p49746
(icodemend.demo.code_suggest
Element
p49747
(dp49748
g10
I0
sg11
S'get historical data for ticker between date1 and date2 .'
p49749
sg12
Vquotes_historical_yahoo_ohlc
p49750
sg14
(lp49751
(icodemend.demo.code_suggest
Element
p49752
(dp49753
g10
I0
sg11
S'see parse_yahoo_historical ( ) for explanation of output formats and the asobject and adjusted kwargs .'
p49754
sg12
Vquotes_historical_yahoo_ohlc.adjusted
p49755
sg14
(lp49756
sg2
S'adjusted'
p49757
sbag10146
a(icodemend.demo.code_suggest
Element
p49758
(dp49759
g10
I0
sg11
S'is the name of the local file cache . if none , will default to the md5 hash or the url ( which incorporates the ticker and date range )'
p49760
sg12
Vquotes_historical_yahoo_ohlc.cachename
p49761
sg14
(lp49762
sg2
S'cachename'
p49763
sba(icodemend.demo.code_suggest
Element
p49764
(dp49765
g10
I0
sg11
S'start date'
p49766
sg12
Vquotes_historical_yahoo_ohlc.date1
p49767
sg14
(lp49768
sg2
S'date1'
p49769
sbag57
a(icodemend.demo.code_suggest
Element
p49770
(dp49771
g10
I0
sg11
S'stock ticker'
p49772
sg12
Vquotes_historical_yahoo_ohlc.ticker
p49773
sg14
(lp49774
sg2
S'ticker'
p49775
sbasg2
g49746
sbsS'set_connectionstyle'
p49776
(icodemend.demo.code_suggest
Element
p49777
(dp49778
g10
I1
sg11
S'set the connection style .'
p49779
sg12
Vset_connectionstyle
p49780
sg14
(lp49781
sg2
g49776
sbs(S'grid'
p49782
S'rasterized'
p49783
tp49784
(icodemend.demo.code_suggest
Element
p49785
(dp49786
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p49787
sg12
Vgrid.rasterized
p49788
sg14
(lp49789
sg2
g49783
sbs(S'hexbin'
p49790
g25975
tp49791
g25970
s(S'getp'
p49792
S'xticks'
p49793
tp49794
(icodemend.demo.code_suggest
Element
p49795
(dp49796
g10
I0
sg11
S'set the x ticks with list of ticks'
p49797
sg12
Vgetp.xticks
p49798
sg14
(lp49799
sg2
g49793
sbs(S'candlestick_ohlc'
p49800
S'ax'
p49801
tp49802
(icodemend.demo.code_suggest
Element
p49803
(dp49804
g10
I0
sg11
S'an axes instance to plot to'
p49805
sg12
Vcandlestick_ohlc.ax
p49806
sg14
(lp49807
sg2
g49801
sbs(g117
g132
g28780
tp49808
g28776
s(g2250
g8267
g16231
tp49809
g16227
s(S'add_subplot'
p49810
g47573
tp49811
g47568
sS'get_fontfamily'
p49812
(icodemend.demo.code_suggest
Element
p49813
(dp49814
g10
I0
sg11
S'alias for get_family'
p49815
sg12
Vget_fontfamily
p49816
sg14
(lp49817
sg2
g49812
sbs(g245
g140
g30158
tp49818
g30154
s(S'cohere'
p49819
g43843
tp49820
g43838
s(g16
g132
g132
tp49821
g46439
s(S'violin'
p49822
g5613
tp49823
g5608
s(g1003
g33594
g865
tp49824
g31182
s(g1003
g14825
S'1'
tp49825
g20491
s(S'quiverkey'
p49826
S'X'
tp49827
g36672
s(S'figtext'
p49828
g11491
tp49829
g11486
sS'infodict'
p49830
(icodemend.demo.code_suggest
Element
p49831
(dp49832
g10
I1
sg11
S"return a modifiable information dictionary object ( see pdf reference section 10.2.1 ' document information dictionary ' ) ."
p49833
sg12
Vinfodict
p49834
sg14
(lp49835
sg2
g49830
sbs(S'pcolormesh'
p49836
S'norm'
p49837
tp49838
(icodemend.demo.code_suggest
Element
p49839
(dp49840
g10
I9
sg11
S'c may be a masked array , but x and y may not . masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .|||set the normalization instance|||a matplotlib.colors.normalize instance is used to scale luminance data to 0,1 . if none , defaults to normalize ( ) .'
p49841
sg12
Vpcolormesh.norm
p49842
sg14
(lp49843
g45217
asg2
g49837
sbs(S'semilogx'
p49844
g38899
tp49845
g38890
s(g5640
g10482
g865
tp49846
g10488
s(g117
g118
g28104
tp49847
g28100
sS'set_window_title'
p49848
(icodemend.demo.code_suggest
Element
p49849
(dp49850
g10
I5
sg11
S'set the title text of the window containing the figure .'
p49851
sg12
Vset_window_title
p49852
sg14
(lp49853
sg2
g49848
sbs(g117
g132
g28760
tp49854
g28756
s(S'cohere_pairs'
p49855
g44384
tp49856
g44379
sS'idle_event'
p49857
(icodemend.demo.code_suggest
Element
p49858
(dp49859
g10
I1
sg11
S'called when gui is idle .'
p49860
sg12
Vidle_event
p49861
sg14
(lp49862
sg2
g49857
sbs(g7484
g102
g25763
tp49863
g25759
sS'show'
p49864
(icodemend.demo.code_suggest
Element
p49865
(dp49866
g10
I3726
sg11
S'if using a gui backend with pyplot , display the figure window . for gui backends , show the figure window and redraw . display a figure .'
p49867
sg12
Vshow
p49868
sg14
(lp49869
g13169
ag37802
asg2
g49864
sbs(S'set_markevery'
p49870
g22742
tp49871
g22737
s(g117
g118
g28574
tp49872
g28570
s(g252
g253
g14146
tp49873
g14142
s(g452
g12650
S'7'
tp49874
(icodemend.demo.code_suggest
Element
p49875
(dp49876
g10
I1
sg11
S''
sg12
Verrorbar.capsize.7
p49877
sg14
(lp49878
sg2
S'7'
sbs(g10369
g10370
g40444
tp49879
g40440
s(g20952
g20962
tp49880
g20957
s(S'plot_date'
p49881
g20063
tp49882
g20058
s(S'axvspan'
p49883
S'gid'
p49884
tp49885
(icodemend.demo.code_suggest
Element
p49886
(dp49887
g10
I0
sg11
S'sets the ( group ) id for the artist'
p49888
sg12
Vaxvspan.gid
p49889
sg14
(lp49890
sg2
g49884
sbs(g93
g4800
g25564
tp49891
g25560
s(S'angle_spectrum'
p49892
g18983
tp49893
g18978
s(S'gca'
p49894
S'yscale'
p49895
tp49896
(icodemend.demo.code_suggest
Element
p49897
(dp49898
g10
I0
sg11
S'set the scaling of the y-axis'
p49899
sg12
Vgca.yscale
p49900
sg14
(lp49901
sg2
g49895
sbs(S'semilogy'
p49902
g39253
tp49903
g39248
s(S'Slider'
p49904
S'ax'
p49905
tp49906
(icodemend.demo.code_suggest
Element
p49907
(dp49908
g10
I0
sg11
S'the axes to put the slider in'
p49909
sg12
VSlider.ax
p49910
sg14
(lp49911
sg2
g49905
sbs(S'stem'
p49912
g40856
tp49913
g40851
s(S'csd'
p49914
S'agg_filter'
p49915
tp49916
(icodemend.demo.code_suggest
Element
p49917
(dp49918
g10
I0
sg11
S'set agg_filter fuction .'
p49919
sg12
Vcsd.agg_filter
p49920
sg14
(lp49921
sg2
g49915
sbs(g93
g627
S'30'
p49922
tp49923
(icodemend.demo.code_suggest
Element
p49924
(dp49925
g10
I2
sg11
S''
sg12
Vannotate.size.30
p49926
sg14
(lp49927
sg2
g49922
sbs(g117
g2392
g29049
tp49928
g29045
sS'get'
p49929
(icodemend.demo.code_suggest
Element
p49930
(dp49931
g10
I29
sg11
S"return the axes instance that was added with key . return a list of elements from the oldest to the newest . return the value of object 's property ."
p49932
sg12
Vget
p49933
sg14
(lp49934
g15340
ag40142
ag45371
ag31584
ag4398
a(icodemend.demo.code_suggest
Element
p49935
(dp49936
g10
I0
sg11
S'set the font properties that control the text .'
p49937
sg12
Vget.fontproperties
p49938
sg14
(lp49939
sg2
S'fontproperties'
p49940
sbag38500
a(icodemend.demo.code_suggest
Element
p49941
(dp49942
g10
I0
sg11
S'set the label to s for auto legend .'
p49943
sg12
Vget.label
p49944
sg14
(lp49945
sg2
S'label'
p49946
sba(icodemend.demo.code_suggest
Element
p49947
(dp49948
g10
I0
sg11
S"obj is a artist instance , e.g. , line2d or an instance of a axes or matplotlib.text.text . if the property is ' somename ' , this function returns"
p49949
sg12
Vget.obj
p49950
sg14
(lp49951
sg2
S'obj'
p49952
sbag26999
ag42883
ag16661
ag12181
a(icodemend.demo.code_suggest
Element
p49953
(dp49954
g10
I0
sg11
S'set text rotation mode .'
p49955
sg12
Vget.rotation_mode
p49956
sg14
(lp49957
sg2
S'rotation_mode'
p49958
sbag38866
a(icodemend.demo.code_suggest
Element
p49959
(dp49960
g10
I0
sg11
S'set the text string s'
p49961
sg12
Vget.text
p49962
sg14
(lp49963
sg2
S'text'
p49964
sbag10571
ag20624
a(icodemend.demo.code_suggest
Element
p49965
(dp49966
g10
I0
sg11
S'set the label for the xaxis .'
p49967
sg12
Vget.xlabel
p49968
sg14
(lp49969
sg2
S'xlabel'
p49970
sbag23152
a(icodemend.demo.code_suggest
Element
p49971
(dp49972
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p49973
sg12
Vget.xmargin
p49974
sg14
(lp49975
sg2
S'xmargin'
p49976
sbag27265
a(icodemend.demo.code_suggest
Element
p49977
(dp49978
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p49979
sg12
Vget.xticklabels
p49980
sg14
(lp49981
sg2
S'xticklabels'
p49982
sbag48903
ag33943
a(icodemend.demo.code_suggest
Element
p49983
(dp49984
g10
I0
sg11
S'set the label for the yaxis'
p49985
sg12
Vget.ylabel
p49986
sg14
(lp49987
sg2
S'ylabel'
p49988
sba(icodemend.demo.code_suggest
Element
p49989
(dp49990
g10
I0
sg11
S'set the data limits for the yaxis'
p49991
sg12
Vget.ylim
p49992
sg14
(lp49993
sg2
S'ylim'
p49994
sbag14925
a(icodemend.demo.code_suggest
Element
p49995
(dp49996
g10
I0
sg11
S'set the scaling of the y-axis'
p49997
sg12
Vget.yscale
p49998
sg14
(lp49999
sg2
S'yscale'
p50000
sbag46039
ag13189
asg2
g49929
sbs(S'loglog'
p50001
S'codes'
p50002
tp50003
(icodemend.demo.code_suggest
Element
p50004
(dp50005
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p50006
sg12
Vloglog.codes
p50007
sg14
(lp50008
sg2
g50002
sbs(g101
g4274
g21666
tp50009
g21662
s(g27183
g7815
g7815
tp50010
g47932
s(g766
S'N'
g41732
tp50011
g41728
s(S'tripcolor'
p50012
S'norm'
p50013
tp50014
(icodemend.demo.code_suggest
Element
p50015
(dp50016
g10
I0
sg11
S'set the normalization instance|||an matplotlib.colors.normalize instance is used to scale luminance data to 0,1 . if none , defaults to normalize ( ) . an matplotlib.colors.normalize instance is used to scale luminance data to 0,1 . if none , defaults to normalize ( ) .'
p50017
sg12
Vtripcolor.norm
p50018
sg14
(lp50019
sg2
g50013
sbs(S'errorbar'
p50020
S'agg_filter'
p50021
tp50022
(icodemend.demo.code_suggest
Element
p50023
(dp50024
g10
I0
sg11
S'set agg_filter fuction .'
p50025
sg12
Verrorbar.agg_filter
p50026
sg14
(lp50027
sg2
g50021
sbs(S'set_graylevel'
p50028
S'frac'
p50029
tp50030
(icodemend.demo.code_suggest
Element
p50031
(dp50032
g10
I0
sg11
S'set the foreground color to be a gray level with frac'
p50033
sg12
Vset_graylevel.frac
p50034
sg14
(lp50035
sg2
g50029
sbs(g16
g453
g12749
tp50036
g12745
s(g139
g370
g1877
tp50037
g1873
s(S'fill'
p50038
S'args'
p50039
tp50040
(icodemend.demo.code_suggest
Element
p50041
(dp50042
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing . for example , to plot a polygon with vertices at x , y in blue . :'
p50043
sg12
Vfill.args
p50044
sg14
(lp50045
sg2
g50039
sbs(S'auto_adjust_subplotpars'
p50046
g6057
tp50047
g6052
s(S'loglog'
p50048
S'rasterized'
p50049
tp50050
(icodemend.demo.code_suggest
Element
p50051
(dp50052
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p50053
sg12
Vloglog.rasterized
p50054
sg14
(lp50055
sg2
g50049
sbs(g13338
g126
S'0'
tp50056
g23945
s(g16
g17
g41948
tp50057
g41944
s(g109
g8267
g44089
tp50058
g44085
s(S'barbs'
p50059
S'snap'
p50060
tp50061
(icodemend.demo.code_suggest
Element
p50062
(dp50063
g10
I0
sg11
S'sets the snap setting which may be'
p50064
sg12
Vbarbs.snap
p50065
sg14
(lp50066
sg2
g50060
sbs(g7484
S'xscale'
p50067
g25795
tp50068
g25791
sS'get_slant'
p50069
(icodemend.demo.code_suggest
Element
p50070
(dp50071
g10
I0
sg11
S'return the font style .'
p50072
sg12
Vget_slant
p50073
sg14
(lp50074
sg2
g50069
sbs(S'pcolormesh'
p50075
S'linewidth'
p50076
tp50077
(icodemend.demo.code_suggest
Element
p50078
(dp50079
g10
I3
sg11
S'set the linewidth(s ) for the collection .'
p50080
sg12
Vpcolormesh.linewidth
p50081
sg14
(lp50082
g6518
asg2
g50076
sbs(S'cohere'
p50083
g43896
tp50084
g43891
s(S'pie'
p50085
S'startangle'
p50086
tp50087
(icodemend.demo.code_suggest
Element
p50088
(dp50089
g10
I10
sg11
S'if not none , rotates the start of the pie chart by angle degrees counterclockwise from the x-axis .'
p50090
sg12
Vpie.startangle
p50091
sg14
(lp50092
g16363
a(icodemend.demo.code_suggest
Element
p50093
(dp50094
g10
I1
sg11
S''
sg12
Vpie.startangle.10
p50095
sg14
(lp50096
sg2
S'10'
p50097
sbasg2
g50086
sbs(g93
g161
S'(azel[20][1], azel[20][0])'
p50098
tp50099
(icodemend.demo.code_suggest
Element
p50100
(dp50101
g10
I1
sg11
S''
sg12
Vannotate.xy.(azel[20][1], azel[20][0])
p50102
sg14
(lp50103
sg2
g50098
sbs(S'pcolor'
p50104
g49565
tp50105
g49560
s(g1170
g118
S"'h3'"
p50106
tp50107
(icodemend.demo.code_suggest
Element
p50108
(dp50109
g10
I2
sg11
S''
sg12
Vhist.label.'h3'
p50110
sg14
(lp50111
sg2
g50106
sbs(g252
g8210
g196
tp50112
g192
s(g101
S'c'
g21612
tp50113
g21608
s(S'barbs'
p50114
S'barbcolor'
p50115
tp50116
(icodemend.demo.code_suggest
Element
p50117
(dp50118
g10
I0
sg11
S'specifies the color all parts of the barb except any flags . this parameter is analagous to the edgecolor parameter for polygons , which can be used instead . however this parameter will override facecolor .'
p50119
sg12
Vbarbs.barbcolor
p50120
sg14
(lp50121
sg2
g50115
sbs(S'set_yticklabels'
p50122
g18130
tp50123
g18125
s(S'grid'
p50124
S'axes'
p50125
tp50126
(icodemend.demo.code_suggest
Element
p50127
(dp50128
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p50129
sg12
Vgrid.axes
p50130
sg14
(lp50131
sg2
g50125
sbs(g117
g667
g29595
tp50132
g29591
s(S'hist'
p50133
S'rwidth'
p50134
tp50135
(icodemend.demo.code_suggest
Element
p50136
(dp50137
g10
I7
sg11
S'the relative width of the bars as a fraction of the bin width . if none , automatically compute the width .'
p50138
sg12
Vhist.rwidth
p50139
sg14
(lp50140
(icodemend.demo.code_suggest
Element
p50141
(dp50142
g10
I3
sg11
S''
sg12
Vhist.rwidth.0/8
p50143
sg14
(lp50144
sg2
S'0.8'
p50145
sbag47831
a(icodemend.demo.code_suggest
Element
p50146
(dp50147
g10
I1
sg11
S''
sg12
Vhist.rwidth.1
p50148
sg14
(lp50149
sg2
S'1'
sbasg2
g50134
sbs(S'errorbar'
p50150
S'clip_box'
p50151
tp50152
(icodemend.demo.code_suggest
Element
p50153
(dp50154
g10
I0
sg11
S"set the artist 's clip bbox ."
p50155
sg12
Verrorbar.clip_box
p50156
sg14
(lp50157
sg2
g50151
sbs(g101
g4274
g21661
tp50158
g21657
s(g117
g118
g28484
tp50159
g28480
s(g13542
S'pivot'
p50160
g47395
tp50161
g47391
s(g46305
S'adjustable'
p50162
g25116
tp50163
g25112
s(g6632
g20897
g438
tp50164
g35237
s(g5848
g5849
S'2'
tp50165
(icodemend.demo.code_suggest
Element
p50166
(dp50167
g10
I2
sg11
S''
sg12
VSlider.valinit.2
p50168
sg14
(lp50169
sg2
S'2'
sbs(S'eventplot'
p50170
g23607
tp50171
g23602
s(S'Slider'
p50172
S'closedmin'
p50173
tp50174
(icodemend.demo.code_suggest
Element
p50175
(dp50176
g10
I0
sg11
S'indicate whether the slider interval is closed on the bottom'
p50177
sg12
VSlider.closedmin
p50178
sg14
(lp50179
sg2
g50173
sbs(S'add_axes'
p50180
S'alpha'
p50181
tp50182
(icodemend.demo.code_suggest
Element
p50183
(dp50184
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p50185
sg12
Vadd_axes.alpha
p50186
sg14
(lp50187
sg2
g50181
sbs(g93
g94
g5546
tp50188
g5542
s(S'broken_barh'
p50189
g48703
tp50190
g48698
s(g117
g118
g28239
tp50191
g28235
s(S'quiver'
p50192
S'X'
tp50193
g30928
s(S'VPacker'
p50194
g43109
tp50195
g43104
s(S'loglog'
p50196
S'scalex'
p50197
tp50198
(icodemend.demo.code_suggest
Element
p50199
(dp50200
g10
I0
sg11
S'kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p50201
sg12
Vloglog.scalex
p50202
sg14
(lp50203
sg2
g50197
sbs(S'phase_spectrum'
p50204
S'readonly'
p50205
tp50206
(icodemend.demo.code_suggest
Element
p50207
(dp50208
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p50209
sg12
Vphase_spectrum.readonly
p50210
sg14
(lp50211
sg2
g50205
sbs(S'add_axes'
p50212
S'zorder'
p50213
tp50214
(icodemend.demo.code_suggest
Element
p50215
(dp50216
g10
I3
sg11
S'set the zorder for the artist .'
p50217
sg12
Vadd_axes.zorder
p50218
sg14
(lp50219
g47644
a(icodemend.demo.code_suggest
Element
p50220
(dp50221
g10
I1
sg11
S''
sg12
Vadd_axes.zorder.0
p50222
sg14
(lp50223
sg2
S'0'
sbasg2
g50213
sbs(g16
g17
g41923
tp50224
g41919
s(g117
S'y'
g29448
tp50225
g29444
s(S'subplots'
p50226
g2091
tp50227
g2072
sS'viewlim_to_dt'
p50228
(icodemend.demo.code_suggest
Element
p50229
(dp50230
g10
I0
sg11
S'converts the view interval to datetime objects .'
p50231
sg12
Vviewlim_to_dt
p50232
sg14
(lp50233
sg2
g50228
sbs(g117
g118
g27734
tp50234
g27730
s(S'plot_date'
p50235
g19973
tp50236
g19968
s(g245
g140
g30288
tp50237
g30284
s(S'prctile'
p50238
g10734
tp50239
g10729
s(g252
g1010
g13966
tp50240
g13962
s(S'pie'
p50241
S'pctdistance'
p50242
tp50243
(icodemend.demo.code_suggest
Element
p50244
(dp50245
g10
I5
sg11
S'the ratio between the center of each pie slice and the start of the text generated by autopct . ignored if autopct is none ; default is 0.6 .'
p50246
sg12
Vpie.pctdistance
p50247
sg14
(lp50248
(icodemend.demo.code_suggest
Element
p50249
(dp50250
g10
I2
sg11
S''
sg12
Vpie.pctdistance.1/2
p50251
sg14
(lp50252
sg2
S'1.2'
p50253
sbag26554
a(icodemend.demo.code_suggest
Element
p50254
(dp50255
g10
I1
sg11
S''
sg12
Vpie.pctdistance.0/8
p50256
sg14
(lp50257
sg2
S'0.8'
p50258
sbag27192
asg2
g50242
sbs(S'barbs'
p50259
S'rounding'
p50260
tp50261
(icodemend.demo.code_suggest
Element
p50262
(dp50263
g10
I0
sg11
S'a flag to indicate whether the vector magnitude should be rounded when allocating barb components . if true , the magnitude is rounded to the nearest multiple of the half-barb increment . if false , the magnitude is simply truncated to the next lowest multiple . default is true'
p50264
sg12
Vbarbs.rounding
p50265
sg14
(lp50266
sg2
g50260
sbs(S'arrow'
p50267
S'y'
tp50268
g2773
s(g101
g325
g21744
tp50269
g21740
s(S'set_yticklabels'
p50270
g18303
tp50271
g18298
s(S'get_data'
p50272
g13235
tp50273
g13230
s(S'get'
p50274
g50000
tp50275
g49995
s(g5576
g5577
g16868
tp50276
g16864
s(g4371
g5025
g5025
tp50277
g17730
sS'get_majorticklabels'
p50278
(icodemend.demo.code_suggest
Element
p50279
(dp50280
g10
I5
sg11
S'return a list of text instances for the major ticklabels'
p50281
sg12
Vget_majorticklabels
p50282
sg14
(lp50283
sg2
g50278
sbs(g16
g132
g46482
tp50284
g46478
s(g245
g140
g30398
tp50285
g30394
s(S'add'
p50286
S'axes'
p50287
tp50288
(icodemend.demo.code_suggest
Element
p50289
(dp50290
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p50291
sg12
Vadd.axes
p50292
sg14
(lp50293
sg2
g50287
sbs(S'volume_overlay3'
p50294
g45653
tp50295
g45648
s(g5673
g24819
g49301
tp50296
g49297
s(g101
S'c'
g7786
tp50297
g21556
s(S'arrow'
p50298
g2725
tp50299
g2720
s(g582
S'y'
S'n'
tp50300
g3372
s(g16
g17
g41905
tp50301
g41901
s(g245
g140
g30094
tp50302
g30090
s(S'loglog'
p50303
S'xticks'
p50304
tp50305
(icodemend.demo.code_suggest
Element
p50306
(dp50307
g10
I0
sg11
S'set the x ticks with list of ticks'
p50308
sg12
Vloglog.xticks
p50309
sg14
(lp50310
sg2
g50304
sbs(S'quiver'
p50311
g31057
tp50312
g31052
s(g10799
g10880
tp50313
g10852
s(g452
S'mew'
p50314
S'0'
tp50315
g35393
s(S'from_levels_and_colors'
p50316
S'levels'
p50317
tp50318
(icodemend.demo.code_suggest
Element
p50319
(dp50320
g10
I1
sg11
S'the quantization levels used to construct the boundarynorm . values v are quantizized to level i if lev[i ] < = v < lev[i+1 ] .'
p50321
sg12
Vfrom_levels_and_colors.levels
p50322
sg14
(lp50323
g43928
asg2
g50317
sbs(g101
S'c'
g21536
tp50324
g21532
s(S'fill'
p50325
S'xticklabels'
p50326
tp50327
(icodemend.demo.code_suggest
Element
p50328
(dp50329
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p50330
sg12
Vfill.xticklabels
p50331
sg14
(lp50332
sg2
g50326
sbs(S'frange'
p50333
g44925
tp50334
g44920
sS'get_converter'
p50335
(icodemend.demo.code_suggest
Element
p50336
(dp50337
g10
I0
sg11
S'get the converter interface instance for x , or none'
p50338
sg12
Vget_converter
p50339
sg14
(lp50340
sg2
g50335
sbsS'resize_event'
p50341
(icodemend.demo.code_suggest
Element
p50342
(dp50343
g10
I1
sg11
S"this method will be call all functions connected to the ' resize_event ' with a resizeevent"
p50344
sg12
Vresize_event
p50345
sg14
(lp50346
sg2
g50341
sbs(S'hillshade'
p50347
g6516
tp50348
g6511
sS'poly_between'
p50349
(icodemend.demo.code_suggest
Element
p50350
(dp50351
g10
I0
sg11
S'given a sequence of x , ylower and yupper , return the polygon that fills the regions between them .'
p50352
sg12
Vpoly_between
p50353
sg14
(lp50354
g31236
ag35216
ag46885
a(icodemend.demo.code_suggest
Element
p50355
(dp50356
g10
I0
sg11
S'given a sequence of x , ylower and yupper , return the polygon that fills the regions between them . ylower or yupper can be scalar or iterable . if they are iterable , they must be equal in length to x .'
p50357
sg12
Vpoly_between.yupper
p50358
sg14
(lp50359
sg2
S'yupper'
p50360
sbasg2
g50349
sbs(g93
g161
S'coords'
p50361
tp50362
(icodemend.demo.code_suggest
Element
p50363
(dp50364
g10
I1
sg11
S''
sg12
Vannotate.xy.coords
p50365
sg14
(lp50366
sg2
g50361
sbs(g125
g19538
g37576
tp50367
g37572
s(g38323
S'include_self'
p50368
g1944
tp50369
g37236
s(g109
g40900
g40471
tp50370
g40467
s(g332
g5546
g865
tp50371
g48240
sS'pan'
p50372
(icodemend.demo.code_suggest
Element
p50373
(dp50374
g10
I4
sg11
S'pan numsteps ( can be positive or negative ) pan numticks ( can be positive or negative ) activate the pan/zoom tool .'
p50375
sg12
Vpan
p50376
sg14
(lp50377
g49250
asg2
g50372
sbs(g5424
g2392
g44698
tp50378
g44694
s(g16
g110
g36097
tp50379
g36093
s(S'eventplot'
p50380
g23433
tp50381
g23428
s(S'errorbar'
p50382
S'_interpolation_steps'
p50383
tp50384
(icodemend.demo.code_suggest
Element
p50385
(dp50386
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p50387
sg12
Verrorbar._interpolation_steps
p50388
sg14
(lp50389
sg2
g50383
sbs(S'annotate'
p50390
S'xticklabels'
p50391
tp50392
(icodemend.demo.code_suggest
Element
p50393
(dp50394
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p50395
sg12
Vannotate.xticklabels
p50396
sg14
(lp50397
sg2
g50391
sbs(S'loglog'
p50398
S'readonly'
p50399
tp50400
(icodemend.demo.code_suggest
Element
p50401
(dp50402
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p50403
sg12
Vloglog.readonly
p50404
sg14
(lp50405
sg2
g50399
sbs(S'barh'
p50406
S'figure'
p50407
tp50408
(icodemend.demo.code_suggest
Element
p50409
(dp50410
g10
I1
sg11
S'set the figure instance the artist belongs to .'
p50411
sg12
Vbarh.figure
p50412
sg14
(lp50413
g20859
asg2
g50407
sbs(g139
g966
g2117
tp50414
g2113
s(S'plot'
p50415
g29775
tp50416
g29765
sS'get_ymajorticklabels'
p50417
(icodemend.demo.code_suggest
Element
p50418
(dp50419
g10
I1
sg11
S'get the major y tick labels as a list of text instances .'
p50420
sg12
Vget_ymajorticklabels
p50421
sg14
(lp50422
sg2
g50417
sbs(g452
g453
g7179
tp50423
g7175
s(g93
g4800
g25569
tp50424
g25565
s(S'set_xticklabels'
p50425
g17175
tp50426
g17170
s(S'fill'
p50427
S'clip_on'
p50428
tp50429
(icodemend.demo.code_suggest
Element
p50430
(dp50431
g10
I0
sg11
S'set whether artist uses clipping .'
p50432
sg12
Vfill.clip_on
p50433
sg14
(lp50434
sg2
g50428
sbs(S'plot_day_summary2_ochl'
p50435
g41168
tp50436
g41163
s(S'make_axes_gridspec'
p50437
S'orientation'
p50438
tp50439
(icodemend.demo.code_suggest
Element
p50440
(dp50441
g10
I0
sg11
S"' vertical ' or ' horizontal '"
p50442
sg12
Vmake_axes_gridspec.orientation
p50443
sg14
(lp50444
sg2
g50438
sbs(g117
g118
g28369
tp50445
g28365
s(S'annotate'
p50446
S'closed'
p50447
tp50448
(icodemend.demo.code_suggest
Element
p50449
(dp50450
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p50451
sg12
Vannotate.closed
p50452
sg14
(lp50453
sg2
g50447
sbs(S'pcolorfast'
p50454
g33862
tp50455
g33857
s(g5640
g15305
g12026
tp50456
g12022
s(g117
g118
g28019
tp50457
g28015
s(g109
g32085
S'(lgd1,)'
p50458
tp50459
(icodemend.demo.code_suggest
Element
p50460
(dp50461
g10
I1
sg11
S''
sg12
Vsavefig.bbox_extra_artists.(lgd1,)
p50462
sg14
(lp50463
sg2
g50458
sbs(S'contour'
p50464
g17713
tp50465
g17693
sS'set_tick_params'
p50466
(icodemend.demo.code_suggest
Element
p50467
(dp50468
g10
I26
sg11
S'set appearance parameters for ticks and ticklabels .'
p50469
sg12
Vset_tick_params
p50470
sg14
(lp50471
sg2
g50466
sbs(S'violin'
p50472
g5625
tp50473
g5620
s(S'cohere'
p50474
g43747
tp50475
g43742
s(S'set_xlim'
p50476
g4617
tp50477
g4612
s(g139
g140
g1652
tp50478
g1648
s(g1003
S'flierprops'
p50479
g18532
tp50480
g18528
s(S'frange'
p50481
g44913
tp50482
g44908
s(g452
g1149
S"'k'"
p50483
tp50484
(icodemend.demo.code_suggest
Element
p50485
(dp50486
g10
I2
sg11
S''
sg12
Verrorbar.ecolor.'k'
p50487
sg14
(lp50488
sg2
g50483
sbs(S'eventplot'
p50489
g23451
tp50490
g23446
s(g5640
g16843
g11986
tp50491
g11982
s(S'set_title'
p50492
g44447
tp50493
g44437
s(S'cohere'
p50494
g43789
tp50495
g43784
s(S'pcolor'
p50496
g49595
tp50497
g49590
s(g93
g4800
g25579
tp50498
g25575
s(g1170
g40900
g43135
tp50499
g43131
s(S'scatter'
p50500
g22185
tp50501
g22168
s(S'contourf'
p50502
g46733
tp50503
g46728
sS'grid'
p50504
(icodemend.demo.code_suggest
Element
p50505
(dp50506
g10
I425
sg11
S'turn the axes grids on or off .'
p50507
sg12
Vgrid
p50508
sg14
(lp50509
(icodemend.demo.code_suggest
Element
p50510
(dp50511
g10
I55
sg11
S"which can be ' major ' ( default ) , ' minor ' , or ' both ' to control whether major tick grids , minor tick grids , or both are affected ."
p50512
sg12
Vgrid.which
p50513
sg14
(lp50514
(icodemend.demo.code_suggest
Element
p50515
(dp50516
g10
I22
sg11
S''
sg12
Vgrid.which.'minor'
p50517
sg14
(lp50518
sg2
S"'minor'"
p50519
sba(icodemend.demo.code_suggest
Element
p50520
(dp50521
g10
I18
sg11
S''
sg12
Vgrid.which.'major'
p50522
sg14
(lp50523
sg2
S"'major'"
p50524
sbag13648
a(icodemend.demo.code_suggest
Element
p50525
(dp50526
g10
I1
sg11
S''
sg12
Vgrid.which.'majorminor'
p50527
sg14
(lp50528
sg2
S"'majorminor'"
p50529
sbasg2
S'which'
p50530
sba(icodemend.demo.code_suggest
Element
p50531
(dp50532
g10
I40
sg11
S'set the color of the line'
p50533
sg12
Vgrid.color
p50534
sg14
(lp50535
(icodemend.demo.code_suggest
Element
p50536
(dp50537
g10
I7
sg11
S''
sg12
Vgrid.color.'k'
p50538
sg14
(lp50539
sg2
S"'k'"
p50540
sbag48957
a(icodemend.demo.code_suggest
Element
p50541
(dp50542
g10
I4
sg11
S''
sg12
Vgrid.color.'y'
p50543
sg14
(lp50544
sg2
S"'y'"
p50545
sba(icodemend.demo.code_suggest
Element
p50546
(dp50547
g10
I3
sg11
S''
sg12
Vgrid.color.'black'
p50548
sg14
(lp50549
sg2
S"'black'"
p50550
sba(icodemend.demo.code_suggest
Element
p50551
(dp50552
g10
I3
sg11
S''
sg12
Vgrid.color.'gray'
p50553
sg14
(lp50554
sg2
S"'gray'"
p50555
sbag42277
ag49164
ag16052
ag43614
a(icodemend.demo.code_suggest
Element
p50556
(dp50557
g10
I2
sg11
S''
sg12
Vgrid.color.'red'
p50558
sg14
(lp50559
sg2
S"'red'"
p50560
sba(icodemend.demo.code_suggest
Element
p50561
(dp50562
g10
I2
sg11
S''
sg12
Vgrid.color.'white'
p50563
sg14
(lp50564
sg2
S"'white'"
p50565
sbag39887
ag47334
a(icodemend.demo.code_suggest
Element
p50566
(dp50567
g10
I1
sg11
S''
sg12
Vgrid.color.'b'
p50568
sg14
(lp50569
sg2
S"'b'"
p50570
sbasg2
S'color'
p50571
sbag40506
ag44680
ag10128
ag44345
a(icodemend.demo.code_suggest
Element
p50572
(dp50573
g10
I10
sg11
S'set the alpha value used for blending - not supported on all backends .'
p50574
sg12
Vgrid.alpha
p50575
sg14
(lp50576
g34329
a(icodemend.demo.code_suggest
Element
p50577
(dp50578
g10
I2
sg11
S''
sg12
Vgrid.alpha.0/5
p50579
sg14
(lp50580
sg2
S'0.5'
p50581
sba(icodemend.demo.code_suggest
Element
p50582
(dp50583
g10
I1
sg11
S''
sg12
Vgrid.alpha.0/2
p50584
sg14
(lp50585
sg2
S'0.2'
p50586
sbag47185
a(icodemend.demo.code_suggest
Element
p50587
(dp50588
g10
I1
sg11
S''
sg12
Vgrid.alpha.0/7
p50589
sg14
(lp50590
sg2
S'0.7'
p50591
sba(icodemend.demo.code_suggest
Element
p50592
(dp50593
g10
I1
sg11
S''
sg12
Vgrid.alpha.0/8
p50594
sg14
(lp50595
sg2
S'0.8'
p50596
sbag34766
asg2
S'alpha'
p50597
sbag44245
ag26975
ag6222
a(icodemend.demo.code_suggest
Element
p50598
(dp50599
g10
I1
sg11
S'set the marker size in points'
p50600
sg12
Vgrid.markersize
p50601
sg14
(lp50602
(icodemend.demo.code_suggest
Element
p50603
(dp50604
g10
I1
sg11
S''
sg12
Vgrid.markersize.10
p50605
sg14
(lp50606
sg2
S'10'
p50607
sbasg2
S'markersize'
p50608
sbag36511
a(icodemend.demo.code_suggest
Element
p50609
(dp50610
g10
I0
sg11
S'set agg_filter fuction .'
p50611
sg12
Vgrid.agg_filter
p50612
sg14
(lp50613
sg2
S'agg_filter'
p50614
sbag26110
a(icodemend.demo.code_suggest
Element
p50615
(dp50616
g10
I0
sg11
S"set the artist 's animation state ."
p50617
sg12
Vgrid.animated
p50618
sg14
(lp50619
sg2
S'animated'
p50620
sbag39414
ag13134
ag50127
ag31451
ag5151
ag44338
a(icodemend.demo.code_suggest
Element
p50621
(dp50622
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p50623
sg12
Vgrid.codes
p50624
sg14
(lp50625
sg2
S'codes'
p50626
sbag18374
ag19556
a(icodemend.demo.code_suggest
Element
p50627
(dp50628
g10
I0
sg11
S'set the cursor property as'
p50629
sg12
Vgrid.cursor_props
p50630
sg14
(lp50631
sg2
S'cursor_props'
p50632
sbag48607
ag19245
ag40116
ag20600
ag65
ag26613
a(icodemend.demo.code_suggest
Element
p50633
(dp50634
g10
I0
sg11
S'sets the ( group ) id for the artist'
p50635
sg12
Vgrid.gid
p50636
sg14
(lp50637
sg2
S'gid'
p50638
sbag13561
a(icodemend.demo.code_suggest
Element
p50639
(dp50640
g10
I0
sg11
S'set the label to s for auto legend .'
p50641
sg12
Vgrid.label
p50642
sg14
(lp50643
sg2
S'label'
p50644
sbag38622
ag13311
ag5571
ag47654
a(icodemend.demo.code_suggest
Element
p50645
(dp50646
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p50647
sg12
Vgrid.markevery
p50648
sg14
(lp50649
sg2
S'markevery'
p50650
sbag41779
ag40793
a(icodemend.demo.code_suggest
Element
p50651
(dp50652
g10
I0
sg11
S'sets the pick radius used for containment tests'
p50653
sg12
Vgrid.pickradius
p50654
sg14
(lp50655
sg2
S'pickradius'
p50656
sbag23982
ag88
ag49785
ag15387
a(icodemend.demo.code_suggest
Element
p50657
(dp50658
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p50659
sg12
Vgrid.size_inches
p50660
sg14
(lp50661
sg2
S'size_inches'
p50662
sba(icodemend.demo.code_suggest
Element
p50663
(dp50664
g10
I0
sg11
S'sets the sketch parameters .'
p50665
sg12
Vgrid.sketch_params
p50666
sg14
(lp50667
sg2
S'sketch_params'
p50668
sbag7970
ag4700
ag7338
ag41371
ag32481
ag44596
a(icodemend.demo.code_suggest
Element
p50669
(dp50670
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p50671
sg12
Vgrid.vertices
p50672
sg14
(lp50673
sg2
S'vertices'
p50674
sbag12495
ag42498
a(icodemend.demo.code_suggest
Element
p50675
(dp50676
g10
I0
sg11
S'set the label for the xaxis .'
p50677
sg12
Vgrid.xlabel
p50678
sg14
(lp50679
sg2
S'xlabel'
p50680
sba(icodemend.demo.code_suggest
Element
p50681
(dp50682
g10
I0
sg11
S'set the data limits for the xaxis'
p50683
sg12
Vgrid.xlim
p50684
sg14
(lp50685
sg2
S'xlim'
p50686
sbag46098
ag40552
ag4469
a(icodemend.demo.code_suggest
Element
p50687
(dp50688
g10
I0
sg11
S'set the x ticks with list of ticks'
p50689
sg12
Vgrid.xticks
p50690
sg14
(lp50691
sg2
S'xticks'
p50692
sbag17450
a(icodemend.demo.code_suggest
Element
p50693
(dp50694
g10
I0
sg11
S'set the label for the yaxis'
p50695
sg12
Vgrid.ylabel
p50696
sg14
(lp50697
sg2
S'ylabel'
p50698
sba(icodemend.demo.code_suggest
Element
p50699
(dp50700
g10
I0
sg11
S'set the data limits for the yaxis'
p50701
sg12
Vgrid.ylim
p50702
sg14
(lp50703
sg2
S'ylim'
p50704
sbag34375
ag47666
a(icodemend.demo.code_suggest
Element
p50705
(dp50706
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p50707
sg12
Vgrid.yticklabels
p50708
sg14
(lp50709
sg2
S'yticklabels'
p50710
sbag4756
asg2
g50504
sbs(g117
g118
g28624
tp50711
g28620
s(g332
g909
S'0'
tp50712
g6891
s(S'figtext'
p50713
g11251
tp50714
g11246
s(g6632
g2155
g47446
tp50715
g47442
s(S'table'
p50716
S'_interpolation_steps'
p50717
tp50718
(icodemend.demo.code_suggest
Element
p50719
(dp50720
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p50721
sg12
Vtable._interpolation_steps
p50722
sg14
(lp50723
sg2
g50717
sbs(g324
g785
g9676
tp50724
g9672
s(S'pcolorfast'
p50725
g33868
tp50726
g33863
s(g139
g140
g1488
tp50727
g1484
s(g965
g909
S'0'
tp50728
g50220
s(g117
g4274
g28988
tp50729
g28984
s(S'pcolormesh'
p50730
S'position'
p50731
tp50732
(icodemend.demo.code_suggest
Element
p50733
(dp50734
g10
I0
sg11
S'set the axes position with'
p50735
sg12
Vpcolormesh.position
p50736
sg14
(lp50737
sg2
g50731
sbs(S'quiver'
p50738
g30768
tp50739
g30743
sS'getpoints'
p50740
(icodemend.demo.code_suggest
Element
p50741
(dp50742
g10
I0
sg11
S'for line segment defined by ( x1 , y1 ) and ( x2 , y2 ) return the points on the line that is perpendicular to the line and intersects ( x2 , y2 ) and the distance from ( x2 , y2 ) of the returned points is k .'
p50743
sg12
Vgetpoints
p50744
sg14
(lp50745
g20199
ag41044
ag34541
ag32837
ag34562
asg2
g50740
sbs(g421
g102
g32393
tp50746
g32389
s(S'plot_day_summary2_ohlc'
p50747
g8449
tp50748
g8444
s(S'axvline'
p50749
S'size_inches'
p50750
tp50751
(icodemend.demo.code_suggest
Element
p50752
(dp50753
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p50754
sg12
Vaxvline.size_inches
p50755
sg14
(lp50756
sg2
g50750
sbs(S'set_yticklabels'
p50757
S'x'
tp50758
g18287
s(g7484
g325
g25727
tp50759
g25723
sS'get_masked_triangles'
p50760
(icodemend.demo.code_suggest
Element
p50761
(dp50762
g10
I0
sg11
S'return an array of triangles that are not masked .'
p50763
sg12
Vget_masked_triangles
p50764
sg14
(lp50765
sg2
g50760
sbs(S'format_coord'
p50766
S'x'
tp50767
(icodemend.demo.code_suggest
Element
p50768
(dp50769
g10
I0
sg11
S'return a format string formatting the x , y coord'
p50770
sg12
Vformat_coord.x
p50771
sg14
(lp50772
sg2
S'x'
sbs(g39964
g39986
tp50773
g39981
s(g139
g18399
g2009
tp50774
g2005
s(S'pcolormesh'
p50775
S'shading'
p50776
tp50777
(icodemend.demo.code_suggest
Element
p50778
(dp50779
g10
I3
sg11
S"' flat ' indicates a solid color for each quad . when ' gouraud ' , each quad will be gouraud shaded . when gouraud shading , edgecolors is ignored ."
p50780
sg12
Vpcolormesh.shading
p50781
sg14
(lp50782
g42517
ag37655
asg2
g50776
sbs(S'subplot2grid'
p50783
g22906
tp50784
g22896
s(S'arrow'
p50785
g2521
tp50786
g2516
s(g101
S's'
g7701
tp50787
g7697
s(S'tricontourf'
p50788
g11652
tp50789
g11647
s(S'pprint_setters'
p50790
S'prop'
p50791
tp50792
(icodemend.demo.code_suggest
Element
p50793
(dp50794
g10
I0
sg11
S'if prop is none , return a list of strings of all settable properies and their valid values .|||if prop is not none , it is a valid property name and that property will be returned as a string of property : valid values .'
p50795
sg12
Vpprint_setters.prop
p50796
sg14
(lp50797
sg2
g50791
sbs(S'phase_spectrum'
p50798
S'codes'
p50799
tp50800
(icodemend.demo.code_suggest
Element
p50801
(dp50802
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p50803
sg12
Vphase_spectrum.codes
p50804
sg14
(lp50805
sg2
g50799
sbs(g101
S'c'
g21341
tp50806
g21337
s(S'csd'
p50807
S'freqs'
p50808
tp50809
(icodemend.demo.code_suggest
Element
p50810
(dp50811
g10
I0
sg11
S'if return_line is false , returns the tuple ( pxy , freqs ) . if return_line is true , returns the tuple ( pxy , freqs . line ) :'
p50812
sg12
Vcsd.freqs
p50813
sg14
(lp50814
sg2
g50808
sbs(g10369
g10370
g40439
tp50815
g40435
s(S'set_yticklabels'
p50816
g18208
tp50817
g18203
sS'seconds'
p50818
(icodemend.demo.code_suggest
Element
p50819
(dp50820
g10
I0
sg11
S'return seconds as days .'
p50821
sg12
Vseconds
p50822
sg14
(lp50823
sg2
g50818
sbs(g117
g118
g28579
tp50824
g28575
s(g252
g4340
g561
tp50825
g557
s(S'plot_date'
p50826
g19793
tp50827
g19788
sg18611
(icodemend.demo.code_suggest
Element
p50828
(dp50829
g10
I0
sg11
S''
sg12
VPathEffectRenderer
p50830
sg14
(lp50831
g18614
asg2
g18611
sbs(S'hexbin'
p50832
g26039
tp50833
g26034
s(S'quotes_historical_yahoo_ohlc'
p50834
g49763
tp50835
g49758
s(g101
g118
g21985
tp50836
g21981
s(g139
g140
g1553
tp50837
g1549
s(S'grid'
p50838
g50614
tp50839
g50609
s(S'hist'
p50840
S'patches0'
p50841
tp50842
(icodemend.demo.code_suggest
Element
p50843
(dp50844
g10
I0
sg11
S'compute and draw the histogram of x . the return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .'
p50845
sg12
Vhist.patches0
p50846
sg14
(lp50847
sg2
g50841
sbs(S'hexbin'
p50848
g25981
tp50849
g25976
s(S'phase_spectrum'
p50850
S'hatch'
p50851
tp50852
(icodemend.demo.code_suggest
Element
p50853
(dp50854
g10
I0
sg11
S'set the hatching pattern'
p50855
sg12
Vphase_spectrum.hatch
p50856
sg14
(lp50857
sg2
g50851
sbsS'draw_quad_mesh'
p50858
(icodemend.demo.code_suggest
Element
p50859
(dp50860
g10
I0
sg11
S'this provides a fallback implementation of draw_quad_mesh ( ) that generates paths and then calls draw_path_collection ( ) .'
p50861
sg12
Vdraw_quad_mesh
p50862
sg14
(lp50863
sg2
g50858
sbs(S'broken_barh'
p50864
g48793
tp50865
g48788
s(g452
g453
S'e'
tp50866
g7251
s(g766
g666
g3973
tp50867
g3969
s(S'get'
p50868
g49958
tp50869
g49953
s(S'num2date'
p50870
S'x'
tp50871
(icodemend.demo.code_suggest
Element
p50872
(dp50873
g10
I0
sg11
S'x is a float value which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 utc plus one . the addition of one here is a historical artifact . also , note that the gregorian calendar is assumed ; this is not universal practice . for details , see the module docstring .|||if x is a sequence , a sequence of datetime objects will be returned .'
p50874
sg12
Vnum2date.x
p50875
sg14
(lp50876
sg2
S'x'
sbs(S'table'
p50877
S'vertices'
p50878
tp50879
(icodemend.demo.code_suggest
Element
p50880
(dp50881
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p50882
sg12
Vtable.vertices
p50883
sg14
(lp50884
sg2
g50878
sbs(g324
g785
g9761
tp50885
g9757
sS'is_frame_like'
p50886
(icodemend.demo.code_suggest
Element
p50887
(dp50888
g10
I0
sg11
S'return true if directly on axes frame'
p50889
sg12
Vis_frame_like
p50890
sg14
(lp50891
sg2
g50886
sbsS'add_figure'
p50892
(icodemend.demo.code_suggest
Element
p50893
(dp50894
g10
I0
sg11
S'add the current figure to the stack of views and positions'
p50895
sg12
Vadd_figure
p50896
sg14
(lp50897
sg2
g50892
sbsS'to_mask'
p50898
(icodemend.demo.code_suggest
Element
p50899
(dp50900
g10
I0
sg11
S"a valid mathtext string , e.g. , r'iq"
p50901
sg12
Vto_mask
p50902
sg14
(lp50903
(icodemend.demo.code_suggest
Element
p50904
(dp50905
g10
I0
sg11
S'returns a tuple ( array , depth )'
p50906
sg12
Vto_mask.array
p50907
sg14
(lp50908
sg2
S'array'
p50909
sbag6295
asg2
g50898
sbs(S'set_yticklabels'
p50910
g18052
tp50911
g18047
s(S'pcolormesh'
p50912
S'snap'
p50913
tp50914
(icodemend.demo.code_suggest
Element
p50915
(dp50916
g10
I0
sg11
S'sets the snap setting which may be'
p50917
sg12
Vpcolormesh.snap
p50918
sg14
(lp50919
sg2
g50913
sbs(S'close'
p50920
g43180
tp50921
g43175
s(S'errorbar'
p50922
S'clip_on'
p50923
tp50924
(icodemend.demo.code_suggest
Element
p50925
(dp50926
g10
I0
sg11
S'set whether artist uses clipping .'
p50927
sg12
Verrorbar.clip_on
p50928
sg14
(lp50929
sg2
g50923
sbs(g101
g118
g22020
tp50930
g22016
s(g139
g140
g1533
tp50931
g1529
s(g324
g325
g9153
tp50932
g9149
s(S'contour'
p50933
g17809
tp50934
g17804
s(S'text'
p50935
g48416
tp50936
g48411
s(g324
g325
g9084
tp50937
g9080
s(g117
g13338
g29689
tp50938
g29685
s(S'tricontour'
p50939
g1326
tp50940
g1311
s(g252
g253
g14006
tp50941
g14002
s(g117
g2392
S'4'
tp50942
g29041
s(S'add_subplot'
p50943
g47579
tp50944
g47574
s(g101
g110
g16322
tp50945
g16318
s(g5640
g5641
g11941
tp50946
g11937
s(S'trigger'
p50947
g46967
tp50948
g46962
sS'hpack'
p50949
(icodemend.demo.code_suggest
Element
p50950
(dp50951
g10
I0
sg11
S'the main duty of hpack ( ) is to compute the dimensions of the resulting boxes , and to adjust the glue if one of those dimensions is pre-specified .'
p50952
sg12
Vhpack
p50953
sg14
(lp50954
(icodemend.demo.code_suggest
Element
p50955
(dp50956
g10
I0
sg11
S"thus , hpack(w , ' exactly ' ) produces a box whose width is exactly w , while hpack(w , ' additional ' ) yields a box whose width is the natural width plus w . the default values produce a box with the natural width ."
p50957
sg12
Vhpack.w
p50958
sg14
(lp50959
sg2
S'w'
sbasg2
g50949
sbs(S'pcolormesh'
p50960
S'clip_box'
p50961
tp50962
(icodemend.demo.code_suggest
Element
p50963
(dp50964
g10
I0
sg11
S"set the artist 's clip bbox ."
p50965
sg12
Vpcolormesh.clip_box
p50966
sg14
(lp50967
sg2
g50961
sbs(S'contains_path'
p50968
g5908
tp50969
g5903
s(S'csd'
p50970
S'rasterized'
p50971
tp50972
(icodemend.demo.code_suggest
Element
p50973
(dp50974
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p50975
sg12
Vcsd.rasterized
p50976
sg14
(lp50977
sg2
g50971
sbs(S'scatter'
p50978
g22167
tp50979
g22154
s(S'loglog'
p50980
S'drawstyle'
p50981
tp50982
(icodemend.demo.code_suggest
Element
p50983
(dp50984
g10
I0
sg11
S'set the drawstyle of the plot'
p50985
sg12
Vloglog.drawstyle
p50986
sg14
(lp50987
sg2
g50981
sbs(S'figtext'
p50988
g11209
tp50989
g11204
s(S'add'
p50990
S'clip_box'
p50991
tp50992
(icodemend.demo.code_suggest
Element
p50993
(dp50994
g10
I0
sg11
S"set the artist 's clip bbox ."
p50995
sg12
Vadd.clip_box
p50996
sg14
(lp50997
sg2
g50991
sbs(S'get_valid_values'
p50998
S'attr'
p50999
tp51000
(icodemend.demo.code_suggest
Element
p51001
(dp51002
g10
I0
sg11
S'get the legal arguments for the setter associated with attr .'
p51003
sg12
Vget_valid_values.attr
p51004
sg14
(lp51005
sg2
g50999
sbs(S'errorbar'
p51006
S'errorevery'
p51007
tp51008
(icodemend.demo.code_suggest
Element
p51009
(dp51010
g10
I3
sg11
S'subsamples the errorbars . e.g. , if errorevery=5 , errorbars for every 5-th datapoint will be plotted . the data plot itself still shows all data points .'
p51011
sg12
Verrorbar.errorevery
p51012
sg14
(lp51013
(icodemend.demo.code_suggest
Element
p51014
(dp51015
g10
I1
sg11
S''
sg12
Verrorbar.errorevery.1
p51016
sg14
(lp51017
sg2
S'1'
sba(icodemend.demo.code_suggest
Element
p51018
(dp51019
g10
I1
sg11
S''
sg12
Verrorbar.errorevery.2
p51020
sg14
(lp51021
sg2
S'2'
sbag8859
asg2
g51007
sbs(g252
g253
g14156
tp51022
g14152
s(S'triplot'
p51023
S'fmt'
p51024
tp51025
(icodemend.demo.code_suggest
Element
p51026
(dp51027
g10
I0
sg11
S'if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :'
p51028
sg12
Vtriplot.fmt
p51029
sg14
(lp51030
sg2
g51024
sbsS'prism'
p51031
(icodemend.demo.code_suggest
Element
p51032
(dp51033
g10
I0
sg11
S'set the default colormap to prism and apply to current image if any .'
p51034
sg12
Vprism
p51035
sg14
(lp51036
sg2
g51031
sbsS'cleanup'
p51037
(icodemend.demo.code_suggest
Element
p51038
(dp51039
g10
I1
sg11
S'clean-up and collect the process used to write the movie file .'
p51040
sg12
Vcleanup
p51041
sg14
(lp51042
sg2
g51037
sbs(g125
g2392
S'1.7'
p51043
tp51044
(icodemend.demo.code_suggest
Element
p51045
(dp51046
g10
I1
sg11
S''
sg12
Vaxvline.linewidth.1/7
p51047
sg14
(lp51048
sg2
g51043
sbs(g117
g2251
g29160
tp51049
g29156
s(S'magnitude_spectrum'
p51050
g48062
tp51051
g48057
s(S'set_ylabel'
p51052
S'y'
tp51053
g36056
s(S'hexbin'
p51054
g25855
tp51055
g25850
s(g1170
g1257
S'256'
p51056
tp51057
(icodemend.demo.code_suggest
Element
p51058
(dp51059
g10
I1
sg11
S''
sg12
Vhist.bins.256
p51060
sg14
(lp51061
sg2
g51056
sbs(S'phase_spectrum'
p51062
S'markerfacecoloralt'
p51063
tp51064
(icodemend.demo.code_suggest
Element
p51065
(dp51066
g10
I0
sg11
S'set the alternate marker face color .'
p51067
sg12
Vphase_spectrum.markerfacecoloralt
p51068
sg14
(lp51069
sg2
g51063
sbs(g1170
g32850
g33911
tp51070
g33907
s(S'semilogy'
p51071
g39337
tp51072
g39332
s(S'psd'
p51073
g37119
tp51074
g37114
s(g101
S'c'
S'a'
tp51075
g21448
sS'key_release_event'
p51076
(icodemend.demo.code_suggest
Element
p51077
(dp51078
g10
I0
sg11
S"this method will be call all functions connected to the ' key_release_event ' with a keyevent"
p51079
sg12
Vkey_release_event
p51080
sg14
(lp51081
sg2
g51076
sbs(g5975
g132
g19626
tp51082
g19622
sS'get_unitless_position'
p51083
(icodemend.demo.code_suggest
Element
p51084
(dp51085
g10
I0
sg11
S'return the unitless position of the text as a tuple ( x , y )'
p51086
sg12
Vget_unitless_position
p51087
sg14
(lp51088
(icodemend.demo.code_suggest
Element
p51089
(dp51090
g10
I0
sg11
S'return the unitless position of the text as a tuple ( x , y )'
p51091
sg12
Vget_unitless_position.x
p51092
sg14
(lp51093
sg2
S'x'
sba(icodemend.demo.code_suggest
Element
p51094
(dp51095
g10
I0
sg11
S'return the unitless position of the text as a tuple ( x , y )'
p51096
sg12
Vget_unitless_position.y
p51097
sg14
(lp51098
sg2
S'y'
sbasg2
g51083
sbs(S'volume_overlay'
p51099
g37393
tp51100
g37388
s(S'pts_to_prestep'
p51101
g4458
tp51102
g4453
s(S'waitforbuttonpress'
p51103
S'timeout'
p51104
tp51105
(icodemend.demo.code_suggest
Element
p51106
(dp51107
g10
I1
sg11
S'this will return true is a key was pressed , false if a mouse button was pressed and none if timeout was reached without either being pressed .|||if timeout is negative , does not timeout .'
p51108
sg12
Vwaitforbuttonpress.timeout
p51109
sg14
(lp51110
g48993
asg2
g51104
sbs(g101
S's'
g7610
tp51111
g7606
s(g117
S'y'
g29438
tp51112
g29434
s(S'parse_afm'
p51113
S'fh'
p51114
tp51115
(icodemend.demo.code_suggest
Element
p51116
(dp51117
g10
I0
sg11
S'parse the adobe font metics file in file handle fh . return value is a ( dhead , dcmetrics , dkernpairs , dcomposite ) tuple where dhead is a _ parse_header ( ) dict , dcmetrics is a _ parse_composites ( ) dict , dkernpairs is a _ parse_kern_pairs ( ) dict ( possibly { } ) , and dcomposite is a _ parse_composites ( ) dict ( possibly { } )'
p51118
sg12
Vparse_afm.fh
p51119
sg14
(lp51120
sg2
g51114
sbs(g117
g118
g28289
tp51121
g28285
s(S'eventplot'
p51122
g23547
tp51123
g23542
s(S'axhline'
p51124
g3861
tp51125
g3856
s(S'contour'
p51126
g17719
tp51127
g17714
s(S'pcolorfast'
p51128
g33844
tp51129
g33839
s(S'axhspan'
p51130
g24424
tp51131
g24419
sS'rec2csv'
p51132
(icodemend.demo.code_suggest
Element
p51133
(dp51134
g10
I3
sg11
S'save the data from numpy recarray r into a comma-/space-/tab-delimited file .'
p51135
sg12
Vrec2csv
p51136
sg14
(lp51137
g19211
asg2
g51132
sbsS'circle_ratios'
p51138
(icodemend.demo.code_suggest
Element
p51139
(dp51140
g10
I0
sg11
S'returns a measure of the triangulation triangles flatness .'
p51141
sg12
Vcircle_ratios
p51142
sg14
(lp51143
g43441
asg2
g51138
sbsS'ylabel'
p51144
(icodemend.demo.code_suggest
Element
p51145
(dp51146
g10
I268
sg11
S'set the y axis label of the current axis .'
p51147
sg12
Vylabel
p51148
sg14
(lp51149
g38579
asg2
g51144
sbs(S'pcolormesh'
p51150
S'codes'
p51151
tp51152
(icodemend.demo.code_suggest
Element
p51153
(dp51154
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p51155
sg12
Vpcolormesh.codes
p51156
sg14
(lp51157
sg2
g51151
sbs(g117
g118
g28244
tp51158
g28240
s(S'plot_date'
p51159
g19817
tp51160
g19812
s(g21163
g132
g17968
tp51161
g17964
s(S'arrow'
p51162
g2783
tp51163
g2778
s(g101
g2392
g15692
tp51164
g15688
s(S'axvspan'
p51165
S'xticks'
p51166
tp51167
(icodemend.demo.code_suggest
Element
p51168
(dp51169
g10
I0
sg11
S'set the x ticks with list of ticks'
p51170
sg12
Vaxvspan.xticks
p51171
sg14
(lp51172
sg2
g51166
sbs(g958
g8890
g22867
tp51173
g22863
s(S'imshow'
p51174
g9898
tp51175
g9833
s(g16
g17
g42002
tp51176
g41998
s(S'add_axes'
p51177
S'rect'
p51178
tp51179
(icodemend.demo.code_suggest
Element
p51180
(dp51181
g10
I0
sg11
S"add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal axes kwargs plus projection which sets the projection type of the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) . typical usage :"
p51182
sg12
Vadd_axes.rect
p51183
sg14
(lp51184
sg2
g51178
sbs(S'score_family'
p51185
g7311
tp51186
g7306
s(g4998
g325
S"'bone'"
p51187
tp51188
(icodemend.demo.code_suggest
Element
p51189
(dp51190
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.'bone'
p51191
sg14
(lp51192
sg2
g51187
sbs(g93
g161
S"(row['X'], row['Y'])"
p51193
tp51194
(icodemend.demo.code_suggest
Element
p51195
(dp51196
g10
I1
sg11
S''
sg12
Vannotate.xy.(row['X'], row['Y'])
p51197
sg14
(lp51198
sg2
g51193
sbs(g252
g253
g14201
tp51199
g14197
s(g117
g667
g29600
tp51200
g29596
s(g245
g140
g30438
tp51201
g30434
s(g117
g13338
g29674
tp51202
g29670
s(S'errorbar'
p51203
S'markerfacecoloralt'
p51204
tp51205
(icodemend.demo.code_suggest
Element
p51206
(dp51207
g10
I0
sg11
S'set the alternate marker face color .'
p51208
sg12
Verrorbar.markerfacecoloralt
p51209
sg14
(lp51210
sg2
g51204
sbs(S'annotate'
p51211
S'xscale'
p51212
tp51213
(icodemend.demo.code_suggest
Element
p51214
(dp51215
g10
I0
sg11
S'set the scaling of the x-axis'
p51216
sg12
Vannotate.xscale
p51217
sg14
(lp51218
sg2
g51212
sbs(g117
g118
g27681
tp51219
g27677
s(g5424
g2251
g40520
tp51220
g40516
s(S'contains'
p51221
g38236
tp51222
g38231
s(g5975
g2392
S'2'
tp51223
g19744
s(S'pcolormesh'
p51224
S'picker'
p51225
tp51226
(icodemend.demo.code_suggest
Element
p51227
(dp51228
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p51229
sg12
Vpcolormesh.picker
p51230
sg14
(lp51231
sg2
g51225
sbs(g16
g132
g21470
tp51232
g46507
s(g452
g8857
S'2'
tp51233
g51018
s(S'quiver'
p51234
g30997
tp51235
g30992
s(g117
g118
g28594
tp51236
g28590
s(g5640
g5641
g10501
tp51237
g11903
s(S'refine_triangulation'
p51238
g26664
tp51239
g26655
s(g324
g325
g9262
tp51240
g9258
s(g4355
g35162
g438
tp51241
g20703
s(S'table'
p51242
S'animated'
p51243
tp51244
(icodemend.demo.code_suggest
Element
p51245
(dp51246
g10
I0
sg11
S"set the artist 's animation state ."
p51247
sg12
Vtable.animated
p51248
sg14
(lp51249
sg2
g51243
sbs(S'fill'
p51250
S'xscale'
p51251
tp51252
(icodemend.demo.code_suggest
Element
p51253
(dp51254
g10
I0
sg11
S'set the scaling of the x-axis'
p51255
sg12
Vfill.xscale
p51256
sg14
(lp51257
sg2
g51251
sbs(S'add_tools_to_manager'
p51258
g3004
tp51259
g2999
sS'pickable'
p51260
(icodemend.demo.code_suggest
Element
p51261
(dp51262
g10
I0
sg11
S'return true if artist is pickable .'
p51263
sg12
Vpickable
p51264
sg14
(lp51265
sg2
g51260
sbs(g117
g118
g27517
tp51266
g27513
s(S'rec_join'
p51267
g35138
tp51268
g35133
s(S'withSimplePatchShadow'
p51269
g38282
tp51270
g38277
s(g5673
g132
g49286
tp51271
g49282
sS'get_patch_transform'
p51272
(icodemend.demo.code_suggest
Element
p51273
(dp51274
g10
I1
sg11
S'return the transform instance which takes patch coordinates to data coordinates .'
p51275
sg12
Vget_patch_transform
p51276
sg14
(lp51277
sg2
g51272
sbs(g117
g118
g28014
tp51278
g28010
s(S'allequal'
p51279
g6848
tp51280
g6843
s(g117
g118
g27666
tp51281
g27662
s(S'get'
p51282
g49952
tp51283
g49947
s(S'add_axes'
p51284
S'width'
p51285
tp51286
(icodemend.demo.code_suggest
Element
p51287
(dp51288
g10
I0
sg11
S"add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal axes kwargs plus projection which sets the projection type of the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) . typical usage :"
p51289
sg12
Vadd_axes.width
p51290
sg14
(lp51291
sg2
g51285
sbs(S'text'
p51292
g48392
tp51293
g48387
s(g252
g1010
g13897
tp51294
g13893
s(g245
g140
g30358
tp51295
g30354
s(S'barbs'
p51296
S'ymargin'
p51297
tp51298
(icodemend.demo.code_suggest
Element
p51299
(dp51300
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p51301
sg12
Vbarbs.ymargin
p51302
sg14
(lp51303
sg2
g51297
sbs(g16
g1262
S'x'
tp51304
g1263
s(S'tricontour'
p51305
g1416
tp51306
g1411
s(g2182
g325
g325
tp51307
g41811
sS'get_closed'
p51308
(icodemend.demo.code_suggest
Element
p51309
(dp51310
g10
I0
sg11
S'returns if the polygon is closed'
p51311
sg12
Vget_closed
p51312
sg14
(lp51313
sg2
g51308
sbs(g117
g118
g28364
tp51314
g28360
sS'blend_soft_light'
p51315
(icodemend.demo.code_suggest
Element
p51316
(dp51317
g10
I0
sg11
S'combines an rgb image with an intensity map using " soft light " blending .'
p51318
sg12
Vblend_soft_light
p51319
sg14
(lp51320
(icodemend.demo.code_suggest
Element
p51321
(dp51322
g10
I0
sg11
S'an mxnx1 array of floats ranging from 0 to 1 ( grayscale image ) .'
p51323
sg12
Vblend_soft_light.intensity
p51324
sg14
(lp51325
sg2
S'intensity'
p51326
sba(icodemend.demo.code_suggest
Element
p51327
(dp51328
g10
I0
sg11
S'an mxnx3 rgb array of floats ranging from 0 to 1 ( color image ) .'
p51329
sg12
Vblend_soft_light.rgb
p51330
sg14
(lp51331
sg2
S'rgb'
p51332
sbasg2
g51315
sbs(S'pcolorfast'
p51333
g33838
tp51334
g33833
sS'pickle_dump'
p51335
(icodemend.demo.code_suggest
Element
p51336
(dp51337
g10
I0
sg11
S"equivalent to pickle.dump(data , open(filename , ' w ' ) ) but closes the file to prevent filehandle leakage ."
p51338
sg12
Vpickle_dump
p51339
sg14
(lp51340
sg2
g51335
sbs(S'axhline'
p51341
g3711
tp51342
g3706
s(S'semilogx'
p51343
g38923
tp51344
g38918
s(S'broken_barh'
p51345
g48781
tp51346
g48776
s(S'phase_spectrum'
p51347
S'xticklabels'
p51348
tp51349
(icodemend.demo.code_suggest
Element
p51350
(dp51351
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p51352
sg12
Vphase_spectrum.xticklabels
p51353
sg14
(lp51354
sg2
g51348
sbs(g4371
g8545
g1083
tp51355
g1079
s(g252
g4340
g541
tp51356
g537
s(g8943
S'polar'
p51357
g438
tp51358
g49654
s(S'fill'
p51359
S'vertices'
p51360
tp51361
(icodemend.demo.code_suggest
Element
p51362
(dp51363
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p51364
sg12
Vfill.vertices
p51365
sg14
(lp51366
sg2
g51360
sbs(S'hexbin'
p51367
g25785
tp51368
g25776
s(g332
g13486
g17372
tp51369
g17368
s(S'quiver'
p51370
g31147
tp51371
g31142
sS'set_markeredgewidth'
p51372
(icodemend.demo.code_suggest
Element
p51373
(dp51374
g10
I5
sg11
S'set the marker edge width in points'
p51375
sg12
Vset_markeredgewidth
p51376
sg14
(lp51377
sg2
g51372
sbsS'get_label'
p51378
(icodemend.demo.code_suggest
Element
p51379
(dp51380
g10
I21
sg11
S'get the label used for this artist in the legend .'
p51381
sg12
Vget_label
p51382
sg14
(lp51383
sg2
g51378
sbs(g101
S's'
S'1'
tp51384
g7555
s(S'normpdf'
p51385
S'x'
tp51386
g5131
s(g117
g118
g28209
tp51387
g28205
s(S'plot'
p51388
g29868
tp51389
g29863
s(g139
g140
g1622
tp51390
g1618
sS'option_image_nocomposite'
p51391
(icodemend.demo.code_suggest
Element
p51392
(dp51393
g10
I0
sg11
S'override this method for renderers that do not necessarily always want to rescale and composite raster images .'
p51394
sg12
Voption_image_nocomposite
p51395
sg14
(lp51396
sg2
g51391
sbs(S'get'
p51397
g49994
tp51398
g49989
s(S'contour'
p51399
g17681
tp51400
g17666
s(S'psd'
p51401
g36928
tp51402
g36923
s(g125
S'x'
g13269
tp51403
g34846
s(S'pieces'
p51404
g22657
tp51405
g22652
s(S'figtext'
p51406
g11281
tp51407
g11276
s(S'psd'
p51408
g36916
tp51409
g36911
s(g117
S'x'
g29313
tp51410
g29309
s(S'get'
p51411
g49970
tp51412
g49965
s(S'axhline'
p51413
g3519
tp51414
g3514
s(g93
g4800
g25549
tp51415
g25545
s(S'thetagrids'
p51416
S'frac'
p51417
tp51418
(icodemend.demo.code_suggest
Element
p51419
(dp51420
g10
I0
sg11
S'frac is the fraction of the polar axes radius at which to place the label ( 1 is the edge ) . e.g. , 1.05 is outside the axes and 0.95 is inside the axes .'
p51421
sg12
Vthetagrids.frac
p51422
sg14
(lp51423
sg2
g51417
sbsS'set_autoscalex_on'
p51424
(icodemend.demo.code_suggest
Element
p51425
(dp51426
g10
I0
sg11
S'set whether autoscaling for the x-axis is applied on plot commands'
p51427
sg12
Vset_autoscalex_on
p51428
sg14
(lp51429
sg2
g51424
sbs(g5640
g5641
g11888
tp51430
g11884
s(g8787
g8788
g438
tp51431
g13174
s(g101
g4274
g21685
tp51432
g21681
s(S'margins'
p51433
g42697
tp51434
g42692
s(S'barh'
p51435
S'label'
p51436
tp51437
(icodemend.demo.code_suggest
Element
p51438
(dp51439
g10
I10
sg11
S'set the label to s for auto legend .'
p51440
sg12
Vbarh.label
p51441
sg14
(lp51442
g44164
a(icodemend.demo.code_suggest
Element
p51443
(dp51444
g10
I1
sg11
S''
sg12
Vbarh.label.'M'
p51445
sg14
(lp51446
sg2
S"'M'"
p51447
sbag40123
ag49399
a(icodemend.demo.code_suggest
Element
p51448
(dp51449
g10
I1
sg11
S''
sg12
Vbarh.label.'bad'
p51450
sg14
(lp51451
sg2
S"'bad'"
p51452
sba(icodemend.demo.code_suggest
Element
p51453
(dp51454
g10
I1
sg11
S''
sg12
Vbarh.label.'good'
p51455
sg14
(lp51456
sg2
S"'good'"
p51457
sbasg2
g51436
sbs(g332
g909
g6890
tp51458
g6886
s(g958
g959
g22894
tp51459
g22890
s(S'add_subplot'
p51460
g47507
tp51461
g47502
sS'csd'
p51462
(icodemend.demo.code_suggest
Element
p51463
(dp51464
g10
I2
sg11
S'plot the cross-spectral density .'
p51465
sg12
Vcsd
p51466
sg14
(lp51467
(icodemend.demo.code_suggest
Element
p51468
(dp51469
g10
I0
sg11
S'the sampling frequency ( samples per time unit ) . it is used to calculate the fourier frequencies , freqs , in cycles per time unit . the default value is 2 .'
p51470
sg12
Vcsd.Fs
p51471
sg14
(lp51472
sg2
S'Fs'
p51473
sbag33400
a(icodemend.demo.code_suggest
Element
p51474
(dp51475
g10
I0
sg11
S'if return_line is false , returns the tuple ( pxy , freqs ) . if return_line is true , returns the tuple ( pxy , freqs . line ) :'
p51476
sg12
Vcsd.Pxy
p51477
sg14
(lp51478
sg2
S'Pxy'
p51479
sbag45414
ag49917
ag10356
ag43042
ag13197
ag8967
a(icodemend.demo.code_suggest
Element
p51480
(dp51481
g10
I0
sg11
S'aspect'
p51482
sg12
Vcsd.aspect
p51483
sg14
(lp51484
sg2
S'aspect'
p51485
sba(icodemend.demo.code_suggest
Element
p51486
(dp51487
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p51488
sg12
Vcsd.axes
p51489
sg14
(lp51490
sg2
S'axes'
p51491
sbag22964
ag13181
a(icodemend.demo.code_suggest
Element
p51492
(dp51493
g10
I0
sg11
S"set the artist 's clip path , which may be"
p51494
sg12
Vcsd.clip_path
p51495
sg14
(lp51496
sg2
S'clip_path'
p51497
sbag697
ag21214
a(icodemend.demo.code_suggest
Element
p51498
(dp51499
g10
I0
sg11
S'set the color of the line'
p51500
sg12
Vcsd.color
p51501
sg14
(lp51502
sg2
S'color'
p51503
sbag46015
ag33158
a(icodemend.demo.code_suggest
Element
p51504
(dp51505
g10
I0
sg11
S'set the cursor property as'
p51506
sg12
Vcsd.cursor_props
p51507
sg14
(lp51508
sg2
S'cursor_props'
p51509
sbag40997
a(icodemend.demo.code_suggest
Element
p51510
(dp51511
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p51512
sg12
Vcsd.dash_joinstyle
p51513
sg14
(lp51514
sg2
S'dash_joinstyle'
p51515
sbag1165
a(icodemend.demo.code_suggest
Element
p51516
(dp51517
g10
I0
sg11
S"the cross spectral density by welch 's average periodogram method . the vectors x and y are divided into nfft length segments . each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . the product of the direct ffts of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing ."
p51518
sg12
Vcsd.detrend
p51519
sg14
(lp51520
sg2
S'detrend'
p51521
sba(icodemend.demo.code_suggest
Element
p51522
(dp51523
g10
I0
sg11
S'set the drawstyle of the plot'
p51524
sg12
Vcsd.drawstyle
p51525
sg14
(lp51526
sg2
S'drawstyle'
p51527
sba(icodemend.demo.code_suggest
Element
p51528
(dp51529
g10
I0
sg11
S'set the figure instance the artist belongs to .'
p51530
sg12
Vcsd.figure
p51531
sg14
(lp51532
sg2
S'figure'
p51533
sba(icodemend.demo.code_suggest
Element
p51534
(dp51535
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p51536
sg12
Vcsd.fillstyle
p51537
sg14
(lp51538
sg2
S'fillstyle'
p51539
sbag50810
a(icodemend.demo.code_suggest
Element
p51540
(dp51541
g10
I0
sg11
S'sets the ( group ) id for the artist'
p51542
sg12
Vcsd.gid
p51543
sg14
(lp51544
sg2
S'gid'
p51545
sbag32724
ag42973
ag1278
ag22792
a(icodemend.demo.code_suggest
Element
p51546
(dp51547
g10
I0
sg11
S'set the line width in points'
p51548
sg12
Vcsd.linewidth
p51549
sg14
(lp51550
sg2
S'linewidth'
p51551
sbag47128
a(icodemend.demo.code_suggest
Element
p51552
(dp51553
g10
I0
sg11
S'set the marker edge color'
p51554
sg12
Vcsd.markeredgecolor
p51555
sg14
(lp51556
sg2
S'markeredgecolor'
p51557
sba(icodemend.demo.code_suggest
Element
p51558
(dp51559
g10
I0
sg11
S'set the marker edge width in points'
p51560
sg12
Vcsd.markeredgewidth
p51561
sg14
(lp51562
sg2
S'markeredgewidth'
p51563
sbag39874
ag7441
ag24161
ag33489
ag25142
ag13219
ag41194
ag22393
ag45588
a(icodemend.demo.code_suggest
Element
p51564
(dp51565
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p51566
sg12
Vcsd.prop_cycle
p51567
sg14
(lp51568
sg2
S'prop_cycle'
p51569
sbag50973
ag31969
ag12334
ag49192
ag5449
ag41070
ag36369
ag35252
ag39941
ag4901
a(icodemend.demo.code_suggest
Element
p51570
(dp51571
g10
I0
sg11
S'set the transformation instance used by this artist'
p51572
sg12
Vcsd.transform
p51573
sg14
(lp51574
sg2
S'transform'
p51575
sba(icodemend.demo.code_suggest
Element
p51576
(dp51577
g10
I0
sg11
S'sets the url for the artist'
p51578
sg12
Vcsd.url
p51579
sg14
(lp51580
sg2
S'url'
p51581
sba(icodemend.demo.code_suggest
Element
p51582
(dp51583
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p51584
sg12
Vcsd.vertices
p51585
sg14
(lp51586
sg2
S'vertices'
p51587
sbag46377
a(icodemend.demo.code_suggest
Element
p51588
(dp51589
g10
I0
sg11
S"the cross spectral density by welch 's average periodogram method . the vectors x and y are divided into nfft length segments . each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . the product of the direct ffts of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||a function or a vector of length nfft . to create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. the default is window_hanning ( ) . if a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
p51590
sg12
Vcsd.window
p51591
sg14
(lp51592
sg2
S'window'
p51593
sbag46022
ag27387
ag14762
a(icodemend.demo.code_suggest
Element
p51594
(dp51595
g10
I0
sg11
S'set the data limits for the xaxis'
p51596
sg12
Vcsd.xlim
p51597
sg14
(lp51598
sg2
S'xlim'
p51599
sbag8802
a(icodemend.demo.code_suggest
Element
p51600
(dp51601
g10
I0
sg11
S'set the scaling of the x-axis'
p51602
sg12
Vcsd.xscale
p51603
sg14
(lp51604
sg2
S'xscale'
p51605
sbag49143
ag44848
ag37462
a(icodemend.demo.code_suggest
Element
p51606
(dp51607
g10
I0
sg11
S'set the data np.array for y'
p51608
sg12
Vcsd.ydata
p51609
sg14
(lp51610
sg2
S'ydata'
p51611
sbag47695
ag23768
ag40259
ag37435
ag23632
ag22718
ag16153
asg2
g51462
sbsS'set_array'
p51612
(icodemend.demo.code_suggest
Element
p51613
(dp51614
g10
I69
sg11
S'set the image array from numpy array a'
p51615
sg12
Vset_array
p51616
sg14
(lp51617
g37788
asg2
g51612
sbs(S'axhspan'
p51618
g24263
tp51619
g24253
s(g117
g132
g28933
tp51620
g28929
s(g2814
g5546
g6665
tp51621
g6661
s(S'loglog'
p51622
S'scaley'
p51623
tp51624
(icodemend.demo.code_suggest
Element
p51625
(dp51626
g10
I0
sg11
S'kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .'
p51627
sg12
Vloglog.scaley
p51628
sg14
(lp51629
sg2
g51623
sbsS'reload_library'
p51630
(icodemend.demo.code_suggest
Element
p51631
(dp51632
g10
I0
sg11
S'reload style library .'
p51633
sg12
Vreload_library
p51634
sg14
(lp51635
sg2
g51630
sbs(S'hist'
p51636
S'patches1'
p51637
tp51638
(icodemend.demo.code_suggest
Element
p51639
(dp51640
g10
I0
sg11
S'compute and draw the histogram of x . the return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .'
p51641
sg12
Vhist.patches1
p51642
sg14
(lp51643
sg2
g51637
sbs(S'pcolormesh'
p51644
S'edgecolors'
p51645
tp51646
(icodemend.demo.code_suggest
Element
p51647
(dp51648
g10
I6
sg11
S"color sequence ] if none , the rc setting is used by default . if ' none ' , edges will not be visible . if ' face ' , edges will have the same color as the faces . an mpl color or sequence of colors will set the edge color"
p51649
sg12
Vpcolormesh.edgecolors
p51650
sg14
(lp51651
(icodemend.demo.code_suggest
Element
p51652
(dp51653
g10
I2
sg11
S''
sg12
Vpcolormesh.edgecolors.'black'
p51654
sg14
(lp51655
sg2
S"'black'"
p51656
sbag11770
a(icodemend.demo.code_suggest
Element
p51657
(dp51658
g10
I1
sg11
S''
sg12
Vpcolormesh.edgecolors.'None'
p51659
sg14
(lp51660
sg2
S"'None'"
p51661
sbag22761
asg2
g51645
sbsS'refine_field'
p51662
(icodemend.demo.code_suggest
Element
p51663
(dp51664
g10
I8
sg11
S'refines a field defined on the encapsulated triangulation .'
p51665
sg12
Vrefine_field
p51666
sg14
(lp51667
g34260
ag49724
ag34460
ag25158
ag38203
asg2
g51662
sbs(g139
g140
g1782
tp51668
g1778
s(S'axvline'
p51669
S'visible'
p51670
tp51671
(icodemend.demo.code_suggest
Element
p51672
(dp51673
g10
I0
sg11
S"set the artist 's visiblity ."
p51674
sg12
Vaxvline.visible
p51675
sg14
(lp51676
sg2
g51670
sbs(S'semilogx'
p51677
g39126
tp51678
g39121
s(S'gca'
p51679
S'yticks'
p51680
tp51681
(icodemend.demo.code_suggest
Element
p51682
(dp51683
g10
I0
sg11
S'set the y ticks with list of ticks'
p51684
sg12
Vgca.yticks
p51685
sg14
(lp51686
sg2
g51680
sbsS'interpolated'
p51687
(icodemend.demo.code_suggest
Element
p51688
(dp51689
g10
I3
sg11
S'returns a new path resampled to length n x steps .'
p51690
sg12
Vinterpolated
p51691
sg14
(lp51692
sg2
g51687
sbs(g324
g785
g9427
tp51693
g9423
s(g101
g4274
g21719
tp51694
g21715
s(S'phase_spectrum'
p51695
S'title'
p51696
tp51697
(icodemend.demo.code_suggest
Element
p51698
(dp51699
g10
I0
sg11
S'set a title for the axes .'
p51700
sg12
Vphase_spectrum.title
p51701
sg14
(lp51702
sg2
g51696
sbs(S'scatter'
p51703
g22153
tp51704
g22118
s(g245
g140
g30143
tp51705
g30139
s(S'errorbar'
p51706
S'yticks'
p51707
tp51708
(icodemend.demo.code_suggest
Element
p51709
(dp51710
g10
I0
sg11
S'set the y ticks with list of ticks'
p51711
sg12
Verrorbar.yticks
p51712
sg14
(lp51713
sg2
g51707
sbs(S'broken_barh'
p51714
g48727
tp51715
g48722
s(g117
g132
g28683
tp51716
g28679
s(S'quiver'
p51717
g30861
tp51718
g30852
s(S'semilogy'
p51719
g39247
tp51720
g39242
s(g117
g118
g27714
tp51721
g27710
sS'set_label'
p51722
(icodemend.demo.code_suggest
Element
p51723
(dp51724
g10
I60
sg11
S'set the label to s for auto legend .'
p51725
sg12
Vset_label
p51726
sg14
(lp51727
g41853
asg2
g51722
sbs(S'hexbin'
p51728
g25837
tp51729
g25832
s(S'hexbin'
p51730
g26033
tp51731
g26028
s(S'table'
p51732
S'xlabel'
p51733
tp51734
(icodemend.demo.code_suggest
Element
p51735
(dp51736
g10
I0
sg11
S'set the label for the xaxis .'
p51737
sg12
Vtable.xlabel
p51738
sg14
(lp51739
sg2
g51733
sbs(g16
g489
g46549
tp51740
g46545
s(g1170
g10211
g865
tp51741
g861
s(S'blend_hsv'
p51742
g40608
tp51743
g40603
s(g101
g325
g21799
tp51744
g21795
s(g452
g453
g7198
tp51745
g7194
s(g1003
g33594
g31172
tp51746
g31168
s(S'set_ticklabels'
p51747
g10346
tp51748
g10341
s(S'quotes_historical_yahoo_ohlc'
p51749
g49775
tp51750
g49770
s(S'add'
p51751
S'title'
p51752
tp51753
(icodemend.demo.code_suggest
Element
p51754
(dp51755
g10
I0
sg11
S'set a title for the axes .'
p51756
sg12
Vadd.title
p51757
sg14
(lp51758
sg2
g51752
sbs(g139
g13048
g438
tp51759
g1956
s(g944
g118
g51447
tp51760
g51443
s(S'rec_append_fields'
p51761
S'arrs'
p51762
tp51763
(icodemend.demo.code_suggest
Element
p51764
(dp51765
g10
I0
sg11
S'return a new record array with field names populated with data from arrays in arrs . if appending a single field , then names , arrs and dtypes do not have to be lists . they can just be the values themselves .'
p51766
sg12
Vrec_append_fields.arrs
p51767
sg14
(lp51768
sg2
g51762
sbs(S'fill'
p51769
S'codes'
p51770
tp51771
(icodemend.demo.code_suggest
Element
p51772
(dp51773
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p51774
sg12
Vfill.codes
p51775
sg14
(lp51776
sg2
g51770
sbs(g582
g118
g3512
tp51777
g3508
s(g117
S'x'
g29358
tp51778
g29354
s(S'axhline'
p51779
g3579
tp51780
g3574
s(S'barbs'
p51781
S'path_effects'
p51782
tp51783
(icodemend.demo.code_suggest
Element
p51784
(dp51785
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p51786
sg12
Vbarbs.path_effects
p51787
sg14
(lp51788
sg2
g51782
sbs(S'axvline'
p51789
S'yticklabels'
p51790
tp51791
(icodemend.demo.code_suggest
Element
p51792
(dp51793
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p51794
sg12
Vaxvline.yticklabels
p51795
sg14
(lp51796
sg2
g51790
sbs(S'errorbar'
p51797
S'capsize'
p51798
tp51799
(icodemend.demo.code_suggest
Element
p51800
(dp51801
g10
I13
sg11
S'the length of the error bar caps in points ; if none , it will take the value from errorbar.capsize rcparam .'
p51802
sg12
Verrorbar.capsize
p51803
sg14
(lp51804
g24653
ag42746
a(icodemend.demo.code_suggest
Element
p51805
(dp51806
g10
I1
sg11
S''
sg12
Verrorbar.capsize.3
p51807
sg14
(lp51808
sg2
S'3'
sbag12652
a(icodemend.demo.code_suggest
Element
p51809
(dp51810
g10
I1
sg11
S''
sg12
Verrorbar.capsize.5
p51811
sg14
(lp51812
sg2
S'5'
sbag49875
ag20940
asg2
g51798
sbs(S'pie'
p51813
S'shadow'
p51814
tp51815
(icodemend.demo.code_suggest
Element
p51816
(dp51817
g10
I14
sg11
S'draw a shadow beneath the pie .'
p51818
sg12
Vpie.shadow
p51819
sg14
(lp51820
g47250
a(icodemend.demo.code_suggest
Element
p51821
(dp51822
g10
I3
sg11
S''
sg12
Vpie.shadow.False
p51823
sg14
(lp51824
sg2
g1944
sbasg2
g51814
sbs(g5640
g10482
g10482
tp51825
g10478
s(S'axhline'
p51826
g3573
tp51827
g3568
s(g5848
g5849
S'10'
p51828
tp51829
(icodemend.demo.code_suggest
Element
p51830
(dp51831
g10
I1
sg11
S''
sg12
VSlider.valinit.10
p51832
sg14
(lp51833
sg2
g51828
sbs(S'errorbar'
p51834
S'ymargin'
p51835
tp51836
(icodemend.demo.code_suggest
Element
p51837
(dp51838
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p51839
sg12
Verrorbar.ymargin
p51840
sg14
(lp51841
sg2
g51835
sbs(g8943
g10376
g33537
tp51842
g33533
s(S'l1norm'
p51843
S'a'
tp51844
(icodemend.demo.code_suggest
Element
p51845
(dp51846
g10
I0
sg11
S'return the l1 norm of a , flattened out .'
p51847
sg12
Vl1norm.a
p51848
sg14
(lp51849
sg2
S'a'
sbsS'local_over_kwdict'
p51850
(icodemend.demo.code_suggest
Element
p51851
(dp51852
g10
I0
sg11
S'enforces the priority of a local variable over potentially conflicting argument(s ) from a kwargs dict .'
p51853
sg12
Vlocal_over_kwdict
p51854
sg14
(lp51855
(icodemend.demo.code_suggest
Element
p51856
(dp51857
g10
I0
sg11
S'the local variable ( highest priority )'
p51858
sg12
Vlocal_over_kwdict.local_var: any object
p51859
sg14
(lp51860
sg2
S'local_var: any object'
p51861
sbasg2
g51850
sbs(S'psd'
p51862
g36904
tp51863
g36899
s(g252
g24217
S'3'
tp51864
g14479
sS'set_view_interval'
p51865
(icodemend.demo.code_suggest
Element
p51866
(dp51867
g10
I0
sg11
S'if ignore is false , the order of vmin , vmax does not matter ; the original axis orientation will be preserved .'
p51868
sg12
Vset_view_interval
p51869
sg14
(lp51870
g32819
asg2
g51865
sbs(g139
g13636
S'1'
tp51871
g2077
sS'set_path_effects'
p51872
(icodemend.demo.code_suggest
Element
p51873
(dp51874
g10
I3
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p51875
sg12
Vset_path_effects
p51876
sg14
(lp51877
sg2
g51872
sbs(g38034
g8267
g48684
tp51878
g48680
s(S'process_selected'
p51879
g16079
tp51880
g16074
s(S'loglog'
p51881
S'url'
p51882
tp51883
(icodemend.demo.code_suggest
Element
p51884
(dp51885
g10
I0
sg11
S'sets the url for the artist'
p51886
sg12
Vloglog.url
p51887
sg14
(lp51888
sg2
g51882
sbs(S'set_title'
p51889
g44453
tp51890
g44448
sS'connect'
p51891
(icodemend.demo.code_suggest
Element
p51892
(dp51893
g10
I72
sg11
S'connect events register func to be called when a signal s is generated func will be called connect event with string s to func .'
p51894
sg12
Vconnect
p51895
sg14
(lp51896
g44752
ag23866
asg2
g51891
sbs(S'magnitude_spectrum'
p51897
g47966
tp51898
g47961
s(S'CubicTriInterpolator'
p51899
S'kind'
p51900
tp51901
(icodemend.demo.code_suggest
Element
p51902
(dp51903
g10
I0
sg11
S"choice of the smoothing algorithm , in order to compute the interpolant derivatives ( defaults to ' min_e ' ) :"
p51904
sg12
VCubicTriInterpolator.kind
p51905
sg14
(lp51906
sg2
g51900
sbs(S'text'
p51907
S'y'
tp51908
g48298
s(g5424
g8768
g1944
tp51909
g26980
s(g252
g253
g14131
tp51910
g14127
sS'get_ylim'
p51911
(icodemend.demo.code_suggest
Element
p51912
(dp51913
g10
I55
sg11
S'get the y-axis range [ bottom , top ]'
p51914
sg12
Vget_ylim
p51915
sg14
(lp51916
(icodemend.demo.code_suggest
Element
p51917
(dp51918
g10
I0
sg11
S'get the y-axis range [ bottom , top ]'
p51919
sg12
Vget_ylim.bottom
p51920
sg14
(lp51921
sg2
S'bottom'
p51922
sbag18509
asg2
g51911
sbs(g252
g253
g14036
tp51923
g14032
s(S'semilogy'
p51924
g39307
tp51925
g39302
s(g117
g909
g909
tp51926
g29294
s(S'add_axes'
p51927
S'position'
p51928
tp51929
(icodemend.demo.code_suggest
Element
p51930
(dp51931
g10
I0
sg11
S'set the axes position with'
p51932
sg12
Vadd_axes.position
p51933
sg14
(lp51934
sg2
g51928
sbs(g125
g19538
g37562
tp51935
g37558
s(S'set_yticklabels'
p51936
g18338
tp51937
g18333
s(S'use'
p51938
S'force'
p51939
tp51940
(icodemend.demo.code_suggest
Element
p51941
(dp51942
g10
I0
sg11
S'the argument is case-insensitive . warn specifies whether a warning should be issued if a backend has already been set up . force is an experimental flag that tells matplotlib to attempt to initialize a new backend by reloading the backend module .'
p51943
sg12
Vuse.force
p51944
sg14
(lp51945
sg2
g51939
sbsS'listFiles'
p51946
(icodemend.demo.code_suggest
Element
p51947
(dp51948
g10
I0
sg11
S'recursively list files'
p51949
sg12
VlistFiles
p51950
sg14
(lp51951
sg2
g51946
sbs(g101
S's'
g7736
tp51952
g7732
s(g16
g17
g33594
tp51953
g42008
s(g117
g118
g28299
tp51954
g28295
s(S'quiverkey'
p51955
S'Y'
tp51956
g36677
s(g117
g2251
g29170
tp51957
g29166
s(S'angle_spectrum'
p51958
g18852
tp51959
g18847
s(g117
g118
g27829
tp51960
g27825
s(g245
g140
g30054
tp51961
g30050
s(S'annotate'
p51962
S's'
tp51963
(icodemend.demo.code_suggest
Element
p51964
(dp51965
g10
I2
sg11
S'label'
p51966
sg12
Vannotate.s
p51967
sg14
(lp51968
g33514
a(icodemend.demo.code_suggest
Element
p51969
(dp51970
g10
I1
sg11
S''
sg12
Vannotate.s.''
p51971
sg14
(lp51972
sg2
S"''"
p51973
sbasg2
S's'
sbs(g125
g132
g132
tp51974
(icodemend.demo.code_suggest
Element
p51975
(dp51976
g10
I1
sg11
S''
sg12
Vaxvline.color.color
p51977
sg14
(lp51978
sg2
g132
sbs(S'contour'
p51979
g17771
tp51980
g17766
s(S'semilogy'
p51981
g39289
tp51982
g39284
s(g252
g7452
g14276
tp51983
g14272
sS'to_filehandle'
p51984
(icodemend.demo.code_suggest
Element
p51985
(dp51986
g10
I0
sg11
S'fname can be a filename or a file handle .'
p51987
sg12
Vto_filehandle
p51988
sg14
(lp51989
(icodemend.demo.code_suggest
Element
p51990
(dp51991
g10
I0
sg11
S'fname can be a filename or a file handle . support for gzipped files is automatic , if the filename ends in .gz . flag is a read/write flag for file ( )'
p51992
sg12
Vto_filehandle.flag
p51993
sg14
(lp51994
sg2
S'flag'
p51995
sbag12272
asg2
g51984
sbs(g245
g140
g30503
tp51996
g30499
s(S'entropy'
p51997
S'S'
tp51998
g26962
s(g117
g118
g27754
tp51999
g27750
s(S'csd'
p52000
g51599
tp52001
g51594
s(S'plotting'
p52002
g15814
tp52003
g15809
s(S'cohere'
p52004
g43813
tp52005
g43808
s(g117
g2392
g29106
tp52006
g29102
s(g766
g7032
g19288
tp52007
g19284
sS'copper'
p52008
(icodemend.demo.code_suggest
Element
p52009
(dp52010
g10
I0
sg11
S'set the default colormap to copper and apply to current image if any .'
p52011
sg12
Vcopper
p52012
sg14
(lp52013
sg2
g52008
sbs(g324
g785
g9731
tp52014
g9727
s(S'table'
p52015
S'ymargin'
p52016
tp52017
(icodemend.demo.code_suggest
Element
p52018
(dp52019
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p52020
sg12
Vtable.ymargin
p52021
sg14
(lp52022
sg2
g52016
sbs(g6632
g6300
g45814
tp52023
g45810
s(S'pcolorfast'
p52024
g33874
tp52025
g33869
s(g7484
S'C'
S'C'
tp52026
g25701
s(S'barh'
p52027
S'edgecolor'
p52028
tp52029
(icodemend.demo.code_suggest
Element
p52030
(dp52031
g10
I5
sg11
S'set the patch edge color|||the colors of the bar edges'
p52032
sg12
Vbarh.edgecolor
p52033
sg14
(lp52034
g13326
ag4062
asg2
g52028
sbs(g93
g4800
g25589
tp52035
g25585
s(g101
S'c'
g21380
tp52036
g21376
s(g332
g389
g33689
tp52037
g33685
s(g2250
g50160
g24097
tp52038
g24093
s(S'pcolormesh'
p52039
S'hatch'
p52040
tp52041
(icodemend.demo.code_suggest
Element
p52042
(dp52043
g10
I0
sg11
S'set the hatching pattern'
p52044
sg12
Vpcolormesh.hatch
p52045
sg14
(lp52046
sg2
g52040
sbs(g117
g4274
g28993
tp52047
g28989
s(S'psd'
p52048
g37066
tp52049
g37061
s(g117
g118
g28499
tp52050
g28495
s(S'setp'
p52051
g39684
tp52052
g39679
s(g582
S'y'
g3380
tp52053
g3376
s(g245
g140
g30418
tp52054
g30414
s(S'pcolorfast'
p52055
S'Y'
tp52056
g33822
sS'cross_from_above'
p52057
(icodemend.demo.code_suggest
Element
p52058
(dp52059
g10
I0
sg11
S"return the indices into x where x crosses some threshold from below , e.g. , the i 's where"
p52060
sg12
Vcross_from_above
p52061
sg14
(lp52062
(icodemend.demo.code_suggest
Element
p52063
(dp52064
g10
I0
sg11
S"return the indices into x where x crosses some threshold from below , e.g. , the i 's where :"
p52065
sg12
Vcross_from_above.x
p52066
sg14
(lp52067
sg2
S'x'
sbasg2
g52057
sbs(S'quiver'
p52068
g30991
tp52069
g30986
s(S'axis'
p52070
S'x'
tp52071
g15112
s(S'vlines'
p52072
S'edgecolor'
p52073
tp52074
(icodemend.demo.code_suggest
Element
p52075
(dp52076
g10
I0
sg11
S'set the edgecolor(s ) of the collection .'
p52077
sg12
Vvlines.edgecolor
p52078
sg14
(lp52079
sg2
g52073
sbs(g10369
g3075
g3075
tp52080
g26692
s(g332
g38074
g48274
tp52081
g48270
s(S'plot_date'
p52082
g19883
tp52083
g19878
s(g93
g4800
g25319
tp52084
g25315
s(g324
g785
g9317
tp52085
g9313
s(S'loglog'
p52086
S'ylim'
p52087
tp52088
(icodemend.demo.code_suggest
Element
p52089
(dp52090
g10
I0
sg11
S'set the data limits for the yaxis'
p52091
sg12
Vloglog.ylim
p52092
sg14
(lp52093
sg2
g52087
sbs(S'alltrue'
p52094
S'seq'
p52095
tp52096
(icodemend.demo.code_suggest
Element
p52097
(dp52098
g10
I0
sg11
S'return true if all elements of seq evaluate to true . if seq is empty , return false .'
p52099
sg12
Valltrue.seq
p52100
sg14
(lp52101
sg2
g52095
sbs(S'contourf'
p52102
S'V'
tp52103
g46707
s(S'eventplot'
p52104
g23409
tp52105
g23404
s(g117
g118
g28314
tp52106
g28310
s(S'bbox_artist'
p52107
g22992
tp52108
g22987
s(g117
g118
g28079
tp52109
g28075
s(g324
g785
g9746
tp52110
g9742
s(S'barh'
p52111
S'xerr'
p52112
tp52113
(icodemend.demo.code_suggest
Element
p52114
(dp52115
g10
I5
sg11
S'if a scalar number , len(n ) array-like object , or an nx1 array-like object , errorbars are drawn at + /-value relative to the data . if a sequence of shape 2xn , errorbars are drawn at - row1 and + row2 relative to the data .|||plot x versus y with error deltas in yerr and xerr . vertical errorbars are plotted if yerr is not none . horizontal errorbars are plotted if xerr is not none .|||if not none , will be used to generate errorbar(s ) on the bar chart|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y . if not none , will be used to generate errorbar(s ) on the bar chart'
p52116
sg12
Vbarh.xerr
p52117
sg14
(lp52118
g13072
ag12594
ag46338
ag39639
ag19076
asg2
g52112
sbs(g452
g132
g31828
tp52119
g31824
s(g101
S'c'
g21410
tp52120
g21406
s(S'to_filehandle'
p52121
g51995
tp52122
g51990
s(S'axis'
p52123
g15122
tp52124
g15117
s(S'set_xmargin'
p52125
S'm'
tp52126
g38414
s(g1205
g583
g4576
tp52127
g4572
s(S'table'
p52128
S'color_cycle'
p52129
tp52130
(icodemend.demo.code_suggest
Element
p52131
(dp52132
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p52133
sg12
Vtable.color_cycle
p52134
sg14
(lp52135
sg2
g52129
sbs(S'AnchoredText'
p52136
g1010
S'2'
tp52137
g37910
s(S'semilogy'
p52138
g39379
tp52139
g39374
s(g2182
g325
g41805
tp52140
g41801
s(S'draw'
p52141
S'renderer'
p52142
tp52143
(icodemend.demo.code_suggest
Element
p52144
(dp52145
g10
I0
sg11
S'update the location of children if necessary and draw them to the given renderer . draw the annotation object to the given renderer .'
p52146
sg12
Vdraw.renderer
p52147
sg14
(lp52148
sg2
g52142
sbs(S'plotting'
p52149
g15826
tp52150
g15821
s(g117
S'y'
g29418
tp52151
g29414
s(S'cohere'
p52152
g43753
tp52153
g43748
s(S'candlestick2_ohlc'
p52154
g47104
tp52155
g47099
s(S'add'
p52156
S'color'
p52157
tp52158
(icodemend.demo.code_suggest
Element
p52159
(dp52160
g10
I0
sg11
S'set both the edgecolor and the facecolor .'
p52161
sg12
Vadd.color
p52162
sg14
(lp52163
sg2
g52157
sbs(S'set_y'
p52164
S'y'
tp52165
g12834
s(S'xcorr'
p52166
g35434
tp52167
g35429
s(S'draw_gouraud_triangle'
p52168
g33301
tp52169
g33296
sS'set_picker'
p52170
(icodemend.demo.code_suggest
Element
p52171
(dp52172
g10
I12
sg11
S'set the epsilon for picking used by this artist'
p52173
sg12
Vset_picker
p52174
sg14
(lp52175
(icodemend.demo.code_suggest
Element
p52176
(dp52177
g10
I0
sg11
S'picker can be one of the following :'
p52178
sg12
Vset_picker.picker
p52179
sg14
(lp52180
sg2
S'picker'
p52181
sbasg2
g52170
sbs(g93
g161
S'(x2, y2)'
p52182
tp52183
(icodemend.demo.code_suggest
Element
p52184
(dp52185
g10
I1
sg11
S''
sg12
Vannotate.xy.(x2, y2)
p52186
sg14
(lp52187
sg2
g52182
sbs(S'CubicTriInterpolator'
p52188
S'dz'
p52189
tp52190
(icodemend.demo.code_suggest
Element
p52191
(dp52192
g10
I0
sg11
S"used only if kind = ' user ' . in this case dz must be provided as ( dzdx , dzdy ) where dzdx , dzdy are arrays of the same shape as z and are the interpolant first derivatives at the triangulation points ."
p52193
sg12
VCubicTriInterpolator.dz
p52194
sg14
(lp52195
sg2
g52189
sbs(g117
g132
g28726
tp52196
g28722
s(g6556
g132
S"'red'"
p52197
tp52198
(icodemend.demo.code_suggest
Element
p52199
(dp52200
g10
I1
sg11
S''
sg12
Vvlines.color.'red'
p52201
sg14
(lp52202
sg2
g52197
sbs(S'contourf'
p52203
g46684
tp52204
g46674
sg12670
(icodemend.demo.code_suggest
Element
p52205
(dp52206
g10
I0
sg11
S''
sg12
VPathPatchEffect
p52207
sg14
(lp52208
(icodemend.demo.code_suggest
Element
p52209
(dp52210
g10
I0
sg11
S'all keyword arguments are passed through to the pathpatch constructor . the properties which cannot be overridden are " path " , " clip_box " " transform " and " clip_path " .'
p52211
sg12
VPathPatchEffect.**kwargs :
p52212
sg14
(lp52213
sg2
S'**kwargs :'
p52214
sbag12673
asg2
g12670
sbs(S'candlestick_ohlc'
p52215
S'width'
p52216
tp52217
(icodemend.demo.code_suggest
Element
p52218
(dp52219
g10
I0
sg11
S'fraction of a day for the rectangle width'
p52220
sg12
Vcandlestick_ohlc.width
p52221
sg14
(lp52222
sg2
g52216
sbs(g101
S's'
g7534
tp52223
g7530
sS'set_dashpad'
p52224
(icodemend.demo.code_suggest
Element
p52225
(dp52226
g10
I0
sg11
S'set the " pad " of the textwithdash , which is the extra spacing between the dash and the text , in canvas units .'
p52227
sg12
Vset_dashpad
p52228
sg14
(lp52229
sg2
g52224
sbs(g388
g389
g16940
tp52230
g16936
s(S'savefig'
p52231
S'transparent'
p52232
tp52233
(icodemend.demo.code_suggest
Element
p52234
(dp52235
g10
I23
sg11
S'if true , the axes patches will all be transparent ; the figure patch will also be transparent unless facecolor and/or edgecolor are specified via kwargs . this is useful , for example , for displaying a plot on top of a colored background on a web page . the transparency of these patches will be restored to their original values upon exit of this function .'
p52236
sg12
Vsavefig.transparent
p52237
sg14
(lp52238
(icodemend.demo.code_suggest
Element
p52239
(dp52240
g10
I19
sg11
S''
sg12
Vsavefig.transparent.True
p52241
sg14
(lp52242
sg2
g438
sbag44964
a(icodemend.demo.code_suggest
Element
p52243
(dp52244
g10
I2
sg11
S''
sg12
Vsavefig.transparent.False
p52245
sg14
(lp52246
sg2
g1944
sbasg2
g52232
sbs(S'barbs'
p52247
S'codes'
p52248
tp52249
(icodemend.demo.code_suggest
Element
p52250
(dp52251
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p52252
sg12
Vbarbs.codes
p52253
sg14
(lp52254
sg2
g52248
sbs(S'add_axes'
p52255
S'sketch_params'
p52256
tp52257
(icodemend.demo.code_suggest
Element
p52258
(dp52259
g10
I0
sg11
S'sets the sketch parameters .'
p52260
sg12
Vadd_axes.sketch_params
p52261
sg14
(lp52262
sg2
g52256
sbs(g252
g7452
g5476
tp52263
g14282
s(g252
g7452
g14305
tp52264
g14301
s(g117
S'y'
g29478
tp52265
g29474
s(S'axhspan'
p52266
g24477
tp52267
g24472
s(S'annotate'
p52268
S'aspect'
p52269
tp52270
(icodemend.demo.code_suggest
Element
p52271
(dp52272
g10
I0
sg11
S'aspect'
p52273
sg12
Vannotate.aspect
p52274
sg14
(lp52275
sg2
g52269
sbs(g245
g140
g30413
tp52276
g30409
s(S'get_title'
p52277
g47036
tp52278
g47031
s(g4355
g45931
g45931
tp52279
g45927
s(S'get_recursive_filelist'
p52280
g8709
tp52281
g8704
s(g139
g140
g1483
tp52282
g1479
sS'find'
p52283
(icodemend.demo.code_suggest
Element
p52284
(dp52285
g10
I10
sg11
S'return the indices where ravel(condition ) is true'
p52286
sg12
Vfind
p52287
sg14
(lp52288
sg2
g52283
sbs(S'get'
p52289
g49964
tp52290
g49959
s(g117
g118
g21314
tp52291
g27697
s(g514
g325
g9074
tp52292
g48167
s(g8547
g8548
g19522
tp52293
g19518
s(g117
g118
g28044
tp52294
g28040
s(g4998
g5025
S'5'
tp52295
g39495
sS'phase_spectrum'
p52296
(icodemend.demo.code_suggest
Element
p52297
(dp52298
g10
I1
sg11
S'plot the phase spectrum .'
p52299
sg12
Vphase_spectrum
p52300
sg14
(lp52301
(icodemend.demo.code_suggest
Element
p52302
(dp52303
g10
I1
sg11
S'the sampling frequency ( samples per time unit ) . it is used to calculate the fourier frequencies , freqs , in cycles per time unit . the default value is 2 .'
p52304
sg12
Vphase_spectrum.Fs
p52305
sg14
(lp52306
g10015
asg2
S'Fs'
p52307
sba(icodemend.demo.code_suggest
Element
p52308
(dp52309
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p52310
sg12
Vphase_spectrum._interpolation_steps
p52311
sg14
(lp52312
sg2
S'_interpolation_steps'
p52313
sbag5159
ag3237
a(icodemend.demo.code_suggest
Element
p52314
(dp52315
g10
I0
sg11
S'anchor'
p52316
sg12
Vphase_spectrum.anchor
p52317
sg14
(lp52318
sg2
S'anchor'
p52319
sba(icodemend.demo.code_suggest
Element
p52320
(dp52321
g10
I0
sg11
S"set the artist 's animation state ."
p52322
sg12
Vphase_spectrum.animated
p52323
sg14
(lp52324
sg2
S'animated'
p52325
sbag31404
ag8237
ag2896
a(icodemend.demo.code_suggest
Element
p52326
(dp52327
g10
I0
sg11
S"set the artist 's clip bbox ."
p52328
sg12
Vphase_spectrum.clip_box
p52329
sg14
(lp52330
sg2
S'clip_box'
p52331
sbag22323
ag41307
a(icodemend.demo.code_suggest
Element
p52332
(dp52333
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p52334
sg12
Vphase_spectrum.closed
p52335
sg14
(lp52336
sg2
S'closed'
p52337
sbag50801
ag15396
a(icodemend.demo.code_suggest
Element
p52338
(dp52339
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p52340
sg12
Vphase_spectrum.color_cycle
p52341
sg14
(lp52342
sg2
S'color_cycle'
p52343
sba(icodemend.demo.code_suggest
Element
p52344
(dp52345
g10
I0
sg11
S'replace the contains test used by this artist .'
p52346
sg12
Vphase_spectrum.contains
p52347
sg14
(lp52348
sg2
S'contains'
p52349
sbag43159
ag35004
a(icodemend.demo.code_suggest
Element
p52350
(dp52351
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p52352
sg12
Vphase_spectrum.dash_joinstyle
p52353
sg14
(lp52354
sg2
S'dash_joinstyle'
p52355
sba(icodemend.demo.code_suggest
Element
p52356
(dp52357
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p52358
sg12
Vphase_spectrum.dashes
p52359
sg14
(lp52360
sg2
S'dashes'
p52361
sbag34887
ag49704
a(icodemend.demo.code_suggest
Element
p52362
(dp52363
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p52364
sg12
Vphase_spectrum.fillstyle
p52365
sg14
(lp52366
sg2
S'fillstyle'
p52367
sbag32668
a(icodemend.demo.code_suggest
Element
p52368
(dp52369
g10
I0
sg11
S'sets the ( group ) id for the artist'
p52370
sg12
Vphase_spectrum.gid
p52371
sg14
(lp52372
sg2
S'gid'
p52373
sbag50853
a(icodemend.demo.code_suggest
Element
p52374
(dp52375
g10
I0
sg11
S'set the label to s for auto legend .'
p52376
sg12
Vphase_spectrum.label
p52377
sg14
(lp52378
sg2
S'label'
p52379
sbag37189
a(icodemend.demo.code_suggest
Element
p52380
(dp52381
g10
I0
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p52382
sg12
Vphase_spectrum.linestyle
p52383
sg14
(lp52384
sg2
S'linestyle'
p52385
sbag31947
ag13377
ag26145
ag36347
ag41106
ag51065
ag46877
ag8656
ag48214
ag23906
a(icodemend.demo.code_suggest
Element
p52386
(dp52387
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p52388
sg12
Vphase_spectrum.picker
p52389
sg14
(lp52390
sg2
S'picker'
p52391
sbag40532
ag48967
a(icodemend.demo.code_suggest
Element
p52392
(dp52393
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p52394
sg12
Vphase_spectrum.prop_cycle
p52395
sg14
(lp52396
sg2
S'prop_cycle'
p52397
sbag7153
ag50207
ag976
ag35615
a(icodemend.demo.code_suggest
Element
p52398
(dp52399
g10
I0
sg11
S'sets the sketch parameters .'
p52400
sg12
Vphase_spectrum.sketch_params
p52401
sg14
(lp52402
sg2
S'sketch_params'
p52403
sbag47795
ag15435
a(icodemend.demo.code_suggest
Element
p52404
(dp52405
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p52406
sg12
Vphase_spectrum.solid_joinstyle
p52407
sg14
(lp52408
sg2
S'solid_joinstyle'
p52409
sba(icodemend.demo.code_suggest
Element
p52410
(dp52411
g10
I0
sg11
S'returns the tuple ( spectrum , freqs , line ) :'
p52412
sg12
Vphase_spectrum.spectrum
p52413
sg14
(lp52414
sg2
S'spectrum'
p52415
sbag51698
a(icodemend.demo.code_suggest
Element
p52416
(dp52417
g10
I0
sg11
S'set the transformation instance used by this artist'
p52418
sg12
Vphase_spectrum.transform
p52419
sg14
(lp52420
sg2
S'transform'
p52421
sbag15457
a(icodemend.demo.code_suggest
Element
p52422
(dp52423
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p52424
sg12
Vphase_spectrum.vertices
p52425
sg14
(lp52426
sg2
S'vertices'
p52427
sbag44271
ag41225
ag13384
ag23743
ag42963
ag10302
a(icodemend.demo.code_suggest
Element
p52428
(dp52429
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p52430
sg12
Vphase_spectrum.xmargin
p52431
sg14
(lp52432
sg2
S'xmargin'
p52433
sba(icodemend.demo.code_suggest
Element
p52434
(dp52435
g10
I0
sg11
S'set the scaling of the x-axis'
p52436
sg12
Vphase_spectrum.xscale
p52437
sg14
(lp52438
sg2
S'xscale'
p52439
sbag51350
a(icodemend.demo.code_suggest
Element
p52440
(dp52441
g10
I0
sg11
S'set the x ticks with list of ticks'
p52442
sg12
Vphase_spectrum.xticks
p52443
sg14
(lp52444
sg2
S'xticks'
p52445
sbag6246
a(icodemend.demo.code_suggest
Element
p52446
(dp52447
g10
I0
sg11
S'set the label for the yaxis'
p52448
sg12
Vphase_spectrum.ylabel
p52449
sg14
(lp52450
sg2
S'ylabel'
p52451
sbag40711
ag43364
ag4933
a(icodemend.demo.code_suggest
Element
p52452
(dp52453
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p52454
sg12
Vphase_spectrum.yticklabels
p52455
sg14
(lp52456
sg2
S'yticklabels'
p52457
sba(icodemend.demo.code_suggest
Element
p52458
(dp52459
g10
I0
sg11
S'set the y ticks with list of ticks'
p52460
sg12
Vphase_spectrum.yticks
p52461
sg14
(lp52462
sg2
S'yticks'
p52463
sba(icodemend.demo.code_suggest
Element
p52464
(dp52465
g10
I0
sg11
S'set the zorder for the artist .'
p52466
sg12
Vphase_spectrum.zorder
p52467
sg14
(lp52468
sg2
S'zorder'
p52469
sbasg2
g52296
sbs(S'contourf'
p52470
g46700
tp52471
g46695
s(S'plot_day_summary2_ochl'
p52472
g41162
tp52473
g41157
s(g452
g453
g7246
tp52474
g7242
s(S'set_x'
p52475
S'x'
tp52476
g12823
s(g93
g4800
g25439
tp52477
g25435
s(g1003
g4403
g25239
tp52478
g25235
s(g332
g909
g6880
tp52479
g6876
s(S'plot'
p52480
g29832
tp52481
g29827
s(g6632
g2155
g47466
tp52482
g47462
sS'score_stretch'
p52483
(icodemend.demo.code_suggest
Element
p52484
(dp52485
g10
I0
sg11
S'returns a match score between stretch1 and stretch2 .'
p52486
sg12
Vscore_stretch
p52487
sg14
(lp52488
g5107
ag48558
asg2
g52483
sbsS'get_autoscalex_on'
p52489
(icodemend.demo.code_suggest
Element
p52490
(dp52491
g10
I0
sg11
S'get whether autoscaling for the x-axis is applied on plot commands'
p52492
sg12
Vget_autoscalex_on
p52493
sg14
(lp52494
sg2
g52489
sbsS'remove'
p52495
(icodemend.demo.code_suggest
Element
p52496
(dp52497
g10
I68
sg11
S'remove the artist from the figure if possible .'
p52498
sg12
Vremove
p52499
sg14
(lp52500
g35846
a(icodemend.demo.code_suggest
Element
p52501
(dp52502
g10
I0
sg11
S'remove element o from the stack'
p52503
sg12
Vremove.o
p52504
sg14
(lp52505
sg2
S'o'
sbasg2
g52495
sbs(S'complex_spectrum'
p52506
g32926
tp52507
g32921
s(g117
g20269
g29813
tp52508
g29809
s(g117
g118
g28609
tp52509
g28605
s(S'phase_spectrum'
p52510
g52415
tp52511
g52410
s(g109
g3075
S'400'
p52512
tp52513
(icodemend.demo.code_suggest
Element
p52514
(dp52515
g10
I5
sg11
S''
sg12
Vsavefig.dpi.400
p52516
sg14
(lp52517
sg2
g52512
sbsS'get_fullname'
p52518
(icodemend.demo.code_suggest
Element
p52519
(dp52520
g10
I0
sg11
S"return the font full name , e.g. , ' times-roman '"
p52521
sg12
Vget_fullname
p52522
sg14
(lp52523
sg2
g52518
sbs(S'pcolor'
p52524
g49529
tp52525
g49524
s(S'add_axes'
p52526
S'transform'
p52527
tp52528
(icodemend.demo.code_suggest
Element
p52529
(dp52530
g10
I0
sg11
S'set the transform instance used by this artist .'
p52531
sg12
Vadd_axes.transform
p52532
sg14
(lp52533
sg2
g52527
sbs(g5975
g5775
g5817
tp52534
g5813
s(g125
S'x'
g3385
tp52535
g34842
s(S'pprint_setters_rest'
p52536
g45284
tp52537
g45279
sS'get_legend_handles_labels'
p52538
(icodemend.demo.code_suggest
Element
p52539
(dp52540
g10
I36
sg11
S'return handles and labels for legend'
p52541
sg12
Vget_legend_handles_labels
p52542
sg14
(lp52543
sg2
g52538
sbs(g1170
g32850
g32850
tp52544
g33903
sS'strftime_pre_1900'
p52545
(icodemend.demo.code_suggest
Element
p52546
(dp52547
g10
I0
sg11
S'call time.strftime for years before 1900 by rolling forward a multiple of 28 years .'
p52548
sg12
Vstrftime_pre_1900
p52549
sg14
(lp52550
(icodemend.demo.code_suggest
Element
p52551
(dp52552
g10
I0
sg11
S'fmt is a strftime ( ) format string .'
p52553
sg12
Vstrftime_pre_1900.fmt
p52554
sg14
(lp52555
sg2
S'fmt'
p52556
sbasg2
g52545
sbs(S'title'
p52557
S'y'
tp52558
g35792
s(S'fill'
p52559
S'aspect'
p52560
tp52561
(icodemend.demo.code_suggest
Element
p52562
(dp52563
g10
I0
sg11
S'aspect'
p52564
sg12
Vfill.aspect
p52565
sg14
(lp52566
sg2
g52560
sbs(S'eventplot'
p52567
g23457
tp52568
g23452
s(S'get_unitless_position'
p52569
S'y'
tp52570
g51094
s(g1170
g118
S"'ONE'"
p52571
tp52572
(icodemend.demo.code_suggest
Element
p52573
(dp52574
g10
I1
sg11
S''
sg12
Vhist.label.'ONE'
p52575
sg14
(lp52576
sg2
g52571
sbs(g16
g489
S'A'
tp52577
g46526
s(g4998
g325
S"'hot'"
p52578
tp52579
(icodemend.demo.code_suggest
Element
p52580
(dp52581
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.'hot'
p52582
sg14
(lp52583
sg2
g52578
sbs(g101
S's'
S'2'
tp52584
g7620
s(g324
g785
g9467
tp52585
g9463
s(S'get_extents'
p52586
g42365
tp52587
g42360
s(g93
g161
S'(x[0], y[0])'
p52588
tp52589
(icodemend.demo.code_suggest
Element
p52590
(dp52591
g10
I1
sg11
S''
sg12
Vannotate.xy.(x[0], y[0])
p52592
sg14
(lp52593
sg2
g52588
sbs(g1170
g1257
S'[0, 1, 2]'
p52594
tp52595
(icodemend.demo.code_suggest
Element
p52596
(dp52597
g10
I1
sg11
S''
sg12
Vhist.bins.[0, 1, 2]
p52598
sg14
(lp52599
sg2
g52594
sbs(S'contour'
p52600
g17821
tp52601
g17816
sS'get_familyname'
p52602
(icodemend.demo.code_suggest
Element
p52603
(dp52604
g10
I0
sg11
S"return the font family name , e.g. , ' times '"
p52605
sg12
Vget_familyname
p52606
sg14
(lp52607
sg2
g52602
sbs(g324
g785
g9801
tp52608
g9797
s(S'getp'
p52609
S'xlabel'
p52610
tp52611
(icodemend.demo.code_suggest
Element
p52612
(dp52613
g10
I0
sg11
S'set the label for the xaxis .'
p52614
sg12
Vgetp.xlabel
p52615
sg14
(lp52616
sg2
g52610
sbs(g36374
g36406
tp52617
g36401
s(S'set_xlabel'
p52618
S'y'
tp52619
g42825
s(g93
g4800
g25434
tp52620
g25430
s(S'remove'
p52621
S'o'
tp52622
g52501
s(S'pcolormesh'
p52623
S'readonly'
p52624
tp52625
(icodemend.demo.code_suggest
Element
p52626
(dp52627
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p52628
sg12
Vpcolormesh.readonly
p52629
sg14
(lp52630
sg2
g52624
sbs(g117
g118
g28124
tp52631
g28120
s(g6146
g2841
g14872
tp52632
g14868
s(S'annotate'
p52633
S'sketch_params'
p52634
tp52635
(icodemend.demo.code_suggest
Element
p52636
(dp52637
g10
I0
sg11
S'sets the sketch parameters .'
p52638
sg12
Vannotate.sketch_params
p52639
sg14
(lp52640
sg2
g52634
sbs(g1170
g118
S"'hist 2'"
p52641
tp52642
(icodemend.demo.code_suggest
Element
p52643
(dp52644
g10
I1
sg11
S''
sg12
Vhist.label.'hist 2'
p52645
sg14
(lp52646
sg2
g52641
sbs(S'barh'
p52647
S'linewidth'
p52648
tp52649
(icodemend.demo.code_suggest
Element
p52650
(dp52651
g10
I5
sg11
S"width of bar edge(s ) . if none , use default linewidth ; if 0 , do n't draw edges .|||set the patch linewidth in points"
p52652
sg12
Vbarh.linewidth
p52653
sg14
(lp52654
g16691
ag49213
asg2
g52648
sbsS'xkcd'
p52655
(icodemend.demo.code_suggest
Element
p52656
(dp52657
g10
I11
sg11
S'turns on xkcd sketch-style drawing mode .'
p52658
sg12
Vxkcd
p52659
sg14
(lp52660
(icodemend.demo.code_suggest
Element
p52661
(dp52662
g10
I1
sg11
S'the length of the wiggle along the line .'
p52663
sg12
Vxkcd.length
p52664
sg14
(lp52665
(icodemend.demo.code_suggest
Element
p52666
(dp52667
g10
I1
sg11
S''
sg12
Vxkcd.length.100
p52668
sg14
(lp52669
sg2
S'100'
p52670
sbasg2
S'length'
p52671
sbag44718
ag171
asg2
g52655
sbs(g252
g13469
g14537
tp52672
g14533
s(g101
S'c'
g20647
tp52673
g21462
sS'markerObject'
p52674
(icodemend.demo.code_suggest
Element
p52675
(dp52676
g10
I0
sg11
S'return name of a marker xobject representing the given path .'
p52677
sg12
VmarkerObject
p52678
sg14
(lp52679
sg2
g52674
sbsS'is_transform_set'
p52680
(icodemend.demo.code_suggest
Element
p52681
(dp52682
g10
I0
sg11
S'returns true if artist has a transform explicitly set .'
p52683
sg12
Vis_transform_set
p52684
sg14
(lp52685
sg2
g52680
sbs(g5424
g102
g50596
tp52686
g50592
sS'get_dashrotation'
p52687
(icodemend.demo.code_suggest
Element
p52688
(dp52689
g10
I0
sg11
S'get the rotation of the dash in degrees .'
p52690
sg12
Vget_dashrotation
p52691
sg14
(lp52692
sg2
g52687
sbs(S'barh'
p52693
S'animated'
p52694
tp52695
(icodemend.demo.code_suggest
Element
p52696
(dp52697
g10
I0
sg11
S"set the artist 's animation state ."
p52698
sg12
Vbarh.animated
p52699
sg14
(lp52700
sg2
g52694
sbs(g5975
g4274
g19707
tp52701
g19703
s(S'set_yticklabels'
p52702
g18274
tp52703
g18269
s(g117
g118
g28414
tp52704
g28410
s(S'plot_day_summary2_ohlc'
p52705
g8437
tp52706
g8432
s(S'blend_hsv'
p52707
g40602
tp52708
g40597
s(S'gca'
p52709
S'linestyle'
p52710
tp52711
(icodemend.demo.code_suggest
Element
p52712
(dp52713
g10
I0
sg11
S'set the patch linestyle'
p52714
sg12
Vgca.linestyle
p52715
sg14
(lp52716
sg2
g52710
sbs(S'xlim'
p52717
S'x'
tp52718
g2196
s(g125
g2392
S'1'
tp52719
(icodemend.demo.code_suggest
Element
p52720
(dp52721
g10
I2
sg11
S''
sg12
Vaxvline.linewidth.1
p52722
sg14
(lp52723
sg2
S'1'
sbs(g117
g118
g27611
tp52724
g27607
s(g125
S'x'
g34836
tp52725
g34832
s(g38464
g38474
tp52726
g38469
sS'get_window_extent'
p52727
(icodemend.demo.code_suggest
Element
p52728
(dp52729
g10
I29
sg11
S'get the bounding box in display space .'
p52730
sg12
Vget_window_extent
p52731
sg14
(lp52732
(icodemend.demo.code_suggest
Element
p52733
(dp52734
g10
I1
sg11
S'renderer defaults to the _ renderer attribute of the text object . this is not assigned until the first execution of draw ( ) , so you must use this kwarg if you want to call get_window_extent ( ) prior to the first draw ( ) . for getting web page regions , it is simpler to call the method after saving the figure .'
p52735
sg12
Vget_window_extent.renderer
p52736
sg14
(lp52737
sg2
S'renderer'
p52738
sbag41818
ag26347
asg2
g52727
sbs(S'arrow'
p52739
g2772
tp52740
g2767
s(S'convert_yunits'
p52741
S'y'
tp52742
g35857
s(S'add_subplot'
p52743
g47603
tp52744
g47598
s(g245
g3075
S'100'
p52745
tp52746
(icodemend.demo.code_suggest
Element
p52747
(dp52748
g10
I16
sg11
S''
sg12
Vfigure.dpi.100
p52749
sg14
(lp52750
sg2
g52745
sbs(S'axvline'
p52751
S'markersize'
p52752
tp52753
(icodemend.demo.code_suggest
Element
p52754
(dp52755
g10
I0
sg11
S'set the marker size in points'
p52756
sg12
Vaxvline.markersize
p52757
sg14
(lp52758
sg2
g52752
sbs(S'drag_pan'
p52759
S'x'
tp52760
g23239
s(g117
g2251
g29180
tp52761
g29176
s(g117
g4163
S'6'
tp52762
g11040
s(g452
g2841
g43251
tp52763
g43247
s(S'loglog'
p52764
S'basex'
p52765
tp52766
(icodemend.demo.code_suggest
Element
p52767
(dp52768
g10
I9
sg11
S'base of the x /y logarithm'
p52769
sg12
Vloglog.basex
p52770
sg14
(lp52771
(icodemend.demo.code_suggest
Element
p52772
(dp52773
g10
I7
sg11
S''
sg12
Vloglog.basex.10
p52774
sg14
(lp52775
sg2
S'10'
p52776
sbasg2
g52765
sbs(g4371
g7032
g17519
tp52777
g17515
sS'update_fonts'
p52778
(icodemend.demo.code_suggest
Element
p52779
(dp52780
g10
I0
sg11
S'update the font dictionary with new font files .'
p52781
sg12
Vupdate_fonts
p52782
sg14
(lp52783
sg2
g52778
sbs(S'imshow'
p52784
g9982
tp52785
g9977
s(S'shade'
p52786
S'vert_exag'
p52787
tp52788
(icodemend.demo.code_suggest
Element
p52789
(dp52790
g10
I0
sg11
S'the amount to exaggerate the elevation values by when calculating illumination . this can be used either to correct for differences in units between the x-y coordinate system and the elevation coordinate system ( e.g. decimal degrees vs meters ) or to exaggerate or de-emphasize topography .'
p52791
sg12
Vshade.vert_exag
p52792
sg14
(lp52793
sg2
g52787
sbs(S'axhspan'
p52794
g24364
tp52795
g24359
s(S'pcolormesh'
p52796
S'anchor'
p52797
tp52798
(icodemend.demo.code_suggest
Element
p52799
(dp52800
g10
I0
sg11
S'anchor'
p52801
sg12
Vpcolormesh.anchor
p52802
sg14
(lp52803
sg2
g52797
sbs(g324
g785
g9532
tp52804
g9528
s(S'legend'
p52805
g14634
tp52806
g14629
s(g117
g132
g28859
tp52807
g28855
s(g766
g15305
g40016
tp52808
g40012
s(S'plot'
p52809
S'x'
tp52810
g29299
s(g944
g1149
S"'g'"
p52811
tp52812
(icodemend.demo.code_suggest
Element
p52813
(dp52814
g10
I1
sg11
S''
sg12
Vbarh.ecolor.'g'
p52815
sg14
(lp52816
sg2
g52811
sbs(g388
g389
g16959
tp52817
g16955
s(S'slopes'
p52818
S'x'
tp52819
g12900
s(S'angle_spectrum'
p52820
g18954
tp52821
g18949
sS'get_fillstyle'
p52822
(icodemend.demo.code_suggest
Element
p52823
(dp52824
g10
I0
sg11
S'return the marker fillstyle'
p52825
sg12
Vget_fillstyle
p52826
sg14
(lp52827
sg2
g52822
sbs(S'allpairs'
p52828
S'x'
tp52829
(icodemend.demo.code_suggest
Element
p52830
(dp52831
g10
I0
sg11
S'return all possible pairs in sequence x'
p52832
sg12
Vallpairs.x
p52833
sg14
(lp52834
sg2
S'x'
sbs(g332
g132
g41455
tp52835
g41451
s(g4998
g8538
g51656
tp52836
g51652
s(S'get'
p52837
g49946
tp52838
g49941
s(g324
g785
g9397
tp52839
g9393
s(S'plot'
p52840
g29742
tp52841
g29732
s(S'cohere'
p52842
g43825
tp52843
g43820
s(S'get_annotation_clip'
p52844
g11738
tp52845
g11733
s(g117
g5775
g29392
tp52846
g29388
s(S'tripcolor'
p52847
S'C'
tp52848
(icodemend.demo.code_suggest
Element
p52849
(dp52850
g10
I0
sg11
S'c is the array of color values .|||matlab pcolor ( ) always discards the last row and column of c , but matplotlib displays the last row and column if x and y are not specified , or if x and y have one more row and column than c .|||the next argument must be c , the array of color values , either one per point in the triangulation if color values are defined at points , or one per triangle in the triangulation if color values are defined at triangles . if there are the same number of points and triangles in the triangulation it is assumed that color values are defined at points ; to force the use of color values at triangles use the kwarg facecolors*=c instead of just * c .|||the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .|||x , y and c may be masked arrays . if either c[i , j ] , or one of the vertices surrounding c[i,j ] ( x or y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||ideally the dimensions of x and y should be one greater than those of c ; if the dimensions are the same , then the last row and column of c will be ignored .'
p52851
sg12
Vtripcolor.C
p52852
sg14
(lp52853
sg2
S'C'
sbs(S'Slider'
p52854
S'label'
p52855
tp52856
(icodemend.demo.code_suggest
Element
p52857
(dp52858
g10
I0
sg11
S'slider label|||the slider label'
p52859
sg12
VSlider.label
p52860
sg14
(lp52861
sg2
g52855
sbs(S'barbs'
p52862
S'antialiased'
p52863
tp52864
(icodemend.demo.code_suggest
Element
p52865
(dp52866
g10
I0
sg11
S'set the antialiasing state for rendering .'
p52867
sg12
Vbarbs.antialiased
p52868
sg14
(lp52869
sg2
g52863
sbs(g452
g453
g7236
tp52870
g7232
s(S'blend_soft_light'
p52871
g51326
tp52872
g51321
s(g452
g4163
S'8'
tp52873
g43003
s(g324
g785
g9546
tp52874
g9542
s(S'psd'
p52875
g37095
tp52876
g37090
s(g324
g2183
g865
tp52877
g9828
sS'set_child'
p52878
(icodemend.demo.code_suggest
Element
p52879
(dp52880
g10
I0
sg11
S'set the child to be anchored'
p52881
sg12
Vset_child
p52882
sg14
(lp52883
sg2
g52878
sbs(g1170
g118
S"'Dist A'"
p52884
tp52885
(icodemend.demo.code_suggest
Element
p52886
(dp52887
g10
I1
sg11
S''
sg12
Vhist.label.'Dist A'
p52888
sg14
(lp52889
sg2
g52884
sbs(S'contourf'
p52890
g46727
tp52891
g46722
s(S'axvspan'
p52892
S'readonly'
p52893
tp52894
(icodemend.demo.code_suggest
Element
p52895
(dp52896
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p52897
sg12
Vaxvspan.readonly
p52898
sg14
(lp52899
sg2
g52893
sbs(g5640
S'use_gridspec'
p52900
g438
tp52901
g12058
s(g93
g132
g132
tp52902
g41717
s(S'legend'
p52903
g14628
tp52904
g14623
s(S'plot'
p52905
g29844
tp52906
g29839
s(g944
g8267
g43475
tp52907
g43471
s(g117
S'y'
g29473
tp52908
g29469
s(S'text'
p52909
g48374
tp52910
g48369
s(S'errorbar'
p52911
S'gid'
p52912
tp52913
(icodemend.demo.code_suggest
Element
p52914
(dp52915
g10
I0
sg11
S'sets the ( group ) id for the artist'
p52916
sg12
Verrorbar.gid
p52917
sg14
(lp52918
sg2
g52912
sbs(g8547
g23819
g22520
tp52919
g22516
sS'win32FontDirectory'
p52920
(icodemend.demo.code_suggest
Element
p52921
(dp52922
g10
I0
sg11
S'return the user-specified font directory for win32 .'
p52923
sg12
Vwin32FontDirectory
p52924
sg14
(lp52925
sg2
g52920
sbs(S'barbs'
p52926
S'norm'
p52927
tp52928
(icodemend.demo.code_suggest
Element
p52929
(dp52930
g10
I1
sg11
S'set the normalization instance'
p52931
sg12
Vbarbs.norm
p52932
sg14
(lp52933
(icodemend.demo.code_suggest
Element
p52934
(dp52935
g10
I1
sg11
S''
sg12
Vbarbs.norm.norm
p52936
sg14
(lp52937
sg2
g515
sbasg2
g52927
sbs(S'add_subplot'
p52938
g47555
tp52939
g47550
s(g125
S'x'
g34827
tp52940
g34823
s(S'scatter'
p52941
g21832
tp52942
g21731
s(S'angle_spectrum'
p52943
g19043
tp52944
g19038
sS'get_linewidth'
p52945
(icodemend.demo.code_suggest
Element
p52946
(dp52947
g10
I0
sg11
S'get the width of the lines used to mark each event return the line width in points as a scalar return the line width in points .'
p52948
sg12
Vget_linewidth
p52949
sg14
(lp52950
sg2
g52945
sbs(g944
g945
S'0.5'
p52951
tp52952
(icodemend.demo.code_suggest
Element
p52953
(dp52954
g10
I2
sg11
S''
sg12
Vbarh.height.0/5
p52955
sg14
(lp52956
sg2
g52951
sbs(g766
g4459
S'2'
tp52957
g6091
s(S'psd'
p52958
g37030
tp52959
g37025
s(S'semilogx'
p52960
g38947
tp52961
g38942
s(g252
g5782
g14404
tp52962
g14400
s(g16
g132
g46457
tp52963
g46453
s(g324
g325
g9123
tp52964
g9119
s(g324
g8780
S'2'
tp52965
g9881
s(S'hlines'
p52966
g5391
tp52967
g5386
s(g16
g453
g865
tp52968
g12750
s(g117
g4274
g28944
tp52969
g28940
s(g117
g102
g29246
tp52970
g29242
s(S'magnitude_spectrum'
p52971
g47954
tp52972
g47949
s(g101
g102
g21862
tp52973
g21858
s(S'plot_date'
p52974
g19647
tp52975
g19617
s(g582
g132
g3326
tp52976
g3322
s(g16
g1149
g36313
tp52977
g36309
s(g958
g959
S'3'
tp52978
g22882
s(S'ginput'
p52979
S'n'
tp52980
g14715
sS'matshow'
p52981
(icodemend.demo.code_suggest
Element
p52982
(dp52983
g10
I40
sg11
S'display an array as a matrix in a new figure window . plot a matrix or array as an image .'
p52984
sg12
Vmatshow
p52985
sg14
(lp52986
g41796
a(icodemend.demo.code_suggest
Element
p52987
(dp52988
g10
I4
sg11
S"if ' auto ' , changes the image aspect ratio to match that of the axes ."
p52989
sg12
Vmatshow.aspect
p52990
sg14
(lp52991
(icodemend.demo.code_suggest
Element
p52992
(dp52993
g10
I4
sg11
S''
sg12
Vmatshow.aspect.'auto'
p52994
sg14
(lp52995
sg2
S"'auto'"
p52996
sbasg2
S'aspect'
p52997
sbag27281
ag38330
ag44565
ag32420
a(icodemend.demo.code_suggest
Element
p52998
(dp52999
g10
I2
sg11
S'with the exception of fignum , keyword arguments are passed to imshow ( ) . you may set the origin kwarg to " lower " if you want the first row in the array to be at the bottom instead of the top .|||place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes . if none , default to rc image.origin . place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes . if none , default to rc image.origin .'
p53000
sg12
Vmatshow.origin
p53001
sg14
(lp53002
g2186
asg2
S'origin'
p53003
sba(icodemend.demo.code_suggest
Element
p53004
(dp53005
g10
I1
sg11
S'a normalize instance is used to scale luminance data to 0 , 1 . if none , use the default func:normalize . norm is only used if x is an array of floats .'
p53006
sg12
Vmatshow.norm
p53007
sg14
(lp53008
sg2
S'norm'
p53009
sbag40578
ag19128
a(icodemend.demo.code_suggest
Element
p53010
(dp53011
g10
I0
sg11
S"a parameter for the antigrain image resize filter . from the antigrain documentation , if filternorm = 1 , the filter normalizes integer values and corrects the rounding errors . it does n't do anything with the source floating point values , it corrects only integers according to the rule of 1.0 which means that any sum of pixel weights must be equal to 1.0 . so , the filter function must produce a graph of the proper shape ."
p53012
sg12
Vmatshow.filternorm
p53013
sg14
(lp53014
sg2
S'filternorm'
p53015
sbag41769
ag17386
ag15279
a(icodemend.demo.code_suggest
Element
p53016
(dp53017
g10
I0
sg11
S'vmin and vmax are used in conjunction with norm to normalize luminance data . note if you pass a norm instance , your settings for vmin and vmax will be ignored .'
p53018
sg12
Vmatshow.vmin, vmax
p53019
sg14
(lp53020
sg2
S'vmin, vmax'
p53021
sbasg2
g52981
sbs(S'set_prop_cycle'
p53022
S'label'
p53023
tp53024
(icodemend.demo.code_suggest
Element
p53025
(dp53026
g10
I0
sg11
S"the property key . must be a valid artist property . for example , ' color ' or ' linestyle ' . aliases are allowed , such as ' c ' for ' color ' and ' lw ' for ' linewidth ' ."
p53027
sg12
Vset_prop_cycle.label
p53028
sg14
(lp53029
sg2
g53023
sbsS'set_smart_bounds'
p53030
(icodemend.demo.code_suggest
Element
p53031
(dp53032
g10
I12
sg11
S'set the axis to have smart bounds set the spine and associated axis to have smart bounds'
p53033
sg12
Vset_smart_bounds
p53034
sg14
(lp53035
sg2
g53030
sbs(g1170
g1257
S'11'
p53036
tp53037
(icodemend.demo.code_suggest
Element
p53038
(dp53039
g10
I2
sg11
S''
sg12
Vhist.bins.11
p53040
sg14
(lp53041
sg2
g53036
sbs(S'semilogx'
p53042
g39067
tp53043
g39062
s(S'legend'
p53044
g14512
tp53045
g14507
s(g4371
g666
g17621
tp53046
g17617
s(S'csd'
p53047
g51563
tp53048
g51558
sS'set_graylevel'
p53049
(icodemend.demo.code_suggest
Element
p53050
(dp53051
g10
I0
sg11
S'set the foreground color to be a gray level with frac'
p53052
sg12
Vset_graylevel
p53053
sg14
(lp53054
g50031
asg2
g53049
sbs(S'plot_day_summary_oclh'
p53055
g33575
tp53056
g33570
s(g93
g4800
g25459
tp53057
g25455
s(S'psd'
p53058
g37006
tp53059
g37001
sS'get_capheight'
p53060
(icodemend.demo.code_suggest
Element
p53061
(dp53062
g10
I0
sg11
S'return the cap height as float'
p53063
sg12
Vget_capheight
p53064
sg14
(lp53065
sg2
g53060
sbs(g421
g909
S'3'
tp53066
(icodemend.demo.code_suggest
Element
p53067
(dp53068
g10
I1
sg11
S''
sg12
Vfill.zorder.3
p53069
sg14
(lp53070
sg2
S'3'
sbs(g117
g118
S'k'
tp53071
g27523
s(S'plot_date'
p53072
g19811
tp53073
g19806
s(g5640
g5641
g11926
tp53074
g11922
s(S'polar'
p53075
g37739
tp53076
g37734
s(S'cohere'
p53077
g43676
tp53078
g43671
s(g93
g94
g5531
tp53079
g5527
s(S'specgram'
p53080
g47871
tp53081
g47866
s(S'pcolor'
p53082
g49535
tp53083
g49530
s(S'plot_day_summary2_ohlc'
p53084
g8467
tp53085
g8462
s(g8266
g8267
g8146
tp53086
g8142
s(g117
g118
g28224
tp53087
g28220
s(S'csd'
p53088
g51551
tp53089
g51546
s(S'broken_barh'
p53090
g48775
tp53091
g48770
s(S'set_xticklabels'
p53092
g17115
tp53093
g17110
s(g1170
g437
g438
tp53094
g16029
s(S'axvspan'
p53095
S'xticklabels'
p53096
tp53097
(icodemend.demo.code_suggest
Element
p53098
(dp53099
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p53100
sg12
Vaxvspan.xticklabels
p53101
sg14
(lp53102
sg2
g53096
sbs(S'get_tool'
p53103
g22430
tp53104
g22425
s(S'grid'
p53105
g50662
tp53106
g50657
s(g4998
g4459
S'-5'
p53107
tp53108
(icodemend.demo.code_suggest
Element
p53109
(dp53110
g10
I2
sg11
S''
sg12
Vpcolormesh.vmin.-5
p53111
sg14
(lp53112
sg2
g53107
sbs(g93
g161
S'(posx, (posy + 0.1))'
p53113
tp53114
(icodemend.demo.code_suggest
Element
p53115
(dp53116
g10
I1
sg11
S''
sg12
Vannotate.xy.(posx, (posy + 0/1))
p53117
sg14
(lp53118
sg2
g53113
sbs(g93
g161
S'(xmas_date, ylims[1])'
p53119
tp53120
(icodemend.demo.code_suggest
Element
p53121
(dp53122
g10
I1
sg11
S''
sg12
Vannotate.xy.(xmas_date, ylims[1])
p53123
sg14
(lp53124
sg2
g53119
sbs(S'legend'
p53125
g14640
tp53126
g14635
s(S'figtext'
p53127
g11431
tp53128
g11426
sS'forward'
p53129
(icodemend.demo.code_suggest
Element
p53130
(dp53131
g10
I0
sg11
S'forward one step in the stack of views and positions move forward in the view lim stack move the position forward and return the current element'
p53132
sg12
Vforward
p53133
sg14
(lp53134
sg2
g53129
sbs(g1170
g39824
g20253
tp53135
g20249
s(g1003
S'showcaps'
p53136
g438
tp53137
g39758
s(S'add_subplot'
p53138
g47483
tp53139
g47478
s(S'tripcolor'
p53140
S'vmin'
p53141
tp53142
(icodemend.demo.code_suggest
Element
p53143
(dp53144
g10
I0
sg11
S'vmin and vmax are used in conjunction with norm to normalize luminance data . if either is none , it is autoscaled to the respective min or max of the color array c . if not none , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .'
p53145
sg12
Vtripcolor.vmin
p53146
sg14
(lp53147
sg2
g53141
sbs(g8266
g35545
S"'/'"
p53148
tp53149
(icodemend.demo.code_suggest
Element
p53150
(dp53151
g10
I1
sg11
S''
sg12
Vaxvspan.hatch.'/'
p53152
sg14
(lp53153
sg2
g53148
sbs(g1170
g118
S"['QD128', 'QD1', 'QD16']"
p53154
tp53155
(icodemend.demo.code_suggest
Element
p53156
(dp53157
g10
I1
sg11
S''
sg12
Vhist.label.['QD128', 'QD1', 'QD16']
p53158
sg14
(lp53159
sg2
g53154
sbs(g117
S'y'
g29498
tp53160
g29494
sS'hsv_to_rgb'
p53161
(icodemend.demo.code_suggest
Element
p53162
(dp53163
g10
I8
sg11
S'convert hsv values in a numpy array to rgb values all values assumed to be in range [ 0 , 1 ]'
p53164
sg12
Vhsv_to_rgb
p53165
sg14
(lp53166
(icodemend.demo.code_suggest
Element
p53167
(dp53168
g10
I0
sg11
S'all values assumed to be in range [ 0 , 1 ]'
p53169
sg12
Vhsv_to_rgb.hsv
p53170
sg14
(lp53171
sg2
S'hsv'
p53172
sbasg2
g53161
sbs(g117
g118
g28129
tp53173
g28125
s(S'contour'
p53174
S'Z'
tp53175
g17787
sS'get_zorder'
p53176
(icodemend.demo.code_suggest
Element
p53177
(dp53178
g10
I1
sg11
S"return the artist 's zorder ."
p53179
sg12
Vget_zorder
p53180
sg14
(lp53181
sg2
g53176
sbs(g117
g118
g28114
tp53182
g28110
s(S'semilogx'
p53183
g39007
tp53184
g39002
s(g93
g38823
S"{'arrowstyle': '->'}"
p53185
tp53186
(icodemend.demo.code_suggest
Element
p53187
(dp53188
g10
I1
sg11
S''
sg12
Vannotate.arrowprops.{'arrowstyle': '->'}
p53189
sg14
(lp53190
sg2
g53185
sbs(g16
g1149
g36328
tp53191
g36324
s(S'magnitude_spectrum'
p53192
g47942
tp53193
g47937
s(S'loglog'
p53194
S'snap'
p53195
tp53196
(icodemend.demo.code_suggest
Element
p53197
(dp53198
g10
I0
sg11
S'sets the snap setting which may be'
p53199
sg12
Vloglog.snap
p53200
sg14
(lp53201
sg2
g53195
sbs(g93
g4800
g25289
tp53202
g25285
s(S'add_callback'
p53203
g36776
tp53204
g36771
s(S'arrow'
p53205
g2707
tp53206
g2702
sS'set_navigate'
p53207
(icodemend.demo.code_suggest
Element
p53208
(dp53209
g10
I2
sg11
S'set whether the axes responds to navigation toolbar commands'
p53210
sg12
Vset_navigate
p53211
sg14
(lp53212
sg2
g53207
sbs(S'add'
p53213
S'joinstyle'
p53214
tp53215
(icodemend.demo.code_suggest
Element
p53216
(dp53217
g10
I0
sg11
S'set the patch joinstyle'
p53218
sg12
Vadd.joinstyle
p53219
sg14
(lp53220
sg2
g53214
sbs(S'add_toolitem'
p53221
g45444
tp53222
g45439
sS'register_axis'
p53223
(icodemend.demo.code_suggest
Element
p53224
(dp53225
g10
I0
sg11
S'register an axis'
p53226
sg12
Vregister_axis
p53227
sg14
(lp53228
sg2
g53223
sbs(g16
g945
g13832
tp53229
g13828
s(S'magnitude_spectrum'
p53230
g48056
tp53231
g48051
s(g1170
g118
S"'x'"
p53232
tp53233
(icodemend.demo.code_suggest
Element
p53234
(dp53235
g10
I1
sg11
S''
sg12
Vhist.label.'x'
p53236
sg14
(lp53237
sg2
g53232
sbs(g117
g2392
g29072
tp53238
g29068
s(S'update_keymap'
p53239
g36530
tp53240
g36525
sS'set_lineoffset'
p53241
(icodemend.demo.code_suggest
Element
p53242
(dp53243
g10
I0
sg11
S'set the offset of the lines used to mark each event'
p53244
sg12
Vset_lineoffset
p53245
sg14
(lp53246
sg2
g53241
sbs(S'loglog'
p53247
S'antialiased'
p53248
tp53249
(icodemend.demo.code_suggest
Element
p53250
(dp53251
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p53252
sg12
Vloglog.antialiased
p53253
sg14
(lp53254
sg2
g53248
sbs(S'get_tool'
p53255
g22436
tp53256
g22431
s(S'gca'
p53257
S'ymargin'
p53258
tp53259
(icodemend.demo.code_suggest
Element
p53260
(dp53261
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p53262
sg12
Vgca.ymargin
p53263
sg14
(lp53264
sg2
g53258
sbs(g245
g140
g30153
tp53265
g30149
s(g117
g118
g27914
tp53266
g27910
s(S'axhspan'
p53267
g24406
tp53268
g24401
s(S'get_yticklabels'
p53269
g31745
tp53270
g31740
sS'tick_right'
p53271
(icodemend.demo.code_suggest
Element
p53272
(dp53273
g10
I22
sg11
S'use ticks only on right'
p53274
sg12
Vtick_right
p53275
sg14
(lp53276
sg2
g53271
sbs(g101
g118
g22051
tp53277
g22047
s(g117
g118
g27764
tp53278
g27760
s(S'add_axes'
p53279
S'projection'
p53280
tp53281
(icodemend.demo.code_suggest
Element
p53282
(dp53283
g10
I9
sg11
S"in addition to projection , the following kwargs are supported :|||add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal axes kwargs plus projection which sets the projection type of the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) . typical usage :"
p53284
sg12
Vadd_axes.projection
p53285
sg14
(lp53286
g3200
ag969
asg2
g53280
sbs(S'barbs'
p53287
S'zorder'
p53288
tp53289
(icodemend.demo.code_suggest
Element
p53290
(dp53291
g10
I0
sg11
S'set the zorder for the artist .'
p53292
sg12
Vbarbs.zorder
p53293
sg14
(lp53294
sg2
g53288
sbsS'TriAnalyzer'
p53295
(icodemend.demo.code_suggest
Element
p53296
(dp53297
g10
I0
sg11
S''
sg12
VTriAnalyzer
p53298
sg14
(lp53299
(icodemend.demo.code_suggest
Element
p53300
(dp53301
g10
I0
sg11
S'the encapsulated triangulation to analyze .'
p53302
sg12
VTriAnalyzer.triangulation
p53303
sg14
(lp53304
sg2
S'triangulation'
p53305
sbasg2
g53295
sbs(S'annotate'
p53306
S'clip_box'
p53307
tp53308
(icodemend.demo.code_suggest
Element
p53309
(dp53310
g10
I2
sg11
S"set the artist 's clip bbox ."
p53311
sg12
Vannotate.clip_box
p53312
sg14
(lp53313
g5242
asg2
g53307
sbs(S'errorbar'
p53314
S'closed'
p53315
tp53316
(icodemend.demo.code_suggest
Element
p53317
(dp53318
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p53319
sg12
Verrorbar.closed
p53320
sg14
(lp53321
sg2
g53315
sbs(S'semilogy'
p53322
g39385
tp53323
g39380
s(g93
g94
g5556
tp53324
g5552
s(S'barh'
p53325
S'position'
p53326
tp53327
(icodemend.demo.code_suggest
Element
p53328
(dp53329
g10
I0
sg11
S'set the axes position with'
p53330
sg12
Vbarh.position
p53331
sg14
(lp53332
sg2
g53326
sbs(g452
g132
g132
tp53333
g31873
s(S'hexbin'
p53334
g25843
tp53335
g25838
sS'get_flat_tri_mask'
p53336
(icodemend.demo.code_suggest
Element
p53337
(dp53338
g10
I0
sg11
S'eliminates excessively flat border triangles from the triangulation .'
p53339
sg12
Vget_flat_tri_mask
p53340
sg14
(lp53341
(icodemend.demo.code_suggest
Element
p53342
(dp53343
g10
I0
sg11
S'border triangles with incircle/circumcircle radii ratio r/r will be removed if r/r < min_circle_ratio . default value : 0.01|||the rationale behind this function is that a delaunay triangulation - of an unstructured set of points - sometimes contains almost flat triangles at its border , leading to artifacts in plots ( especially for high-resolution contouring ) . masked with computed new_mask , the encapsulated triangulation would contain no more unmasked border triangles with a circle ratio below min_circle_ratio , thus improving the mesh quality for subsequent plots or interpolation .'
p53344
sg12
Vget_flat_tri_mask.min_circle_ratio
p53345
sg14
(lp53346
sg2
S'min_circle_ratio'
p53347
sbag36283
a(icodemend.demo.code_suggest
Element
p53348
(dp53349
g10
I0
sg11
S'if true , a rescaling will first be internally performed ( based on scale_factors ) , so that the ( unmasked ) triangles fit exactly inside a unit square mesh . this rescaling accounts for the difference of scale which might exist between the 2 axis . default ( and recommended ) value is true .'
p53350
sg12
Vget_flat_tri_mask.rescale
p53351
sg14
(lp53352
sg2
S'rescale'
p53353
sbasg2
g53336
sbs(S'hexbin'
p53354
g25909
tp53355
g25904
s(g101
g102
g21897
tp53356
g21893
s(S'set_xticklabels'
p53357
g17199
tp53358
g17194
s(g332
g38074
g48269
tp53359
g48265
s(S'tricontourf'
p53360
g11670
tp53361
g11665
s(g117
g102
g29216
tp53362
g29212
s(S'get_tightbbox'
p53363
g22690
tp53364
g22685
s(S'rec_summarize'
p53365
g34943
tp53366
g34938
s(S'add_subplot'
p53367
g47561
tp53368
g47556
s(S'iter_segments'
p53369
g42463
tp53370
g42458
s(g944
g102
S'0.4'
p53371
tp53372
(icodemend.demo.code_suggest
Element
p53373
(dp53374
g10
I9
sg11
S''
sg12
Vbarh.alpha.0/4
p53375
sg14
(lp53376
sg2
g53371
sbs(S'to_polygons'
p53377
S'height'
p53378
tp53379
(icodemend.demo.code_suggest
Element
p53380
(dp53381
g10
I0
sg11
S'if width and height are both non-zero then the lines will be simplified so that vertices outside of ( 0 , 0 ) , ( width , height ) will be clipped .'
p53382
sg12
Vto_polygons.height
p53383
sg14
(lp53384
sg2
g53378
sbsS'resize'
p53385
(icodemend.demo.code_suggest
Element
p53386
(dp53387
g10
I10
sg11
S'set the canvas size in pixels " for gui backends , resize the window ( in pixels ) .'
p53388
sg12
Vresize
p53389
sg14
(lp53390
sg2
g53385
sbs(g1003
g45340
g1944
tp53391
g39702
sS'set_scientific'
p53392
(icodemend.demo.code_suggest
Element
p53393
(dp53394
g10
I4
sg11
S'true or false to turn scientific notation on or off see also set_powerlimits ( )'
p53395
sg12
Vset_scientific
p53396
sg14
(lp53397
sg2
g53392
sbs(S'candlestick2_ochl'
p53398
S'lows'
p53399
tp53400
(icodemend.demo.code_suggest
Element
p53401
(dp53402
g10
I0
sg11
S'sequence of low values'
p53403
sg12
Vcandlestick2_ochl.lows
p53404
sg14
(lp53405
sg2
g53399
sbs(S'arrow'
p53406
g2569
tp53407
g2564
s(g4998
g40386
g438
tp53408
g24935
s(S'set_yticklabels'
p53409
g17995
tp53410
g17986
sS'thetagrids'
p53411
(icodemend.demo.code_suggest
Element
p53412
(dp53413
g10
I0
sg11
S'get or set the theta locations of the gridlines in a polar plot .'
p53414
sg12
Vthetagrids
p53415
sg14
(lp53416
g45131
a(icodemend.demo.code_suggest
Element
p53417
(dp53418
g10
I0
sg11
S'set the font properties that control the text .'
p53419
sg12
Vthetagrids.fontproperties
p53420
sg14
(lp53421
sg2
S'fontproperties'
p53422
sbag51419
a(icodemend.demo.code_suggest
Element
p53423
(dp53424
g10
I0
sg11
S'if labels is none , the labels will be fmt%angle .|||if no arguments are passed , return a tuple ( lines , labels ) where lines is an array of radial gridlines ( line2d instances ) and labels is an array of tick labels ( text instances ) :|||labels , if not none , is a len(angles ) list of strings of the labels to use at each angle .|||note that on input , the labels argument is a list of strings , and on output it is a list of text instances .|||return value is a list of tuples ( lines , labels ) :'
p53425
sg12
Vthetagrids.labels
p53426
sg14
(lp53427
sg2
S'labels'
p53428
sbag44956
a(icodemend.demo.code_suggest
Element
p53429
(dp53430
g10
I0
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )"
p53431
sg12
Vthetagrids.linestyle
p53432
sg14
(lp53433
sg2
S'linestyle'
p53434
sbag42937
a(icodemend.demo.code_suggest
Element
p53435
(dp53436
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p53437
sg12
Vthetagrids.markevery
p53438
sg14
(lp53439
sg2
S'markevery'
p53440
sba(icodemend.demo.code_suggest
Element
p53441
(dp53442
g10
I0
sg11
S'set the ( x , y ) position of the text'
p53443
sg12
Vthetagrids.position
p53444
sg14
(lp53445
sg2
S'position'
p53446
sbag4437
ag45184
ag24027
ag18394
asg2
g53411
sbs(S'psd'
p53447
g36850
tp53448
g36845
s(S'plot'
p53449
g29862
tp53450
g29857
s(S'errorbar'
p53451
S'zorder'
p53452
tp53453
(icodemend.demo.code_suggest
Element
p53454
(dp53455
g10
I6
sg11
S'set the zorder for the artist .'
p53456
sg12
Verrorbar.zorder
p53457
sg14
(lp53458
g38677
ag32081
a(icodemend.demo.code_suggest
Element
p53459
(dp53460
g10
I2
sg11
S''
sg12
Verrorbar.zorder.2
p53461
sg14
(lp53462
sg2
S'2'
sbasg2
g53452
sbsS'get_text_heights'
p53463
(icodemend.demo.code_suggest
Element
p53464
(dp53465
g10
I0
sg11
S'returns the amount of space one should reserve for text above and below the axes .'
p53466
sg12
Vget_text_heights
p53467
sg14
(lp53468
sg2
g53463
sbs(S'figtext'
p53469
g11538
tp53470
g11533
sS'colors'
p53471
(icodemend.demo.code_suggest
Element
p53472
(dp53473
g10
I0
sg11
S'this is a do-nothing function to provide you with help on how matplotlib handles colors .'
p53474
sg12
Vcolors
p53475
sg14
(lp53476
sg2
g53471
sbsS'get_stretch'
p53477
(icodemend.demo.code_suggest
Element
p53478
(dp53479
g10
I0
sg11
S'return the font stretch or width . get the font stretch as a string or number'
p53480
sg12
Vget_stretch
p53481
sg14
(lp53482
sg2
g53477
sbs(g109
g42315
g785
tp53483
g46275
s(S'psd'
p53484
g36964
tp53485
g36959
sS'get_visible_children'
p53486
(icodemend.demo.code_suggest
Element
p53487
(dp53488
g10
I0
sg11
S'return a list of visible artists it contains .'
p53489
sg12
Vget_visible_children
p53490
sg14
(lp53491
sg2
g53486
sbs(g117
g118
g28164
tp53492
g28160
s(g245
g3075
S'50'
p53493
tp53494
(icodemend.demo.code_suggest
Element
p53495
(dp53496
g10
I1
sg11
S''
sg12
Vfigure.dpi.50
p53497
sg14
(lp53498
sg2
g53493
sbs(S'save'
p53499
g47284
tp53500
g47274
sS'pprint_setters'
p53501
(icodemend.demo.code_suggest
Element
p53502
(dp53503
g10
I0
sg11
S'if prop is none , return a list of strings of all settable properies and their valid values .'
p53504
sg12
Vpprint_setters
p53505
sg14
(lp53506
g50793
asg2
g53501
sbs(S'semilogx'
p53507
g39013
tp53508
g39008
s(S'inside_poly'
p53509
S'y'
tp53510
g37312
s(g117
g132
g28899
tp53511
g28895
s(g36477
g36478
g36014
tp53512
g36010
s(S'text'
p53513
g48458
tp53514
g48453
s(S'score_style'
p53515
g44801
tp53516
g44796
s(S'contourf'
p53517
g46750
tp53518
g46745
sS'append'
p53519
(icodemend.demo.code_suggest
Element
p53520
(dp53521
g10
I863
sg11
S'append an element at the end of the buffer'
p53522
sg12
Vappend
p53523
sg14
(lp53524
sg2
g53519
sbs(g6217
g909
S'5'
tp53525
g2489
s(S'volume_overlay'
p53526
g37405
tp53527
g37400
s(S'pcolormesh'
p53528
S'X'
tp53529
(icodemend.demo.code_suggest
Element
p53530
(dp53531
g10
I0
sg11
S'c may be a masked array , but x and y may not . masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .'
p53532
sg12
Vpcolormesh.X
p53533
sg14
(lp53534
sg2
S'X'
sbs(S'win32InstalledFonts'
p53535
g36270
tp53536
g36265
s(S'add_subplot'
p53537
g47615
tp53538
g47610
s(S'plot_date'
p53539
g19722
tp53540
g19698
s(S'fill_between'
p53541
g45942
tp53542
g45922
s(S'pcolorfast'
p53543
g33832
tp53544
g33827
s(g101
S's'
g454
tp53545
g7802
s(g93
g161
S'((np.pi / 4.2), (1.355 * max(r)))'
p53546
tp53547
(icodemend.demo.code_suggest
Element
p53548
(dp53549
g10
I1
sg11
S''
sg12
Vannotate.xy.((np/pi / 4/2), (1/355 * max(r)))
p53550
sg14
(lp53551
sg2
g53546
sbs(g324
g325
g9064
tp53552
g9060
s(g2250
S'clim'
p53553
g30888
tp53554
g30884
sS'loglog'
p53555
(icodemend.demo.code_suggest
Element
p53556
(dp53557
g10
I29
sg11
S'make a plot with log scaling on both the x and y axis .'
p53558
sg12
Vloglog
p53559
sg14
(lp53560
g52767
a(icodemend.demo.code_suggest
Element
p53561
(dp53562
g10
I6
sg11
S'base of the x /y logarithm'
p53563
sg12
Vloglog.basey
p53564
sg14
(lp53565
g26759
asg2
S'basey'
p53566
sba(icodemend.demo.code_suggest
Element
p53567
(dp53568
g10
I2
sg11
S'set the color of the line'
p53569
sg12
Vloglog.color
p53570
sg14
(lp53571
g6599
asg2
S'color'
p53572
sba(icodemend.demo.code_suggest
Element
p53573
(dp53574
g10
I1
sg11
S'set the alpha value used for blending - not supported on all backends .'
p53575
sg12
Vloglog.alpha
p53576
sg14
(lp53577
(icodemend.demo.code_suggest
Element
p53578
(dp53579
g10
I1
sg11
S''
sg12
Vloglog.alpha.0/6
p53580
sg14
(lp53581
sg2
S'0.6'
p53582
sbasg2
S'alpha'
p53583
sbag20730
ag3022
a(icodemend.demo.code_suggest
Element
p53584
(dp53585
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p53586
sg12
Vloglog._interpolation_steps
p53587
sg14
(lp53588
sg2
S'_interpolation_steps'
p53589
sbag431
ag27073
a(icodemend.demo.code_suggest
Element
p53590
(dp53591
g10
I0
sg11
S"set the artist 's animation state ."
p53592
sg12
Vloglog.animated
p53593
sg14
(lp53594
sg2
S'animated'
p53595
sbag53250
ag6539
a(icodemend.demo.code_suggest
Element
p53596
(dp53597
g10
I0
sg11
S'aspect'
p53598
sg12
Vloglog.aspect
p53599
sg14
(lp53600
sg2
S'aspect'
p53601
sbag34104
ag40307
ag33454
ag20763
ag4269
ag50004
ag34080
a(icodemend.demo.code_suggest
Element
p53602
(dp53603
g10
I0
sg11
S'replace the contains test used by this artist .'
p53604
sg12
Vloglog.contains
p53605
sg14
(lp53606
sg2
S'contains'
p53607
sbag4666
a(icodemend.demo.code_suggest
Element
p53608
(dp53609
g10
I0
sg11
S'set the cap style for dashed linestyles'
p53610
sg12
Vloglog.dash_capstyle
p53611
sg14
(lp53612
sg2
S'dash_capstyle'
p53613
sba(icodemend.demo.code_suggest
Element
p53614
(dp53615
g10
I0
sg11
S'set the join style for dashed linestyles accepts'
p53616
sg12
Vloglog.dash_joinstyle
p53617
sg14
(lp53618
sg2
S'dash_joinstyle'
p53619
sbag18571
ag50983
ag279
ag16590
ag12789
ag27363
a(icodemend.demo.code_suggest
Element
p53620
(dp53621
g10
I0
sg11
S'set the hatching pattern'
p53622
sg12
Vloglog.hatch
p53623
sg14
(lp53624
sg2
S'hatch'
p53625
sbag43605
a(icodemend.demo.code_suggest
Element
p53626
(dp53627
g10
I0
sg11
S'set the line width in points'
p53628
sg12
Vloglog.linewidth
p53629
sg14
(lp53630
sg2
S'linewidth'
p53631
sba(icodemend.demo.code_suggest
Element
p53632
(dp53633
g10
I0
sg11
S'set the line marker'
p53634
sg12
Vloglog.marker
p53635
sg14
(lp53636
sg2
S'marker'
p53637
sbag263
a(icodemend.demo.code_suggest
Element
p53638
(dp53639
g10
I0
sg11
S'set the marker edge width in points'
p53640
sg12
Vloglog.markeredgewidth
p53641
sg14
(lp53642
sg2
S'markeredgewidth'
p53643
sba(icodemend.demo.code_suggest
Element
p53644
(dp53645
g10
I0
sg11
S'set the marker face color .'
p53646
sg12
Vloglog.markerfacecolor
p53647
sg14
(lp53648
sg2
S'markerfacecolor'
p53649
sbag18452
a(icodemend.demo.code_suggest
Element
p53650
(dp53651
g10
I0
sg11
S'set the marker size in points'
p53652
sg12
Vloglog.markersize
p53653
sg14
(lp53654
sg2
S'markersize'
p53655
sba(icodemend.demo.code_suggest
Element
p53656
(dp53657
g10
I0
sg11
S'set the markevery property to subsample the plot when using markers .'
p53658
sg12
Vloglog.markevery
p53659
sg14
(lp53660
sg2
S'markevery'
p53661
sbag20673
ag24553
a(icodemend.demo.code_suggest
Element
p53662
(dp53663
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p53664
sg12
Vloglog.path_effects
p53665
sg14
(lp53666
sg2
S'path_effects'
p53667
sbag32211
ag19444
ag33773
ag15616
ag50051
ag50401
ag50199
ag51625
ag41888
a(icodemend.demo.code_suggest
Element
p53668
(dp53669
g10
I0
sg11
S'sets the sketch parameters .'
p53670
sg12
Vloglog.sketch_params
p53671
sg14
(lp53672
sg2
S'sketch_params'
p53673
sbag53197
a(icodemend.demo.code_suggest
Element
p53674
(dp53675
g10
I0
sg11
S'set the cap style for solid linestyles'
p53676
sg12
Vloglog.solid_capstyle
p53677
sg14
(lp53678
sg2
S'solid_capstyle'
p53679
sba(icodemend.demo.code_suggest
Element
p53680
(dp53681
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p53682
sg12
Vloglog.solid_joinstyle
p53683
sg14
(lp53684
sg2
S'solid_joinstyle'
p53685
sbag46165
ag48550
ag41513
ag35347
ag51884
ag31202
a(icodemend.demo.code_suggest
Element
p53686
(dp53687
g10
I0
sg11
S"set the artist 's visiblity ."
p53688
sg12
Vloglog.visible
p53689
sg14
(lp53690
sg2
S'visible'
p53691
sbag23618
a(icodemend.demo.code_suggest
Element
p53692
(dp53693
g10
I0
sg11
S'set the data np.array for x'
p53694
sg12
Vloglog.xdata
p53695
sg14
(lp53696
sg2
S'xdata'
p53697
sbag24714
a(icodemend.demo.code_suggest
Element
p53698
(dp53699
g10
I0
sg11
S'set the data limits for the xaxis'
p53700
sg12
Vloglog.xlim
p53701
sg14
(lp53702
sg2
S'xlim'
p53703
sbag6767
ag4366
ag40187
ag50306
ag8809
ag42109
ag15608
ag52089
ag34305
a(icodemend.demo.code_suggest
Element
p53704
(dp53705
g10
I0
sg11
S'set the scaling of the y-axis'
p53706
sg12
Vloglog.yscale
p53707
sg14
(lp53708
sg2
S'yscale'
p53709
sba(icodemend.demo.code_suggest
Element
p53710
(dp53711
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p53712
sg12
Vloglog.yticklabels
p53713
sg14
(lp53714
sg2
S'yticklabels'
p53715
sbag20264
a(icodemend.demo.code_suggest
Element
p53716
(dp53717
g10
I0
sg11
S'set the zorder for the artist .'
p53718
sg12
Vloglog.zorder
p53719
sg14
(lp53720
sg2
S'zorder'
p53721
sbasg2
g53555
sbs(S'eventplot'
p53722
g23463
tp53723
g23458
s(g93
g161
S'(0.25, 0.25)'
p53724
tp53725
(icodemend.demo.code_suggest
Element
p53726
(dp53727
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/25, 0/25)
p53728
sg14
(lp53729
sg2
g53724
sbs(g93
g38823
S'arrowKwargs'
p53730
tp53731
(icodemend.demo.code_suggest
Element
p53732
(dp53733
g10
I1
sg11
S''
sg12
Vannotate.arrowprops.arrowKwargs
p53734
sg14
(lp53735
sg2
g53730
sbsS'get_solid_capstyle'
p53736
(icodemend.demo.code_suggest
Element
p53737
(dp53738
g10
I0
sg11
S'get the cap style for solid linestyles'
p53739
sg12
Vget_solid_capstyle
p53740
sg14
(lp53741
sg2
g53736
sbs(S'axvspan'
p53742
S'anchor'
p53743
tp53744
(icodemend.demo.code_suggest
Element
p53745
(dp53746
g10
I0
sg11
S'anchor'
p53747
sg12
Vaxvspan.anchor
p53748
sg14
(lp53749
sg2
g53743
sbs(g125
g2251
S"'solid'"
p53750
tp53751
(icodemend.demo.code_suggest
Element
p53752
(dp53753
g10
I1
sg11
S''
sg12
Vaxvline.linestyle.'solid'
p53754
sg14
(lp53755
sg2
g53750
sbs(g117
g2878
S'5'
tp53756
g19396
s(g117
g118
g28399
tp53757
g28395
s(S'psd'
p53758
g37048
tp53759
g37043
s(S'grid'
p53760
g50608
tp53761
g50598
s(S'barbs'
p53762
S'xmargin'
p53763
tp53764
(icodemend.demo.code_suggest
Element
p53765
(dp53766
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p53767
sg12
Vbarbs.xmargin
p53768
sg14
(lp53769
sg2
g53763
sbs(g252
g24217
S'0'
tp53770
g14460
s(S'hist'
p53771
S'cumulative'
p53772
tp53773
(icodemend.demo.code_suggest
Element
p53774
(dp53775
g10
I5
sg11
S'if true , then a histogram is computed where each bin gives the counts in that bin plus all bins for smaller values . the last bin gives the total number of datapoints . if normed is also true then the histogram is normalized such that the last bin equals 1 . if cumulative evaluates to less than 0 ( e.g. , - 1 ) , the direction of accumulation is reversed . in this case , if normed is also true , then the histogram is normalized such that the first bin equals 1 .'
p53776
sg12
Vhist.cumulative
p53777
sg14
(lp53778
g24740
ag8836
asg2
g53772
sbs(S'cohere'
p53779
g43706
tp53780
g43701
s(S'broken_barh'
p53781
g48763
tp53782
g48758
s(S'shade'
p53783
S'data'
p53784
tp53785
(icodemend.demo.code_suggest
Element
p53786
(dp53787
g10
I0
sg11
S'a 2d array ( or equivalent ) of the height values used to generate a shaded map .'
p53788
sg12
Vshade.data
p53789
sg14
(lp53790
sg2
g53784
sbs(S'pieces'
p53791
g22651
tp53792
g22646
s(S'semilogx'
p53793
g38935
tp53794
g38930
sS'get_cursor_props'
p53795
(icodemend.demo.code_suggest
Element
p53796
(dp53797
g10
I0
sg11
S'return the cursor propertiess as a ( linewidth , color ) tuple , where linewidth is a float and color is an rgba tuple'
p53798
sg12
Vget_cursor_props
p53799
sg14
(lp53800
(icodemend.demo.code_suggest
Element
p53801
(dp53802
g10
I0
sg11
S'return the cursor propertiess as a ( linewidth , color ) tuple , where linewidth is a float and color is an rgba tuple'
p53803
sg12
Vget_cursor_props.color
p53804
sg14
(lp53805
sg2
S'color'
p53806
sba(icodemend.demo.code_suggest
Element
p53807
(dp53808
g10
I0
sg11
S'return the cursor propertiess as a ( linewidth , color ) tuple , where linewidth is a float and color is an rgba tuple'
p53809
sg12
Vget_cursor_props.linewidth
p53810
sg14
(lp53811
sg2
S'linewidth'
p53812
sbasg2
g53795
sbs(g101
S's'
g7605
tp53813
g7601
s(g93
g627
S'20'
p53814
tp53815
(icodemend.demo.code_suggest
Element
p53816
(dp53817
g10
I5
sg11
S''
sg12
Vannotate.size.20
p53818
sg14
(lp53819
sg2
g53814
sbs(g8943
g966
g49647
tp53820
g49643
s(g6632
g2155
g47451
tp53821
g47447
s(g452
g2841
g43231
tp53822
g43227
s(g117
g4163
S'1'
tp53823
g11061
s(S'add_subplot'
p53824
g47591
tp53825
g47586
s(S'axvline'
p53826
S'linestyle'
p53827
tp53828
(icodemend.demo.code_suggest
Element
p53829
(dp53830
g10
I7
sg11
S"set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||set the patch linestyle"
p53831
sg12
Vaxvline.linestyle
p53832
sg14
(lp53833
g26451
a(icodemend.demo.code_suggest
Element
p53834
(dp53835
g10
I2
sg11
S''
sg12
Vaxvline.linestyle.'-'
p53836
sg14
(lp53837
sg2
S"'-'"
p53838
sbag20526
ag53752
asg2
g53827
sbs(g2250
g50160
g24102
tp53839
g24098
s(g20499
g26756
S'2'
tp53840
g15496
s(S'plot'
p53841
g29690
tp53842
g29665
s(S'fill'
p53843
S'fmt'
p53844
tp53845
(icodemend.demo.code_suggest
Element
p53846
(dp53847
g10
I0
sg11
S'if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :'
p53848
sg12
Vfill.fmt
p53849
sg14
(lp53850
sg2
g53844
sbsS'vlines'
p53851
(icodemend.demo.code_suggest
Element
p53852
(dp53853
g10
I21
sg11
S'plot vertical lines .'
p53854
sg12
Vvlines
p53855
sg14
(lp53856
(icodemend.demo.code_suggest
Element
p53857
(dp53858
g10
I6
sg11
S'set the color(s ) of the line collection .'
p53859
sg12
Vvlines.color
p53860
sg14
(lp53861
g38831
ag31329
ag6559
ag52199
asg2
S'color'
p53862
sbag47221
a(icodemend.demo.code_suggest
Element
p53863
(dp53864
g10
I2
sg11
S'set the label to s for auto legend .'
p53865
sg12
Vvlines.label
p53866
sg14
(lp53867
(icodemend.demo.code_suggest
Element
p53868
(dp53869
g10
I1
sg11
S''
sg12
Vvlines.label.'PAHs'
p53870
sg14
(lp53871
sg2
S"'PAHs'"
p53872
sba(icodemend.demo.code_suggest
Element
p53873
(dp53874
g10
I1
sg11
S''
sg12
Vvlines.label.'test'
p53875
sg14
(lp53876
sg2
S"'test'"
p53877
sbasg2
S'label'
p53878
sba(icodemend.demo.code_suggest
Element
p53879
(dp53880
g10
I2
sg11
S'set the linewidth(s ) for the collection .'
p53881
sg12
Vvlines.linewidth
p53882
sg14
(lp53883
(icodemend.demo.code_suggest
Element
p53884
(dp53885
g10
I1
sg11
S''
sg12
Vvlines.linewidth.2
p53886
sg14
(lp53887
sg2
S'2'
sbag43516
asg2
S'linewidth'
p53888
sba(icodemend.demo.code_suggest
Element
p53889
(dp53890
g10
I0
sg11
S'set the alpha tranparencies of the collection .'
p53891
sg12
Vvlines.alpha
p53892
sg14
(lp53893
sg2
S'alpha'
p53894
sbag49684
a(icodemend.demo.code_suggest
Element
p53895
(dp53896
g10
I0
sg11
S'set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp'
p53897
sg12
Vvlines.clim
p53898
sg14
(lp53899
sg2
S'clim'
p53900
sbag44486
ag52075
a(icodemend.demo.code_suggest
Element
p53901
(dp53902
g10
I0
sg11
S'set the facecolor(s ) of the collection .'
p53903
sg12
Vvlines.facecolor
p53904
sg14
(lp53905
sg2
S'facecolor'
p53906
sbag46977
a(icodemend.demo.code_suggest
Element
p53907
(dp53908
g10
I0
sg11
S'set the linestyle(s ) for the collection .'
p53909
sg12
Vvlines.linestyle
p53910
sg14
(lp53911
sg2
S'linestyle'
p53912
sba(icodemend.demo.code_suggest
Element
p53913
(dp53914
g10
I0
sg11
S'set how offsets are applied .'
p53915
sg12
Vvlines.offset_position
p53916
sg14
(lp53917
sg2
S'offset_position'
p53918
sbag20172
ag41381
ag30710
a(icodemend.demo.code_suggest
Element
p53919
(dp53920
g10
I0
sg11
S'respective beginning and end of each line . if scalars are provided , all lines will have same length .'
p53921
sg12
Vvlines.ymin, ymax
p53922
sg14
(lp53923
sg2
S'ymin, ymax'
p53924
sbasg2
g53851
sbs(S'contour'
p53925
g17827
tp53926
g17822
s(S'gca'
p53927
S'title'
p53928
tp53929
(icodemend.demo.code_suggest
Element
p53930
(dp53931
g10
I0
sg11
S'set a title for the axes .'
p53932
sg12
Vgca.title
p53933
sg14
(lp53934
sg2
g53928
sbs(S'add_axes'
p53935
S'vertices'
p53936
tp53937
(icodemend.demo.code_suggest
Element
p53938
(dp53939
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p53940
sg12
Vadd_axes.vertices
p53941
sg14
(lp53942
sg2
g53936
sbs(S'axvspan'
p53943
S'picker'
p53944
tp53945
(icodemend.demo.code_suggest
Element
p53946
(dp53947
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p53948
sg12
Vaxvspan.picker
p53949
sg14
(lp53950
sg2
g53944
sbs(S'axhspan'
p53951
g24352
tp53952
g24347
s(g1170
g1257
S'30'
p53953
tp53954
(icodemend.demo.code_suggest
Element
p53955
(dp53956
g10
I8
sg11
S''
sg12
Vhist.bins.30
p53957
sg14
(lp53958
sg2
g53953
sbsS'get_subplot_params'
p53959
(icodemend.demo.code_suggest
Element
p53960
(dp53961
g10
I0
sg11
S'return a dictionary of subplot layout parameters .'
p53962
sg12
Vget_subplot_params
p53963
sg14
(lp53964
sg2
g53959
sbsS'get_major_formatter'
p53965
(icodemend.demo.code_suggest
Element
p53966
(dp53967
g10
I7
sg11
S'get the formatter of the major ticker'
p53968
sg12
Vget_major_formatter
p53969
sg14
(lp53970
sg2
g53965
sbs(S'angle_spectrum'
p53971
g18660
tp53972
g18655
s(S'path_length'
p53973
S'M'
tp53974
(icodemend.demo.code_suggest
Element
p53975
(dp53976
g10
I0
sg11
S'where x is an m x n array or matrix . returns an array of length m consisting of the distance along the curve at each point ( i.e. , the rows of x ) .'
p53977
sg12
Vpath_length.M
p53978
sg14
(lp53979
sg2
S'M'
sbs(g5975
g118
g19737
tp53980
g19733
s(g452
g36363
S"'steps-mid-'"
p53981
tp53982
(icodemend.demo.code_suggest
Element
p53983
(dp53984
g10
I1
sg11
S''
sg12
Verrorbar.drawstyle.'steps-mid-'
p53985
sg14
(lp53986
sg2
g53981
sbs(g332
g132
g41436
tp53987
g41432
s(S'pcolormesh'
p53988
S'sketch_params'
p53989
tp53990
(icodemend.demo.code_suggest
Element
p53991
(dp53992
g10
I0
sg11
S'sets the sketch parameters .'
p53993
sg12
Vpcolormesh.sketch_params
p53994
sg14
(lp53995
sg2
g53989
sbs(S'fill'
p53996
S'zorder'
p53997
tp53998
(icodemend.demo.code_suggest
Element
p53999
(dp54000
g10
I2
sg11
S'set the zorder for the artist .'
p54001
sg12
Vfill.zorder
p54002
sg14
(lp54003
g8556
ag53067
asg2
g53997
sbs(g101
S's'
g7539
tp54004
g7535
s(S'to_rgba'
p54005
g12961
tp54006
g12956
s(g5975
g132
g19631
tp54007
g19627
sS'gca'
p54008
(icodemend.demo.code_suggest
Element
p54009
(dp54010
g10
I400
sg11
S'get the current axes , creating one if necessary get the current axes instance on the current figure matching the given keyword args , or create one .'
p54011
sg12
Vgca
p54012
sg14
(lp54013
(icodemend.demo.code_suggest
Element
p54014
(dp54015
g10
I2
sg11
S'set the data limits for the xaxis'
p54016
sg12
Vgca.xlim
p54017
sg14
(lp54018
g5055
ag33286
asg2
S'xlim'
p54019
sbag39844
ag27032
a(icodemend.demo.code_suggest
Element
p54020
(dp54021
g10
I0
sg11
S'set agg_filter fuction .'
p54022
sg12
Vgca.agg_filter
p54023
sg14
(lp54024
sg2
S'agg_filter'
p54025
sbag365
ag41052
ag44221
a(icodemend.demo.code_suggest
Element
p54026
(dp54027
g10
I0
sg11
S'aspect'
p54028
sg12
Vgca.aspect
p54029
sg14
(lp54030
sg2
S'aspect'
p54031
sbag44541
a(icodemend.demo.code_suggest
Element
p54032
(dp54033
g10
I0
sg11
S"set the artist 's clip bbox ."
p54034
sg12
Vgca.clip_box
p54035
sg14
(lp54036
sg2
S'clip_box'
p54037
sba(icodemend.demo.code_suggest
Element
p54038
(dp54039
g10
I0
sg11
S'set whether artist uses clipping .'
p54040
sg12
Vgca.clip_on
p54041
sg14
(lp54042
sg2
S'clip_on'
p54043
sba(icodemend.demo.code_suggest
Element
p54044
(dp54045
g10
I0
sg11
S"set the artist 's clip path , which may be"
p54046
sg12
Vgca.clip_path
p54047
sg14
(lp54048
sg2
S'clip_path'
p54049
sbag44862
ag43992
ag23896
ag45120
ag3147
ag5660
ag44044
ag22385
ag52712
ag25632
a(icodemend.demo.code_suggest
Element
p54050
(dp54051
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p54052
sg12
Vgca.picker
p54053
sg14
(lp54054
sg2
S'picker'
p54055
sba(icodemend.demo.code_suggest
Element
p54056
(dp54057
g10
I0
sg11
S'set the axes position with'
p54058
sg12
Vgca.position
p54059
sg14
(lp54060
sg2
S'position'
p54061
sbag32771
ag16806
ag38715
ag19592
a(icodemend.demo.code_suggest
Element
p54062
(dp54063
g10
I0
sg11
S'sets the snap setting which may be'
p54064
sg12
Vgca.snap
p54065
sg14
(lp54066
sg2
S'snap'
p54067
sbag53930
ag27007
ag36587
ag10982
ag31624
ag44023
a(icodemend.demo.code_suggest
Element
p54068
(dp54069
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p54070
sg12
Vgca.xmargin
p54071
sg14
(lp54072
sg2
S'xmargin'
p54073
sba(icodemend.demo.code_suggest
Element
p54074
(dp54075
g10
I0
sg11
S'set the scaling of the x-axis'
p54076
sg12
Vgca.xscale
p54077
sg14
(lp54078
sg2
S'xscale'
p54079
sbag40397
a(icodemend.demo.code_suggest
Element
p54080
(dp54081
g10
I0
sg11
S'set the x ticks with list of ticks'
p54082
sg12
Vgca.xticks
p54083
sg14
(lp54084
sg2
S'xticks'
p54085
sba(icodemend.demo.code_suggest
Element
p54086
(dp54087
g10
I0
sg11
S'set the label for the yaxis'
p54088
sg12
Vgca.ylabel
p54089
sg14
(lp54090
sg2
S'ylabel'
p54091
sbag53260
ag49897
ag46182
ag51682
a(icodemend.demo.code_suggest
Element
p54092
(dp54093
g10
I0
sg11
S'set the zorder for the artist .'
p54094
sg12
Vgca.zorder
p54095
sg14
(lp54096
sg2
S'zorder'
p54097
sbasg2
g54008
sbs(g252
S'mode'
p54098
g5208
tp54099
g5204
s(g125
g132
S"'r'"
p54100
tp54101
(icodemend.demo.code_suggest
Element
p54102
(dp54103
g10
I4
sg11
S''
sg12
Vaxvline.color.'r'
p54104
sg14
(lp54105
sg2
g54100
sbsS'gcf'
p54106
(icodemend.demo.code_suggest
Element
p54107
(dp54108
g10
I75
sg11
S'get a reference to the current figure .'
p54109
sg12
Vgcf
p54110
sg14
(lp54111
sg2
g54106
sbsS'gci'
p54112
(icodemend.demo.code_suggest
Element
p54113
(dp54114
g10
I0
sg11
S'get the current colorable artist .'
p54115
sg12
Vgci
p54116
sg14
(lp54117
sg2
g54112
sbs(g1003
S'capprops'
p54118
g37168
tp54119
g37164
s(g452
g4274
g12112
tp54120
g12108
s(S'semilogx'
p54121
g38995
tp54122
g38990
s(S'set_yticklabels'
p54123
g18046
tp54124
g18041
s(S'set_prop_cycle'
p54125
S'arg'
p54126
tp54127
(icodemend.demo.code_suggest
Element
p54128
(dp54129
g10
I0
sg11
S'set the given cycler . can also be none to reset to the cycle defined by the current style .'
p54130
sg12
Vset_prop_cycle.arg
p54131
sg14
(lp54132
sg2
g54126
sbs(S'csd'
p54133
g51605
tp54134
g51600
s(g117
g2251
g29150
tp54135
g29146
s(S'rec_groupby'
p54136
S'r'
tp54137
(icodemend.demo.code_suggest
Element
p54138
(dp54139
g10
I0
sg11
S'r is a numpy record array'
p54140
sg12
Vrec_groupby.r
p54141
sg14
(lp54142
sg2
S'r'
sbs(S'setp'
p54143
g39690
tp54144
g39685
s(S'errorbar'
p54145
S'ylim'
p54146
tp54147
(icodemend.demo.code_suggest
Element
p54148
(dp54149
g10
I0
sg11
S'set the data limits for the yaxis'
p54150
sg12
Verrorbar.ylim
p54151
sg14
(lp54152
sg2
g54146
sbs(g452
g37606
S'4'
tp54153
g42547
s(S'hist'
p54154
S'bins'
p54155
tp54156
(icodemend.demo.code_suggest
Element
p54157
(dp54158
g10
I122
sg11
S'compute and draw the histogram of x . the return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||if an integer is given , bins + 1 bin edges are returned , consistently with numpy.histogram ( ) for numpy version > = 1.3 .'
p54159
sg12
Vhist.bins
p54160
sg14
(lp54161
g41269
a(icodemend.demo.code_suggest
Element
p54162
(dp54163
g10
I11
sg11
S''
sg12
Vhist.bins.50
p54164
sg14
(lp54165
sg2
S'50'
p54166
sba(icodemend.demo.code_suggest
Element
p54167
(dp54168
g10
I8
sg11
S''
sg12
Vhist.bins.20
p54169
sg14
(lp54170
sg2
S'20'
p54171
sbag53955
ag10236
a(icodemend.demo.code_suggest
Element
p54172
(dp54173
g10
I3
sg11
S''
sg12
Vhist.bins.40
p54174
sg14
(lp54175
sg2
S'40'
p54176
sbag25165
ag53038
ag6465
ag7857
a(icodemend.demo.code_suggest
Element
p54177
(dp54178
g10
I2
sg11
S''
sg12
Vhist.bins.6
p54179
sg14
(lp54180
sg2
S'6'
sbag36332
a(icodemend.demo.code_suggest
Element
p54181
(dp54182
g10
I2
sg11
S''
sg12
Vhist.bins.bns
p54183
sg14
(lp54184
sg2
S'bns'
p54185
sbag40558
ag15724
ag46156
ag13238
a(icodemend.demo.code_suggest
Element
p54186
(dp54187
g10
I1
sg11
S''
sg12
Vhist.bins.15
p54188
sg14
(lp54189
sg2
S'15'
p54190
sbag31286
ag47824
ag12502
ag51058
a(icodemend.demo.code_suggest
Element
p54191
(dp54192
g10
I1
sg11
S''
sg12
Vhist.bins.3
p54193
sg14
(lp54194
sg2
S'3'
sbag27101
ag2274
ag22693
ag52596
a(icodemend.demo.code_suggest
Element
p54195
(dp54196
g10
I1
sg11
S''
sg12
Vhist.bins.[0, 10, 20, 30, 40, 50, 100]
p54197
sg14
(lp54198
sg2
S'[0, 10, 20, 30, 40, 50, 100]'
p54199
sbag42229
ag16833
ag31267
ag14958
ag36440
ag32871
asg2
g54155
sbs(g1170
g437
S'0'
tp54200
g16042
s(S'loglog'
p54201
g53655
tp54202
g53650
s(S'plot_date'
p54203
g19748
tp54204
g19739
s(S'contourf'
p54205
S'Z'
tp54206
g46717
s(S'suptitle'
p54207
S'fontproperties'
p54208
tp54209
(icodemend.demo.code_suggest
Element
p54210
(dp54211
g10
I0
sg11
S'set the font properties that control the text .'
p54212
sg12
Vsuptitle.fontproperties
p54213
sg14
(lp54214
sg2
g54208
sbsS'set_ms'
p54215
(icodemend.demo.code_suggest
Element
p54216
(dp54217
g10
I0
sg11
S'alias for set_markersize'
p54218
sg12
Vset_ms
p54219
sg14
(lp54220
sg2
g54215
sbs(S'annotate'
p54221
S'size'
p54222
tp54223
(icodemend.demo.code_suggest
Element
p54224
(dp54225
g10
I24
sg11
S'set the font size .'
p54226
sg12
Vannotate.size
p54227
sg14
(lp54228
g53816
ag954
ag18415
ag26250
ag42623
ag34439
ag49924
ag35975
ag48572
a(icodemend.demo.code_suggest
Element
p54229
(dp54230
g10
I1
sg11
S''
sg12
Vannotate.size.18
p54231
sg14
(lp54232
sg2
S'18'
p54233
sbag917
ag5456
ag31281
asg2
g54222
sbs(g582
g2392
S'4'
tp54234
g3406
sS'get_path'
p54235
(icodemend.demo.code_suggest
Element
p54236
(dp54237
g10
I6
sg11
S'return the vertices of the rectangle'
p54238
sg12
Vget_path
p54239
sg14
(lp54240
sg2
g54235
sbs(S'semilogx'
p54241
g39061
tp54242
g39056
s(g93
g4800
g25399
tp54243
g25395
sS'set_ma'
p54244
(icodemend.demo.code_suggest
Element
p54245
(dp54246
g10
I0
sg11
S'alias for set_verticalalignment'
p54247
sg12
Vset_ma
p54248
sg14
(lp54249
sg2
g54244
sbs(S'axhline'
p54250
g3645
tp54251
g3640
s(g101
S'c'
g21526
tp54252
g21522
s(g1003
g4651
g33007
tp54253
g33003
s(S'set_yticklabels'
p54254
g18154
tp54255
g18149
s(g117
g132
g28703
tp54256
g28699
s(g117
g118
g27744
tp54257
g27740
s(g245
g140
g30198
tp54258
g30194
s(g332
g16171
g438
tp54259
g46000
s(S'loglog'
p54260
g53619
tp54261
g53614
s(S'loglog'
p54262
g53566
tp54263
g53561
s(g101
g118
g21955
tp54264
g21951
s(g6217
g8768
g1944
tp54265
g2454
s(S'set_yticklabels'
p54266
g18244
tp54267
g18239
s(S'barh'
p54268
S'uplims'
p54269
tp54270
(icodemend.demo.code_suggest
Element
p54271
(dp54272
g10
I0
sg11
S'these arguments can be used to indicate that a value gives only upper/lower limits . in that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . to use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .'
p54273
sg12
Vbarh.uplims
p54274
sg14
(lp54275
sg2
g54269
sbsS'subplot_tool'
p54276
(icodemend.demo.code_suggest
Element
p54277
(dp54278
g10
I0
sg11
S'launch a subplot tool window for a figure .'
p54279
sg12
Vsubplot_tool
p54280
sg14
(lp54281
sg2
g54276
sbs(g252
g8210
S'7'
tp54282
g221
s(S'errorbar'
p54283
S'lolims'
p54284
tp54285
(icodemend.demo.code_suggest
Element
p54286
(dp54287
g10
I2
sg11
S'these arguments can be used to indicate that a value gives only upper/lower limits . in that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . to use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .'
p54288
sg12
Verrorbar.lolims
p54289
sg14
(lp54290
(icodemend.demo.code_suggest
Element
p54291
(dp54292
g10
I1
sg11
S''
sg12
Verrorbar.lolims.False
p54293
sg14
(lp54294
sg2
g1944
sbag12704
asg2
g54284
sbs(g16
g132
g46462
tp54295
g46458
s(S'trigger'
p54296
g46973
tp54297
g46968
sS'get_pad'
p54298
(icodemend.demo.code_suggest
Element
p54299
(dp54300
g10
I0
sg11
S'get the value of the tick label pad in points'
p54301
sg12
Vget_pad
p54302
sg14
(lp54303
sg2
g54298
sbs(g101
S's'
g7706
tp54304
g7702
s(g245
g140
g30368
tp54305
g30364
s(g252
g4984
S'2'
tp54306
g14226
s(g93
g4800
g25584
tp54307
g25580
s(g117
g118
g28054
tp54308
g28050
s(S'loglog'
p54309
g53661
tp54310
g53656
sS'fetch_historical_yahoo'
p54311
(icodemend.demo.code_suggest
Element
p54312
(dp54313
g10
I0
sg11
S'fetch historical data for ticker between date1 and date2 .'
p54314
sg12
Vfetch_historical_yahoo
p54315
sg14
(lp54316
g35478
ag19136
ag31926
a(icodemend.demo.code_suggest
Element
p54317
(dp54318
g10
I0
sg11
S'set dividends=true to return dividends instead of price data . with this option set , parse functions will not work'
p54319
sg12
Vfetch_historical_yahoo.dividends
p54320
sg14
(lp54321
sg2
S'dividends'
p54322
sba(icodemend.demo.code_suggest
Element
p54323
(dp54324
g10
I0
sg11
S'ticker'
p54325
sg12
Vfetch_historical_yahoo.ticker
p54326
sg14
(lp54327
sg2
S'ticker'
p54328
sbasg2
g54311
sbs(g252
g253
g14126
tp54329
g14122
s(S'figure'
p54330
S'dpi'
p54331
tp54332
(icodemend.demo.code_suggest
Element
p54333
(dp54334
g10
I53
sg11
S'resolution of the figure . if not provided , defaults to rc figure.dpi .'
p54335
sg12
Vfigure.dpi
p54336
sg14
(lp54337
g52747
ag49031
ag34727
ag42057
ag37614
ag36291
ag3078
a(icodemend.demo.code_suggest
Element
p54338
(dp54339
g10
I2
sg11
S''
sg12
Vfigure.dpi.my_dpi
p54340
sg14
(lp54341
sg2
g14775
sbag32984
ag36727
ag7831
ag53495
ag43951
ag44405
asg2
g54331
sbs(S'set_rotation_mode'
p54342
g45108
tp54343
g45103
s(g5424
g13645
g50529
tp54344
g50525
s(g4371
g8545
S'3'
tp54345
g1070
sS'poly_below'
p54346
(icodemend.demo.code_suggest
Element
p54347
(dp54348
g10
I0
sg11
S'given a sequence of xs and ys , return the vertices of a polygon that has a horizontal base at xmin and an upper bound at the ys .'
p54349
sg12
Vpoly_below
p54350
sg14
(lp54351
g10271
ag10324
ag10288
asg2
g54346
sbsS'isvector'
p54352
(icodemend.demo.code_suggest
Element
p54353
(dp54354
g10
I0
sg11
S'like the matlab function with the same name , returns true if the supplied numpy array or matrix x looks like a vector , meaning it has a one non-singleton axis ( i.e. , it can have multiple axes , but all must have length 1 , except for one of them ) .'
p54355
sg12
Visvector
p54356
sg14
(lp54357
g10665
asg2
g54352
sbs(g324
g8780
g9842
tp54358
g9838
s(S'phase_spectrum'
p54359
g52337
tp54360
g52332
s(S'bxp'
p54361
g41661
tp54362
g41656
s(S'eventplot'
p54363
g23523
tp54364
g23518
s(g324
g785
g9342
tp54365
g9338
s(S'pcolor'
p54366
g49463
tp54367
g49458
s(S'contourf'
p54368
g46739
tp54369
g46734
s(g452
g37606
g42546
tp54370
g42542
s(S'cohere'
p54371
g43765
tp54372
g43760
s(g93
g161
S'(0.1, 0.1)'
p54373
tp54374
(icodemend.demo.code_suggest
Element
p54375
(dp54376
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/1, 0/1)
p54377
sg14
(lp54378
sg2
g54373
sbs(g5673
g2392
S'2'
tp54379
g6208
s(g5424
g13645
g50524
tp54380
g50520
s(g4998
g325
g9074
tp54381
(icodemend.demo.code_suggest
Element
p54382
(dp54383
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.my_cmap
p54384
sg14
(lp54385
sg2
g9074
sbs(g117
g4274
g28983
tp54386
g28979
sS'get_mutation_scale'
p54387
(icodemend.demo.code_suggest
Element
p54388
(dp54389
g10
I0
sg11
S'return the mutation scale .'
p54390
sg12
Vget_mutation_scale
p54391
sg14
(lp54392
sg2
g54387
sbs(g1003
g4651
g33017
tp54393
g33013
s(S'add_axes'
p54394
S'linestyle'
p54395
tp54396
(icodemend.demo.code_suggest
Element
p54397
(dp54398
g10
I0
sg11
S'set the patch linestyle'
p54399
sg12
Vadd_axes.linestyle
p54400
sg14
(lp54401
sg2
g54395
sbs(S'barh'
p54402
S'bottom'
p54403
tp54404
(icodemend.demo.code_suggest
Element
p54405
(dp54406
g10
I0
sg11
S'the y coordinate(s ) of the bars'
p54407
sg12
Vbarh.bottom
p54408
sg14
(lp54409
sg2
g54403
sbs(g117
g118
g28099
tp54410
g28095
sS'set_clim'
p54411
(icodemend.demo.code_suggest
Element
p54412
(dp54413
g10
I25
sg11
S'set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp'
p54414
sg12
Vset_clim
p54415
sg14
(lp54416
g22365
asg2
g54411
sbs(S'contourf'
p54417
g46694
tp54418
g46685
s(g324
g325
g9163
tp54419
g9159
s(S'volume_overlay3'
p54420
g45647
tp54421
g45642
s(g117
g118
g27944
tp54422
g27940
s(S'broken_barh'
p54423
g48691
tp54424
g48686
s(g93
g4800
g25364
tp54425
g25360
s(g5673
g24819
S'2'
tp54426
g49293
s(g101
S'c'
g21429
tp54427
g21425
s(S'add_axes'
p54428
S'clip_on'
p54429
tp54430
(icodemend.demo.code_suggest
Element
p54431
(dp54432
g10
I0
sg11
S'set whether artist uses clipping .'
p54433
sg12
Vadd_axes.clip_on
p54434
sg14
(lp54435
sg2
g54429
sbs(S'quiver'
p54436
g31075
tp54437
g31070
s(S'csd'
p54438
g51593
tp54439
g51588
s(g101
S'c'
g7761
tp54440
g21494
s(S'legend'
p54441
g14604
tp54442
g14589
s(g117
g132
g28814
tp54443
g28810
s(S'errorbar'
p54444
S'ms'
p54445
tp54446
(icodemend.demo.code_suggest
Element
p54447
(dp54448
g10
I2
sg11
S'where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p54449
sg12
Verrorbar.ms
p54450
sg14
(lp54451
g20842
ag10592
asg2
g54445
sbs(S'arrow'
p54452
g2493
tp54453
g2480
s(S'table'
p54454
S'xmargin'
p54455
tp54456
(icodemend.demo.code_suggest
Element
p54457
(dp54458
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p54459
sg12
Vtable.xmargin
p54460
sg14
(lp54461
sg2
g54455
sbs(g13338
g19538
g20759
tp54462
g20755
sS'alltrue'
p54463
(icodemend.demo.code_suggest
Element
p54464
(dp54465
g10
I0
sg11
S'return true if all elements of seq evaluate to true .'
p54466
sg12
Valltrue
p54467
sg14
(lp54468
g52097
asg2
g54463
sbs(S'toggle_toolitem'
p54469
g33676
tp54470
g33671
sS'triplot'
p54471
(icodemend.demo.code_suggest
Element
p54472
(dp54473
g10
I11
sg11
S'draw a unstructured triangular grid as lines and/or markers .'
p54474
sg12
Vtriplot
p54475
sg14
(lp54476
(icodemend.demo.code_suggest
Element
p54477
(dp54478
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :'
p54479
sg12
Vtriplot.args
p54480
sg14
(lp54481
sg2
S'args'
p54482
sbag51026
ag36234
ag20892
ag20946
a(icodemend.demo.code_suggest
Element
p54483
(dp54484
g10
I0
sg11
S'plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .'
p54485
sg12
Vtriplot.y
p54486
sg14
(lp54487
sg2
S'y'
sbasg2
g54471
sbs(S'axhline'
p54488
g3491
tp54489
g3482
s(g53295
g53305
tp54490
g53300
s(S'loglog'
p54491
g53613
tp54492
g53608
sS'get_clip_path'
p54493
(icodemend.demo.code_suggest
Element
p54494
(dp54495
g10
I0
sg11
S'return artist clip path'
p54496
sg12
Vget_clip_path
p54497
sg14
(lp54498
sg2
g54493
sbs(S'thetagrids'
p54499
g53440
tp54500
g53435
s(S'barbs'
p54501
S'color'
p54502
tp54503
(icodemend.demo.code_suggest
Element
p54504
(dp54505
g10
I1
sg11
S'set both the edgecolor and the facecolor .'
p54506
sg12
Vbarbs.color
p54507
sg14
(lp54508
g13545
asg2
g54502
sbsS'recs_join'
p54509
(icodemend.demo.code_suggest
Element
p54510
(dp54511
g10
I0
sg11
S'join a sequence of record arrays on single column key .'
p54512
sg12
Vrecs_join
p54513
sg14
(lp54514
sg2
g54509
sbs(g117
g118
g27849
tp54515
g27845
s(g101
S'c'
g21507
tp54516
g21503
s(g16
g17
S'8'
tp54517
g41989
s(g109
g8267
g44074
tp54518
g44070
s(g101
g325
g3160
tp54519
g21809
s(g93
g161
S'(0.2, 0.5)'
p54520
tp54521
(icodemend.demo.code_suggest
Element
p54522
(dp54523
g10
I1
sg11
S''
sg12
Vannotate.xy.(0/2, 0/5)
p54524
sg14
(lp54525
sg2
g54520
sbs(S'pcolormesh'
p54526
S'visible'
p54527
tp54528
(icodemend.demo.code_suggest
Element
p54529
(dp54530
g10
I0
sg11
S"set the artist 's visiblity ."
p54531
sg12
Vpcolormesh.visible
p54532
sg14
(lp54533
sg2
g54527
sbsS'find_tex_file'
p54534
(icodemend.demo.code_suggest
Element
p54535
(dp54536
g10
I0
sg11
S'call kpsewhich to find a file in the texmf tree .'
p54537
sg12
Vfind_tex_file
p54538
sg14
(lp54539
g40586
asg2
g54534
sbs(S'cohere'
p54540
g43729
tp54541
g43724
s(S'figtext'
p54542
g11221
tp54543
g11216
s(g93
g161
S'((x - (txt_width / 2)), t)'
p54544
tp54545
(icodemend.demo.code_suggest
Element
p54546
(dp54547
g10
I1
sg11
S''
sg12
Vannotate.xy.((x - (txt_width / 2)), t)
p54548
sg14
(lp54549
sg2
g54544
sbs(S'pcolor'
p54550
g49469
tp54551
g49464
s(S'get_unitless_position'
p54552
S'x'
tp54553
g51089
s(g2814
g41878
S'(4, 0)'
p54554
tp54555
(icodemend.demo.code_suggest
Element
p54556
(dp54557
g10
I1
sg11
S''
sg12
Vadd.connect.(4, 0)
p54558
sg14
(lp54559
sg2
g54554
sbs(g324
g785
g9556
tp54560
g9552
s(S'ylim'
p54561
g23949
tp54562
g23940
s(S'csd'
p54563
g51503
tp54564
g51498
s(S'magnitude_spectrum'
p54565
g48098
tp54566
g48093
s(g245
g140
g30009
tp54567
g30005
s(g101
S'c'
g132
tp54568
g21301
s(S'set_color'
p54569
S'c'
tp54570
g21011
sS'set_prop_cycle'
p54571
(icodemend.demo.code_suggest
Element
p54572
(dp54573
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p54574
sg12
Vset_prop_cycle
p54575
sg14
(lp54576
g54128
ag45979
ag53025
asg2
g54571
sbs(g117
g118
g27492
tp54577
g27488
s(g101
g118
g22025
tp54578
g22021
s(g8547
g4334
g1944
tp54579
g51821
sS'set_foreground'
p54580
(icodemend.demo.code_suggest
Element
p54581
(dp54582
g10
I0
sg11
S'set the foreground color .'
p54583
sg12
Vset_foreground
p54584
sg14
(lp54585
sg2
g54580
sbs(S'csd'
p54586
g51587
tp54587
g51582
s(S'add'
p54588
S'label'
p54589
tp54590
(icodemend.demo.code_suggest
Element
p54591
(dp54592
g10
I5
sg11
S'set the label to s for auto legend .'
p54593
sg12
Vadd.label
p54594
sg14
(lp54595
g36624
ag33950
ag42147
ag13781
ag45761
asg2
g54589
sbsS'print_cycles'
p54596
(icodemend.demo.code_suggest
Element
p54597
(dp54598
g10
I0
sg11
S'a list of objects to find cycles in .'
p54599
sg12
Vprint_cycles
p54600
sg14
(lp54601
sg2
g54596
sbs(S'set_xlabel'
p54602
S'x'
tp54603
g42814
sS'get_axis_bgcolor'
p54604
(icodemend.demo.code_suggest
Element
p54605
(dp54606
g10
I0
sg11
S'return the axis background color'
p54607
sg12
Vget_axis_bgcolor
p54608
sg14
(lp54609
sg2
g54604
sbs(S'text'
p54610
g48356
tp54611
g48351
s(g117
g118
g28663
tp54612
g28659
s(g245
g140
g30533
tp54613
g30529
s(S'pcolormesh'
p54614
S'ymargin'
p54615
tp54616
(icodemend.demo.code_suggest
Element
p54617
(dp54618
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p54619
sg12
Vpcolormesh.ymargin
p54620
sg14
(lp54621
sg2
g54615
sbs(S'psd'
p54622
g36952
tp54623
g36947
s(g245
g140
g30403
tp54624
g30399
s(g16279
g2183
g11617
tp54625
g11613
sS'axvspan'
p54626
(icodemend.demo.code_suggest
Element
p54627
(dp54628
g10
I21
sg11
S'add a vertical span ( rectangle ) across the axes .'
p54629
sg12
Vaxvspan
p54630
sg14
(lp54631
(icodemend.demo.code_suggest
Element
p54632
(dp54633
g10
I16
sg11
S'set the alpha tranparency of the patch .'
p54634
sg12
Vaxvspan.alpha
p54635
sg14
(lp54636
g16167
a(icodemend.demo.code_suggest
Element
p54637
(dp54638
g10
I4
sg11
S''
sg12
Vaxvspan.alpha.1
p54639
sg14
(lp54640
sg2
S'1'
sbag31397
asg2
S'alpha'
p54641
sbag8137
a(icodemend.demo.code_suggest
Element
p54642
(dp54643
g10
I7
sg11
S'set both the edgecolor and the facecolor .'
p54644
sg12
Vaxvspan.color
p54645
sg14
(lp54646
g41016
a(icodemend.demo.code_suggest
Element
p54647
(dp54648
g10
I1
sg11
S''
sg12
Vaxvspan.color.'r'
p54649
sg14
(lp54650
sg2
S"'r'"
p54651
sbasg2
S'color'
p54652
sbag44184
ag37272
a(icodemend.demo.code_suggest
Element
p54653
(dp54654
g10
I2
sg11
S'draw a vertical span ( rectangle ) from xmin to xmax . with the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . that is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates .'
p54655
sg12
Vaxvspan.ymin
p54656
sg14
(lp54657
g41029
ag38613
asg2
S'ymin'
p54658
sbag40936
a(icodemend.demo.code_suggest
Element
p54659
(dp54660
g10
I1
sg11
S'set the hatching pattern'
p54661
sg12
Vaxvspan.hatch
p54662
sg14
(lp54663
g53150
asg2
S'hatch'
p54664
sbag24660
a(icodemend.demo.code_suggest
Element
p54665
(dp54666
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p54667
sg12
Vaxvspan._interpolation_steps
p54668
sg14
(lp54669
sg2
S'_interpolation_steps'
p54670
sbag1270
ag53745
ag4736
ag22916
ag6074
ag5753
ag8291
ag35400
a(icodemend.demo.code_suggest
Element
p54671
(dp54672
g10
I0
sg11
S"set the artist 's clip path , which may be"
p54673
sg12
Vaxvspan.clip_path
p54674
sg14
(lp54675
sg2
S'clip_path'
p54676
sba(icodemend.demo.code_suggest
Element
p54677
(dp54678
g10
I0
sg11
S'set if the polygon is closed|||if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p54679
sg12
Vaxvspan.closed
p54680
sg14
(lp54681
sg2
S'closed'
p54682
sbag4252
a(icodemend.demo.code_suggest
Element
p54683
(dp54684
g10
I0
sg11
S'set the color cycle for any future plot commands on this axes .'
p54685
sg12
Vaxvspan.color_cycle
p54686
sg14
(lp54687
sg2
S'color_cycle'
p54688
sbag26628
ag32412
ag45964
a(icodemend.demo.code_suggest
Element
p54689
(dp54690
g10
I0
sg11
S'set whether to fill the patch'
p54691
sg12
Vaxvspan.fill
p54692
sg14
(lp54693
sg2
S'fill'
p54694
sbag49886
a(icodemend.demo.code_suggest
Element
p54695
(dp54696
g10
I0
sg11
S'set the patch joinstyle'
p54697
sg12
Vaxvspan.joinstyle
p54698
sg14
(lp54699
sg2
S'joinstyle'
p54700
sbag33878
ag12697
ag44672
ag53946
ag40170
ag47737
a(icodemend.demo.code_suggest
Element
p54701
(dp54702
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p54703
sg12
Vaxvspan.rasterized
p54704
sg14
(lp54705
sg2
S'rasterized'
p54706
sbag52895
ag39950
a(icodemend.demo.code_suggest
Element
p54707
(dp54708
g10
I0
sg11
S'sets the sketch parameters .'
p54709
sg12
Vaxvspan.sketch_params
p54710
sg14
(lp54711
sg2
S'sketch_params'
p54712
sbag47325
a(icodemend.demo.code_suggest
Element
p54713
(dp54714
g10
I0
sg11
S'set a title for the axes .'
p54715
sg12
Vaxvspan.title
p54716
sg14
(lp54717
sg2
S'title'
p54718
sbag45347
ag10615
ag47342
ag890
ag20905
a(icodemend.demo.code_suggest
Element
p54719
(dp54720
g10
I0
sg11
S'set the label for the xaxis .'
p54721
sg12
Vaxvspan.xlabel
p54722
sg14
(lp54723
sg2
S'xlabel'
p54724
sbag27199
ag33271
ag47787
ag30614
ag45863
ag53098
ag51168
a(icodemend.demo.code_suggest
Element
p54725
(dp54726
g10
I0
sg11
S'set the vertices of the polygon'
p54727
sg12
Vaxvspan.xy
p54728
sg14
(lp54729
sg2
S'xy'
p54730
sbag48504
ag41826
a(icodemend.demo.code_suggest
Element
p54731
(dp54732
g10
I0
sg11
S'set the data limits for the yaxis'
p54733
sg12
Vaxvspan.ylim
p54734
sg14
(lp54735
sg2
S'ylim'
p54736
sbag40657
a(icodemend.demo.code_suggest
Element
p54737
(dp54738
g10
I0
sg11
S'set the scaling of the y-axis'
p54739
sg12
Vaxvspan.yscale
p54740
sg14
(lp54741
sg2
S'yscale'
p54742
sbag8582
ag10085
ag720
asg2
g54626
sbs(S'psd'
p54743
g37018
tp54744
g37013
s(S'legend'
p54745
g14429
tp54746
g14390
s(g117
g118
g28154
tp54747
g28150
s(g582
g2392
g3422
tp54748
g3418
s(S'plot_date'
p54749
g20033
tp54750
g20028
s(S'plot'
p54751
g29838
tp54752
g29833
s(S'pcolor'
p54753
g49505
tp54754
g49500
s(S'add_subplot'
p54755
g47519
tp54756
g47514
s(S'pcolormesh'
p54757
S'agg_filter'
p54758
tp54759
(icodemend.demo.code_suggest
Element
p54760
(dp54761
g10
I0
sg11
S'set agg_filter fuction .'
p54762
sg12
Vpcolormesh.agg_filter
p54763
sg14
(lp54764
sg2
g54758
sbs(S'ylim'
p54765
S'y'
tp54766
g23950
s(g4998
g8538
g51661
tp54767
g51657
s(S'axvline'
p54768
S'transform'
p54769
tp54770
(icodemend.demo.code_suggest
Element
p54771
(dp54772
g10
I0
sg11
S'set the transformation instance used by this artist'
p54773
sg12
Vaxvline.transform
p54774
sg14
(lp54775
sg2
g54769
sbs(g452
g453
g7274
tp54776
g7270
s(S'cohere'
p54777
g43777
tp54778
g43772
s(g1170
g47828
S'1'
tp54779
g50146
s(S'plot'
p54780
g29792
tp54781
g29787
s(g117
g118
g27616
tp54782
g27612
s(S'SimplePatchShadow'
p54783
g39517
tp54784
g39512
sS'get_transform'
p54785
(icodemend.demo.code_suggest
Element
p54786
(dp54787
g10
I2
sg11
S'return the transform instance used by this artist .'
p54788
sg12
Vget_transform
p54789
sg14
(lp54790
sg2
g54785
sbsS'set_markerfacecoloralt'
p54791
(icodemend.demo.code_suggest
Element
p54792
(dp54793
g10
I0
sg11
S'set the alternate marker face color .'
p54794
sg12
Vset_markerfacecoloralt
p54795
sg14
(lp54796
sg2
g54791
sbs(g324
g785
g9616
tp54797
g9612
s(g101
S's'
g7656
tp54798
g7652
s(g93
g161
S'((posx - (len(n) * 0.1)), ((- posy) + 0.15))'
p54799
tp54800
(icodemend.demo.code_suggest
Element
p54801
(dp54802
g10
I1
sg11
S''
sg12
Vannotate.xy.((posx - (len(n) * 0/1)), ((- posy) + 0/15))
p54803
sg14
(lp54804
sg2
g54799
sbs(S'autoscale_view'
p54805
S'scaley'
p54806
tp54807
(icodemend.demo.code_suggest
Element
p54808
(dp54809
g10
I0
sg11
S'autoscale the view limits using the data limits . you can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to false . the autoscaling preserves any axis direction reversal that has already been done .'
p54810
sg12
Vautoscale_view.scaley
p54811
sg14
(lp54812
sg2
g54806
sbs(S'table'
p54813
S'anchor'
p54814
tp54815
(icodemend.demo.code_suggest
Element
p54816
(dp54817
g10
I0
sg11
S'anchor'
p54818
sg12
Vtable.anchor
p54819
sg14
(lp54820
sg2
g54814
sbs(S'spy'
p54821
g34585
tp54822
g34580
s(g1003
g4651
S'a'
tp54823
g33018
s(S'psd'
p54824
g36970
tp54825
g36965
s(g2250
g30783
g30778
tp54826
g30774
s(S'barh'
p54827
S'ecolor'
p54828
tp54829
(icodemend.demo.code_suggest
Element
p54830
(dp54831
g10
I4
sg11
S'specifies the color of errorbar(s )|||a matplotlib color arg which gives the color the errorbar lines ; if none , use the color of the line connecting the markers . specifies the color of errorbar(s )'
p54832
sg12
Vbarh.ecolor
p54833
sg14
(lp54834
(icodemend.demo.code_suggest
Element
p54835
(dp54836
g10
I1
sg11
S''
sg12
Vbarh.ecolor.'b'
p54837
sg14
(lp54838
sg2
S"'b'"
p54839
sbag52813
ag15187
ag43899
asg2
g54828
sbs(g117
g118
g27502
tp54840
g27498
s(S'add_subplot'
p54841
g47436
tp54842
g47416
s(S'figtext'
p54843
g11455
tp54844
g11450
s(S'semilogy'
p54845
g39211
tp54846
g39206
s(g101
g325
g325
tp54847
g21736
s(S'savefig'
p54848
S'papertype'
p54849
tp54850
(icodemend.demo.code_suggest
Element
p54851
(dp54852
g10
I4
sg11
S"one of ' letter ' , ' legal ' , ' executive ' , ' ledger ' , ' a0 ' through ' a10 ' , ' b0 ' through ' b10 ' . only supported for postscript output ."
p54853
sg12
Vsavefig.papertype
p54854
sg14
(lp54855
(icodemend.demo.code_suggest
Element
p54856
(dp54857
g10
I2
sg11
S''
sg12
Vsavefig.papertype.'a4'
p54858
sg14
(lp54859
sg2
S"'a4'"
p54860
sba(icodemend.demo.code_suggest
Element
p54861
(dp54862
g10
I1
sg11
S''
sg12
Vsavefig.papertype.'a2'
p54863
sg14
(lp54864
sg2
S"'a2'"
p54865
sbag34060
asg2
g54849
sbs(S'table'
p54866
S'ylabel'
p54867
tp54868
(icodemend.demo.code_suggest
Element
p54869
(dp54870
g10
I0
sg11
S'set the label for the yaxis'
p54871
sg12
Vtable.ylabel
p54872
sg14
(lp54873
sg2
g54867
sbs(g252
g253
g14161
tp54874
g14157
s(S'hillshade'
p54875
g6504
tp54876
g6499
s(S'set_xlabel'
p54877
g36478
g42794
tp54878
g42790
s(g93
g161
S'((i + corr), (j + corr))'
p54879
tp54880
(icodemend.demo.code_suggest
Element
p54881
(dp54882
g10
I1
sg11
S''
sg12
Vannotate.xy.((i + corr), (j + corr))
p54883
sg14
(lp54884
sg2
g54879
sbs(g101
S'c'
g5577
tp54885
g21490
s(g117
g118
g28439
tp54886
g28435
s(S'quiver'
p54887
g30955
tp54888
g30950
s(g2250
g15307
g30736
tp54889
g30732
s(g16
g132
g46492
tp54890
g46488
s(g16
g17
g41910
tp54891
g41906
s(S'gca'
p54892
g54049
tp54893
g54044
s(g5848
S'valmin'
p54894
g40957
tp54895
g40953
s(S'csd'
p54896
g51491
tp54897
g51486
s(g252
g1010
g13976
tp54898
g13972
sS'thumbnail'
p54899
(icodemend.demo.code_suggest
Element
p54900
(dp54901
g10
I0
sg11
S'make a thumbnail of image in infile with output filename thumbfile .'
p54902
sg12
Vthumbnail
p54903
sg14
(lp54904
g46786
ag13657
ag11834
ag637
ag38154
asg2
g54899
sbs(S'axhline'
p54905
g3735
tp54906
g3730
s(S'set_title'
p54907
g44471
tp54908
g44466
s(g514
g325
g48194
tp54909
g48190
s(S'plot_day_summary_ohlc'
p54910
S'colorup'
p54911
tp54912
(icodemend.demo.code_suggest
Element
p54913
(dp54914
g10
I0
sg11
S'the color of the lines where close > = open'
p54915
sg12
Vplot_day_summary_ohlc.colorup
p54916
sg14
(lp54917
sg2
g54911
sbs(S'trigger_tool'
p54918
S'data'
p54919
tp54920
(icodemend.demo.code_suggest
Element
p54921
(dp54922
g10
I0
sg11
S'extra data to pass to the tool when triggering'
p54923
sg12
Vtrigger_tool.data
p54924
sg14
(lp54925
sg2
g54919
sbs(S'axvspan'
p54926
g54712
tp54927
g54707
s(g117
g5546
g865
tp54928
g21055
sS'push_current'
p54929
(icodemend.demo.code_suggest
Element
p54930
(dp54931
g10
I3
sg11
S'push the current view limits and position onto the stack'
p54932
sg12
Vpush_current
p54933
sg14
(lp54934
sg2
g54929
sbs(S'set_ylim'
p54935
g32273
tp54936
g32254
s(S'blend_overlay'
p54937
g46604
tp54938
g46599
sS'get_siblings'
p54939
(icodemend.demo.code_suggest
Element
p54940
(dp54941
g10
I0
sg11
S'returns all of the items joined with a , including itself .'
p54942
sg12
Vget_siblings
p54943
sg14
(lp54944
g26322
asg2
g54939
sbs(g766
g102
g46643
tp54945
g46639
s(g332
g389
g33703
tp54946
g33699
s(g101
g118
g21960
tp54947
g21956
s(S'bxp'
p54948
g41625
tp54949
g41620
s(g101
S'c'
g21546
tp54950
g21542
s(g101
g102
g21847
tp54951
g21843
sS'strftime'
p54952
(icodemend.demo.code_suggest
Element
p54953
(dp54954
g10
I29
sg11
S'refer to documentation for datetime.strftime .'
p54955
sg12
Vstrftime
p54956
sg14
(lp54957
(icodemend.demo.code_suggest
Element
p54958
(dp54959
g10
I0
sg11
S'fmt is a strftime ( ) format string .'
p54960
sg12
Vstrftime.fmt
p54961
sg14
(lp54962
sg2
S'fmt'
p54963
sbasg2
g54952
sbsS'embedTTF'
p54964
(icodemend.demo.code_suggest
Element
p54965
(dp54966
g10
I0
sg11
S'embed the ttf font from the named file into the document .'
p54967
sg12
VembedTTF
p54968
sg14
(lp54969
sg2
g54964
sbs(g117
g4163
g11079
tp54970
g11075
s(S'plot_date'
p54971
g20057
tp54972
g20052
s(S'get_cursor_props'
p54973
g53806
tp54974
g53801
sS'stop_rasterizing'
p54975
(icodemend.demo.code_suggest
Element
p54976
(dp54977
g10
I0
sg11
S'used in mixedmoderenderer .'
p54978
sg12
Vstop_rasterizing
p54979
sg14
(lp54980
sg2
g54975
sbs(S'magnitude_spectrum'
p54981
g48008
tp54982
g48003
s(S'annotate'
p54983
S'rotation'
p54984
tp54985
(icodemend.demo.code_suggest
Element
p54986
(dp54987
g10
I5
sg11
S'set the rotation of the text'
p54988
sg12
Vannotate.rotation
p54989
sg14
(lp54990
g23815
ag24707
asg2
g54984
sbs(S'complex_spectrum'
p54991
g32914
tp54992
g32909
s(S'phase_spectrum'
p54993
g52469
tp54994
g52464
s(S'plot_date'
p54995
g20069
tp54996
g20064
s(S'arrow'
p54997
g2748
tp54998
g2743
s(g332
g627
g46923
tp54999
g46919
s(g1003
S'meanline'
p55000
g438
tp55001
g19605
s(S'rec_groupby'
p55002
S'dtype'
p55003
tp55004
(icodemend.demo.code_suggest
Element
p55005
(dp55006
g10
I0
sg11
S'return record array has dtype names for each attribute name in the groupby argument , with the associated group values , and for each outname name in the stats argument , with the associated stat summary output .'
p55007
sg12
Vrec_groupby.dtype
p55008
sg14
(lp55009
sg2
g55003
sbs(S'candlestick2_ochl'
p55010
S'alpha'
p55011
tp55012
(icodemend.demo.code_suggest
Element
p55013
(dp55014
g10
I0
sg11
S'bar transparency'
p55015
sg12
Vcandlestick2_ochl.alpha
p55016
sg14
(lp55017
sg2
g55011
sbs(S'contourf'
p55018
g46756
tp55019
g46751
s(g2250
g38222
g30831
tp55020
g30827
s(g766
g5025
S'8'
tp55021
g46664
s(g5640
g16843
g11996
tp55022
g11992
sS'get_transformed_clip_path_and_affine'
p55023
(icodemend.demo.code_suggest
Element
p55024
(dp55025
g10
I0
sg11
S'return the clip path with the non-affine part of its transformation applied , and the remaining affine part of its transformation .'
p55026
sg12
Vget_transformed_clip_path_and_affine
p55027
sg14
(lp55028
sg2
g55023
sbs(S'eventplot'
p55029
g23583
tp55030
g23578
sS'set_mask'
p55031
(icodemend.demo.code_suggest
Element
p55032
(dp55033
g10
I2
sg11
S'set or clear the mask array .'
p55034
sg12
Vset_mask
p55035
sg14
(lp55036
sg2
g55031
sbs(S'add_axes'
p55037
S'ymargin'
p55038
tp55039
(icodemend.demo.code_suggest
Element
p55040
(dp55041
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p55042
sg12
Vadd_axes.ymargin
p55043
sg14
(lp55044
sg2
g55038
sbs(g766
g666
g3988
tp55045
g3984
s(S'tripcolor'
p55046
S'y'
tp55047
(icodemend.demo.code_suggest
Element
p55048
(dp55049
g10
I0
sg11
S'x and y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for c[i,j ] has corners at :|||note that the column index corresponds to the x - coordinate , and the row index corresponds to y ; for details , see the grid orientation section below .'
p55050
sg12
Vtripcolor.y
p55051
sg14
(lp55052
sg2
S'y'
sbs(g1170
g132
S"'g'"
p55053
tp55054
(icodemend.demo.code_suggest
Element
p55055
(dp55056
g10
I4
sg11
S''
sg12
Vhist.color.'g'
p55057
sg14
(lp55058
sg2
g55053
sbs(g6146
g8210
S'9'
tp55059
g3048
s(S'fill_between'
p55060
g45948
tp55061
g45943
s(S'eventplot'
p55062
g23427
tp55063
g23422
s(g16
S'error_kw'
p55064
g5184
tp55065
g5180
s(g324
g785
g9681
tp55066
g9677
s(S'grid'
p55067
g50692
tp55068
g50687
s(S'axhline'
p55069
g3471
tp55070
g3454
s(S'bar'
p55071
g46515
tp55072
g46419
s(g5640
g5641
g11931
tp55073
g11927
s(S'margins'
p55074
g42703
tp55075
g42698
s(S'fill'
p55076
S'ymargin'
p55077
tp55078
(icodemend.demo.code_suggest
Element
p55079
(dp55080
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p55081
sg12
Vfill.ymargin
p55082
sg14
(lp55083
sg2
g55077
sbs(g4371
g666
g17616
tp55084
g17612
s(S'pcolor'
p55085
g49547
tp55086
g49542
s(g16
g132
g46452
tp55087
g46448
s(S'angle_spectrum'
p55088
g19001
tp55089
g18996
s(S'barh'
p55090
S'hatch'
p55091
tp55092
(icodemend.demo.code_suggest
Element
p55093
(dp55094
g10
I0
sg11
S'set the hatching pattern'
p55095
sg12
Vbarh.hatch
p55096
sg14
(lp55097
sg2
g55091
sbs(g109
g3075
S'300'
p55098
tp55099
(icodemend.demo.code_suggest
Element
p55100
(dp55101
g10
I21
sg11
S''
sg12
Vsavefig.dpi.300
p55102
sg14
(lp55103
sg2
g55098
sbs(g117
g4340
g29584
tp55104
g29580
s(g6217
g132
S'c'
tp55105
g2440
s(S'bxp'
p55106
g41637
tp55107
g41632
s(g514
g8538
g44119
tp55108
g44115
s(S'vlines'
p55109
g53912
tp55110
g53907
s(g93
g4800
g25519
tp55111
g25515
s(S'semilogx'
p55112
g38983
tp55113
g38978
s(S'imshow'
p55114
g9988
tp55115
g9983
s(S'barh'
p55116
S'caplines'
p55117
tp55118
(icodemend.demo.code_suggest
Element
p55119
(dp55120
g10
I0
sg11
S'returns ( plotline , caplines , barlinecols ) :'
p55121
sg12
Vbarh.caplines
p55122
sg14
(lp55123
sg2
g55117
sbs(g93
g4800
g25374
tp55124
g25370
s(S'cohere'
p55125
g43771
tp55126
g43766
sS'fill'
p55127
(icodemend.demo.code_suggest
Element
p55128
(dp55129
g10
I50
sg11
S'plot filled polygons .'
p55130
sg12
Vfill
p55131
sg14
(lp55132
g32384
ag1215
ag23958
a(icodemend.demo.code_suggest
Element
p55133
(dp55134
g10
I3
sg11
S'set whether to fill the patch'
p55135
sg12
Vfill.fill
p55136
sg14
(lp55137
g34252
a(icodemend.demo.code_suggest
Element
p55138
(dp55139
g10
I1
sg11
S''
sg12
Vfill.fill.True
p55140
sg14
(lp55141
sg2
g438
sbasg2
S'fill'
p55142
sbag42945
ag53999
ag22924
ag16438
a(icodemend.demo.code_suggest
Element
p55143
(dp55144
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p55145
sg12
Vfill._interpolation_steps
p55146
sg14
(lp55147
sg2
S'_interpolation_steps'
p55148
sbag18586
a(icodemend.demo.code_suggest
Element
p55149
(dp55150
g10
I0
sg11
S'anchor'
p55151
sg12
Vfill.anchor
p55152
sg14
(lp55153
sg2
S'anchor'
p55154
sbag25133
ag26332
ag50041
ag52562
ag5886
ag24988
ag44585
ag50430
ag20143
ag32761
ag51772
ag35516
ag2912
ag22996
ag34749
ag53846
a(icodemend.demo.code_suggest
Element
p55155
(dp55156
g10
I0
sg11
S'sets the ( group ) id for the artist'
p55157
sg12
Vfill.gid
p55158
sg14
(lp55159
sg2
S'gid'
p55160
sbag35625
ag44766
ag35605
ag35508
ag44946
a(icodemend.demo.code_suggest
Element
p55161
(dp55162
g10
I0
sg11
S'set the axes position with'
p55163
sg12
Vfill.position
p55164
sg14
(lp55165
sg2
S'position'
p55166
sba(icodemend.demo.code_suggest
Element
p55167
(dp55168
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p55169
sg12
Vfill.prop_cycle
p55170
sg14
(lp55171
sg2
S'prop_cycle'
p55172
sbag44015
ag43648
ag33637
ag31553
ag37623
ag15872
ag41036
ag35886
ag43622
ag47761
ag51362
ag37129
ag38317
ag41216
a(icodemend.demo.code_suggest
Element
p55173
(dp55174
g10
I0
sg11
S'set the data limits for the xaxis'
p55175
sg12
Vfill.xlim
p55176
sg14
(lp55177
sg2
S'xlim'
p55178
sbag12465
ag51253
ag50328
a(icodemend.demo.code_suggest
Element
p55179
(dp55180
g10
I0
sg11
S'set the x ticks with list of ticks'
p55181
sg12
Vfill.xticks
p55182
sg14
(lp55183
sg2
S'xticks'
p55184
sbag22621
ag6619
ag44284
ag882
ag55079
a(icodemend.demo.code_suggest
Element
p55185
(dp55186
g10
I0
sg11
S'set the scaling of the y-axis'
p55187
sg12
Vfill.yscale
p55188
sg14
(lp55189
sg2
S'yscale'
p55190
sbag16390
a(icodemend.demo.code_suggest
Element
p55191
(dp55192
g10
I0
sg11
S'set the y ticks with list of ticks'
p55193
sg12
Vfill.yticks
p55194
sg14
(lp55195
sg2
S'yticks'
p55196
sbasg2
g55127
sbs(g245
g140
g30423
tp55197
g30419
s(S'errorbar'
p55198
S'picker'
p55199
tp55200
(icodemend.demo.code_suggest
Element
p55201
(dp55202
g10
I0
sg11
S'sets the event picker details for the line .|||set the epsilon for picking used by this artist'
p55203
sg12
Verrorbar.picker
p55204
sg14
(lp55205
sg2
g55199
sbs(S'phase_spectrum'
p55206
g52403
tp55207
g52398
s(S'tripcolor'
p55208
S'shading'
p55209
tp55210
(icodemend.demo.code_suggest
Element
p55211
(dp55212
g10
I1
sg11
S"if ' faceted ' , a black grid is drawn around each rectangle ; if ' flat ' , edges are not drawn . default is ' flat ' , contrary to matlab . this kwarg is deprecated ; please use ' edgecolors ' instead : shading='flat ' - - edgecolors='none ' shading='faceted - - edgecolors='k '|||shading may be ' flat ' ( the default ) or ' gouraud ' . if shading is ' flat ' and c values are defined at points , the color values used for each triangle are from the mean c of the triangle 's three points . if shading is ' gouraud ' then color values must be defined at points ."
p55213
sg12
Vtripcolor.shading
p55214
sg14
(lp55215
g8686
asg2
g55209
sbsS'ion'
p55216
(icodemend.demo.code_suggest
Element
p55217
(dp55218
g10
I136
sg11
S'turn interactive mode on .'
p55219
sg12
Vion
p55220
sg14
(lp55221
sg2
g55216
sbs(g252
g21101
g14578
tp55222
g14574
s(S'set_xticklabels'
p55223
S'x'
tp55224
g17272
sS'center'
p55225
(icodemend.demo.code_suggest
Element
p55226
(dp55227
g10
I1
sg11
S'center and optionally standardize the data using the mean and sigma from training set a'
p55228
sg12
Vcenter
p55229
sg14
(lp55230
sg2
g55225
sbs(S'set_xticklabels'
p55231
g17121
tp55232
g17116
s(g8266
g19538
g37285
tp55233
g37281
s(S'csd'
p55234
g51569
tp55235
g51564
s(S'cohere'
p55236
g43700
tp55237
g43695
s(S'axhspan'
p55238
g24459
tp55239
g24454
s(S'set_xticklabels'
p55240
g17312
tp55241
g17307
s(g452
g4274
g865
tp55242
g12118
s(g117
g118
g28464
tp55243
g28460
s(g7484
S'yscale'
p55244
g22313
tp55245
g22309
s(S'annotate'
p55246
S'title'
p55247
tp55248
(icodemend.demo.code_suggest
Element
p55249
(dp55250
g10
I0
sg11
S'set a title for the axes .'
p55251
sg12
Vannotate.title
p55252
sg14
(lp55253
sg2
g55247
sbs(g324
g785
g9402
tp55254
g9398
s(g109
g3075
S'100'
p55255
tp55256
(icodemend.demo.code_suggest
Element
p55257
(dp55258
g10
I23
sg11
S''
sg12
Vsavefig.dpi.100
p55259
sg14
(lp55260
sg2
g55255
sbs(g452
g118
S"'B'"
p55261
tp55262
(icodemend.demo.code_suggest
Element
p55263
(dp55264
g10
I1
sg11
S''
sg12
Verrorbar.label.'B'
p55265
sg14
(lp55266
sg2
g55261
sbs(S'hist2d'
p55267
g42186
tp55268
g42181
s(S'errorbar'
p55269
S'xticks'
p55270
tp55271
(icodemend.demo.code_suggest
Element
p55272
(dp55273
g10
I0
sg11
S'set the x ticks with list of ticks'
p55274
sg12
Verrorbar.xticks
p55275
sg14
(lp55276
sg2
g55270
sbs(g117
g132
g28750
tp55277
g28746
s(S'suptitle'
p55278
S'x'
tp55279
(icodemend.demo.code_suggest
Element
p55280
(dp55281
g10
I2
sg11
S'the x location of the text in figure coords|||set the x position of the text'
p55282
sg12
Vsuptitle.x
p55283
sg14
(lp55284
g24142
a(icodemend.demo.code_suggest
Element
p55285
(dp55286
g10
I1
sg11
S''
sg12
Vsuptitle.x.0/45
p55287
sg14
(lp55288
sg2
S'0.45'
p55289
sbasg2
S'x'
sbs(S'csd'
p55290
g51521
tp55291
g51516
s(g958
g959
S'2'
tp55292
g22878
s(S'remove_tool'
p55293
g46592
tp55294
g46587
s(g4355
g45931
g45941
tp55295
g45937
s(g139
g1283
g1929
tp55296
g1925
sS'have_units'
p55297
(icodemend.demo.code_suggest
Element
p55298
(dp55299
g10
I0
sg11
S'return true if units are set on the x or y axes'
p55300
sg12
Vhave_units
p55301
sg14
(lp55302
g11123
a(icodemend.demo.code_suggest
Element
p55303
(dp55304
g10
I0
sg11
S'return true if units are set on the x or y axes'
p55305
sg12
Vhave_units.y
p55306
sg14
(lp55307
sg2
S'y'
sbasg2
g55297
sbs(S'cohere'
p55308
g43878
tp55309
g43873
s(g101
g325
g13630
tp55310
g21813
s(S'savefig'
p55311
S'dpi'
p55312
tp55313
(icodemend.demo.code_suggest
Element
p55314
(dp55315
g10
I118
sg11
S"the resolution in dots per inch . if none it will default to the value savefig.dpi in the matplotlibrc file . if ' figure ' it will set the dpi to be the value of the figure ."
p55316
sg12
Vsavefig.dpi
p55317
sg14
(lp55318
g55257
ag55100
a(icodemend.demo.code_suggest
Element
p55319
(dp55320
g10
I9
sg11
S''
sg12
Vsavefig.dpi.600
p55321
sg14
(lp55322
sg2
S'600'
p55323
sbag34434
ag19327
a(icodemend.demo.code_suggest
Element
p55324
(dp55325
g10
I6
sg11
S''
sg12
Vsavefig.dpi.80
p55326
sg14
(lp55327
sg2
S'80'
p55328
sbag52514
ag46046
ag4068
a(icodemend.demo.code_suggest
Element
p55329
(dp55330
g10
I3
sg11
S''
sg12
Vsavefig.dpi.150
p55331
sg14
(lp55332
sg2
S'150'
p55333
sbag6992
a(icodemend.demo.code_suggest
Element
p55334
(dp55335
g10
I3
sg11
S''
sg12
Vsavefig.dpi.500
p55336
sg14
(lp55337
sg2
S'500'
p55338
sba(icodemend.demo.code_suggest
Element
p55339
(dp55340
g10
I2
sg11
S''
sg12
Vsavefig.dpi.144
p55341
sg14
(lp55342
sg2
S'144'
p55343
sbag14777
ag46298
ag29973
a(icodemend.demo.code_suggest
Element
p55344
(dp55345
g10
I1
sg11
S''
sg12
Vsavefig.dpi.128
p55346
sg14
(lp55347
sg2
S'128'
p55348
sbag33357
ag23039
ag35041
asg2
g55312
sbsS'add'
p55349
(icodemend.demo.code_suggest
Element
p55350
(dp55351
g10
I23
sg11
S'add axes a , with key key , to the stack , and return the stack . add a simple sankey diagram with flows at the same hierarchical level .'
p55352
sg12
Vadd
p55353
sg14
(lp55354
(icodemend.demo.code_suggest
Element
p55355
(dp55356
g10
I5
sg11
S'the flows are placed along the top of the diagram from the inside out in order of their index within the flows list or array . they are placed along the sides of the diagram from the top down and along the bottom from the outside in .'
p55357
sg12
Vadd.flows
p55358
sg14
(lp55359
g33429
ag10939
a(icodemend.demo.code_suggest
Element
p55360
(dp55361
g10
I1
sg11
S''
sg12
Vadd.flows.[0/5, 0/1, 0/1, (-0/1), (-0/1), (-0/1), (-0/1), (-0/3)]
p55362
sg14
(lp55363
sg2
S'[0.5, 0.1, 0.1, (-0.1), (-0.1), (-0.1), (-0.1), (-0.3)]'
p55364
sbag34500
a(icodemend.demo.code_suggest
Element
p55365
(dp55366
g10
I1
sg11
S''
sg12
Vadd.flows.v
p55367
sg14
(lp55368
sg2
S'v'
sbasg2
S'flows'
p55369
sbag54591
a(icodemend.demo.code_suggest
Element
p55370
(dp55371
g10
I4
sg11
S'the indexing parameters ( prior and connect ) are zero-based .'
p55372
sg12
Vadd.connect
p55373
sg14
(lp55374
(icodemend.demo.code_suggest
Element
p55375
(dp55376
g10
I1
sg11
S''
sg12
Vadd.connect.(0, 0)
p55377
sg14
(lp55378
sg2
S'(0, 0)'
p55379
sba(icodemend.demo.code_suggest
Element
p55380
(dp55381
g10
I1
sg11
S''
sg12
Vadd.connect.(2, 0)
p55382
sg14
(lp55383
sg2
S'(2, 0)'
p55384
sbag41881
ag54556
asg2
S'connect'
p55385
sba(icodemend.demo.code_suggest
Element
p55386
(dp55387
g10
I4
sg11
S'the indexing parameters ( prior and connect ) are zero-based .'
p55388
sg12
Vadd.prior
p55389
sg14
(lp55390
g2817
a(icodemend.demo.code_suggest
Element
p55391
(dp55392
g10
I1
sg11
S''
sg12
Vadd.prior.1
p55393
sg14
(lp55394
sg2
S'1'
sbasg2
S'prior'
p55395
sbag6656
ag6591
a(icodemend.demo.code_suggest
Element
p55396
(dp55397
g10
I0
sg11
S"add axes a , with key key , to the stack , and return the stack .|||if a is already on the stack , do n't add it again , but return none ."
p55398
sg12
Vadd.a
p55399
sg14
(lp55400
sg2
S'a'
sbag23295
ag48142
a(icodemend.demo.code_suggest
Element
p55401
(dp55402
g10
I0
sg11
S'anchor'
p55403
sg12
Vadd.anchor
p55404
sg14
(lp55405
sg2
S'anchor'
p55406
sbag49024
ag13245
ag19428
ag50289
ag24135
ag50993
ag18366
ag5075
ag45544
ag16826
ag52159
ag33172
ag37328
ag47779
a(icodemend.demo.code_suggest
Element
p55407
(dp55408
g10
I0
sg11
S'set the patch edge color'
p55409
sg12
Vadd.edgecolor
p55410
sg14
(lp55411
sg2
S'edgecolor'
p55412
sbag46077
ag26674
ag33765
a(icodemend.demo.code_suggest
Element
p55413
(dp55414
g10
I0
sg11
S'sets the ( group ) id for the artist'
p55415
sg12
Vadd.gid
p55416
sg14
(lp55417
sg2
S'gid'
p55418
sbag33732
ag53216
ag47817
a(icodemend.demo.code_suggest
Element
p55419
(dp55420
g10
I0
sg11
S'set the patch linestyle'
p55421
sg12
Vadd.linestyle
p55422
sg14
(lp55423
sg2
S'linestyle'
p55424
sba(icodemend.demo.code_suggest
Element
p55425
(dp55426
g10
I0
sg11
S'set the patch linewidth in points'
p55427
sg12
Vadd.linewidth
p55428
sg14
(lp55429
sg2
S'linewidth'
p55430
sba(icodemend.demo.code_suggest
Element
p55431
(dp55432
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p55433
sg12
Vadd.path_effects
p55434
sg14
(lp55435
sg2
S'path_effects'
p55436
sbag48512
ag22530
ag40365
a(icodemend.demo.code_suggest
Element
p55437
(dp55438
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p55439
sg12
Vadd.rasterized
p55440
sg14
(lp55441
sg2
S'rasterized'
p55442
sbag40524
ag42403
ag7011
ag41736
ag51754
ag41788
ag3014
ag13091
a(icodemend.demo.code_suggest
Element
p55443
(dp55444
g10
I0
sg11
S'set the label for the xaxis .'
p55445
sg12
Vadd.xlabel
p55446
sg14
(lp55447
sg2
S'xlabel'
p55448
sba(icodemend.demo.code_suggest
Element
p55449
(dp55450
g10
I0
sg11
S'set the data limits for the xaxis'
p55451
sg12
Vadd.xlim
p55452
sg14
(lp55453
sg2
S'xlim'
p55454
sbag6230
ag2212
ag37320
a(icodemend.demo.code_suggest
Element
p55455
(dp55456
g10
I0
sg11
S'set the x ticks with list of ticks'
p55457
sg12
Vadd.xticks
p55458
sg14
(lp55459
sg2
S'xticks'
p55460
sbag42525
ag17466
ag12689
a(icodemend.demo.code_suggest
Element
p55461
(dp55462
g10
I0
sg11
S'set the scaling of the y-axis'
p55463
sg12
Vadd.yscale
p55464
sg14
(lp55465
sg2
S'yscale'
p55466
sba(icodemend.demo.code_suggest
Element
p55467
(dp55468
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p55469
sg12
Vadd.yticklabels
p55470
sg14
(lp55471
sg2
S'yticklabels'
p55472
sbag31210
ag23161
asg2
g55349
sbs(S'barbs'
p55473
S'prop_cycle'
p55474
tp55475
(icodemend.demo.code_suggest
Element
p55476
(dp55477
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p55478
sg12
Vbarbs.prop_cycle
p55479
sg14
(lp55480
sg2
g55474
sbs(g1003
g1004
S'0'
tp55481
g10951
s(S'axvline'
p55482
S'markerfacecoloralt'
p55483
tp55484
(icodemend.demo.code_suggest
Element
p55485
(dp55486
g10
I0
sg11
S'set the alternate marker face color .'
p55487
sg12
Vaxvline.markerfacecoloralt
p55488
sg14
(lp55489
sg2
g55483
sbs(S'get_xheight'
p55490
g2313
tp55491
g2308
s(g93
g8768
g1944
tp55492
(icodemend.demo.code_suggest
Element
p55493
(dp55494
g10
I1
sg11
S''
sg12
Vannotate.clip_on.False
p55495
sg14
(lp55496
sg2
g1944
sbs(S'barbs'
p55497
S'X'
tp55498
(icodemend.demo.code_suggest
Element
p55499
(dp55500
g10
I0
sg11
S'all arguments may be 1-d or 2-d arrays or sequences . if x and y are absent , they will be generated as a uniform grid . if u and v are 2-d arrays but x and y are 1-d , and if len(x ) and len(y ) match the column and row dimensions of u , then x and y will be expanded with numpy.meshgrid ( ) .|||u , v , c may be masked arrays , but masked x , y are not supported at present .'
p55501
sg12
Vbarbs.X
p55502
sg14
(lp55503
sg2
S'X'
sbs(S'num2date'
p55504
S'one'
p55505
tp55506
(icodemend.demo.code_suggest
Element
p55507
(dp55508
g10
I0
sg11
S'x is a float value which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 utc plus one . the addition of one here is a historical artifact . also , note that the gregorian calendar is assumed ; this is not universal practice . for details , see the module docstring .'
p55509
sg12
Vnum2date.one
p55510
sg14
(lp55511
sg2
g55505
sbs(S'phase_spectrum'
p55512
g52421
tp55513
g52416
s(S'phase_spectrum'
p55514
g52457
tp55515
g52452
s(S'figtext'
p55516
g11305
tp55517
g11300
s(S'loglog'
p55518
g53667
tp55519
g53662
s(S'angle_spectrum'
p55520
g18786
tp55521
g18781
s(g93
g161
S'(6, 0)'
p55522
tp55523
(icodemend.demo.code_suggest
Element
p55524
(dp55525
g10
I1
sg11
S''
sg12
Vannotate.xy.(6, 0)
p55526
sg14
(lp55527
sg2
g55522
sbs(g117
g118
S'l'
tp55528
g27479
s(g117
g4340
g29564
tp55529
g29560
sS'get_name'
p55530
(icodemend.demo.code_suggest
Element
p55531
(dp55532
g10
I8
sg11
S'return the font name as string return the name of the font that best matches the font properties .'
p55533
sg12
Vget_name
p55534
sg14
(lp55535
sg2
g55530
sbsS'get_autoscale_on'
p55536
(icodemend.demo.code_suggest
Element
p55537
(dp55538
g10
I0
sg11
S'get whether autoscaling is applied for both axes on plot commands'
p55539
sg12
Vget_autoscale_on
p55540
sg14
(lp55541
sg2
g55536
sbs(S'add'
p55542
g55460
tp55543
g55455
s(S'axhspan'
p55544
g24286
tp55545
g24281
s(g117
g35879
g29621
tp55546
g29617
sS'get_fontconfig_fonts'
p55547
(icodemend.demo.code_suggest
Element
p55548
(dp55549
g10
I1
sg11
S'grab a list of all the fonts that are being tracked by fontconfig by making a system call to fc-list .'
p55550
sg12
Vget_fontconfig_fonts
p55551
sg14
(lp55552
sg2
g55547
sbs(S'axhline'
p55553
g3549
tp55554
g3544
s(g324
g785
g9517
tp55555
g9513
s(S'add'
p55556
g55472
tp55557
g55467
s(S'text'
p55558
g48470
tp55559
g48465
s(S'errorbar'
p55560
S'pickradius'
p55561
tp55562
(icodemend.demo.code_suggest
Element
p55563
(dp55564
g10
I0
sg11
S'sets the pick radius used for containment tests'
p55565
sg12
Verrorbar.pickradius
p55566
sg14
(lp55567
sg2
g55561
sbs(g5562
g515
S'n'
tp55568
g10876
s(g117
g118
g27909
tp55569
g27905
s(g452
g453
g7264
tp55570
g7260
s(g125
S'x'
S'j'
tp55571
g34804
s(S'errorbar'
p55572
S'title'
p55573
tp55574
(icodemend.demo.code_suggest
Element
p55575
(dp55576
g10
I0
sg11
S'set a title for the axes .'
p55577
sg12
Verrorbar.title
p55578
sg14
(lp55579
sg2
g55573
sbs(g332
g132
g41460
tp55580
g41456
s(g117
g118
g27661
tp55581
g27657
s(S'loglog'
p55582
g53679
tp55583
g53674
s(S'set_xticklabels'
p55584
g17247
tp55585
g17242
s(S'vlines'
p55586
g53906
tp55587
g53901
s(S'set_cursor_props'
p55588
g34217
tp55589
g34212
s(S'prctile'
p55590
S'p'
tp55591
g10720
s(S'plot_day_summary2_ochl'
p55592
g41180
tp55593
g41175
s(S'figtext'
p55594
g11323
tp55595
g11318
s(S'loglog'
p55596
g53572
tp55597
g53567
s(g324
g785
g9586
tp55598
g9582
sS'is_closed_polygon'
p55599
(icodemend.demo.code_suggest
Element
p55600
(dp55601
g10
I0
sg11
S'tests whether first and last object in a sequence are the same .'
p55602
sg12
Vis_closed_polygon
p55603
sg14
(lp55604
sg2
g55599
sbs(g93
g4800
g25529
tp55605
g25525
s(g47354
g132
g11168
tp55606
g11164
s(g324
g325
g9138
tp55607
g9134
s(S'psd'
p55608
g37101
tp55609
g37096
s(g46358
S'labelpos'
p55610
g36665
tp55611
g36661
sg20969
(icodemend.demo.code_suggest
Element
p55612
(dp55613
g10
I0
sg11
S''
sg12
VSimpleLineShadow
p55614
sg14
(lp55615
g20972
ag35903
a(icodemend.demo.code_suggest
Element
p55616
(dp55617
g10
I0
sg11
S'the offset to apply to the path , in points .'
p55618
sg12
VSimpleLineShadow.offset
p55619
sg14
(lp55620
sg2
S'offset'
p55621
sba(icodemend.demo.code_suggest
Element
p55622
(dp55623
g10
I0
sg11
S'a scale factor to apply to the rgbface color if shadow_rgbface is none . default is 0.3 .'
p55624
sg12
VSimpleLineShadow.rho
p55625
sg14
(lp55626
sg2
S'rho'
p55627
sba(icodemend.demo.code_suggest
Element
p55628
(dp55629
g10
I0
sg11
S"the shadow color . default is black . a value of none takes the original artist 's color with a scale factor of rho ."
p55630
sg12
VSimpleLineShadow.shadow_color
p55631
sg14
(lp55632
sg2
S'shadow_color'
p55633
sbasg2
g20969
sbs(g5052
g13338
g39853
tp55634
g39849
s(S'loglog'
p55635
g53697
tp55636
g53692
s(g101
S'c'
g21592
tp55637
g21588
s(S'csd'
p55638
g51581
tp55639
g51576
s(S'local_over_kwdict'
p55640
g51861
tp55641
g51856
s(S'semilogy'
p55642
g39223
tp55643
g39218
s(S'semilogy'
p55644
g39164
tp55645
g39151
s(g252
g8210
g216
tp55646
g212
s(g16
g132
g24646
tp55647
g46511
s(S'set_xticklabels'
p55648
g17103
tp55649
g17098
s(g944
g132
g35720
tp55650
g35716
s(g139
g140
g1712
tp55651
g1708
s(S'PackerBase'
p55652
g4315
tp55653
g4310
s(S'bxp'
p55654
g41613
tp55655
g41608
s(S'get_height_char'
p55656
S'c'
tp55657
g31894
s(g117
g118
g27719
tp55658
g27715
sS'set_offset'
p55659
(icodemend.demo.code_suggest
Element
p55660
(dp55661
g10
I0
sg11
S'set offset of the container .'
p55662
sg12
Vset_offset
p55663
sg14
(lp55664
sg2
g55659
sbs(g117
g102
g29206
tp55665
g29202
s(g101
S'c'
S'c'
tp55666
g21283
s(S'pcolormesh'
p55667
S'None'
p55668
tp55669
(icodemend.demo.code_suggest
Element
p55670
(dp55671
g10
I0
sg11
S"vmin and vmax are used in conjunction with norm to normalize luminance data . if either is none , it is autoscaled to the respective min or max of the color array c . if not none , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||a matplotlib.colors.normalize instance is used to scale luminance data to 0,1 . if none , defaults to normalize ( ) .|||color sequence ] if none , the rc setting is used by default . if ' none ' , edges will not be visible . if ' face ' , edges will have the same color as the faces . an mpl color or sequence of colors will set the edge color|||a matplotlib.colors.colormap instance . if none , use rc settings .|||the alpha blending value"
p55672
sg12
Vpcolormesh.None
p55673
sg14
(lp55674
sg2
g55668
sbs(S'set_fontproperties'
p55675
g26479
tp55676
g26474
s(g5112
g5113
g1944
tp55677
g15916
s(S'subplot'
p55678
g49648
tp55679
g49628
s(S'cross_from_below'
p55680
S'x'
tp55681
g48895
s(g125
g126
S'-1.2'
p55682
tp55683
(icodemend.demo.code_suggest
Element
p55684
(dp55685
g10
I2
sg11
S''
sg12
Vaxvline.ymin.-1/2
p55686
sg14
(lp55687
sg2
g55682
sbs(g1003
g4651
g33026
tp55688
g33022
s(S'axvspan'
p55689
g54641
tp55690
g54632
sS'autoscale_None'
p55691
(icodemend.demo.code_suggest
Element
p55692
(dp55693
g10
I3
sg11
S'autoscale the scalar limits on the norm instance using the current array , changing only limits that are none'
p55694
sg12
Vautoscale_None
p55695
sg14
(lp55696
sg2
g55691
sbs(g101
S'c'
g19697
tp55697
g21569
s(S'magnitude_spectrum'
p55698
g48002
tp55699
g47997
s(S'stem'
p55700
g40850
tp55701
g40845
s(S'add_tools_to_container'
p55702
g25654
tp55703
g25649
s(g332
g333
g25037
tp55704
g25033
s(g117
g132
g28693
tp55705
g28689
s(g117
g118
g28444
tp55706
g28440
s(S'semilogy'
p55707
g39181
tp55708
g39176
s(S'fill'
p55709
g55184
tp55710
g55179
s(S'add_subplot'
p55711
g47501
tp55712
g47496
sS'write_png'
p55713
(icodemend.demo.code_suggest
Element
p55714
(dp55715
g10
I1
sg11
S'write the image to png file with fname'
p55716
sg12
Vwrite_png
p55717
sg14
(lp55718
sg2
g55713
sbs(g117
g4274
g24638
tp55719
g29023
s(g93
g161
S'(v[0], 0.4)'
p55720
tp55721
(icodemend.demo.code_suggest
Element
p55722
(dp55723
g10
I2
sg11
S''
sg12
Vannotate.xy.(v[0], 0/4)
p55724
sg14
(lp55725
sg2
g55720
sbs(S'xkcd'
p55726
g52671
tp55727
g52661
s(S'barbs'
p55728
S'agg_filter'
p55729
tp55730
(icodemend.demo.code_suggest
Element
p55731
(dp55732
g10
I0
sg11
S'set agg_filter fuction .'
p55733
sg12
Vbarbs.agg_filter
p55734
sg14
(lp55735
sg2
g55729
sbs(S'plot_date'
p55736
g20045
tp55737
g20040
sS'leave_notify_event'
p55738
(icodemend.demo.code_suggest
Element
p55739
(dp55740
g10
I0
sg11
S'backend derived classes should call this function when leaving canvas'
p55741
sg12
Vleave_notify_event
p55742
sg14
(lp55743
sg2
g55738
sbsS'rec_append_fields'
p55744
(icodemend.demo.code_suggest
Element
p55745
(dp55746
g10
I0
sg11
S'return a new record array with field names populated with data from arrays in arrs .'
p55747
sg12
Vrec_append_fields
p55748
sg14
(lp55749
g51764
a(icodemend.demo.code_suggest
Element
p55750
(dp55751
g10
I0
sg11
S'return a new record array with field names populated with data from arrays in arrs . if appending a single field , then names , arrs and dtypes do not have to be lists . they can just be the values themselves .'
p55752
sg12
Vrec_append_fields.dtypes
p55753
sg14
(lp55754
sg2
S'dtypes'
p55755
sbag26410
asg2
g55744
sbs(g16512
g9039
g21094
tp55756
g21090
s(g139
g1283
S'6'
tp55757
g1917
s(g117
g118
g28459
tp55758
g28455
s(g16
g17
g41978
tp55759
g41974
sS'minutes'
p55760
(icodemend.demo.code_suggest
Element
p55761
(dp55762
g10
I0
sg11
S'return minutes as days .'
p55763
sg12
Vminutes
p55764
sg14
(lp55765
sg2
g55760
sbs(S'step'
p55766
g40885
tp55767
g40880
s(g245
g140
g30273
tp55768
g30269
s(g2250
g17
g26370
tp55769
g26366
s(S'hexbin'
p55770
g25873
tp55771
g25868
s(S'gca'
p55772
g54097
tp55773
g54092
sS'pie'
p55774
(icodemend.demo.code_suggest
Element
p55775
(dp55776
g10
I69
sg11
S'plot a pie chart .'
p55777
sg12
Vpie
p55778
sg14
(lp55779
g19485
ag22491
a(icodemend.demo.code_suggest
Element
p55780
(dp55781
g10
I16
sg11
S'a sequence of matplotlib color args through which the pie chart will cycle .'
p55782
sg12
Vpie.colors
p55783
sg14
(lp55784
g35171
a(icodemend.demo.code_suggest
Element
p55785
(dp55786
g10
I1
sg11
S''
sg12
Vpie.colors.('b', 'g', 'r', 'y')
p55787
sg14
(lp55788
sg2
S"('b', 'g', 'r', 'y')"
p55789
sbag26598
a(icodemend.demo.code_suggest
Element
p55790
(dp55791
g10
I1
sg11
S''
sg12
Vpie.colors.color_set
p55792
sg14
(lp55793
sg2
S'color_set'
p55794
sbag34298
asg2
S'colors'
p55795
sbag51816
a(icodemend.demo.code_suggest
Element
p55796
(dp55797
g10
I12
sg11
S'if not none , is a len(x ) array which specifies the fraction of the radius with which to offset each wedge .'
p55798
sg12
Vpie.explode
p55799
sg14
(lp55800
g46091
asg2
S'explode'
p55801
sbag50088
ag50244
a(icodemend.demo.code_suggest
Element
p55802
(dp55803
g10
I4
sg11
S'the radial distance at which the pie labels are drawn'
p55804
sg12
Vpie.labeldistance
p55805
sg14
(lp55806
(icodemend.demo.code_suggest
Element
p55807
(dp55808
g10
I2
sg11
S''
sg12
Vpie.labeldistance.1/2
p55809
sg14
(lp55810
sg2
S'1.2'
p55811
sbag44548
ag40054
asg2
S'labeldistance'
p55812
sba(icodemend.demo.code_suggest
Element
p55813
(dp55814
g10
I0
sg11
S'specify fractions direction , clockwise or counterclockwise .|||draw a shadow beneath the pie .|||plot axes frame with the chart .'
p55815
sg12
Vpie.False
p55816
sg14
(lp55817
sg2
S'False'
p55818
sba(icodemend.demo.code_suggest
Element
p55819
(dp55820
g10
I0
sg11
S"if not none , is a string or function used to label the wedges with their numeric value . the label will be placed inside the wedge . if it is a format string , the label will be fmt%pct . if it is a function , it will be called .|||if not none , rotates the start of the pie chart by angle degrees counterclockwise from the x-axis .|||if not none , is a len(x ) array which specifies the fraction of the radius with which to offset each wedge .|||dict of arguments passed to the wedge objects making the pie . for example , you can pass in wedgeprops = { ' linewidth ' :3 } to set the width of the wedge border lines equal to 3 . for more details , look at the doc/arguments of the wedge object . by default clip_on=false .|||a sequence of strings providing the labels for each wedge|||a sequence of matplotlib color args through which the pie chart will cycle .|||dict of arguments to pass to the text objects ."
p55821
sg12
Vpie.None
p55822
sg14
(lp55823
sg2
S'None'
p55824
sbag32935
a(icodemend.demo.code_suggest
Element
p55825
(dp55826
g10
I0
sg11
S'specify fractions direction , clockwise or counterclockwise .'
p55827
sg12
Vpie.counterclock
p55828
sg14
(lp55829
sg2
S'counterclock'
p55830
sbag45234
ag26489
a(icodemend.demo.code_suggest
Element
p55831
(dp55832
g10
I0
sg11
S"dict of arguments passed to the wedge objects making the pie . for example , you can pass in wedgeprops = { ' linewidth ' :3 } to set the width of the wedge border lines equal to 3 . for more details , look at the doc/arguments of the wedge object . by default clip_on=false ."
p55833
sg12
Vpie.wedgeprops
p55834
sg14
(lp55835
sg2
S'wedgeprops'
p55836
sbag27158
asg2
g55774
sbs(S'quiver'
p55837
g30967
tp55838
g30962
s(S'withSimplePatchShadow'
p55839
g38276
tp55840
g38271
s(g101
S'c'
g21442
tp55841
g21438
s(g452
g453
g7226
tp55842
g7222
s(g117
g132
g28834
tp55843
g28830
s(S'fill'
p55844
g55196
tp55845
g55191
s(S'update'
p55846
g34033
tp55847
g34028
s(S'parse_yahoo_historical_ochl'
p55848
g33048
tp55849
g33043
sS'xscale'
p55850
(icodemend.demo.code_suggest
Element
p55851
(dp55852
g10
I26
sg11
S'set the scaling of the x - axis .'
p55853
sg12
Vxscale
p55854
sg14
(lp55855
(icodemend.demo.code_suggest
Element
p55856
(dp55857
g10
I0
sg11
S'set the scaling of the x - axis .'
p55858
sg12
Vxscale.x
p55859
sg14
(lp55860
sg2
S'x'
sbasg2
g55850
sbs(S'cleaned'
p55861
S'clip'
p55862
tp55863
(icodemend.demo.code_suggest
Element
p55864
(dp55865
g10
I0
sg11
S'if not none , must be a four-tuple ( x1 , y1 , x2 , y2 ) defining a rectangle in which to clip the path .'
p55866
sg12
Vcleaned.clip
p55867
sg14
(lp55868
sg2
g55862
sbsS'get_default_weight'
p55869
(icodemend.demo.code_suggest
Element
p55870
(dp55871
g10
I0
sg11
S'return the default font weight .'
p55872
sg12
Vget_default_weight
p55873
sg14
(lp55874
sg2
g55869
sbs(g139
g140
g1647
tp55875
g1643
s(S'cohere_pairs'
p55876
S'X'
tp55877
g44374
s(S'errorbar'
p55878
S'position'
p55879
tp55880
(icodemend.demo.code_suggest
Element
p55881
(dp55882
g10
I0
sg11
S'set the axes position with'
p55883
sg12
Verrorbar.position
p55884
sg14
(lp55885
sg2
g55879
sbs(S'get_xlim'
p55886
S'right'
p55887
tp55888
(icodemend.demo.code_suggest
Element
p55889
(dp55890
g10
I0
sg11
S'get the x-axis range [ left , right ]'
p55891
sg12
Vget_xlim.right
p55892
sg14
(lp55893
sg2
g55887
sbs(S'semilogx'
p55894
S'x'
tp55895
g39086
sS'errorbar'
p55896
(icodemend.demo.code_suggest
Element
p55897
(dp55898
g10
I106
sg11
S'plot an errorbar graph .'
p55899
sg12
Verrorbar
p55900
sg14
(lp55901
g7161
ag43212
ag31819
a(icodemend.demo.code_suggest
Element
p55902
(dp55903
g10
I16
sg11
S'set the label to s for auto legend .'
p55904
sg12
Verrorbar.label
p55905
sg14
(lp55906
(icodemend.demo.code_suggest
Element
p55907
(dp55908
g10
I1
sg11
S''
sg12
Verrorbar.label.'A'
p55909
sg14
(lp55910
sg2
S"'A'"
p55911
sbag55263
ag47018
a(icodemend.demo.code_suggest
Element
p55912
(dp55913
g10
I1
sg11
S''
sg12
Verrorbar.label.'Input data'
p55914
sg14
(lp55915
sg2
S"'Input data'"
p55916
sbag6684
ag10106
ag10044
ag35225
ag8262
ag27023
ag18543
a(icodemend.demo.code_suggest
Element
p55917
(dp55918
g10
I1
sg11
S''
sg12
Verrorbar.label.'size 2'
p55919
sg14
(lp55920
sg2
S"'size 2'"
p55921
sbag45164
asg2
S'label'
p55922
sbag51800
a(icodemend.demo.code_suggest
Element
p55923
(dp55924
g10
I13
sg11
S'a matplotlib color arg which gives the color the errorbar lines ; if none , use the color of the line connecting the markers .'
p55925
sg12
Verrorbar.ecolor
p55926
sg14
(lp55927
g36543
ag50485
ag1152
ag12841
ag7846
a(icodemend.demo.code_suggest
Element
p55928
(dp55929
g10
I1
sg11
S''
sg12
Verrorbar.ecolor.'y'
p55930
sg14
(lp55931
sg2
S"'y'"
p55932
sbag36748
a(icodemend.demo.code_suggest
Element
p55933
(dp55934
g10
I1
sg11
S''
sg12
Verrorbar.ecolor.time
p55935
sg14
(lp55936
sg2
g7996
sbasg2
S'ecolor'
p55937
sbag12103
ag38785
ag42533
ag53454
ag42252
ag42998
ag51009
a(icodemend.demo.code_suggest
Element
p55938
(dp55939
g10
I2
sg11
S'an alias kwarg to markeredgewidth ( a.k.a. - mew ) . this setting is a more sensible name for the property that controls the thickness of the error bar cap in points . for backwards compatibility , if mew or markeredgewidth are given , then they will over-ride capthick . this may change in future releases .'
p55940
sg12
Verrorbar.capthick
p55941
sg14
(lp55942
g42664
a(icodemend.demo.code_suggest
Element
p55943
(dp55944
g10
I1
sg11
S''
sg12
Verrorbar.capthick.None
p55945
sg14
(lp55946
sg2
g865
sbasg2
S'capthick'
p55947
sbag54286
ag35388
ag54447
ag15630
a(icodemend.demo.code_suggest
Element
p55948
(dp55949
g10
I1
sg11
S'set the drawstyle of the plot'
p55950
sg12
Verrorbar.drawstyle
p55951
sg14
(lp55952
g53983
asg2
S'drawstyle'
p55953
sba(icodemend.demo.code_suggest
Element
p55954
(dp55955
g10
I1
sg11
S'set the marker edge color|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p55956
sg12
Verrorbar.markeredgecolor
p55957
sg14
(lp55958
g47379
asg2
S'markeredgecolor'
p55959
sbag6566
ag36180
ag35895
ag44880
ag10168
a(icodemend.demo.code_suggest
Element
p55960
(dp55961
g10
I1
sg11
S'plot x versus y with error deltas in yerr and xerr . vertical errorbars are plotted if yerr is not none . horizontal errorbars are plotted if xerr is not none .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y . plot lines and/or markers to the axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . for example , each of the following is legal :|||if not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||plot x versus y with error deltas in yerr and xerr . vertical errorbars are plotted if yerr is not none . horizontal errorbars are plotted if xerr is not none .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is true .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y .|||if x and/or y is 2-dimensional , then the corresponding columns will be plotted .'
p55962
sg12
Verrorbar.y
p55963
sg14
(lp55964
sg2
S'y'
sbag48882
a(icodemend.demo.code_suggest
Element
p55965
(dp55966
g10
I0
sg11
S'a matplotlib color arg which gives the color the errorbar lines ; if none , use the color of the line connecting the markers .'
p55967
sg12
Verrorbar.None
p55968
sg14
(lp55969
sg2
S'None'
p55970
sba(icodemend.demo.code_suggest
Element
p55971
(dp55972
g10
I0
sg11
S'these arguments can be used to indicate that a value gives only upper/lower limits . in that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . to use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||if true , will plot the errorbars above the plot symbols . default is below .'
p55973
sg12
Verrorbar.True
p55974
sg14
(lp55975
sg2
S'True'
p55976
sbag50385
ag50023
ag38595
a(icodemend.demo.code_suggest
Element
p55977
(dp55978
g10
I0
sg11
S'anchor'
p55979
sg12
Verrorbar.anchor
p55980
sg14
(lp55981
sg2
S'anchor'
p55982
sbag44871
ag43394
ag12224
ag26838
ag37264
ag46809
a(icodemend.demo.code_suggest
Element
p55983
(dp55984
g10
I0
sg11
S'returns ( plotline , caplines , barlinecols ) :'
p55985
sg12
Verrorbar.caplines
p55986
sg14
(lp55987
sg2
S'caplines'
p55988
sbag50153
ag50925
ag14965
ag53317
a(icodemend.demo.code_suggest
Element
p55989
(dp55990
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p55991
sg12
Verrorbar.codes
p55992
sg14
(lp55993
sg2
S'codes'
p55994
sbag33364
ag32636
ag38451
a(icodemend.demo.code_suggest
Element
p55995
(dp55996
g10
I0
sg11
S'set the cap style for dashed linestyles'
p55997
sg12
Verrorbar.dash_capstyle
p55998
sg14
(lp55999
sg2
S'dash_capstyle'
p56000
sbag45056
a(icodemend.demo.code_suggest
Element
p56001
(dp56002
g10
I0
sg11
S'set the dash sequence , sequence of dashes with on off ink in points .'
p56003
sg12
Verrorbar.dashes
p56004
sg14
(lp56005
sg2
S'dashes'
p56006
sbag23136
a(icodemend.demo.code_suggest
Element
p56007
(dp56008
g10
I0
sg11
S"set the marker fill style ; ' full ' means fill the whole marker ."
p56009
sg12
Verrorbar.fillstyle
p56010
sg14
(lp56011
sg2
S'fillstyle'
p56012
sbag52914
ag5924
ag17899
ag46385
ag40801
ag40569
ag51206
ag45839
a(icodemend.demo.code_suggest
Element
p56013
(dp56014
g10
I0
sg11
S'where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p56015
sg12
Verrorbar.mec
p56016
sg14
(lp56017
sg2
S'mec'
p56018
sbag39654
ag55201
ag55563
ag46868
ag55881
a(icodemend.demo.code_suggest
Element
p56019
(dp56020
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p56021
sg12
Verrorbar.prop_cycle
p56022
sg14
(lp56023
sg2
S'prop_cycle'
p56024
sbag37771
ag34518
ag40230
ag37943
ag32225
ag36787
a(icodemend.demo.code_suggest
Element
p56025
(dp56026
g10
I0
sg11
S'sets the snap setting which may be'
p56027
sg12
Verrorbar.snap
p56028
sg14
(lp56029
sg2
S'snap'
p56030
sbag40970
ag38875
ag55575
a(icodemend.demo.code_suggest
Element
p56031
(dp56032
g10
I0
sg11
S'set the transformation instance used by this artist'
p56033
sg12
Verrorbar.transform
p56034
sg14
(lp56035
sg2
S'transform'
p56036
sba(icodemend.demo.code_suggest
Element
p56037
(dp56038
g10
I0
sg11
S'sets the url for the artist'
p56039
sg12
Verrorbar.url
p56040
sg14
(lp56041
sg2
S'url'
p56042
sba(icodemend.demo.code_suggest
Element
p56043
(dp56044
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p56045
sg12
Verrorbar.vertices
p56046
sg14
(lp56047
sg2
S'vertices'
p56048
sbag5729
ag40298
ag40744
ag40413
ag16180
ag47067
a(icodemend.demo.code_suggest
Element
p56049
(dp56050
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p56051
sg12
Verrorbar.xticklabels
p56052
sg14
(lp56053
sg2
S'xticklabels'
p56054
sbag55272
ag23303
ag38092
ag54148
ag51837
a(icodemend.demo.code_suggest
Element
p56055
(dp56056
g10
I0
sg11
S'set the scaling of the y-axis'
p56057
sg12
Verrorbar.yscale
p56058
sg14
(lp56059
sg2
S'yscale'
p56060
sbag20866
ag51709
asg2
g55896
sbs(S'plot_date'
p56061
g19769
tp56062
g19760
s(S'pcolorfast'
p56063
g33816
tp56064
g33811
s(g6217
g102
g2473
tp56065
g2469
s(g6146
g8210
g3056
tp56066
g3052
s(S'plot_date'
p56067
g20027
tp56068
g20022
s(g125
g132
S"'red'"
p56069
tp56070
(icodemend.demo.code_suggest
Element
p56071
(dp56072
g10
I2
sg11
S''
sg12
Vaxvline.color.'red'
p56073
sg14
(lp56074
sg2
g56069
sbsS'make_axes_gridspec'
p56075
(icodemend.demo.code_suggest
Element
p56076
(dp56077
g10
I0
sg11
S'resize and reposition a parent axes , and return a child axes suitable for a colorbar .'
p56078
sg12
Vmake_axes_gridspec
p56079
sg14
(lp56080
g32845
ag50440
asg2
g56075
sbsS'get_label_position'
p56081
(icodemend.demo.code_suggest
Element
p56082
(dp56083
g10
I0
sg11
S'return the label position ( left or right ) return the label position ( top or bottom )'
p56084
sg12
Vget_label_position
p56085
sg14
(lp56086
sg2
g56081
sbs(S'cohere'
p56087
g43831
tp56088
g43826
s(g16
g110
g36092
tp56089
g36088
s(S'thetagrids'
p56090
g53428
tp56091
g53423
sS'get_xticks'
p56092
(icodemend.demo.code_suggest
Element
p56093
(dp56094
g10
I12
sg11
S'return the x ticks as a list of locations'
p56095
sg12
Vget_xticks
p56096
sg14
(lp56097
sg2
g56092
sbs(g5112
g2251
g15930
tp56098
g15926
sS'get_text'
p56099
(icodemend.demo.code_suggest
Element
p56100
(dp56101
g10
I14
sg11
S'get text get the text as string'
p56102
sg12
Vget_text
p56103
sg14
(lp56104
sg2
g56099
sbs(S'figtext'
p56105
g11419
tp56106
g11414
s(S'set_yticklabels'
p56107
g18040
tp56108
g18035
s(S'axhspan'
p56109
g24507
tp56110
g24502
s(S'cohere'
p56111
g43867
tp56112
g43862
s(S'format_cursor_data'
p56113
S'cursor data'
p56114
tp56115
(icodemend.demo.code_suggest
Element
p56116
(dp56117
g10
I0
sg11
S'return cursor data string formatted .'
p56118
sg12
Vformat_cursor_data.cursor data
p56119
sg14
(lp56120
sg2
g56114
sbs(S'csd'
p56121
g51539
tp56122
g51534
s(S'grid'
p56123
g50680
tp56124
g50675
s(g332
g132
g41441
tp56125
g41437
s(S'errorbar'
p56126
g55976
tp56127
g55971
s(g1003
S'usermedians'
p56128
g865
tp56129
g39794
s(S'HPacker'
p56130
g36394
tp56131
g36389
s(S'subplots'
p56132
g2107
tp56133
g2102
s(S'axhspan'
p56134
g24304
tp56135
g24299
s(S'cohere'
p56136
g43694
tp56137
g43689
s(g324
g515
g865
tp56138
g9908
s(S'axhspan'
p56139
g24316
tp56140
g24311
s(g38323
g37229
g37229
tp56141
g37225
sS'set_rotation'
p56142
(icodemend.demo.code_suggest
Element
p56143
(dp56144
g10
I25
sg11
S'set the rotation of the text'
p56145
sg12
Vset_rotation
p56146
sg14
(lp56147
sg2
g56142
sbs(g93
g161
S'(days[0], impressions[0])'
p56148
tp56149
(icodemend.demo.code_suggest
Element
p56150
(dp56151
g10
I1
sg11
S''
sg12
Vannotate.xy.(days[0], impressions[0])
p56152
sg14
(lp56153
sg2
g56148
sbsS'set_pickradius'
p56154
(icodemend.demo.code_suggest
Element
p56155
(dp56156
g10
I0
sg11
S'sets the pick radius used for containment tests set the depth of the axis used by the picker'
p56157
sg12
Vset_pickradius
p56158
sg14
(lp56159
sg2
g56154
sbs(S'grid'
p56160
g50704
tp56161
g50699
s(S'gca'
p56162
g54025
tp56163
g54020
s(g245
g140
g30188
tp56164
g30184
s(g139
g1283
g1857
tp56165
g1909
s(g117
g132
g21314
tp56166
g28786
s(g43926
g7032
g7032
tp56167
(icodemend.demo.code_suggest
Element
p56168
(dp56169
g10
I1
sg11
S''
sg12
Vfrom_levels_and_colors.colors.colors
p56170
sg14
(lp56171
sg2
g7032
sbs(g324
g515
g9916
tp56172
g9912
s(g93
g161
S'(2, 5)'
p56173
tp56174
(icodemend.demo.code_suggest
Element
p56175
(dp56176
g10
I1
sg11
S''
sg12
Vannotate.xy.(2, 5)
p56177
sg14
(lp56178
sg2
g56173
sbs(S'figtext'
p56179
g11514
tp56180
g11509
s(S'text'
p56181
g48404
tp56182
g48399
s(g5673
g132
g49271
tp56183
g49267
s(g93
g161
S'(dt, 24)'
p56184
tp56185
(icodemend.demo.code_suggest
Element
p56186
(dp56187
g10
I1
sg11
S''
sg12
Vannotate.xy.(dt, 24)
p56188
sg14
(lp56189
sg2
g56184
sbs(S'barh'
p56190
S'barlinecols'
p56191
tp56192
(icodemend.demo.code_suggest
Element
p56193
(dp56194
g10
I0
sg11
S'returns ( plotline , caplines , barlinecols ) :'
p56195
sg12
Vbarh.barlinecols
p56196
sg14
(lp56197
sg2
g56191
sbs(g117
g118
g27531
tp56198
g27527
s(S'phase_spectrum'
p56199
g52331
tp56200
g52326
s(g139
g3075
g2065
tp56201
g2061
s(g117
g118
g28189
tp56202
g28185
s(g117
g118
g28159
tp56203
g28155
s(g125
g19538
g37567
tp56204
g37563
s(g6146
g6147
S'1'
tp56205
g14848
s(S'tricontour'
p56206
g1434
tp56207
g1429
s(g324
g785
g9591
tp56208
g9587
s(S'angle_spectrum'
p56209
g18702
tp56210
g18697
s(g1170
g118
S"'h1'"
p56211
tp56212
(icodemend.demo.code_suggest
Element
p56213
(dp56214
g10
I2
sg11
S''
sg12
Vhist.label.'h1'
p56215
sg14
(lp56216
sg2
g56211
sbs(g16
g453
g453
tp56217
g12769
s(S'annotate'
p56218
S'linespacing'
p56219
tp56220
(icodemend.demo.code_suggest
Element
p56221
(dp56222
g10
I1
sg11
S'set the line spacing as a multiple of the font size .'
p56223
sg12
Vannotate.linespacing
p56224
sg14
(lp56225
g38362
asg2
g56219
sbsS'axvline'
p56226
(icodemend.demo.code_suggest
Element
p56227
(dp56228
g10
I71
sg11
S'add a vertical line across the axes .'
p56229
sg12
Vaxvline
p56230
sg14
(lp56231
(icodemend.demo.code_suggest
Element
p56232
(dp56233
g10
I38
sg11
S'set the color of the line'
p56234
sg12
Vaxvline.color
p56235
sg14
(lp56236
g35947
ag20607
ag54102
ag411
ag748
ag8927
ag56071
ag24583
ag46242
ag51975
asg2
S'color'
p56237
sbag34785
a(icodemend.demo.code_suggest
Element
p56238
(dp56239
g10
I18
sg11
S'set the line width in points'
p56240
sg12
Vaxvline.linewidth
p56241
sg14
(lp56242
(icodemend.demo.code_suggest
Element
p56243
(dp56244
g10
I7
sg11
S''
sg12
Vaxvline.linewidth.2
p56245
sg14
(lp56246
sg2
S'2'
sbag41847
ag52720
a(icodemend.demo.code_suggest
Element
p56247
(dp56248
g10
I2
sg11
S''
sg12
Vaxvline.linewidth.5
p56249
sg14
(lp56250
sg2
S'5'
sbag51045
a(icodemend.demo.code_suggest
Element
p56251
(dp56252
g10
I1
sg11
S''
sg12
Vaxvline.linewidth.2/0
p56253
sg14
(lp56254
sg2
S'2.0'
p56255
sbasg2
S'linewidth'
p56256
sbag37548
a(icodemend.demo.code_suggest
Element
p56257
(dp56258
g10
I14
sg11
S'should be between 0 and 1 , 0 being the bottom of the plot , 1 the top of the plot .'
p56259
sg12
Vaxvline.ymin
p56260
sg14
(lp56261
(icodemend.demo.code_suggest
Element
p56262
(dp56263
g10
I8
sg11
S''
sg12
Vaxvline.ymin.0
p56264
sg14
(lp56265
sg2
S'0'
sbag55684
ag47398
ag128
ag44726
asg2
S'ymin'
p56266
sbag53829
ag39469
ag41202
ag35195
ag26264
ag41134
ag32504
ag44154
a(icodemend.demo.code_suggest
Element
p56267
(dp56268
g10
I0
sg11
S'true if line should be drawin with antialiased rendering'
p56269
sg12
Vaxvline.antialiased
p56270
sg14
(lp56271
sg2
S'antialiased'
p56272
sbag42673
ag4260
ag47146
ag12615
ag19159
ag45428
ag32066
ag33752
a(icodemend.demo.code_suggest
Element
p56273
(dp56274
g10
I0
sg11
S'set the cursor property as'
p56275
sg12
Vaxvline.cursor_props
p56276
sg14
(lp56277
sg2
S'cursor_props'
p56278
sba(icodemend.demo.code_suggest
Element
p56279
(dp56280
g10
I0
sg11
S'set the cap style for dashed linestyles'
p56281
sg12
Vaxvline.dash_capstyle
p56282
sg14
(lp56283
sg2
S'dash_capstyle'
p56284
sbag35154
ag42270
ag47308
ag38261
ag46407
ag8602
ag40354
ag32704
ag49108
ag13264
ag36425
ag3221
ag55485
ag52754
ag13455
a(icodemend.demo.code_suggest
Element
p56285
(dp56286
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p56287
sg12
Vaxvline.path_effects
p56288
sg14
(lp56289
sg2
S'path_effects'
p56290
sbag26905
ag23208
ag38046
a(icodemend.demo.code_suggest
Element
p56291
(dp56292
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p56293
sg12
Vaxvline.prop_cycle
p56294
sg14
(lp56295
sg2
S'prop_cycle'
p56296
sbag34088
ag41005
ag50752
ag34269
ag33408
ag48205
a(icodemend.demo.code_suggest
Element
p56297
(dp56298
g10
I0
sg11
S'set the join style for solid linestyles accepts'
p56299
sg12
Vaxvline.solid_joinstyle
p56300
sg14
(lp56301
sg2
S'solid_joinstyle'
p56302
sbag37455
ag54771
ag7042
ag15567
ag51672
a(icodemend.demo.code_suggest
Element
p56303
(dp56304
g10
I0
sg11
S'set the data np.array for x'
p56305
sg12
Vaxvline.xdata
p56306
sg14
(lp56307
sg2
S'xdata'
p56308
sbag34426
ag32520
ag26218
ag11750
ag26546
ag27307
ag25093
ag43591
ag41291
ag38552
ag35595
ag51792
ag45140
asg2
g56226
sbs(S'axhline'
p56309
g3717
tp56310
g3712
s(g38266
g38288
tp56311
g38283
s(g16
g132
g46477
tp56312
g46473
s(S'boxplot'
p56313
g39730
tp56314
g39721
s(S'phase_spectrum'
p56315
g52439
tp56316
g52434
sS'set_label_position'
p56317
(icodemend.demo.code_suggest
Element
p56318
(dp56319
g10
I30
sg11
S'set the label position ( top or bottom ) set the label position ( left or right )'
p56320
sg12
Vset_label_position
p56321
sg14
(lp56322
sg2
g56317
sbs(g8547
g23819
g22510
tp56323
g22506
sS'get_frame'
p56324
(icodemend.demo.code_suggest
Element
p56325
(dp56326
g10
I5
sg11
S'return the rectangle instance used to frame the legend'
p56327
sg12
Vget_frame
p56328
sg14
(lp56329
sg2
g56324
sbs(g139
g140
g1772
tp56330
g1768
s(S'loglog'
p56331
g53637
tp56332
g53632
s(S'phase_spectrum'
p56333
g52385
tp56334
g52380
sS'new_timer'
p56335
(icodemend.demo.code_suggest
Element
p56336
(dp56337
g10
I7
sg11
S'creates a new backend-specific subclass of backend_bases.timer .'
p56338
sg12
Vnew_timer
p56339
sg14
(lp56340
sg2
g56335
sbsS'changed'
p56341
(icodemend.demo.code_suggest
Element
p56342
(dp56343
g10
I2
sg11
S"call this whenever the mappable is changed to notify all the callbacksm listeners to the ' changed ' signal"
p56344
sg12
Vchanged
p56345
sg14
(lp56346
sg2
g56341
sbs(S'subplots'
p56347
g1930
tp56348
g1888
s(g93
g161
S"(f.get_value(i, 'x'), f.get_value(i, 'y'))"
p56349
tp56350
(icodemend.demo.code_suggest
Element
p56351
(dp56352
g10
I1
sg11
S''
sg12
Vannotate.xy.(f/get_value(i, 'x'), f/get_value(i, 'y'))
p56353
sg14
(lp56354
sg2
g56349
sbs(S'xticks'
p56355
g30595
tp56356
g30590
sS'get_text_width_height_descent'
p56357
(icodemend.demo.code_suggest
Element
p56358
(dp56359
g10
I0
sg11
S'get the width and height , and the offset from the bottom to the baseline ( descent ) , in display coords of the string s with fontproperties prop'
p56360
sg12
Vget_text_width_height_descent
p56361
sg14
(lp56362
sg2
g56357
sbs(S'contour'
p56363
g17748
tp56364
g17735
s(S'figtext'
p56365
g11293
tp56366
g11288
s(g101
S's'
S's'
tp56367
g7583
sS'attach_note'
p56368
(icodemend.demo.code_suggest
Element
p56369
(dp56370
g10
I0
sg11
S'add a new text note to the page to be saved next .'
p56371
sg12
Vattach_note
p56372
sg14
(lp56373
sg2
g56368
sbs(S'phase_spectrum'
p56374
g52379
tp56375
g52374
s(g139
g1283
S'3'
tp56376
g1897
s(S'set_yticklabels'
p56377
g18166
tp56378
g18161
s(g101
S's'
g7666
tp56379
g7662
s(g324
g785
g9422
tp56380
g9418
s(g16
g110
g36087
tp56381
g36083
sS'set_yticks'
p56382
(icodemend.demo.code_suggest
Element
p56383
(dp56384
g10
I178
sg11
S'set the y ticks with list of ticks'
p56385
sg12
Vset_yticks
p56386
sg14
(lp56387
g4909
ag8721
a(icodemend.demo.code_suggest
Element
p56388
(dp56389
g10
I0
sg11
S'sets the minor ticks if true'
p56390
sg12
Vset_yticks.True
p56391
sg14
(lp56392
sg2
S'True'
p56393
sba(icodemend.demo.code_suggest
Element
p56394
(dp56395
g10
I0
sg11
S'set the y ticks with list of ticks'
p56396
sg12
Vset_yticks.ticks
p56397
sg14
(lp56398
sg2
S'ticks'
p56399
sbasg2
g56382
sbs(S'Slider'
p56400
S'valfmt'
p56401
tp56402
(icodemend.demo.code_suggest
Element
p56403
(dp56404
g10
I6
sg11
S'used to format the slider value , fprint format string'
p56405
sg12
VSlider.valfmt
p56406
sg14
(lp56407
g46352
a(icodemend.demo.code_suggest
Element
p56408
(dp56409
g10
I1
sg11
S''
sg12
VSlider.valfmt.'%0/0f'
p56410
sg14
(lp56411
sg2
S"'%0.0f'"
p56412
sbasg2
g56401
sbsS'get_width_char'
p56413
(icodemend.demo.code_suggest
Element
p56414
(dp56415
g10
I0
sg11
S'get the width of the character from the character metric wx field'
p56416
sg12
Vget_width_char
p56417
sg14
(lp56418
sg2
g56413
sbs(S'step'
p56419
S'x'
tp56420
g40886
s(g6556
g118
g53877
tp56421
g53873
sS'push_state'
p56422
(icodemend.demo.code_suggest
Element
p56423
(dp56424
g10
I0
sg11
S'push a new state onto the stack which is just a copy of the current state .'
p56425
sg12
Vpush_state
p56426
sg14
(lp56427
sg2
g56422
sbs(g117
g118
g28064
tp56428
g28060
s(S'plotting'
p56429
g15778
tp56430
g15773
s(g8547
g26551
g50258
tp56431
g50254
s(S'table'
p56432
S'size_inches'
p56433
tp56434
(icodemend.demo.code_suggest
Element
p56435
(dp56436
g10
I0
sg11
S'set the figure size in inches ( 1in = = 2.54cm )'
p56437
sg12
Vtable.size_inches
p56438
sg14
(lp56439
sg2
g56433
sbsS'join'
p56440
(icodemend.demo.code_suggest
Element
p56441
(dp56442
g10
I79
sg11
S'join given arguments into the same set .'
p56443
sg12
Vjoin
p56444
sg14
(lp56445
sg2
g56440
sbs(g93
g161
S'(0, 1)'
p56446
tp56447
(icodemend.demo.code_suggest
Element
p56448
(dp56449
g10
I4
sg11
S''
sg12
Vannotate.xy.(0, 1)
p56450
sg14
(lp56451
sg2
g56446
sbs(S'draggable'
p56452
g44179
tp56453
g44174
s(g514
g325
g48175
tp56454
g48171
s(g582
S'y'
g3371
tp56455
g3367
s(S'pcolormesh'
p56456
S'vmin'
p56457
tp56458
(icodemend.demo.code_suggest
Element
p56459
(dp56460
g10
I15
sg11
S'vmin and vmax are used in conjunction with norm to normalize luminance data . if either is none , it is autoscaled to the respective min or max of the color array c . if not none , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .'
p56461
sg12
Vpcolormesh.vmin
p56462
sg14
(lp56463
(icodemend.demo.code_suggest
Element
p56464
(dp56465
g10
I4
sg11
S''
sg12
Vpcolormesh.vmin.0
p56466
sg14
(lp56467
sg2
S'0'
sbag53109
ag29986
a(icodemend.demo.code_suggest
Element
p56468
(dp56469
g10
I1
sg11
S''
sg12
Vpcolormesh.vmin.-1
p56470
sg14
(lp56471
sg2
S'-1'
p56472
sbag49323
ag36409
ag48867
ag15961
ag5001
asg2
g56457
sbs(g21163
g389
g17984
tp56473
g17980
s(S'pie'
p56474
g55836
tp56475
g55831
s(g252
g4340
g551
tp56476
g547
s(g26208
g11725
g438
tp56477
g32320
s(S'axvspan'
p56478
g54682
tp56479
g54677
s(S'title'
p56480
S'x'
tp56481
g35832
s(g6632
g966
g47430
tp56482
g47426
s(g1003
g4651
g33002
tp56483
g32998
s(g452
g4274
g12117
tp56484
g12113
s(S'quiverkey'
p56485
g36699
tp56486
g36694
sS'release_mouse'
p56487
(icodemend.demo.code_suggest
Element
p56488
(dp56489
g10
I1
sg11
S'release the mouse grab held by the axes , ax .'
p56490
sg12
Vrelease_mouse
p56491
sg14
(lp56492
sg2
g56487
sbsS'end'
p56493
(icodemend.demo.code_suggest
Element
p56494
(dp56495
g10
I5
sg11
S'finalize stream .'
p56496
sg12
Vend
p56497
sg14
(lp56498
sg2
g56493
sbs(g944
g132
g7032
tp56499
g35712
s(S'rec_drop_fields'
p56500
g11120
tp56501
g11115
sS'minorticks_off'
p56502
(icodemend.demo.code_suggest
Element
p56503
(dp56504
g10
I2
sg11
S'remove minor ticks from the axes . remove minor ticks from the current plot .'
p56505
sg12
Vminorticks_off
p56506
sg14
(lp56507
sg2
g56502
sbs(S'magnitude_spectrum'
p56508
g48050
tp56509
g48045
s(S'vlines'
p56510
g53888
tp56511
g53879
s(S'loglog'
p56512
g53583
tp56513
g53573
s(g16
g132
g46502
tp56514
g46498
s(g324
g102
g9961
tp56515
g9957
sS'get_data_ratio_log'
p56516
(icodemend.demo.code_suggest
Element
p56517
(dp56518
g10
I0
sg11
S'returns the aspect ratio of the raw data in log scale .'
p56519
sg12
Vget_data_ratio_log
p56520
sg14
(lp56521
sg2
g56516
sbsS'aliased_name'
p56522
(icodemend.demo.code_suggest
Element
p56523
(dp56524
g10
I0
sg11
S"return ' propname or alias ' if s has an alias , else return propname ."
p56525
sg12
Valiased_name
p56526
sg14
(lp56527
g46393
asg2
g56522
sbs(g117
g102
g29231
tp56528
g29227
s(S'poly_between'
p56529
g50360
tp56530
g50355
s(g4371
g8545
g1088
tp56531
g1084
s(S'barbs'
p56532
S'xlabel'
p56533
tp56534
(icodemend.demo.code_suggest
Element
p56535
(dp56536
g10
I0
sg11
S'set the label for the xaxis .'
p56537
sg12
Vbarbs.xlabel
p56538
sg14
(lp56539
sg2
g56533
sbsS'colormaps'
p56540
(icodemend.demo.code_suggest
Element
p56541
(dp56542
g10
I0
sg11
S'matplotlib provides a number of colormaps , and others can be added using register_cmap ( ) .'
p56543
sg12
Vcolormaps
p56544
sg14
(lp56545
sg2
g56540
sbs(g5424
g102
g50591
tp56546
g50587
s(g332
g8768
g438
tp56547
g44500
s(S'errorbar'
p56548
g55959
tp56549
g55954
s(g117
S'y'
g29453
tp56550
g29449
sS'set_linespacing'
p56551
(icodemend.demo.code_suggest
Element
p56552
(dp56553
g10
I0
sg11
S'set the line spacing as a multiple of the font size .'
p56554
sg12
Vset_linespacing
p56555
sg14
(lp56556
sg2
g56551
sbs(S'axvspan'
p56557
g54688
tp56558
g54683
s(S'hlines'
p56559
g5385
tp56560
g5380
s(S'arrow'
p56561
g2701
tp56562
g2696
s(S'errorbar'
p56563
g56006
tp56564
g56001
s(g245
g140
g1613
tp56565
g30569
s(S'step'
p56566
g40879
tp56567
g40874
s(g93
g94
g5521
tp56568
g5517
s(S'grid'
p56569
g50597
tp56570
g50572
s(S'axvline'
p56571
g56272
tp56572
g56267
s(S'set_yticks'
p56573
g56393
tp56574
g56388
s(g252
g4984
g14250
tp56575
g14246
sS'over'
p56576
(icodemend.demo.code_suggest
Element
p56577
(dp56578
g10
I1
sg11
S'call a function with hold(true ) .'
p56579
sg12
Vover
p56580
sg14
(lp56581
sg2
g56576
sbs(S'path_length'
p56582
S'X'
tp56583
(icodemend.demo.code_suggest
Element
p56584
(dp56585
g10
I0
sg11
S'where x is an m x n array or matrix . returns an array of length m consisting of the distance along the curve at each point ( i.e. , the rows of x ) .'
p56586
sg12
Vpath_length.X
p56587
sg14
(lp56588
sg2
S'X'
sbs(S'cohere'
p56589
g43801
tp56590
g43796
s(g125
S'x'
g34854
tp56591
g34850
sS'tick_left'
p56592
(icodemend.demo.code_suggest
Element
p56593
(dp56594
g10
I16
sg11
S'use ticks only on left'
p56595
sg12
Vtick_left
p56596
sg14
(lp56597
sg2
g56592
sbs(g101
S's'
S'5'
tp56598
g7579
sS'convert_xunits'
p56599
(icodemend.demo.code_suggest
Element
p56600
(dp56601
g10
I2
sg11
S'for artists in an axes , if the xaxis has units support , convert x using xaxis unit type'
p56602
sg12
Vconvert_xunits
p56603
sg14
(lp56604
g48535
asg2
g56599
sbs(g324
g785
g9651
tp56605
g9647
s(g965
g118
g37962
tp56606
g37958
sS'clf'
p56607
(icodemend.demo.code_suggest
Element
p56608
(dp56609
g10
I112
sg11
S'clear the figure . clear the current figure .'
p56610
sg12
Vclf
p56611
sg14
(lp56612
g48584
asg2
g56607
sbsS'stineman_interp'
p56613
(icodemend.demo.code_suggest
Element
p56614
(dp56615
g10
I0
sg11
S'given data vectors x and y , the slope vector yp and a new abscissa vector xi , the function stineman_interp ( ) uses stineman interpolation to calculate a vector yi corresponding to xi .'
p56616
sg12
Vstineman_interp
p56617
sg14
(lp56618
(icodemend.demo.code_suggest
Element
p56619
(dp56620
g10
I0
sg11
S'x is assumed to be sorted in increasing order .|||given data vectors x and y , the slope vector yp and a new abscissa vector xi , the function stineman_interp ( ) uses stineman interpolation to calculate a vector yi corresponding to xi .'
p56621
sg12
Vstineman_interp.x
p56622
sg14
(lp56623
sg2
S'x'
sbag31689
ag31641
ag35069
ag41098
asg2
g56613
sbsS'cla'
p56624
(icodemend.demo.code_suggest
Element
p56625
(dp56626
g10
I45
sg11
S'clear the current axes .'
p56627
sg12
Vcla
p56628
sg14
(lp56629
sg2
g56624
sbs(S'vlines'
p56630
g53894
tp56631
g53889
s(g252
g4340
g571
tp56632
g567
s(S'phase_spectrum'
p56633
g52307
tp56634
g52302
s(g117
g118
g28024
tp56635
g28020
s(g8266
g19538
S'1'
tp56636
g37277
s(g4371
g666
g17611
tp56637
g17607
sS'suptitle'
p56638
(icodemend.demo.code_suggest
Element
p56639
(dp56640
g10
I55
sg11
S'add a centered title to the figure .'
p56641
sg12
Vsuptitle
p56642
sg14
(lp56643
g55280
ag32574
ag42244
ag48627
ag54210
ag45306
ag42924
ag10607
asg2
g56638
sbs(S'draw_path_collection'
p56644
g45749
tp56645
g45744
s(S'annotate'
p56646
S'anchor'
p56647
tp56648
(icodemend.demo.code_suggest
Element
p56649
(dp56650
g10
I0
sg11
S'anchor'
p56651
sg12
Vannotate.anchor
p56652
sg14
(lp56653
sg2
g56647
sbs(S'segments_intersect'
p56654
g35367
tp56655
g35362
s(g101
g110
g16327
tp56656
g16323
s(S'cohere'
p56657
g43759
tp56658
g43754
sS'waitforbuttonpress'
p56659
(icodemend.demo.code_suggest
Element
p56660
(dp56661
g10
I6
sg11
S'blocking call to interact with the figure .'
p56662
sg12
Vwaitforbuttonpress
p56663
sg14
(lp56664
g51106
asg2
g56659
sbs(S'figtext'
p56665
g11579
tp56666
g11574
s(g245
g140
g30173
tp56667
g30169
s(S'volume_overlay2'
p56668
g45623
tp56669
g45618
s(S'semilogx'
p56670
g39031
tp56671
g39026
s(S'rgrids'
p56672
S'x'
tp56673
(icodemend.demo.code_suggest
Element
p56674
(dp56675
g10
I0
sg11
S'set the x position of the text'
p56676
sg12
Vrgrids.x
p56677
sg14
(lp56678
sg2
S'x'
sbs(S'grid'
p56679
g50698
tp56680
g50693
s(S'pcolor'
p56681
g49589
tp56682
g49584
s(g109
g3075
g55328
tp56683
g55324
s(g31242
g10759
S'1'
tp56684
g26646
s(g252
g253
g14176
tp56685
g14172
s(g245
g140
g30553
tp56686
g30549
s(g16
g17
g41983
tp56687
g41979
s(S'loglog'
p56688
g53709
tp56689
g53704
s(g1003
S'medianprops'
p56690
g10163
tp56691
g10159
s(S'pick'
p56692
g14701
tp56693
g14696
s(g252
S'columnspacing'
p56694
g14598
tp56695
g14594
s(g4371
g102
g17707
tp56696
g17703
s(S'set_xlabel'
p56697
g42813
tp56698
g42808
s(g245
g140
g30577
tp56699
g30573
s(g16
g17
g41988
tp56700
g41984
s(g452
g2364
g38794
tp56701
g38790
s(S'errorbar'
p56702
g56018
tp56703
g56013
s(S'semilogx'
p56704
g39079
tp56705
g39074
s(S'semilogy'
p56706
g39187
tp56707
g39182
s(g117
g2392
g29101
tp56708
g29097
s(g109
g32085
S'[xlabel]'
p56709
tp56710
(icodemend.demo.code_suggest
Element
p56711
(dp56712
g10
I1
sg11
S''
sg12
Vsavefig.bbox_extra_artists.[xlabel]
p56713
sg14
(lp56714
sg2
g56709
sbs(g582
g132
g3346
tp56715
g3342
s(S'magnitude_spectrum'
p56716
g48044
tp56717
g48039
s(g1170
g118
S"'A'"
p56718
tp56719
(icodemend.demo.code_suggest
Element
p56720
(dp56721
g10
I1
sg11
S''
sg12
Vhist.label.'A'
p56722
sg14
(lp56723
sg2
g56718
sbs(g5576
g17905
g16889
tp56724
g16885
s(g21163
g10118
g18027
tp56725
g18023
s(g4371
g15305
g17691
tp56726
g17687
sS'get_variant'
p56727
(icodemend.demo.code_suggest
Element
p56728
(dp56729
g10
I0
sg11
S'return the font variant . return the font variant as a string'
p56730
sg12
Vget_variant
p56731
sg14
(lp56732
sg2
g56727
sbs(S'arrow'
p56733
g2659
tp56734
g2654
s(g117
S'xdata'
p56735
g29785
tp56736
g29781
s(S'pcolor'
p56737
g49601
tp56738
g49596
s(S'magnitude_spectrum'
p56739
g48068
tp56740
g48063
s(g514
g4459
g45034
tp56741
g45030
sS'get_family'
p56742
(icodemend.demo.code_suggest
Element
p56743
(dp56744
g10
I0
sg11
S'return a list of font names that comprise the font family . return the list of font families used for font lookup'
p56745
sg12
Vget_family
p56746
sg14
(lp56747
sg2
g56742
sbs(S'figtext'
p56748
g11197
tp56749
g11192
s(S'contour'
p56750
g17734
tp56751
g17720
s(g4371
g325
g17565
tp56752
g17561
s(S'phase_spectrum'
p56753
g52463
tp56754
g52458
s(g125
g2392
S'5'
tp56755
g56247
s(S'set_position'
p56756
S'x'
tp56757
g1035
s(g4998
g4459
g56472
tp56758
g56468
s(S'magnitude_spectrum'
p56759
g47960
tp56760
g47955
s(g1170
g1257
g54171
tp56761
g54167
s(g117
g2392
g29067
tp56762
g29063
s(S'grid'
p56763
g50710
tp56764
g50705
s(S'table'
p56765
S'clip_path'
p56766
tp56767
(icodemend.demo.code_suggest
Element
p56768
(dp56769
g10
I0
sg11
S"set the artist 's clip path , which may be"
p56770
sg12
Vtable.clip_path
p56771
sg14
(lp56772
sg2
g56766
sbsS'get_major_ticks'
p56773
(icodemend.demo.code_suggest
Element
p56774
(dp56775
g10
I23
sg11
S'get the tick instances ; grow as necessary'
p56776
sg12
Vget_major_ticks
p56777
sg14
(lp56778
sg2
g56773
sbs(g8547
g7032
g55794
tp56779
g55790
s(g93
g4800
g25504
tp56780
g25500
s(S'figtext'
p56781
S'x'
tp56782
g11498
s(S'fill'
p56783
g55190
tp56784
g55185
s(S'axhline'
p56785
g3855
tp56786
g3850
s(S'angle_spectrum'
p56787
g18900
tp56788
g18895
s(g101
g110
g16337
tp56789
g16333
sS'get_fontconfig_pattern'
p56790
(icodemend.demo.code_suggest
Element
p56791
(dp56792
g10
I0
sg11
S"get a fontconfig pattern suitable for looking up the font as specified with fontconfig 's fc-match utility ."
p56793
sg12
Vget_fontconfig_pattern
p56794
sg14
(lp56795
sg2
g56790
sbsS'get_clip_rectangle'
p56796
(icodemend.demo.code_suggest
Element
p56797
(dp56798
g10
I0
sg11
S'return the clip rectangle as a bbox instance'
p56799
sg12
Vget_clip_rectangle
p56800
sg14
(lp56801
sg2
g56796
sbs(g2250
g30783
g30783
tp56802
g30779
s(g1003
g4651
S'x'
tp56803
g33027
sS'tripcolor'
p56804
(icodemend.demo.code_suggest
Element
p56805
(dp56806
g10
I4
sg11
S'create a pseudocolor plot of an unstructured triangular grid .'
p56807
sg12
Vtripcolor
p56808
sg14
(lp56809
g5985
ag34712
ag42170
ag55211
ag52849
a(icodemend.demo.code_suggest
Element
p56810
(dp56811
g10
I0
sg11
S'the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .'
p56812
sg12
Vtripcolor.C*(*y
p56813
sg14
(lp56814
sg2
S'C*(*y'
p56815
sbag26880
a(icodemend.demo.code_suggest
Element
p56816
(dp56817
g10
I0
sg11
S'if either or both of x and y are 1-d arrays or column vectors , they will be expanded as needed into the appropriate 2-d arrays , making a rectangular grid .|||matlab pcolor ( ) always discards the last row and column of c , but matplotlib displays the last row and column if x and y are not specified , or if x and y have one more row and column than c .|||the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .|||x , y and c may be masked arrays . if either c[i , j ] , or one of the vertices surrounding c[i,j ] ( x or y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||ideally the dimensions of x and y should be one greater than those of c ; if the dimensions are the same , then the last row and column of c will be ignored .|||x and y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for c[i,j ] has corners at :'
p56818
sg12
Vtripcolor.X
p56819
sg14
(lp56820
sg2
S'X'
sbag27351
ag24853
a(icodemend.demo.code_suggest
Element
p56821
(dp56822
g10
I0
sg11
S'the grid orientation follows the matlab convention : an array c with shape ( nrows , ncolumns ) is plotted with the column number as x and the row number as y , increasing up ; hence it is plotted the way the array would be printed , except that the y axis is reversed . that is , c is taken as c*(*y , x ) .'
p56823
sg12
Vtripcolor.ncolumns
p56824
sg14
(lp56825
sg2
S'ncolumns'
p56826
sbag50015
ag22475
a(icodemend.demo.code_suggest
Element
p56827
(dp56828
g10
I0
sg11
S'whether to snap the mesh to pixel boundaries . whether to snap the mesh to pixel boundaries .|||sets the snap setting which may be'
p56829
sg12
Vtripcolor.snap
p56830
sg14
(lp56831
sg2
S'snap'
p56832
sbag43067
ag53143
ag32172
ag55048
asg2
g56804
sbsS'new_frame_seq'
p56833
(icodemend.demo.code_suggest
Element
p56834
(dp56835
g10
I0
sg11
S'creates a new sequence of frame information .'
p56836
sg12
Vnew_frame_seq
p56837
sg14
(lp56838
sg2
g56833
sbs(g944
g102
S'0.3'
p56839
tp56840
(icodemend.demo.code_suggest
Element
p56841
(dp56842
g10
I4
sg11
S''
sg12
Vbarh.alpha.0/3
p56843
sg14
(lp56844
sg2
g56839
sbs(g26208
g489
g32272
tp56845
g32268
s(g252
g1010
g13956
tp56846
g13952
s(g117
g2392
g29111
tp56847
g29107
s(S'figtext'
p56848
g11174
tp56849
g11154
s(g16
g489
g46559
tp56850
g46555
s(S'pcolor'
p56851
g49511
tp56852
g49506
s(g6217
g132
g2414
tp56853
g2410
s(S'parse_afm'
p56854
S'dcmetrics'
p56855
tp56856
(icodemend.demo.code_suggest
Element
p56857
(dp56858
g10
I0
sg11
S'parse the adobe font metics file in file handle fh . return value is a ( dhead , dcmetrics , dkernpairs , dcomposite ) tuple where dhead is a _ parse_header ( ) dict , dcmetrics is a _ parse_composites ( ) dict , dkernpairs is a _ parse_kern_pairs ( ) dict ( possibly { } ) , and dcomposite is a _ parse_composites ( ) dict ( possibly { } )'
p56859
sg12
Vparse_afm.dcmetrics
p56860
sg14
(lp56861
sg2
g56855
sbsS'get_ylabel'
p56862
(icodemend.demo.code_suggest
Element
p56863
(dp56864
g10
I3
sg11
S'get the ylabel text string .'
p56865
sg12
Vget_ylabel
p56866
sg14
(lp56867
sg2
g56862
sbs(S'quotes_historical_yahoo_ochl'
p56868
S'asobject'
p56869
tp56870
(icodemend.demo.code_suggest
Element
p56871
(dp56872
g10
I0
sg11
S'see parse_yahoo_historical ( ) for explanation of output formats and the asobject and adjusted kwargs .'
p56873
sg12
Vquotes_historical_yahoo_ochl.asobject
p56874
sg14
(lp56875
sg2
g56869
sbs(S'iter_segments'
p56876
g42469
tp56877
g42464
s(g117
S'y'
g29483
tp56878
g29479
sS'set_minor_locator'
p56879
(icodemend.demo.code_suggest
Element
p56880
(dp56881
g10
I64
sg11
S'set the locator of the minor ticker'
p56882
sg12
Vset_minor_locator
p56883
sg14
(lp56884
sg2
g56879
sbs(g324
g325
g9183
tp56885
g9179
s(S'set_xticklabels'
p56886
g17061
tp56887
g17056
s(g252
g7452
g14266
tp56888
g14262
s(S'hillshade'
p56889
g6492
tp56890
g6487
s(S'quiverkey'
p56891
S'Q'
tp56892
g36667
s(S'hexbin'
p56893
g26022
tp56894
g26017
s(g117
g118
g27939
tp56895
g27935
s(g101
S's'
g7676
tp56896
g7672
s(g1170
g10211
g825
tp56897
g821
s(g5848
g46349
g56412
tp56898
g56408
s(S'plot_date'
p56899
g19775
tp56900
g19770
s(S'clabel'
p56901
g14884
tp56902
g14874
s(g324
g785
g9457
tp56903
g9453
s(g117
g118
g28004
tp56904
g28000
sS'get_visible'
p56905
(icodemend.demo.code_suggest
Element
p56906
(dp56907
g10
I10
sg11
S"return the artist 's visiblity"
p56908
sg12
Vget_visible
p56909
sg14
(lp56910
sg2
g56905
sbs(g117
g118
g28199
tp56911
g28195
sS'get_pagecount'
p56912
(icodemend.demo.code_suggest
Element
p56913
(dp56914
g10
I0
sg11
S'returns the current number of pages in the multipage pdf file .'
p56915
sg12
Vget_pagecount
p56916
sg14
(lp56917
sg2
g56912
sbs(S'plot_date'
p56918
g19937
tp56919
g19932
s(S'boxplot'
p56920
S'x'
tp56921
g39799
sS'to_polygons'
p56922
(icodemend.demo.code_suggest
Element
p56923
(dp56924
g10
I4
sg11
S'convert this path to a list of polygons .'
p56925
sg12
Vto_polygons
p56926
sg14
(lp56927
g53380
ag40819
asg2
g56922
sbs(g125
g126
S'0'
tp56928
g56262
s(g109
g8267
g44084
tp56929
g44080
s(S'add_axes'
p56930
S'agg_filter'
p56931
tp56932
(icodemend.demo.code_suggest
Element
p56933
(dp56934
g10
I0
sg11
S'set agg_filter fuction .'
p56935
sg12
Vadd_axes.agg_filter
p56936
sg14
(lp56937
sg2
g56931
sbs(S'fill'
p56938
g55172
tp56939
g55167
s(g93
g161
g33026
tp56940
(icodemend.demo.code_suggest
Element
p56941
(dp56942
g10
I1
sg11
S''
sg12
Vannotate.xy.pos
p56943
sg14
(lp56944
sg2
g33026
sbs(S'angle_spectrum'
p56945
g18828
tp56946
g18823
s(g5424
g132
g50560
tp56947
g50556
s(g117
g23011
g29658
tp56948
g29654
s(g117
g4163
S'7'
tp56949
g11013
sS'get_fontweight'
p56950
(icodemend.demo.code_suggest
Element
p56951
(dp56952
g10
I0
sg11
S'alias for get_weight'
p56953
sg12
Vget_fontweight
p56954
sg14
(lp56955
sg2
g56950
sbs(g10369
g3075
g26691
tp56956
g26687
s(g252
g1010
g13934
tp56957
g13930
sS'get_offsets'
p56958
(icodemend.demo.code_suggest
Element
p56959
(dp56960
g10
I13
sg11
S'return the offsets for the collection .'
p56961
sg12
Vget_offsets
p56962
sg14
(lp56963
sg2
g56958
sbsS'get_plot_commands'
p56964
(icodemend.demo.code_suggest
Element
p56965
(dp56966
g10
I0
sg11
S'get a sorted list of all of the plotting commands .'
p56967
sg12
Vget_plot_commands
p56968
sg14
(lp56969
sg2
g56964
sbs(S'eventplot'
p56970
g23499
tp56971
g23494
s(S'psd'
p56972
g37024
tp56973
g37019
s(g2182
g6694
S'1'
tp56974
g32425
s(S'string_width_height'
p56975
S'h'
tp56976
(icodemend.demo.code_suggest
Element
p56977
(dp56978
g10
I0
sg11
S'return the string width ( including kerning ) and string height as a ( w , h ) tuple .'
p56979
sg12
Vstring_width_height.h
p56980
sg14
(lp56981
sg2
S'h'
sbs(g452
g132
g31843
tp56982
g31839
s(S'quiver'
p56983
g30943
tp56984
g30938
s(S'to_mask'
p56985
g50909
tp56986
g50904
sS'savefig'
p56987
(icodemend.demo.code_suggest
Element
p56988
(dp56989
g10
I742
sg11
S'save the current figure .'
p56990
sg12
Vsavefig
p56991
sg14
(lp56992
g55314
ag46265
a(icodemend.demo.code_suggest
Element
p56993
(dp56994
g10
I61
sg11
S'one of the file extensions supported by the active backend . most backends support png , pdf , ps , eps and svg .'
p56995
sg12
Vsavefig.format
p56996
sg14
(lp56997
(icodemend.demo.code_suggest
Element
p56998
(dp56999
g10
I32
sg11
S''
sg12
Vsavefig.format.'png'
p57000
sg14
(lp57001
sg2
S"'png'"
p57002
sbag33545
ag19185
ag39407
a(icodemend.demo.code_suggest
Element
p57003
(dp57004
g10
I3
sg11
S''
sg12
Vsavefig.format.'eps'
p57005
sg14
(lp57006
sg2
S"'eps'"
p57007
sbag49669
ag33447
ag44277
ag34628
asg2
S'format'
p57008
sbag52234
ag44065
ag44507
ag31367
a(icodemend.demo.code_suggest
Element
p57009
(dp57010
g10
I5
sg11
S'a list of extra artists that will be considered when the tight bbox is calculated .'
p57011
sg12
Vsavefig.bbox_extra_artists
p57012
sg14
(lp57013
g37345
ag32088
ag50460
ag56711
asg2
S'bbox_extra_artists'
p57014
sbag54851
ag40462
ag45268
a(icodemend.demo.code_suggest
Element
p57015
(dp57016
g10
I0
sg11
S'specifies what figure is saved to file . if not specified , the active figure is saved . if a figure instance is provided , this figure is saved . if an int is specified , the figure instance to save is looked up by number .'
p57017
sg12
Vsavefig.figure: :class:`~matplotlib/figure/Figure` or int, optional
p57018
sg14
(lp57019
sg2
S'figure: :class:`~matplotlib.figure.Figure` or int, optional'
p57020
sbag31343
asg2
g56987
sbs(S'pts_to_poststep'
p57021
S'x'
tp57022
g32195
s(g452
g118
g55916
tp57023
g55912
s(g139
g140
g140
tp57024
g1614
s(g452
g4274
g12126
tp57025
g12122
s(g93
g4800
g25389
tp57026
g25385
s(S'axhline'
p57027
g3771
tp57028
g3766
s(S'add_axes'
p57029
S'yticks'
p57030
tp57031
(icodemend.demo.code_suggest
Element
p57032
(dp57033
g10
I1
sg11
S'set the y ticks with list of ticks'
p57034
sg12
Vadd_axes.yticks
p57035
sg14
(lp57036
(icodemend.demo.code_suggest
Element
p57037
(dp57038
g10
I1
sg11
S''
sg12
Vadd_axes.yticks.[]
p57039
sg14
(lp57040
sg2
S'[]'
p57041
sbasg2
g57030
sbsS'get_kern_dist_from_name'
p57042
(icodemend.demo.code_suggest
Element
p57043
(dp57044
g10
I0
sg11
S'return the kerning pair distance ( possibly 0 ) for chars name1 and name2'
p57045
sg12
Vget_kern_dist_from_name
p57046
sg14
(lp57047
(icodemend.demo.code_suggest
Element
p57048
(dp57049
g10
I0
sg11
S'return the kerning pair distance ( possibly 0 ) for chars name1 and name2'
p57050
sg12
Vget_kern_dist_from_name.name1
p57051
sg14
(lp57052
sg2
S'name1'
p57053
sba(icodemend.demo.code_suggest
Element
p57054
(dp57055
g10
I0
sg11
S'return the kerning pair distance ( possibly 0 ) for chars name1 and name2'
p57056
sg12
Vget_kern_dist_from_name.name2
p57057
sg14
(lp57058
sg2
S'name2'
p57059
sbasg2
g57042
sbs(S'get_path_collection_extents'
p57060
S'offset_transform'
p57061
tp57062
(icodemend.demo.code_suggest
Element
p57063
(dp57064
g10
I0
sg11
S'offset_transform is a affine2d to apply to the offsets before applying the offset to the path .'
p57065
sg12
Vget_path_collection_extents.offset_transform
p57066
sg14
(lp57067
sg2
g57061
sbs(g252
g5782
g14409
tp57068
g14405
s(S'add'
p57069
g55430
tp57070
g55425
s(g4998
g4459
S'0'
tp57071
g56464
s(S'add'
p57072
g55436
tp57073
g55431
sS'get_tight_layout'
p57074
(icodemend.demo.code_suggest
Element
p57075
(dp57076
g10
I0
sg11
S'return the boolean flag , true to use'
p57077
sg12
Vget_tight_layout
p57078
sg14
(lp57079
sg2
g57074
sbs(g324
g785
g9292
tp57080
g9288
s(S'vlines'
p57081
g53862
tp57082
g53857
s(S'csd'
p57083
g51497
tp57084
g51492
s(g452
g4163
S'2'
tp57085
g43007
s(g101
g102
g21877
tp57086
g21873
s(S'semilogx'
p57087
g39025
tp57088
g39020
s(g93
g161
S'(2, 7)'
p57089
tp57090
(icodemend.demo.code_suggest
Element
p57091
(dp57092
g10
I1
sg11
S''
sg12
Vannotate.xy.(2, 7)
p57093
sg14
(lp57094
sg2
g57089
sbs(g117
g118
g27994
tp57095
g27990
s(g1170
g47828
g50145
tp57096
g50141
s(g117
g118
g27566
tp57097
g27562
s(S'eventplot'
p57098
g23391
tp57099
g23386
s(S'semilogy'
p57100
g39199
tp57101
g39194
s(S'pcolor'
p57102
g49452
tp57103
g49447
s(S'cohere'
p57104
g43741
tp57105
g43736
s(S'quiver'
p57106
g31141
tp57107
g31136
s(g5576
g17905
g16884
tp57108
g16880
s(g252
g253
g14181
tp57109
g14177
sS'get_unicode_index'
p57110
(icodemend.demo.code_suggest
Element
p57111
(dp57112
g10
I0
sg11
S'return the integer index ( from the unicode table ) of symbol .'
p57113
sg12
Vget_unicode_index
p57114
sg14
(lp57115
g35967
asg2
g57110
sbs(S'plot'
p57116
g29898
tp57117
g29893
s(S'plot'
p57118
g29664
tp57119
g29649
s(S'getp'
p57120
S'contains'
p57121
tp57122
(icodemend.demo.code_suggest
Element
p57123
(dp57124
g10
I0
sg11
S'replace the contains test used by this artist .'
p57125
sg12
Vgetp.contains
p57126
sg14
(lp57127
sg2
g57121
sbsS'is_string_like'
p57128
(icodemend.demo.code_suggest
Element
p57129
(dp57130
g10
I0
sg11
S'return true if obj looks like a string'
p57131
sg12
Vis_string_like
p57132
sg14
(lp57133
(icodemend.demo.code_suggest
Element
p57134
(dp57135
g10
I0
sg11
S'return true if obj looks like a string'
p57136
sg12
Vis_string_like.obj
p57137
sg14
(lp57138
sg2
S'obj'
p57139
sbasg2
g57128
sbsS'set_agg_filter'
p57140
(icodemend.demo.code_suggest
Element
p57141
(dp57142
g10
I0
sg11
S'set agg_filter fuction .'
p57143
sg12
Vset_agg_filter
p57144
sg14
(lp57145
sg2
g57140
sbs(g252
g13469
g14532
tp57146
g14528
s(g324
g8780
S'1'
tp57147
g9848
s(g93
g909
g8749
tp57148
g8745
s(S'axhspan'
p57149
g24465
tp57150
g24460
s(S'set_ylim'
p57151
g32350
tp57152
g32345
s(S'text'
p57153
g48350
tp57154
g48345
s(S'set_yticklabels'
p57155
S'y'
tp57156
g18316
s(g6146
g2841
g14867
tp57157
g14863
s(g125
g2251
g53838
tp57158
g53834
s(g5640
g10482
g10506
tp57159
g10502
s(g5640
g5641
g11956
tp57160
g11952
s(g452
g42662
g865
tp57161
g55943
s(S'axhspan'
p57162
g24442
tp57163
g24437
s(g109
g3075
g55343
tp57164
g55339
s(S'sca'
p57165
g13451
tp57166
g13446
s(g93
g4800
g25359
tp57167
g25355
s(g117
g118
g27641
tp57168
g27637
s(g2250
g17
g26375
tp57169
g26371
s(g245
g140
g30303
tp57170
g30299
s(S'semilogy'
p57171
g39373
tp57172
g39368
s(S'pie'
p57173
g55830
tp57174
g55825
s(S'gca'
p57175
g54031
tp57176
g54026
s(g252
g253
g14001
tp57177
g13997
s(S'twiny'
p57178
g21182
tp57179
g21177
s(S'griddata'
p57180
S'x, y, z'
p57181
tp57182
(icodemend.demo.code_suggest
Element
p57183
(dp57184
g10
I0
sg11
S'coordinates of grid points to interpolate from .'
p57185
sg12
Vgriddata.x, y, z
p57186
sg14
(lp57187
sg2
g57181
sbs(S'get_aliases'
p57188
g4148
tp57189
g4143
s(S'vlines'
p57190
g53878
tp57191
g53863
s(S'magnitude_spectrum'
p57192
g48104
tp57193
g48099
s(g93
g13486
g39824
tp57194
(icodemend.demo.code_suggest
Element
p57195
(dp57196
g10
I1
sg11
S''
sg12
Vannotate.horizontalalignment.align
p57197
sg14
(lp57198
sg2
g39824
sbs(g101
g325
g21831
tp57199
g21827
s(S'semilogx'
p57200
g38941
tp57201
g38936
s(g5424
g2251
g40515
tp57202
g40511
s(S'bar'
p57203
g46574
tp57204
g46516
s(S'hexbin'
p57205
g25939
tp57206
g25934
s(S'plot_date'
p57207
g19859
tp57208
g19854
s(g139
g140
g1593
tp57209
g1589
s(g1170
g1257
g54199
tp57210
g54195
s(g101
g118
g118
tp57211
g22043
s(g101
g4274
g4274
tp57212
g21667
s(S'contour'
p57213
S'N'
tp57214
g17755
s(g1205
g13269
g4552
tp57215
g4548
s(g101
S's'
g7741
tp57216
g7737
s(S'set_title'
p57217
g44465
tp57218
g44460
s(g93
g161
S'(xpos, 0)'
p57219
tp57220
(icodemend.demo.code_suggest
Element
p57221
(dp57222
g10
I1
sg11
S''
sg12
Vannotate.xy.(xpos, 0)
p57223
sg14
(lp57224
sg2
g57219
sbs(g109
g44961
g438
tp57225
g52239
s(g944
g1262
S'x'
tp57226
(icodemend.demo.code_suggest
Element
p57227
(dp57228
g10
I1
sg11
S''
sg12
Vbarh.left.x
p57229
sg14
(lp57230
sg2
S'x'
sbs(g93
g4800
g25544
tp57231
g25540
s(S'grid'
p57232
g50638
tp57233
g50633
s(S'get_xlim'
p57234
S'left'
p57235
tp57236
(icodemend.demo.code_suggest
Element
p57237
(dp57238
g10
I0
sg11
S'get the x-axis range [ left , right ]'
p57239
sg12
Vget_xlim.left
p57240
sg14
(lp57241
sg2
g57235
sbs(S'barh'
p57242
S'None'
p57243
tp57244
(icodemend.demo.code_suggest
Element
p57245
(dp57246
g10
I0
sg11
S'a matplotlib color arg which gives the color the errorbar lines ; if none , use the color of the line connecting the markers .'
p57247
sg12
Vbarh.None
p57248
sg14
(lp57249
sg2
g57243
sbs(S'contour'
p57250
g17754
tp57251
g17749
s(S'plot'
p57252
g29904
tp57253
g29899
s(S'magnitude_spectrum'
p57254
g47936
tp57255
g47927
s(S'plot_date'
p57256
g19847
tp57257
g19842
s(g10369
g13047
g13037
tp57258
g13033
s(g245
g140
g30183
tp57259
g30179
s(S'hillshade'
p57260
g6498
tp57261
g6493
sS'set_major_locator'
p57262
(icodemend.demo.code_suggest
Element
p57263
(dp57264
g10
I166
sg11
S'set the locator of the major ticker'
p57265
sg12
Vset_major_locator
p57266
sg14
(lp57267
sg2
g57262
sbs(g6632
g2155
g2155
tp57268
g47467
sS'set_figure'
p57269
(icodemend.demo.code_suggest
Element
p57270
(dp57271
g10
I2
sg11
S'set the figure instance the artist belongs to .'
p57272
sg12
Vset_figure
p57273
sg14
(lp57274
sg2
g57269
sbs(g6632
g8780
g16688
tp57275
g16684
sS'get_axes'
p57276
(icodemend.demo.code_suggest
Element
p57277
(dp57278
g10
I15
sg11
S'return the axes instance the artist resides in , or none .'
p57279
sg12
Vget_axes
p57280
sg14
(lp57281
sg2
g57276
sbs(g101
S's'
g7746
tp57282
g7742
s(g16
g132
g46428
tp57283
g46424
sS'plasma'
p57284
(icodemend.demo.code_suggest
Element
p57285
(dp57286
g10
I0
sg11
S'set the default colormap to plasma and apply to current image if any .'
p57287
sg12
Vplasma
p57288
sg14
(lp57289
sg2
g57284
sbs(g117
S'x'
g29323
tp57290
g29319
s(S'add_subplot'
p57291
g47609
tp57292
g47604
s(g332
g46859
g865
tp57293
g45360
s(S'get'
p57294
g49940
tp57295
g49935
s(S'semilogx'
p57296
g38977
tp57297
g38972
s(g109
g3075
g55333
tp57298
g55329
s(S'csd'
p57299
g51533
tp57300
g51528
s(S'prctile_rank'
p57301
S'x'
tp57302
g23843
s(g421
g421
g438
tp57303
g55138
s(g452
g1149
g55932
tp57304
g55928
sS'get_fontstretch'
p57305
(icodemend.demo.code_suggest
Element
p57306
(dp57307
g10
I0
sg11
S'alias for get_stretch'
p57308
sg12
Vget_fontstretch
p57309
sg14
(lp57310
sg2
g57305
sbs(S'figtext'
p57311
g11377
tp57312
g11372
s(g324
g785
g9432
tp57313
g9428
s(S'pcolor'
p57314
g49487
tp57315
g49482
s(g117
S'y'
g29458
tp57316
g29454
sS'get_minimumdescent'
p57317
(icodemend.demo.code_suggest
Element
p57318
(dp57319
g10
I0
sg11
S'get minimumdescent .'
p57320
sg12
Vget_minimumdescent
p57321
sg14
(lp57322
sg2
g57317
sbs(S'axvspan'
p57323
g54658
tp57324
g54653
sS'get_registered_canvas_class'
p57325
(icodemend.demo.code_suggest
Element
p57326
(dp57327
g10
I0
sg11
S'return the registered default canvas for given file format .'
p57328
sg12
Vget_registered_canvas_class
p57329
sg14
(lp57330
sg2
g57325
sbsS'rc_params_from_file'
p57331
(icodemend.demo.code_suggest
Element
p57332
(dp57333
g10
I0
sg11
S'return matplotlib.rcparams from the contents of the given file .'
p57334
sg12
Vrc_params_from_file
p57335
sg14
(lp57336
g592
ag31708
ag6442
asg2
g57331
sbs(S'set_xticklabels'
p57337
g17127
tp57338
g17122
s(S'set_xticklabels'
p57339
g17324
tp57340
g17319
s(S'set_xticklabels'
p57341
g17187
tp57342
g17182
s(g117
g2251
g29155
tp57343
g29151
s(S'imshow'
p57344
g9922
tp57345
g9899
s(g252
g702
S'0'
tp57346
g14493
s(S'subplots'
p57347
g2130
tp57348
g2125
s(g101
g325
g21789
tp57349
g21785
s(S'set_fontconfig_pattern'
p57350
g20584
tp57351
g20579
sS'l1norm'
p57352
(icodemend.demo.code_suggest
Element
p57353
(dp57354
g10
I0
sg11
S'return the l1 norm of a , flattened out .'
p57355
sg12
Vl1norm
p57356
sg14
(lp57357
g51845
ag12509
asg2
g57352
sbs(g109
g42315
g46274
tp57358
g46270
s(g766
g102
g46653
tp57359
g46649
s(g109
g3075
g55348
tp57360
g55344
s(g452
g2841
g43226
tp57361
g43222
s(S'pcolor'
p57362
g49577
tp57363
g49572
s(S'axhline'
p57364
g3675
tp57365
g3670
sS'set_verts'
p57366
(icodemend.demo.code_suggest
Element
p57367
(dp57368
g10
I0
sg11
S'this allows one to delay initialization of the vertices .'
p57369
sg12
Vset_verts
p57370
sg14
(lp57371
sg2
g57366
sbs(g93
g161
S'(1, 9)'
p57372
tp57373
(icodemend.demo.code_suggest
Element
p57374
(dp57375
g10
I1
sg11
S''
sg12
Vannotate.xy.(1, 9)
p57376
sg14
(lp57377
sg2
g57372
sbs(g452
g453
g7203
tp57378
g7199
s(g8266
g8267
g8176
tp57379
g8172
s(S'text'
p57380
g48291
tp57381
g48276
s(g324
g785
g9571
tp57382
g9567
sS'set_dpi'
p57383
(icodemend.demo.code_suggest
Element
p57384
(dp57385
g10
I6
sg11
S'set the dots-per-inch of the figure'
p57386
sg12
Vset_dpi
p57387
sg14
(lp57388
sg2
g57383
sbs(S'get_yaxis_text1_transform'
p57389
g37715
tp57390
g37710
s(S'context'
p57391
S'after_reset'
p57392
tp57393
(icodemend.demo.code_suggest
Element
p57394
(dp57395
g10
I0
sg11
S'if true , apply style after resetting settings to their defaults ; otherwise , apply style on top of the current settings .'
p57396
sg12
Vcontext.after_reset
p57397
sg14
(lp57398
sg2
g57392
sbs(S'contourf'
p57399
g46673
tp57400
g46655
s(g117
g102
g29191
tp57401
g29187
s(S'candlestick_ochl'
p57402
g26286
tp57403
g26281
s(S'legend_artist'
p57404
g43508
tp57405
g43503
s(g1003
S'whis'
p57406
g39746
tp57407
g39742
s(g109
g2175
g44521
tp57408
g44517
s(g421
g132
g1229
tp57409
g1225
s(g944
g102
S'0.2'
p57410
tp57411
(icodemend.demo.code_suggest
Element
p57412
(dp57413
g10
I1
sg11
S''
sg12
Vbarh.alpha.0/2
p57414
sg14
(lp57415
sg2
g57410
sbs(S'axhspan'
p57416
g24382
tp57417
g24377
s(g324
g785
g9646
tp57418
g9642
s(S'norm_flat'
p57419
S'a'
tp57420
g24878
s(S'boxplot'
p57421
g39798
tp57422
g39789
s(S'figtext'
p57423
g11461
tp57424
g11456
s(S'pcolormesh'
p57425
S'yticklabels'
p57426
tp57427
(icodemend.demo.code_suggest
Element
p57428
(dp57429
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p57430
sg12
Vpcolormesh.yticklabels
p57431
sg14
(lp57432
sg2
g57426
sbsS'get_linestyle'
p57433
(icodemend.demo.code_suggest
Element
p57434
(dp57435
g10
I2
sg11
S"get the style of the lines used to mark each event [ ' solid ' | ' dashed ' | ' dashdot ' | ' dotted ' ] return the linestyle return the linestyle ."
p57436
sg12
Vget_linestyle
p57437
sg14
(lp57438
sg2
g57433
sbs(g252
g8210
g201
tp57439
g197
sS'is_dashed'
p57440
(icodemend.demo.code_suggest
Element
p57441
(dp57442
g10
I0
sg11
S'return true if line is dashstyle'
p57443
sg12
Vis_dashed
p57444
sg14
(lp57445
sg2
g57440
sbs(g117
g118
g27899
tp57446
g27895
s(g582
g132
g3341
tp57447
g3337
s(g101
g4274
g21714
tp57448
g21710
s(g252
g16379
g438
tp57449
g14367
s(S'axhspan'
p57450
g24376
tp57451
g24371
s(S'frange'
p57452
g44919
tp57453
g44914
sS'extend_positions'
p57454
(icodemend.demo.code_suggest
Element
p57455
(dp57456
g10
I0
sg11
S'add one or more events at the specified positions'
p57457
sg12
Vextend_positions
p57458
sg14
(lp57459
sg2
g57454
sbs(S'warn_deprecated'
p57460
g45296
tp57461
g45291
s(g117
g348
g29548
tp57462
g29544
s(g6556
g2392
S'2'
tp57463
g53884
sS'zoom'
p57464
(icodemend.demo.code_suggest
Element
p57465
(dp57466
g10
I11
sg11
S'zoom in/out on axis ; if direction is >0 zoom in , else zoom out'
p57467
sg12
Vzoom
p57468
sg14
(lp57469
g27116
asg2
g57464
sbs(S'score_style'
p57470
g44795
tp57471
g44790
s(S'get_kern_dist'
p57472
S'c2'
p57473
tp57474
(icodemend.demo.code_suggest
Element
p57475
(dp57476
g10
I0
sg11
S'return the kerning pair distance ( possibly 0 ) for chars c1 and c2'
p57477
sg12
Vget_kern_dist.c2
p57478
sg14
(lp57479
sg2
g57473
sbs(g252
g8210
S'8'
tp57480
g188
s(g4371
g325
g17590
tp57481
g17586
s(S'hexbin'
p57482
g25927
tp57483
g25922
s(S'title'
p57484
g35819
tp57485
g35814
s(S'axhspan'
p57486
g24495
tp57487
g24490
s(g245
g3075
g14775
tp57488
g54338
s(g245
g140
g30109
tp57489
g30105
s(g1170
g10211
g870
tp57490
g866
s(g324
g785
g9322
tp57491
g9318
s(g15061
g46127
S'0'
tp57492
g36384
s(g5848
g5849
S'min0'
p57493
tp57494
(icodemend.demo.code_suggest
Element
p57495
(dp57496
g10
I1
sg11
S''
sg12
VSlider.valinit.min0
p57497
sg14
(lp57498
sg2
g57493
sbs(S'semilogx'
p57499
g39037
tp57500
g39032
s(S'psd'
p57501
g36898
tp57502
g36893
s(S'table'
p57503
S'title'
p57504
tp57505
(icodemend.demo.code_suggest
Element
p57506
(dp57507
g10
I0
sg11
S'set a title for the axes .'
p57508
sg12
Vtable.title
p57509
sg14
(lp57510
sg2
g57504
sbs(S'cohere'
p57511
g43712
tp57512
g43707
s(S'angle_spectrum'
p57513
g19031
tp57514
g19026
s(S'axvspan'
p57515
g54670
tp57516
g54665
s(g16
g17
g41973
tp57517
g41969
s(g2250
g20325
g30815
tp57518
g30811
s(S'plot_day_summary2_ohlc'
p57519
g8443
tp57520
g8438
sS'set_axes_locator'
p57521
(icodemend.demo.code_suggest
Element
p57522
(dp57523
g10
I4
sg11
S'set axes_locator'
p57524
sg12
Vset_axes_locator
p57525
sg14
(lp57526
sg2
g57521
sbs(g93
g627
g54233
tp57527
g54229
s(g4998
g909
S'5'
tp57528
g39909
sS'hsv'
p57529
(icodemend.demo.code_suggest
Element
p57530
(dp57531
g10
I2
sg11
S'set the default colormap to hsv and apply to current image if any .'
p57532
sg12
Vhsv
p57533
sg14
(lp57534
sg2
g57529
sbs(S'errorbar'
p57535
g55982
tp57536
g55977
s(g5640
g10482
g10487
tp57537
g10483
s(g324
g785
g9706
tp57538
g9702
sS'contains_point'
p57539
(icodemend.demo.code_suggest
Element
p57540
(dp57541
g10
I3
sg11
S'returns true if the path contains the given point . returns true if the point ( tuple of x,y ) is inside the axes ( the area defined by the its patch ) . returns true if the given point is inside the path ( transformed with its transform attribute ) .'
p57542
sg12
Vcontains_point
p57543
sg14
(lp57544
g38771
ag4861
asg2
g57539
sbsS'get_xscale'
p57545
(icodemend.demo.code_suggest
Element
p57546
(dp57547
g10
I1
sg11
S'return the xaxis scale string'
p57548
sg12
Vget_xscale
p57549
sg14
(lp57550
sg2
g57545
sbs(g101
S'c'
S't'
tp57551
g21319
s(S'magnitude_spectrum'
p57552
g47972
tp57553
g47967
s(g944
g1149
g54839
tp57554
g54835
s(S'barbs'
p57555
S'animated'
p57556
tp57557
(icodemend.demo.code_suggest
Element
p57558
(dp57559
g10
I0
sg11
S"set the artist 's animation state ."
p57560
sg12
Vbarbs.animated
p57561
sg14
(lp57562
sg2
g57556
sbs(S'fill'
p57563
g55142
tp57564
g55133
s(S'annotate'
p57565
S'prop_cycle'
p57566
tp57567
(icodemend.demo.code_suggest
Element
p57568
(dp57569
g10
I0
sg11
S'set the property cycle for any future plot commands on this axes .'
p57570
sg12
Vannotate.prop_cycle
p57571
sg14
(lp57572
sg2
g57566
sbs(S'hist'
p57573
S'histtype'
p57574
tp57575
(icodemend.demo.code_suggest
Element
p57576
(dp57577
g10
I38
sg11
S'the type of histogram to draw .'
p57578
sg12
Vhist.histtype
p57579
sg14
(lp57580
g16555
a(icodemend.demo.code_suggest
Element
p57581
(dp57582
g10
I9
sg11
S''
sg12
Vhist.histtype.'bar'
p57583
sg14
(lp57584
sg2
S"'bar'"
p57585
sba(icodemend.demo.code_suggest
Element
p57586
(dp57587
g10
I6
sg11
S''
sg12
Vhist.histtype.'stepfilled'
p57588
sg14
(lp57589
sg2
S"'stepfilled'"
p57590
sba(icodemend.demo.code_suggest
Element
p57591
(dp57592
g10
I2
sg11
S''
sg12
Vhist.histtype.histtype
p57593
sg14
(lp57594
sg2
g16552
sbasg2
g57574
sbs(g452
S'uplims'
p57595
g1944
tp57596
g36185
s(g117
g13057
g25225
tp57597
g25221
s(S'psd'
p57598
g37107
tp57599
g37102
s(S'LinearTriInterpolator'
p57600
S'triangulation'
p57601
tp57602
(icodemend.demo.code_suggest
Element
p57603
(dp57604
g10
I0
sg11
S'the triangulation to interpolate over .'
p57605
sg12
VLinearTriInterpolator.triangulation
p57606
sg14
(lp57607
sg2
g57601
sbs(S'gca'
p57608
g54019
tp57609
g54014
s(S'angle_spectrum'
p57610
g18666
tp57611
g18661
s(g139
g140
g1667
tp57612
g1663
s(g117
g118
g27443
tp57613
g27439
sS'transform'
p57614
(icodemend.demo.code_suggest
Element
p57615
(dp57616
g10
I111
sg11
S'transform the font by slanting or extending .'
p57617
sg12
Vtransform
p57618
sg14
(lp57619
g16129
asg2
g57614
sbs(g117
g4163
g11089
tp57620
g11085
s(g139
g140
g1757
tp57621
g1753
s(g6217
g909
S'0'
tp57622
g2485
s(S'twinx'
p57623
S'x'
tp57624
g21200
s(g4371
g7032
g17544
tp57625
g17540
s(S'shade'
p57626
S'norm'
p57627
tp57628
(icodemend.demo.code_suggest
Element
p57629
(dp57630
g10
I0
sg11
S'the normalization used to scale values before colormapping . if none , the input will be linearly scaled between its min and max .'
p57631
sg12
Vshade.norm
p57632
sg14
(lp57633
sg2
g57627
sbsS'get_edgecolor'
p57634
(icodemend.demo.code_suggest
Element
p57635
(dp57636
g10
I0
sg11
S'get the edge color of the figure rectangle return the edge color of the patch .'
p57637
sg12
Vget_edgecolor
p57638
sg14
(lp57639
sg2
g57634
sbs(S'hexbin'
p57640
g25849
tp57641
g25844
s(g944
g132
g21470
tp57642
g35750
s(g139
g140
g1657
tp57643
g1653
s(g452
g2364
g38804
tp57644
g38800
s(g117
g667
g29605
tp57645
g29601
s(g125
g102
g35204
tp57646
g35200
s(S'pcolormesh'
p57647
S'yticks'
p57648
tp57649
(icodemend.demo.code_suggest
Element
p57650
(dp57651
g10
I0
sg11
S'set the y ticks with list of ticks'
p57652
sg12
Vpcolormesh.yticks
p57653
sg14
(lp57654
sg2
g57648
sbs(S'loglog'
p57655
g53649
tp57656
g53644
s(S'matshow'
p57657
g52997
tp57658
g52987
s(S'get_position'
p57659
S'x'
tp57660
(icodemend.demo.code_suggest
Element
p57661
(dp57662
g10
I0
sg11
S'return the position of the text as a tuple ( x , y )'
p57663
sg12
Vget_position.x
p57664
sg14
(lp57665
sg2
S'x'
sbsS'set_ybound'
p57666
(icodemend.demo.code_suggest
Element
p57667
(dp57668
g10
I7
sg11
S'set the lower and upper numerical bounds of the y-axis .'
p57669
sg12
Vset_ybound
p57670
sg14
(lp57671
sg2
g57666
sbs(S'phase_spectrum'
p57672
g52397
tp57673
g52392
s(S'axhline'
p57674
g3843
tp57675
g3838
s(g16
g132
g46438
tp57676
g46434
s(S'plot'
p57677
g29247
tp57678
g29182
s(S'is_color_like'
p57679
g42641
tp57680
g42636
s(g245
g140
g30388
tp57681
g30384
s(g324
g102
S'1'
tp57682
g9938
s(S'tripcolor'
p57683
g56832
tp57684
g56827
s(S'psd'
p57685
g36988
tp57686
g36983
s(g8547
g26551
g50253
tp57687
g50249
s(g2250
S'scale_units'
p57688
g30794
tp57689
g30790
s(S'semilogx'
p57690
g39001
tp57691
g38996
s(g117
g118
g28264
tp57692
g28260
s(g452
g118
g55911
tp57693
g55907
s(S'rec_append_fields'
p57694
g55755
tp57695
g55750
s(g117
g348
g29518
tp57696
g29514
s(S'legend'
p57697
g14588
tp57698
g14569
sS'get_legend'
p57699
(icodemend.demo.code_suggest
Element
p57700
(dp57701
g10
I2
sg11
S'return the legend.legend instance , or none if no legend is defined'
p57702
sg12
Vget_legend
p57703
sg14
(lp57704
sg2
g57699
sbs(S'subplot'
p57705
g49664
tp57706
g49659
s(g117
g118
g28374
tp57707
g28370
sS'register_cmap'
p57708
(icodemend.demo.code_suggest
Element
p57709
(dp57710
g10
I6
sg11
S'add a colormap to the set recognized by get_cmap ( ) .'
p57711
sg12
Vregister_cmap
p57712
sg14
(lp57713
g33102
ag12385
asg2
g57708
sbs(g2814
g41878
g55379
tp57714
g55375
sS'toolmanager_disconnect'
p57715
(icodemend.demo.code_suggest
Element
p57716
(dp57717
g10
I0
sg11
S'disconnect callback id cid'
p57718
sg12
Vtoolmanager_disconnect
p57719
sg14
(lp57720
(icodemend.demo.code_suggest
Element
p57721
(dp57722
g10
I0
sg11
S'disconnect callback id cid'
p57723
sg12
Vtoolmanager_disconnect.cid
p57724
sg14
(lp57725
sg2
S'cid'
p57726
sbasg2
g57715
sbs(S'rec2txt'
p57727
S'fields'
p57728
tp57729
(icodemend.demo.code_suggest
Element
p57730
(dp57731
g10
I0
sg11
S"fields : if not none , a list of field names to print . fields can be a list of strings like [ ' field1 ' , ' field2 ' ] or a single comma separated string like ' field1,field2 '"
p57732
sg12
Vrec2txt.fields
p57733
sg14
(lp57734
sg2
g57728
sbs(S'streamplot'
p57735
S'x'
tp57736
g49309
s(g117
g118
g27576
tp57737
g27572
s(S'tricontourf'
p57738
g11676
tp57739
g11671
s(g4371
g666
g17606
tp57740
g17602
s(S'tripcolor'
p57741
S'X'
tp57742
g56816
s(g421
g110
g23967
tp57743
g23963
s(g117
g118
g28069
tp57744
g28065
s(S'semilogy'
p57745
g39241
tp57746
g39236
s(g245
g140
g30079
tp57747
g30075
s(S'process_selected'
p57748
g16073
tp57749
g16068
s(S'hexbin'
p57750
g25963
tp57751
g25958
s(g5848
g5849
S'0.0'
p57752
tp57753
(icodemend.demo.code_suggest
Element
p57754
(dp57755
g10
I1
sg11
S''
sg12
VSlider.valinit.0/0
p57756
sg14
(lp57757
sg2
g57752
sbsS'get_rasterization_zorder'
p57758
(icodemend.demo.code_suggest
Element
p57759
(dp57760
g10
I0
sg11
S'get zorder value below which artists will be rasterized'
p57761
sg12
Vget_rasterization_zorder
p57762
sg14
(lp57763
sg2
g57758
sbs(S'semilogx'
p57764
g38929
tp57765
g38924
s(g2182
g102
g38339
tp57766
g38335
s(g4371
g4833
g17675
tp57767
g17671
s(S'text'
p57768
g48344
tp57769
g48339
s(g139
g140
g1523
tp57770
g1519
s(S'xlabel'
p57771
S'x'
tp57772
(icodemend.demo.code_suggest
Element
p57773
(dp57774
g10
I0
sg11
S'set the x axis label of the current axis .'
p57775
sg12
Vxlabel.x
p57776
sg14
(lp57777
sg2
S'x'
sbs(g324
g785
g9711
tp57778
g9707
s(g324
g785
g9437
tp57779
g9433
s(S'pie'
p57780
g55801
tp57781
g55796
s(S'errorbar'
p57782
g56000
tp57783
g55995
s(g16
g945
g13822
tp57784
g13818
s(S'phase_spectrum'
p57785
g52427
tp57786
g52422
s(S'angle_spectrum'
p57787
g18792
tp57788
g18787
sS'get_dpi'
p57789
(icodemend.demo.code_suggest
Element
p57790
(dp57791
g10
I9
sg11
S'return the dpi as a float'
p57792
sg12
Vget_dpi
p57793
sg14
(lp57794
sg2
g57789
sbs(S'volume_overlay'
p57795
g37387
tp57796
g37378
s(S'figtext'
p57797
g11544
tp57798
g11539
s(g101
g4274
g21622
tp57799
g21618
s(S'errorbar'
p57800
g55922
tp57801
g55902
s(S'quiver'
p57802
g31129
tp57803
g31124
sS'set_animated'
p57804
(icodemend.demo.code_suggest
Element
p57805
(dp57806
g10
I10
sg11
S"set the artist 's animation state ."
p57807
sg12
Vset_animated
p57808
sg14
(lp57809
sg2
g57804
sbs(S'set_yticklabels'
p57810
g18028
tp57811
g18018
sS'get_topmost_subplotspec'
p57812
(icodemend.demo.code_suggest
Element
p57813
(dp57814
g10
I0
sg11
S'get the topmost subplotspec instance associated with the subplot'
p57815
sg12
Vget_topmost_subplotspec
p57816
sg14
(lp57817
sg2
g57812
sbs(g109
g34058
g54860
tp57818
g54856
s(S'text'
p57819
g48422
tp57820
g48417
s(g5975
S'x'
g6921
tp57821
g6917
sS'clip_to_bbox'
p57822
(icodemend.demo.code_suggest
Element
p57823
(dp57824
g10
I0
sg11
S'clip the path to the given bounding box .'
p57825
sg12
Vclip_to_bbox
p57826
sg14
(lp57827
g43025
asg2
g57822
sbs(S'volume_overlay'
p57828
g37377
tp57829
g37372
s(S'set_xlabel'
p57830
g42807
tp57831
g42802
s(S'annotate'
p57832
S'_interpolation_steps'
p57833
tp57834
(icodemend.demo.code_suggest
Element
p57835
(dp57836
g10
I0
sg11
S'used as a hint to certain projections , such as polar , that this path should be linearly interpolated immediately before drawing . this attribute is primarily an implementation detail and is not intended for public use .'
p57837
sg12
Vannotate._interpolation_steps
p57838
sg14
(lp57839
sg2
g57833
sbs(S'psd'
p57840
g36844
tp57841
g36839
s(S'set_position'
p57842
g1034
tp57843
g1029
s(S'text'
p57844
g48275
tp57845
g48260
sS'cool'
p57846
(icodemend.demo.code_suggest
Element
p57847
(dp57848
g10
I1
sg11
S'set the default colormap to cool and apply to current image if any .'
p57849
sg12
Vcool
p57850
sg14
(lp57851
sg2
g57846
sbs(g117
g132
g28904
tp57852
g28900
s(g117
g132
g28809
tp57853
g28805
s(g93
g161
S'((np.pi / 2.0), 2)'
p57854
tp57855
(icodemend.demo.code_suggest
Element
p57856
(dp57857
g10
I1
sg11
S''
sg12
Vannotate.xy.((np/pi / 2/0), 2)
p57858
sg14
(lp57859
sg2
g57854
sbs(S'barbs'
p57860
S'array'
p57861
tp57862
(icodemend.demo.code_suggest
Element
p57863
(dp57864
g10
I0
sg11
S'set the image array from numpy array a'
p57865
sg12
Vbarbs.array
p57866
sg14
(lp57867
sg2
g57861
sbs(S'errorbar'
p57868
g56060
tp57869
g56055
s(S'streamplot'
p57870
g49308
tp57871
g49303
s(g117
g118
g28034
tp57872
g28030
s(S'barbs'
p57873
S'sketch_params'
p57874
tp57875
(icodemend.demo.code_suggest
Element
p57876
(dp57877
g10
I0
sg11
S'sets the sketch parameters .'
p57878
sg12
Vbarbs.sketch_params
p57879
sg14
(lp57880
sg2
g57874
sbs(g34170
g12402
g12394
tp57881
g12390
s(S'index_bar'
p57882
g8325
tp57883
g8320
s(S'errorbar'
p57884
g55988
tp57885
g55983
s(g101
g110
g16342
tp57886
g16338
s(g139
g140
g1737
tp57887
g1733
sS'imageObject'
p57888
(icodemend.demo.code_suggest
Element
p57889
(dp57890
g10
I0
sg11
S'return name of an image xobject representing the given image .'
p57891
sg12
VimageObject
p57892
sg14
(lp57893
sg2
g57888
sbs(g452
g132
S'c'
tp57894
g31869
s(S'loglog'
p57895
g53691
tp57896
g53686
s(g139
g18399
g2034
tp57897
g2030
s(S'text'
p57898
g48320
tp57899
g48315
s(S'annotate'
p57900
S'annotation_clip'
p57901
tp57902
(icodemend.demo.code_suggest
Element
p57903
(dp57904
g10
I5
sg11
S'the annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area . if true , the annotation will only be drawn when the xy is inside the axes . if false , the annotation will always be drawn regardless of its position . the default is none , which behave as true only if xycoords is " data " .'
p57905
sg12
Vannotate.annotation_clip
p57906
sg14
(lp57907
g47721
asg2
g57901
sbsS'spectral'
p57908
(icodemend.demo.code_suggest
Element
p57909
(dp57910
g10
I0
sg11
S'set the default colormap to spectral and apply to current image if any .'
p57911
sg12
Vspectral
p57912
sg14
(lp57913
sg2
g57908
sbs(S'pcolormesh'
p57914
S'xscale'
p57915
tp57916
(icodemend.demo.code_suggest
Element
p57917
(dp57918
g10
I0
sg11
S'set the scaling of the x-axis'
p57919
sg12
Vpcolormesh.xscale
p57920
sg14
(lp57921
sg2
g57915
sbs(S'angle_spectrum'
p57922
g19007
tp57923
g19002
s(g1170
g40900
g43130
tp57924
g43126
s(S'barh'
p57925
S'height'
p57926
tp57927
(icodemend.demo.code_suggest
Element
p57928
(dp57929
g10
I14
sg11
S'the heights of the bars'
p57930
sg12
Vbarh.height
p57931
sg14
(lp57932
g31812
a(icodemend.demo.code_suggest
Element
p57933
(dp57934
g10
I2
sg11
S''
sg12
Vbarh.height.0/1
p57935
sg14
(lp57936
sg2
S'0.1'
p57937
sbag52953
ag20149
ag948
ag42410
ag48946
a(icodemend.demo.code_suggest
Element
p57938
(dp57939
g10
I1
sg11
S''
sg12
Vbarh.height.heights
p57940
sg14
(lp57941
sg2
S'heights'
p57942
sbasg2
g57926
sbsS'set_slant'
p57943
(icodemend.demo.code_suggest
Element
p57944
(dp57945
g10
I0
sg11
S'set the font style .'
p57946
sg12
Vset_slant
p57947
sg14
(lp57948
sg2
g57943
sbsS'get_rotation_mode'
p57949
(icodemend.demo.code_suggest
Element
p57950
(dp57951
g10
I0
sg11
S'get text rotation mode'
p57952
sg12
Vget_rotation_mode
p57953
sg14
(lp57954
sg2
g57949
sbs(S'circle'
p57955
g39980
tp57956
g39975
s(S'set_xticklabels'
p57957
g17157
tp57958
g17152
sS'get_forced_alpha'
p57959
(icodemend.demo.code_suggest
Element
p57960
(dp57961
g10
I0
sg11
S'return whether the value given by get_alpha ( ) should be used to override any other alpha-channel values .'
p57962
sg12
Vget_forced_alpha
p57963
sg14
(lp57964
sg2
g57959
sbs(g34170
g325
g17590
tp57965
g33128
s(g93
g161
S'((i - 1), i)'
p57966
tp57967
(icodemend.demo.code_suggest
Element
p57968
(dp57969
g10
I1
sg11
S''
sg12
Vannotate.xy.((i - 1), i)
p57970
sg14
(lp57971
sg2
g57966
sbsS'rgrids'
p57972
(icodemend.demo.code_suggest
Element
p57973
(dp57974
g10
I1
sg11
S'get or set the radial gridlines on a polar plot .'
p57975
sg12
Vrgrids
p57976
sg14
(lp57977
(icodemend.demo.code_suggest
Element
p57978
(dp57979
g10
I0
sg11
S'set the font properties that control the text .'
p57980
sg12
Vrgrids.fontproperties
p57981
sg14
(lp57982
sg2
S'fontproperties'
p57983
sba(icodemend.demo.code_suggest
Element
p57984
(dp57985
g10
I0
sg11
S'if labels is none , the rformatter will be used|||when called with no arguments , rgrid ( ) simply returns the tuple ( lines , labels ) , where lines is an array of radial gridlines ( line2d instances ) and labels is an array of tick labels ( text instances ) . when called with arguments , the labels will appear at the specified radial distances and angles .|||labels , if not none , is a len(radii ) list of strings of the labels to use at each angle .'
p57986
sg12
Vrgrids.labels
p57987
sg14
(lp57988
sg2
S'labels'
p57989
sbag2289
ag21021
ag46760
ag5798
ag34386
a(icodemend.demo.code_suggest
Element
p57990
(dp57991
g10
I0
sg11
S'labels , if not none , is a len(radii ) list of strings of the labels to use at each angle .'
p57992
sg12
Vrgrids.radii
p57993
sg14
(lp57994
sg2
S'radii'
p57995
sbag24149
a(icodemend.demo.code_suggest
Element
p57996
(dp57997
g10
I0
sg11
S'set the text string s'
p57998
sg12
Vrgrids.text
p57999
sg14
(lp58000
sg2
S'text'
p58001
sbag56674
ag19143
asg2
g57972
sbs(S'add_subplot'
p58002
g47477
tp58003
g47472
s(S'psd'
p58004
g36874
tp58005
g36869
s(S'set_yticklabels'
p58006
g18070
tp58007
g18065
s(g37604
S'image'
p58008
g32044
tp58009
g32040
s(S'rec_summarize'
p58010
g34937
tp58011
g34932
s(g16
g17
g41958
tp58012
g41954
s(g252
g56694
g14603
tp58013
g14599
s(S'magnitude_spectrum'
p58014
g47978
tp58015
g47973
sS'draw_bbox'
p58016
(icodemend.demo.code_suggest
Element
p58017
(dp58018
g10
I0
sg11
S'this is a debug function to draw a rectangle around the bounding box returned by get_window_extent ( ) of an artist , to test whether the artist is returning the correct bbox .'
p58019
sg12
Vdraw_bbox
p58020
sg14
(lp58021
sg2
g58016
sbs(g452
g4274
g12131
tp58022
g12127
s(S'magnitude_spectrum'
p58023
g47990
tp58024
g47985
s(S'phase_spectrum'
p58025
g52325
tp58026
g52320
s(S'annotate'
p58027
S'animated'
p58028
tp58029
(icodemend.demo.code_suggest
Element
p58030
(dp58031
g10
I0
sg11
S"set the artist 's animation state ."
p58032
sg12
Vannotate.animated
p58033
sg14
(lp58034
sg2
g58028
sbs(g117
g118
g27934
tp58035
g27930
s(g52136
g1010
S'1'
tp58036
g37906
s(S'hexbin'
p58037
g25819
tp58038
g25814
sS'connect_event'
p58039
(icodemend.demo.code_suggest
Element
p58040
(dp58041
g10
I3
sg11
S'connect callback with an event .'
p58042
sg12
Vconnect_event
p58043
sg14
(lp58044
sg2
g58039
sbs(S'axvline'
p58045
g56308
tp58046
g56303
s(g117
S'x'
g29338
tp58047
g29334
s(g324
g325
g9173
tp58048
g9169
sS'is_sequence_of_strings'
p58049
(icodemend.demo.code_suggest
Element
p58050
(dp58051
g10
I0
sg11
S'returns true if obj is iterable and contains strings'
p58052
sg12
Vis_sequence_of_strings
p58053
sg14
(lp58054
g24633
asg2
g58049
sbsS'get_xydata'
p58055
(icodemend.demo.code_suggest
Element
p58056
(dp58057
g10
I12
sg11
S'return the xy data as a nx2 numpy array .'
p58058
sg12
Vget_xydata
p58059
sg14
(lp58060
g8063
asg2
g58055
sbs(S'magnitude_spectrum'
p58061
g48080
tp58062
g48075
s(g1170
g10211
g850
tp58063
g846
s(S'barh'
p58064
S'sketch_params'
p58065
tp58066
(icodemend.demo.code_suggest
Element
p58067
(dp58068
g10
I0
sg11
S'sets the sketch parameters .'
p58069
sg12
Vbarh.sketch_params
p58070
sg14
(lp58071
sg2
g58065
sbs(g10369
g10370
g40449
tp58072
g40445
s(S'fill_between'
p58073
g45921
tp58074
g45916
s(S'axis'
p58075
S'v'
tp58076
g15107
s(g324
g785
g9756
tp58077
g9752
sS'violin_stats'
p58078
(icodemend.demo.code_suggest
Element
p58079
(dp58080
g10
I0
sg11
S'returns a list of dictionaries of data which can be used to draw a series of violin plots .'
p58081
sg12
Vviolin_stats
p58082
sg14
(lp58083
g31933
a(icodemend.demo.code_suggest
Element
p58084
(dp58085
g10
I0
sg11
S'the method used to calculate the kernel density estimate for each column of data . when called via method(v , coords ) , it should return a vector of the values of the kde evaluated at the values specified in coords .'
p58086
sg12
Vviolin_stats.method
p58087
sg14
(lp58088
sg2
S'method'
p58089
sba(icodemend.demo.code_suggest
Element
p58090
(dp58091
g10
I0
sg11
S'defines the number of points to evaluate each of the gaussian kernel density estimates at .'
p58092
sg12
Vviolin_stats.points
p58093
sg14
(lp58094
sg2
S'points'
p58095
sbasg2
g58078
sbs(g252
g8210
S'5'
tp58096
g217
s(g5562
g325
g10830
tp58097
g10826
sS'update_bbox_position_size'
p58098
(icodemend.demo.code_suggest
Element
p58099
(dp58100
g10
I0
sg11
S'update the location and the size of the bbox .'
p58101
sg12
Vupdate_bbox_position_size
p58102
sg14
(lp58103
sg2
g58098
sbs(g324
g785
g9551
tp58104
g9547
s(g117
g118
g27739
tp58105
g27735
s(g252
g253
g14041
tp58106
g14037
s(S'semilogy'
p58107
g39193
tp58108
g39188
s(g117
g5775
g29387
tp58109
g29383
s(g324
g785
g9596
tp58110
g9592
s(S'grid'
p58111
g50674
tp58112
g50669
s(g117
g8768
g1944
tp58113
g29364
sS'set_fontname'
p58114
(icodemend.demo.code_suggest
Element
p58115
(dp58116
g10
I6
sg11
S'alias for set_family'
p58117
sg12
Vset_fontname
p58118
sg14
(lp58119
sg2
g58114
sbsS'dict_delall'
p58120
(icodemend.demo.code_suggest
Element
p58121
(dp58122
g10
I0
sg11
S'delete all of the keys from the dict d'
p58123
sg12
Vdict_delall
p58124
sg14
(lp58125
g44896
ag22337
asg2
g58120
sbs(S'num2date'
p58126
S'tz'
p58127
tp58128
(icodemend.demo.code_suggest
Element
p58129
(dp58130
g10
I0
sg11
S'return value is a datetime instance in timezone tz ( default to rcparams tz value ) .'
p58131
sg12
Vnum2date.tz
p58132
sg14
(lp58133
sg2
g58127
sbs(S'plot'
p58134
g29648
tp58135
g29639
s(g93
g132
g41716
tp58136
g41712
s(S'text'
p58137
g48410
tp58138
g48405
sS'set_axis_on'
p58139
(icodemend.demo.code_suggest
Element
p58140
(dp58141
g10
I1
sg11
S'turn on the axis'
p58142
sg12
Vset_axis_on
p58143
sg14
(lp58144
sg2
g58139
sbs(S'text'
p58145
S's'
tp58146
g48250
s(g16
g489
g46525
tp58147
g46521
s(g324
g785
g9502
tp58148
g9498
s(g101
S'c'
g21385
tp58149
g21381
s(S'legend'
p58150
g14543
tp58151
g14513
s(g252
g702
g14501
tp58152
g14497
sS'figure'
p58153
(icodemend.demo.code_suggest
Element
p58154
(dp58155
g10
I2232
sg11
S'creates a new figure .'
p58156
sg12
Vfigure
p58157
sg14
(lp58158
g29995
ag54333
a(icodemend.demo.code_suggest
Element
p58159
(dp58160
g10
I10
sg11
S"if not provided , a new figure will be created , and the figure number will be incremented . the figure objects holds this number in a number attribute . if num is provided , and a figure with this id already exists , make it active , and returns a reference to it . if this figure does not exists , create it and returns it . if num is a string , the window title will be set to this figure 's num ."
p58161
sg12
Vfigure.num
p58162
sg14
(lp58163
g43266
a(icodemend.demo.code_suggest
Element
p58164
(dp58165
g10
I3
sg11
S''
sg12
Vfigure.num.1
p58166
sg14
(lp58167
sg2
S'1'
sbag38210
asg2
S'num'
p58168
sbag47915
ag16404
asg2
g58153
sbs(g5975
g2841
g19662
tp58169
g19658
sS'get_rasterized'
p58170
(icodemend.demo.code_suggest
Element
p58171
(dp58172
g10
I0
sg11
S'return true if the artist is to be rasterized'
p58173
sg12
Vget_rasterized
p58174
sg14
(lp58175
sg2
g58170
sbs(S'get_flat_tri_mask'
p58176
g53353
tp58177
g53348
s(g324
g785
g9671
tp58178
g9667
s(g109
g110
g865
tp58179
g31377
s(g117
g4163
g11099
tp58180
g11095
s(g4998
g325
g325
tp58181
(icodemend.demo.code_suggest
Element
p58182
(dp58183
g10
I9
sg11
S''
sg12
Vpcolormesh.cmap.cmap
p58184
sg14
(lp58185
sg2
g325
sbs(g117
g2251
g29165
tp58186
g29161
s(S'stineman_interp'
p58187
S'x'
tp58188
g56619
sS'get_color'
p58189
(icodemend.demo.code_suggest
Element
p58190
(dp58191
g10
I11
sg11
S'get the color of the lines used to mark each event return the color of the text'
p58192
sg12
Vget_color
p58193
sg14
(lp58194
sg2
g58189
sbs(g117
g118
g27974
tp58195
g27970
sS'parse_afm'
p58196
(icodemend.demo.code_suggest
Element
p58197
(dp58198
g10
I0
sg11
S'parse the adobe font metics file in file handle fh .'
p58199
sg12
Vparse_afm
p58200
sg14
(lp58201
g56857
ag36065
ag23923
a(icodemend.demo.code_suggest
Element
p58202
(dp58203
g10
I0
sg11
S'parse the adobe font metics file in file handle fh . return value is a ( dhead , dcmetrics , dkernpairs , dcomposite ) tuple where dhead is a _ parse_header ( ) dict , dcmetrics is a _ parse_composites ( ) dict , dkernpairs is a _ parse_kern_pairs ( ) dict ( possibly { } ) , and dcomposite is a _ parse_composites ( ) dict ( possibly { } )'
p58204
sg12
Vparse_afm.dkernpairs
p58205
sg14
(lp58206
sg2
S'dkernpairs'
p58207
sbag51116
asg2
g58196
sbs(g7484
S'C'
g25713
tp58208
g25709
sS'get_position'
p58209
(icodemend.demo.code_suggest
Element
p58210
(dp58211
g10
I60
sg11
S'return the position of the text as a tuple ( x , y )'
p58212
sg12
Vget_position
p58213
sg14
(lp58214
g57661
ag13695
asg2
g58209
sbs(g245
g13636
S'1'
tp58215
g58164
s(g101
S'c'
g21420
tp58216
g21416
sS'add_container'
p58217
(icodemend.demo.code_suggest
Element
p58218
(dp58219
g10
I0
sg11
S'add a container instance to the axes .'
p58220
sg12
Vadd_container
p58221
sg14
(lp58222
sg2
g58217
sbs(S'add_axes'
p58223
S'axes'
p58224
tp58225
(icodemend.demo.code_suggest
Element
p58226
(dp58227
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p58228
sg12
Vadd_axes.axes
p58229
sg14
(lp58230
sg2
g58224
sbs(g139
g140
g1637
tp58231
g1633
s(S'arrow'
p58232
g2671
tp58233
g2666
s(S'fill'
p58234
g55160
tp58235
g55155
s(S'axvspan'
p58236
g54652
tp58237
g54642
s(S'add'
p58238
g55424
tp58239
g55419
sS'get_clip_box'
p58240
(icodemend.demo.code_suggest
Element
p58241
(dp58242
g10
I2
sg11
S'return artist clipbox'
p58243
sg12
Vget_clip_box
p58244
sg14
(lp58245
sg2
g58240
sbs(g452
g12650
S'3'
tp58246
g51805
s(S'add_axes'
p58247
S'xscale'
p58248
tp58249
(icodemend.demo.code_suggest
Element
p58250
(dp58251
g10
I0
sg11
S'set the scaling of the x-axis'
p58252
sg12
Vadd_axes.xscale
p58253
sg14
(lp58254
sg2
g58248
sbs(S'barbs'
p58255
S'yscale'
p58256
tp58257
(icodemend.demo.code_suggest
Element
p58258
(dp58259
g10
I0
sg11
S'set the scaling of the y-axis'
p58260
sg12
Vbarbs.yscale
p58261
sg14
(lp58262
sg2
g58256
sbs(S'psd'
p58263
g37060
tp58264
g37055
s(S'table'
p58265
S'alpha'
p58266
tp58267
(icodemend.demo.code_suggest
Element
p58268
(dp58269
g10
I0
sg11
S'set the alpha value used for blending - not supported on all backends .'
p58270
sg12
Vtable.alpha
p58271
sg14
(lp58272
sg2
g58266
sbs(S'arrow'
p58273
g2635
tp58274
g2630
s(g5424
g8352
g10137
tp58275
g10133
s(S'thetagrids'
p58276
g53434
tp58277
g53429
s(g252
g253
g14031
tp58278
g14027
s(g324
g785
g9442
tp58279
g9438
s(g16
g1149
g36318
tp58280
g36314
s(S'get_sized_alternatives_for_symbol'
p58281
S'sym'
p58282
tp58283
(icodemend.demo.code_suggest
Element
p58284
(dp58285
g10
I0
sg11
S'override if your font provides multiple sizes of the same symbol . should return a list of symbols matching sym in various sizes . the expression renderer will select the most appropriate size for a given situation from this list .'
p58286
sg12
Vget_sized_alternatives_for_symbol.sym
p58287
sg14
(lp58288
sg2
g58282
sbs(S'set_position'
p58289
S'y'
tp58290
g1040
s(S'volume_overlay2'
p58291
g45611
tp58292
g45606
s(S'triplot'
p58293
g54482
tp58294
g54477
s(g117
g118
g28194
tp58295
g28190
s(g117
g2878
g19395
tp58296
g19391
s(S'cohere'
p58297
g43890
tp58298
g43885
s(g93
g161
S'(0.5, 0)'
p58299
tp58300
(icodemend.demo.code_suggest
Element
p58301
(dp58302
g10
I2
sg11
S''
sg12
Vannotate.xy.(0/5, 0)
p58303
sg14
(lp58304
sg2
g58299
sbs(S'safezip'
p58305
S'args'
p58306
tp58307
(icodemend.demo.code_suggest
Element
p58308
(dp58309
g10
I0
sg11
S'make sure args are equal len before zipping'
p58310
sg12
Vsafezip.args
p58311
sg14
(lp58312
sg2
g58306
sbs(S'semilogx'
p58313
g38911
tp58314
g38906
sS'get_sized_alternatives_for_symbol'
p58315
(icodemend.demo.code_suggest
Element
p58316
(dp58317
g10
I0
sg11
S'override if your font provides multiple sizes of the same symbol .'
p58318
sg12
Vget_sized_alternatives_for_symbol
p58319
sg14
(lp58320
g58284
asg2
g58315
sbs(g766
g325
g325
tp58321
g16457
s(S'barbs'
p58322
S'label'
p58323
tp58324
(icodemend.demo.code_suggest
Element
p58325
(dp58326
g10
I0
sg11
S'set the label to s for auto legend .'
p58327
sg12
Vbarbs.label
p58328
sg14
(lp58329
sg2
g58323
sbs(S'get_kern'
p58330
g42339
tp58331
g42334
s(g252
g1010
g13915
tp58332
g13911
s(g1003
S'x'
g39808
tp58333
g39804
s(S'psd'
p58334
g37113
tp58335
g37108
s(S'scatter'
p58336
g22061
tp58337
g21911
s(g766
g666
g4053
tp58338
g4049
s(g4340
g4225
g35790
tp58339
g35786
s(g139
g18399
g2029
tp58340
g2025
s(S'set_xlim'
p58341
g4623
tp58342
g4618
s(g117
g118
g28089
tp58343
g28085
s(g117
g132
g28839
tp58344
g28835
s(S'slopes'
p58345
S'y'
tp58346
g12905
s(S'fill'
p58347
g55178
tp58348
g55173
s(S'axvline'
p58349
g56256
tp58350
g56238
s(S'Circle'
p58351
S'pad'
p58352
tp58353
(icodemend.demo.code_suggest
Element
p58354
(dp58355
g10
I0
sg11
S'the amount of padding around the original box .'
p58356
sg12
VCircle.pad
p58357
sg14
(lp58358
sg2
g58352
sbsS'get_va'
p58359
(icodemend.demo.code_suggest
Element
p58360
(dp58361
g10
I0
sg11
S'alias for getverticalalignment ( )'
p58362
sg12
Vget_va
p58363
sg14
(lp58364
sg2
g58359
sbs(g5424
g13645
g50519
tp58365
g50515
s(g17904
g17905
g43980
tp58366
g43976
s(S'PathPatchEffect'
p58367
g52214
tp58368
g52209
s(S'text'
p58369
g48452
tp58370
g48447
sS'set_figwidth'
p58371
(icodemend.demo.code_suggest
Element
p58372
(dp58373
g10
I6
sg11
S'set the width of the figure in inches'
p58374
sg12
Vset_figwidth
p58375
sg14
(lp58376
sg2
g58371
sbs(S'phase_spectrum'
p58377
g52409
tp58378
g52404
sS'add_positions'
p58379
(icodemend.demo.code_suggest
Element
p58380
(dp58381
g10
I0
sg11
S'add one or more events at the specified positions'
p58382
sg12
Vadd_positions
p58383
sg14
(lp58384
sg2
g58379
sbs(S'plot_date'
p58385
g19895
tp58386
g19890
s(g117
g118
g28509
tp58387
g28505
s(g324
g325
g9207
tp58388
g9203
s(g117
g118
g28274
tp58389
g28270
sS'get_xaxis_transform'
p58390
(icodemend.demo.code_suggest
Element
p58391
(dp58392
g10
I2
sg11
S'get the transformation used for drawing x-axis labels , ticks and gridlines .'
p58393
sg12
Vget_xaxis_transform
p58394
sg14
(lp58395
sg2
g58390
sbs(S'candlestick_ochl'
p58396
g26298
tp58397
g26293
s(S'set_yticklabels'
p58398
g18160
tp58399
g18155
s(S'barh'
p58400
S'xmargin'
p58401
tp58402
(icodemend.demo.code_suggest
Element
p58403
(dp58404
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p58405
sg12
Vbarh.xmargin
p58406
sg14
(lp58407
sg2
g58401
sbs(g1170
g39824
g20258
tp58408
g20254
s(S'quotes_historical_yahoo_ohlc'
p58409
g49757
tp58410
g49752
s(g117
g118
g28339
tp58411
g28335
s(S'xticks'
p58412
S'x'
tp58413
g30596
s(g452
S'mfc'
p58414
g6575
tp58415
g6571
s(S'set_xticklabels'
p58416
g17025
tp58417
g17020
s(g16
g39824
g3189
tp58418
g3185
s(g1170
g10211
g830
tp58419
g826
sS'get_ydata'
p58420
(icodemend.demo.code_suggest
Element
p58421
(dp58422
g10
I14
sg11
S'return the ydata .'
p58423
sg12
Vget_ydata
p58424
sg14
(lp58425
g19358
asg2
g58420
sbs(S'set_yticklabels'
p58426
g18315
tp58427
g18310
s(S'fill'
p58428
g55166
tp58429
g55161
s(S'annotate'
p58430
S'transform'
p58431
tp58432
(icodemend.demo.code_suggest
Element
p58433
(dp58434
g10
I2
sg11
S'set the transform instance used by this artist .'
p58435
sg12
Vannotate.transform
p58436
sg14
(lp58437
g42867
asg2
g58431
sbs(g1003
g4651
g33012
tp58438
g33008
s(g101
S'c'
S'v'
tp58439
g21565
s(S'broken_barh'
p58440
g48769
tp58441
g48764
s(S'csv2rec'
p58442
g43987
tp58443
g43982
s(S'set_bbox_to_anchor'
p58444
g26319
tp58445
g26314
s(S'set_yticklabels'
p58446
g18250
tp58447
g18245
s(S'angle_spectrum'
p58448
g18708
tp58449
g18703
s(S'boxplot'
p58450
g39736
tp58451
g39731
s(S'eventplot'
p58452
g23475
tp58453
g23470
s(S'to_rgba_array'
p58454
S'c'
tp58455
g4329
s(S'set_xlim'
p58456
g4566
tp58457
g4543
s(g245
g140
g30453
tp58458
g30449
s(g1170
g132
S"'blue'"
p58459
tp58460
(icodemend.demo.code_suggest
Element
p58461
(dp58462
g10
I6
sg11
S''
sg12
Vhist.color.'blue'
p58463
sg14
(lp58464
sg2
g58459
sbs(g1003
g4403
g25249
tp58465
g25245
s(S'errorbar'
p58466
g56054
tp58467
g56049
s(g324
g785
g9581
tp58468
g9577
s(S'eventplot'
p58469
g23355
tp58470
g23350
s(g324
g785
g9541
tp58471
g9537
s(S'quiver'
p58472
g30905
tp58473
g30896
s(S'get_kern_dist_from_name'
p58474
g57053
tp58475
g57048
s(g117
g118
g28329
tp58476
g28325
s(g245
g140
g30353
tp58477
g30349
sS'ispower2'
p58478
(icodemend.demo.code_suggest
Element
p58479
(dp58480
g10
I0
sg11
S'returns the log base 2 of n if n is a power of 2 , zero otherwise .'
p58481
sg12
Vispower2
p58482
sg14
(lp58483
g683
asg2
g58478
sbs(g16013
g102
g37370
tp58484
g37366
s(S'pcolor'
p58485
g49517
tp58486
g49512
s(g245
g140
g30193
tp58487
g30189
s(g101
S'c'
S'Y'
tp58488
g21434
s(S'fill'
p58489
g55148
tp58490
g55143
s(S'broken_barh'
p58491
g48787
tp58492
g48782
s(g1170
g118
S"'Express'"
p58493
tp58494
(icodemend.demo.code_suggest
Element
p58495
(dp58496
g10
I1
sg11
S''
sg12
Vhist.label.'Express'
p58497
sg14
(lp58498
sg2
g58493
sbs(S'pts_to_poststep'
p58499
g32205
tp58500
g32200
sS'copy'
p58501
(icodemend.demo.code_suggest
Element
p58502
(dp58503
g10
I61
sg11
S'return a deep copy of self returns a shallow copy of the path , which will share the vertices and codes with the source path .'
p58504
sg12
Vcopy
p58505
sg14
(lp58506
sg2
g58501
sbs(S'parse'
p58507
S'dpi'
p58508
tp58509
(icodemend.demo.code_suggest
Element
p58510
(dp58511
g10
I0
sg11
S'parse the given math expression s at the given dpi . if prop is provided , it is a fontproperties object specifying the " default " font to use in the math expression , used for all non-math text . parse expression s using the given fonts_object for output , at the given fontsize and dpi .'
p58512
sg12
Vparse.dpi
p58513
sg14
(lp58514
sg2
g58508
sbs(g965
g20269
g57041
tp58515
g57037
s(g421
g35545
g22933
tp58516
g22929
s(g101
S's'
g7619
tp58517
g7615
s(S'arrow'
p58518
g2754
tp58519
g2749
s(S'barh'
p58520
S'rasterized'
p58521
tp58522
(icodemend.demo.code_suggest
Element
p58523
(dp58524
g10
I0
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p58525
sg12
Vbarh.rasterized
p58526
sg14
(lp58527
sg2
g58521
sbs(g12678
g7452
g20514
tp58528
g20510
s(S'barbs'
p58529
S'ylim'
p58530
tp58531
(icodemend.demo.code_suggest
Element
p58532
(dp58533
g10
I0
sg11
S'set the data limits for the yaxis'
p58534
sg12
Vbarbs.ylim
p58535
sg14
(lp58536
sg2
g58530
sbs(S'add_subplot'
p58537
g47567
tp58538
g47562
s(g117
g4274
g28958
tp58539
g28954
s(S'plot'
p58540
g29764
tp58541
g29759
s(S'quiver'
p58542
g30841
tp58543
g30822
s(S'add_axes'
p58544
S'anchor'
p58545
tp58546
(icodemend.demo.code_suggest
Element
p58547
(dp58548
g10
I0
sg11
S'anchor'
p58549
sg12
Vadd_axes.anchor
p58550
sg14
(lp58551
sg2
g58545
sbs(S'get_ylim'
p58552
g51922
tp58553
g51917
s(S'pcolormesh'
p58554
S'ylabel'
p58555
tp58556
(icodemend.demo.code_suggest
Element
p58557
(dp58558
g10
I0
sg11
S'set the label for the yaxis'
p58559
sg12
Vpcolormesh.ylabel
p58560
sg14
(lp58561
sg2
g58555
sbs(S'set_picker'
p58562
g52181
tp58563
g52176
s(S'parse_afm'
p58564
g58207
tp58565
g58202
s(S'text'
p58566
g48398
tp58567
g48393
s(g5562
g325
g10845
tp58568
g10841
s(g766
g7032
g19298
tp58569
g19294
sS'set_data_interval'
p58570
(icodemend.demo.code_suggest
Element
p58571
(dp58572
g10
I2
sg11
S'set the axis data limits'
p58573
sg12
Vset_data_interval
p58574
sg14
(lp58575
sg2
g58570
sbs(g93
g161
S'(data[0][0], data[1][0])'
p58576
tp58577
(icodemend.demo.code_suggest
Element
p58578
(dp58579
g10
I1
sg11
S''
sg12
Vannotate.xy.(data[0][0], data[1][0])
p58580
sg14
(lp58581
sg2
g58576
sbs(g5576
g32548
g13616
tp58582
g13612
s(g117
g132
g28928
tp58583
g28924
s(g101
S'c'
g21502
tp58584
g21498
s(g766
g2183
g46683
tp58585
g46679
s(S'set_yticklabels'
p58586
g18280
tp58587
g18275
sS'set_ec'
p58588
(icodemend.demo.code_suggest
Element
p58589
(dp58590
g10
I0
sg11
S'alias for set_edgecolor'
p58591
sg12
Vset_ec
p58592
sg14
(lp58593
sg2
g58588
sbs(S'add'
p58594
g55418
tp58595
g55413
s(S'psd'
p58596
g36868
tp58597
g36863
s(g16
g55064
g5189
tp58598
g5185
s(S'axhline'
p58599
g3513
tp58600
g3503
s(g324
g785
g9287
tp58601
g9283
s(g117
g2392
S'3'
tp58602
g29037
s(S'annotate'
p58603
S'yticks'
p58604
tp58605
(icodemend.demo.code_suggest
Element
p58606
(dp58607
g10
I0
sg11
S'set the y ticks with list of ticks'
p58608
sg12
Vannotate.yticks
p58609
sg14
(lp58610
sg2
g58604
sbs(g117
g118
g27581
tp58611
g27577
s(S'plotting'
p58612
g15850
tp58613
g15845
sg12571
(icodemend.demo.code_suggest
Element
p58614
(dp58615
g10
I0
sg11
S''
sg12
VLightSource
p58616
sg14
(lp58617
g12574
ag38443
asg2
g12571
sbs(S'pcolor'
p58618
g49571
tp58619
g49566
s(S'toolmanager_connect'
p58620
g12197
tp58621
g12192
sS'get_yaxis'
p58622
(icodemend.demo.code_suggest
Element
p58623
(dp58624
g10
I2
sg11
S'return the yaxis instance'
p58625
sg12
Vget_yaxis
p58626
sg14
(lp58627
sg2
g58622
sbsS'get_view_interval'
p58628
(icodemend.demo.code_suggest
Element
p58629
(dp58630
g10
I9
sg11
S'return the interval instance for this axis view limits'
p58631
sg12
Vget_view_interval
p58632
sg14
(lp58633
sg2
g58628
sbs(g1170
g118
S"['second again']"
p58634
tp58635
(icodemend.demo.code_suggest
Element
p58636
(dp58637
g10
I1
sg11
S''
sg12
Vhist.label.['second again']
p58638
sg14
(lp58639
sg2
g58634
sbs(S'barbs'
p58640
S'V'
tp58641
(icodemend.demo.code_suggest
Element
p58642
(dp58643
g10
I0
sg11
S'all arguments may be 1-d or 2-d arrays or sequences . if x and y are absent , they will be generated as a uniform grid . if u and v are 2-d arrays but x and y are 1-d , and if len(x ) and len(y ) match the column and row dimensions of u , then x and y will be expanded with numpy.meshgrid ( ) .|||u , v , c may be masked arrays , but masked x , y are not supported at present .'
p58644
sg12
Vbarbs.V
p58645
sg14
(lp58646
sg2
S'V'
sbsS'vpack'
p58647
(icodemend.demo.code_suggest
Element
p58648
(dp58649
g10
I0
sg11
S'the main duty of vpack ( ) is to compute the dimensions of the resulting boxes , and to adjust the glue if one of those dimensions is pre-specified .'
p58650
sg12
Vvpack
p58651
sg14
(lp58652
g20560
asg2
g58647
sbs(g6632
g966
g47425
tp58653
g47421
s(S'is_string_like'
p58654
g57139
tp58655
g57134
s(g245
g140
g30178
tp58656
g30174
s(g101
g515
g515
tp58657
g22173
s(S'arrow'
p58658
g2677
tp58659
g2672
s(S'volume_overlay2'
p58660
g45629
tp58661
g45624
s(g4371
g2183
g17660
tp58662
g17656
s(S'cohere'
p58663
g43837
tp58664
g43832
s(S'axvline'
p58665
g56302
tp58666
g56297
s(g139
g140
g1632
tp58667
g1628
s(g101
g118
g21940
tp58668
g21936
s(S'pcolormesh'
p58669
S'vertices'
p58670
tp58671
(icodemend.demo.code_suggest
Element
p58672
(dp58673
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p58674
sg12
Vpcolormesh.vertices
p58675
sg14
(lp58676
sg2
g58670
sbsS'reset'
p58677
(icodemend.demo.code_suggest
Element
p58678
(dp58679
g10
I4
sg11
S'reset the slider to the initial value if needed'
p58680
sg12
Vreset
p58681
sg14
(lp58682
sg2
g58677
sbs(S'Slider'
p58683
S'closedmax'
p58684
tp58685
(icodemend.demo.code_suggest
Element
p58686
(dp58687
g10
I0
sg11
S'indicate whether the slider interval is closed on the top'
p58688
sg12
VSlider.closedmax
p58689
sg14
(lp58690
sg2
g58684
sbsS'set_aspect'
p58691
(icodemend.demo.code_suggest
Element
p58692
(dp58693
g10
I144
sg11
S'aspect'
p58694
sg12
Vset_aspect
p58695
sg14
(lp58696
g25107
a(icodemend.demo.code_suggest
Element
p58697
(dp58698
g10
I1
sg11
S'anchor'
p58699
sg12
Vset_aspect.anchor
p58700
sg14
(lp58701
g46309
asg2
S'anchor'
p58702
sbag16626
asg2
g58691
sbs(S'scatter'
p58703
g22203
tp58704
g22198
s(S'phase_spectrum'
p58705
g52391
tp58706
g52386
s(g117
g118
g28384
tp58707
g28380
s(S'annotate'
p58708
S'xy'
p58709
tp58710
(icodemend.demo.code_suggest
Element
p58711
(dp58712
g10
I165
sg11
S'the annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area . if true , the annotation will only be drawn when the xy is inside the axes . if false , the annotation will always be drawn regardless of its position . the default is none , which behave as true only if xycoords is " data " .|||position of element to annotate . see xycoords to control what coordinate system this value is interpretated in .|||xycoords and textcoords are strings that indicate the coordinates of xy and xytext , and may be one of the following values :'
p58713
sg12
Vannotate.xy
p58714
sg14
(lp58715
g33423
ag45154
ag34742
a(icodemend.demo.code_suggest
Element
p58716
(dp58717
g10
I7
sg11
S''
sg12
Vannotate.xy.(x, y)
p58718
sg14
(lp58719
sg2
S'(x, y)'
p58720
sbag56448
ag13748
ag34276
ag58301
ag23696
ag36720
a(icodemend.demo.code_suggest
Element
p58721
(dp58722
g10
I2
sg11
S''
sg12
Vannotate.xy.(X, Y)
p58723
sg14
(lp58724
sg2
S'(X, Y)'
p58725
sbag44627
ag41283
ag55722
a(icodemend.demo.code_suggest
Element
p58726
(dp58727
g10
I2
sg11
S''
sg12
Vannotate.xy.(x, 0)
p58728
sg14
(lp58729
sg2
S'(x, 0)'
p58730
sbag21239
ag32159
ag44238
ag33606
ag30628
ag39960
ag2372
a(icodemend.demo.code_suggest
Element
p58731
(dp58732
g10
I1
sg11
S''
sg12
Vannotate.xy.((d - 1), h)
p58733
sg14
(lp58734
sg2
S'((d - 1), h)'
p58735
sbag14665
ag54881
ag57968
ag44759
ag10038
ag57856
ag53548
ag54801
ag42617
ag5088
ag54546
ag49353
ag33327
ag48853
ag15473
ag18496
ag16397
ag54375
ag34534
ag13730
ag54522
ag25171
ag53726
ag22406
ag23639
ag22595
ag32613
ag8340
ag5963
ag7448
ag44836
ag57374
ag33218
ag44208
ag47405
ag39896
ag26173
ag56175
ag57091
ag39669
ag47848
ag39596
ag55524
ag23280
ag35459
a(icodemend.demo.code_suggest
Element
p58736
(dp58737
g10
I1
sg11
S''
sg12
Vannotate.xy.(X[i], (y + 7))
p58738
sg14
(lp58739
sg2
S'(X[i], (y + 7))'
p58740
sbag44556
ag20321
a(icodemend.demo.code_suggest
Element
p58741
(dp58742
g10
I1
sg11
S''
sg12
Vannotate.xy.(azel[10][1], azel[10][0])
p58743
sg14
(lp58744
sg2
S'(azel[10][1], azel[10][0])'
p58745
sbag50100
ag58578
ag56150
ag56186
ag56351
ag41491
ag24116
ag24971
ag46118
ag3870
ag5007
ag53115
ag40664
ag51195
ag31305
ag39551
ag5040
ag46173
ag11582
ag47679
ag39915
ag35035
ag43289
ag52184
ag52590
ag44397
ag37448
ag18600
ag53121
ag5722
ag164
ag57221
ag8853
ag45208
a(icodemend.demo.code_suggest
Element
p58746
(dp58747
g10
I1
sg11
S''
sg12
Vannotate.xy.[918, 392]
p58748
sg14
(lp58749
sg2
S'[918, 392]'
p58750
sbag50363
a(icodemend.demo.code_suggest
Element
p58751
(dp58752
g10
I1
sg11
S''
sg12
Vannotate.xy.end
p58753
sg14
(lp58754
sg2
S'end'
p58755
sbag23682
ag38586
ag56941
ag42714
asg2
g58709
sbs(g1170
g1257
g54166
tp58756
g54162
sS'set_anchor'
p58757
(icodemend.demo.code_suggest
Element
p58758
(dp58759
g10
I1
sg11
S'anchor'
p58760
sg12
Vset_anchor
p58761
sg14
(lp58762
(icodemend.demo.code_suggest
Element
p58763
(dp58764
g10
I0
sg11
S'anchor'
p58765
sg12
Vset_anchor.anchor
p58766
sg14
(lp58767
sg2
S'anchor'
p58768
sbasg2
g58757
sbs(g16
g453
g12777
tp58769
g12773
s(S'angle_spectrum'
p58770
g19037
tp58771
g19032
s(g117
g2392
S'2'
tp58772
g29033
s(g13542
g325
g325
tp58773
g16508
s(S'get_cmap'
p58774
g37513
tp58775
g37508
s(g93
g4800
g25554
tp58776
g25550
s(S'semilogx'
p58777
g39043
tp58778
g39038
s(g13532
g27319
g26170
tp58779
g26166
s(S'plot'
p58780
g29638
tp58781
g29628
s(S'axvspan'
p58782
g54730
tp58783
g54725
s(g6217
g102
g2478
tp58784
g2474
s(S'quiver'
p58785
g31063
tp58786
g31058
s(g965
g118
g37967
tp58787
g37963
s(g101
g667
S'0'
tp58788
g22163
s(g16
g489
g46568
tp58789
g46564
s(S'specgram'
p58790
S't'
tp58791
g47890
s(S'base_repr'
p58792
g6944
tp58793
g6939
s(g245
g140
g30014
tp58794
g30010
s(S'pcolormesh'
p58795
S'aspect'
p58796
tp58797
(icodemend.demo.code_suggest
Element
p58798
(dp58799
g10
I0
sg11
S'aspect'
p58800
sg12
Vpcolormesh.aspect
p58801
sg14
(lp58802
sg2
g58796
sbs(S'csd'
p58803
g51611
tp58804
g51606
s(g117
g118
g27794
tp58805
g27790
s(g117
g35879
g29616
tp58806
g29612
s(S'errorbar'
p58807
g55947
tp58808
g55938
s(g117
g4274
g29013
tp58809
g29009
s(S'specgram'
p58810
g47865
tp58811
g47860
s(g8547
g7032
g55789
tp58812
g55785
sS'hist'
p58813
(icodemend.demo.code_suggest
Element
p58814
(dp58815
g10
I300
sg11
S'plot a histogram .'
p58816
sg12
Vhist
p58817
sg14
(lp58818
g54157
ag16024
ag57576
a(icodemend.demo.code_suggest
Element
p58819
(dp58820
g10
I35
sg11
S'color spec or sequence of color specs , one per dataset . default ( none ) uses the standard line color sequence .'
p58821
sg12
Vhist.color
p58822
sg14
(lp58823
g58461
a(icodemend.demo.code_suggest
Element
p58824
(dp58825
g10
I5
sg11
S''
sg12
Vhist.color.'b'
p58826
sg14
(lp58827
sg2
S"'b'"
p58828
sbag55055
ag47074
ag10514
a(icodemend.demo.code_suggest
Element
p58829
(dp58830
g10
I3
sg11
S''
sg12
Vhist.color.'r'
p58831
sg14
(lp58832
sg2
S"'r'"
p58833
sbag26913
ag16411
a(icodemend.demo.code_suggest
Element
p58834
(dp58835
g10
I1
sg11
S''
sg12
Vhist.color.'grey'
p58836
sg14
(lp58837
sg2
S"'grey'"
p58838
sbag34680
ag33379
ag40026
ag5636
asg2
S'color'
p58839
sba(icodemend.demo.code_suggest
Element
p58840
(dp58841
g10
I34
sg11
S'string , or sequence of strings to match multiple datasets . bar charts yield multiple patches per dataset , but only the first gets the label , so that the legend command will work as expected .'
p58842
sg12
Vhist.label
p58843
sg14
(lp58844
g56213
ag19046
ag50108
ag11865
ag34143
ag56720
ag49136
ag10639
ag1173
ag52886
ag31352
ag48940
ag58495
ag41400
ag52573
ag15574
ag45048
ag40864
ag43377
a(icodemend.demo.code_suggest
Element
p58845
(dp58846
g10
I1
sg11
S''
sg12
Vhist.label.'hist 1'
p58847
sg14
(lp58848
sg2
S"'hist 1'"
p58849
sbag52643
ag53234
ag43357
ag19058
a(icodemend.demo.code_suggest
Element
p58850
(dp58851
g10
I1
sg11
S''
sg12
Vhist.label.['A', 'B']
p58852
sg14
(lp58853
sg2
S"['A', 'B']"
p58854
sbag53156
ag27080
ag45511
ag58636
ag46776
asg2
S'label'
p58855
sbag33898
ag801
ag43121
ag40195
ag20244
ag50136
ag53774
ag47631
ag41750
ag46326
ag42160
ag19191
ag44889
ag46833
ag47905
ag50843
ag51639
ag3886
ag23790
ag26858
asg2
g58813
sbs(g93
S's'
g51973
tp58856
g51969
s(S'get_ticklabels'
p58857
g10757
tp58858
g10752
s(S'arrow'
p58859
g2563
tp58860
g2558
s(S'barbs'
p58861
S'ylabel'
p58862
tp58863
(icodemend.demo.code_suggest
Element
p58864
(dp58865
g10
I0
sg11
S'set the label for the yaxis'
p58866
sg12
Vbarbs.ylabel
p58867
sg14
(lp58868
sg2
g58862
sbs(g582
g132
g3331
tp58869
g3327
s(S'add'
p58870
g55412
tp58871
g55407
sS'update_units'
p58872
(icodemend.demo.code_suggest
Element
p58873
(dp58874
g10
I0
sg11
S'introspect data for units converter and update the axis.converter instance if necessary .'
p58875
sg12
Vupdate_units
p58876
sg14
(lp58877
g19111
asg2
g58872
sbs(g245
g140
g30263
tp58878
g30259
sS'from_levels_and_colors'
p58879
(icodemend.demo.code_suggest
Element
p58880
(dp58881
g10
I6
sg11
S"a helper routine to generate a cmap and a norm instance which behave similar to contourf 's levels and colors arguments ."
p58882
sg12
Vfrom_levels_and_colors
p58883
sg14
(lp58884
(icodemend.demo.code_suggest
Element
p58885
(dp58886
g10
I1
sg11
S'the fill color to use for each level . if extend is " neither " there must be n_level - 1 colors . for an extend of " min " or " max " add one extra color , and for an extend of " both " add two colors .'
p58887
sg12
Vfrom_levels_and_colors.colors
p58888
sg14
(lp58889
g56168
asg2
S'colors'
p58890
sba(icodemend.demo.code_suggest
Element
p58891
(dp58892
g10
I1
sg11
S'the behaviour when a value falls out of range of the given levels . see contourf ( ) for details .'
p58893
sg12
Vfrom_levels_and_colors.extend
p58894
sg14
(lp58895
g44979
asg2
S'extend'
p58896
sbag50319
asg2
g58879
sbsS'get_smart_bounds'
p58897
(icodemend.demo.code_suggest
Element
p58898
(dp58899
g10
I0
sg11
S'get whether the axis has smart bounds get whether the spine has smart bounds'
p58900
sg12
Vget_smart_bounds
p58901
sg14
(lp58902
sg2
g58897
sbs(g117
g118
g28584
tp58903
g28580
sS'detrend'
p58904
(icodemend.demo.code_suggest
Element
p58905
(dp58906
g10
I2
sg11
S'return x with its trend removed .'
p58907
sg12
Vdetrend
p58908
sg14
(lp58909
sg2
g58904
sbs(S'set_yticklabels'
p58910
g18297
tp58911
g18292
s(S'gca'
p58912
g54073
tp58913
g54068
s(g12678
g1010
g44446
tp58914
g44442
s(g944
g945
g57942
tp58915
g57938
s(g8547
g23819
g22500
tp58916
g22496
s(g5424
g2392
S'1'
tp58917
g44685
s(S'add_tool'
p58918
g40496
tp58919
g40491
s(S'semilogy'
p58920
g39319
tp58921
g39314
s(g101
S'c'
g21577
tp58922
g21573
s(S'hexbin'
p58923
S'x'
tp58924
g25994
s(g766
g5025
S'1'
tp58925
g46660
s(g8547
g8548
g8548
tp58926
g19490
s(g117
g132
g28799
tp58927
g28795
s(S'axhline'
p58928
g3699
tp58929
g3694
s(S'unique'
p58930
S'x'
tp58931
g6021
s(S'iter_segments'
p58932
g42451
tp58933
g42446
s(g1170
g32850
g33925
tp58934
g33921
s(S'imread'
p58935
g19182
g24696
tp58936
g24692
s(g1170
g16552
g16552
tp58937
g57591
sS'pil_to_array'
p58938
(icodemend.demo.code_suggest
Element
p58939
(dp58940
g10
I0
sg11
S'load a pil image and return it as a numpy array .'
p58941
sg12
Vpil_to_array
p58942
sg14
(lp58943
sg2
g58938
sbs(S'contour'
p58944
g17692
tp58945
g17682
s(S'pcolor'
p58946
g49559
tp58947
g49554
s(S'errorbar'
p58948
g56048
tp58949
g56043
s(S'csd'
p58950
g51485
tp58951
g51480
s(g101
S'c'
g21277
tp58952
g21273
s(g332
S'x'
g22586
tp58953
g22582
s(S'angle_spectrum'
p58954
g18738
tp58955
g18733
s(S'pcolor'
p58956
g49553
tp58957
g49548
s(S'log2'
p58958
S'x'
tp58959
g31605
sS'new_gc'
p58960
(icodemend.demo.code_suggest
Element
p58961
(dp58962
g10
I1
sg11
S'return an instance of a graphicscontextbase'
p58963
sg12
Vnew_gc
p58964
sg14
(lp58965
sg2
g58960
sbs(g1170
g16552
g57585
tp58966
g57581
s(g26208
g42628
g32292
tp58967
g32288
s(S'add_tool'
p58968
g40490
tp58969
g40485
s(g93
g4800
g25449
tp58970
g25445
s(S'strftime'
p58971
g54963
tp58972
g54958
s(g101
g118
g21930
tp58973
g21926
s(g93
g3084
g36610
tp58974
g42086
s(S'tripcolor'
p58975
g56826
tp58976
g56821
s(S'colorbar'
p58977
g12052
tp58978
g12038
s(g2814
g10936
g55364
tp58979
g55360
s(S'axvspan'
p58980
g54736
tp58981
g54731
s(g117
g132
g28819
tp58982
g28815
s(S'set_yticklabels'
p58983
g18268
tp58984
g18263
s(g8547
g40051
g55811
tp58985
g55807
s(g101
S'c'
g10
tp58986
g21315
s(S'annotate'
p58987
S'verticalalignment'
p58988
tp58989
(icodemend.demo.code_suggest
Element
p58990
(dp58991
g10
I15
sg11
S'set the vertical alignment'
p58992
sg12
Vannotate.verticalalignment
p58993
sg14
(lp58994
g10121
ag34686
ag45091
asg2
g58988
sbs(S'plot'
p58995
g29880
tp58996
g29875
s(S'csd'
p58997
g51545
tp58998
g51540
s(g117
g909
S'2'
tp58999
g29266
s(S'axvline'
p59000
g56266
tp59001
g56257
s(S'TextArea'
p59002
g31225
tp59003
g31220
s(S'annotate'
p59004
S'arrowprops'
p59005
tp59006
(icodemend.demo.code_suggest
Element
p59007
(dp59008
g10
I88
sg11
S'arrowprops , if not none , is a dictionary of line properties ( see matplotlib.lines.line2d ) for the arrow that connects annotation to the point .|||dictionary of line properties for the arrow that connects the annotation to the point . if the dictionnary has a key arrowstyle , a fancyarrowpatch instance is created and drawn . see matplotlib.text.annotation for more details on valid options . default is none .'
p59009
sg12
Vannotate.arrowprops
p59010
sg14
(lp59011
(icodemend.demo.code_suggest
Element
p59012
(dp59013
g10
I2
sg11
S''
sg12
Vannotate.arrowprops.{'arrowstyle': '<->'}
p59014
sg14
(lp59015
sg2
S"{'arrowstyle': '<->'}"
p59016
sbag42981
ag53732
ag38825
ag53187
asg2
g59005
sbsS'parse'
p59017
(icodemend.demo.code_suggest
Element
p59018
(dp59019
g10
I3
sg11
S'parse the given fontconfig pattern and return a dictionary of key/value pairs useful for initializing a font_manager.fontproperties object . parse the given math expression s at the given dpi . parse expression s using the given fonts_object for output , at the given fontsize and dpi .'
p59020
sg12
Vparse
p59021
sg14
(lp59022
g58510
a(icodemend.demo.code_suggest
Element
p59023
(dp59024
g10
I0
sg11
S'parse expression s using the given fonts_object for output , at the given fontsize and dpi .'
p59025
sg12
Vparse.fonts_object
p59026
sg14
(lp59027
sg2
S'fonts_object'
p59028
sbag5970
ag7129
ag33075
ag26620
asg2
g59017
sbs(S'tricontourf'
p59029
g11618
tp59030
g11608
s(g2182
g325
g41810
tp59031
g41806
s(g8266
g102
S'1'
tp59032
g54637
s(S'annotate'
p59033
S'variant'
p59034
tp59035
(icodemend.demo.code_suggest
Element
p59036
(dp59037
g10
I0
sg11
S"set the font variant , either ' normal ' or ' small-caps ' ."
p59038
sg12
Vannotate.variant
p59039
sg14
(lp59040
sg2
g59034
sbs(S'cohere'
p59041
S'y'
tp59042
g43868
s(S'score_family'
p59043
g7305
tp59044
g7300
s(S'psd'
p59045
g36940
tp59046
g36935
s(g101
g325
g21769
tp59047
g21765
s(g16
g132
S'C'
tp59048
g46503
s(g117
g102
g29241
tp59049
g29237
s(S'semilogx'
p59050
g39073
tp59051
g39068
s(S'axvspan'
p59052
g54742
tp59053
g54737
s(g245
g140
g30513
tp59054
g30509
s(g117
g118
g28324
tp59055
g28320
s(g139
g140
g1747
tp59056
g1743
s(g332
g627
g46933
tp59057
g46929
s(S'angle_spectrum'
p59058
g18977
tp59059
g18972
s(S'contains_points'
p59060
g48129
tp59061
g48124
s(S'pcolormesh'
p59062
S'cmap'
p59063
tp59064
(icodemend.demo.code_suggest
Element
p59065
(dp59066
g10
I43
sg11
S'c may be a masked array , but x and y may not . masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .|||set the colormap for luminance data|||a matplotlib.colors.colormap instance . if none , use rc settings .'
p59067
sg12
Vpcolormesh.cmap
p59068
sg14
(lp59069
g58182
ag49359
ag46085
a(icodemend.demo.code_suggest
Element
p59070
(dp59071
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.'Greys'
p59072
sg14
(lp59073
sg2
S"'Greys'"
p59074
sbag20885
ag51189
ag7912
ag26851
ag20226
a(icodemend.demo.code_suggest
Element
p59075
(dp59076
g10
I1
sg11
S''
sg12
Vpcolormesh.cmap.'gray'
p59077
sg14
(lp59078
sg2
S"'gray'"
p59079
sbag52580
ag26752
ag54382
ag42955
ag41502
ag46248
asg2
g59063
sbsg47045
(icodemend.demo.code_suggest
Element
p59080
(dp59081
g10
I3
sg11
S''
sg12
VAnchoredText
p59082
sg14
(lp59083
g37901
ag31274
ag48983
ag47048
ag36740
asg2
g47045
sbs(g4371
g7032
g17529
tp59084
g17525
s(g101
S'c'
g21295
tp59085
g21291
sS'get_boxstyle'
p59086
(icodemend.demo.code_suggest
Element
p59087
(dp59088
g10
I0
sg11
S'return the boxstyle object'
p59089
sg12
Vget_boxstyle
p59090
sg14
(lp59091
sg2
g59086
sbs(g5848
g5849
S'c_min'
p59092
tp59093
(icodemend.demo.code_suggest
Element
p59094
(dp59095
g10
I1
sg11
S''
sg12
VSlider.valinit.c_min
p59096
sg14
(lp59097
sg2
g59092
sbsS'get_mfc'
p59098
(icodemend.demo.code_suggest
Element
p59099
(dp59100
g10
I0
sg11
S'alias for get_markerfacecolor'
p59101
sg12
Vget_mfc
p59102
sg14
(lp59103
sg2
g59098
sbsS'safezip'
p59104
(icodemend.demo.code_suggest
Element
p59105
(dp59106
g10
I0
sg11
S'make sure args are equal len before zipping'
p59107
sg12
Vsafezip
p59108
sg14
(lp59109
g58308
asg2
g59104
sbs(S'deprecated'
p59110
g42853
tp59111
g42848
s(g16
g132
g46472
tp59112
g46468
s(S'loglog'
p59113
g53703
tp59114
g53698
s(g766
g325
g16470
tp59115
g16466
s(g452
g118
g55921
tp59116
g55917
s(S'render_rect_filled'
p59117
g32967
tp59118
g32962
s(g117
g118
g27636
tp59119
g27632
s(g46358
g3084
g16359
tp59120
g16355
s(S'barh'
p59121
S'errorevery'
p59122
tp59123
(icodemend.demo.code_suggest
Element
p59124
(dp59125
g10
I0
sg11
S'subsamples the errorbars . e.g. , if errorevery=5 , errorbars for every 5-th datapoint will be plotted . the data plot itself still shows all data points .'
p59126
sg12
Vbarh.errorevery
p59127
sg14
(lp59128
sg2
g59122
sbs(S'spy'
p59129
g34591
tp59130
g34586
s(g766
g666
g666
tp59131
g3965
s(S'violin'
p59132
g5607
tp59133
g5602
s(g101
g2392
S'4'
tp59134
g15679
s(S'magnitude_spectrum'
p59135
g48092
tp59136
g48087
s(g117
g4274
g28968
tp59137
g28964
s(S'get'
p59138
g49976
tp59139
g49971
s(S'plot_date'
p59140
g19979
tp59141
g19974
s(S'pcolormesh'
p59142
S'C'
tp59143
(icodemend.demo.code_suggest
Element
p59144
(dp59145
g10
I0
sg11
S'c may be a masked array , but x and y may not . masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .'
p59146
sg12
Vpcolormesh.C
p59147
sg14
(lp59148
sg2
S'C'
sbs(S'tricontour'
p59149
g1457
tp59150
g1452
s(g117
g909
g29274
tp59151
g29270
s(g117
g118
g27512
tp59152
g27508
s(S'gca'
p59153
g54061
tp59154
g54056
s(S'vlines'
p59155
g53924
tp59156
g53919
s(g4371
g7032
g17524
tp59157
g17520
s(S'grid'
p59158
g50644
tp59159
g50639
s(S'plot_date'
p59160
g19925
tp59161
g19920
s(S'get'
p59162
g49988
tp59163
g49983
s(g93
g4800
g25354
tp59164
g25350
s(g245
g140
g30518
tp59165
g30514
sS'get_fontname'
p59166
(icodemend.demo.code_suggest
Element
p59167
(dp59168
g10
I0
sg11
S"return the font name , e.g. , ' times-roman ' alias for get_name"
p59169
sg12
Vget_fontname
p59170
sg14
(lp59171
sg2
g59166
sbs(g93
g38823
g59016
tp59172
g59012
s(S'add_subplot'
p59173
g47495
tp59174
g47490
s(S'triplot'
p59175
S'y'
tp59176
g54483
s(g117
g4163
g11104
tp59177
g11100
s(g10369
g32525
g32656
tp59178
g32652
sS'get_wrap'
p59179
(icodemend.demo.code_suggest
Element
p59180
(dp59181
g10
I0
sg11
S'returns the wrapping state for the text .'
p59182
sg12
Vget_wrap
p59183
sg14
(lp59184
sg2
g59179
sbsg12656
(icodemend.demo.code_suggest
Element
p59185
(dp59186
g10
I2
sg11
S''
sg12
VLinearTriInterpolator
p59187
sg14
(lp59188
g57603
ag31789
ag12658
asg2
g12656
sbs(S'acorr'
p59189
g15952
tp59190
g15947
s(g117
g13338
g29684
tp59191
g29680
s(S'barh'
p59192
S'ymargin'
p59193
tp59194
(icodemend.demo.code_suggest
Element
p59195
(dp59196
g10
I0
sg11
S'set padding of y data limits prior to autoscaling .'
p59197
sg12
Vbarh.ymargin
p59198
sg14
(lp59199
sg2
g59193
sbs(S'getp'
p59200
S'label'
p59201
tp59202
(icodemend.demo.code_suggest
Element
p59203
(dp59204
g10
I0
sg11
S'set the label to s for auto legend .'
p59205
sg12
Vgetp.label
p59206
sg14
(lp59207
sg2
g59201
sbs(g117
g40386
g438
tp59208
g29696
s(g452
g453
g7208
tp59209
g7204
s(g117
g348
g29553
tp59210
g29549
s(g1170
g118
g58854
tp59211
g58850
s(g324
g785
g9477
tp59212
g9473
s(S'broken_barh'
p59213
g48697
tp59214
g48692
s(S'inside_poly'
p59215
S'x'
tp59216
g37307
s(S'set_xticklabels'
p59217
g17145
tp59218
g17140
s(g139
g13048
g1944
tp59219
g1960
s(S'set_yticklabels'
p59220
g18190
tp59221
g18185
s(S'bxp'
p59222
g41619
tp59223
g41614
s(S'broken_barh'
p59224
g48805
tp59225
g48800
s(S'loglog'
p59226
g53721
tp59227
g53716
s(S'psd'
p59228
g36821
tp59229
g36811
s(S'blend_soft_light'
p59230
g51332
tp59231
g51327
sS'get_setters'
p59232
(icodemend.demo.code_suggest
Element
p59233
(dp59234
g10
I0
sg11
S'get the attribute strings with setters for object .'
p59235
sg12
Vget_setters
p59236
sg14
(lp59237
sg2
g59232
sbs(S'figtext'
p59238
g11239
tp59239
g11234
sS'set_marker'
p59240
(icodemend.demo.code_suggest
Element
p59241
(dp59242
g10
I5
sg11
S'set the line marker'
p59243
sg12
Vset_marker
p59244
sg14
(lp59245
g32403
asg2
g59240
sbs(S'SimpleLineShadow'
p59246
g55633
tp59247
g55628
s(S'angle_spectrum'
p59248
g18876
tp59249
g18871
s(g5424
g132
g50570
tp59250
g50566
s(S'delaxes'
p59251
g41332
tp59252
g41327
s(g1170
g32850
S'b'
tp59253
g33912
s(S'errorbar'
p59254
g56024
tp59255
g56019
s(S'add_subplot'
p59256
g47531
tp59257
g47526
s(S'arrow'
p59258
g2641
tp59259
g2636
s(S'semilogx'
p59260
g39102
tp59261
g39097
sS'annotate'
p59262
(icodemend.demo.code_suggest
Element
p59263
(dp59264
g10
I227
sg11
S'create an annotation'
p59265
sg12
Vannotate
p59266
sg14
(lp59267
g58711
ag25275
ag22543
ag59007
ag5507
ag54224
ag46218
a(icodemend.demo.code_suggest
Element
p59268
(dp59269
g10
I17
sg11
S'set the horizontal alignment to one of'
p59270
sg12
Vannotate.horizontalalignment
p59271
sg14
(lp59272
g13489
a(icodemend.demo.code_suggest
Element
p59273
(dp59274
g10
I6
sg11
S''
sg12
Vannotate.horizontalalignment.'left'
p59275
sg14
(lp59276
sg2
S"'left'"
p59277
sbag25639
ag57195
asg2
S'horizontalalignment'
p59278
sbag58990
ag41697
ag57903
ag54986
a(icodemend.demo.code_suggest
Element
p59279
(dp59280
g10
I4
sg11
S'set whether artist uses clipping .'
p59281
sg12
Vannotate.clip_on
p59282
sg14
(lp59283
(icodemend.demo.code_suggest
Element
p59284
(dp59285
g10
I3
sg11
S''
sg12
Vannotate.clip_on.True
p59286
sg14
(lp59287
sg2
g438
sbag55493
asg2
S'clip_on'
p59288
sbag8735
ag53309
ag47192
ag51964
ag58433
a(icodemend.demo.code_suggest
Element
p59289
(dp59290
g10
I1
sg11
S'set the alpha value used for blending - not supported on all backends .'
p59291
sg12
Vannotate.alpha
p59292
sg14
(lp59293
g13716
asg2
S'alpha'
p59294
sba(icodemend.demo.code_suggest
Element
p59295
(dp59296
g10
I1
sg11
S'set the background color of the text by updating the bbox .'
p59297
sg12
Vannotate.backgroundcolor
p59298
sg14
(lp59299
g47349
asg2
S'backgroundcolor'
p59300
sbag42081
ag56221
a(icodemend.demo.code_suggest
Element
p59301
(dp59302
g10
I1
sg11
S'set the font weight .'
p59303
sg12
Vannotate.weight
p59304
sg14
(lp59305
g45328
asg2
S'weight'
p59306
sbag57835
ag10599
ag56649
ag58030
ag12637
ag52271
ag48860
a(icodemend.demo.code_suggest
Element
p59307
(dp59308
g10
I0
sg11
S"set the artist 's clip path , which may be"
p59309
sg12
Vannotate.clip_path
p59310
sg14
(lp59311
sg2
S'clip_path'
p59312
sbag50449
ag32604
ag48874
a(icodemend.demo.code_suggest
Element
p59313
(dp59314
g10
I0
sg11
S'replace the contains test used by this artist .'
p59315
sg12
Vannotate.contains
p59316
sg14
(lp59317
sg2
S'contains'
p59318
sbag15294
ag10684
ag19320
ag43577
ag15180
ag33966
ag46770
a(icodemend.demo.code_suggest
Element
p59319
(dp59320
g10
I0
sg11
S'set the line marker'
p59321
sg12
Vannotate.marker
p59322
sg14
(lp59323
sg2
S'marker'
p59324
sbag20386
ag49041
ag37289
ag46210
ag40736
ag57568
ag32541
ag6191
ag41363
ag41573
ag52636
a(icodemend.demo.code_suggest
Element
p59325
(dp59326
g10
I0
sg11
S'sets the snap setting which may be'
p59327
sg12
Vannotate.snap
p59328
sg14
(lp59329
sg2
S'snap'
p59330
sbag19219
ag7824
ag676
ag55249
ag19093
ag7978
ag59036
a(icodemend.demo.code_suggest
Element
p59331
(dp59332
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p59333
sg12
Vannotate.vertices
p59334
sg14
(lp59335
sg2
S'vertices'
p59336
sba(icodemend.demo.code_suggest
Element
p59337
(dp59338
g10
I0
sg11
S"set the artist 's visiblity ."
p59339
sg12
Vannotate.visible
p59340
sg14
(lp59341
sg2
S'visible'
p59342
sbag44036
ag45831
a(icodemend.demo.code_suggest
Element
p59343
(dp59344
g10
I0
sg11
S'set the label for the xaxis .'
p59345
sg12
Vannotate.xlabel
p59346
sg14
(lp59347
sg2
S'xlabel'
p59348
sbag26444
ag12560
ag51214
ag50393
ag24782
ag49051
a(icodemend.demo.code_suggest
Element
p59349
(dp59350
g10
I0
sg11
S'set the label for the yaxis'
p59351
sg12
Vannotate.ylabel
p59352
sg14
(lp59353
sg2
S'ylabel'
p59354
sbag37528
ag35540
ag31576
a(icodemend.demo.code_suggest
Element
p59355
(dp59356
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p59357
sg12
Vannotate.yticklabels
p59358
sg14
(lp59359
sg2
S'yticklabels'
p59360
sbag58606
asg2
g59262
sbs(S'plot_date'
p59361
g19759
tp59362
g19749
sS'get_ha'
p59363
(icodemend.demo.code_suggest
Element
p59364
(dp59365
g10
I0
sg11
S'alias for get_horizontalalignment'
p59366
sg12
Vget_ha
p59367
sg14
(lp59368
sg2
g59363
sbsS'get_path_collection_extents'
p59369
(icodemend.demo.code_suggest
Element
p59370
(dp59371
g10
I0
sg11
S'given a sequence of path objects , transform objects and offsets , as found in a pathcollection , returns the bounding box that encapsulates all of them .'
p59372
sg12
Vget_path_collection_extents
p59373
sg14
(lp59374
g42490
ag57063
ag20795
ag5629
ag33416
asg2
g59369
sbs(g117
g4340
g29579
tp59375
g29575
s(S'quiver'
p59376
g31081
tp59377
g31076
s(g101
g4274
g21680
tp59378
g21676
s(g1003
g57406
g39751
tp59379
g39747
s(S'add_axes'
p59380
S'visible'
p59381
tp59382
(icodemend.demo.code_suggest
Element
p59383
(dp59384
g10
I3
sg11
S"set the artist 's visiblity ."
p59385
sg12
Vadd_axes.visible
p59386
sg14
(lp59387
g32777
asg2
g59381
sbs(g117
g132
g28745
tp59388
g28741
s(g1003
g12162
g438
tp59389
g39716
s(g16
g489
g13832
tp59390
g46560
s(g8266
g110
g44203
tp59391
g44199
s(g452
g453
g7241
tp59392
g7237
s(g452
g132
g31858
tp59393
g31854
s(g766
g7032
g19278
tp59394
g19274
s(g324
g785
g9497
tp59395
g9493
s(g1170
g132
g58828
tp59396
g58824
s(g8547
g8548
g19527
tp59397
g19523
sS'relim'
p59398
(icodemend.demo.code_suggest
Element
p59399
(dp59400
g10
I21
sg11
S'recompute the data limits based on current artists .'
p59401
sg12
Vrelim
p59402
sg14
(lp59403
sg2
g59398
sbs(g16
g17
g42007
tp59404
g42003
sS'candlestick2_ochl'
p59405
(icodemend.demo.code_suggest
Element
p59406
(dp59407
g10
I0
sg11
S'represent the open , close as a bar line and high low range as a vertical line .'
p59408
sg12
Vcandlestick2_ochl
p59409
sg14
(lp59410
g55013
ag41673
ag40752
ag33786
ag46106
ag43054
ag53401
ag3877
ag12151
asg2
g59405
sbs(S'thetagrids'
p59411
g53422
tp59412
g53417
sS'Error'
p59413
(icodemend.demo.code_suggest
Element
p59414
(dp59415
g10
I0
sg11
S'helper class to raise parser errors .'
p59416
sg12
VError
p59417
sg14
(lp59418
sg2
g59413
sbs(S'text'
p59419
g48434
tp59420
g48429
s(g117
g118
g27809
tp59421
g27805
s(S'psd'
p59422
g36838
tp59423
g36833
s(S'plot'
p59424
g29786
tp59425
g29776
s(S'annotate'
p59426
g59288
tp59427
g59279
s(g6146
S'manual'
p59428
g408
tp59429
g404
s(S'phase_spectrum'
p59430
g52445
tp59431
g52440
s(S'eventplot'
p59432
g23541
tp59433
g23536
s(g5975
g4274
g865
tp59434
g19718
s(S'pcolor'
p59435
g49583
tp59436
g49578
s(S'quiver'
p59437
g30821
tp59438
g30796
s(g117
g118
g27784
tp59439
g27780
s(S'set_ylim'
p59440
g32314
tp59441
g32299
s(g252
g4340
g581
tp59442
g577
s(g93
g161
g58730
tp59443
g58726
s(g388
g389
g16974
tp59444
g16970
sS'get_majorticklines'
p59445
(icodemend.demo.code_suggest
Element
p59446
(dp59447
g10
I1
sg11
S'return the major tick lines as a list of line2d instances'
p59448
sg12
Vget_majorticklines
p59449
sg14
(lp59450
sg2
g59445
sbsg19449
(icodemend.demo.code_suggest
Element
p59451
(dp59452
g10
I48
sg11
S''
sg12
VSlider
p59453
sg14
(lp59454
(icodemend.demo.code_suggest
Element
p59455
(dp59456
g10
I46
sg11
S'the slider initial position'
p59457
sg12
VSlider.valinit
p59458
sg14
(lp59459
(icodemend.demo.code_suggest
Element
p59460
(dp59461
g10
I6
sg11
S''
sg12
VSlider.valinit.1
p59462
sg14
(lp59463
sg2
S'1'
sbag5851
a(icodemend.demo.code_suggest
Element
p59464
(dp59465
g10
I4
sg11
S''
sg12
VSlider.valinit.a0
p59466
sg14
(lp59467
sg2
S'a0'
p59468
sba(icodemend.demo.code_suggest
Element
p59469
(dp59470
g10
I4
sg11
S''
sg12
VSlider.valinit.f0
p59471
sg14
(lp59472
sg2
g5476
sbag49333
ag50166
ag48577
ag15731
a(icodemend.demo.code_suggest
Element
p59473
(dp59474
g10
I2
sg11
S''
sg12
VSlider.valinit.n1_init
p59475
sg14
(lp59476
sg2
S'n1_init'
p59477
sbag17415
a(icodemend.demo.code_suggest
Element
p59478
(dp59479
g10
I2
sg11
S''
sg12
VSlider.valinit.n3_init
p59480
sg14
(lp59481
sg2
S'n3_init'
p59482
sbag12622
ag57754
ag31336
ag51830
ag33279
a(icodemend.demo.code_suggest
Element
p59483
(dp59484
g10
I1
sg11
S''
sg12
VSlider.valinit.c_max
p59485
sg14
(lp59486
sg2
S'c_max'
p59487
sbag59094
ag31962
ag57495
asg2
S'valinit'
p59488
sbag56403
ag26928
ag26945
ag40948
ag49907
ag58686
ag50175
ag49366
ag52857
ag19452
asg2
g19449
sbsS'get_axisbelow'
p59489
(icodemend.demo.code_suggest
Element
p59490
(dp59491
g10
I0
sg11
S'get whether axis below is true or not'
p59492
sg12
Vget_axisbelow
p59493
sg14
(lp59494
sg2
g59489
sbs(g16
g489
g46544
tp59495
g46540
s(g109
g44961
g1944
tp59496
g52243
s(g4998
g325
g59079
tp59497
g59075
sS'set_zorder'
p59498
(icodemend.demo.code_suggest
Element
p59499
(dp59500
g10
I23
sg11
S'set the zorder for the artist .'
p59501
sg12
Vset_zorder
p59502
sg14
(lp59503
sg2
g59498
sbs(S'plot_date'
p59504
g19913
tp59505
g19908
sS'get_used_characters'
p59506
(icodemend.demo.code_suggest
Element
p59507
(dp59508
g10
I0
sg11
S'get the set of characters that were used in the math expression .'
p59509
sg12
Vget_used_characters
p59510
sg14
(lp59511
sg2
g59506
sbs(S'get_kern_dist_from_name'
p59512
g57059
tp59513
g57054
s(g245
g140
g30238
tp59514
g30234
s(g5424
g102
g50581
tp59515
g50577
s(g101
g118
g21995
tp59516
g21991
sS'set_drawstyle'
p59517
(icodemend.demo.code_suggest
Element
p59518
(dp59519
g10
I1
sg11
S'set the drawstyle of the plot'
p59520
sg12
Vset_drawstyle
p59521
sg14
(lp59522
sg2
g59517
sbs(S'complex_spectrum'
p59523
g32902
tp59524
g32897
s(S'broken_barh'
p59525
g48829
tp59526
g48824
s(g2250
g132
g30757
tp59527
g30753
s(g6596
g102
g53582
tp59528
g53578
s(g93
g4800
g25474
tp59529
g25470
s(S'Button'
p59530
g32045
tp59531
g32035
s(g8266
g8267
g8171
tp59532
g8167
s(S'quiver'
p59533
S'V'
tp59534
g30923
s(g452
g453
g453
tp59535
g7166
s(g16
g132
g46467
tp59536
g46463
s(S'set_yticklabels'
p59537
g18214
tp59538
g18209
s(g766
g325
g16480
tp59539
g16476
s(S'barh'
p59540
S'markersize'
p59541
tp59542
(icodemend.demo.code_suggest
Element
p59543
(dp59544
g10
I0
sg11
S'where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p59545
sg12
Vbarh.markersize
p59546
sg14
(lp59547
sg2
g59541
sbsS'dist'
p59548
(icodemend.demo.code_suggest
Element
p59549
(dp59550
g10
I1
sg11
S'return the distance between two points .'
p59551
sg12
Vdist
p59552
sg14
(lp59553
sg2
g59548
sbs(g10369
g13047
g13047
tp59554
g13043
s(S'on_changed'
p59555
g36228
tp59556
g36223
sS'get_kerning'
p59557
(icodemend.demo.code_suggest
Element
p59558
(dp59559
g10
I0
sg11
S'return the amount of kerning between this and the given character .'
p59560
sg12
Vget_kerning
p59561
sg14
(lp59562
sg2
g59557
sbs(g5576
g5577
g16873
tp59563
g16869
s(S'plotting'
p59564
g15862
tp59565
g15857
s(g117
g118
g27729
tp59566
g27725
s(S'CubicTriInterpolator'
p59567
S'z'
tp59568
(icodemend.demo.code_suggest
Element
p59569
(dp59570
g10
I0
sg11
S'array of values , defined at grid points , to interpolate between .'
p59571
sg12
VCubicTriInterpolator.z
p59572
sg14
(lp59573
sg2
S'z'
sbs(S'eventplot'
p59574
g23505
tp59575
g23500
s(S'frange'
p59576
g44931
tp59577
g44926
s(S'segments_intersect'
p59578
g35373
tp59579
g35368
s(S'table'
p59580
S'readonly'
p59581
tp59582
(icodemend.demo.code_suggest
Element
p59583
(dp59584
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p59585
sg12
Vtable.readonly
p59586
sg14
(lp59587
sg2
g59581
sbs(S'add_axes'
p59588
S'height'
p59589
tp59590
(icodemend.demo.code_suggest
Element
p59591
(dp59592
g10
I0
sg11
S"add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal axes kwargs plus projection which sets the projection type of the axes . ( for backward compatibility , polar=true may also be provided , which is equivalent to projection='polar ' ) . valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . some of these projections support additional kwargs , which may be provided to add_axes ( ) . typical usage :"
p59593
sg12
Vadd_axes.height
p59594
sg14
(lp59595
sg2
g59589
sbs(S'add_axes'
p59596
S'readonly'
p59597
tp59598
(icodemend.demo.code_suggest
Element
p59599
(dp59600
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p59601
sg12
Vadd_axes.readonly
p59602
sg14
(lp59603
sg2
g59597
sbs(S'update'
p59604
g34021
tp59605
g34016
sS'press_pan'
p59606
(icodemend.demo.code_suggest
Element
p59607
(dp59608
g10
I0
sg11
S'the press mouse button in pan/zoom mode callback'
p59609
sg12
Vpress_pan
p59610
sg14
(lp59611
sg2
g59606
sbs(S'annotate'
p59612
g59354
tp59613
g59349
s(S'loglog'
p59614
g53601
tp59615
g53596
s(S'set_ylim'
p59616
g32298
tp59617
g32274
s(S'SimplePatchShadow'
p59618
g39523
tp59619
g39518
s(S'add_subplot'
p59620
g47513
tp59621
g47508
s(g1003
S'whiskerprops'
p59622
g36605
tp59623
g36601
s(S'prctile'
p59624
S'p'
S'p'
tp59625
g10725
s(g452
g1149
g7996
tp59626
g55933
s(S'matshow'
p59627
g53003
tp59628
g52998
s(g117
g2251
g29135
tp59629
g29131
s(g101
S's'
g7637
tp59630
g7633
s(g6146
g7032
g14883
tp59631
g14879
s(g13284
S'x'
g55289
tp59632
g55285
s(S'set_contains'
p59633
g38065
tp59634
g38060
s(g117
g132
g28874
tp59635
g28870
s(S'barh'
p59636
S'visible'
p59637
tp59638
(icodemend.demo.code_suggest
Element
p59639
(dp59640
g10
I0
sg11
S"set the artist 's visiblity ."
p59641
sg12
Vbarh.visible
p59642
sg14
(lp59643
sg2
g59637
sbs(S'psd'
p59644
g36922
tp59645
g36917
s(g125
S'x'
S'5'
tp59646
g34800
s(S'hpack'
p59647
S'w'
tp59648
g50955
sS'list'
p59649
(icodemend.demo.code_suggest
Element
p59650
(dp59651
g10
I126
sg11
S'get a list of available moviewriters .'
p59652
sg12
Vlist
p59653
sg14
(lp59654
sg2
g59649
sbs(S'rgb_to_hsv'
p59655
g45828
tp59656
g45823
s(S'add_toolitem'
p59657
g45450
tp59658
g45445
s(S'add'
p59659
g55406
tp59660
g55401
s(g5424
g132
g50540
tp59661
g50536
s(S'pcolor'
p59662
g49523
tp59663
g49518
s(S'figtext'
p59664
g11555
tp59665
g11550
s(g24939
S'baseline'
p59666
S'v'
tp59667
g10433
s(S'plot_date'
p59668
g19823
tp59669
g19818
s(g252
g39555
S'2'
tp59670
g14549
s(S'volume_overlay'
p59671
g37371
tp59672
g37361
s(S'set_yticklabels'
p59673
g18350
tp59674
g18345
s(S'quiver'
p59675
S'C'
tp59676
g30912
sS'get_contains'
p59677
(icodemend.demo.code_suggest
Element
p59678
(dp59679
g10
I0
sg11
S'return the _ contains test used by the artist , or none for default .'
p59680
sg12
Vget_contains
p59681
sg14
(lp59682
sg2
g59677
sbs(g117
g132
g28909
tp59683
g28905
sg58351
(icodemend.demo.code_suggest
Element
p59684
(dp59685
g10
I77
sg11
S''
sg12
VCircle
p59686
sg14
(lp59687
g58354
asg2
g58351
sbs(S'drange'
p59688
g23085
tp59689
g23080
s(S'axhline'
p59690
g3663
tp59691
g3658
s(S'axhline'
p59692
g3819
tp59693
g3814
s(g4371
g8545
S'7'
tp59694
g1094
s(S'bxp'
p59695
g41649
tp59696
g41644
s(S'figtext'
p59697
g11257
tp59698
g11252
s(g93
g4800
g25509
tp59699
g25505
s(g1170
g132
g58833
tp59700
g58829
sS'get_images'
p59701
(icodemend.demo.code_suggest
Element
p59702
(dp59703
g10
I5
sg11
S'return a list of axes images contained by the axes'
p59704
sg12
Vget_images
p59705
sg14
(lp59706
sg2
g59701
sbs(g421
g2392
S'1'
tp59707
g16443
s(g125
g19538
g37557
tp59708
g37553
s(S'set_xticklabels'
p59709
g17205
tp59710
g17200
s(S'grid'
p59711
g50571
tp59712
g50531
s(S'set_ticklabels'
p59713
g10352
tp59714
g10347
s(g101
g667
g438
tp59715
g22159
s(S'loglog'
p59716
g53625
tp59717
g53620
s(g245
g140
g30268
tp59718
g30264
s(g4371
g666
g3983
tp59719
g17632
s(S'annotate'
p59720
g59300
tp59721
g59295
s(S'pcolormesh'
p59722
S'yscale'
p59723
tp59724
(icodemend.demo.code_suggest
Element
p59725
(dp59726
g10
I0
sg11
S'set the scaling of the y-axis'
p59727
sg12
Vpcolormesh.yscale
p59728
sg14
(lp59729
sg2
g59723
sbs(g965
g118
g37972
tp59730
g37968
s(g6217
g132
g2439
tp59731
g2435
s(g2250
g20325
g30805
tp59732
g30801
s(g117
S'x'
g29348
tp59733
g29344
s(S'cohere_pairs'
p59734
g44390
tp59735
g44385
s(g252
g7452
g14325
tp59736
g14321
s(S'plot_date'
p59737
g19877
tp59738
g19872
s(g117
g34343
g29724
tp59739
g29720
s(S'table'
p59740
S'cursor_props'
p59741
tp59742
(icodemend.demo.code_suggest
Element
p59743
(dp59744
g10
I0
sg11
S'set the cursor property as'
p59745
sg12
Vtable.cursor_props
p59746
sg14
(lp59747
sg2
g59741
sbs(S'hist'
p59748
g58839
tp59749
g58819
s(S'getp'
p59750
S'xscale'
p59751
tp59752
(icodemend.demo.code_suggest
Element
p59753
(dp59754
g10
I0
sg11
S'set the scaling of the x-axis'
p59755
sg12
Vgetp.xscale
p59756
sg14
(lp59757
sg2
g59751
sbs(g766
g7032
g19308
tp59758
g19304
s(S'text'
p59759
g48314
tp59760
g48309
s(S'hlines'
p59761
g5317
tp59762
g5307
s(S'barbs'
p59763
S'xlim'
p59764
tp59765
(icodemend.demo.code_suggest
Element
p59766
(dp59767
g10
I0
sg11
S'set the data limits for the xaxis'
p59768
sg12
Vbarbs.xlim
p59769
sg14
(lp59770
sg2
g59764
sbs(g139
g18399
g1979
tp59771
g1975
s(S'table'
p59772
S'picker'
p59773
tp59774
(icodemend.demo.code_suggest
Element
p59775
(dp59776
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p59777
sg12
Vtable.picker
p59778
sg14
(lp59779
sg2
g59773
sbs(g117
g118
g28409
tp59780
g28405
s(S'pcolormesh'
p59781
S'offsets'
p59782
tp59783
(icodemend.demo.code_suggest
Element
p59784
(dp59785
g10
I0
sg11
S'set the offsets for the collection .'
p59786
sg12
Vpcolormesh.offsets
p59787
sg14
(lp59788
sg2
g59782
sbs(S'semilogx'
p59789
g38917
tp59790
g38912
s(S'quiver'
p59791
g30973
tp59792
g30968
s(g16
g945
g945
tp59793
g13809
s(S'arrow'
p59794
g2683
tp59795
g2678
s(S'angle_spectrum'
p59796
g18948
tp59797
g18943
s(S'VPacker'
p59798
g43103
tp59799
g43094
s(g245
g140
g30203
tp59800
g30199
s(S'vlines'
p59801
g53900
tp59802
g53895
s(S'yticks'
p59803
g16115
tp59804
g16110
sS'flag'
p59805
(icodemend.demo.code_suggest
Element
p59806
(dp59807
g10
I0
sg11
S'set the default colormap to flag and apply to current image if any .'
p59808
sg12
Vflag
p59809
sg14
(lp59810
sg2
g59805
sbs(g2250
g50160
g24107
tp59811
g24103
s(S'figtext'
p59812
g11275
tp59813
g11270
s(S'set_xticklabels'
p59814
g17271
tp59815
g17266
s(g117
g2251
g29175
tp59816
g29171
s(S'axhspan'
p59817
g24274
tp59818
g24264
s(g20919
g7032
g1325
tp59819
g1321
s(S'broken_barh'
p59820
g48751
tp59821
g48746
s(g117
g132
g132
tp59822
g28704
s(S'annotate'
p59823
g59360
tp59824
g59355
s(g5562
g325
g10825
tp59825
g10821
s(g1170
g118
g58849
tp59826
g58845
s(S'gca'
p59827
g54091
tp59828
g54086
s(S'eventplot'
p59829
g23595
tp59830
g23590
s(g332
g627
g46943
tp59831
g46939
s(g8547
g16360
g50097
tp59832
g50093
s(S'semilogx'
p59833
g39108
tp59834
g39103
s(g5424
S'b'
g438
tp59835
g44350
s(g117
g118
g28254
tp59836
g28250
s(g117
g118
g28434
tp59837
g28430
s(S'pcolor'
p59838
S'Y'
tp59839
g49453
s(S'rgrids'
p59840
g57995
tp59841
g57990
s(g2182
g8780
g52996
tp59842
g52992
s(S'loglog'
p59843
g53643
tp59844
g53638
s(S'loglog'
p59845
g53607
tp59846
g53602
s(S'set_ylabel'
p59847
g36055
tp59848
g36050
s(S'violin_stats'
p59849
g58095
tp59850
g58090
s(S'getp'
p59851
S'picker'
p59852
tp59853
(icodemend.demo.code_suggest
Element
p59854
(dp59855
g10
I0
sg11
S'set the epsilon for picking used by this artist'
p59856
sg12
Vgetp.picker
p59857
sg14
(lp59858
sg2
g59852
sbs(S'add_axes'
p59859
S'codes'
p59860
tp59861
(icodemend.demo.code_suggest
Element
p59862
(dp59863
g10
I0
sg11
S'n-length array integers representing the codes of the path . if not none , codes must be the same length as vertices . if none , vertices will be treated as a series of line segments .'
p59864
sg12
Vadd_axes.codes
p59865
sg14
(lp59866
sg2
g59860
sbs(S'add_tool'
p59867
g40502
tp59868
g40497
sS'griddata'
p59869
(icodemend.demo.code_suggest
Element
p59870
(dp59871
g10
I62
sg11
S'interpolates from a nonuniformly spaced grid to some other grid .'
p59872
sg12
Vgriddata
p59873
sg14
(lp59874
g21085
ag57183
ag36357
asg2
g59869
sbs(S'bxp'
p59875
g41589
tp59876
g41584
s(g139
g18399
g2014
tp59877
g2010
s(S'get_sparse_matrix'
p59878
S'M'
tp59879
(icodemend.demo.code_suggest
Element
p59880
(dp59881
g10
I0
sg11
S'return a m x n sparse matrix with frac elements randomly filled .'
p59882
sg12
Vget_sparse_matrix.M
p59883
sg14
(lp59884
sg2
S'M'
sbs(S'phase_spectrum'
p59885
g52355
tp59886
g52350
sS'set_dpi_cor'
p59887
(icodemend.demo.code_suggest
Element
p59888
(dp59889
g10
I0
sg11
S'dpi_cor is currently used for linewidth-related things and shink factor .'
p59890
sg12
Vset_dpi_cor
p59891
sg14
(lp59892
sg2
g59887
sbs(S'axis'
p59893
g15090
tp59894
g15080
s(S'gca'
p59895
g54085
tp59896
g54080
s(g958
g959
S'4'
tp59897
g22886
s(g117
g132
g28914
tp59898
g28910
s(g125
S'x'
S'6'
tp59899
g34828
s(S'fill'
p59900
g55154
tp59901
g55149
s(g117
g118
g27954
tp59902
g27950
s(S'errorbar'
p59903
g56036
tp59904
g56031
sg23885
(icodemend.demo.code_suggest
Element
p59905
(dp59906
g10
I0
sg11
S''
sg12
VAbstractPathEffect
p59907
sg14
(lp59908
g23888
asg2
g23885
sbs(S'title'
p59909
g35825
tp59910
g35820
s(g944
g132
g35735
tp59911
g35731
s(g125
g2392
S'2'
tp59912
g56243
s(S'gca'
p59913
g54037
tp59914
g54032
sS'barbs'
p59915
(icodemend.demo.code_suggest
Element
p59916
(dp59917
g10
I6
sg11
S'plot a 2-d field of barbs .'
p59918
sg12
Vbarbs
p59919
sg14
(lp59920
g32144
ag16503
ag54504
ag52929
ag47386
ag10315
ag37857
ag58642
ag55499
a(icodemend.demo.code_suggest
Element
p59921
(dp59922
g10
I0
sg11
S'all arguments may be 1-d or 2-d arrays or sequences . if x and y are absent , they will be generated as a uniform grid . if u and v are 2-d arrays but x and y are 1-d , and if len(x ) and len(y ) match the column and row dimensions of u , then x and y will be expanded with numpy.meshgrid ( ) .|||u , v , c may be masked arrays , but masked x , y are not supported at present .'
p59923
sg12
Vbarbs.Y
p59924
sg14
(lp59925
sg2
S'Y'
sbag4851
ag55731
a(icodemend.demo.code_suggest
Element
p59926
(dp59927
g10
I0
sg11
S'set the alpha tranparencies of the collection .'
p59928
sg12
Vbarbs.alpha
p59929
sg14
(lp59930
sg2
S'alpha'
p59931
sbag49
ag57558
ag52865
ag57863
ag26420
ag10279
ag36483
ag50117
ag2297
ag22808
ag12473
ag728
ag46232
ag52250
ag25020
ag41559
ag27273
ag45226
a(icodemend.demo.code_suggest
Element
p59932
(dp59933
g10
I0
sg11
S'set the facecolor(s ) of the collection .'
p59934
sg12
Vbarbs.facecolor
p59935
sg14
(lp59936
sg2
S'facecolor'
p59937
sbag17854
ag40699
ag38146
ag45387
ag26605
a(icodemend.demo.code_suggest
Element
p59938
(dp59939
g10
I0
sg11
S'set the hatching pattern'
p59940
sg12
Vbarbs.hatch
p59941
sg14
(lp59942
sg2
S'hatch'
p59943
sbag58325
ag49116
ag7473
a(icodemend.demo.code_suggest
Element
p59944
(dp59945
g10
I0
sg11
S'set how offsets are applied .'
p59946
sg12
Vbarbs.offset_position
p59947
sg14
(lp59948
sg2
S'offset_position'
p59949
sbag32015
ag51784
ag32951
ag32181
ag55476
ag26584
a(icodemend.demo.code_suggest
Element
p59950
(dp59951
g10
I0
sg11
S'makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .'
p59952
sg12
Vbarbs.readonly
p59953
sg14
(lp59954
sg2
S'readonly'
p59955
sbag50262
ag14806
ag5652
ag57876
ag50062
ag20394
ag4172
ag42042
a(icodemend.demo.code_suggest
Element
p59956
(dp59957
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p59958
sg12
Vbarbs.vertices
p59959
sg14
(lp59960
sg2
S'vertices'
p59961
sbag12342
ag56535
ag59766
ag53765
ag19366
ag43302
ag7397
ag58864
ag58532
ag51299
ag58258
a(icodemend.demo.code_suggest
Element
p59962
(dp59963
g10
I0
sg11
S'set the y tick labels with list of strings labels .'
p59964
sg12
Vbarbs.yticklabels
p59965
sg14
(lp59966
sg2
S'yticklabels'
p59967
sbag22937
ag53290
asg2
g59915
sbsS'shade'
p59968
(icodemend.demo.code_suggest
Element
p59969
(dp59970
g10
I0
sg11
S'combine colormapped data values with an illumination intensity map ( a.k.a. " hillshade " ) of the values .'
p59971
sg12
Vshade
p59972
sg14
(lp59973
(icodemend.demo.code_suggest
Element
p59974
(dp59975
g10
I0
sg11
S'the type of blending used to combine the colormapped data values with the illumination intensity . for backwards compatibility , this defaults to " hsv " . note that for most topographic surfaces , " overlay " or " soft " appear more visually realistic . if a user-defined function is supplied , it is expected to combine an mxnx3 rgb array of floats ( ranging 0 to 1 ) with an mxnx1 hillshade array ( also 0 to 1 ) . ( call signature func(rgb , illum , * * kwargs ) ) additional kwargs supplied to this function will be passed on to the blend_mode function .'
p59976
sg12
Vshade.blend_mode
p59977
sg14
(lp59978
sg2
S'blend_mode'
p59979
sbag47214
ag53786
ag3207
ag6729
ag8975
ag57629
ag52789
ag12298
ag21106
asg2
g59968
sbs(S'magnitude_spectrum'
p59980
g48032
tp59981
g48027
s(S'table'
p59982
S'hatch'
p59983
tp59984
(icodemend.demo.code_suggest
Element
p59985
(dp59986
g10
I0
sg11
S'set the hatching pattern'
p59987
sg12
Vtable.hatch
p59988
sg14
(lp59989
sg2
g59983
sbsS'get_xlim'
p59990
(icodemend.demo.code_suggest
Element
p59991
(dp59992
g10
I48
sg11
S'get the x-axis range [ left , right ]'
p59993
sg12
Vget_xlim
p59994
sg14
(lp59995
g57237
ag55889
asg2
g59990
sbs(S'eventplot'
p59996
g23421
tp59997
g23416
s(g117
g118
g28589
tp59998
g28585
s(S'is_scalar'
p59999
g12443
tp60000
g12438
s(S'axvline'
p60001
g56284
tp60002
g56279
s(g117
g5546
g5556
tp60003
g21073
s(S'barh'
p60004
S'xuplims'
p60005
tp60006
(icodemend.demo.code_suggest
Element
p60007
(dp60008
g10
I0
sg11
S'these arguments can be used to indicate that a value gives only upper/lower limits . in that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . to use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .'
p60009
sg12
Vbarh.xuplims
p60010
sg14
(lp60011
sg2
g60005
sbs(S'broken_barh'
p60012
g48745
tp60013
g48740
s(S'set_xticklabels'
p60014
g17211
tp60015
g17206
s(S'errorbar'
p60016
g56030
tp60017
g56025
s(S'contour'
p60018
g17797
tp60019
g17792
s(g252
g24156
S'5'
tp60020
g14385
s(g944
g945
g57937
tp60021
g57933
s(S'psd'
p60022
g37012
tp60023
g37007
s(S'legend_artist'
p60024
g43502
tp60025
g43497
sS'get_backend'
p60026
(icodemend.demo.code_suggest
Element
p60027
(dp60028
g10
I11
sg11
S'return the name of the current backend .'
p60029
sg12
Vget_backend
p60030
sg14
(lp60031
sg2
g60026
sbs(S'magnitude_spectrum'
p60032
g47996
tp60033
g47991
s(S'loglog'
p60034
g53673
tp60035
g53668
s(g5848
g5849
g59482
tp60036
g59478
s(g324
g785
g9302
tp60037
g9298
s(g1170
g1257
S'3'
tp60038
g54191
s(g101
S'c'
g21370
tp60039
g21366
s(S'quotes_historical_yahoo_ohlc'
p60040
g49769
tp60041
g49764
s(S'barh'
p60042
S'mfc'
p60043
tp60044
(icodemend.demo.code_suggest
Element
p60045
(dp60046
g10
I0
sg11
S'where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p60047
sg12
Vbarh.mfc
p60048
sg14
(lp60049
sg2
g60043
sbs(g101
g325
g21804
tp60050
g21800
s(g101
g110
g16312
tp60051
g16308
s(S'barbs'
p60052
g59955
tp60053
g59950
s(S'add_axes'
p60054
S'animated'
p60055
tp60056
(icodemend.demo.code_suggest
Element
p60057
(dp60058
g10
I0
sg11
S"set the artist 's animation state ."
p60059
sg12
Vadd_axes.animated
p60060
sg14
(lp60061
sg2
g60055
sbsS'get_bbox_to_anchor'
p60062
(icodemend.demo.code_suggest
Element
p60063
(dp60064
g10
I0
sg11
S'return the bbox that the legend will be anchored'
p60065
sg12
Vget_bbox_to_anchor
p60066
sg14
(lp60067
sg2
g60062
sbs(g117
g4274
g29003
tp60068
g28999
s(g5424
g4163
g50607
tp60069
g50603
s(S'GaussianKDE'
p60070
g38480
tp60071
g38475
sS'refresh'
p60072
(icodemend.demo.code_suggest
Element
p60073
(dp60074
g10
I0
sg11
S'refresh internal information based on current lim refresh internal information based on current limits .'
p60075
sg12
Vrefresh
p60076
sg14
(lp60077
sg2
g60072
sbs(g245
g140
g30124
tp60078
g30120
s(g93
g161
g58750
tp60079
g58746
s(g252
g24834
S'2'
tp60080
g14212
s(S'hist2d'
p60081
g42204
tp60082
g42199
s(g1170
g1257
g54190
tp60083
g54186
s(g388
g389
g16969
tp60084
g16965
s(S'axvspan'
p60085
g54706
tp60086
g54701
s(g324
g325
g865
tp60087
g9189
s(S'psd'
p60088
g36862
tp60089
g36857
sS'get_minorticklabels'
p60090
(icodemend.demo.code_suggest
Element
p60091
(dp60092
g10
I0
sg11
S'return a list of text instances for the minor ticklabels'
p60093
sg12
Vget_minorticklabels
p60094
sg14
(lp60095
sg2
g60090
sbs(g452
S'barsabove'
p60096
g1944
tp60097
g15635
s(S'render_rect_filled'
p60098
g32973
tp60099
g32968
s(S'semilogx'
p60100
g38905
tp60101
g38900
sS'set_edgecolor'
p60102
(icodemend.demo.code_suggest
Element
p60103
(dp60104
g10
I22
sg11
S'set the edgecolor(s ) of the collection .'
p60105
sg12
Vset_edgecolor
p60106
sg14
(lp60107
g45572
asg2
g60102
sbs(g5640
g5641
g11966
tp60108
g11962
s(g101
g118
g21980
tp60109
g21976
s(g13284
S'y'
g32583
tp60110
g32579
s(S'getp'
p60111
S'aspect'
p60112
tp60113
(icodemend.demo.code_suggest
Element
p60114
(dp60115
g10
I0
sg11
S'aspect'
p60116
sg12
Vgetp.aspect
p60117
sg14
(lp60118
sg2
g60112
sbs(S'add'
p60119
g55448
tp60120
g55443
s(S'scatter'
p60121
g22227
tp60122
g22222
s(S'candlestick_ochl'
p60123
g26280
tp60124
g26275
s(g252
g253
g14011
tp60125
g14007
s(S'tricontour'
p60126
g1451
tp60127
g1446
s(g117
g118
g27453
tp60128
g27449
s(S'figure'
p60129
g58168
tp60130
g58159
s(g117
g132
g28740
tp60131
g28736
s(g8266
g132
g54651
tp60132
g54647
s(g5673
g132
g49281
tp60133
g49277
s(g252
g7452
g14340
tp60134
g14336
s(g8547
g23819
g22505
tp60135
g22501
s(g117
g118
g28658
tp60136
g28654
s(S'errorbar'
p60137
g55937
tp60138
g55923
s(S'text'
p60139
g48297
tp60140
g48292
s(g332
g627
g46938
tp60141
g46934
s(S'semilogy'
p60142
g39331
tp60143
g39326
s(S'angle_spectrum'
p60144
g18995
tp60145
g18990
s(g252
g253
g14171
tp60146
g14167
sS'trigger_tool'
p60147
(icodemend.demo.code_suggest
Element
p60148
(dp60149
g10
I0
sg11
S'trigger a tool and emit the tool_trigger_[name ] event trigger the tool'
p60150
sg12
Vtrigger_tool
p60151
sg14
(lp60152
g37811
ag54921
ag45710
ag33059
asg2
g60147
sbsS'get_radius'
p60153
(icodemend.demo.code_suggest
Element
p60154
(dp60155
g10
I0
sg11
S'return the radius of the circle'
p60156
sg12
Vget_radius
p60157
sg14
(lp60158
sg2
g60153
sbs(g117
g118
g27949
tp60159
g27945
s(g388
g389
g16964
tp60160
g16960
s(S'set_xticklabels'
p60161
g17037
tp60162
g17032
s(g93
g4800
g25604
tp60163
g25600
s(S'hist2d'
p60164
g42192
tp60165
g42187
s(g93
g161
g58720
tp60166
g58716
s(S'cohere'
p60167
g43819
tp60168
g43814
s(g16
g945
g13817
tp60169
g13813
s(g324
g10116
g8995
tp60170
g8991
s(S'text'
p60171
g48308
tp60172
g48303
sS'format_coord'
p60173
(icodemend.demo.code_suggest
Element
p60174
(dp60175
g10
I1
sg11
S'return a format string formatting the x , y coord'
p60176
sg12
Vformat_coord
p60177
sg14
(lp60178
g50768
ag41535
asg2
g60173
sbs(S'set_xlabel'
p60179
g42801
tp60180
g42796
s(g139
g140
g1603
tp60181
g1599
s(S'hexbin'
p60182
g26051
tp60183
g26046
s(g109
g8267
g44079
tp60184
g44075
s(g5975
g2841
g19667
tp60185
g19663
s(S'subplot'
p60186
g49658
tp60187
g49649
s(g117
S'x'
g29353
tp60188
g29349
s(g452
g2841
g43246
tp60189
g43242
sS'parse_yahoo_historical_ohlc'
p60190
(icodemend.demo.code_suggest
Element
p60191
(dp60192
g10
I0
sg11
S'parse the historical data in file handle fh from yahoo finance .'
p60193
sg12
Vparse_yahoo_historical_ohlc
p60194
sg14
(lp60195
(icodemend.demo.code_suggest
Element
p60196
(dp60197
g10
I0
sg11
S'if true ( default ) replace open , high , low , close prices with their adjusted values . the adjustment is by a scale factor , s = adjusted_close/close . adjusted prices are actual prices multiplied by s.'
p60198
sg12
Vparse_yahoo_historical_ohlc.adjusted
p60199
sg14
(lp60200
sg2
S'adjusted'
p60201
sba(icodemend.demo.code_suggest
Element
p60202
(dp60203
g10
I0
sg11
S'if false ( default for compatibility with earlier versions ) return a list of tuples containing'
p60204
sg12
Vparse_yahoo_historical_ohlc.asobject
p60205
sg14
(lp60206
sg2
S'asobject'
p60207
sbasg2
g60190
sbs(S'phase_spectrum'
p60208
g52451
tp60209
g52446
s(g5562
g515
g515
tp60210
g10862
s(g5975
g132
g19646
tp60211
g19642
s(S'pie'
p60212
g55824
tp60213
g55819
s(g514
g325
g325
tp60214
g48163
s(g245
g140
g30278
tp60215
g30274
s(S'cohere'
p60216
g43735
tp60217
g43730
s(g252
g21101
S'2'
tp60218
g14584
sS'cleaned'
p60219
(icodemend.demo.code_suggest
Element
p60220
(dp60221
g10
I0
sg11
S'cleans up the path according to the parameters returning a new path instance .'
p60222
sg12
Vcleaned
p60223
sg14
(lp60224
g55864
ag39435
ag23333
a(icodemend.demo.code_suggest
Element
p60225
(dp60226
g10
I0
sg11
S'if true , will remove all nans from the path and insert moveto commands to skip over them .'
p60227
sg12
Vcleaned.remove_nans
p60228
sg14
(lp60229
sg2
S'remove_nans'
p60230
sbag11850
ag35273
ag48835
ag6703
ag31561
ag26872
asg2
g60219
sbs(S'annotate'
p60231
g59324
tp60232
g59319
s(S'table'
p60233
S'closed'
p60234
tp60235
(icodemend.demo.code_suggest
Element
p60236
(dp60237
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p60238
sg12
Vtable.closed
p60239
sg14
(lp60240
sg2
g60234
sbs(g34170
g325
g9113
tp60241
g33111
s(S'add_axes'
p60242
S'closed'
p60243
tp60244
(icodemend.demo.code_suggest
Element
p60245
(dp60246
g10
I0
sg11
S'if codes is none and closed is true , vertices will be treated as line segments of a closed polygon .'
p60247
sg12
Vadd_axes.closed
p60248
sg14
(lp60249
sg2
g60243
sbs(g332
g627
g46918
tp60250
g46914
s(g4998
g325
g59074
tp60251
g59070
s(S'grid'
p60252
g50530
tp60253
g50510
s(S'contourf'
p60254
S'X'
tp60255
g46712
s(g245
g140
g30373
tp60256
g30369
s(g324
g325
g9237
tp60257
g9233
s(g2250
g2392
S'1'
tp60258
g30847
s(S'boxplot'
p60259
g39710
tp60260
g39697
s(S'grid'
p60261
g50668
tp60262
g50663
sS'update_view'
p60263
(icodemend.demo.code_suggest
Element
p60264
(dp60265
g10
I0
sg11
S'update the viewlim and position from the view and position stack for each axes'
p60266
sg12
Vupdate_view
p60267
sg14
(lp60268
sg2
g60263
sbs(S'pcolor'
p60269
g49493
tp60270
g49488
s(g1170
g1257
S'6'
tp60271
g54177
s(S'savefig'
p60272
g57014
tp60273
g57009
s(g117
g348
g29543
tp60274
g29539
s(g2250
g20325
g30820
tp60275
g30816
s(S'add_subplot'
p60276
g47597
tp60277
g47592
s(S'axhline'
p60278
g3729
tp60279
g3724
sS'amap'
p60280
(icodemend.demo.code_suggest
Element
p60281
(dp60282
g10
I0
sg11
S'works like map ( ) , but it returns an array .'
p60283
sg12
Vamap
p60284
sg14
(lp60285
sg2
g60280
sbs(S'csd'
p60286
g51527
tp60287
g51522
s(g101
g515
g10861
tp60288
g22181
s(g1003
g4403
g25254
tp60289
g25250
s(S'set_xlim'
p60290
g4526
tp60291
g4517
s(S'table'
p60292
S'visible'
p60293
tp60294
(icodemend.demo.code_suggest
Element
p60295
(dp60296
g10
I0
sg11
S"set the artist 's visiblity ."
p60297
sg12
Vtable.visible
p60298
sg14
(lp60299
sg2
g60293
sbs(S'set_xticklabels'
p60300
g17169
tp60301
g17164
s(g5640
g5641
g11897
tp60302
g11893
s(g252
g1010
S'1'
tp60303
g13916
s(g324
g785
g9277
tp60304
g9273
s(g2814
g2815
S'1'
tp60305
g55391
s(g93
g4800
g25599
tp60306
g25595
s(g8266
g110
g44198
tp60307
g44194
s(g117
g118
g28474
tp60308
g28470
s(S'plotting'
p60309
g15808
tp60310
g15803
sS'set_extent'
p60311
(icodemend.demo.code_suggest
Element
p60312
(dp60313
g10
I10
sg11
S'extent is data axes ( left , right , bottom , top ) for making image plots'
p60314
sg12
Vset_extent
p60315
sg14
(lp60316
sg2
g60311
sbs(S'psd'
p60317
g36946
tp60318
g36941
s(g6632
g2155
g47456
tp60319
g47452
s(g101
g8538
g22076
tp60320
g22072
s(S'table'
p60321
S'zorder'
p60322
tp60323
(icodemend.demo.code_suggest
Element
p60324
(dp60325
g10
I0
sg11
S'set the zorder for the artist .'
p60326
sg12
Vtable.zorder
p60327
sg14
(lp60328
sg2
g60322
sbs(S'violin_stats'
p60329
g58089
tp60330
g58084
s(g324
g785
g9796
tp60331
g9792
sS'update_normal'
p60332
(icodemend.demo.code_suggest
Element
p60333
(dp60334
g10
I0
sg11
S'update solid , lines , etc. unlike update_bruteforce , it does not clear the axes .'
p60335
sg12
Vupdate_normal
p60336
sg14
(lp60337
sg2
g60332
sbs(S'axhline'
p60338
g3609
tp60339
g3604
s(S'barbs'
p60340
g59943
tp60341
g59938
s(g117
g118
g27874
tp60342
g27870
s(g324
g785
g9482
tp60343
g9478
s(S'csd'
p60344
g51557
tp60345
g51552
s(g117
g118
S'y'
tp60346
g28664
s(S'to_rgb'
p60347
g20133
tp60348
g20128
s(g324
g10116
g9000
tp60349
g8996
s(g15996
g39463
g52670
tp60350
g52666
s(S'get_kern_dist'
p60351
S'c1'
p60352
tp60353
(icodemend.demo.code_suggest
Element
p60354
(dp60355
g10
I0
sg11
S'return the kerning pair distance ( possibly 0 ) for chars c1 and c2'
p60356
sg12
Vget_kern_dist.c1
p60357
sg14
(lp60358
sg2
g60352
sbs(g93
g161
g58740
tp60359
g58736
s(g117
g4340
g29574
tp60360
g29570
s(g117
g2392
g2392
tp60361
g29116
s(g139
g140
g1478
tp60362
g1474
sS'draw_frame'
p60363
(icodemend.demo.code_suggest
Element
p60364
(dp60365
g10
I3
sg11
S'b is a boolean .'
p60366
sg12
Vdraw_frame
p60367
sg14
(lp60368
sg2
g60363
sbs(S'set_xticklabels'
p60369
g17163
tp60370
g17158
s(S'SimplePatchShadow'
p60371
g39529
tp60372
g39524
s(S'figtext'
p60373
g11467
tp60374
g11462
s(g4371
g666
g17626
tp60375
g17622
s(S'set_yticklabels'
p60376
g18082
tp60377
g18077
s(g93
g4800
g25339
tp60378
g25335
s(S'barbs'
p60379
S'Y'
tp60380
g59921
s(S'warn_deprecated'
p60381
g45302
tp60382
g45297
s(g139
g140
g1538
tp60383
g1534
s(S'phase_spectrum'
p60384
g52361
tp60385
g52356
sS'fftsurr'
p60386
(icodemend.demo.code_suggest
Element
p60387
(dp60388
g10
I0
sg11
S'compute an fft phase randomized surrogate of x .'
p60389
sg12
Vfftsurr
p60390
sg14
(lp60391
g39581
asg2
g60386
sbsS'format_cursor_data'
p60392
(icodemend.demo.code_suggest
Element
p60393
(dp60394
g10
I0
sg11
S'return cursor data string formatted .'
p60395
sg12
Vformat_cursor_data
p60396
sg14
(lp60397
g56116
asg2
g60392
sbs(S'barh'
p60398
S'y'
tp60399
(icodemend.demo.code_suggest
Element
p60400
(dp60401
g10
I0
sg11
S'plot x versus y with error deltas in yerr and xerr . vertical errorbars are plotted if yerr is not none . horizontal errorbars are plotted if xerr is not none .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y .'
p60402
sg12
Vbarh.y
p60403
sg14
(lp60404
sg2
S'y'
sbs(g5112
g4274
g6360
tp60405
g6356
s(g16
g17
g41997
tp60406
g41993
s(g245
g140
g30004
tp60407
g30000
s(S'annotate'
p60408
g59348
tp60409
g59343
sS'barh'
p60410
(icodemend.demo.code_suggest
Element
p60411
(dp60412
g10
I76
sg11
S'make a horizontal bar plot .'
p60413
sg12
Vbarh
p60414
sg14
(lp60415
g41407
ag35682
a(icodemend.demo.code_suggest
Element
p60416
(dp60417
g10
I19
sg11
S'set the alpha tranparency of the patch .'
p60418
sg12
Vbarh.alpha
p60419
sg14
(lp60420
g53373
ag56841
ag14833
ag57412
ag26118
asg2
S'alpha'
p60421
sbag57928
ag51438
a(icodemend.demo.code_suggest
Element
p60422
(dp60423
g10
I7
sg11
S'the x coordinates of the left sides of the bars'
p60424
sg12
Vbarh.left
p60425
sg14
(lp60426
g49000
ag24013
ag40249
ag57227
asg2
S'left'
p60427
sbag52030
ag52650
ag52114
ag54830
ag43466
ag6579
ag34230
ag50409
ag44134
ag57245
a(icodemend.demo.code_suggest
Element
p60428
(dp60429
g10
I0
sg11
S'these arguments can be used to indicate that a value gives only upper/lower limits . in that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . to use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||if true , will plot the errorbars above the plot symbols . default is below .'
p60430
sg12
Vbarh.True
p60431
sg14
(lp60432
sg2
S'True'
p60433
sbag32943
ag46318
ag524
ag52696
ag42731
ag31765
ag8953
ag56193
ag3155
ag54405
ag55119
ag43915
ag3094
ag40987
ag38723
a(icodemend.demo.code_suggest
Element
p60434
(dp60435
g10
I0
sg11
S'set whether artist uses clipping .'
p60436
sg12
Vbarh.clip_on
p60437
sg14
(lp60438
sg2
S'clip_on'
p60439
sba(icodemend.demo.code_suggest
Element
p60440
(dp60441
g10
I0
sg11
S"set the artist 's clip path , which may be"
p60442
sg12
Vbarh.clip_path
p60443
sg14
(lp60444
sg2
S'clip_path'
p60445
sbag35244
ag32679
ag20478
ag44330
ag4780
a(icodemend.demo.code_suggest
Element
p60446
(dp60447
g10
I0
sg11
S'the linewidth of the errorbar lines . if none , use the linewidth .'
p60448
sg12
Vbarh.elinewidth
p60449
sg14
(lp60450
sg2
S'elinewidth'
p60451
sbag49424
ag59124
ag15364
ag45201
ag12135
ag55093
ag19235
ag19253
ag32660
ag34895
a(icodemend.demo.code_suggest
Element
p60452
(dp60453
g10
I0
sg11
S'where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p60454
sg12
Vbarh.markeredgewith
p60455
sg14
(lp60456
sg2
S'markeredgewith'
p60457
sbag6029
ag59543
ag45335
a(icodemend.demo.code_suggest
Element
p60458
(dp60459
g10
I0
sg11
S'where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith .'
p60460
sg12
Vbarh.mew
p60461
sg14
(lp60462
sg2
S'mew'
p60463
sbag60045
ag46067
ag6162
ag41259
ag40204
ag53328
ag45112
ag58523
ag46139
ag15271
ag58067
ag16284
ag10222
ag23776
ag4646
ag54271
ag4885
a(icodemend.demo.code_suggest
Element
p60464
(dp60465
g10
I0
sg11
S'the ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path .'
p60466
sg12
Vbarh.vertices
p60467
sg14
(lp60468
sg2
S'vertices'
p60469
sbag59639
a(icodemend.demo.code_suggest
Element
p60470
(dp60471
g10
I0
sg11
S'the width(s ) of the bars'
p60472
sg12
Vbarh.width
p60473
sg14
(lp60474
sg2
S'width'
p60475
sbag45253
ag49222
ag44003
ag36503
ag58403
ag49060
ag2873
ag30676
ag60007
ag60400
ag42657
ag42034
ag41060
ag59195
ag43033
ag26387
ag48913
asg2
g60410
sbs(S'annotate'
p60476
g59336
tp60477
g59331
s(S'loglog'
p60478
g53595
tp60479
g53590
s(S'text'
p60480
g48428
tp60481
g48423
s(S'csd'
p60482
g51479
tp60483
g51474
s(S'set_yticklabels'
p60484
g18142
tp60485
g18137
s(g4371
g7032
g17514
tp60486
g17510
s(S'set_aspect'
p60487
g58702
tp60488
g58697
s(g125
g8768
g1944
tp60489
g41207
s(S'add_subplot'
p60490
g47549
tp60491
g47544
s(g5640
g10482
g10501
tp60492
g10497
s(S'plot_date'
p60493
g20081
tp60494
g20076
sS'set_aa'
p60495
(icodemend.demo.code_suggest
Element
p60496
(dp60497
g10
I0
sg11
S'alias for set_antialiased'
p60498
sg12
Vset_aa
p60499
sg14
(lp60500
sg2
g60495
sbsS'start_filter'
p60501
(icodemend.demo.code_suggest
Element
p60502
(dp60503
g10
I0
sg11
S'used in aggrenderer .'
p60504
sg12
Vstart_filter
p60505
sg14
(lp60506
sg2
g60501
sbs(g117
g118
g27676
tp60507
g27672
s(g332
g132
g41465
tp60508
g41461
s(S'fetch_historical_yahoo'
p60509
g54328
tp60510
g54323
s(g6596
g42968
g52776
tp60511
g52772
s(S'candlestick2_ohlc'
p60512
g47116
tp60513
g47111
s(S'hexbin'
p60514
g26010
tp60515
g26005
s(g252
g5782
g14418
tp60516
g14414
s(S'table'
p60517
S'xlim'
p60518
tp60519
(icodemend.demo.code_suggest
Element
p60520
(dp60521
g10
I0
sg11
S'set the data limits for the xaxis'
p60522
sg12
Vtable.xlim
p60523
sg14
(lp60524
sg2
g60518
sbsS'context'
p60525
(icodemend.demo.code_suggest
Element
p60526
(dp60527
g10
I1
sg11
S'context manager for using style settings temporarily .'
p60528
sg12
Vcontext
p60529
sg14
(lp60530
g57394
ag45871
asg2
g60525
sbs(g93
g4800
g25594
tp60531
g25590
s(S'plot'
p60532
g29803
tp60533
g29793
s(S'update_coords'
p60534
g42314
tp60535
g42309
s(g452
g132
g31863
tp60536
g31859
s(S'plotting'
p60537
g15796
tp60538
g15791
sS'set_ticks_position'
p60539
(icodemend.demo.code_suggest
Element
p60540
(dp60541
g10
I123
sg11
S"set the ticks position ( left , right , both , default or none ) ' both ' sets the ticks to appear on both positions , but does not change the tick labels . set the ticks position ( top , bottom , both , default or none ) both sets the ticks to appear on both positions , but does not change the tick labels ."
p60542
sg12
Vset_ticks_position
p60543
sg14
(lp60544
sg2
g60539
sbs(S'ToolHandles'
p60545
g30641
tp60546
g30636
s(g139
g140
g1792
tp60547
g1788
s(S'axvline'
p60548
g56278
tp60549
g56273
s(g117
g4163
g11074
tp60550
g11070
s(S'streamplot'
p60551
g49302
tp60552
g49288
s(S'barbs'
p60553
g59967
tp60554
g59962
sS'add_line'
p60555
(icodemend.demo.code_suggest
Element
p60556
(dp60557
g10
I31
sg11
S'add a line2d to the list of plot lines'
p60558
sg12
Vadd_line
p60559
sg14
(lp60560
sg2
g60555
sbs(S'axvline'
p60561
g56290
tp60562
g56285
s(g5673
g132
g49276
tp60563
g49272
s(S'annotate'
p60564
g59342
tp60565
g59337
s(g93
g4800
g25469
tp60566
g25465
s(g245
g140
g627
tp60567
g30130
s(g332
g5546
g48248
tp60568
g48244
s(g117
g118
g28344
tp60569
g28340
s(S'barh'
p60570
g60433
tp60571
g60428
s(g8352
g126
S'0'
tp60572
g15096
s(g37604
g118
g32055
tp60573
g32051
s(g117
g4274
g21719
tp60574
g29014
s(g324
g785
g9666
tp60575
g9662
s(S'axvspan'
p60576
g54676
tp60577
g54671
s(S'barbs'
p60578
g59949
tp60579
g59944
s(S'plot_day_summary_ohlc'
p60580
S'quotes'
p60581
tp60582
(icodemend.demo.code_suggest
Element
p60583
(dp60584
g10
I0
sg11
S'data to plot . time must be in float date format - see date2num'
p60585
sg12
Vplot_day_summary_ohlc.quotes
p60586
sg14
(lp60587
sg2
g60581
sbsS'tight_layout'
p60588
(icodemend.demo.code_suggest
Element
p60589
(dp60590
g10
I176
sg11
S'adjust subplot parameters to give specified padding .'
p60591
sg12
Vtight_layout
p60592
sg14
(lp60593
sg2
g60588
sbs(S'loglog'
p60594
g53589
tp60595
g53584
s(g1170
g16552
g57590
tp60596
g57586
s(S'angle_spectrum'
p60597
g18912
tp60598
g18907
s(S'phase_spectrum'
p60599
g52319
tp60600
g52314
s(S'start_pan'
p60601
S'y'
tp60602
g38003
s(S'volume_overlay'
p60603
g37399
tp60604
g37394
sS'set_over'
p60605
(icodemend.demo.code_suggest
Element
p60606
(dp60607
g10
I10
sg11
S'set color to be used for high out-of-range values .'
p60608
sg12
Vset_over
p60609
sg14
(lp60610
sg2
g60605
sbs(S'set_yticklabels'
p60611
g18184
tp60612
g18179
s(g117
g118
g28139
tp60613
g28135
s(S'arrow'
p60614
g2617
tp60615
g2612
s(S'broken_barh'
p60616
g48811
tp60617
g48806
sS'set_minor_formatter'
p60618
(icodemend.demo.code_suggest
Element
p60619
(dp60620
g10
I18
sg11
S'set the formatter of the minor ticker'
p60621
sg12
Vset_minor_formatter
p60622
sg14
(lp60623
sg2
g60618
sbs(S'strftime_pre_1900'
p60624
g52556
tp60625
g52551
s(g324
g785
g9691
tp60626
g9687
s(S'Path'
p60627
g11818
tp60628
g11813
s(S'barh'
p60629
g60421
tp60630
g60416
s(S'rec_groupby'
p60631
S'outname'
p60632
tp60633
(icodemend.demo.code_suggest
Element
p60634
(dp60635
g10
I0
sg11
S'stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname . for example :'
p60636
sg12
Vrec_groupby.outname
p60637
sg14
(lp60638
sg2
g60632
sbs(g324
g785
g9606
tp60639
g9602
s(S'plotting'
p60640
g15868
tp60641
g15863
s(g452
g2251
g42261
tp60642
g42257
s(g139
g15359
g438
tp60643
g1936
s(g332
g389
g33694
tp60644
g33690
s(g4371
g2183
g17655
tp60645
g17651
s(S'get_cursor_props'
p60646
g53812
tp60647
g53807
s(g139
g140
g1588
tp60648
g1584
s(S'path_length'
p60649
S'N'
tp60650
(icodemend.demo.code_suggest
Element
p60651
(dp60652
g10
I0
sg11
S'where x is an m x n array or matrix . returns an array of length m consisting of the distance along the curve at each point ( i.e. , the rows of x ) .|||computes the distance travelled along a polygonal curve in n dimensions .'
p60653
sg12
Vpath_length.N
p60654
sg14
(lp60655
sg2
S'N'
sbs(g117
g132
g28889
tp60656
g28885
s(S'eventplot'
p60657
g23613
tp60658
g23608
s(S'plot_date'
p60659
g19949
tp60660
g19944
s(g944
g132
g35740
tp60661
g35736
s(S'barbs'
p60662
g59937
tp60663
g59932
s(g5848
g5849
g59487
tp60664
g59483
s(g117
g118
g28529
tp60665
g28525
s(g252
g7452
g14315
tp60666
g14311
s(S'magnitude_spectrum'
p60667
g48020
tp60668
g48015
s(g1003
S'conf_intervals'
p60669
g865
tp60670
g39778
s(g117
S'x'
g29333
tp60671
g29329
s(S'cohere'
p60672
g43783
tp60673
g43778
s(g5640
g5641
g5641
tp60674
g11880
s(g139
g370
S'7'
tp60675
g1849
s(g2250
S'minlength'
p60676
S'1'
tp60677
g30901
s(g324
g785
g9347
tp60678
g9343
s(S'pie'
p60679
g55795
tp60680
g55780
s(S'set_title'
p60681
g44477
tp60682
g44472
s(g125
S'x'
g34841
tp60683
g34837
s(g40328
g132
g25070
tp60684
g25066
s(g16
g17
g41968
tp60685
g41964
s(S'cohere'
p60686
g43849
tp60687
g43844
s(S'bar'
p60688
g46580
tp60689
g46575
s(S'plotfile'
p60690
g16874
tp60691
g16859
s(S'to_rgba'
p60692
g12955
tp60693
g12950
s(g5424
g132
g50545
tp60694
g50541
s(S'phase_spectrum'
p60695
g52367
tp60696
g52362
s(S'savefig'
p60697
g57008
tp60698
g56993
s(S'axhspan'
p60699
g24412
tp60700
g24407
s(g10369
g13047
g13032
tp60701
g13028
sS'is_alias'
p60702
(icodemend.demo.code_suggest
Element
p60703
(dp60704
g10
I0
sg11
S'return true if method object o is an alias for another function .'
p60705
sg12
Vis_alias
p60706
sg14
(lp60707
(icodemend.demo.code_suggest
Element
p60708
(dp60709
g10
I0
sg11
S'return true if method object o is an alias for another function .'
p60710
sg12
Vis_alias.o
p60711
sg14
(lp60712
sg2
S'o'
sbasg2
g60702
sbs(g117
g2251
g29145
tp60713
g29141
s(g93
g161
g58735
tp60714
g58731
s(S'semilogx'
p60715
g39144
tp60716
g39139
s(g2250
g15307
g30731
tp60717
g30727
s(g117
g118
g27884
tp60718
g27880
s(S'set_xticklabels'
p60719
g17019
tp60720
g17014
s(g139
g140
g1767
tp60721
g1763
s(g245
g140
g30543
tp60722
g30539
s(g101
S's'
g7573
tp60723
g7569
s(S'draw_path_collection'
p60724
g45743
tp60725
g45738
s(g1170
g34779
g34779
tp60726
g47636
sS'num2date'
p60727
(icodemend.demo.code_suggest
Element
p60728
(dp60729
g10
I10
sg11
S'x is a float value which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00'
p60730
sg12
Vnum2date
p60731
sg14
(lp60732
g55507
ag26701
ag58129
ag50872
asg2
g60727
sbs(S'quiver'
p60733
g30742
tp60734
g30722
s(S'pcolormesh'
p60735
S'xmargin'
p60736
tp60737
(icodemend.demo.code_suggest
Element
p60738
(dp60739
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p60740
sg12
Vpcolormesh.xmargin
p60741
sg14
(lp60742
sg2
g60736
sbs(S'add_subplot'
p60743
g47537
tp60744
g47532
s(S'text'
p60745
g48362
tp60746
g48357
s(S'loglog'
p60747
g53685
tp60748
g53680
s(S'set_yticklabels'
p60749
g18178
tp60750
g18173
s(g582
S'y'
g3366
tp60751
g3362
s(S'is_alias'
p60752
S'o'
tp60753
g60708
s(g324
g785
g9776
tp60754
g9772
s(S'hist'
p60755
g58855
tp60756
g58840
s(S'set_yticklabels'
p60757
g18332
tp60758
g18327
s(S'plot'
p60759
g29704
tp60760
g29691
s(S'from_levels_and_colors'
p60761
g58896
tp60762
g58891
s(S'semilogy'
p60763
g39235
tp60764
g39230
s(S'angle_spectrum'
p60765
g18720
tp60766
g18715
s(S'pcolor'
p60767
g49541
tp60768
g49536
s(g8943
g966
g49637
tp60769
g49633
s(S'figtext'
p60770
g11473
tp60771
g11468
s(g944
g132
g35706
tp60772
g35702
s(S'phase_spectrum'
p60773
g52343
tp60774
g52338
s(S'loglog'
p60775
g53715
tp60776
g53710
s(S'hexbin'
p60777
g25861
tp60778
g25856
sS'set_rasterization_zorder'
p60779
(icodemend.demo.code_suggest
Element
p60780
(dp60781
g10
I2
sg11
S'set zorder value below which artists will be rasterized .'
p60782
sg12
Vset_rasterization_zorder
p60783
sg14
(lp60784
sg2
g60779
sbs(S'scatter'
p60785
g22090
tp60786
g22062
sS'add_checker'
p60787
(icodemend.demo.code_suggest
Element
p60788
(dp60789
g10
I0
sg11
S'add an entry to a dictionary of boolean flags that are set to true when the mappable is changed .'
p60790
sg12
Vadd_checker
p60791
sg14
(lp60792
sg2
g60787
sbs(S'magnitude_spectrum'
p60793
g48074
tp60794
g48069
s(S'remove_callback'
p60795
g48936
tp60796
g48931
sS'pcolormesh'
p60797
(icodemend.demo.code_suggest
Element
p60798
(dp60799
g10
I130
sg11
S'plot a quadrilateral mesh .'
p60800
sg12
Vpcolormesh
p60801
sg14
(lp60802
g59065
ag56459
ag39482
ag49839
ag51647
ag24930
ag50078
ag50778
ag40323
ag49204
ag38395
ag39904
ag59144
ag55670
ag53530
ag32746
ag271
ag54760
ag35759
ag52799
ag874
ag39398
ag58798
ag26827
ag40649
ag50963
ag24963
ag20835
ag38387
ag51153
ag12320
ag6759
ag24234
ag33984
ag43541
ag42583
ag8920
ag52042
ag45192
ag46985
ag44263
ag59784
a(icodemend.demo.code_suggest
Element
p60803
(dp60804
g10
I0
sg11
S'set path_effects , which should be a list of instances of matplotlib.patheffect._base class or its derivatives .'
p60805
sg12
Vpcolormesh.path_effects
p60806
sg14
(lp60807
sg2
S'path_effects'
p60808
sbag51227
ag50733
ag49183
ag52626
ag43630
ag53991
ag50915
ag36576
ag35988
ag58672
ag54529
ag40622
ag6287
ag60738
ag57917
ag38304
ag3906
ag58557
ag42604
ag54617
ag59725
ag57428
ag57650
asg2
g60797
sbs(S'to_rgba'
p60809
g12967
tp60810
g12962
s(S'barh'
p60811
g60475
tp60812
g60470
s(g117
S'y'
g29463
tp60813
g29459
s(S'set_ylabel'
p60814
g36049
tp60815
g36044
s(g452
g37606
S'2'
tp60816
g42538
s(g139
g140
g1717
tp60817
g1713
s(S'set_yticklabels'
p60818
g18362
tp60819
g18357
s(g101
S's'
g7751
tp60820
g7747
s(g8266
g110
g44193
tp60821
g44189
s(S'quiver'
p60822
g31021
tp60823
g31016
s(g101
S'c'
g21400
tp60824
g21396
s(S'have_units'
p60825
S'y'
tp60826
g55303
s(g16
g489
g46554
tp60827
g46550
s(S'volume_overlay2'
p60828
g45605
tp60829
g45600
s(S'parse_yahoo_historical_ohlc'
p60830
g60201
tp60831
g60196
s(S'barh'
p60832
g60427
tp60833
g60422
s(S'candlestick_ohlc'
p60834
S'alpha'
p60835
tp60836
(icodemend.demo.code_suggest
Element
p60837
(dp60838
g10
I0
sg11
S'the rectangle alpha level'
p60839
sg12
Vcandlestick_ohlc.alpha
p60840
sg14
(lp60841
sg2
g60835
sbs(S'candlestick2_ohlc'
p60842
g47110
tp60843
g47105
s(S'cohere'
p60844
g43688
tp60845
g43683
s(g582
g2392
S'2'
tp60846
g3410
s(S'psd'
p60847
g36880
tp60848
g36875
s(S'add_subplot'
p60849
g47489
tp60850
g47484
s(S'getp'
p60851
S'yscale'
p60852
tp60853
(icodemend.demo.code_suggest
Element
p60854
(dp60855
g10
I0
sg11
S'set the scaling of the y-axis'
p60856
sg12
Vgetp.yscale
p60857
sg14
(lp60858
sg2
g60852
sbs(S'barh'
p60859
g60439
tp60860
g60434
s(g245
g140
g30218
tp60861
g30214
s(S'pcolor'
p60862
g49475
tp60863
g49470
s(g252
g253
g14056
tp60864
g14052
s(g1170
g1257
g54176
tp60865
g54172
s(S'quiverkey'
p60866
g36655
tp60867
g36645
s(S'axvspan'
p60868
g54724
tp60869
g54719
s(S'scatter'
p60870
S'c'
tp60871
g21264
s(S'set_xy'
p60872
g471
tp60873
g466
s(S'axhline'
p60874
g3669
tp60875
g3664
s(g12678
S'x'
g44431
tp60876
g44427
s(g6556
g118
g53872
tp60877
g53868
sS'get_xaxis'
p60878
(icodemend.demo.code_suggest
Element
p60879
(dp60880
g10
I3
sg11
S'return the xaxis instance'
p60881
sg12
Vget_xaxis
p60882
sg14
(lp60883
sg2
g60878
sbs(S'eventplot'
p60884
g23517
tp60885
g23512
s(S'arrow'
p60886
g2539
tp60887
g2534
s(S'axvspan'
p60888
g54664
tp60889
g54659
s(S'errorbar'
p60890
g56012
tp60891
g56007
s(S'SimpleLineShadow'
p60892
g55621
tp60893
g55616
s(g125
S'x'
g34812
tp60894
g34808
s(g27318
g7815
g36831
tp60895
g36827
s(g1170
g35545
g41759
tp60896
g41755
s(S'arrow'
p60897
g2545
tp60898
g2540
s(g16
g17
g41928
tp60899
g41924
s(S'arrow'
p60900
g2795
tp60901
g2790
s(g117
S'y'
g29433
tp60902
g29429
s(S'add'
p60903
g55369
tp60904
g55355
s(S'add'
p60905
g55395
tp60906
g55386
s(S'findobj'
p60907
g37230
tp60908
g37215
s(g93
g4800
g25284
tp60909
g25280
s(g4371
g2183
g2183
tp60910
g17661
s(g5640
g5641
g11902
tp60911
g11898
s(g6603
g437
g438
tp60912
g20163
s(g93
g8768
g438
tp60913
g59284
s(S'axhspan'
p60914
g24394
tp60915
g24389
s(S'set_yticklabels'
p60916
g18124
tp60917
g18119
s(S'axhspan'
p60918
g24388
tp60919
g24383
s(g101
S's'
g7796
tp60920
g7792
s(S'stackplot'
p60921
g10454
tp60922
g10449
s(S'get_cmap'
p60923
g12402
g35578
tp60924
g35574
s(g324
g785
g9566
tp60925
g9562
s(g117
g102
g29221
tp60926
g29217
s(S'plotfile'
p60927
g16906
tp60928
g16901
s(g5848
g5849
S'1'
tp60929
g59460
s(S'polar'
p60930
g37756
tp60931
g37751
s(g324
g325
g9074
tp60932
g9070
s(g101
g110
S'c'
tp60933
g16343
s(S'quiver'
p60934
g30851
tp60935
g30842
s(g245
g140
g30458
tp60936
g30454
s(g109
g34058
g54865
tp60937
g54861
s(g5562
g325
g9094
tp60938
g10813
s(S'contour'
p60939
S'X'
tp60940
g17777
s(S'set_yticklabels'
p60941
g17974
tp60942
g17959
s(g4998
g5025
S'4'
tp60943
g39491
s(g139
g140
g1742
tp60944
g1738
s(S'magnitude_spectrum'
p60945
g47948
tp60946
g47943
s(S'boxplot'
p60947
g39782
tp60948
g39773
s(g4371
g666
g17601
tp60949
g17597
s(g12176
g132
g24262
tp60950
g24258
s(S'arrow'
p60951
g2689
tp60952
g2684
s(g93
g4800
g25424
tp60953
g25420
s(g101
S'c'
g21390
tp60954
g21386
s(g6632
g966
g47435
tp60955
g47431
sS'autofmt_xdate'
p60956
(icodemend.demo.code_suggest
Element
p60957
(dp60958
g10
I74
sg11
S'date ticklabels often overlap , so it is useful to rotate them and right align them .'
p60959
sg12
Vautofmt_xdate
p60960
sg14
(lp60961
sg2
g60956
sbs(S'bivariate_normal'
p60962
S'X'
tp60963
g46801
s(g245
g140
g30059
tp60964
g30055
s(S'arrow'
p60965
g2719
tp60966
g2714
s(S'contour'
p60967
g17640
tp60968
g17592
s(S'set_xticklabels'
p60969
g17300
tp60970
g17295
s(S'rec2txt'
p60971
S'r'
tp60972
(icodemend.demo.code_suggest
Element
p60973
(dp60974
g10
I0
sg11
S'r : numpy recarray'
p60975
sg12
Vrec2txt.r
p60976
sg14
(lp60977
sg2
S'r'
sbs(S'contourf'
p60978
g46706
tp60979
g46701
s(g16
g17
S'w'
tp60980
g41915
s(S'csd'
p60981
g51575
tp60982
g51570
s(S'plot_day_summary_oclh'
p60983
g33587
tp60984
g33582
s(S'from_levels_and_colors'
p60985
g58890
tp60986
g58885
s(S'to_rgba_array'
p60987
g4328
tp60988
g4323
s(g117
g118
g28319
tp60989
g28315
s(S'figtext'
p60990
g11287
tp60991
g11282
s(S'grid'
p60992
g50656
tp60993
g50651
sS'get_ls'
p60994
(icodemend.demo.code_suggest
Element
p60995
(dp60996
g10
I0
sg11
S'return the linestyle . alias for get_linestyle'
p60997
sg12
Vget_ls
p60998
sg14
(lp60999
sg2
g60994
sbsS'get_lw'
p61000
(icodemend.demo.code_suggest
Element
p61001
(dp61002
g10
I0
sg11
S'alias for get_linewidth return the line width in points .'
p61003
sg12
Vget_lw
p61004
sg14
(lp61005
sg2
g61000
sbsS'add_artist'
p61006
(icodemend.demo.code_suggest
Element
p61007
(dp61008
g10
I112
sg11
S'add any artist to the container box'
p61009
sg12
Vadd_artist
p61010
sg14
(lp61011
sg2
g61006
sbs(g117
g132
g28712
tp61012
g28708
s(S'axhline'
p61013
g3347
tp61014
g3282
s(S'csd'
p61015
g51509
tp61016
g51504
s(g109
g3075
g55323
tp61017
g55319
s(S'set_xticklabels'
p61018
g17330
tp61019
g17325
s(g109
g40900
g40476
tp61020
g40472
s(S'legend'
p61021
g14487
tp61022
g14455
s(S'psd'
p61023
g36886
tp61024
g36881
s(S'process'
p61025
g22612
tp61026
g22607
s(S'yticks'
p61027
g16109
tp61028
g16104
s(S'fetch_historical_yahoo'
p61029
g54322
tp61030
g54317
s(g324
g785
g9721
tp61031
g9717
s(g117
g118
g28394
tp61032
g28390
s(g252
g4340
g576
tp61033
g572
s(S'thetagrids'
p61034
g53446
tp61035
g53441
s(g101
S'c'
g21587
tp61036
g21583
s(g101
g110
g16317
tp61037
g16313
sS'set_dashrotation'
p61038
(icodemend.demo.code_suggest
Element
p61039
(dp61040
g10
I0
sg11
S'set the rotation of the dash , in degrees'
p61041
sg12
Vset_dashrotation
p61042
sg14
(lp61043
sg2
g61038
sbs(S'quotes_historical_yahoo_ochl'
p61044
S'adjusted'
p61045
tp61046
(icodemend.demo.code_suggest
Element
p61047
(dp61048
g10
I0
sg11
S'see parse_yahoo_historical ( ) for explanation of output formats and the asobject and adjusted kwargs .'
p61049
sg12
Vquotes_historical_yahoo_ochl.adjusted
p61050
sg14
(lp61051
sg2
g61045
sbs(S'plot_date'
p61052
g19738
tp61053
g19723
sS'get_size_inches'
p61054
(icodemend.demo.code_suggest
Element
p61055
(dp61056
g10
I14
sg11
S'returns the current size of the figure in inches ( 1in = = 2.54cm ) as an numpy array .'
p61057
sg12
Vget_size_inches
p61058
sg14
(lp61059
sg2
g61054
sbs(S'plot'
p61060
g29850
tp61061
g29845
s(g101
g4274
g21690
tp61062
g21686
s(g252
g4334
g438
tp61063
g14352
s(g101
S'c'
g21551
tp61064
g21547
s(g944
g118
g51457
tp61065
g51453
s(g5562
g515
g10870
tp61066
g10866
s(g10369
S'codec'
p61067
g47283
tp61068
g47279
s(S'pcolor'
p61069
g49499
tp61070
g49494
s(S'psd'
p61071
g36994
tp61072
g36989
s(g117
S'y'
g29443
tp61073
g29439
s(S'get_flat_tri_mask'
p61074
g53347
tp61075
g53342
s(g93
g13486
g59277
tp61076
g59273
s(S'grid'
p61077
g50650
tp61078
g50645
s(S'quiver'
p61079
g31117
tp61080
g31112
s(S'pts_to_midstep'
p61081
g38639
tp61082
g38634
s(g117
g5546
g21081
tp61083
g21077
s(g101
g325
g10835
tp61084
g21805
s(S'broken_barh'
p61085
g48715
tp61086
g48710
s(g93
g161
g58745
tp61087
g58741
s(S'arrow'
p61088
g2557
tp61089
g2552
s(S'semilogx'
p61090
g39019
tp61091
g39014
s(S'plotting'
p61092
g15820
tp61093
g15815
sS'rec2txt'
p61094
(icodemend.demo.code_suggest
Element
p61095
(dp61096
g10
I0
sg11
S'returns a textual representation of a record array .'
p61097
sg12
Vrec2txt
p61098
sg14
(lp61099
g57730
ag8215
a(icodemend.demo.code_suggest
Element
p61100
(dp61101
g10
I0
sg11
S'padding : space between each column'
p61102
sg12
Vrec2txt.padding
p61103
sg14
(lp61104
sg2
S'padding'
p61105
sbag60973
asg2
g61094
sbs(g324
g325
g9089
tp61106
g9085
s(S'broken_barh'
p61107
g48709
tp61108
g48704
s(g101
S'c'
S'z'
tp61109
g21269
s(g117
g118
g28619
tp61110
g28615
s(g117
g132
g28717
tp61111
g28713
s(g4371
g4833
g17680
tp61112
g17676
s(S'pcolor'
p61113
g49446
tp61114
g49441
s(S'deprecated'
p61115
g42847
tp61116
g42842
s(S'magnitude_spectrum'
p61117
g48086
tp61118
g48081
s(S'findobj'
p61119
g37240
tp61120
g37231
s(S'cohere'
p61121
g43682
tp61122
g43677
s(S'fill_betweenx'
p61123
S'y'
tp61124
g20378
s(S'xscale'
p61125
S'x'
tp61126
g55856
s(S'text'
p61127
g48446
tp61128
g48441
s(g2250
g38222
g30836
tp61129
g30832
s(S'shade'
p61130
g59979
tp61131
g59974
s(S'plot_date'
p61132
g19907
tp61133
g19902
s(g101
S'c'
S'X'
tp61134
g21430
s(S'cross_from_above'
p61135
S'x'
tp61136
g52063
s(S'barh'
p61137
g60463
tp61138
g60458
sS'scaled'
p61139
(icodemend.demo.code_suggest
Element
p61140
(dp61141
g10
I1
sg11
S'return true if vmin and vmax set'
p61142
sg12
Vscaled
p61143
sg14
(lp61144
sg2
g61139
sbs(S'semilogy'
p61145
g39265
tp61146
g39260
s(S'bxp'
p61147
g41607
tp61148
g41602
s(S'semilogx'
p61149
g38953
tp61150
g38948
sS'use'
p61151
(icodemend.demo.code_suggest
Element
p61152
(dp61153
g10
I183
sg11
S'set the matplotlib backend to one of the known backends . use matplotlib style settings from a style specification .'
p61154
sg12
Vuse
p61155
sg14
(lp61156
g51941
ag21000
ag15404
asg2
g61151
sbs(g452
g12650
S'5'
tp61157
g51809
s(S'xcorr'
p61158
g35428
tp61159
g35418
s(g93
g4800
g25454
tp61160
g25450
sS'set_rasterized'
p61161
(icodemend.demo.code_suggest
Element
p61162
(dp61163
g10
I5
sg11
S'force rasterized ( bitmap ) drawing in vector backend output .'
p61164
sg12
Vset_rasterized
p61165
sg14
(lp61166
sg2
g61161
sbs(S'psd'
p61167
g37000
tp61168
g36995
s(S'hlines'
p61169
g5290
tp61170
g5260
s(g452
g12702
g1944
tp61171
g54291
s(g117
g118
g27844
tp61172
g27840
s(g4371
g325
g17585
tp61173
g17581
s(g245
g140
g30538
tp61174
g30534
s(g16
g132
g46497
tp61175
g46493
s(g101
S'c'
g11761
tp61176
g21481
sg45376
(icodemend.demo.code_suggest
Element
p61177
(dp61178
g10
I0
sg11
S''
sg12
VCubicTriInterpolator
p61179
sg14
(lp61180
g52191
ag51902
ag45379
ag15026
ag59569
asg2
g45376
sbs(S'set_title'
p61181
S'x'
tp61182
g44422
s(S'csd'
p61183
g51473
tp61184
g51468
s(S'matshow'
p61185
g53021
tp61186
g53016
s(S'quiver'
p61187
g31087
tp61188
g31082
s(g452
g909
S'2'
tp61189
g53459
s(g125
g909
S'5'
tp61190
g39474
sS'get_offset'
p61191
(icodemend.demo.code_suggest
Element
p61192
(dp61193
g10
I0
sg11
S'return offset of the container .'
p61194
sg12
Vget_offset
p61195
sg14
(lp61196
sg2
g61191
sbs(g117
g132
g28824
tp61197
g28820
s(g245
g140
g30363
tp61198
g30359
s(S'quiver'
p61199
g31111
tp61200
g31106
s(S'cohere'
p61201
g43795
tp61202
g43790
s(g5112
g4274
g865
tp61203
g6361
s(g252
g39555
g14562
tp61204
g14558
sS'get_default_filename'
p61205
(icodemend.demo.code_suggest
Element
p61206
(dp61207
g10
I0
sg11
S'return a string , which includes extension , suitable for use as a default filename .'
p61208
sg12
Vget_default_filename
p61209
sg14
(lp61210
sg2
g61205
sbs(g1170
g10211
g815
tp61211
g811
s(S'barh'
p61212
g60451
tp61213
g60446
sS'set_canvas_size'
p61214
(icodemend.demo.code_suggest
Element
p61215
(dp61216
g10
I0
sg11
S'set the size of the buffer used to render the math expression . dimension the drawing canvas'
p61217
sg12
Vset_canvas_size
p61218
sg14
(lp61219
sg2
g61214
sbs(S'figtext'
p61220
g11532
tp61221
g11527
s(g27318
S'window'
p61222
g36820
tp61223
g36816
sS'get_sparse_matrix'
p61224
(icodemend.demo.code_suggest
Element
p61225
(dp61226
g10
I0
sg11
S'return a m x n sparse matrix with frac elements randomly filled .'
p61227
sg12
Vget_sparse_matrix
p61228
sg14
(lp61229
g59880
ag33
ag4869
asg2
g61224
sbs(g16
g453
g12768
tp61230
g12764
s(S'SimpleLineShadow'
p61231
g55627
tp61232
g55622
sS'deepcopy'
p61233
(icodemend.demo.code_suggest
Element
p61234
(dp61235
g10
I3
sg11
S'returns a deepcopy of the path .'
p61236
sg12
Vdeepcopy
p61237
sg14
(lp61238
sg2
g61233
sbs(S'plot_date'
p61239
g19943
tp61240
g19938
s(g5112
g46863
g15909
tp61241
g15905
s(g101
S'c'
g21607
tp61242
g21603
s(g47354
g132
g11163
tp61243
g11159
s(S'clabel'
p61244
g14873
tp61245
g14853
s(S'broken_barh'
p61246
g48757
tp61247
g48752
s(S'polar'
p61248
S'r'
tp61249
g37740
s(S'grid'
p61250
g50686
tp61251
g50681
s(S'get_window_extent'
p61252
g52738
tp61253
g52733
s(g93
g161
g58725
tp61254
g58721
s(g6217
g110
g2503
tp61255
g2499
s(S'hexbin'
p61256
g25728
tp61257
g25714
s(S'barbs'
p61258
g59931
tp61259
g59926
s(S'makeMappingArray'
p61260
S'N'
tp61261
g46194
s(g101
g8267
g22147
tp61262
g22143
s(g514
g5025
g10559
tp61263
g10555
s(S'set_clim'
p61264
g4459
S'0'
tp61265
g22370
s(g4340
S'y'
g35801
tp61266
g35797
s(g1003
g33594
g31177
tp61267
g31173
s(S'phase_spectrum'
p61268
g52373
tp61269
g52368
s(S'streamplot'
p61270
g49319
tp61271
g49314
s(S'rgrids'
p61272
g57983
tp61273
g57978
s(S'table'
p61274
S'label'
p61275
tp61276
(icodemend.demo.code_suggest
Element
p61277
(dp61278
g10
I0
sg11
S'set the label to s for auto legend .'
p61279
sg12
Vtable.label
p61280
sg14
(lp61281
sg2
g61275
sbs(S'broken_barh'
p61282
g48685
tp61283
g48675
s(g117
g118
g27586
tp61284
g27582
s(g332
g389
S'0'
tp61285
g33695
s(S'plot'
p61286
g29964
tp61287
g29959
s(g4371
g7032
g17509
tp61288
g17505
s(g1170
g10211
g840
tp61289
g836
s(g2250
g15307
g30741
tp61290
g30737
s(S'pie'
p61291
g55812
tp61292
g55802
s(g10679
g102
g5316
tp61293
g5312
sS'string_width_height'
p61294
(icodemend.demo.code_suggest
Element
p61295
(dp61296
g10
I0
sg11
S'return the string width ( including kerning ) and string height as a ( w , h ) tuple .'
p61297
sg12
Vstring_width_height
p61298
sg14
(lp61299
g56977
ag26524
asg2
g61294
sbs(g101
g118
g21990
tp61300
g21986
s(g5562
g325
g9232
tp61301
g10817
s(S'pcolor'
p61302
g49481
tp61303
g49476
s(S'set_xlim'
p61304
g4611
tp61305
g4602
s(S'figtext'
p61306
g11329
tp61307
g11324
s(g332
g389
g33718
tp61308
g33714
s(S'rec_join'
p61309
g35114
tp61310
g35109
s(S'barh'
p61311
g60469
tp61312
g60464
s(g40328
g118
g26074
tp61313
g26070
s(S'specgram'
p61314
g47883
tp61315
g47878
s(g101
g110
g16332
tp61316
g16328
sS'score_weight'
p61317
(icodemend.demo.code_suggest
Element
p61318
(dp61319
g10
I0
sg11
S'returns a match score between weight1 and weight2 .'
p61320
sg12
Vscore_weight
p61321
sg14
(lp61322
g25125
ag31384
asg2
g61317
sbs(g139
g140
g1613
tp61323
g1609
s(S'axvspan'
p61324
g54694
tp61325
g54689
s(S'savefig'
p61326
g57020
tp61327
g57015
sS'set_history_buttons'
p61328
(icodemend.demo.code_suggest
Element
p61329
(dp61330
g10
I0
sg11
S'enable or disable back/forward button'
p61331
sg12
Vset_history_buttons
p61332
sg14
(lp61333
sg2
g61328
sbs(g4998
g5025
S'7'
tp61334
g39504
s(S'rec_groupby'
p61335
S'attr'
p61336
tp61337
(icodemend.demo.code_suggest
Element
p61338
(dp61339
g10
I0
sg11
S'stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname . for example :'
p61340
sg12
Vrec_groupby.attr
p61341
sg14
(lp61342
sg2
g61336
sbs(S'figimage'
p61343
g3258
tp61344
g3253
s(S'arrow'
p61345
g2789
tp61346
g2784
s(g2250
g44230
g627
tp61347
g24896
sS'is_horizontal'
p61348
(icodemend.demo.code_suggest
Element
p61349
(dp61350
g10
I0
sg11
S'true if the eventcollection is horizontal , false if vertical'
p61351
sg12
Vis_horizontal
p61352
sg14
(lp61353
sg2
g61348
sbs(S'barh'
p61354
g60445
tp61355
g60440
s(S'axvspan'
p61356
g54718
tp61357
g54713
s(g4371
g325
g17580
tp61358
g17576
s(S'magnitude_spectrum'
p61359
g48116
tp61360
g48111
s(S'gca'
p61361
g54055
tp61362
g54050
s(g2814
g41878
g55384
tp61363
g55380
s(S'text'
p61364
g48386
tp61365
g48381
s(S'circle'
p61366
g39974
tp61367
g39969
s(S'plot'
p61368
g29820
tp61369
g29815
sS'draw_text'
p61370
(icodemend.demo.code_suggest
Element
p61371
(dp61372
g10
I0
sg11
S'draw the text instance'
p61373
sg12
Vdraw_text
p61374
sg14
(lp61375
sg2
g61370
sbs(S'to_rgba'
p61376
g12949
tp61377
g12944
s(S'psd'
p61378
g37054
tp61379
g37049
sS'get_image_magnification'
p61380
(icodemend.demo.code_suggest
Element
p61381
(dp61382
g10
I0
sg11
S'get the factor by which to magnify images passed to draw_image ( ) .'
p61383
sg12
Vget_image_magnification
p61384
sg14
(lp61385
sg2
g61380
sbs(S'hlines'
p61386
g5361
tp61387
g5356
s(S'fill_betweenx'
p61388
S'x2'
p61389
g20370
tp61390
g20366
s(g452
g2251
g42266
tp61391
g42262
s(g117
g118
g27497
tp61392
g27493
s(S'contourf'
p61393
g46654
tp61394
g46629
s(S'streamplot'
p61395
g49287
tp61396
g49262
s(S'axvspan'
p61397
g54700
tp61398
g54695
s(g101
S'c'
g21521
tp61399
g21517
s(S'loglog'
p61400
g53631
tp61401
g53626
sS'candlestick_ohlc'
p61402
(icodemend.demo.code_suggest
Element
p61403
(dp61404
g10
I0
sg11
S'plot the time , open , high , low , close as a vertical line ranging from low to high .'
p61405
sg12
Vcandlestick_ohlc
p61406
sg14
(lp61407
g60837
ag49803
a(icodemend.demo.code_suggest
Element
p61408
(dp61409
g10
I0
sg11
S'the color of the rectangle where close < open'
p61410
sg12
Vcandlestick_ohlc.colordown
p61411
sg14
(lp61412
sg2
S'colordown'
p61413
sbag21229
ag3928
ag52218
asg2
g61402
sbs(g514
g325
g48184
tp61414
g48180
s(g1170
g10211
g835
tp61415
g831
sS'set_fontsize'
p61416
(icodemend.demo.code_suggest
Element
p61417
(dp61418
g10
I46
sg11
S'set fontsize in points alias for set_size'
p61419
sg12
Vset_fontsize
p61420
sg14
(lp61421
sg2
g61416
sbs(S'grid'
p61422
g50620
tp61423
g50615
s(g117
g118
g28559
tp61424
g28555
sS'quotes_historical_yahoo_ochl'
p61425
(icodemend.demo.code_suggest
Element
p61426
(dp61427
g10
I0
sg11
S'get historical data for ticker between date1 and date2 .'
p61428
sg12
Vquotes_historical_yahoo_ochl
p61429
sg14
(lp61430
g61047
ag56871
ag33999
ag33645
ag40282
ag34509
asg2
g61425
sbs(g324
g8780
g8780
tp61431
g9857
s(S'phase_spectrum'
p61432
g52313
tp61433
g52308
s(S'ginput'
p61434
g14747
tp61435
g14742
sS'xlabel'
p61436
(icodemend.demo.code_suggest
Element
p61437
(dp61438
g10
I274
sg11
S'set the x axis label of the current axis .'
p61439
sg12
Vxlabel
p61440
sg14
(lp61441
g57773
asg2
g61436
sbs(S'set_yticklabels'
p61442
g18220
tp61443
g18215
s(S'text'
p61444
g48249
tp61445
g48231
s(g93
g161
g58755
tp61446
g58751
s(S'semilogy'
p61447
g39361
tp61448
g39356
s(S'eventplot'
p61449
g23367
tp61450
g23362
s(S'tricontour'
p61451
S'Z'
tp61452
g1376
sS'close_event'
p61453
(icodemend.demo.code_suggest
Element
p61454
(dp61455
g10
I2
sg11
S"this method will be called by all functions connected to the ' close_event ' with a closeevent"
p61456
sg12
Vclose_event
p61457
sg14
(lp61458
sg2
g61453
sbs(g101
S'c'
g21331
tp61459
g21327
sS'blit'
p61460
(icodemend.demo.code_suggest
Element
p61461
(dp61462
g10
I26
sg11
S'blit the canvas in bbox ( default entire canvas ) transfer the region of the agg buffer defined by bbox to the display . blit the region in bbox'
p61463
sg12
Vblit
p61464
sg14
(lp61465
sg2
g61460
sbs(g101
S's'
S'3'
tp61466
g7629
s(S'set_yticks'
p61467
g56399
tp61468
g56394
sS'clim'
p61469
(icodemend.demo.code_suggest
Element
p61470
(dp61471
g10
I3
sg11
S'set the color limits of the current image .'
p61472
sg12
Vclim
p61473
sg14
(lp61474
g34112
ag26511
asg2
g61469
sbs(g1170
g1257
g54185
tp61475
g54181
s(g117
g4274
g28998
tp61476
g28994
s(S'get_rotation'
p61477
g24537
tp61478
g24532
s(g245
g140
g30293
tp61479
g30289
s(g5673
S'arrowsize'
p61480
S'3'
tp61481
g39608
s(S'set_yticklabels'
p61482
g18262
tp61483
g18257
s(S'broken_barh'
p61484
g48733
tp61485
g48728
s(g324
g785
g9686
tp61486
g9682
s(g245
g140
g30393
tp61487
g30389
s(g6146
g8210
g3047
tp61488
g3043
s(S'render_rect_filled'
p61489
g32979
tp61490
g32974
s(g452
g8857
S'1'
tp61491
g51014
s(g2814
g10936
S'v'
tp61492
g55365
s(g582
g132
g3301
tp61493
g3297
s(S'fill_betweenx'
p61494
g20360
tp61495
g20355
s(g117
g118
g27804
tp61496
g27800
s(g101
S's'
g7756
tp61497
g7752
s(g514
g325
g48189
tp61498
g48185
s(g5848
g5849
g59468
tp61499
g59464
sS'autoscale_view'
p61500
(icodemend.demo.code_suggest
Element
p61501
(dp61502
g10
I38
sg11
S'autoscale the view limits using the data limits .'
p61503
sg12
Vautoscale_view
p61504
sg14
(lp61505
g54808
asg2
g61500
sbs(S'hexbin'
p61506
g25764
tp61507
g25754
s(S'xaxis_date'
p61508
g38745
tp61509
g38736
s(g117
g132
g28884
tp61510
g28880
s(S'set_yticklabels'
p61511
g18172
tp61512
g18167
s(S'add'
p61513
g55454
tp61514
g55449
s(S'figtext'
p61515
g11311
tp61516
g11306
s(S'annotate'
p61517
g59294
tp61518
g59289
s(g101
g4274
g21627
tp61519
g21623
s(g452
g453
g7259
tp61520
g7255
s(g452
g37606
g865
tp61521
g42555
s(g13532
g7815
g7815
tp61522
g35930
s(g117
S'ydata'
p61523
g29802
tp61524
g29798
s(g16
g132
g46447
tp61525
g46443
s(S'polar'
p61526
g37750
tp61527
g37745
s(g332
g627
g46928
tp61528
g46924
sS'message_event'
p61529
(icodemend.demo.code_suggest
Element
p61530
(dp61531
g10
I0
sg11
S'emit a toolmanagermessageevent'
p61532
sg12
Vmessage_event
p61533
sg14
(lp61534
sg2
g61529
sbs(S'boxplot'
p61535
g39788
tp61536
g39783
s(g452
g453
g7231
tp61537
g7227
s(S'set_yscale'
p61538
g15533
tp61539
g15528
s(S'errorbar'
p61540
g56042
tp61541
g56037
sS'get_data_transform'
p61542
(icodemend.demo.code_suggest
Element
p61543
(dp61544
g10
I0
sg11
S'return the transform instance which maps data coordinates to physical coordinates .'
p61545
sg12
Vget_data_transform
p61546
sg14
(lp61547
sg2
g61542
sbs(g139
g140
g1677
tp61548
g1673
s(S'toolmanager_disconnect'
p61549
g57726
tp61550
g57721
s(g13542
g515
g515
tp61551
g52934
s(g117
g118
g28514
tp61552
g28510
s(S'angle_spectrum'
p61553
g18732
tp61554
g18727
s(g117
g118
g28544
tp61555
g28540
s(g101
S'c'
g21405
tp61556
g21401
s(g324
g10116
g9024
tp61557
g9020
s(g5673
g2392
g6216
tp61558
g6212
sS'get_extent_offsets'
p61559
(icodemend.demo.code_suggest
Element
p61560
(dp61561
g10
I0
sg11
S'update offset of childrens and return the extents of the box'
p61562
sg12
Vget_extent_offsets
p61563
sg14
(lp61564
sg2
g61559
sbsS'get_mfcalt'
p61565
(icodemend.demo.code_suggest
Element
p61566
(dp61567
g10
I0
sg11
S'alias for get_markerfacecoloralt'
p61568
sg12
Vget_mfcalt
p61569
sg14
(lp61570
sg2
g61565
sbs(S'set_xticklabels'
p61571
g17073
tp61572
g17068
s(S'errorbar'
p61573
S'y'
tp61574
g55960
s(S'gca'
p61575
g54079
tp61576
g54074
s(g5424
g132
g50565
tp61577
g50561
s(S'cleaned'
p61578
g60230
tp61579
g60225
s(S'shade_rgb'
p61580
g49619
tp61581
g49614
s(S'magnitude_spectrum'
p61582
g48026
tp61583
g48021
s(g245
g140
g30428
tp61584
g30424
s(S'semilogx'
p61585
g39085
tp61586
g39080
s(S'quiver'
p61587
g31099
tp61588
g31094
s(S'plotfile'
p61589
g16918
tp61590
g16913
s(S'arrow'
p61591
g2731
tp61592
g2726
s(g332
g33920
g38142
tp61593
g38138
s(g16
g17
g41953
tp61594
g41949
s(g16
g17
S'5'
tp61595
g41911
s(S'matshow'
p61596
g53015
tp61597
g53010
sS'imread'
p61598
(icodemend.demo.code_suggest
Element
p61599
(dp61600
g10
I59
sg11
S'read an image from a file into an array .'
p61601
sg12
Vimread
p61602
sg14
(lp61603
g24687
ag44101
asg2
g61598
sbs(g93
g4800
g25524
tp61604
g25520
s(S'semilogy'
p61605
g39325
tp61606
g39320
s(S'angle_spectrum'
p61607
g19013
tp61608
g19008
s(S'spy'
p61609
S'Z'
tp61610
g34575
s(g8943
g966
g49642
tp61611
g49638
sS'get_trifinder'
p61612
(icodemend.demo.code_suggest
Element
p61613
(dp61614
g10
I0
sg11
S'return the default matplotlib.tri.trifinder of this triangulation , creating it if necessary .'
p61615
sg12
Vget_trifinder
p61616
sg14
(lp61617
sg2
g61612
sbsS'key_press'
p61618
(icodemend.demo.code_suggest
Element
p61619
(dp61620
g10
I0
sg11
S'implement the default mpl key bindings defined at navigation keyboard shortcuts'
p61621
sg12
Vkey_press
p61622
sg14
(lp61623
sg2
g61618
sbs(g5640
g16843
g12011
tp61624
g12007
s(S'broken_barh'
p61625
g48721
tp61626
g48716
s(S'axhspan'
p61627
g24483
tp61628
g24478
s(S'axhspan'
p61629
g24328
tp61630
g24323
s(g582
S'y'
g3390
tp61631
g3386
s(S'bxp'
p61632
g41643
tp61633
g41638
s(S'angle_spectrum'
p61634
g18726
tp61635
g18721
s(S'axvline'
p61636
g56296
tp61637
g56291
s(S'HPacker'
p61638
g36400
tp61639
g36395
s(S'broken_barh'
p61640
g48739
tp61641
g48734
s(g324
g8780
g9847
tp61642
g9843
s(S'process_selected'
p61643
g16085
tp61644
g16080
s(S'grid'
p61645
g50626
tp61646
g50621
s(S'broken_barh'
p61647
g48817
tp61648
g48812
s(g117
g118
g27724
tp61649
g27720
s(S'csv2rec'
p61650
g43981
tp61651
g43971
s(S'plot_date'
p61652
g20039
tp61653
g20034
s(g117
S'url'
p61654
g29774
tp61655
g29770
s(g101
g35545
g20991
tp61656
g20987
s(S'annotate'
p61657
g59330
tp61658
g59325
s(S'candlestick_ohlc'
p61659
g61413
tp61660
g61408
s(S'score_size'
p61661
g35326
tp61662
g35321
s(S'set_offset_position'
p61663
g42439
tp61664
g42434
s(S'colorbar'
p61665
g12016
tp61666
g11977
s(S'semilogy'
p61667
g39259
tp61668
g39254
sS'get_multilinebaseline'
p61669
(icodemend.demo.code_suggest
Element
p61670
(dp61671
g10
I0
sg11
S'get multilinebaseline .'
p61672
sg12
Vget_multilinebaseline
p61673
sg14
(lp61674
sg2
g61669
sbs(S'tripcolor'
p61675
g56815
tp61676
g56810
s(g5975
g2841
g19657
tp61677
g19653
s(S'hexbin'
p61678
g25796
tp61679
g25786
sS'table'
p61680
(icodemend.demo.code_suggest
Element
p61681
(dp61682
g10
I25
sg11
S'add a table to the current axes .'
p61683
sg12
Vtable
p61684
sg14
(lp61685
g50719
ag26811
ag58268
ag54816
ag51245
ag31592
ag23974
ag19350
a(icodemend.demo.code_suggest
Element
p61686
(dp61687
g10
I0
sg11
S'set whether artist uses clipping .'
p61688
sg12
Vtable.clip_on
p61689
sg14
(lp61690
sg2
S'clip_on'
p61691
sbag56768
ag60236
ag34917
ag52131
ag31359
ag59743
ag26203
ag24845
ag59985
ag61277
ag47317
ag40630
ag59775
ag45702
ag2170
ag31665
ag59583
ag56435
ag46841
ag45789
ag57506
ag16640
ag34470
ag50880
ag60295
ag51735
ag60520
ag54457
ag47290
a(icodemend.demo.code_suggest
Element
p61692
(dp61693
g10
I0
sg11
S'set the xtick labels with list of strings labels .'
p61694
sg12
Vtable.xticklabels
p61695
sg14
(lp61696
sg2
S'xticklabels'
p61697
sbag32559
ag54869
ag24020
ag52018
ag34043
ag10057
a(icodemend.demo.code_suggest
Element
p61698
(dp61699
g10
I0
sg11
S'set the y ticks with list of ticks'
p61700
sg12
Vtable.yticks
p61701
sg14
(lp61702
sg2
S'yticks'
p61703
sbag60324
asg2
g61680
sbs(S'rgrids'
p61704
g58001
tp61705
g57996
s(S'box'
p61706
g48662
tp61707
g48657
s(g101
g4274
g21656
tp61708
g21652
s(S'set_xticklabels'
p61709
g17085
tp61710
g17080
s(g1205
g13269
S'1'
tp61711
g4558
sS'set_axes'
p61712
(icodemend.demo.code_suggest
Element
p61713
(dp61714
g10
I0
sg11
S'set the axes instance in which the artist resides , if any .'
p61715
sg12
Vset_axes
p61716
sg14
(lp61717
sg2
g61712
sbs(g117
g118
g28169
tp61718
g28165
s(S'plotting'
p61719
g15832
tp61720
g15827
sS'add_axes'
p61721
(icodemend.demo.code_suggest
Element
p61722
(dp61723
g10
I243
sg11
S'add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .'
p61724
sg12
Vadd_axes
p61725
sg14
(lp61726
g37953
ag53282
ag59383
ag50215
ag21029
ag4197
ag2946
ag36113
ag57032
ag4828
ag56933
ag50183
ag58547
ag60057
ag58226
ag41023
ag36417
ag54431
ag6335
ag60245
ag59862
ag47136
ag11785
ag41090
ag42423
ag8477
ag59591
ag33260
ag54397
ag31190
ag47359
ag51930
ag34478
ag33313
ag59599
ag51180
ag52258
ag4124
ag52529
ag39589
ag53938
ag51287
ag45987
ag37590
ag58250
ag37825
ag15004
ag37932
ag55040
ag319
ag47809
asg2
g61721
sbs(S'set_fontproperties'
p61727
g26485
tp61728
g26480
sS'path_length'
p61729
(icodemend.demo.code_suggest
Element
p61730
(dp61731
g10
I0
sg11
S'computes the distance travelled along a polygonal curve in n dimensions .'
p61732
sg12
Vpath_length
p61733
sg14
(lp61734
g53975
ag60651
ag56584
asg2
g61729
sbs(g332
g4225
g48285
tp61735
g48281
s(g93
g4800
g25304
tp61736
g25300
s(S'barh'
p61737
g60457
tp61738
g60452
sS'update_scalarmappable'
p61739
(icodemend.demo.code_suggest
Element
p61740
(dp61741
g10
I2
sg11
S'if the scalar mappable array is not none , update colors from scalar data'
p61742
sg12
Vupdate_scalarmappable
p61743
sg14
(lp61744
sg2
g61739
sbs(S'text'
p61745
g48440
tp61746
g48435
s(S'psd'
p61747
g37042
tp61748
g37037
s(S'figtext'
p61749
g11191
tp61750
g11186
s(S'legend_artist'
p61751
g43514
tp61752
g43509
s(S'magnitude_spectrum'
p61753
g47984
tp61754
g47979
s(S'pie'
p61755
g55818
tp61756
g55813
s(S'plot'
p61757
g29928
tp61758
g29923
s(S'gca'
p61759
g54043
tp61760
g54038
sS'plot_day_summary_ohlc'
p61761
(icodemend.demo.code_suggest
Element
p61762
(dp61763
g10
I0
sg11
S'plots day summary'
p61764
sg12
Vplot_day_summary_ohlc
p61765
sg14
(lp61766
(icodemend.demo.code_suggest
Element
p61767
(dp61768
g10
I0
sg11
S'an axes instance to plot to'
p61769
sg12
Vplot_day_summary_ohlc.ax
p61770
sg14
(lp61771
sg2
S'ax'
p61772
sbag32716
ag54913
ag60583
ag36634
asg2
g61761
sbs(g117
g118
g28494
tp61773
g28490
s(S'annotate'
p61774
g59306
tp61775
g59301
s(S'contourf'
p61776
S'z'
tp61777
g46740
s(S'get'
p61778
g49982
tp61779
g49977
s(g452
g2841
g132
tp61780
g43252
s(S'angle_spectrum'
p61781
g18684
tp61782
g18679
s(S'set_facecolor'
p61783
S'c'
tp61784
g41082
s(g16
g453
g7264
tp61785
g12741
sS'get_kern_dist'
p61786
(icodemend.demo.code_suggest
Element
p61787
(dp61788
g10
I0
sg11
S'return the kerning pair distance ( possibly 0 ) for chars c1 and c2'
p61789
sg12
Vget_kern_dist
p61790
sg14
(lp61791
g60354
ag57475
asg2
g61786
sbs(g944
g118
g51452
tp61792
g51448
s(S'grid'
p61793
g50632
tp61794
g50627
s(g117
g118
g28094
tp61795
g28090
s(g5848
g5849
g59477
tp61796
g59473
s(g117
g909
g29265
tp61797
g29261
s(g109
g3075
g55338
tp61798
g55334
s(g332
g5546
g5556
tp61799
g48236
s(g93
g333
g46227
tp61800
g46223
s(S'plot'
p61801
g29946
tp61802
g29941
s(S'set_yscale'
p61803
g15551
tp61804
g15546
sS'getp'
p61805
(icodemend.demo.code_suggest
Element
p61806
(dp61807
g10
I10
sg11
S"return the value of object 's property ."
p61808
sg12
Vgetp
p61809
sg14
(lp61810
g40038
ag60114
ag1106
ag57123
ag15889
ag31293
ag59203
ag15708
ag59854
ag7145
ag45455
ag49414
ag32861
ag16494
ag5228
ag23760
ag12728
ag52612
ag10968
a(icodemend.demo.code_suggest
Element
p61811
(dp61812
g10
I0
sg11
S'set padding of x data limits prior to autoscaling .'
p61813
sg12
Vgetp.xmargin
p61814
sg14
(lp61815
sg2
S'xmargin'
p61816
sbag59753
ag34336
ag49795
ag24048
ag22268
ag45005
ag19227
ag60854
ag26988
ag47263
asg2
g61805
sbs(g101
g4274
g21632
tp61817
g21628
s(g117
g118
g27889
tp61818
g27885
s(S'table'
p61819
g61703
tp61820
g61698
s(g125
S'x'
g34794
tp61821
g34790
s(S'plot_day_summary_ohlc'
p61822
g61772
tp61823
g61767
sS'set_wrap'
p61824
(icodemend.demo.code_suggest
Element
p61825
(dp61826
g10
I0
sg11
S'sets the wrapping state for the text .'
p61827
sg12
Vset_wrap
p61828
sg14
(lp61829
sg2
g61824
sbs(g117
g132
g28770
tp61830
g28766
s(S'index_of'
p61831
S'y'
tp61832
g31251
s(S'hsv_to_rgb'
p61833
g53172
tp61834
g53167
s(g8266
g8768
g1944
tp61835
g40941
s(g139
g140
g1503
tp61836
g1499
s(g101
S'c'
g21447
tp61837
g21443
s(g5576
g32548
g13606
tp61838
g13602
s(S'set_xticklabels'
p61839
g17049
tp61840
g17044
s(S'set_ylim'
p61841
g32328
tp61842
g32315
s(g388
g389
g16954
tp61843
g16950
s(S'semilogx'
p61844
g38965
tp61845
g38960
s(S'semilogx'
p61846
g38989
tp61847
g38984
s(g117
g132
g28854
tp61848
g28850
s(g252
g253
g14091
tp61849
g14087
s(S'angle_spectrum'
p61850
S'x'
tp61851
g18955
s(S'parse'
p61852
g59028
tp61853
g59023
sS'draw_rubberband'
p61854
(icodemend.demo.code_suggest
Element
p61855
(dp61856
g10
I0
sg11
S'draw rubberband draw a rectangle rubberband to indicate zoom limits'
p61857
sg12
Vdraw_rubberband
p61858
sg14
(lp61859
sg2
g61854
sbs(g4998
g5025
S'1'
tp61860
g39487
s(S'add'
p61861
g55466
tp61862
g55461
s(S'add_subplot'
p61863
g47471
tp61864
g47437
s(g125
g2392
g56255
tp61865
g56251
s(S'figtext'
p61866
g11299
tp61867
g11294
s(S'table'
p61868
g61697
tp61869
g61692
s(g8266
g8267
g8156
tp61870
g8152
s(S'hlines'
p61871
g5367
tp61872
g5362
s(g5424
g132
g50555
tp61873
g50551
s(S'phase_spectrum'
p61874
g52433
tp61875
g52428
s(S'hillshade'
p61876
g6510
tp61877
g6505
s(g40328
g5775
g39174
tp61878
g39170
s(S'plot_date'
p61879
g19835
tp61880
g19830
s(g16
g132
g46433
tp61881
g46429
s(g101
g325
g21759
tp61882
g21755
s(S'eventplot'
p61883
g23571
tp61884
g23566
s(g16
g489
g46573
tp61885
g46569
s(S'cohere'
p61886
g43670
tp61887
g43665
s(S'rgrids'
p61888
g57989
tp61889
g57984
s(S'csd'
p61890
g51515
tp61891
g51510
s(S'annotate'
p61892
g59278
tp61893
g59268
sS'press'
p61894
(icodemend.demo.code_suggest
Element
p61895
(dp61896
g10
I0
sg11
S'called whenver a mouse button is pressed .'
p61897
sg12
Vpress
p61898
sg14
(lp61899
sg2
g61894
sbs(g1170
g10211
g810
tp61900
g806
s(S'tricontour'
p61901
g1392
tp61902
g1387
s(S'annotate'
p61903
g59312
tp61904
g59307
sS'allpairs'
p61905
(icodemend.demo.code_suggest
Element
p61906
(dp61907
g10
I0
sg11
S'return all possible pairs in sequence x'
p61908
sg12
Vallpairs
p61909
sg14
(lp61910
g52830
asg2
g61905
sbsS'draw'
p61911
(icodemend.demo.code_suggest
Element
p61912
(dp61913
g10
I668
sg11
S'draw the children'
p61914
sg12
Vdraw
p61915
sg14
(lp61916
g52144
asg2
g61911
sbs(g101
S'c'
g21602
tp61917
g21598
s(S'axis'
p61918
g15100
tp61919
g15091
s(S'add_subplot'
p61920
g47525
tp61921
g47520
s(S'pcolormesh'
p61922
g60808
tp61923
g60803
s(g514
g8538
g44129
tp61924
g44125
s(S'add'
p61925
g55385
tp61926
g55370
sS'release_zoom'
p61927
(icodemend.demo.code_suggest
Element
p61928
(dp61929
g10
I0
sg11
S'the release mouse button callback in zoom to rect mode'
p61930
sg12
Vrelease_zoom
p61931
sg14
(lp61932
sg2
g61927
sbs(g117
g118
g28424
tp61933
g28420
s(S'magnitude_spectrum'
p61934
g48014
tp61935
g48009
s(g117
g132
g28688
tp61936
g28684
s(S'errorbar'
p61937
g55994
tp61938
g55989
s(S'table'
p61939
g61691
tp61940
g61686
s(S'parse_yahoo_historical_ochl'
p61941
g33042
tp61942
g33037
s(S'binary_repr'
p61943
g5719
tp61944
g5714
s(S'angle_spectrum'
p61945
g18678
tp61946
g18673
s(S'index_bar'
p61947
g8331
tp61948
g8326
sS'kern'
p61949
(icodemend.demo.code_suggest
Element
p61950
(dp61951
g10
I0
sg11
S'insert kern nodes between char nodes to set kerning .'
p61952
sg12
Vkern
p61953
sg14
(lp61954
sg2
g61949
sbs(g109
g19182
g57002
tp61955
g56998
s(g324
g8780
g9880
tp61956
g9876
s(S'set_anchor'
p61957
g58768
tp61958
g58763
s(S'matshow'
p61959
g53009
tp61960
g53004
s(g1170
g10211
g860
tp61961
g856
s(g117
S'y'
g29423
tp61962
g29419
sS'redraw_in_frame'
p61963
(icodemend.demo.code_suggest
Element
p61964
(dp61965
g10
I0
sg11
S'this method can only be used after an initial draw which caches the renderer .'
p61966
sg12
Vredraw_in_frame
p61967
sg14
(lp61968
sg2
g61963
sbs(S'iterable'
p61969
g5147
tp61970
g5142
sS'set_style'
p61971
(icodemend.demo.code_suggest
Element
p61972
(dp61973
g10
I8
sg11
S'set the font style .'
p61974
sg12
Vset_style
p61975
sg14
(lp61976
sg2
g61971
sbs(S'is_writable_file_like'
p61977
g40783
tp61978
g40778
s(g5640
g5641
g11951
tp61979
g11947
s(S'text'
p61980
g48368
tp61981
g48363
s(S'barbs'
p61982
g59961
tp61983
g59956
s(S'broken_barh'
p61984
g48799
tp61985
g48794
sS'append_positions'
p61986
(icodemend.demo.code_suggest
Element
p61987
(dp61988
g10
I0
sg11
S'add one or more events at the specified positions'
p61989
sg12
Vappend_positions
p61990
sg14
(lp61991
sg2
g61986
sbs(g1170
g132
g58838
tp61992
g58834
s(S'vlines'
p61993
g53918
tp61994
g53913
s(g324
g102
g9956
tp61995
g9952
s(g60923
g12402
g35583
tp61996
g35579
s(g10679
g118
g5327
tp61997
g5323
sS'get_tight_layout_figure'
p61998
(icodemend.demo.code_suggest
Element
p61999
(dp62000
g10
I0
sg11
S'return subplot parameters for tight-layouted-figure with specified padding .'
p62001
sg12
Vget_tight_layout_figure
p62002
sg14
(lp62003
sg2
g61998
sbs(S'add_subplot'
p62004
g47585
tp62005
g47580
s(g38244
g42968
S'2'
tp62006
g4239
s(S'text'
p62007
g48332
tp62008
g48327
s(g93
g4800
g25384
tp62009
g25380
s(S'Triangulation'
p62010
g41255
tp62011
g41250
sS'rec_groupby'
p62012
(icodemend.demo.code_suggest
Element
p62013
(dp62014
g10
I0
sg11
S'r is a numpy record array'
p62015
sg12
Vrec_groupby
p62016
sg14
(lp62017
g61338
ag55005
ag36275
ag12081
ag60634
ag54138
ag45563
ag40334
asg2
g62012
sbs(g766
g5025
g46672
tp62018
g46668
sS'onmove'
p62019
(icodemend.demo.code_suggest
Element
p62020
(dp62021
g10
I0
sg11
S'on mouse motion draw the cursor if visible'
p62022
sg12
Vonmove
p62023
sg14
(lp62024
sg2
g62019
sbs(g93
g4800
g25614
tp62025
g25610
s(g5424
g102
g50586
tp62026
g50582
s(S'volume_overlay3'
p62027
g45641
tp62028
g45636
s(S'bxp'
p62029
g41595
tp62030
g41590
s(S'getp'
p62031
g61816
tp62032
g61811
s(g47354
g132
g11173
tp62033
g11169
s(g5848
g5849
g5476
tp62034
g59469
s(g101
g8545
S'2'
tp62035
g22104
s(S'eventplot'
p62036
g23349
tp62037
g23344
s(g1205
g583
g4586
tp62038
g4582
s(S'phase_spectrum'
p62039
g52349
tp62040
g52344
s(S'Slider'
p62041
g59488
tp62042
g59455
s(g16
g489
g46539
tp62043
g46535
sS'get_dashdirection'
p62044
(icodemend.demo.code_suggest
Element
p62045
(dp62046
g10
I0
sg11
S'get the direction dash .'
p62047
sg12
Vget_dashdirection
p62048
sg14
(lp62049
sg2
g62044
sbs(S'axvline'
p62050
g56237
tp62051
g56232
s(S'set_xscale'
p62052
g45485
tp62053
g45480
s(g324
g2183
g9827
tp62054
g9823
s(S'errorbar'
p62055
g55953
tp62056
g55948
s(g31242
g10759
S'4'
tp62057
g26650
s(S'complex_spectrum'
p62058
g32908
tp62059
g32903
s(g109
g19182
g57007
tp62060
g57003
s(S'axhline'
p62061
g3603
tp62062
g3598
sS'start_event_loop'
p62063
(icodemend.demo.code_suggest
Element
p62064
(dp62065
g10
I1
sg11
S'start an event loop .'
p62066
sg12
Vstart_event_loop
p62067
sg14
(lp62068
sg2
g62063
sbs(S'axhline'
p62069
g3705
tp62070
g3700
sS'get_valid_values'
p62071
(icodemend.demo.code_suggest
Element
p62072
(dp62073
g10
I0
sg11
S'get the legal arguments for the setter associated with attr .'
p62074
sg12
Vget_valid_values
p62075
sg14
(lp62076
g51001
ag44093
asg2
g62071
sbs(S'semilogy'
p62077
g39343
tp62078
g39338
s(S'HPacker'
p62079
g36388
tp62080
g36379
s(S'errorbar'
p62081
g55970
tp62082
g55965
s(S'axhline'
p62083
g3759
tp62084
g3754
sS'revcmap'
p62085
(icodemend.demo.code_suggest
Element
p62086
(dp62087
g10
I0
sg11
S'can only handle specification data in dictionary format .'
p62088
sg12
Vrevcmap
p62089
sg14
(lp62090
g12143
asg2
g62085
sbs(g46126
g15062
S'0'
tp62091
g43099
s(g332
S's'
g48259
tp62092
g48255
s(g16
g17
g41938
tp62093
g41934
s(S'parse_yahoo_historical_ohlc'
p62094
g60207
tp62095
g60202
sS'is_scalar_or_string'
p62096
(icodemend.demo.code_suggest
Element
p62097
(dp62098
g10
I0
sg11
S'return whether the given object is a scalar or string like .'
p62099
sg12
Vis_scalar_or_string
p62100
sg14
(lp62101
sg2
g62096
sbs(S'add'
p62102
g55442
tp62103
g55437
s(g4090
g4091
g4922
tp62104
g4918
s(S'PackerBase'
p62105
g4291
tp62106
g4286
sS'intersects_path'
p62107
(icodemend.demo.code_suggest
Element
p62108
(dp62109
g10
I1
sg11
S'returns true if this path intersects another given path .'
p62110
sg12
Vintersects_path
p62111
sg14
(lp62112
(icodemend.demo.code_suggest
Element
p62113
(dp62114
g10
I0
sg11
S'filled , when true , treats the paths as if they were filled . that is , if one path completely encloses the other , intersects_path ( ) will return true .'
p62115
sg12
Vintersects_path.filled
p62116
sg14
(lp62117
sg2
S'filled'
p62118
sbasg2
g62107
sbs(S'set_offsets'
p62119
g47245
tp62120
g47240
s(g332
g46859
g17000
tp62121
g45364
s(S'add'
p62122
S'a'
tp62123
g55396
s(S'semilogx'
p62124
g39055
tp62125
g39050
s(g5424
g132
g50550
tp62126
g50546
s(S'get_yaxis_text2_transform'
p62127
g41482
tp62128
g41477
s(S'tricontourf'
p62129
g11682
tp62130
g11677
s(S'rec2txt'
p62131
g61105
tp62132
g61100
s(g125
S'x'
g34799
tp62133
g34795
s(S'cohere'
p62134
g43884
tp62135
g43879
s(S'annotate'
p62136
g59318
tp62137
g59313
s(g117
g4163
g11069
tp62138
g11065
s(g101
S's'
g7766
tp62139
g7762
s(S'semilogy'
p62140
g39349
tp62141
g39344
s(g245
g140
g30163
tp62142
g30159
s(g117
g118
g27929
tp62143
g27925
s(g117
g118
g28214
tp62144
g28210
s(g101
g325
g21821
tp62145
g21817
s(S'set_title'
p62146
g44459
tp62147
g44454
sS'calculate_plane_coefficients'
p62148
(icodemend.demo.code_suggest
Element
p62149
(dp62150
g10
I0
sg11
S'calculate plane equation coefficients for all unmasked triangles from the point ( x,y ) coordinates and specified z-array of shape ( npoints ) .'
p62151
sg12
Vcalculate_plane_coefficients
p62152
sg14
(lp62153
sg2
g62148
sbs(g245
g140
g30039
tp62154
g30035
s(g245
g140
g30313
tp62155
g30309
s(S'date2num'
p62156
g42767
tp62157
g42762
s(g245
g140
g30508
tp62158
g30504
s(S'get_xyz_where'
p62159
S'M'
tp62160
g17871
s(S'set_xlabel'
p62161
g42824
tp62162
g42819
s(g245
g140
g30443
tp62163
g30439
s(S'intersects_path'
p62164
g62118
tp62165
g62113
s(S'pcolor'
p62166
g49440
tp62167
g49435
s(S'gca'
p62168
g54067
tp62169
g54062
s(g117
g118
g27859
tp62170
g27855
s(S'pcolorfast'
p62171
g33856
tp62172
g33851
s(g4
g48667
g27062
tp62173
g27058
ss.
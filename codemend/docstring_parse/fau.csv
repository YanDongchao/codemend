Function,Argument,Utterance
matplotlib.afm.AFM.get_height_char,c,Get the height of character c from the bounding box . This is the ink height ( space is 0 )|||Get the height of character c from the bounding box .
matplotlib.afm.AFM.get_kern_dist,c1,Return the kerning pair distance ( possibly 0 ) for chars c1 and c2|||Return the kerning pair distance ( possibly 0 ) for chars c1
matplotlib.afm.AFM.get_kern_dist,c2,Return the kerning pair distance ( possibly 0 ) for chars c1 and c2|||Return the kerning pair distance ( possibly 0 ) for chars c1
matplotlib.afm.AFM.get_kern_dist_from_name,name1,Return the kerning pair distance ( possibly 0 ) for chars name1 and name2
matplotlib.afm.AFM.get_kern_dist_from_name,name2,Return the kerning pair distance ( possibly 0 ) for chars name1 and name2
matplotlib.afm.AFM.string_width_height,h,"Return the string width ( including kerning ) and string height as a ( w , h ) tuple ."
matplotlib.afm.AFM.string_width_height,w,"Return the string width ( including kerning ) and string height as a ( w , h ) tuple ."
matplotlib.afm.parse_afm,dcmetrics,"Parse the Adobe Font Metics file in file handle fh . Return value is a ( dhead , dcmetrics , dkernpairs , dcomposite ) tuple where dhead is a _ parse_header ( ) dict , dcmetrics is a _ parse_composites ( ) dict , dkernpairs is a _ parse_kern_pairs ( ) dict ( possibly { } ) , and dcomposite is a _ parse_composites ( ) dict ( possibly { } )|||Parse the Adobe Font Metics file in file handle fh ."
matplotlib.afm.parse_afm,dcomposite,"Parse the Adobe Font Metics file in file handle fh . Return value is a ( dhead , dcmetrics , dkernpairs , dcomposite ) tuple where dhead is a _ parse_header ( ) dict , dcmetrics is a _ parse_composites ( ) dict , dkernpairs is a _ parse_kern_pairs ( ) dict ( possibly { } ) , and dcomposite is a _ parse_composites ( ) dict ( possibly { } )|||Parse the Adobe Font Metics file in file handle fh ."
matplotlib.afm.parse_afm,dhead,"Parse the Adobe Font Metics file in file handle fh . Return value is a ( dhead , dcmetrics , dkernpairs , dcomposite ) tuple where dhead is a _ parse_header ( ) dict , dcmetrics is a _ parse_composites ( ) dict , dkernpairs is a _ parse_kern_pairs ( ) dict ( possibly { } ) , and dcomposite is a _ parse_composites ( ) dict ( possibly { } )|||Parse the Adobe Font Metics file in file handle fh ."
matplotlib.afm.parse_afm,dkernpairs,"Parse the Adobe Font Metics file in file handle fh . Return value is a ( dhead , dcmetrics , dkernpairs , dcomposite ) tuple where dhead is a _ parse_header ( ) dict , dcmetrics is a _ parse_composites ( ) dict , dkernpairs is a _ parse_kern_pairs ( ) dict ( possibly { } ) , and dcomposite is a _ parse_composites ( ) dict ( possibly { } )|||Parse the Adobe Font Metics file in file handle fh ."
matplotlib.afm.parse_afm,fh,"Parse the Adobe Font Metics file in file handle fh . Return value is a ( dhead , dcmetrics , dkernpairs , dcomposite ) tuple where dhead is a _ parse_header ( ) dict , dcmetrics is a _ parse_composites ( ) dict , dkernpairs is a _ parse_kern_pairs ( ) dict ( possibly { } ) , and dcomposite is a _ parse_composites ( ) dict ( possibly { } )|||Parse the Adobe Font Metics file in file handle fh ."
matplotlib.animation.Animation.save,bitrate,"bitrate specifies the amount of bits used per second in the compressed movie , in kilobits per second . A higher number means a higher quality movie , but at the cost of increased file size . If no value is given , this defaults to the value given by the rcparam animation.bitrate .|||bitrate specifies the amount of bits used per second in the compressed movie , in kilobits per second ."
matplotlib.animation.Animation.save,codec,"codec is the video codec to be used . Not all codecs are supported by a given MovieWriter . If none is given , this defaults to the value specified by the rcparam animation.codec .|||codec is the video codec to be used ."
matplotlib.animation.Animation.save,dpi,dpi controls the dots per inch for the movie frames .|||dpi controls the dots per inch for the movie frames . This combined with the figure 's size in inches controls the size of the movie .
matplotlib.animation.Animation.save,extra_anim,"extra_anim is a list of additional Animation objects that should be included in the saved movie file .|||extra_anim is a list of additional Animation objects that should be included in the saved movie file . These need to be from the same matplotlib.Figure instance . Also , animation frames will just be simply combined , so there should be a 1:1 correspondence between the frames from the different animations ."
matplotlib.animation.Animation.save,extra_args,"extra_args is a list of extra string arguments to be passed to the underlying movie utiltiy . The default is None , which passes the additional argurments in the ' animation.extra_args ' rcParam .|||extra_args is a list of extra string arguments to be passed to the underlying movie utiltiy ."
matplotlib.animation.Animation.save,filename,"filename is the output filename , e.g. , mymovie.mp4"
matplotlib.animation.Animation.save,fps,"fps is the frames per second in the movie .|||fps is the frames per second in the movie . Defaults to None , which will use the animation 's specified interval to set the frames per second ."
matplotlib.animation.Animation.save,metadata,"metadata is a dictionary of keys and values for metadata to include in the output file .|||metadata is a dictionary of keys and values for metadata to include in the output file . Some keys that may be of use include : title , artist , genre , subject , copyright , srcform , comment ."
matplotlib.animation.Animation.save,writer,"writer is either an instance of MovieWriter or a string key that identifies a class to use , such as ' ffmpeg ' or ' mencoder ' . If nothing is passed , the value of the rcparam animation.writer is used .|||writer is either an instance of MovieWriter or a string key that identifies a class to use , such as ' ffmpeg ' or ' mencoder ' ."
matplotlib.artist.Artist.add_callback,contains,Replace the contains test used by this artist .
matplotlib.artist.Artist.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.artist.Artist.add_callback,label,Set the label to s for auto legend .
matplotlib.artist.Artist.add_callback,picker,Set the epsilon for picking used by this artist
matplotlib.artist.Artist.add_callback,sketch_params,Sets the sketch parameters .
matplotlib.artist.Artist.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.artist.Artist.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.artist.Artist.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.artist.Artist.findobj,match,match can be
matplotlib.artist.Artist.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.artist.Artist.have_units,x,Return True if units are set on the x or y axes
matplotlib.artist.Artist.have_units,y,Return True if units are set on the x or y axes
matplotlib.artist.Artist.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.artist.Artist.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.artist.Artist.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.artist.Artist.remove_callback,id,Remove a callback based on its id .
matplotlib.artist.Artist.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.artist.Artist.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.artist.Artist.set_label,s,Set the label to s for auto legend .
matplotlib.artist.Artist.set_picker,picker,picker can be one of the following :
matplotlib.artist.Artist.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.artist.Artist.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.artist.Artist.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.artist.Artist.update,contains,Replace the contains test used by this artist .
matplotlib.artist.Artist.update,label,Set the label to s for auto legend .
matplotlib.artist.Artist.update,picker,Set the epsilon for picking used by this artist
matplotlib.artist.Artist.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.artist.Artist.update,sketch_params,Sets the sketch parameters .
matplotlib.artist.Artist.update_from,other,Copy properties from other to self .
matplotlib.artist.ArtistInspector.aliased_name,s,"return ' PROPNAME or alias ' if s has an alias , else return PROPNAME ."
matplotlib.artist.ArtistInspector.aliased_name_rest,s,"return ' PROPNAME or alias ' if s has an alias , else return PROPNAME formatted for ReST"
matplotlib.artist.ArtistInspector.findobj,match,"If match is not None , it can be"
matplotlib.artist.ArtistInspector.get_aliases,alias,Get a dict mapping fullname - > alias for each alias in the ArtistInspector .
matplotlib.artist.ArtistInspector.get_aliases,fullname,Get a dict mapping fullname - > alias for each alias in the ArtistInspector .
matplotlib.artist.ArtistInspector.get_valid_values,attr,Get the legal arguments for the setter associated with attr .
matplotlib.artist.ArtistInspector.get_valid_values,set_attr,This is done by querying the docstring of the function set_attr|||This is done by querying the docstring of the function set_attr for a line that begins with ACCEPTS :
matplotlib.artist.ArtistInspector.is_alias,o,Return True if method object o is an alias for another function .
matplotlib.artist.ArtistInspector.pprint_setters,prop,"If prop is None , return a list of strings of all settable properies and their valid values .|||If prop is not None , it is a valid property name and that property will be returned as a string of property : valid values ."
matplotlib.artist.ArtistInspector.pprint_setters_rest,prop,"If prop is None , return a list of strings of all settable properies and their valid values . Format the output for ReST|||If prop is None , return a list of strings of all settable properies and their valid values .|||If prop is not None , it is a valid property name and that property will be returned as a string of property : valid values ."
matplotlib.artist.get,anchor,anchor
matplotlib.artist.get,aspect,aspect
matplotlib.artist.get,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.artist.get,contains,Replace the contains test used by this artist .
matplotlib.artist.get,cursor_props,Set the cursor property as
matplotlib.artist.get,fontproperties,Set the font properties that control the text .
matplotlib.artist.get,label,Set the label to s for auto legend .
matplotlib.artist.get,obj,"obj is a Artist instance , e.g. , Line2D or an instance of a Axes or matplotlib.text.Text .|||obj is a Artist instance , e.g. , Line2D or an instance of a Axes or matplotlib.text.Text . If the property is ' somename ' , this function returns"
matplotlib.artist.get,picker,Set the epsilon for picking used by this artist
matplotlib.artist.get,position,"Set the axes position with|||Set the ( x , y ) position of the text"
matplotlib.artist.get,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.artist.get,property,"Return the value of object 's property . property is an optional string for the property you want to return|||obj is a Artist instance , e.g. , Line2D or an instance of a Axes or matplotlib.text.Text .|||obj is a Artist instance , e.g. , Line2D or an instance of a Axes or matplotlib.text.Text . If the property is ' somename ' , this function returns|||Return the value of object 's property ."
matplotlib.artist.get,rotation_mode,set text rotation mode .
matplotlib.artist.get,sketch_params,Sets the sketch parameters .
matplotlib.artist.get,text,Set the text string s
matplotlib.artist.get,title,Set a title for the axes .
matplotlib.artist.get,x,Set the x position of the text
matplotlib.artist.get,xlabel,Set the label for the xaxis .
matplotlib.artist.get,xlim,Set the data limits for the xaxis
matplotlib.artist.get,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.artist.get,xscale,Set the scaling of the x-axis
matplotlib.artist.get,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.artist.get,xticks,Set the x ticks with list of ticks
matplotlib.artist.get,y,Set the y position of the text
matplotlib.artist.get,ylabel,Set the label for the yaxis
matplotlib.artist.get,ylim,Set the data limits for the yaxis
matplotlib.artist.get,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.artist.get,yscale,Set the scaling of the y-axis
matplotlib.artist.get,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.artist.get,yticks,Set the y ticks with list of ticks
matplotlib.artist.getp,anchor,anchor
matplotlib.artist.getp,aspect,aspect
matplotlib.artist.getp,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.artist.getp,contains,Replace the contains test used by this artist .
matplotlib.artist.getp,cursor_props,Set the cursor property as
matplotlib.artist.getp,fontproperties,Set the font properties that control the text .
matplotlib.artist.getp,label,Set the label to s for auto legend .
matplotlib.artist.getp,obj,"obj is a Artist instance , e.g. , Line2D or an instance of a Axes or matplotlib.text.Text .|||obj is a Artist instance , e.g. , Line2D or an instance of a Axes or matplotlib.text.Text . If the property is ' somename ' , this function returns"
matplotlib.artist.getp,picker,Set the epsilon for picking used by this artist
matplotlib.artist.getp,position,"Set the axes position with|||Set the ( x , y ) position of the text"
matplotlib.artist.getp,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.artist.getp,property,"Return the value of object 's property . property is an optional string for the property you want to return|||obj is a Artist instance , e.g. , Line2D or an instance of a Axes or matplotlib.text.Text .|||obj is a Artist instance , e.g. , Line2D or an instance of a Axes or matplotlib.text.Text . If the property is ' somename ' , this function returns|||Return the value of object 's property ."
matplotlib.artist.getp,rotation_mode,set text rotation mode .
matplotlib.artist.getp,sketch_params,Sets the sketch parameters .
matplotlib.artist.getp,text,Set the text string s
matplotlib.artist.getp,title,Set a title for the axes .
matplotlib.artist.getp,x,Set the x position of the text
matplotlib.artist.getp,xlabel,Set the label for the xaxis .
matplotlib.artist.getp,xlim,Set the data limits for the xaxis
matplotlib.artist.getp,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.artist.getp,xscale,Set the scaling of the x-axis
matplotlib.artist.getp,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.artist.getp,xticks,Set the x ticks with list of ticks
matplotlib.artist.getp,y,Set the y position of the text
matplotlib.artist.getp,ylabel,Set the label for the yaxis
matplotlib.artist.getp,ylim,Set the data limits for the yaxis
matplotlib.artist.getp,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.artist.getp,yscale,Set the scaling of the y-axis
matplotlib.artist.getp,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.artist.getp,yticks,Set the y ticks with list of ticks
matplotlib.artist.setp,obj,"obj is a Artist instance , e.g. , Line2D or an instance of a Axes or matplotlib.text.Text .|||obj is a Artist instance , e.g. , Line2D or an instance of a Axes or matplotlib.text.Text . If the property is ' somename ' , this function returns"
matplotlib.artist.setp,property,"Return the value of object 's property . property is an optional string for the property you want to return|||obj is a Artist instance , e.g. , Line2D or an instance of a Axes or matplotlib.text.Text .|||obj is a Artist instance , e.g. , Line2D or an instance of a Axes or matplotlib.text.Text . If the property is ' somename ' , this function returns|||Return the value of object 's property ."
matplotlib.axes.Axes.acorr,detrend,x is detrended by the detrend callable . Default is no normalization .|||x is detrended by the detrend callable .
matplotlib.axes.Axes.acorr,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Only used if usevlines is False ."
matplotlib.axes.Axes.acorr,marker,Set the line marker
matplotlib.axes.Axes.acorr,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.acorr,maxlags,"number of lags to show . If None , will return all 2 * len(x ) - 1 lags .|||number of lags to show ."
matplotlib.axes.Axes.acorr,normed,"if True , normalize the data by the autocorrelation at the 0-th lag ."
matplotlib.axes.Axes.acorr,usevlines,"if True , Axes.vlines is used to plot the vertical lines from the origin to the acorr . Otherwise , Axes.plot is used .|||if True , Axes.vlines is used to plot the vertical lines from the origin to the acorr ."
matplotlib.axes.Axes.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.axes.Axes.add_patch,p,"Add a Patch p to the list of axes patches ; the clipbox will be set to the Axes clipping box .|||Add a Patch p to the list of axes patches ; the clipbox will be set to the Axes clipping box . If the transform is not set , it will be set to transData ."
matplotlib.axes.Axes.angle_spectrum,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.axes.Axes.angle_spectrum,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.angle_spectrum,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.angle_spectrum,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.angle_spectrum,anchor,anchor
matplotlib.axes.Axes.angle_spectrum,animated,Set the artist 's animation state .
matplotlib.axes.Axes.angle_spectrum,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.angle_spectrum,aspect,aspect
matplotlib.axes.Axes.angle_spectrum,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.angle_spectrum,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.angle_spectrum,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.angle_spectrum,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.angle_spectrum,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.angle_spectrum,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.angle_spectrum,color,Set the color of the line
matplotlib.axes.Axes.angle_spectrum,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.angle_spectrum,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.angle_spectrum,cursor_props,Set the cursor property as
matplotlib.axes.Axes.angle_spectrum,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.angle_spectrum,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.angle_spectrum,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.angle_spectrum,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.angle_spectrum,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.angle_spectrum,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.angle_spectrum,freqs,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.axes.Axes.angle_spectrum,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.angle_spectrum,hatch,Set the hatching pattern
matplotlib.axes.Axes.angle_spectrum,label,Set the label to s for auto legend .
matplotlib.axes.Axes.angle_spectrum,line,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.axes.Axes.angle_spectrum,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.angle_spectrum,linewidth,Set the line width in points
matplotlib.axes.Axes.angle_spectrum,marker,Set the line marker
matplotlib.axes.Axes.angle_spectrum,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.angle_spectrum,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.angle_spectrum,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.angle_spectrum,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.angle_spectrum,markersize,Set the marker size in points
matplotlib.axes.Axes.angle_spectrum,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.angle_spectrum,pad_to,Compute the angle spectrum ( wrapped phase spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the angle spectrum ( wrapped phase spectrum ) of x .
matplotlib.axes.Axes.angle_spectrum,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.angle_spectrum,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.angle_spectrum,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.angle_spectrum,position,Set the axes position with
matplotlib.axes.Axes.angle_spectrum,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.angle_spectrum,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.angle_spectrum,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.angle_spectrum,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.axes.Axes.angle_spectrum,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.angle_spectrum,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.angle_spectrum,snap,Sets the snap setting which may be
matplotlib.axes.Axes.angle_spectrum,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.angle_spectrum,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.angle_spectrum,spectrum,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.axes.Axes.angle_spectrum,title,Set a title for the axes .
matplotlib.axes.Axes.angle_spectrum,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.angle_spectrum,url,Sets the url for the artist
matplotlib.axes.Axes.angle_spectrum,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.angle_spectrum,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.angle_spectrum,window,"Compute the angle spectrum ( wrapped phase spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||A function or a vector of length NFFT .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment .|||Compute the angle spectrum ( wrapped phase spectrum ) of x ."
matplotlib.axes.Axes.angle_spectrum,x,Compute the angle spectrum ( wrapped phase spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the angle spectrum ( wrapped phase spectrum ) of x .
matplotlib.axes.Axes.angle_spectrum,xdata,Set the data np.array for x
matplotlib.axes.Axes.angle_spectrum,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.angle_spectrum,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.angle_spectrum,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.angle_spectrum,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.angle_spectrum,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.angle_spectrum,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.angle_spectrum,ydata,Set the data np.array for y
matplotlib.axes.Axes.angle_spectrum,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.angle_spectrum,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.angle_spectrum,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.angle_spectrum,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.angle_spectrum,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.angle_spectrum,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.angle_spectrum,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.annotate,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.annotate,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.annotate,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.annotate,anchor,anchor
matplotlib.axes.Axes.annotate,animated,Set the artist 's animation state .
matplotlib.axes.Axes.annotate,annotation_clip,"The annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area .|||The annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area . If True , the annotation will only be drawn when the xy is inside the axes . If False , the annotation will always be drawn regardless of its position . The default is None , which behave as True only if xycoords is "" data "" ."
matplotlib.axes.Axes.annotate,arrowprops,"arrowprops , if not None , is a dictionary of line properties ( see matplotlib.lines.Line2D ) for the arrow that connects annotation to the point .|||Dictionary of line properties for the arrow that connects the annotation to the point . If the dictionnary has a key arrowstyle , a FancyArrowPatch instance is created and drawn . See matplotlib.text.Annotation for more details on valid options . Default is None .|||Dictionary of line properties for the arrow that connects the annotation to the point ."
matplotlib.axes.Axes.annotate,arrowstyle,"If the dictionary has a key arrowstyle , a FancyArrowPatch instance is created with the given dictionary and is drawn .|||If the dictionary has a key arrowstyle , a FancyArrowPatch instance is created with the given dictionary and is drawn . Otherwise , a YAArrow patch instance is created and drawn . Valid keys for YAArrow are :"
matplotlib.axes.Axes.annotate,aspect,aspect
matplotlib.axes.Axes.annotate,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.annotate,backgroundcolor,Set the background color of the text by updating the bbox .
matplotlib.axes.Axes.annotate,bbox,Draw a bounding box around self .
matplotlib.axes.Axes.annotate,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.annotate,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.annotate,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.annotate,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.annotate,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.annotate,color,Set the foreground color of the text
matplotlib.axes.Axes.annotate,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.annotate,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.annotate,cursor_props,Set the cursor property as
matplotlib.axes.Axes.annotate,family,Set the font family .
matplotlib.axes.Axes.annotate,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.annotate,fontconfig_pattern,Set the properties by parsing a fontconfig pattern .
matplotlib.axes.Axes.annotate,fontproperties,Set the font properties that control the text .
matplotlib.axes.Axes.annotate,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.annotate,hatch,Set the hatching pattern
matplotlib.axes.Axes.annotate,horizontalalignment,Set the horizontal alignment to one of
matplotlib.axes.Axes.annotate,label,Set the label to s for auto legend .
matplotlib.axes.Axes.annotate,linespacing,Set the line spacing as a multiple of the font size .
matplotlib.axes.Axes.annotate,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.annotate,marker,Set the line marker
matplotlib.axes.Axes.annotate,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.annotate,multialignment,Set the alignment for multiple lines layout .
matplotlib.axes.Axes.annotate,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.annotate,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.annotate,position,"Set the axes position with|||Set the ( x , y ) position of the text"
matplotlib.axes.Axes.annotate,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.annotate,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.annotate,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.annotate,rotation,Set the rotation of the text
matplotlib.axes.Axes.annotate,rotation_mode,set text rotation mode .
matplotlib.axes.Axes.annotate,s,label
matplotlib.axes.Axes.annotate,size,Set the font size .
matplotlib.axes.Axes.annotate,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.annotate,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.annotate,snap,Sets the snap setting which may be
matplotlib.axes.Axes.annotate,stretch,Set the font stretch ( horizontal condensation or expansion ) .
matplotlib.axes.Axes.annotate,style,Set the font style .
matplotlib.axes.Axes.annotate,text,Set the text string s
matplotlib.axes.Axes.annotate,textcoords,"xycoords and textcoords are strings that indicate the coordinates of xy and xytext , and may be one of the following values :|||string that indicates what type of coordinates text is . Examples : "" figure points "" , "" figure pixels "" , "" figure fraction "" , "" axes points "" , ... See matplotlib.text.Annotation for more details .|||string that indicates what type of coordinates text is ."
matplotlib.axes.Axes.annotate,title,Set a title for the axes .
matplotlib.axes.Axes.annotate,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.annotate,url,Sets the url for the artist
matplotlib.axes.Axes.annotate,usetex,Set this Text object to render using TeX ( or not ) .
matplotlib.axes.Axes.annotate,variant,"Set the font variant , either ' normal ' or ' small-caps ' ."
matplotlib.axes.Axes.annotate,verticalalignment,Set the vertical alignment
matplotlib.axes.Axes.annotate,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.annotate,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.annotate,weight,Set the font weight .
matplotlib.axes.Axes.annotate,wrap,Sets the wrapping state for the text .
matplotlib.axes.Axes.annotate,x,Set the x position of the text
matplotlib.axes.Axes.annotate,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.annotate,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.annotate,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.annotate,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.annotate,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.annotate,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.annotate,xy,"The annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area .|||The annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area . If True , the annotation will only be drawn when the xy is inside the axes . If False , the annotation will always be drawn regardless of its position . The default is None , which behave as True only if xycoords is "" data "" .|||position of element to annotate . See xycoords to control what coordinate system this value is interpretated in .|||xycoords and textcoords are strings that indicate the coordinates of xy and xytext , and may be one of the following values :|||position of element to annotate ."
matplotlib.axes.Axes.annotate,xycoords,"The annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area .|||The annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area . If True , the annotation will only be drawn when the xy is inside the axes . If False , the annotation will always be drawn regardless of its position . The default is None , which behave as True only if xycoords is "" data "" .|||xycoords and textcoords are strings that indicate the coordinates of xy and xytext , and may be one of the following values :|||string that indicates what type of coordinates xy is .|||string that indicates what type of coordinates xy is . Examples : "" figure points "" , "" figure pixels "" , "" figure fraction "" , "" axes points "" , ... See matplotlib.text.Annotation for more details ."
matplotlib.axes.Axes.annotate,xytext,"position of the label s. See textcoords to control what coordinate system this value is interpreted in .|||xycoords and textcoords are strings that indicate the coordinates of xy and xytext , and may be one of the following values :"
matplotlib.axes.Axes.annotate,y,Set the y position of the text
matplotlib.axes.Axes.annotate,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.annotate,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.annotate,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.annotate,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.annotate,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.annotate,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.annotate,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.arrow,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.arrow,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.arrow,alpha,Set the alpha tranparency of the patch .
matplotlib.axes.Axes.arrow,anchor,anchor
matplotlib.axes.Axes.arrow,animated,Set the artist 's animation state .
matplotlib.axes.Axes.arrow,antialiased,Set whether to use antialiased rendering
matplotlib.axes.Axes.arrow,aspect,aspect
matplotlib.axes.Axes.arrow,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.arrow,capstyle,Set the patch capstyle
matplotlib.axes.Axes.arrow,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.arrow,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.arrow,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.arrow,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.arrow,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.arrow,color,Set both the edgecolor and the facecolor .
matplotlib.axes.Axes.arrow,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.arrow,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.arrow,cursor_props,Set the cursor property as
matplotlib.axes.Axes.arrow,dx,"Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) .|||Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) . Uses FancyArrow patch to construct the arrow ."
matplotlib.axes.Axes.arrow,dy,"Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) .|||Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) . Uses FancyArrow patch to construct the arrow ."
matplotlib.axes.Axes.arrow,edgecolor,Set the patch edge color
matplotlib.axes.Axes.arrow,facecolor,Set the patch face color
matplotlib.axes.Axes.arrow,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.arrow,fill,Set whether to fill the patch
matplotlib.axes.Axes.arrow,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.arrow,hatch,Set the hatching pattern
matplotlib.axes.Axes.arrow,joinstyle,Set the patch joinstyle
matplotlib.axes.Axes.arrow,label,Set the label to s for auto legend .
matplotlib.axes.Axes.arrow,linestyle,Set the patch linestyle
matplotlib.axes.Axes.arrow,linewidth,Set the patch linewidth in points
matplotlib.axes.Axes.arrow,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.arrow,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.arrow,position,Set the axes position with
matplotlib.axes.Axes.arrow,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.arrow,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.arrow,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.arrow,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.arrow,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.arrow,snap,Sets the snap setting which may be
matplotlib.axes.Axes.arrow,title,Set a title for the axes .
matplotlib.axes.Axes.arrow,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.arrow,url,Sets the url for the artist
matplotlib.axes.Axes.arrow,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.arrow,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.arrow,x,"Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) .|||Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) . Uses FancyArrow patch to construct the arrow ."
matplotlib.axes.Axes.arrow,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.arrow,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.arrow,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.arrow,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.arrow,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.arrow,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.arrow,y,"Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) .|||Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) . Uses FancyArrow patch to construct the arrow ."
matplotlib.axes.Axes.arrow,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.arrow,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.arrow,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.arrow,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.arrow,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.arrow,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.arrow,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.autoscale_view,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||Autoscale the view limits using the data limits ."
matplotlib.axes.Axes.axhline,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.axhline,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.axhline,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.axhline,anchor,anchor
matplotlib.axes.Axes.axhline,animated,Set the artist 's animation state .
matplotlib.axes.Axes.axhline,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.axhline,aspect,aspect
matplotlib.axes.Axes.axhline,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.axhline,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.axhline,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.axhline,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.axhline,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.axhline,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.axhline,color,Set the color of the line
matplotlib.axes.Axes.axhline,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.axhline,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.axhline,cursor_props,Set the cursor property as
matplotlib.axes.Axes.axhline,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.axhline,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.axhline,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.axhline,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.axhline,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.axhline,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.axhline,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.axhline,hatch,Set the hatching pattern
matplotlib.axes.Axes.axhline,label,Set the label to s for auto legend .
matplotlib.axes.Axes.axhline,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.axhline,linewidth,Set the line width in points
matplotlib.axes.Axes.axhline,marker,Set the line marker
matplotlib.axes.Axes.axhline,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.axhline,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.axhline,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.axhline,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.axhline,markersize,Set the marker size in points
matplotlib.axes.Axes.axhline,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.axhline,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.axhline,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.axhline,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.axhline,position,Set the axes position with
matplotlib.axes.Axes.axhline,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.axhline,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.axhline,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.axhline,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.axhline,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.axhline,snap,Sets the snap setting which may be
matplotlib.axes.Axes.axhline,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.axhline,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.axhline,title,Set a title for the axes .
matplotlib.axes.Axes.axhline,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.axhline,url,Sets the url for the artist
matplotlib.axes.Axes.axhline,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.axhline,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.axhline,xdata,Set the data np.array for x
matplotlib.axes.Axes.axhline,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.axhline,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.axhline,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.axhline,xmax,"Should be between 0 and 1 , 0 being the far left of the plot , 1 the far right of the plot ."
matplotlib.axes.Axes.axhline,xmin,"Should be between 0 and 1 , 0 being the far left of the plot , 1 the far right of the plot ."
matplotlib.axes.Axes.axhline,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.axhline,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.axhline,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.axhline,y,y position in data coordinates of the horizontal line .
matplotlib.axes.Axes.axhline,ydata,Set the data np.array for y
matplotlib.axes.Axes.axhline,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.axhline,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.axhline,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.axhline,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.axhline,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.axhline,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.axhline,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.axhspan,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.axhspan,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.axhspan,alpha,Set the alpha tranparency of the patch .
matplotlib.axes.Axes.axhspan,anchor,anchor
matplotlib.axes.Axes.axhspan,animated,Set the artist 's animation state .
matplotlib.axes.Axes.axhspan,antialiased,Set whether to use antialiased rendering
matplotlib.axes.Axes.axhspan,aspect,aspect
matplotlib.axes.Axes.axhspan,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.axhspan,capstyle,Set the patch capstyle
matplotlib.axes.Axes.axhspan,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.axhspan,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.axhspan,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.axhspan,closed,"Set if the polygon is closed|||If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.axhspan,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.axhspan,color,Set both the edgecolor and the facecolor .
matplotlib.axes.Axes.axhspan,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.axhspan,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.axhspan,cursor_props,Set the cursor property as
matplotlib.axes.Axes.axhspan,edgecolor,Set the patch edge color
matplotlib.axes.Axes.axhspan,facecolor,Set the patch face color
matplotlib.axes.Axes.axhspan,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.axhspan,fill,Set whether to fill the patch
matplotlib.axes.Axes.axhspan,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.axhspan,hatch,Set the hatching pattern
matplotlib.axes.Axes.axhspan,joinstyle,Set the patch joinstyle
matplotlib.axes.Axes.axhspan,label,Set the label to s for auto legend .
matplotlib.axes.Axes.axhspan,linestyle,Set the patch linestyle
matplotlib.axes.Axes.axhspan,linewidth,Set the patch linewidth in points
matplotlib.axes.Axes.axhspan,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.axhspan,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.axhspan,position,Set the axes position with
matplotlib.axes.Axes.axhspan,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.axhspan,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.axhspan,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.axhspan,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.axhspan,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.axhspan,snap,Sets the snap setting which may be
matplotlib.axes.Axes.axhspan,title,Set a title for the axes .
matplotlib.axes.Axes.axhspan,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.axhspan,url,Sets the url for the artist
matplotlib.axes.Axes.axhspan,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.axhspan,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.axhspan,x,y coords are in data units and x coords are in axes ( relative 0-1 ) units .
matplotlib.axes.Axes.axhspan,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.axhspan,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.axhspan,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.axhspan,xmax,"Draw a horizontal span ( rectangle ) from ymin to ymax . With the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . That is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .|||Draw a horizontal span ( rectangle ) from ymin to ymax ."
matplotlib.axes.Axes.axhspan,xmin,"Draw a horizontal span ( rectangle ) from ymin to ymax . With the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . That is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .|||Draw a horizontal span ( rectangle ) from ymin to ymax ."
matplotlib.axes.Axes.axhspan,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.axhspan,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.axhspan,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.axhspan,xy,Set the vertices of the polygon
matplotlib.axes.Axes.axhspan,y,"Draw a horizontal span ( rectangle ) from ymin to ymax . With the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . That is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .|||Draw a horizontal span ( rectangle ) from ymin to ymax .|||y coords are in data units and x coords are in axes ( relative 0-1 ) units ."
matplotlib.axes.Axes.axhspan,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.axhspan,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.axhspan,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.axhspan,ymax,"Draw a horizontal span ( rectangle ) from ymin to ymax . With the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . That is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .|||Draw a horizontal span ( rectangle ) from ymin to ymax ."
matplotlib.axes.Axes.axhspan,ymin,"Draw a horizontal span ( rectangle ) from ymin to ymax . With the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . That is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .|||Draw a horizontal span ( rectangle ) from ymin to ymax ."
matplotlib.axes.Axes.axhspan,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.axhspan,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.axhspan,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.axhspan,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.axis,emit,"Passed to set_{x,y}lim functions , if observers are notified of axis limit change"
matplotlib.axes.Axes.axis,v,Optional positional argument
matplotlib.axes.Axes.axis,"xmin, ymin, xmax, ymax",The axis limits to be set
matplotlib.axes.Axes.axvline,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.axvline,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.axvline,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.axvline,anchor,anchor
matplotlib.axes.Axes.axvline,animated,Set the artist 's animation state .
matplotlib.axes.Axes.axvline,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.axvline,aspect,aspect
matplotlib.axes.Axes.axvline,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.axvline,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.axvline,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.axvline,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.axvline,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.axvline,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.axvline,color,Set the color of the line
matplotlib.axes.Axes.axvline,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.axvline,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.axvline,cursor_props,Set the cursor property as
matplotlib.axes.Axes.axvline,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.axvline,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.axvline,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.axvline,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.axvline,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.axvline,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.axvline,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.axvline,hatch,Set the hatching pattern
matplotlib.axes.Axes.axvline,label,Set the label to s for auto legend .
matplotlib.axes.Axes.axvline,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.axvline,linewidth,Set the line width in points
matplotlib.axes.Axes.axvline,marker,Set the line marker
matplotlib.axes.Axes.axvline,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.axvline,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.axvline,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.axvline,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.axvline,markersize,Set the marker size in points
matplotlib.axes.Axes.axvline,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.axvline,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.axvline,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.axvline,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.axvline,position,Set the axes position with
matplotlib.axes.Axes.axvline,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.axvline,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.axvline,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.axvline,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.axvline,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.axvline,snap,Sets the snap setting which may be
matplotlib.axes.Axes.axvline,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.axvline,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.axvline,title,Set a title for the axes .
matplotlib.axes.Axes.axvline,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.axvline,url,Sets the url for the artist
matplotlib.axes.Axes.axvline,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.axvline,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.axvline,x,x position in data coordinates of the vertical line .
matplotlib.axes.Axes.axvline,xdata,Set the data np.array for x
matplotlib.axes.Axes.axvline,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.axvline,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.axvline,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.axvline,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.axvline,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.axvline,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.axvline,ydata,Set the data np.array for y
matplotlib.axes.Axes.axvline,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.axvline,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.axvline,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.axvline,ymax,"Should be between 0 and 1 , 0 being the bottom of the plot , 1 the top of the plot ."
matplotlib.axes.Axes.axvline,ymin,"Should be between 0 and 1 , 0 being the bottom of the plot , 1 the top of the plot ."
matplotlib.axes.Axes.axvline,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.axvline,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.axvline,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.axvline,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.axvspan,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.axvspan,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.axvspan,alpha,Set the alpha tranparency of the patch .
matplotlib.axes.Axes.axvspan,anchor,anchor
matplotlib.axes.Axes.axvspan,animated,Set the artist 's animation state .
matplotlib.axes.Axes.axvspan,antialiased,Set whether to use antialiased rendering
matplotlib.axes.Axes.axvspan,aspect,aspect
matplotlib.axes.Axes.axvspan,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.axvspan,capstyle,Set the patch capstyle
matplotlib.axes.Axes.axvspan,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.axvspan,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.axvspan,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.axvspan,closed,"Set if the polygon is closed|||If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.axvspan,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.axvspan,color,Set both the edgecolor and the facecolor .
matplotlib.axes.Axes.axvspan,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.axvspan,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.axvspan,cursor_props,Set the cursor property as
matplotlib.axes.Axes.axvspan,edgecolor,Set the patch edge color
matplotlib.axes.Axes.axvspan,facecolor,Set the patch face color
matplotlib.axes.Axes.axvspan,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.axvspan,fill,Set whether to fill the patch
matplotlib.axes.Axes.axvspan,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.axvspan,hatch,Set the hatching pattern
matplotlib.axes.Axes.axvspan,joinstyle,Set the patch joinstyle
matplotlib.axes.Axes.axvspan,label,Set the label to s for auto legend .
matplotlib.axes.Axes.axvspan,linestyle,Set the patch linestyle
matplotlib.axes.Axes.axvspan,linewidth,Set the patch linewidth in points
matplotlib.axes.Axes.axvspan,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.axvspan,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.axvspan,position,Set the axes position with
matplotlib.axes.Axes.axvspan,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.axvspan,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.axvspan,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.axvspan,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.axvspan,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.axvspan,snap,Sets the snap setting which may be
matplotlib.axes.Axes.axvspan,title,Set a title for the axes .
matplotlib.axes.Axes.axvspan,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.axvspan,url,Sets the url for the artist
matplotlib.axes.Axes.axvspan,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.axvspan,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.axvspan,x,x coords are in data units and y coords are in axes ( relative 0-1 ) units .
matplotlib.axes.Axes.axvspan,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.axvspan,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.axvspan,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.axvspan,xmax,"Draw a vertical span ( rectangle ) from xmin to xmax .|||Draw a vertical span ( rectangle ) from xmin to xmax . With the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . That is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates ."
matplotlib.axes.Axes.axvspan,xmin,"Draw a vertical span ( rectangle ) from xmin to xmax .|||Draw a vertical span ( rectangle ) from xmin to xmax . With the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . That is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates ."
matplotlib.axes.Axes.axvspan,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.axvspan,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.axvspan,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.axvspan,xy,Set the vertices of the polygon
matplotlib.axes.Axes.axvspan,y,"x coords are in data units and y coords are in axes ( relative 0-1 ) units .|||Draw a vertical span ( rectangle ) from xmin to xmax .|||Draw a vertical span ( rectangle ) from xmin to xmax . With the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . That is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates ."
matplotlib.axes.Axes.axvspan,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.axvspan,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.axvspan,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.axvspan,ymax,"Draw a vertical span ( rectangle ) from xmin to xmax .|||Draw a vertical span ( rectangle ) from xmin to xmax . With the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . That is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates ."
matplotlib.axes.Axes.axvspan,ymin,"Draw a vertical span ( rectangle ) from xmin to xmax .|||Draw a vertical span ( rectangle ) from xmin to xmax . With the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . That is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates ."
matplotlib.axes.Axes.axvspan,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.axvspan,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.axvspan,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.axvspan,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.bar,align,"If ' edge ' , aligns bars by their left edges ( for vertical bars ) and by their bottom edges ( for horizontal bars ) . If ' center ' , interpret the left argument as the coordinates of the centers of the bars . To align on the align bars on the right edge pass a negative width .|||If ' edge ' , aligns bars by their left edges ( for vertical bars ) and by their bottom edges ( for horizontal bars ) ."
matplotlib.axes.Axes.bar,bottom,the y coordinate(s ) of the bars default : None
matplotlib.axes.Axes.bar,capsize,"determines the length in points of the error bar caps default : None , which will take the value from the errorbar.capsize rcParam ."
matplotlib.axes.Axes.bar,color,the colors of the bar faces
matplotlib.axes.Axes.bar,ecolor,specifies the color of errorbar(s ) default : None
matplotlib.axes.Axes.bar,edgecolor,the colors of the bar edges
matplotlib.axes.Axes.bar,error_kw,dictionary of kwargs to be passed to errorbar method . ecolor and capsize may be specified here rather than as independent kwargs .|||dictionary of kwargs to be passed to errorbar method .
matplotlib.axes.Axes.bar,height,the heights of the bars
matplotlib.axes.Axes.bar,left,the x coordinates of the left sides of the bars
matplotlib.axes.Axes.bar,linewidth,"width of bar edge(s ) . If None , use default linewidth ; If 0 , do n't draw edges . default : None|||width of bar edge(s ) ."
matplotlib.axes.Axes.bar,log,"If true , sets the axis to be log scale . default : False|||If true , sets the axis to be log scale ."
matplotlib.axes.Axes.bar,orientation,The orientation of the bars .
matplotlib.axes.Axes.bar,tick_label,the tick labels of the bars default : None
matplotlib.axes.Axes.bar,width,the width(s ) of the bars default : 0.8
matplotlib.axes.Axes.bar,xerr,"if not None , will be used to generate errorbar(s ) on the bar chart default : None"
matplotlib.axes.Axes.bar,yerr,"if not None , will be used to generate errorbar(s ) on the bar chart default : None"
matplotlib.axes.Axes.barbs,C,"U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.axes.Axes.barbs,U,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.axes.Axes.barbs,V,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.axes.Axes.barbs,X,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.axes.Axes.barbs,Y,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.axes.Axes.barbs,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.barbs,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.barbs,alpha,Set the alpha tranparencies of the collection .
matplotlib.axes.Axes.barbs,anchor,anchor
matplotlib.axes.Axes.barbs,animated,Set the artist 's animation state .
matplotlib.axes.Axes.barbs,antialiased,Set the antialiasing state for rendering .
matplotlib.axes.Axes.barbs,array,Set the image array from numpy array A
matplotlib.axes.Axes.barbs,aspect,aspect
matplotlib.axes.Axes.barbs,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.barbs,barb_increments,A dictionary of increments specifying values to associate with different parts of the barb .|||A dictionary of increments specifying values to associate with different parts of the barb . Only those values one wishes to override need to be included . ' half ' - half barbs ( Default is 5 ) ' full ' - full barbs ( Default is 10 ) ' flag ' - flags ( default is 50 )
matplotlib.axes.Axes.barbs,barbcolor,"Specifies the color all parts of the barb except any flags . This parameter is analagous to the edgecolor parameter for polygons , which can be used instead . However this parameter will override facecolor .|||Specifies the color all parts of the barb except any flags ."
matplotlib.axes.Axes.barbs,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.axes.Axes.barbs,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.barbs,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.barbs,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.barbs,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.barbs,cmap,set the colormap for luminance data
matplotlib.axes.Axes.barbs,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.barbs,color,Set both the edgecolor and the facecolor .
matplotlib.axes.Axes.barbs,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.barbs,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.barbs,cursor_props,Set the cursor property as
matplotlib.axes.Axes.barbs,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.axes.Axes.barbs,facecolor,Set the facecolor(s ) of the collection .
matplotlib.axes.Axes.barbs,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.barbs,fill_empty,"A flag on whether the empty barbs ( circles ) that are drawn should be filled with the flag color . If they are not filled , they will be drawn such that no color is applied to the center . Default is False|||A flag on whether the empty barbs ( circles ) that are drawn should be filled with the flag color ."
matplotlib.axes.Axes.barbs,flagcolor,"Specifies the color of any flags on the barb .|||Specifies the color of any flags on the barb . This parameter is analagous to the facecolor parameter for polygons , which can be used instead . However this parameter will override facecolor . If this is not set ( and C has not either ) then flagcolor will be set to match barbcolor so that the barb has a uniform color . If C has been set , flagcolor has no effect ."
matplotlib.axes.Axes.barbs,flip_barb,Either a single boolean flag or an array of booleans .|||Either a single boolean flag or an array of booleans . Single boolean indicates whether the lines and flags should point opposite to normal for all barbs . An array ( which should be the same size as the other data arrays ) indicates whether to flip for each individual barb . Normal behavior is for the barbs and lines to point right ( comes from wind barbs having these features point towards low pressure in the Northern Hemisphere . ) Default is False
matplotlib.axes.Axes.barbs,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.barbs,hatch,Set the hatching pattern
matplotlib.axes.Axes.barbs,label,Set the label to s for auto legend .
matplotlib.axes.Axes.barbs,length,Length of the barb in points ; the other parts of the barb are scaled against this .|||Length of the barb in points ; the other parts of the barb are scaled against this . Default is 9
matplotlib.axes.Axes.barbs,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.axes.Axes.barbs,linewidth,Set the linewidth(s ) for the collection .
matplotlib.axes.Axes.barbs,norm,set the normalization instance
matplotlib.axes.Axes.barbs,offset_position,Set how offsets are applied .
matplotlib.axes.Axes.barbs,offsets,Set the offsets for the collection .
matplotlib.axes.Axes.barbs,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.barbs,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.barbs,pivot,"The part of the arrow that is at the grid point ; the arrow rotates about this point , hence the name pivot . Default is ' tip '|||The part of the arrow that is at the grid point ; the arrow rotates about this point , hence the name pivot ."
matplotlib.axes.Axes.barbs,position,Set the axes position with
matplotlib.axes.Axes.barbs,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.barbs,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.barbs,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.barbs,rounding,"A flag to indicate whether the vector magnitude should be rounded when allocating barb components .|||A flag to indicate whether the vector magnitude should be rounded when allocating barb components . If True , the magnitude is rounded to the nearest multiple of the half-barb increment . If False , the magnitude is simply truncated to the next lowest multiple . Default is True"
matplotlib.axes.Axes.barbs,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.barbs,sizes,"A dictionary of coefficients specifying the ratio of a given feature to the length of the barb .|||A dictionary of coefficients specifying the ratio of a given feature to the length of the barb . Only those values one wishes to override need to be included . These features include : ' spacing ' - space between features ( flags , full/half barbs ) ' height ' - height ( distance from shaft to top ) of a flag or full barb ' width ' - width of a flag , twice the width of a full barb ' emptybarb ' - radius of the circle used for low magnitudes|||Set the sizes of each member of the collection ."
matplotlib.axes.Axes.barbs,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.barbs,snap,Sets the snap setting which may be
matplotlib.axes.Axes.barbs,title,Set a title for the axes .
matplotlib.axes.Axes.barbs,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.barbs,url,Sets the url for the artist
matplotlib.axes.Axes.barbs,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.barbs,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.barbs,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.barbs,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.barbs,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.barbs,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.barbs,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.barbs,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.barbs,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.barbs,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.barbs,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.barbs,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.barbs,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.barbs,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.barbs,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.barh,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.barh,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.barh,align,"If edge , aligns bars by their left edges ( for vertical bars ) and by their bottom edges ( for horizontal bars ) .|||If edge , aligns bars by their left edges ( for vertical bars ) and by their bottom edges ( for horizontal bars ) . If center , interpret the left argument as the coordinates of the centers of the bars ."
matplotlib.axes.Axes.barh,alpha,Set the alpha tranparency of the patch .
matplotlib.axes.Axes.barh,anchor,anchor
matplotlib.axes.Axes.barh,animated,Set the artist 's animation state .
matplotlib.axes.Axes.barh,antialiased,Set whether to use antialiased rendering
matplotlib.axes.Axes.barh,aspect,aspect
matplotlib.axes.Axes.barh,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.barh,bottom,the y coordinate(s ) of the bars
matplotlib.axes.Axes.barh,capsize,"determines the length in points of the error bar caps default : None , which will take the value from the errorbar.capsize rcParam ."
matplotlib.axes.Axes.barh,capstyle,Set the patch capstyle
matplotlib.axes.Axes.barh,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.barh,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.barh,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.barh,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.barh,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.barh,color,the colors of the bars|||Set both the edgecolor and the facecolor .
matplotlib.axes.Axes.barh,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.barh,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.barh,cursor_props,Set the cursor property as
matplotlib.axes.Axes.barh,ecolor,specifies the color of errorbar(s )
matplotlib.axes.Axes.barh,edgecolor,Set the patch edge color|||the colors of the bar edges
matplotlib.axes.Axes.barh,error_kw :,dictionary of kwargs to be passed to errorbar method . ecolor and capsize may be specified here rather than as independent kwargs .|||dictionary of kwargs to be passed to errorbar method .
matplotlib.axes.Axes.barh,facecolor,Set the patch face color
matplotlib.axes.Axes.barh,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.barh,fill,Set whether to fill the patch
matplotlib.axes.Axes.barh,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.barh,hatch,Set the hatching pattern
matplotlib.axes.Axes.barh,height,the heights of the bars
matplotlib.axes.Axes.barh,joinstyle,Set the patch joinstyle
matplotlib.axes.Axes.barh,label,Set the label to s for auto legend .
matplotlib.axes.Axes.barh,left,the x coordinates of the left sides of the bars
matplotlib.axes.Axes.barh,linestyle,Set the patch linestyle
matplotlib.axes.Axes.barh,linewidth,"width of bar edge(s ) .|||width of bar edge(s ) . If None , use default linewidth ; If 0 , do n't draw edges .|||Set the patch linewidth in points"
matplotlib.axes.Axes.barh,log,"If true , sets the axis to be log scale"
matplotlib.axes.Axes.barh,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.barh,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.barh,position,Set the axes position with
matplotlib.axes.Axes.barh,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.barh,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.barh,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.barh,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.barh,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.barh,snap,Sets the snap setting which may be
matplotlib.axes.Axes.barh,tick_label,the tick labels of the bars
matplotlib.axes.Axes.barh,title,Set a title for the axes .
matplotlib.axes.Axes.barh,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.barh,url,Sets the url for the artist
matplotlib.axes.Axes.barh,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.barh,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.barh,width,the width(s ) of the bars
matplotlib.axes.Axes.barh,xerr,"if not None , will be used to generate errorbar(s ) on the bar chart"
matplotlib.axes.Axes.barh,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.barh,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.barh,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.barh,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.barh,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.barh,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.barh,yerr,"if not None , will be used to generate errorbar(s ) on the bar chart"
matplotlib.axes.Axes.barh,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.barh,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.barh,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.barh,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.barh,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.barh,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.barh,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.boxplot,bootstrap,"Specifies whether to bootstrap the confidence intervals around the median for notched boxplots . If bootstrap==None , no bootstrapping is performed , and notches are calculated using a Gaussian-based asymptotic approximation ( see McGill , R. , Tukey , J.W. , and Larsen , W.A. , 1978 , and Kendall and Stuart , 1967 ) . Otherwise , bootstrap specifies the number of times to bootstrap the median to determine it 's 95% confidence intervals . Values between 1000 and 10000 are recommended .|||Specifies whether to bootstrap the confidence intervals around the median for notched boxplots ."
matplotlib.axes.Axes.boxplot,boxprops,"If provided , will set the plotting style of the boxes"
matplotlib.axes.Axes.boxplot,capprops,"If provided , will set the plotting style of the caps"
matplotlib.axes.Axes.boxplot,conf_intervals,"Array or sequence whose first dimension ( or length ) is compatible with x and whose second dimension is 2 .|||Array or sequence whose first dimension ( or length ) is compatible with x and whose second dimension is 2 . When the current element of conf_intervals is not None , the notch locations computed by matplotlib are overridden ( assuming notch is True ) . When an element of conf_intervals is None , boxplot compute notches the method specified by the other kwargs ( e.g. , bootstrap ) ."
matplotlib.axes.Axes.boxplot,flierprops,"If provided , will set the plotting style of the fliers"
matplotlib.axes.Axes.boxplot,labels,Labels for each dataset . Length must be compatible with dimensions of x|||Labels for each dataset .
matplotlib.axes.Axes.boxplot,manage_xticks,If the function should adjust the xlim and xtick locations .
matplotlib.axes.Axes.boxplot,meanline,"If True ( and showmeans is True ) , will try to render the mean as a line spanning the full width of the box according to meanprops . Not recommended if shownotches is also True . Otherwise , means will be shown as points .|||If True ( and showmeans is True ) , will try to render the mean as a line spanning the full width of the box according to meanprops ."
matplotlib.axes.Axes.boxplot,meanprops,"If provided , will set the plotting style of the means"
matplotlib.axes.Axes.boxplot,medianprops,"If provided , will set the plotting style of the medians"
matplotlib.axes.Axes.boxplot,notch,"If False , produces a rectangular box plot .|||If False , produces a rectangular box plot . If True , will produce a notched box plot"
matplotlib.axes.Axes.boxplot,patch_artist,If False produces boxes with the Line2D artist If True produces boxes with the Patch artist
matplotlib.axes.Axes.boxplot,positions,Sets the positions of the boxes .|||Sets the positions of the boxes . The ticks and limits are automatically set to match the positions .
matplotlib.axes.Axes.boxplot,showbox,"If True , will toggle one the rendering of box"
matplotlib.axes.Axes.boxplot,showcaps,"If True , will toggle one the rendering of the caps"
matplotlib.axes.Axes.boxplot,showfliers,"If True , will toggle one the rendering of the fliers"
matplotlib.axes.Axes.boxplot,showmeans,"If True , will toggle one the rendering of the means"
matplotlib.axes.Axes.boxplot,sym,"The default symbol for flier points .|||The default symbol for flier points . Enter an empty string ( ' ' ) if you do n't want to show fliers . If None , then the fliers default to ' b + ' If you want more control use the flierprops kwarg ."
matplotlib.axes.Axes.boxplot,usermedians,"An array or sequence whose first dimension ( or length ) is compatible with x .|||An array or sequence whose first dimension ( or length ) is compatible with x . This overrides the medians computed by matplotlib for each element of usermedians that is not None . When an element of usermedians = = None , the median will be computed by matplotlib as normal ."
matplotlib.axes.Axes.boxplot,vert,"If True ( default ) , makes the boxes vertical .|||If True ( default ) , makes the boxes vertical . If False , makes horizontal boxes ."
matplotlib.axes.Axes.boxplot,whis,"As a float , determines the reach of the whiskers past the first and third quartiles ( e.g. , Q3 + whis*IQR , IQR = interquartile range , Q3-Q1 ) . Beyond the whiskers , data are considered outliers and are plotted as individual points . Set this to an unreasonably high value to force the whiskers to show the min and max values . Alternatively , set this to an ascending sequence of percentile ( e.g. , [ 5 , 95 ] ) to set the whiskers at specific percentiles of the data . Finally , whis can be the string ' range ' to force the whiskers to the min and max of the data . In the edge case that the 25th and 75th percentiles are equivalent , whis will be automatically set to ' range ' .|||As a float , determines the reach of the whiskers past the first and third quartiles ( e.g. , Q3 + whis*IQR , IQR = interquartile range , Q3-Q1 ) ."
matplotlib.axes.Axes.boxplot,whiskerprops,"If provided , will set the plotting style of the whiskers"
matplotlib.axes.Axes.boxplot,widths,"Either a scalar or a vector and sets the width of each box . The default is 0.5 , or 0.15*(distance between extreme positions ) if that is smaller .|||Either a scalar or a vector and sets the width of each box ."
matplotlib.axes.Axes.boxplot,x,"The input data .|||Make a box and whisker plot for each column of x or each vector in sequence x .|||Make a box and whisker plot for each column of x or each vector in sequence x . The box extends from the lower to upper quartile values of the data , with a line at the median . The whiskers extend from the box to show the range of the data . Flier points are those past the end of the whiskers ."
matplotlib.axes.Axes.broken_barh,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.broken_barh,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.broken_barh,alpha,Set the alpha tranparencies of the collection .
matplotlib.axes.Axes.broken_barh,anchor,anchor
matplotlib.axes.Axes.broken_barh,animated,Set the artist 's animation state .
matplotlib.axes.Axes.broken_barh,antialiased,Set the antialiasing state for rendering .
matplotlib.axes.Axes.broken_barh,array,Set the image array from numpy array A
matplotlib.axes.Axes.broken_barh,aspect,aspect
matplotlib.axes.Axes.broken_barh,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.broken_barh,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.axes.Axes.broken_barh,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.broken_barh,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.broken_barh,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.broken_barh,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.broken_barh,cmap,set the colormap for luminance data
matplotlib.axes.Axes.broken_barh,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.broken_barh,color,Set both the edgecolor and the facecolor .
matplotlib.axes.Axes.broken_barh,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.broken_barh,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.broken_barh,cursor_props,Set the cursor property as
matplotlib.axes.Axes.broken_barh,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.axes.Axes.broken_barh,facecolor,Set the facecolor(s ) of the collection .
matplotlib.axes.Axes.broken_barh,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.broken_barh,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.broken_barh,hatch,Set the hatching pattern
matplotlib.axes.Axes.broken_barh,label,Set the label to s for auto legend .
matplotlib.axes.Axes.broken_barh,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.axes.Axes.broken_barh,linewidth,Set the linewidth(s ) for the collection .
matplotlib.axes.Axes.broken_barh,norm,set the normalization instance
matplotlib.axes.Axes.broken_barh,offset_position,Set how offsets are applied .
matplotlib.axes.Axes.broken_barh,offsets,Set the offsets for the collection .
matplotlib.axes.Axes.broken_barh,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.broken_barh,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.broken_barh,position,Set the axes position with
matplotlib.axes.Axes.broken_barh,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.broken_barh,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.broken_barh,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.broken_barh,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.broken_barh,sizes,Set the sizes of each member of the collection .
matplotlib.axes.Axes.broken_barh,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.broken_barh,snap,Sets the snap setting which may be
matplotlib.axes.Axes.broken_barh,title,Set a title for the axes .
matplotlib.axes.Axes.broken_barh,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.broken_barh,url,Sets the url for the artist
matplotlib.axes.Axes.broken_barh,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.broken_barh,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.broken_barh,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.broken_barh,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.broken_barh,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.broken_barh,xranges,A collection of horizontal bars spanning yrange with a sequence of xranges .
matplotlib.axes.Axes.broken_barh,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.broken_barh,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.broken_barh,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.broken_barh,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.broken_barh,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.broken_barh,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.broken_barh,yrange,A collection of horizontal bars spanning yrange with a sequence of xranges .
matplotlib.axes.Axes.broken_barh,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.broken_barh,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.broken_barh,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.broken_barh,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.bxp,boxprops,"If provided , will set the plotting style of the boxes"
matplotlib.axes.Axes.bxp,bxpstats,A list of dictionaries containing stats for each boxplot . Required keys are :|||A list of dictionaries containing stats for each boxplot .
matplotlib.axes.Axes.bxp,capprops,"If provided , will set the plotting style of the caps"
matplotlib.axes.Axes.bxp,flierprops,If provided will set the plotting style of the fliers
matplotlib.axes.Axes.bxp,manage_xticks,If the function should adjust the xlim and xtick locations .
matplotlib.axes.Axes.bxp,meanline,"If True ( and showmeans is True ) , will try to render the mean as a line spanning the full width of the box according to meanprops . Not recommended if shownotches is also True . Otherwise , means will be shown as points .|||If True ( and showmeans is True ) , will try to render the mean as a line spanning the full width of the box according to meanprops ."
matplotlib.axes.Axes.bxp,meanprops,"If provided , will set the plotting style of the means"
matplotlib.axes.Axes.bxp,medianprops,"If provided , will set the plotting style of the medians"
matplotlib.axes.Axes.bxp,patch_artist,If False produces boxes with the Line2D artist . If True produces boxes with the Patch artist .|||If False produces boxes with the Line2D artist .
matplotlib.axes.Axes.bxp,positions,Sets the positions of the boxes .|||Sets the positions of the boxes . The ticks and limits are automatically set to match the positions .
matplotlib.axes.Axes.bxp,showbox,"If True , will toggle one the rendering of box"
matplotlib.axes.Axes.bxp,showcaps,"If True , will toggle one the rendering of the caps"
matplotlib.axes.Axes.bxp,showfliers,"If True , will toggle one the rendering of the fliers"
matplotlib.axes.Axes.bxp,showmeans,"If True , will toggle one the rendering of the means"
matplotlib.axes.Axes.bxp,shownotches,"If False ( default ) , produces a rectangular box plot .|||If False ( default ) , produces a rectangular box plot . If True , will produce a notched box plot"
matplotlib.axes.Axes.bxp,vert,"If True ( default ) , makes the boxes vertical .|||If True ( default ) , makes the boxes vertical . If False , makes horizontal boxes ."
matplotlib.axes.Axes.bxp,whiskerprops,"If provided , will set the plotting style of the whiskers"
matplotlib.axes.Axes.bxp,widths,"Either a scalar or a vector and sets the width of each box . The default is 0.5 , or 0.15*(distance between extreme positions ) if that is smaller .|||Either a scalar or a vector and sets the width of each box ."
matplotlib.axes.Axes.bxp,x,"Make a box and whisker plot for each column of x or each vector in sequence x .|||Make a box and whisker plot for each column of x or each vector in sequence x . The box extends from the lower to upper quartile values of the data , with a line at the median . The whiskers extend from the box to show the range of the data . Flier points are those past the end of the whiskers ."
matplotlib.axes.Axes.clabel,colors,"if None , the color of each label matches the color of the corresponding contour if one string color , e.g. , colors = ' r ' or colors = ' red ' , all labels will be plotted in this color if a tuple of matplotlib color args ( string , float , rgb , etc ) , different labels will be plotted in different colors in the order specified|||if None , the color of each label matches the color of the corresponding contour"
matplotlib.axes.Axes.clabel,cs,"Adds labels to line contours in cs , where cs is a ContourSet object returned by contour ."
matplotlib.axes.Axes.clabel,fmt,"a format string for the label . Default is ' %1.3f ' Alternatively , this can be a dictionary matching contour levels with arbitrary strings to use for each contour level ( i.e. , fmt[level]=string ) , or it can be any callable , such as a Formatter instance , that returns a string when called with a numeric contour level .|||a format string for the label ."
matplotlib.axes.Axes.clabel,fontsize,"size in points or relative size e.g. , ' smaller ' , ' x-large '"
matplotlib.axes.Axes.clabel,inline,controls whether the underlying contour is removed or not . Default is True .|||controls whether the underlying contour is removed or not .
matplotlib.axes.Axes.clabel,inline_spacing,"space in pixels to leave on each side of label when placing inline .|||space in pixels to leave on each side of label when placing inline . Defaults to 5 . This spacing will be exact for labels at locations where the contour is straight , less so for labels on curved contours ."
matplotlib.axes.Axes.clabel,manual,"if True , contour labels will be placed manually using mouse clicks . Click the first button near a contour to add a label , click the second button ( or potentially both mouse buttons at once ) to finish adding labels . The third button can be used to remove the last label added , but only if labels are not inline . Alternatively , the keyboard can be used to select label locations ( enter to end label placement , delete or backspace act like the third mouse button , and any other key will select a label location ) . manual can be an iterable object of x,y tuples . Contour labels will be created as if mouse is clicked at each x,y positions .|||if True , contour labels will be placed manually using mouse clicks ."
matplotlib.axes.Axes.clabel,rightside_up,"if True ( default ) , label rotations will always be plus or minus 90 degrees from level ."
matplotlib.axes.Axes.clabel,use_clabeltext,"if True ( default is False ) , ClabelText class ( instead of matplotlib.Text ) is used to create labels . ClabelText recalculates rotation angles of texts during the drawing time , therefore this can be used if aspect of the axes changes .|||if True ( default is False ) , ClabelText class ( instead of matplotlib.Text ) is used to create labels ."
matplotlib.axes.Axes.clabel,v,only labels contours listed in v .
matplotlib.axes.Axes.cohere,Cxy,"The return value is a tuple ( Cxy , f ) , where f are the frequencies of the coherence vector ."
matplotlib.axes.Axes.cohere,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.axes.Axes.cohere,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.cohere,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.cohere,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.cohere,anchor,anchor
matplotlib.axes.Axes.cohere,animated,Set the artist 's animation state .
matplotlib.axes.Axes.cohere,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.cohere,aspect,aspect
matplotlib.axes.Axes.cohere,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.cohere,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.cohere,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.cohere,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.cohere,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.cohere,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.cohere,color,Set the color of the line
matplotlib.axes.Axes.cohere,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.cohere,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.cohere,cursor_props,Set the cursor property as
matplotlib.axes.Axes.cohere,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.cohere,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.cohere,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.cohere,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.cohere,f,"The return value is a tuple ( Cxy , f ) , where f are the frequencies of the coherence vector ."
matplotlib.axes.Axes.cohere,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.cohere,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.cohere,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.cohere,hatch,Set the hatching pattern
matplotlib.axes.Axes.cohere,label,Set the label to s for auto legend .
matplotlib.axes.Axes.cohere,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.cohere,linewidth,Set the line width in points
matplotlib.axes.Axes.cohere,marker,Set the line marker
matplotlib.axes.Axes.cohere,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.cohere,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.cohere,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.cohere,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.cohere,markersize,Set the marker size in points
matplotlib.axes.Axes.cohere,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.cohere,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.cohere,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.cohere,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.cohere,position,Set the axes position with
matplotlib.axes.Axes.cohere,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.cohere,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.cohere,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.cohere,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.axes.Axes.cohere,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.cohere,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.cohere,snap,Sets the snap setting which may be
matplotlib.axes.Axes.cohere,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.cohere,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.cohere,title,Set a title for the axes .
matplotlib.axes.Axes.cohere,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.cohere,url,Sets the url for the artist
matplotlib.axes.Axes.cohere,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.cohere,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.cohere,window,"A function or a vector of length NFFT .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.axes.Axes.cohere,x,Plot the coherence between x and y .|||Plot the coherence between x and y . Coherence is the normalized cross spectral density :
matplotlib.axes.Axes.cohere,xdata,Set the data np.array for x
matplotlib.axes.Axes.cohere,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.cohere,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.cohere,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.cohere,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.cohere,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.cohere,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.cohere,y,Plot the coherence between x and y .|||Plot the coherence between x and y . Coherence is the normalized cross spectral density :
matplotlib.axes.Axes.cohere,ydata,Set the data np.array for y
matplotlib.axes.Axes.cohere,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.cohere,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.cohere,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.cohere,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.cohere,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.cohere,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.cohere,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.contour,False,"enable antialiasing , overriding the defaults .|||Enable/disable corner masking , which only has an effect if Z is a masked array .|||Enable/disable corner masking , which only has an effect if Z is a masked array . If False , any quad touching a masked point is masked out . If True , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . If ' legacy ' , the old contouring algorithm is used , which is equivalent to False and is deprecated , only remaining whilst the new algorithm is tested fully . If not specified , the default is taken from rcParams['contour.corner_mask ' ] , which is True unless it has been modified .|||enable antialiasing , overriding the defaults . For filled contours , the default is True . For line contours , it is taken from rcParams['lines.antialiased ' ] ."
matplotlib.axes.Axes.contour,N,contour up to N automatically-chosen levels .
matplotlib.axes.Axes.contour,None,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used .|||If linestyles is None , the default is ' solid ' unless the lines are monochrome . In that case , negative contours will take their linestyle from the matplotlibrc contour.negative_linestyle setting . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary .|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize|||If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||A cm Colormap instance or None .|||If None , the colormap specified by cmap will be used .|||A matplotlib.colors.Normalize instance for scaling data values to colors .|||Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .|||If locator is None , the default MaxNLocator is used .|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize instance , overriding the default color scaling based on levels .|||If linestyles is None , the default is ' solid ' unless the lines are monochrome ."
matplotlib.axes.Axes.contour,True,"enable antialiasing , overriding the defaults .|||Enable/disable corner masking , which only has an effect if Z is a masked array .|||Enable/disable corner masking , which only has an effect if Z is a masked array . If False , any quad touching a masked point is masked out . If True , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . If ' legacy ' , the old contouring algorithm is used , which is equivalent to False and is deprecated , only remaining whilst the new algorithm is tested fully . If not specified , the default is taken from rcParams['contour.corner_mask ' ] , which is True unless it has been modified .|||enable antialiasing , overriding the defaults . For filled contours , the default is True . For line contours , it is taken from rcParams['lines.antialiased ' ] ."
matplotlib.axes.Axes.contour,V,"fill the len(V)-1 regions between the values in V , which must be in increasing order .|||draw contour lines at the values specified in sequence V , which must be in increasing order ."
matplotlib.axes.Axes.contour,X,"X , Y specify the ( x , y ) coordinates of the surface|||X and Y must both be 2-D with the same shape as Z , or they must both be 1-D such that len(X ) is the number of columns in Z and len(Y ) is the number of rows in Z ."
matplotlib.axes.Axes.contour,Y,"X , Y specify the ( x , y ) coordinates of the surface|||X and Y must both be 2-D with the same shape as Z , or they must both be 1-D such that len(X ) is the number of columns in Z and len(Y ) is the number of rows in Z ."
matplotlib.axes.Axes.contour,Z,"make a contour plot of an array Z . The level values are chosen automatically .|||make a contour plot of an array Z .|||X and Y must both be 2-D with the same shape as Z , or they must both be 1-D such that len(X ) is the number of columns in Z and len(Y ) is the number of rows in Z ."
matplotlib.axes.Axes.contour,alpha,The alpha blending value
matplotlib.axes.Axes.contour,antialiased,"enable antialiasing , overriding the defaults .|||enable antialiasing , overriding the defaults . For filled contours , the default is True . For line contours , it is taken from rcParams['lines.antialiased ' ] ."
matplotlib.axes.Axes.contour,cmap,"A cm Colormap instance or None .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used ."
matplotlib.axes.Axes.contour,colors,"If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If None , the colormap specified by cmap will be used ."
matplotlib.axes.Axes.contour,corner_mask,"Enable/disable corner masking , which only has an effect if Z is a masked array .|||Enable/disable corner masking , which only has an effect if Z is a masked array . If False , any quad touching a masked point is masked out . If True , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . If ' legacy ' , the old contouring algorithm is used , which is equivalent to False and is deprecated , only remaining whilst the new algorithm is tested fully . If not specified , the default is taken from rcParams['contour.corner_mask ' ] , which is True unless it has been modified ."
matplotlib.axes.Axes.contour,extend,"Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included .|||Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included . These added ranges are then mapped to the special colormap values which default to the ends of the colormap range , but can be set via matplotlib.colors.Colormap.set_under ( ) and matplotlib.colors.Colormap.set_over ( ) methods ."
matplotlib.axes.Axes.contour,hatches,"A list of cross hatch patterns to use on the filled areas .|||A list of cross hatch patterns to use on the filled areas . If None , no hatching will be added to the contour . Hatching is supported in the PostScript , PDF , SVG and Agg backends only ."
matplotlib.axes.Axes.contour,levels,"A list of floating point numbers indicating the level curves to draw , in increasing order ; e.g. , to draw just the zero contour pass levels=[0 ]"
matplotlib.axes.Axes.contour,linestyles,"If linestyles is None , the default is ' solid ' unless the lines are monochrome . In that case , negative contours will take their linestyle from the matplotlibrc contour.negative_linestyle setting . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary .|||If linestyles is None , the default is ' solid ' unless the lines are monochrome ."
matplotlib.axes.Axes.contour,linewidths,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used ."
matplotlib.axes.Axes.contour,locator,"If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||If locator is None , the default MaxNLocator is used ."
matplotlib.axes.Axes.contour,nchunk,"If 0 , no subdivision of the domain .|||If 0 , no subdivision of the domain . Specify a positive integer to divide the domain into subdomains of nchunk by nchunk quads . Chunking reduces the maximum length of polygons generated by the contouring algorithm which reduces the rendering workload passed on to the backend and also requires slightly less RAM . It can however introduce rendering artifacts at chunk boundaries depending on the backend , the antialiased flag and value of alpha ."
matplotlib.axes.Axes.contour,norm,"A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||A matplotlib.colors.Normalize instance for scaling data values to colors ."
matplotlib.axes.Axes.contour,origin,"If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour ."
matplotlib.axes.Axes.contour,vmax,"If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize instance , overriding the default color scaling based on levels ."
matplotlib.axes.Axes.contour,vmin,"If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize instance , overriding the default color scaling based on levels ."
matplotlib.axes.Axes.contour,xunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.axes.Axes.contour,yunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.axes.Axes.contour,z,"There is one exception : if the lowest boundary coincides with the minimum value of the z array , then that minimum value will be included in the lowest interval ."
matplotlib.axes.Axes.contour,z1,"Note : contourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.axes.Axes.contour,z2,"Note : contourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.axes.Axes.contourf,False,"enable antialiasing , overriding the defaults .|||Enable/disable corner masking , which only has an effect if Z is a masked array .|||Enable/disable corner masking , which only has an effect if Z is a masked array . If False , any quad touching a masked point is masked out . If True , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . If ' legacy ' , the old contouring algorithm is used , which is equivalent to False and is deprecated , only remaining whilst the new algorithm is tested fully . If not specified , the default is taken from rcParams['contour.corner_mask ' ] , which is True unless it has been modified .|||enable antialiasing , overriding the defaults . For filled contours , the default is True . For line contours , it is taken from rcParams['lines.antialiased ' ] ."
matplotlib.axes.Axes.contourf,N,contour up to N automatically-chosen levels .
matplotlib.axes.Axes.contourf,None,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used .|||If linestyles is None , the default is ' solid ' unless the lines are monochrome . In that case , negative contours will take their linestyle from the matplotlibrc contour.negative_linestyle setting . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary .|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize|||If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||A cm Colormap instance or None .|||If None , the colormap specified by cmap will be used .|||A matplotlib.colors.Normalize instance for scaling data values to colors .|||Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .|||If locator is None , the default MaxNLocator is used .|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize instance , overriding the default color scaling based on levels .|||If linestyles is None , the default is ' solid ' unless the lines are monochrome ."
matplotlib.axes.Axes.contourf,True,"enable antialiasing , overriding the defaults .|||Enable/disable corner masking , which only has an effect if Z is a masked array .|||Enable/disable corner masking , which only has an effect if Z is a masked array . If False , any quad touching a masked point is masked out . If True , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . If ' legacy ' , the old contouring algorithm is used , which is equivalent to False and is deprecated , only remaining whilst the new algorithm is tested fully . If not specified , the default is taken from rcParams['contour.corner_mask ' ] , which is True unless it has been modified .|||enable antialiasing , overriding the defaults . For filled contours , the default is True . For line contours , it is taken from rcParams['lines.antialiased ' ] ."
matplotlib.axes.Axes.contourf,V,"fill the len(V)-1 regions between the values in V , which must be in increasing order .|||draw contour lines at the values specified in sequence V , which must be in increasing order ."
matplotlib.axes.Axes.contourf,X,"X , Y specify the ( x , y ) coordinates of the surface|||X and Y must both be 2-D with the same shape as Z , or they must both be 1-D such that len(X ) is the number of columns in Z and len(Y ) is the number of rows in Z ."
matplotlib.axes.Axes.contourf,Y,"X , Y specify the ( x , y ) coordinates of the surface|||X and Y must both be 2-D with the same shape as Z , or they must both be 1-D such that len(X ) is the number of columns in Z and len(Y ) is the number of rows in Z ."
matplotlib.axes.Axes.contourf,Z,"make a contour plot of an array Z . The level values are chosen automatically .|||make a contour plot of an array Z .|||X and Y must both be 2-D with the same shape as Z , or they must both be 1-D such that len(X ) is the number of columns in Z and len(Y ) is the number of rows in Z ."
matplotlib.axes.Axes.contourf,alpha,The alpha blending value
matplotlib.axes.Axes.contourf,antialiased,"enable antialiasing , overriding the defaults .|||enable antialiasing , overriding the defaults . For filled contours , the default is True . For line contours , it is taken from rcParams['lines.antialiased ' ] ."
matplotlib.axes.Axes.contourf,cmap,"A cm Colormap instance or None .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used ."
matplotlib.axes.Axes.contourf,colors,"If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If None , the colormap specified by cmap will be used ."
matplotlib.axes.Axes.contourf,corner_mask,"Enable/disable corner masking , which only has an effect if Z is a masked array .|||Enable/disable corner masking , which only has an effect if Z is a masked array . If False , any quad touching a masked point is masked out . If True , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . If ' legacy ' , the old contouring algorithm is used , which is equivalent to False and is deprecated , only remaining whilst the new algorithm is tested fully . If not specified , the default is taken from rcParams['contour.corner_mask ' ] , which is True unless it has been modified ."
matplotlib.axes.Axes.contourf,extend,"Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included .|||Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included . These added ranges are then mapped to the special colormap values which default to the ends of the colormap range , but can be set via matplotlib.colors.Colormap.set_under ( ) and matplotlib.colors.Colormap.set_over ( ) methods ."
matplotlib.axes.Axes.contourf,hatches,"A list of cross hatch patterns to use on the filled areas .|||A list of cross hatch patterns to use on the filled areas . If None , no hatching will be added to the contour . Hatching is supported in the PostScript , PDF , SVG and Agg backends only ."
matplotlib.axes.Axes.contourf,levels,"A list of floating point numbers indicating the level curves to draw , in increasing order ; e.g. , to draw just the zero contour pass levels=[0 ]"
matplotlib.axes.Axes.contourf,linestyles,"If linestyles is None , the default is ' solid ' unless the lines are monochrome . In that case , negative contours will take their linestyle from the matplotlibrc contour.negative_linestyle setting . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary .|||If linestyles is None , the default is ' solid ' unless the lines are monochrome ."
matplotlib.axes.Axes.contourf,linewidths,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used ."
matplotlib.axes.Axes.contourf,locator,"If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||If locator is None , the default MaxNLocator is used ."
matplotlib.axes.Axes.contourf,nchunk,"If 0 , no subdivision of the domain .|||If 0 , no subdivision of the domain . Specify a positive integer to divide the domain into subdomains of nchunk by nchunk quads . Chunking reduces the maximum length of polygons generated by the contouring algorithm which reduces the rendering workload passed on to the backend and also requires slightly less RAM . It can however introduce rendering artifacts at chunk boundaries depending on the backend , the antialiased flag and value of alpha ."
matplotlib.axes.Axes.contourf,norm,"A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||A matplotlib.colors.Normalize instance for scaling data values to colors ."
matplotlib.axes.Axes.contourf,origin,"If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour ."
matplotlib.axes.Axes.contourf,vmax,"If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize instance , overriding the default color scaling based on levels ."
matplotlib.axes.Axes.contourf,vmin,"If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize instance , overriding the default color scaling based on levels ."
matplotlib.axes.Axes.contourf,xunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.axes.Axes.contourf,yunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.axes.Axes.contourf,z,"There is one exception : if the lowest boundary coincides with the minimum value of the z array , then that minimum value will be included in the lowest interval ."
matplotlib.axes.Axes.contourf,z1,"Note : contourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.axes.Axes.contourf,z2,"Note : contourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.axes.Axes.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.axes.Axes.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.axes.Axes.csd,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.axes.Axes.csd,NFFT,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||If len(x ) < NFFT or len(y ) < NFFT , they will be zero padded to NFFT ."
matplotlib.axes.Axes.csd,Pxy,"If return_line is False , returns the tuple ( Pxy , freqs ) . If return_line is True , returns the tuple ( Pxy , freqs . line ) :|||If return_line is False , returns the tuple ( Pxy , freqs ) ."
matplotlib.axes.Axes.csd,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.csd,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.csd,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.csd,anchor,anchor
matplotlib.axes.Axes.csd,animated,Set the artist 's animation state .
matplotlib.axes.Axes.csd,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.csd,aspect,aspect
matplotlib.axes.Axes.csd,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.csd,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.csd,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.csd,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.csd,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.csd,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.csd,color,Set the color of the line
matplotlib.axes.Axes.csd,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.csd,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.csd,cursor_props,Set the cursor property as
matplotlib.axes.Axes.csd,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.csd,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.csd,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.csd,detrend,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing ."
matplotlib.axes.Axes.csd,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.csd,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.csd,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.csd,freqs,"If return_line is False , returns the tuple ( Pxy , freqs ) . If return_line is True , returns the tuple ( Pxy , freqs . line ) :|||If return_line is False , returns the tuple ( Pxy , freqs ) ."
matplotlib.axes.Axes.csd,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.csd,hatch,Set the hatching pattern
matplotlib.axes.Axes.csd,label,Set the label to s for auto legend .
matplotlib.axes.Axes.csd,line,"If return_line is False , returns the tuple ( Pxy , freqs ) . If return_line is True , returns the tuple ( Pxy , freqs . line ) :|||If return_line is False , returns the tuple ( Pxy , freqs ) ."
matplotlib.axes.Axes.csd,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.csd,linewidth,Set the line width in points
matplotlib.axes.Axes.csd,marker,Set the line marker
matplotlib.axes.Axes.csd,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.csd,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.csd,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.csd,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.csd,markersize,Set the marker size in points
matplotlib.axes.Axes.csd,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.csd,noverlap,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing ."
matplotlib.axes.Axes.csd,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.csd,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.csd,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.csd,position,Set the axes position with
matplotlib.axes.Axes.csd,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.csd,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.csd,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.csd,return_line,"If return_line is False , returns the tuple ( Pxy , freqs ) . If return_line is True , returns the tuple ( Pxy , freqs . line ) :|||If return_line is False , returns the tuple ( Pxy , freqs ) ."
matplotlib.axes.Axes.csd,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.axes.Axes.csd,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.csd,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.csd,snap,Sets the snap setting which may be
matplotlib.axes.Axes.csd,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.csd,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.csd,title,Set a title for the axes .
matplotlib.axes.Axes.csd,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.csd,url,Sets the url for the artist
matplotlib.axes.Axes.csd,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.csd,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.csd,window,"A function or a vector of length NFFT .|||The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.axes.Axes.csd,x,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||If len(x ) < NFFT or len(y ) < NFFT , they will be zero padded to NFFT ."
matplotlib.axes.Axes.csd,xdata,Set the data np.array for x
matplotlib.axes.Axes.csd,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.csd,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.csd,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.csd,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.csd,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.csd,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.csd,y,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||If len(x ) < NFFT or len(y ) < NFFT , they will be zero padded to NFFT ."
matplotlib.axes.Axes.csd,ydata,Set the data np.array for y
matplotlib.axes.Axes.csd,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.csd,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.csd,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.csd,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.csd,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.csd,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.csd,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.drag_pan,button,button is the mouse button number :
matplotlib.axes.Axes.drag_pan,key,"key is a "" shift "" key"
matplotlib.axes.Axes.drag_pan,x,"x , y are the mouse coordinates in display coords ."
matplotlib.axes.Axes.drag_pan,y,"x , y are the mouse coordinates in display coords ."
matplotlib.axes.Axes.errorbar,False,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||if True , will plot the errorbars above the plot symbols . Default is below .|||if True , will plot the errorbars above the plot symbols .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.axes.Axes.errorbar,None,"A matplotlib color arg which gives the color the errorbar lines ; if None , use the color of the line connecting the markers ."
matplotlib.axes.Axes.errorbar,True,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||if True , will plot the errorbars above the plot symbols . Default is below .|||if True , will plot the errorbars above the plot symbols .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.axes.Axes.errorbar,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.errorbar,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.errorbar,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.errorbar,anchor,anchor
matplotlib.axes.Axes.errorbar,animated,Set the artist 's animation state .
matplotlib.axes.Axes.errorbar,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.errorbar,aspect,aspect
matplotlib.axes.Axes.errorbar,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.errorbar,barlinecols,"Returns ( plotline , caplines , barlinecols ) :"
matplotlib.axes.Axes.errorbar,barsabove,"if True , will plot the errorbars above the plot symbols . Default is below .|||if True , will plot the errorbars above the plot symbols ."
matplotlib.axes.Axes.errorbar,caplines,"Returns ( plotline , caplines , barlinecols ) :"
matplotlib.axes.Axes.errorbar,capsize,"The length of the error bar caps in points ; if None , it will take the value from errorbar.capsize rcParam ."
matplotlib.axes.Axes.errorbar,capthick,"An alias kwarg to markeredgewidth ( a.k.a. - mew ) . This setting is a more sensible name for the property that controls the thickness of the error bar cap in points . For backwards compatibility , if mew or markeredgewidth are given , then they will over-ride capthick . This may change in future releases .|||An alias kwarg to markeredgewidth ( a.k.a. - mew ) ."
matplotlib.axes.Axes.errorbar,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.errorbar,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.errorbar,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.errorbar,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.errorbar,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.errorbar,color,Set the color of the line
matplotlib.axes.Axes.errorbar,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.errorbar,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.errorbar,cursor_props,Set the cursor property as
matplotlib.axes.Axes.errorbar,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.errorbar,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.errorbar,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.errorbar,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.errorbar,ecolor,"A matplotlib color arg which gives the color the errorbar lines ; if None , use the color of the line connecting the markers ."
matplotlib.axes.Axes.errorbar,elinewidth,"The linewidth of the errorbar lines . If None , use the linewidth .|||The linewidth of the errorbar lines ."
matplotlib.axes.Axes.errorbar,errorevery,"subsamples the errorbars .|||subsamples the errorbars . e.g. , if errorevery=5 , errorbars for every 5-th datapoint will be plotted . The data plot itself still shows all data points ."
matplotlib.axes.Axes.errorbar,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.errorbar,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.errorbar,fmt,"The plot format symbol .|||The plot format symbol . If fmt is ' none ' ( case-insensitive ) , only the errorbars are plotted . This is used for adding errorbars to a bar plot , for example . Default is ' ' , an empty plot format string ; properties are then identical to the defaults for plot ( ) ."
matplotlib.axes.Axes.errorbar,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.errorbar,hatch,Set the hatching pattern
matplotlib.axes.Axes.errorbar,label,Set the label to s for auto legend .
matplotlib.axes.Axes.errorbar,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.errorbar,linewidth,Set the line width in points
matplotlib.axes.Axes.errorbar,lolims,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.axes.Axes.errorbar,marker,Set the line marker
matplotlib.axes.Axes.errorbar,markeredgecolor,"Set the marker edge color|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.axes.Axes.errorbar,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.errorbar,markeredgewith,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.axes.Axes.errorbar,markerfacecolor,"Set the marker face color .|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.axes.Axes.errorbar,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.errorbar,markersize,"Set the marker size in points|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.axes.Axes.errorbar,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.errorbar,mec,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.axes.Axes.errorbar,mew,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.axes.Axes.errorbar,mfc,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.axes.Axes.errorbar,ms,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.axes.Axes.errorbar,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.errorbar,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.errorbar,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.errorbar,plotline,"Returns ( plotline , caplines , barlinecols ) :"
matplotlib.axes.Axes.errorbar,position,Set the axes position with
matplotlib.axes.Axes.errorbar,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.errorbar,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.errorbar,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.errorbar,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.errorbar,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.errorbar,snap,Sets the snap setting which may be
matplotlib.axes.Axes.errorbar,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.errorbar,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.errorbar,title,Set a title for the axes .
matplotlib.axes.Axes.errorbar,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.errorbar,uplims,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.axes.Axes.errorbar,url,Sets the url for the artist
matplotlib.axes.Axes.errorbar,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.errorbar,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.errorbar,x,"Plot x versus y with error deltas in yerr and xerr .|||Plot x versus y with error deltas in yerr and xerr . Vertical errorbars are plotted if yerr is not None . Horizontal errorbars are plotted if xerr is not None .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y ."
matplotlib.axes.Axes.errorbar,xdata,Set the data np.array for x
matplotlib.axes.Axes.errorbar,xerr,"If a scalar number , len(N ) array-like object , or an Nx1 array-like object , errorbars are drawn at + /-value relative to the data . If a sequence of shape 2xN , errorbars are drawn at - row1 and + row2 relative to the data .|||If a scalar number , len(N ) array-like object , or an Nx1 array-like object , errorbars are drawn at + /-value relative to the data .|||Plot x versus y with error deltas in yerr and xerr .|||Plot x versus y with error deltas in yerr and xerr . Vertical errorbars are plotted if yerr is not None . Horizontal errorbars are plotted if xerr is not None .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y ."
matplotlib.axes.Axes.errorbar,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.errorbar,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.errorbar,xlolims,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.axes.Axes.errorbar,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.errorbar,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.errorbar,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.errorbar,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.errorbar,xuplims,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.axes.Axes.errorbar,y,"Plot x versus y with error deltas in yerr and xerr .|||Plot x versus y with error deltas in yerr and xerr . Vertical errorbars are plotted if yerr is not None . Horizontal errorbars are plotted if xerr is not None .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y ."
matplotlib.axes.Axes.errorbar,ydata,Set the data np.array for y
matplotlib.axes.Axes.errorbar,yerr,"If a scalar number , len(N ) array-like object , or an Nx1 array-like object , errorbars are drawn at + /-value relative to the data . If a sequence of shape 2xN , errorbars are drawn at - row1 and + row2 relative to the data .|||If a scalar number , len(N ) array-like object , or an Nx1 array-like object , errorbars are drawn at + /-value relative to the data .|||Plot x versus y with error deltas in yerr and xerr .|||Plot x versus y with error deltas in yerr and xerr . Vertical errorbars are plotted if yerr is not None . Horizontal errorbars are plotted if xerr is not None .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y ."
matplotlib.axes.Axes.errorbar,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.errorbar,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.errorbar,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.errorbar,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.errorbar,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.errorbar,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.errorbar,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.eventplot,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.eventplot,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.eventplot,alpha,Set the alpha tranparencies of the collection .
matplotlib.axes.Axes.eventplot,anchor,anchor
matplotlib.axes.Axes.eventplot,animated,Set the artist 's animation state .
matplotlib.axes.Axes.eventplot,antialiased,Set the antialiasing state for rendering .
matplotlib.axes.Axes.eventplot,array,Set the image array from numpy array A
matplotlib.axes.Axes.eventplot,aspect,aspect
matplotlib.axes.Axes.eventplot,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.eventplot,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.axes.Axes.eventplot,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.eventplot,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.eventplot,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.eventplot,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.eventplot,cmap,set the colormap for luminance data
matplotlib.axes.Axes.eventplot,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.eventplot,color,Set the color(s ) of the line collection .
matplotlib.axes.Axes.eventplot,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.eventplot,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.eventplot,cursor_props,Set the cursor property as
matplotlib.axes.Axes.eventplot,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.axes.Axes.eventplot,facecolor,Set the facecolor(s ) of the collection .
matplotlib.axes.Axes.eventplot,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.eventplot,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.eventplot,hatch,Set the hatching pattern
matplotlib.axes.Axes.eventplot,label,Set the label to s for auto legend .
matplotlib.axes.Axes.eventplot,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.axes.Axes.eventplot,linewidth,Set the linewidth(s ) for the collection .
matplotlib.axes.Axes.eventplot,norm,set the normalization instance
matplotlib.axes.Axes.eventplot,offset_position,Set how offsets are applied .
matplotlib.axes.Axes.eventplot,offsets,Set the offsets for the collection .
matplotlib.axes.Axes.eventplot,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.eventplot,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.eventplot,position,Set the axes position with
matplotlib.axes.Axes.eventplot,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.eventplot,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.eventplot,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.eventplot,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.eventplot,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.eventplot,snap,Sets the snap setting which may be
matplotlib.axes.Axes.eventplot,title,Set a title for the axes .
matplotlib.axes.Axes.eventplot,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.eventplot,url,Sets the url for the artist
matplotlib.axes.Axes.eventplot,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.eventplot,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.eventplot,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.eventplot,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.eventplot,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.eventplot,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.eventplot,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.eventplot,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.eventplot,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.eventplot,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.eventplot,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.eventplot,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.eventplot,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.eventplot,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.eventplot,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.fill,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.fill,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.fill,alpha,Set the alpha tranparency of the patch .
matplotlib.axes.Axes.fill,anchor,anchor
matplotlib.axes.Axes.fill,animated,Set the artist 's animation state .
matplotlib.axes.Axes.fill,antialiased,Set whether to use antialiased rendering
matplotlib.axes.Axes.fill,args,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||Plot lines and/or markers to the Axes .|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing .|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing . For example , to plot a polygon with vertices at x , y in blue . :"
matplotlib.axes.Axes.fill,aspect,aspect
matplotlib.axes.Axes.fill,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.fill,capstyle,Set the patch capstyle
matplotlib.axes.Axes.fill,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.fill,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.fill,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.fill,closed,"Set if the polygon is closed|||If codes is None and closed is True , vertices will be treated as line segments of a closed polygon .|||The closed kwarg will close the polygon when True ( default ) ."
matplotlib.axes.Axes.fill,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.fill,color,"An arbitrary number of x , y , color groups can be specified :|||Set both the edgecolor and the facecolor ."
matplotlib.axes.Axes.fill,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.fill,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.fill,cursor_props,Set the cursor property as
matplotlib.axes.Axes.fill,edgecolor,Set the patch edge color
matplotlib.axes.Axes.fill,facecolor,Set the patch face color
matplotlib.axes.Axes.fill,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.fill,fill,Set whether to fill the patch
matplotlib.axes.Axes.fill,fmt,"If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :"
matplotlib.axes.Axes.fill,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.fill,hatch,Set the hatching pattern
matplotlib.axes.Axes.fill,joinstyle,Set the patch joinstyle
matplotlib.axes.Axes.fill,label,Set the label to s for auto legend .
matplotlib.axes.Axes.fill,linestyle,Set the patch linestyle
matplotlib.axes.Axes.fill,linewidth,Set the patch linewidth in points
matplotlib.axes.Axes.fill,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.fill,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.fill,position,Set the axes position with
matplotlib.axes.Axes.fill,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.fill,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.fill,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.fill,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.fill,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||Autoscale the view limits using the data limits ."
matplotlib.axes.Axes.fill,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.fill,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.fill,snap,Sets the snap setting which may be
matplotlib.axes.Axes.fill,title,Set a title for the axes .
matplotlib.axes.Axes.fill,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.fill,url,Sets the url for the artist
matplotlib.axes.Axes.fill,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.fill,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.fill,x,"An arbitrary number of x , y , color groups can be specified :|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing . For example , to plot a polygon with vertices at x , y in blue . :|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||If you would like to fill below a curve , e.g. , shade a region between 0 and y along x , use fill_between ( )|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing ."
matplotlib.axes.Axes.fill,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.fill,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.fill,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.fill,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.fill,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.fill,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.fill,xy,Set the vertices of the polygon
matplotlib.axes.Axes.fill,y,"An arbitrary number of x , y , color groups can be specified :|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing . For example , to plot a polygon with vertices at x , y in blue . :|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||If you would like to fill below a curve , e.g. , shade a region between 0 and y along x , use fill_between ( )|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing ."
matplotlib.axes.Axes.fill,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.fill,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.fill,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.fill,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.fill,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.fill,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.fill,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.fill_between,interpolate,"If True , interpolate between the two lines to find the precise point of intersection .|||If True , interpolate between the two lines to find the precise point of intersection . Otherwise , the start and end points of the filled region will only occur on explicit values in the x array ."
matplotlib.axes.Axes.fill_between,step,"If not None , fill with step logic ."
matplotlib.axes.Axes.fill_between,where,"If None , default to fill between everywhere .|||If None , default to fill between everywhere . If not None , it is an N-length numpy boolean array and the fill will only happen over the regions where where==True ."
matplotlib.axes.Axes.fill_between,x,An N-length array of the x data
matplotlib.axes.Axes.fill_between,y1,Create a PolyCollection|||Create a PolyCollection filling the regions between y1 and y2 where where==True|||An N-length array ( or scalar ) of the y data
matplotlib.axes.Axes.fill_between,y2,Create a PolyCollection|||Create a PolyCollection filling the regions between y1 and y2 where where==True|||An N-length array ( or scalar ) of the y data
matplotlib.axes.Axes.fill_betweenx,step,"If not None , fill with step logic ."
matplotlib.axes.Axes.fill_betweenx,where,"If None , default to fill between everywhere .|||If None , default to fill between everywhere . If not None , it is a N length numpy boolean array and the fill will only happen over the regions where where==True"
matplotlib.axes.Axes.fill_betweenx,x1,An N-length array ( or scalar ) of the x data|||Create a PolyCollection|||Create a PolyCollection filling the regions between x1 and x2 where where==True
matplotlib.axes.Axes.fill_betweenx,x2,An N-length array ( or scalar ) of the x data|||Create a PolyCollection|||Create a PolyCollection filling the regions between x1 and x2 where where==True
matplotlib.axes.Axes.fill_betweenx,y,An N-length array of the y data
matplotlib.axes.Axes.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.axes.Axes.findobj,match,match can be
matplotlib.axes.Axes.format_coord,x,"Return a format string formatting the x , y coord"
matplotlib.axes.Axes.format_coord,y,"Return a format string formatting the x , y coord"
matplotlib.axes.Axes.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.axes.Axes.format_xdata,x,"Return x string formatted .|||Return x string formatted . This function will use the attribute self.fmt_xdata if it is callable , else will fall back on the xaxis major formatter"
matplotlib.axes.Axes.get_cursor_props,color,"Return the cursor propertiess as a ( linewidth , color ) tuple , where linewidth is a float and color is an RGBA tuple"
matplotlib.axes.Axes.get_cursor_props,linewidth,"Return the cursor propertiess as a ( linewidth , color ) tuple , where linewidth is a float and color is an RGBA tuple"
matplotlib.axes.Axes.get_tightbbox,call_axes_locator,"If call_axes_locator is False , it does not call the _ axes_locator attribute , which is necessary to get the correct bounding box . call_axes_locator==False can be used if the caller is only intereted in the relative size of the tightbbox compared to the axes bbox .|||If call_axes_locator is False , it does not call the _ axes_locator attribute , which is necessary to get the correct bounding box ."
matplotlib.axes.Axes.get_title,loc,"Which title to get , defaults to ' center '"
matplotlib.axes.Axes.get_window_extent,args,get the axes bounding box in display space ; args and kwargs are empty
matplotlib.axes.Axes.get_xaxis_text1_transform,halign,where valign and halign are requested alignments for the text .
matplotlib.axes.Axes.get_xaxis_text1_transform,valign,where valign and halign are requested alignments for the text .
matplotlib.axes.Axes.get_xaxis_text2_transform,halign,where valign and halign are requested alignments for the text .
matplotlib.axes.Axes.get_xaxis_text2_transform,valign,where valign and halign are requested alignments for the text .
matplotlib.axes.Axes.get_xlim,left,"Get the x-axis range [ left , right ]"
matplotlib.axes.Axes.get_xlim,right,"Get the x-axis range [ left , right ]"
matplotlib.axes.Axes.get_xticklabels,minor,"If True return the minor ticklabels , else return the major ticklabels"
matplotlib.axes.Axes.get_xticklabels,which,Overrides minor .
matplotlib.axes.Axes.get_yaxis_text1_transform,halign,where valign and halign are requested alignments for the text .
matplotlib.axes.Axes.get_yaxis_text1_transform,valign,where valign and halign are requested alignments for the text .
matplotlib.axes.Axes.get_yaxis_text2_transform,halign,where valign and halign are requested alignments for the text .
matplotlib.axes.Axes.get_yaxis_text2_transform,valign,where valign and halign are requested alignments for the text .
matplotlib.axes.Axes.get_ylim,bottom,"Get the y-axis range [ bottom , top ]"
matplotlib.axes.Axes.get_ylim,top,"Get the y-axis range [ bottom , top ]"
matplotlib.axes.Axes.get_yticklabels,minor,"If True return the minor ticklabels , else return the major ticklabels"
matplotlib.axes.Axes.get_yticklabels,which,Overrides minor .
matplotlib.axes.Axes.grid,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.grid,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.grid,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.grid,anchor,anchor
matplotlib.axes.Axes.grid,animated,Set the artist 's animation state .
matplotlib.axes.Axes.grid,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.grid,aspect,aspect
matplotlib.axes.Axes.grid,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.grid,axis,"axis can be ' both ' ( default ) , ' x ' , or ' y ' to control which set of gridlines are drawn ."
matplotlib.axes.Axes.grid,b,"Set the axes grids on or off ; b is a boolean .|||If b is None and len(kwargs)==0 , toggle the grid state .|||If b is None and len(kwargs)==0 , toggle the grid state . If kwargs are supplied , it is assumed that you want a grid and b is thus set to True .|||Set the axes grids on or off ; b is a boolean . ( For MATLAB compatibility , b may also be a string , ' on ' or ' off ' . )"
matplotlib.axes.Axes.grid,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.grid,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.grid,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.grid,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.grid,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.grid,color,Set the color of the line
matplotlib.axes.Axes.grid,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.grid,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.grid,cursor_props,Set the cursor property as
matplotlib.axes.Axes.grid,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.grid,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.grid,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.grid,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.grid,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.grid,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.grid,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.grid,hatch,Set the hatching pattern
matplotlib.axes.Axes.grid,label,Set the label to s for auto legend .
matplotlib.axes.Axes.grid,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.grid,linewidth,Set the line width in points
matplotlib.axes.Axes.grid,marker,Set the line marker
matplotlib.axes.Axes.grid,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.grid,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.grid,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.grid,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.grid,markersize,Set the marker size in points
matplotlib.axes.Axes.grid,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.grid,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.grid,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.grid,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.grid,position,Set the axes position with
matplotlib.axes.Axes.grid,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.grid,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.grid,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.grid,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.grid,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.grid,snap,Sets the snap setting which may be
matplotlib.axes.Axes.grid,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.grid,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.grid,title,Set a title for the axes .
matplotlib.axes.Axes.grid,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.grid,url,Sets the url for the artist
matplotlib.axes.Axes.grid,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.grid,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.grid,which,"which can be ' major ' ( default ) , ' minor ' , or ' both ' to control whether major tick grids , minor tick grids , or both are affected ."
matplotlib.axes.Axes.grid,xdata,Set the data np.array for x
matplotlib.axes.Axes.grid,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.grid,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.grid,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.grid,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.grid,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.grid,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.grid,ydata,Set the data np.array for y
matplotlib.axes.Axes.grid,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.grid,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.grid,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.grid,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.grid,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.grid,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.grid,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.has_data,dataLim,"This should not be used to determine whether the dataLim|||This should not be used to determine whether the dataLim need to be updated , and may not actually be useful for anything ."
matplotlib.axes.Axes.have_units,x,Return True if units are set on the x or y axes
matplotlib.axes.Axes.have_units,y,Return True if units are set on the x or y axes
matplotlib.axes.Axes.hexbin,C,"If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) .|||If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) . These values are accumulated for each hexagonal bin and then reduced according to reduce_C_function , which defaults to numpy 's mean function ( np.mean ) . ( If C is specified , it must also be a 1-D sequence of the same length as x and y . )|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N .|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N . If C is None ( the default ) , this is a histogram of the number of occurences of the observations at ( x[i],y[i ] ) .|||x , y and/or C may be masked arrays , in which case only unmasked points will be plotted ."
matplotlib.axes.Axes.hexbin,N,"Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N . If C is None ( the default ) , this is a histogram of the number of occurences of the observations at ( x[i],y[i ] ) .|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N ."
matplotlib.axes.Axes.hexbin,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.hexbin,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.hexbin,alpha,Set the alpha tranparencies of the collection .
matplotlib.axes.Axes.hexbin,anchor,anchor
matplotlib.axes.Axes.hexbin,animated,Set the artist 's animation state .
matplotlib.axes.Axes.hexbin,antialiased,Set the antialiasing state for rendering .
matplotlib.axes.Axes.hexbin,array,Set the image array from numpy array A
matplotlib.axes.Axes.hexbin,aspect,aspect
matplotlib.axes.Axes.hexbin,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.hexbin,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.axes.Axes.hexbin,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.hexbin,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.hexbin,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.hexbin,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.hexbin,cmap,set the colormap for luminance data
matplotlib.axes.Axes.hexbin,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.hexbin,color,Set both the edgecolor and the facecolor .
matplotlib.axes.Axes.hexbin,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.hexbin,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.hexbin,cursor_props,Set the cursor property as
matplotlib.axes.Axes.hexbin,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.axes.Axes.hexbin,facecolor,Set the facecolor(s ) of the collection .
matplotlib.axes.Axes.hexbin,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.hexbin,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.hexbin,hatch,Set the hatching pattern
matplotlib.axes.Axes.hexbin,hbar,"The return value is a PolyCollection instance ; use get_array ( ) on this PolyCollection to get the counts in each hexagon . If marginals is True , horizontal bar and vertical bar ( both PolyCollections ) will be attached to the return collection as attributes hbar and vbar .|||The return value is a PolyCollection instance ; use get_array ( ) on this PolyCollection to get the counts in each hexagon ."
matplotlib.axes.Axes.hexbin,label,Set the label to s for auto legend .
matplotlib.axes.Axes.hexbin,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.axes.Axes.hexbin,linewidth,Set the linewidth(s ) for the collection .
matplotlib.axes.Axes.hexbin,marginals,"The return value is a PolyCollection instance ; use get_array ( ) on this PolyCollection to get the counts in each hexagon . If marginals is True , horizontal bar and vertical bar ( both PolyCollections ) will be attached to the return collection as attributes hbar and vbar .|||The return value is a PolyCollection instance ; use get_array ( ) on this PolyCollection to get the counts in each hexagon ."
matplotlib.axes.Axes.hexbin,norm,set the normalization instance
matplotlib.axes.Axes.hexbin,offset_position,Set how offsets are applied .
matplotlib.axes.Axes.hexbin,offsets,Set the offsets for the collection .
matplotlib.axes.Axes.hexbin,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.hexbin,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.hexbin,position,Set the axes position with
matplotlib.axes.Axes.hexbin,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.hexbin,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.hexbin,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.hexbin,reduce_C_function,"If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) .|||If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) . These values are accumulated for each hexagonal bin and then reduced according to reduce_C_function , which defaults to numpy 's mean function ( np.mean ) . ( If C is specified , it must also be a 1-D sequence of the same length as x and y . )"
matplotlib.axes.Axes.hexbin,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.hexbin,sizes,Set the sizes of each member of the collection .
matplotlib.axes.Axes.hexbin,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.hexbin,snap,Sets the snap setting which may be
matplotlib.axes.Axes.hexbin,title,Set a title for the axes .
matplotlib.axes.Axes.hexbin,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.hexbin,url,Sets the url for the artist
matplotlib.axes.Axes.hexbin,vbar,"The return value is a PolyCollection instance ; use get_array ( ) on this PolyCollection to get the counts in each hexagon . If marginals is True , horizontal bar and vertical bar ( both PolyCollections ) will be attached to the return collection as attributes hbar and vbar .|||The return value is a PolyCollection instance ; use get_array ( ) on this PolyCollection to get the counts in each hexagon ."
matplotlib.axes.Axes.hexbin,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.hexbin,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.hexbin,x,"If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) .|||If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) . These values are accumulated for each hexagonal bin and then reduced according to reduce_C_function , which defaults to numpy 's mean function ( np.mean ) . ( If C is specified , it must also be a 1-D sequence of the same length as x and y . )|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N .|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N . If C is None ( the default ) , this is a histogram of the number of occurences of the observations at ( x[i],y[i ] ) .|||x , y and/or C may be masked arrays , in which case only unmasked points will be plotted ."
matplotlib.axes.Axes.hexbin,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.hexbin,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.hexbin,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.hexbin,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.hexbin,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.hexbin,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.hexbin,y,"If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) .|||If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) . These values are accumulated for each hexagonal bin and then reduced according to reduce_C_function , which defaults to numpy 's mean function ( np.mean ) . ( If C is specified , it must also be a 1-D sequence of the same length as x and y . )|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N .|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N . If C is None ( the default ) , this is a histogram of the number of occurences of the observations at ( x[i],y[i ] ) .|||x , y and/or C may be masked arrays , in which case only unmasked points will be plotted ."
matplotlib.axes.Axes.hexbin,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.hexbin,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.hexbin,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.hexbin,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.hexbin,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.hexbin,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.hexbin,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.hist,align,Controls how the histogram is plotted .
matplotlib.axes.Axes.hist,bins,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||If an integer is given , bins + 1 bin edges are returned , consistently with numpy.histogram ( ) for numpy version > = 1.3 .|||Compute and draw the histogram of x ."
matplotlib.axes.Axes.hist,bottom,"Location of the bottom baseline of each bin . If a scalar , the base line for each bin is shifted by the same amount . If an array , each bin is shifted independently and the length of bottom must match the number of bins . If None , defaults to 0 .|||Location of the bottom baseline of each bin ."
matplotlib.axes.Axes.hist,color,"Color spec or sequence of color specs , one per dataset .|||Color spec or sequence of color specs , one per dataset . Default ( None ) uses the standard line color sequence ."
matplotlib.axes.Axes.hist,cumulative,"If True , then a histogram is computed where each bin gives the counts in that bin plus all bins for smaller values . The last bin gives the total number of datapoints . If normed is also True then the histogram is normalized such that the last bin equals 1 . If cumulative evaluates to less than 0 ( e.g. , - 1 ) , the direction of accumulation is reversed . In this case , if normed is also True , then the histogram is normalized such that the first bin equals 1 .|||If True , then a histogram is computed where each bin gives the counts in that bin plus all bins for smaller values ."
matplotlib.axes.Axes.hist,hatch,Set the hatching pattern
matplotlib.axes.Axes.hist,histtype,The type of histogram to draw .
matplotlib.axes.Axes.hist,label,"String , or sequence of strings to match multiple datasets . Bar charts yield multiple patches per dataset , but only the first gets the label , so that the legend command will work as expected .|||String , or sequence of strings to match multiple datasets ."
matplotlib.axes.Axes.hist,linestyle,Set the patch linestyle
matplotlib.axes.Axes.hist,log,"If True , the histogram axis will be set to a log scale . If log is True and x is a 1D array , empty bins will be filtered out and only the non-empty ( n , bins , patches ) will be returned .|||If True , the histogram axis will be set to a log scale ."
matplotlib.axes.Axes.hist,n,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Compute and draw the histogram of x ."
matplotlib.axes.Axes.hist,n0,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Compute and draw the histogram of x ."
matplotlib.axes.Axes.hist,n1,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Compute and draw the histogram of x ."
matplotlib.axes.Axes.hist,normed,"If True , the first element of the return tuple will be the counts normalized to form a probability density , i.e. , n/(len(x)`dbin ) , i.e. , the integral of the histogram will sum to 1 . If stacked is also True , the sum of the histograms is normalized to 1 .|||If True , the first element of the return tuple will be the counts normalized to form a probability density , i.e. , n/(len(x)`dbin ) , i.e. , the integral of the histogram will sum to 1 ."
matplotlib.axes.Axes.hist,orientation,"If ' horizontal ' , barh will be used for bar-type histograms and the bottom kwarg will be the left edges ."
matplotlib.axes.Axes.hist,patches,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Compute and draw the histogram of x ."
matplotlib.axes.Axes.hist,patches0,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Compute and draw the histogram of x ."
matplotlib.axes.Axes.hist,patches1,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Compute and draw the histogram of x ."
matplotlib.axes.Axes.hist,range,"The lower and upper range of the bins .|||The lower and upper range of the bins . Lower and upper outliers are ignored . If not provided , range is ( x.min ( ) , x.max ( ) ) . Range has no effect if bins is a sequence ."
matplotlib.axes.Axes.hist,rwidth,"The relative width of the bars as a fraction of the bin width . If None , automatically compute the width .|||The relative width of the bars as a fraction of the bin width ."
matplotlib.axes.Axes.hist,stacked,"If True , multiple data are stacked on top of each other If False multiple data are aranged side by side if histtype is ' bar ' or on top of each other if histtype is ' step '"
matplotlib.axes.Axes.hist,weights,"An array of weights , of the same shape as x. Each value in x only contributes its associated weight towards the bin count ( instead of 1 ) .|||An array of weights , of the same shape as x. Each value in x only contributes its associated weight towards the bin count ( instead of 1 ) . If normed is True , the weights are normalized , so that the integral of the density over the range remains 1 ."
matplotlib.axes.Axes.hist,x,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ... ] ) , or as a 2-D ndarray in which each column is a dataset . Note that the ndarray form is transposed relative to the list form .|||Compute and draw the histogram of x .|||Multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ...|||Input values , this takes either a single array or a sequency of arrays which are not required to be of the same length"
matplotlib.axes.Axes.hist,x0,"Multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ...|||Multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ... ] ) , or as a 2-D ndarray in which each column is a dataset . Note that the ndarray form is transposed relative to the list form ."
matplotlib.axes.Axes.hist,x1,"Multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ...|||Multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ... ] ) , or as a 2-D ndarray in which each column is a dataset . Note that the ndarray form is transposed relative to the list form ."
matplotlib.axes.Axes.hist2d,"bins: [None | int | [int, int] | array_like | [array, array]]",The bin specification :
matplotlib.axes.Axes.hist2d,cmax,All bins that has count more than cmax will not be displayed ( set to none before passing to imshow ) and these count values in the return value count histogram will also be set to nan upon return
matplotlib.axes.Axes.hist2d,cmin,All bins that has count less than cmin will not be displayed and these count values in the return value count histogram will also be set to nan upon return
matplotlib.axes.Axes.hist2d,normed,Normalize histogram .
matplotlib.axes.Axes.hist2d,range,"The leftmost and rightmost edges of the bins along each dimension ( if not specified explicitly in the bins parameters ) :[ [ xmin , xmax ] , [ ymin , ymax ] ] . All values outside of this range will be considered outliers and not tallied in the histogram .|||The leftmost and rightmost edges of the bins along each dimension ( if not specified explicitly in the bins parameters ) :[ [ xmin , xmax ] , [ ymin , ymax ] ] ."
matplotlib.axes.Axes.hist2d,weights,"An array of values w_i weighing each sample ( x_i , y_i ) ."
matplotlib.axes.Axes.hist2d,"x, y: array_like, shape (n, )",Input values
matplotlib.axes.Axes.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.axes.Axes.hlines,alpha,Set the alpha tranparencies of the collection .
matplotlib.axes.Axes.hlines,array,Set the image array from numpy array A
matplotlib.axes.Axes.hlines,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.axes.Axes.hlines,color,Set the color(s ) of the line collection .
matplotlib.axes.Axes.hlines,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.hlines,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.axes.Axes.hlines,facecolor,Set the facecolor(s ) of the collection .
matplotlib.axes.Axes.hlines,hatch,Set the hatching pattern
matplotlib.axes.Axes.hlines,label,Set the label to s for auto legend .
matplotlib.axes.Axes.hlines,linestyle,Set the linestyle(s ) for the collection .
matplotlib.axes.Axes.hlines,linewidth,Set the linewidth(s ) for the collection .
matplotlib.axes.Axes.hlines,offset_position,Set how offsets are applied .
matplotlib.axes.Axes.hlines,offsets,Set the offsets for the collection .
matplotlib.axes.Axes.hlines,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.hlines,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.hlines,"xmin, xmax","Respective beginning and end of each line . If scalars are provided , all lines will have same length .|||Respective beginning and end of each line ."
matplotlib.axes.Axes.hlines,y,y-indexes where to plot the lines .
matplotlib.axes.Axes.hold,b,"Set the hold state .|||Set the hold state . If hold is None ( default ) , toggle the hold state . Else set the hold state to boolean value b ."
matplotlib.axes.Axes.hold,hold,"Set the hold state .|||Set the hold state . If hold is None ( default ) , toggle the hold state . Else set the hold state to boolean value b ."
matplotlib.axes.Axes.imshow,X,"Display the image in X to current axes . X may be a float array , a uint8 array or a PIL image . If X is an array , it can have the following shapes :|||Display the image in X to current axes ."
matplotlib.axes.Axes.imshow,alpha,"The alpha blending value , between 0 ( transparent ) and 1 ( opaque )"
matplotlib.axes.Axes.imshow,aspect,"If ' auto ' , changes the image aspect ratio to match that of the axes ."
matplotlib.axes.Axes.imshow,cmap,"If None , default to rc image.cmap value .|||If None , default to rc image.cmap value . cmap is ignored when X has RGB(A ) information"
matplotlib.axes.Axes.imshow,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.imshow,extent,"The location , in data-coordinates , of the lower-left and upper-right corners . If None , the image is positioned such that the pixel centers fall on zero-based ( row , column ) indices .|||The location , in data-coordinates , of the lower-left and upper-right corners ."
matplotlib.axes.Axes.imshow,filternorm,"A parameter for the antigrain image resize filter . From the antigrain documentation , if filternorm = 1 , the filter normalizes integer values and corrects the rounding errors . It does n't do anything with the source floating point values , it corrects only integers according to the rule of 1.0 which means that any sum of pixel weights must be equal to 1.0 . So , the filter function must produce a graph of the proper shape .|||A parameter for the antigrain image resize filter ."
matplotlib.axes.Axes.imshow,filterrad,"The filter radius for filters that have a radius parameter , i.e. when interpolation is one of : ' sinc ' , ' lanczos ' or ' blackman '"
matplotlib.axes.Axes.imshow,interpolation,"Acceptable values are ' none ' , ' nearest ' , ' bilinear ' , ' bicubic ' , ' spline16 ' , ' spline36 ' , ' hanning ' , ' hamming ' , ' hermite ' , ' kaiser ' , ' quadric ' , ' catrom ' , ' gaussian ' , ' bessel ' , ' mitchell ' , ' sinc ' , ' lanczos '"
matplotlib.axes.Axes.imshow,label,Set the label to s for auto legend .
matplotlib.axes.Axes.imshow,norm,"A Normalize instance is used to scale luminance data to 0 , 1 . If None , use the default func:normalize . norm is only used if X is an array of floats .|||A Normalize instance is used to scale luminance data to 0 , 1 ."
matplotlib.axes.Axes.imshow,origin,"Place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes .|||Place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes . If None , default to rc image.origin ."
matplotlib.axes.Axes.imshow,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.imshow,shape,For raw buffer images
matplotlib.axes.Axes.imshow,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.imshow,"vmin, vmax","vmin and vmax are used in conjunction with norm to normalize luminance data .|||vmin and vmax are used in conjunction with norm to normalize luminance data . Note if you pass a norm instance , your settings for vmin and vmax will be ignored ."
matplotlib.axes.Axes.in_axes,mouseevent,Return True if the given mouseevent ( in display coords ) is in the Axes
matplotlib.axes.Axes.legend,*markerfirst*: [ *True* | *False* ],"if True , legend marker is placed to the left of the legend label if False , legend marker is placed to the right of the legend label"
matplotlib.axes.Axes.legend,bbox_to_anchor,Specify any arbitrary location for the legend in bbox_transform coordinates ( default Axes coordinates ) .
matplotlib.axes.Axes.legend,bbox_transform,The transform for the bounding box ( bbox_to_anchor ) .|||The transform for the bounding box ( bbox_to_anchor ) . For a value of None ( default ) the Axes ' transAxes transform will be used .
matplotlib.axes.Axes.legend,borderaxespad,The pad between the axes and legend border . Measured in font-size units . Default is None which will take the value from the legend.borderaxespad rcParam .|||The pad between the axes and legend border .
matplotlib.axes.Axes.legend,borderpad,The fractional whitespace inside the legend border . Measured in font-size units . Default is None which will take the value from the legend.borderpad rcParam .|||The fractional whitespace inside the legend border .
matplotlib.axes.Axes.legend,columnspacing,The spacing between columns .|||The spacing between columns . Measured in font-size units . Default is None which will take the value from the legend.columnspacing rcParam .
matplotlib.axes.Axes.legend,fancybox,Control whether round edges should be enabled around the FancyBboxPatch which makes up the legend 's background .|||Control whether round edges should be enabled around the FancyBboxPatch which makes up the legend 's background . Default is None which will take the value from the legend.fancybox rcParam .
matplotlib.axes.Axes.legend,fontsize,Controls the font size of the legend . If the value is numeric the size will be the absolute font size in points . String values are relative to the current default font size . This argument is only used if prop is not specified .|||Controls the font size of the legend .
matplotlib.axes.Axes.legend,framealpha,Control the alpha transparency of the legend 's frame . Default is None which will take the value from the legend.framealpha rcParam .|||Control the alpha transparency of the legend 's frame .
matplotlib.axes.Axes.legend,frameon,Control whether a frame should be drawn around the legend . Default is None which will take the value from the legend.frameon rcParam .|||Control whether a frame should be drawn around the legend .
matplotlib.axes.Axes.legend,handlelength,The length of the legend handles . Measured in font-size units . Default is None which will take the value from the legend.handlelength rcParam .|||The length of the legend handles .
matplotlib.axes.Axes.legend,handler_map,The custom dictionary mapping instances or types to a legend handler . This handler_map updates the default handler map found at matplotlib.legend.Legend.get_legend_handler_map ( ) .|||The custom dictionary mapping instances or types to a legend handler .
matplotlib.axes.Axes.legend,handletextpad,The pad between the legend handle and text . Measured in font-size units . Default is None which will take the value from the legend.handletextpad rcParam .|||The pad between the legend handle and text .
matplotlib.axes.Axes.legend,labelspacing,The vertical space between the legend entries . Measured in font-size units . Default is None which will take the value from the legend.labelspacing rcParam .|||The vertical space between the legend entries .
matplotlib.axes.Axes.legend,loc,The location of the legend . Possible codes are :|||The location of the legend .
matplotlib.axes.Axes.legend,markerscale,The relative size of legend markers compared with the originally drawn ones .|||The relative size of legend markers compared with the originally drawn ones . Default is None which will take the value from the legend.markerscale rcParam .
matplotlib.axes.Axes.legend,mode,"If mode is set to "" expand "" the legend will be horizontally expanded to fill the axes area ( or bbox_to_anchor if defines the legend 's size ) ."
matplotlib.axes.Axes.legend,ncol,The number of columns that the legend has .|||The number of columns that the legend has . Default is 1 .
matplotlib.axes.Axes.legend,numpoints,The number of marker points in the legend when creating a legend entry for a line/matplotlib.lines.Line2D .|||The number of marker points in the legend when creating a legend entry for a line/matplotlib.lines.Line2D . Default is None which will take the value from the legend.numpoints rcParam .
matplotlib.axes.Axes.legend,prop,"The font properties of the legend . If None ( default ) , the current matplotlib.rcParams will be used .|||The font properties of the legend ."
matplotlib.axes.Axes.legend,scatterpoints,The number of marker points in the legend when creating a legend entry for a scatter plot/ matplotlib.collections.PathCollection .|||The number of marker points in the legend when creating a legend entry for a scatter plot/ matplotlib.collections.PathCollection . Default is None which will take the value from the legend.scatterpoints rcParam .
matplotlib.axes.Axes.legend,scatteryoffsets,"The vertical offset ( relative to the font size ) for the markers created for a scatter plot legend entry .|||The vertical offset ( relative to the font size ) for the markers created for a scatter plot legend entry . 0.0 is at the base the legend text , and 1.0 is at the top . To draw all markers at the same height , set to [ 0.5 ] . Default [ 0.375 , 0.5 , 0.3125 ] ."
matplotlib.axes.Axes.legend,shadow,Control whether to draw a shadow behind the legend .|||Control whether to draw a shadow behind the legend . Default is None which will take the value from the legend.shadow rcParam .
matplotlib.axes.Axes.legend,title,The legend 's title . Default is no title ( None ) .|||The legend 's title .
matplotlib.axes.Axes.locator_params,params,Set parameters within this locator .
matplotlib.axes.Axes.loglog,None,"The location of the minor x /y ticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see matplotlib.axes.Axes.set_xscale ( ) / matplotlib.axes.Axes.set_yscale ( ) for details"
matplotlib.axes.Axes.loglog,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.loglog,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.loglog,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.loglog,anchor,anchor
matplotlib.axes.Axes.loglog,animated,Set the artist 's animation state .
matplotlib.axes.Axes.loglog,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.loglog,args,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :"
matplotlib.axes.Axes.loglog,aspect,aspect
matplotlib.axes.Axes.loglog,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.loglog,basex,Base of the x /y logarithm
matplotlib.axes.Axes.loglog,basey,Base of the x /y logarithm
matplotlib.axes.Axes.loglog,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.loglog,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.loglog,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.loglog,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.loglog,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.loglog,color,Set the color of the line
matplotlib.axes.Axes.loglog,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.loglog,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.loglog,cursor_props,Set the cursor property as
matplotlib.axes.Axes.loglog,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.loglog,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.loglog,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.loglog,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.loglog,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.loglog,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.loglog,fmt,"If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :"
matplotlib.axes.Axes.loglog,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.loglog,hatch,Set the hatching pattern
matplotlib.axes.Axes.loglog,label,Set the label to s for auto legend .
matplotlib.axes.Axes.loglog,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.loglog,linewidth,Set the line width in points
matplotlib.axes.Axes.loglog,marker,Set the line marker
matplotlib.axes.Axes.loglog,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.loglog,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.loglog,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.loglog,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.loglog,markersize,Set the marker size in points
matplotlib.axes.Axes.loglog,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.loglog,nonposx,"Non-positive values in x or y can be masked as invalid , or clipped to a very small positive number"
matplotlib.axes.Axes.loglog,nonposy,"Non-positive values in x or y can be masked as invalid , or clipped to a very small positive number"
matplotlib.axes.Axes.loglog,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.loglog,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.loglog,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.loglog,position,Set the axes position with
matplotlib.axes.Axes.loglog,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.loglog,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.loglog,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.loglog,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.loglog,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||Autoscale the view limits using the data limits ."
matplotlib.axes.Axes.loglog,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.loglog,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.loglog,snap,Sets the snap setting which may be
matplotlib.axes.Axes.loglog,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.loglog,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.loglog,subsx,"The location of the minor x /y ticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see matplotlib.axes.Axes.set_xscale ( ) / matplotlib.axes.Axes.set_yscale ( ) for details"
matplotlib.axes.Axes.loglog,subsy,"The location of the minor x /y ticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see matplotlib.axes.Axes.set_xscale ( ) / matplotlib.axes.Axes.set_yscale ( ) for details"
matplotlib.axes.Axes.loglog,title,Set a title for the axes .
matplotlib.axes.Axes.loglog,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.loglog,url,Sets the url for the artist
matplotlib.axes.Axes.loglog,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.loglog,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.loglog,x,"Make a plot with log scaling on both the x and y axis .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.loglog,xdata,Set the data np.array for x
matplotlib.axes.Axes.loglog,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.loglog,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.loglog,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.loglog,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.loglog,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.loglog,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.loglog,y,"Make a plot with log scaling on both the x and y axis .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.loglog,ydata,Set the data np.array for y
matplotlib.axes.Axes.loglog,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.loglog,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.loglog,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.loglog,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.loglog,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.loglog,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.loglog,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.magnitude_spectrum,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.axes.Axes.magnitude_spectrum,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.magnitude_spectrum,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.magnitude_spectrum,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.magnitude_spectrum,anchor,anchor
matplotlib.axes.Axes.magnitude_spectrum,animated,Set the artist 's animation state .
matplotlib.axes.Axes.magnitude_spectrum,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.magnitude_spectrum,aspect,aspect
matplotlib.axes.Axes.magnitude_spectrum,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.magnitude_spectrum,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.magnitude_spectrum,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.magnitude_spectrum,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.magnitude_spectrum,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.magnitude_spectrum,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.magnitude_spectrum,color,Set the color of the line
matplotlib.axes.Axes.magnitude_spectrum,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.magnitude_spectrum,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.magnitude_spectrum,cursor_props,Set the cursor property as
matplotlib.axes.Axes.magnitude_spectrum,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.magnitude_spectrum,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.magnitude_spectrum,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.magnitude_spectrum,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.magnitude_spectrum,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.magnitude_spectrum,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.magnitude_spectrum,freqs,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.axes.Axes.magnitude_spectrum,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.magnitude_spectrum,hatch,Set the hatching pattern
matplotlib.axes.Axes.magnitude_spectrum,label,Set the label to s for auto legend .
matplotlib.axes.Axes.magnitude_spectrum,line,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.axes.Axes.magnitude_spectrum,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.magnitude_spectrum,linewidth,Set the line width in points
matplotlib.axes.Axes.magnitude_spectrum,marker,Set the line marker
matplotlib.axes.Axes.magnitude_spectrum,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.magnitude_spectrum,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.magnitude_spectrum,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.magnitude_spectrum,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.magnitude_spectrum,markersize,Set the marker size in points
matplotlib.axes.Axes.magnitude_spectrum,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.magnitude_spectrum,pad_to,Compute the magnitude spectrum of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the magnitude spectrum of x .
matplotlib.axes.Axes.magnitude_spectrum,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.magnitude_spectrum,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.magnitude_spectrum,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.magnitude_spectrum,position,Set the axes position with
matplotlib.axes.Axes.magnitude_spectrum,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.magnitude_spectrum,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.magnitude_spectrum,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.magnitude_spectrum,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.axes.Axes.magnitude_spectrum,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.magnitude_spectrum,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.magnitude_spectrum,snap,Sets the snap setting which may be
matplotlib.axes.Axes.magnitude_spectrum,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.magnitude_spectrum,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.magnitude_spectrum,spectrum,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.axes.Axes.magnitude_spectrum,title,Set a title for the axes .
matplotlib.axes.Axes.magnitude_spectrum,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.magnitude_spectrum,url,Sets the url for the artist
matplotlib.axes.Axes.magnitude_spectrum,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.magnitude_spectrum,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.magnitude_spectrum,window,"A function or a vector of length NFFT .|||Compute the magnitude spectrum of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment .|||Compute the magnitude spectrum of x ."
matplotlib.axes.Axes.magnitude_spectrum,x,Compute the magnitude spectrum of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the magnitude spectrum of x .
matplotlib.axes.Axes.magnitude_spectrum,xdata,Set the data np.array for x
matplotlib.axes.Axes.magnitude_spectrum,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.magnitude_spectrum,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.magnitude_spectrum,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.magnitude_spectrum,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.magnitude_spectrum,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.magnitude_spectrum,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.magnitude_spectrum,ydata,Set the data np.array for y
matplotlib.axes.Axes.magnitude_spectrum,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.magnitude_spectrum,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.magnitude_spectrum,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.magnitude_spectrum,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.magnitude_spectrum,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.magnitude_spectrum,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.magnitude_spectrum,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.margins,tight,"All three forms above set the xmargin and ymargin parameters .|||All three forms above set the xmargin and ymargin parameters . All keyword parameters are optional . A single argument specifies both xmargin and ymargin . The tight parameter is passed to autoscale_view ( ) , which is executed after a margin is changed ; the default here is True , on the assumption that when margins are specified , no additional padding to match tick marks is usually desired . Setting tight to None will preserve the previous setting ."
matplotlib.axes.Axes.margins,xmargin,"Specifying any margin changes only the autoscaling ; for example , if xmargin is not None , then xmargin times the X data interval will be added to each end of that interval before it is used in autoscaling ."
matplotlib.axes.Axes.matshow,X,"Display the image in X to current axes . X may be a float array , a uint8 array or a PIL image . If X is an array , it can have the following shapes :|||Display the image in X to current axes ."
matplotlib.axes.Axes.matshow,Z,The matrix to be displayed .
matplotlib.axes.Axes.matshow,alpha,"The alpha blending value , between 0 ( transparent ) and 1 ( opaque )"
matplotlib.axes.Axes.matshow,aspect,"If ' auto ' , changes the image aspect ratio to match that of the axes ."
matplotlib.axes.Axes.matshow,cmap,"If None , default to rc image.cmap value .|||If None , default to rc image.cmap value . cmap is ignored when X has RGB(A ) information"
matplotlib.axes.Axes.matshow,extent,"The location , in data-coordinates , of the lower-left and upper-right corners . If None , the image is positioned such that the pixel centers fall on zero-based ( row , column ) indices .|||The location , in data-coordinates , of the lower-left and upper-right corners ."
matplotlib.axes.Axes.matshow,filternorm,"A parameter for the antigrain image resize filter . From the antigrain documentation , if filternorm = 1 , the filter normalizes integer values and corrects the rounding errors . It does n't do anything with the source floating point values , it corrects only integers according to the rule of 1.0 which means that any sum of pixel weights must be equal to 1.0 . So , the filter function must produce a graph of the proper shape .|||A parameter for the antigrain image resize filter ."
matplotlib.axes.Axes.matshow,filterrad,"The filter radius for filters that have a radius parameter , i.e. when interpolation is one of : ' sinc ' , ' lanczos ' or ' blackman '"
matplotlib.axes.Axes.matshow,interpolation,"Acceptable values are ' none ' , ' nearest ' , ' bilinear ' , ' bicubic ' , ' spline16 ' , ' spline36 ' , ' hanning ' , ' hamming ' , ' hermite ' , ' kaiser ' , ' quadric ' , ' catrom ' , ' gaussian ' , ' bessel ' , ' mitchell ' , ' sinc ' , ' lanczos '"
matplotlib.axes.Axes.matshow,kwargs,"Sets origin to ' upper ' , ' interpolation ' to ' nearest ' and ' aspect ' to equal ."
matplotlib.axes.Axes.matshow,norm,"A Normalize instance is used to scale luminance data to 0 , 1 . If None , use the default func:normalize . norm is only used if X is an array of floats .|||A Normalize instance is used to scale luminance data to 0 , 1 ."
matplotlib.axes.Axes.matshow,origin,"Place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes .|||Place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes . If None , default to rc image.origin ."
matplotlib.axes.Axes.matshow,shape,For raw buffer images
matplotlib.axes.Axes.matshow,"vmin, vmax","vmin and vmax are used in conjunction with norm to normalize luminance data .|||vmin and vmax are used in conjunction with norm to normalize luminance data . Note if you pass a norm instance , your settings for vmin and vmax will be ignored ."
matplotlib.axes.Axes.pcolor,C,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X , Y and C may be masked arrays . If either C[i , j ] , or one of the vertices surrounding C[i,j ] ( X or Y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||C is the array of color values .|||MATLAB pcolor ( ) always discards the last row and column of C , but matplotlib displays the last row and column if X and Y are not specified , or if X and Y have one more row and column than C .|||X , Y and C may be masked arrays .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||Ideally the dimensions of X and Y should be one greater than those of C ; if the dimensions are the same , then the last row and column of C will be ignored ."
matplotlib.axes.Axes.pcolor,C*(*y,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed ."
matplotlib.axes.Axes.pcolor,None,"If None , the rc setting is used by default . If ' none ' , edges will not be visible . An mpl color or sequence of colors will set the edge color|||the alpha blending value|||vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||A matplotlib.colors.Colormap instance . If None , use rc settings .|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( ) .|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 .|||vmin and vmax are used in conjunction with norm to normalize luminance data .|||If None , the rc setting is used by default .|||A matplotlib.colors.Colormap instance ."
matplotlib.axes.Axes.pcolor,X,"If either or both of X and Y are 1-D arrays or column vectors , they will be expanded as needed into the appropriate 2-D arrays , making a rectangular grid .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X , Y and C may be masked arrays . If either C[i , j ] , or one of the vertices surrounding C[i,j ] ( X or Y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :|||MATLAB pcolor ( ) always discards the last row and column of C , but matplotlib displays the last row and column if X and Y are not specified , or if X and Y have one more row and column than C .|||X , Y and C may be masked arrays .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||Ideally the dimensions of X and Y should be one greater than those of C ; if the dimensions are the same , then the last row and column of C will be ignored ."
matplotlib.axes.Axes.pcolor,Y,"If either or both of X and Y are 1-D arrays or column vectors , they will be expanded as needed into the appropriate 2-D arrays , making a rectangular grid .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X , Y and C may be masked arrays . If either C[i , j ] , or one of the vertices surrounding C[i,j ] ( X or Y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :|||MATLAB pcolor ( ) always discards the last row and column of C , but matplotlib displays the last row and column if X and Y are not specified , or if X and Y have one more row and column than C .|||X , Y and C may be masked arrays .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||Ideally the dimensions of X and Y should be one greater than those of C ; if the dimensions are the same , then the last row and column of C will be ignored ."
matplotlib.axes.Axes.pcolor,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.pcolor,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.pcolor,alpha,the alpha blending value|||Set the alpha tranparencies of the collection .
matplotlib.axes.Axes.pcolor,anchor,anchor
matplotlib.axes.Axes.pcolor,animated,Set the artist 's animation state .
matplotlib.axes.Axes.pcolor,antialiased,Set the antialiasing state for rendering .
matplotlib.axes.Axes.pcolor,array,Set the image array from numpy array A
matplotlib.axes.Axes.pcolor,aspect,aspect
matplotlib.axes.Axes.pcolor,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.pcolor,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.axes.Axes.pcolor,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.pcolor,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.pcolor,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.pcolor,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.pcolor,cmap,"set the colormap for luminance data|||A matplotlib.colors.Colormap instance .|||A matplotlib.colors.Colormap instance . If None , use rc settings ."
matplotlib.axes.Axes.pcolor,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.pcolor,color,Set both the edgecolor and the facecolor .
matplotlib.axes.Axes.pcolor,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.pcolor,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.pcolor,cursor_props,Set the cursor property as
matplotlib.axes.Axes.pcolor,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.axes.Axes.pcolor,edgecolors,"If None , the rc setting is used by default . If ' none ' , edges will not be visible . An mpl color or sequence of colors will set the edge color|||If None , the rc setting is used by default ."
matplotlib.axes.Axes.pcolor,facecolor,Set the facecolor(s ) of the collection .
matplotlib.axes.Axes.pcolor,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.pcolor,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.pcolor,hatch,Set the hatching pattern
matplotlib.axes.Axes.pcolor,label,Set the label to s for auto legend .
matplotlib.axes.Axes.pcolor,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.axes.Axes.pcolor,linewidth,Set the linewidth(s ) for the collection .
matplotlib.axes.Axes.pcolor,ncolumns,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed ."
matplotlib.axes.Axes.pcolor,norm,"set the normalization instance|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( ) .|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 ."
matplotlib.axes.Axes.pcolor,nrows,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed ."
matplotlib.axes.Axes.pcolor,offset_position,Set how offsets are applied .
matplotlib.axes.Axes.pcolor,offsets,Set the offsets for the collection .
matplotlib.axes.Axes.pcolor,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.pcolor,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.pcolor,position,Set the axes position with
matplotlib.axes.Axes.pcolor,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.pcolor,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.pcolor,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.pcolor,shading,"If ' faceted ' , a black grid is drawn around each rectangle ; if ' flat ' , edges are not drawn . Default is ' flat ' , contrary to MATLAB . This kwarg is deprecated ; please use ' edgecolors ' instead : shading='flat ' - - edgecolors='none ' shading='faceted - - edgecolors='k '|||If ' faceted ' , a black grid is drawn around each rectangle ; if ' flat ' , edges are not drawn ."
matplotlib.axes.Axes.pcolor,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.pcolor,sizes,Set the sizes of each member of the collection .
matplotlib.axes.Axes.pcolor,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.pcolor,snap,Whether to snap the mesh to pixel boundaries .|||Sets the snap setting which may be
matplotlib.axes.Axes.pcolor,title,Set a title for the axes .
matplotlib.axes.Axes.pcolor,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.pcolor,url,Sets the url for the artist
matplotlib.axes.Axes.pcolor,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.pcolor,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.pcolor,vmax,"vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.axes.Axes.pcolor,vmin,"vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.axes.Axes.pcolor,x,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||Note that the column index corresponds to the x - coordinate , and the row index corresponds to y ; for details , see the Grid Orientation section below .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :"
matplotlib.axes.Axes.pcolor,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.pcolor,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.pcolor,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.pcolor,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.pcolor,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.pcolor,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.pcolor,y,"Note that the column index corresponds to the x - coordinate , and the row index corresponds to y ; for details , see the Grid Orientation section below .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :"
matplotlib.axes.Axes.pcolor,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.pcolor,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.pcolor,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.pcolor,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.pcolor,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.pcolor,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.pcolor,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.pcolorfast,C,"xr , yr specify the ranges of x and y corresponding to the rectangular region bounding C . If :|||then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . All cells are rectangles of the same size . This is the fastest version .|||xr , yr specify the ranges of x and y corresponding to the rectangular region bounding C .|||then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) ."
matplotlib.axes.Axes.pcolorfast,None,"the alpha blending value|||A matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 .|||A matplotlib.colors.Colormap instance from cm . If None , use rc settings .|||vmin and vmax are used in conjunction with norm to normalize luminance data . If either are None , the min and max of the color array C is used . If you pass a norm instance , vmin and vmax will be None .|||A matplotlib.colors.Colormap instance from cm .|||vmin and vmax are used in conjunction with norm to normalize luminance data .|||A matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( )"
matplotlib.axes.Axes.pcolorfast,X,"X and Y are 2D arrays with shape ( nr + 1 , nc + 1 ) that specify the ( x,y ) coordinates of the corners of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at ( X[i,j],Y[i,j ] ) , ( X[i,j+1],Y[i,j+1 ] ) , ( X[i+1,j],Y[i+1,j ] ) , ( X[i+1,j+1],Y[i+1,j+1 ] ) . The cells need not be rectangular . This is the most general , but the slowest to render . It may produce faster and more compact output using ps , pdf , and svg backends , however .|||X and Y are 2D arrays with shape ( nr + 1 , nc + 1 ) that specify the ( x,y ) coordinates of the corners of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at ( X[i,j],Y[i,j ] ) , ( X[i,j+1],Y[i,j+1 ] ) , ( X[i+1,j],Y[i+1,j ] ) , ( X[i+1,j+1],Y[i+1,j+1 ] ) ."
matplotlib.axes.Axes.pcolorfast,Y,"X and Y are 2D arrays with shape ( nr + 1 , nc + 1 ) that specify the ( x,y ) coordinates of the corners of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at ( X[i,j],Y[i,j ] ) , ( X[i,j+1],Y[i,j+1 ] ) , ( X[i+1,j],Y[i+1,j ] ) , ( X[i+1,j+1],Y[i+1,j+1 ] ) . The cells need not be rectangular . This is the most general , but the slowest to render . It may produce faster and more compact output using ps , pdf , and svg backends , however .|||X and Y are 2D arrays with shape ( nr + 1 , nc + 1 ) that specify the ( x,y ) coordinates of the corners of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at ( X[i,j],Y[i,j ] ) , ( X[i,j+1],Y[i,j+1 ] ) , ( X[i+1,j],Y[i+1,j ] ) , ( X[i+1,j+1],Y[i+1,j+1 ] ) ."
matplotlib.axes.Axes.pcolorfast,alpha,the alpha blending value
matplotlib.axes.Axes.pcolorfast,cmap,"A matplotlib.colors.Colormap instance from cm . If None , use rc settings .|||A matplotlib.colors.Colormap instance from cm ."
matplotlib.axes.Axes.pcolorfast,nc,"then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) .|||then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . All cells are rectangles of the same size . This is the fastest version .|||x , y are 1D arrays of length nc + 1 and nr + 1 , respectively , giving the x and y boundaries of the cells . Hence the cells are rectangular but the grid may be nonuniform . The speed is intermediate . ( The grid is checked , and if found to be uniform the fast version is used . )|||x , y are 1D arrays of length nc + 1 and nr + 1 , respectively , giving the x and y boundaries of the cells .|||X and Y are 2D arrays with shape ( nr + 1 , nc + 1 ) that specify the ( x,y ) coordinates of the corners of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at ( X[i,j],Y[i,j ] ) , ( X[i,j+1],Y[i,j+1 ] ) , ( X[i+1,j],Y[i+1,j ] ) , ( X[i+1,j+1],Y[i+1,j+1 ] ) . The cells need not be rectangular . This is the most general , but the slowest to render . It may produce faster and more compact output using ps , pdf , and svg backends , however .|||X and Y are 2D arrays with shape ( nr + 1 , nc + 1 ) that specify the ( x,y ) coordinates of the corners of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at ( X[i,j],Y[i,j ] ) , ( X[i,j+1],Y[i,j+1 ] ) , ( X[i+1,j],Y[i+1,j ] ) , ( X[i+1,j+1],Y[i+1,j+1 ] ) ."
matplotlib.axes.Axes.pcolorfast,norm,"A matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( )|||A matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 ."
matplotlib.axes.Axes.pcolorfast,nr,"then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) .|||then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . All cells are rectangles of the same size . This is the fastest version .|||x , y are 1D arrays of length nc + 1 and nr + 1 , respectively , giving the x and y boundaries of the cells . Hence the cells are rectangular but the grid may be nonuniform . The speed is intermediate . ( The grid is checked , and if found to be uniform the fast version is used . )|||x , y are 1D arrays of length nc + 1 and nr + 1 , respectively , giving the x and y boundaries of the cells .|||X and Y are 2D arrays with shape ( nr + 1 , nc + 1 ) that specify the ( x,y ) coordinates of the corners of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at ( X[i,j],Y[i,j ] ) , ( X[i,j+1],Y[i,j+1 ] ) , ( X[i+1,j],Y[i+1,j ] ) , ( X[i+1,j+1],Y[i+1,j+1 ] ) . The cells need not be rectangular . This is the most general , but the slowest to render . It may produce faster and more compact output using ps , pdf , and svg backends , however .|||X and Y are 2D arrays with shape ( nr + 1 , nc + 1 ) that specify the ( x,y ) coordinates of the corners of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at ( X[i,j],Y[i,j ] ) , ( X[i,j+1],Y[i,j+1 ] ) , ( X[i+1,j],Y[i+1,j ] ) , ( X[i+1,j+1],Y[i+1,j+1 ] ) ."
matplotlib.axes.Axes.pcolorfast,vmax,"vmin and vmax are used in conjunction with norm to normalize luminance data .|||vmin and vmax are used in conjunction with norm to normalize luminance data . If either are None , the min and max of the color array C is used . If you pass a norm instance , vmin and vmax will be None ."
matplotlib.axes.Axes.pcolorfast,vmin,"vmin and vmax are used in conjunction with norm to normalize luminance data .|||vmin and vmax are used in conjunction with norm to normalize luminance data . If either are None , the min and max of the color array C is used . If you pass a norm instance , vmin and vmax will be None ."
matplotlib.axes.Axes.pcolorfast,x,"xr , yr specify the ranges of x and y corresponding to the rectangular region bounding C .|||then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . All cells are rectangles of the same size . This is the fastest version .|||x , y are 1D arrays of length nc + 1 and nr + 1 , respectively , giving the x and y boundaries of the cells . Hence the cells are rectangular but the grid may be nonuniform . The speed is intermediate . ( The grid is checked , and if found to be uniform the fast version is used . )|||x , y are 1D arrays of length nc + 1 and nr + 1 , respectively , giving the x and y boundaries of the cells .|||xr , yr specify the ranges of x and y corresponding to the rectangular region bounding C . If :|||then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) ."
matplotlib.axes.Axes.pcolorfast,x0,"then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . All cells are rectangles of the same size . This is the fastest version .|||then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) ."
matplotlib.axes.Axes.pcolorfast,x1,"then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . All cells are rectangles of the same size . This is the fastest version .|||then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) ."
matplotlib.axes.Axes.pcolorfast,xr,"xr , yr specify the ranges of x and y corresponding to the rectangular region bounding C . If :|||xr , yr specify the ranges of x and y corresponding to the rectangular region bounding C ."
matplotlib.axes.Axes.pcolorfast,y,"xr , yr specify the ranges of x and y corresponding to the rectangular region bounding C . If :|||x , y are 1D arrays of length nc + 1 and nr + 1 , respectively , giving the x and y boundaries of the cells .|||x , y are 1D arrays of length nc + 1 and nr + 1 , respectively , giving the x and y boundaries of the cells . Hence the cells are rectangular but the grid may be nonuniform . The speed is intermediate . ( The grid is checked , and if found to be uniform the fast version is used . )|||xr , yr specify the ranges of x and y corresponding to the rectangular region bounding C ."
matplotlib.axes.Axes.pcolorfast,y0,"then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . All cells are rectangles of the same size . This is the fastest version .|||then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) ."
matplotlib.axes.Axes.pcolorfast,y1,"then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) . All cells are rectangles of the same size . This is the fastest version .|||then x goes from x0 to x1 as the second index of C goes from 0 to nc , etc. ( x0 , y0 ) is the outermost corner of cell ( 0,0 ) , and ( x1 , y1 ) is the outermost corner of cell ( nr - 1 , nc - 1 ) ."
matplotlib.axes.Axes.pcolorfast,yr,"xr , yr specify the ranges of x and y corresponding to the rectangular region bounding C . If :|||xr , yr specify the ranges of x and y corresponding to the rectangular region bounding C ."
matplotlib.axes.Axes.pcolormesh,C,"C may be a masked array , but X and Y may not . Masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .|||C may be a masked array , but X and Y may not ."
matplotlib.axes.Axes.pcolormesh,None,"the alpha blending value|||A matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 .|||vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||color sequence ] If None , the rc setting is used by default . If ' None ' , edges will not be visible . If ' face ' , edges will have the same color as the faces . An mpl color or sequence of colors will set the edge color|||A matplotlib.colors.Colormap instance . If None , use rc settings .|||vmin and vmax are used in conjunction with norm to normalize luminance data .|||A matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( ) .|||color sequence ]|||A matplotlib.colors.Colormap instance ."
matplotlib.axes.Axes.pcolormesh,X,"C may be a masked array , but X and Y may not . Masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .|||C may be a masked array , but X and Y may not ."
matplotlib.axes.Axes.pcolormesh,Y,"C may be a masked array , but X and Y may not . Masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .|||C may be a masked array , but X and Y may not ."
matplotlib.axes.Axes.pcolormesh,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.pcolormesh,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.pcolormesh,alpha,the alpha blending value|||Set the alpha tranparencies of the collection .
matplotlib.axes.Axes.pcolormesh,anchor,anchor
matplotlib.axes.Axes.pcolormesh,animated,Set the artist 's animation state .
matplotlib.axes.Axes.pcolormesh,antialiased,Set the antialiasing state for rendering .
matplotlib.axes.Axes.pcolormesh,array,Set the image array from numpy array A
matplotlib.axes.Axes.pcolormesh,aspect,aspect
matplotlib.axes.Axes.pcolormesh,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.pcolormesh,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.axes.Axes.pcolormesh,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.pcolormesh,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.pcolormesh,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.pcolormesh,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.pcolormesh,cmap,"C may be a masked array , but X and Y may not . Masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .|||set the colormap for luminance data|||A matplotlib.colors.Colormap instance . If None , use rc settings .|||A matplotlib.colors.Colormap instance .|||C may be a masked array , but X and Y may not ."
matplotlib.axes.Axes.pcolormesh,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.pcolormesh,color,Set both the edgecolor and the facecolor .
matplotlib.axes.Axes.pcolormesh,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.pcolormesh,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.pcolormesh,cursor_props,Set the cursor property as
matplotlib.axes.Axes.pcolormesh,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.axes.Axes.pcolormesh,edgecolors,"color sequence ] If None , the rc setting is used by default . If ' None ' , edges will not be visible . If ' face ' , edges will have the same color as the faces . An mpl color or sequence of colors will set the edge color|||color sequence ]"
matplotlib.axes.Axes.pcolormesh,facecolor,Set the facecolor(s ) of the collection .
matplotlib.axes.Axes.pcolormesh,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.pcolormesh,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.pcolormesh,hatch,Set the hatching pattern
matplotlib.axes.Axes.pcolormesh,label,Set the label to s for auto legend .
matplotlib.axes.Axes.pcolormesh,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.axes.Axes.pcolormesh,linewidth,Set the linewidth(s ) for the collection .
matplotlib.axes.Axes.pcolormesh,norm,"C may be a masked array , but X and Y may not . Masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .|||set the normalization instance|||A matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( ) .|||A matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 .|||C may be a masked array , but X and Y may not ."
matplotlib.axes.Axes.pcolormesh,offset_position,Set how offsets are applied .
matplotlib.axes.Axes.pcolormesh,offsets,Set the offsets for the collection .
matplotlib.axes.Axes.pcolormesh,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.pcolormesh,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.pcolormesh,position,Set the axes position with
matplotlib.axes.Axes.pcolormesh,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.pcolormesh,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.pcolormesh,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.pcolormesh,shading,"' flat ' indicates a solid color for each quad . When ' gouraud ' , each quad will be Gouraud shaded . When gouraud shading , edgecolors is ignored .|||' flat ' indicates a solid color for each quad ."
matplotlib.axes.Axes.pcolormesh,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.pcolormesh,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.pcolormesh,snap,Sets the snap setting which may be
matplotlib.axes.Axes.pcolormesh,title,Set a title for the axes .
matplotlib.axes.Axes.pcolormesh,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.pcolormesh,url,Sets the url for the artist
matplotlib.axes.Axes.pcolormesh,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.pcolormesh,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.pcolormesh,vmax,"vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.axes.Axes.pcolormesh,vmin,"vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.axes.Axes.pcolormesh,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.pcolormesh,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.pcolormesh,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.pcolormesh,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.pcolormesh,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.pcolormesh,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.pcolormesh,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.pcolormesh,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.pcolormesh,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.pcolormesh,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.pcolormesh,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.pcolormesh,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.pcolormesh,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.phase_spectrum,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.axes.Axes.phase_spectrum,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.phase_spectrum,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.phase_spectrum,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.phase_spectrum,anchor,anchor
matplotlib.axes.Axes.phase_spectrum,animated,Set the artist 's animation state .
matplotlib.axes.Axes.phase_spectrum,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.phase_spectrum,aspect,aspect
matplotlib.axes.Axes.phase_spectrum,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.phase_spectrum,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.phase_spectrum,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.phase_spectrum,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.phase_spectrum,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.phase_spectrum,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.phase_spectrum,color,Set the color of the line
matplotlib.axes.Axes.phase_spectrum,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.phase_spectrum,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.phase_spectrum,cursor_props,Set the cursor property as
matplotlib.axes.Axes.phase_spectrum,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.phase_spectrum,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.phase_spectrum,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.phase_spectrum,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.phase_spectrum,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.phase_spectrum,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.phase_spectrum,freqs,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.axes.Axes.phase_spectrum,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.phase_spectrum,hatch,Set the hatching pattern
matplotlib.axes.Axes.phase_spectrum,label,Set the label to s for auto legend .
matplotlib.axes.Axes.phase_spectrum,line,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.axes.Axes.phase_spectrum,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.phase_spectrum,linewidth,Set the line width in points
matplotlib.axes.Axes.phase_spectrum,marker,Set the line marker
matplotlib.axes.Axes.phase_spectrum,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.phase_spectrum,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.phase_spectrum,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.phase_spectrum,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.phase_spectrum,markersize,Set the marker size in points
matplotlib.axes.Axes.phase_spectrum,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.phase_spectrum,pad_to,Compute the phase spectrum ( unwrapped angle spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the phase spectrum ( unwrapped angle spectrum ) of x .
matplotlib.axes.Axes.phase_spectrum,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.phase_spectrum,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.phase_spectrum,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.phase_spectrum,position,Set the axes position with
matplotlib.axes.Axes.phase_spectrum,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.phase_spectrum,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.phase_spectrum,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.phase_spectrum,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.axes.Axes.phase_spectrum,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.phase_spectrum,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.phase_spectrum,snap,Sets the snap setting which may be
matplotlib.axes.Axes.phase_spectrum,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.phase_spectrum,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.phase_spectrum,spectrum,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.axes.Axes.phase_spectrum,title,Set a title for the axes .
matplotlib.axes.Axes.phase_spectrum,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.phase_spectrum,url,Sets the url for the artist
matplotlib.axes.Axes.phase_spectrum,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.phase_spectrum,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.phase_spectrum,window,"A function or a vector of length NFFT .|||Compute the phase spectrum ( unwrapped angle spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the phase spectrum ( unwrapped angle spectrum ) of x .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.axes.Axes.phase_spectrum,x,Compute the phase spectrum ( unwrapped angle spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the phase spectrum ( unwrapped angle spectrum ) of x .
matplotlib.axes.Axes.phase_spectrum,xdata,Set the data np.array for x
matplotlib.axes.Axes.phase_spectrum,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.phase_spectrum,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.phase_spectrum,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.phase_spectrum,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.phase_spectrum,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.phase_spectrum,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.phase_spectrum,ydata,Set the data np.array for y
matplotlib.axes.Axes.phase_spectrum,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.phase_spectrum,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.phase_spectrum,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.phase_spectrum,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.phase_spectrum,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.phase_spectrum,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.phase_spectrum,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.pie,False,"Specify fractions direction , clockwise or counterclockwise .|||Draw a shadow beneath the pie .|||Plot axes frame with the chart ."
matplotlib.axes.Axes.pie,None,"If not None , is a string or function used to label the wedges with their numeric value .|||If not None , is a string or function used to label the wedges with their numeric value . The label will be placed inside the wedge . If it is a format string , the label will be fmt%pct . If it is a function , it will be called .|||If not None , rotates the start of the pie chart by angle degrees counterclockwise from the x-axis .|||Dict of arguments passed to the wedge objects making the pie .|||If not None , is a len(x ) array which specifies the fraction of the radius with which to offset each wedge .|||Dict of arguments passed to the wedge objects making the pie . For example , you can pass in wedgeprops = { ' linewidth ' :3 } to set the width of the wedge border lines equal to 3 . For more details , look at the doc/arguments of the wedge object . By default clip_on=False .|||A sequence of strings providing the labels for each wedge|||A sequence of matplotlib color args through which the pie chart will cycle .|||If not None , rotates the start of the pie chart by angle|||Dict of arguments to pass to the text objects ."
matplotlib.axes.Axes.pie,True,"Specify fractions direction , clockwise or counterclockwise .|||Draw a shadow beneath the pie .|||Plot axes frame with the chart ."
matplotlib.axes.Axes.pie,autopct,"If not None , is a string or function used to label the wedges with their numeric value .|||If not None , is a string or function used to label the wedges with their numeric value . The label will be placed inside the wedge . If it is a format string , the label will be fmt%pct . If it is a function , it will be called ."
matplotlib.axes.Axes.pie,colors,A sequence of matplotlib color args through which the pie chart will cycle .
matplotlib.axes.Axes.pie,counterclock,"Specify fractions direction , clockwise or counterclockwise ."
matplotlib.axes.Axes.pie,explode,"If not None , is a len(x ) array which specifies the fraction of the radius with which to offset each wedge ."
matplotlib.axes.Axes.pie,frame,Plot axes frame with the chart .
matplotlib.axes.Axes.pie,labeldistance,The radial distance at which the pie labels are drawn
matplotlib.axes.Axes.pie,labels,A sequence of strings providing the labels for each wedge
matplotlib.axes.Axes.pie,pctdistance,The ratio between the center of each pie slice and the start of the text generated by autopct .|||The ratio between the center of each pie slice and the start of the text generated by autopct . Ignored if autopct is None ; default is 0.6 .
matplotlib.axes.Axes.pie,shadow,Draw a shadow beneath the pie .
matplotlib.axes.Axes.pie,startangle,"If not None , rotates the start of the pie chart by angle degrees counterclockwise from the x-axis .|||If not None , rotates the start of the pie chart by angle"
matplotlib.axes.Axes.pie,textprops,Dict of arguments to pass to the text objects .
matplotlib.axes.Axes.pie,wedgeprops,"Dict of arguments passed to the wedge objects making the pie . For example , you can pass in wedgeprops = { ' linewidth ' :3 } to set the width of the wedge border lines equal to 3 . For more details , look at the doc/arguments of the wedge object . By default clip_on=False .|||Dict of arguments passed to the wedge objects making the pie ."
matplotlib.axes.Axes.pie,x,"Make a pie chart of array x . The fractional area of each wedge is given by x/sum(x ) . If sum(x ) < = 1 , then the values of x give the fractional area directly and the array will not be normalized . The wedges are plotted counterclockwise , by default starting from the x-axis .|||Make a pie chart of array x ."
matplotlib.axes.Axes.plot,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.plot,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.plot,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.plot,anchor,anchor
matplotlib.axes.Axes.plot,animated,Set the artist 's animation state .
matplotlib.axes.Axes.plot,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.plot,args,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :"
matplotlib.axes.Axes.plot,aspect,aspect
matplotlib.axes.Axes.plot,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.plot,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.plot,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.plot,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.plot,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.plot,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.plot,color,Set the color of the line
matplotlib.axes.Axes.plot,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.plot,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.plot,cursor_props,Set the cursor property as
matplotlib.axes.Axes.plot,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.plot,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.plot,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.plot,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.plot,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.plot,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.plot,fmt,"If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :"
matplotlib.axes.Axes.plot,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.plot,hatch,Set the hatching pattern
matplotlib.axes.Axes.plot,label,Set the label to s for auto legend .
matplotlib.axes.Axes.plot,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.plot,linewidth,Set the line width in points
matplotlib.axes.Axes.plot,marker,Set the line marker
matplotlib.axes.Axes.plot,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.plot,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.plot,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.plot,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.plot,markersize,Set the marker size in points
matplotlib.axes.Axes.plot,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.plot,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.plot,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.plot,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.plot,position,Set the axes position with
matplotlib.axes.Axes.plot,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.plot,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.plot,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.plot,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.plot,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||Autoscale the view limits using the data limits ."
matplotlib.axes.Axes.plot,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.plot,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.plot,snap,Sets the snap setting which may be
matplotlib.axes.Axes.plot,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.plot,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.plot,title,Set a title for the axes .
matplotlib.axes.Axes.plot,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.plot,url,Sets the url for the artist
matplotlib.axes.Axes.plot,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.plot,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.plot,x,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted ."
matplotlib.axes.Axes.plot,xdata,Set the data np.array for x
matplotlib.axes.Axes.plot,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.plot,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.plot,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.plot,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.plot,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.plot,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.plot,y,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted ."
matplotlib.axes.Axes.plot,ydata,Set the data np.array for y
matplotlib.axes.Axes.plot,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.plot,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.plot,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.plot,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.plot,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.plot,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.plot,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.plot_date,False,"If True , the x - axis will be labeled with dates .|||If True , the y - axis will be labeled with dates ."
matplotlib.axes.Axes.plot_date,None,"The time zone to use in labeling dates . If None , defaults to rc value .|||The time zone to use in labeling dates ."
matplotlib.axes.Axes.plot_date,True,"If True , the x - axis will be labeled with dates .|||If True , the y - axis will be labeled with dates ."
matplotlib.axes.Axes.plot_date,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.plot_date,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.plot_date,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.plot_date,anchor,anchor
matplotlib.axes.Axes.plot_date,animated,Set the artist 's animation state .
matplotlib.axes.Axes.plot_date,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.plot_date,aspect,aspect
matplotlib.axes.Axes.plot_date,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.plot_date,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.plot_date,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.plot_date,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.plot_date,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.plot_date,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.plot_date,color,Set the color of the line
matplotlib.axes.Axes.plot_date,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.plot_date,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.plot_date,cursor_props,Set the cursor property as
matplotlib.axes.Axes.plot_date,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.plot_date,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.plot_date,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.plot_date,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.plot_date,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.plot_date,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.plot_date,fmt,The plot format string .
matplotlib.axes.Axes.plot_date,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.plot_date,hatch,Set the hatching pattern
matplotlib.axes.Axes.plot_date,label,Set the label to s for auto legend .
matplotlib.axes.Axes.plot_date,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.plot_date,linewidth,Set the line width in points
matplotlib.axes.Axes.plot_date,marker,Set the line marker
matplotlib.axes.Axes.plot_date,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.plot_date,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.plot_date,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.plot_date,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.plot_date,markersize,Set the marker size in points
matplotlib.axes.Axes.plot_date,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.plot_date,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.plot_date,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.plot_date,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.plot_date,position,Set the axes position with
matplotlib.axes.Axes.plot_date,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.plot_date,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.plot_date,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.plot_date,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.plot_date,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.plot_date,snap,Sets the snap setting which may be
matplotlib.axes.Axes.plot_date,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.plot_date,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.plot_date,title,Set a title for the axes .
matplotlib.axes.Axes.plot_date,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.plot_date,tz,"The time zone to use in labeling dates . If None , defaults to rc value .|||The time zone to use in labeling dates ."
matplotlib.axes.Axes.plot_date,url,Sets the url for the artist
matplotlib.axes.Axes.plot_date,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.plot_date,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.plot_date,x,"Similar to the plot ( ) command , except the x or y ( or both ) data is considered to be dates , and the axis is labeled accordingly .|||x and/or y can be a sequence of dates represented as float days since 0001-01-01 UTC ."
matplotlib.axes.Axes.plot_date,xdata,Set the data np.array for x
matplotlib.axes.Axes.plot_date,xdate,"If True , the x - axis will be labeled with dates ."
matplotlib.axes.Axes.plot_date,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.plot_date,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.plot_date,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.plot_date,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.plot_date,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.plot_date,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.plot_date,y,"Similar to the plot ( ) command , except the x or y ( or both ) data is considered to be dates , and the axis is labeled accordingly .|||x and/or y can be a sequence of dates represented as float days since 0001-01-01 UTC ."
matplotlib.axes.Axes.plot_date,ydata,Set the data np.array for y
matplotlib.axes.Axes.plot_date,ydate,"If True , the y - axis will be labeled with dates ."
matplotlib.axes.Axes.plot_date,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.plot_date,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.plot_date,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.plot_date,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.plot_date,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.plot_date,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.plot_date,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.psd,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.axes.Axes.psd,NFFT,"The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute , with a scaling to correct for power loss due to windowing .|||The power spectral density by Welch 's average periodogram method .|||If len(x ) < NFFT , it will be zero padded to NFFT ."
matplotlib.axes.Axes.psd,Pxx,"If return_line is False , returns the tuple ( Pxx , freqs ) . If return_line is True , returns the tuple ( Pxx , freqs . line ) :|||For plotting , the power is plotted as for decibels , though Pxx itself is returned .|||If return_line is False , returns the tuple ( Pxx , freqs ) ."
matplotlib.axes.Axes.psd,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.psd,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.psd,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.psd,anchor,anchor
matplotlib.axes.Axes.psd,animated,Set the artist 's animation state .
matplotlib.axes.Axes.psd,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.psd,aspect,aspect
matplotlib.axes.Axes.psd,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.psd,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.psd,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.psd,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.psd,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.psd,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.psd,color,Set the color of the line
matplotlib.axes.Axes.psd,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.psd,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.psd,cursor_props,Set the cursor property as
matplotlib.axes.Axes.psd,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.psd,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.psd,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.psd,detrend,"The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute , with a scaling to correct for power loss due to windowing .|||The power spectral density by Welch 's average periodogram method ."
matplotlib.axes.Axes.psd,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.psd,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.psd,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.psd,freqs,"If return_line is False , returns the tuple ( Pxx , freqs ) . If return_line is True , returns the tuple ( Pxx , freqs . line ) :|||If return_line is False , returns the tuple ( Pxx , freqs ) ."
matplotlib.axes.Axes.psd,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.psd,hatch,Set the hatching pattern
matplotlib.axes.Axes.psd,label,Set the label to s for auto legend .
matplotlib.axes.Axes.psd,line,"If return_line is False , returns the tuple ( Pxx , freqs ) . If return_line is True , returns the tuple ( Pxx , freqs . line ) :|||If return_line is False , returns the tuple ( Pxx , freqs ) ."
matplotlib.axes.Axes.psd,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.psd,linewidth,Set the line width in points
matplotlib.axes.Axes.psd,marker,Set the line marker
matplotlib.axes.Axes.psd,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.psd,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.psd,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.psd,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.psd,markersize,Set the marker size in points
matplotlib.axes.Axes.psd,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.psd,noverlap,"The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute , with a scaling to correct for power loss due to windowing .|||The power spectral density by Welch 's average periodogram method ."
matplotlib.axes.Axes.psd,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.psd,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.psd,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.psd,position,Set the axes position with
matplotlib.axes.Axes.psd,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.psd,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.psd,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.psd,return_line,"If return_line is False , returns the tuple ( Pxx , freqs ) . If return_line is True , returns the tuple ( Pxx , freqs . line ) :|||If return_line is False , returns the tuple ( Pxx , freqs ) ."
matplotlib.axes.Axes.psd,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.axes.Axes.psd,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.psd,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.psd,snap,Sets the snap setting which may be
matplotlib.axes.Axes.psd,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.psd,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.psd,title,Set a title for the axes .
matplotlib.axes.Axes.psd,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.psd,url,Sets the url for the artist
matplotlib.axes.Axes.psd,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.psd,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.psd,window,"A function or a vector of length NFFT .|||The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute , with a scaling to correct for power loss due to windowing .|||The power spectral density by Welch 's average periodogram method .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.axes.Axes.psd,x,"The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute , with a scaling to correct for power loss due to windowing .|||The power spectral density by Welch 's average periodogram method .|||If len(x ) < NFFT , it will be zero padded to NFFT ."
matplotlib.axes.Axes.psd,xdata,Set the data np.array for x
matplotlib.axes.Axes.psd,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.psd,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.psd,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.psd,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.psd,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.psd,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.psd,ydata,Set the data np.array for y
matplotlib.axes.Axes.psd,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.psd,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.psd,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.psd,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.psd,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.psd,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.psd,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.quiver,C,"U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.axes.Axes.quiver,None,"For example , if scale_units is ' inches ' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long . If scale_units is ' width ' , then the vector will be half the width of the axes . If scale_units is ' x ' then the vector will be 0.5 x-axis units . To plot vectors in the x-y plane , with u and v having the same units as x and y , use "" angles='xy ' , scale_units='xy ' , scale=1 "" .|||Data units per arrow length unit , e.g. , m/s per plot width ; a smaller scale parameter makes the arrow longer .|||Data units per arrow length unit , e.g. , m/s per plot width ; a smaller scale parameter makes the arrow longer . If None , a simple autoscaling algorithm is used , based on the average vector length and the number of vectors . The arrow length unit is given by the scale_units parameter|||For example , if scale_units is ' inches ' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long ."
matplotlib.axes.Axes.quiver,U,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.axes.Axes.quiver,V,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.axes.Axes.quiver,X,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.axes.Axes.quiver,Y,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.axes.Axes.quiver,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.quiver,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.quiver,alpha,Set the alpha tranparencies of the collection .
matplotlib.axes.Axes.quiver,anchor,anchor
matplotlib.axes.Axes.quiver,angles,"With the default ' uv ' , the arrow axis aspect ratio is 1 , so that if U*==*V the orientation of the arrow on the plot is 45 degrees CCW from the horizontal axis ( positive to the right ) .|||With the default ' uv ' , the arrow axis aspect ratio is 1 , so that if U*==*V the orientation of the arrow on the plot is 45 degrees CCW from the horizontal axis ( positive to the right ) . With ' xy ' , the arrow points from ( x,y ) to ( x+u , y+v ) . Use this for plotting a gradient field , for example . Alternatively , arbitrary angles may be specified as an array of values in degrees , CCW from the horizontal axis . Note : inverting a data axis will correspondingly invert the arrows only with angles='xy ' ."
matplotlib.axes.Axes.quiver,animated,Set the artist 's animation state .
matplotlib.axes.Axes.quiver,antialiased,Set the antialiasing state for rendering .
matplotlib.axes.Axes.quiver,array,Set the image array from numpy array A
matplotlib.axes.Axes.quiver,aspect,aspect
matplotlib.axes.Axes.quiver,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.quiver,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.axes.Axes.quiver,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.quiver,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.quiver,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.quiver,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.quiver,cmap,set the colormap for luminance data
matplotlib.axes.Axes.quiver,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.quiver,color,"This is a synonym for the PolyCollection facecolor kwarg .|||This is a synonym for the PolyCollection facecolor kwarg . If C has been set , color has no effect .|||Set both the edgecolor and the facecolor ."
matplotlib.axes.Axes.quiver,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.quiver,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.quiver,cursor_props,Set the cursor property as
matplotlib.axes.Axes.quiver,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.axes.Axes.quiver,facecolor,Set the facecolor(s ) of the collection .
matplotlib.axes.Axes.quiver,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.quiver,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.quiver,hatch,Set the hatching pattern
matplotlib.axes.Axes.quiver,headaxislength,"The defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength . To make the arrow more pointed , reduce headwidth or increase headlength and headaxislength . To make the head smaller relative to the shaft , scale down all the head parameters . You will probably do best to leave minshaft alone .|||Head length at shaft intersection , default is 4.5|||The defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength ."
matplotlib.axes.Axes.quiver,headlength,"The defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength . To make the arrow more pointed , reduce headwidth or increase headlength and headaxislength . To make the head smaller relative to the shaft , scale down all the head parameters . You will probably do best to leave minshaft alone .|||The defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength .|||Head length as multiple of shaft width , default is 5"
matplotlib.axes.Axes.quiver,headwidth,"Head width as multiple of shaft width , default is 3|||The defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength . To make the arrow more pointed , reduce headwidth or increase headlength and headaxislength . To make the head smaller relative to the shaft , scale down all the head parameters . You will probably do best to leave minshaft alone .|||The defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength ."
matplotlib.axes.Axes.quiver,label,Set the label to s for auto legend .
matplotlib.axes.Axes.quiver,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.axes.Axes.quiver,linewidth,Set the linewidth(s ) for the collection .
matplotlib.axes.Axes.quiver,minlength,"Minimum length as a multiple of shaft width ; if an arrow length is less than this , plot a dot ( hexagon ) of this diameter instead .|||Minimum length as a multiple of shaft width ; if an arrow length is less than this , plot a dot ( hexagon ) of this diameter instead . Default is 1 ."
matplotlib.axes.Axes.quiver,minshaft,"Length below which arrow scales , in units of head length . Do not set this to less than 1 , or small arrows will look terrible ! Default is 1|||Length below which arrow scales , in units of head length ."
matplotlib.axes.Axes.quiver,norm,set the normalization instance
matplotlib.axes.Axes.quiver,offset_position,Set how offsets are applied .
matplotlib.axes.Axes.quiver,offsets,Set the offsets for the collection .
matplotlib.axes.Axes.quiver,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.quiver,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.quiver,pivot,"The part of the arrow that is at the grid point ; the arrow rotates about this point , hence the name pivot ."
matplotlib.axes.Axes.quiver,position,Set the axes position with
matplotlib.axes.Axes.quiver,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.quiver,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.quiver,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.quiver,scale,"Data units per arrow length unit , e.g. , m/s per plot width ; a smaller scale parameter makes the arrow longer .|||Data units per arrow length unit , e.g. , m/s per plot width ; a smaller scale parameter makes the arrow longer . If None , a simple autoscaling algorithm is used , based on the average vector length and the number of vectors . The arrow length unit is given by the scale_units parameter"
matplotlib.axes.Axes.quiver,scale_units,"For example , if scale_units is ' inches ' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long . If scale_units is ' width ' , then the vector will be half the width of the axes . If scale_units is ' x ' then the vector will be 0.5 x-axis units . To plot vectors in the x-y plane , with u and v having the same units as x and y , use "" angles='xy ' , scale_units='xy ' , scale=1 "" .|||For example , if scale_units is ' inches ' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long ."
matplotlib.axes.Axes.quiver,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.quiver,sizes,Set the sizes of each member of the collection .
matplotlib.axes.Axes.quiver,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.quiver,snap,Sets the snap setting which may be
matplotlib.axes.Axes.quiver,title,Set a title for the axes .
matplotlib.axes.Axes.quiver,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.quiver,units,"Arrow units ; the arrow dimensions except for length are in multiples of this unit . ' width ' or ' height ' : the width or height of the axes ' dots ' or ' inches ' : pixels or inches , based on the figure dpi ' x ' , ' y ' , or ' xy ' : X , Y , or sqrt(X^2+Y^2 ) data units The arrows scale differently depending on the units . For ' x ' or ' y ' , the arrows get larger as one zooms in ; for other units , the arrow size is independent of the zoom state . For ' width or ' height ' , the arrow size increases with the width and height of the axes , respectively , when the window is resized ; for ' dots ' or ' inches ' , resizing does not change the arrows .|||For example , if scale_units is ' inches ' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long . If scale_units is ' width ' , then the vector will be half the width of the axes . If scale_units is ' x ' then the vector will be 0.5 x-axis units . To plot vectors in the x-y plane , with u and v having the same units as x and y , use "" angles='xy ' , scale_units='xy ' , scale=1 "" .|||For example , if scale_units is ' inches ' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long .|||Arrow units ; the arrow dimensions except for length are in multiples of this unit ."
matplotlib.axes.Axes.quiver,url,Sets the url for the artist
matplotlib.axes.Axes.quiver,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.quiver,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.quiver,width,"Shaft width in arrow units ; default depends on choice of units , above , and number of vectors ; a typical starting value is about 0.005 times the width of the plot ."
matplotlib.axes.Axes.quiver,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.quiver,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.quiver,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.quiver,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.quiver,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.quiver,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.quiver,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.quiver,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.quiver,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.quiver,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.quiver,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.quiver,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.quiver,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.quiverkey,Q,Any additional keyword arguments are used to override vector properties taken from Q .
matplotlib.axes.Axes.quiverkey,X,"The positioning of the key depends on X , Y , coordinates , and labelpos .|||The positioning of the key depends on X , Y , coordinates , and labelpos . If labelpos is ' N ' or ' S ' , X , Y give the position of the middle of the key arrow . If labelpos is ' E ' , X , Y positions the head , and if labelpos is ' W ' , X , Y positions the tail ; in either of these two cases , X , Y is somewhere in the middle of the arrow+label key object ."
matplotlib.axes.Axes.quiverkey,Y,"The positioning of the key depends on X , Y , coordinates , and labelpos .|||The positioning of the key depends on X , Y , coordinates , and labelpos . If labelpos is ' N ' or ' S ' , X , Y give the position of the middle of the key arrow . If labelpos is ' E ' , X , Y positions the head , and if labelpos is ' W ' , X , Y positions the tail ; in either of these two cases , X , Y is somewhere in the middle of the arrow+label key object ."
matplotlib.axes.Axes.quiverkey,color,overrides face and edge colors from Q .
matplotlib.axes.Axes.quiverkey,coordinates,"The positioning of the key depends on X , Y , coordinates , and labelpos .|||Coordinate system and units for X , Y : ' axes ' and ' figure ' are normalized coordinate systems with 0,0 in the lower left and 1,1 in the upper right ; ' data ' are the axes data coordinates ( used for the locations of the vectors in the quiver plot itself ) ; ' inches ' is position in the figure in inches , with 0,0 at the lower left corner .|||The positioning of the key depends on X , Y , coordinates , and labelpos . If labelpos is ' N ' or ' S ' , X , Y give the position of the middle of the key arrow . If labelpos is ' E ' , X , Y positions the head , and if labelpos is ' W ' , X , Y positions the tail ; in either of these two cases , X , Y is somewhere in the middle of the arrow+label key object ."
matplotlib.axes.Axes.quiverkey,fontconfig_pattern,Set the properties by parsing a fontconfig pattern .
matplotlib.axes.Axes.quiverkey,fontproperties,"A dictionary with keyword arguments accepted by the FontProperties initializer : family , style , variant , size , weight"
matplotlib.axes.Axes.quiverkey,labelcolor,defaults to default Text color .
matplotlib.axes.Axes.quiverkey,labelpos,"The positioning of the key depends on X , Y , coordinates , and labelpos .|||Position the label above , below , to the right , to the left of the arrow , respectively .|||The positioning of the key depends on X , Y , coordinates , and labelpos . If labelpos is ' N ' or ' S ' , X , Y give the position of the middle of the key arrow . If labelpos is ' E ' , X , Y positions the head , and if labelpos is ' W ' , X , Y positions the tail ; in either of these two cases , X , Y is somewhere in the middle of the arrow+label key object ."
matplotlib.axes.Axes.quiverkey,labelsep,Distance in inches between the arrow and the label .|||Distance in inches between the arrow and the label . Default is 0.1
matplotlib.axes.Axes.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.axes.Axes.remove_callback,id,Remove a callback based on its id .
matplotlib.axes.Axes.scatter,alpha,"The alpha blending value , between 0 ( transparent ) and 1 ( opaque )|||Set the alpha tranparencies of the collection ."
matplotlib.axes.Axes.scatter,array,Set the image array from numpy array A
matplotlib.axes.Axes.scatter,c,"c can be a single color format string , or a sequence of color specifications of length N , or a sequence of N numbers to be mapped to colors using the cmap and norm specified via kwargs ( see below ) . Note that c should not be a single numeric RGB or RGBA sequence because that is indistinguishable from an array of values to be colormapped . c can be a 2-D array in which the rows are RGB or RGBA , however , including the case of a single row to specify the same color for all points .|||c can be a single color format string , or a sequence of color specifications of length N , or a sequence of N numbers to be mapped to colors using the cmap and norm specified via kwargs ( see below ) ."
matplotlib.axes.Axes.scatter,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.axes.Axes.scatter,cmap,"A Colormap instance or registered name . cmap is only used if c is an array of floats . If None , defaults to rc image.cmap .|||A Colormap instance or registered name ."
matplotlib.axes.Axes.scatter,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.scatter,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.axes.Axes.scatter,edgecolors,"If None , defaults to ( patch.edgecolor ) .|||If None , defaults to ( patch.edgecolor ) . If ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn . For non-filled markers , the edgecolors kwarg is ignored ; color is determined by c."
matplotlib.axes.Axes.scatter,facecolor,Set the facecolor(s ) of the collection .
matplotlib.axes.Axes.scatter,hatch,Set the hatching pattern
matplotlib.axes.Axes.scatter,label,Set the label to s for auto legend .
matplotlib.axes.Axes.scatter,linestyle,Set the linestyle(s ) for the collection .
matplotlib.axes.Axes.scatter,linewidth,Set the linewidth(s ) for the collection .
matplotlib.axes.Axes.scatter,linewidths,"If None , defaults to ( lines.linewidth , ) ."
matplotlib.axes.Axes.scatter,marker,See markers for more information on the different styles of markers scatter supports . marker can be either an instance of the class or the text shorthand for a particular marker .|||See markers for more information on the different styles of markers scatter supports .
matplotlib.axes.Axes.scatter,norm,"A Normalize instance is used to scale luminance data to 0 , 1 . norm is only used if c is an array of floats . If None , use the default normalize ( ) .|||A Normalize instance is used to scale luminance data to 0 , 1 ."
matplotlib.axes.Axes.scatter,offset_position,Set how offsets are applied .
matplotlib.axes.Axes.scatter,offsets,Set the offsets for the collection .
matplotlib.axes.Axes.scatter,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.scatter,s,size in points^2 .
matplotlib.axes.Axes.scatter,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.scatter,"vmin, vmax","vmin and vmax are used in conjunction with norm to normalize luminance data . If either are None , the min and max of the color array is used . Note if you pass a norm instance , your settings for vmin and vmax will be ignored .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.axes.Axes.scatter,"x, y",Input data
matplotlib.axes.Axes.semilogx,None,"The location of the minor xticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see set_xscale ( ) for details ."
matplotlib.axes.Axes.semilogx,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.semilogx,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.semilogx,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.semilogx,anchor,anchor
matplotlib.axes.Axes.semilogx,animated,Set the artist 's animation state .
matplotlib.axes.Axes.semilogx,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.semilogx,args,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :"
matplotlib.axes.Axes.semilogx,aspect,aspect
matplotlib.axes.Axes.semilogx,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.semilogx,basex,Base of the x logarithm
matplotlib.axes.Axes.semilogx,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.semilogx,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.semilogx,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.semilogx,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.semilogx,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.semilogx,color,Set the color of the line
matplotlib.axes.Axes.semilogx,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.semilogx,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.semilogx,cursor_props,Set the cursor property as
matplotlib.axes.Axes.semilogx,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.semilogx,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.semilogx,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.semilogx,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.semilogx,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.semilogx,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.semilogx,fmt,"If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :"
matplotlib.axes.Axes.semilogx,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.semilogx,hatch,Set the hatching pattern
matplotlib.axes.Axes.semilogx,label,Set the label to s for auto legend .
matplotlib.axes.Axes.semilogx,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.semilogx,linewidth,Set the line width in points
matplotlib.axes.Axes.semilogx,marker,Set the line marker
matplotlib.axes.Axes.semilogx,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.semilogx,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.semilogx,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.semilogx,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.semilogx,markersize,Set the marker size in points
matplotlib.axes.Axes.semilogx,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.semilogx,nonposx,"Non-positive values in x can be masked as invalid , or clipped to a very small positive number"
matplotlib.axes.Axes.semilogx,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.semilogx,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.semilogx,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.semilogx,position,Set the axes position with
matplotlib.axes.Axes.semilogx,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.semilogx,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.semilogx,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.semilogx,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.semilogx,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||Autoscale the view limits using the data limits ."
matplotlib.axes.Axes.semilogx,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.semilogx,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.semilogx,snap,Sets the snap setting which may be
matplotlib.axes.Axes.semilogx,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.semilogx,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.semilogx,subsx,"The location of the minor xticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see set_xscale ( ) for details ."
matplotlib.axes.Axes.semilogx,title,Set a title for the axes .
matplotlib.axes.Axes.semilogx,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.semilogx,url,Sets the url for the artist
matplotlib.axes.Axes.semilogx,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.semilogx,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.semilogx,x,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||Make a plot with log scaling on the x axis .|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.semilogx,xdata,Set the data np.array for x
matplotlib.axes.Axes.semilogx,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.semilogx,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.semilogx,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.semilogx,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.semilogx,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.semilogx,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.semilogx,y,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.semilogx,ydata,Set the data np.array for y
matplotlib.axes.Axes.semilogx,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.semilogx,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.semilogx,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.semilogx,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.semilogx,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.semilogx,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.semilogx,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.semilogy,None,"The location of the minor yticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see set_yscale ( ) for details ."
matplotlib.axes.Axes.semilogy,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.semilogy,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.semilogy,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.semilogy,anchor,anchor
matplotlib.axes.Axes.semilogy,animated,Set the artist 's animation state .
matplotlib.axes.Axes.semilogy,antialiased,True if line should be drawin with antialiased rendering
matplotlib.axes.Axes.semilogy,aspect,aspect
matplotlib.axes.Axes.semilogy,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.semilogy,basey,Base of the y logarithm
matplotlib.axes.Axes.semilogy,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.semilogy,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.semilogy,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.semilogy,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.semilogy,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.semilogy,color,Set the color of the line
matplotlib.axes.Axes.semilogy,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.semilogy,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.semilogy,cursor_props,Set the cursor property as
matplotlib.axes.Axes.semilogy,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.axes.Axes.semilogy,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.axes.Axes.semilogy,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.axes.Axes.semilogy,drawstyle,Set the drawstyle of the plot
matplotlib.axes.Axes.semilogy,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.semilogy,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.axes.Axes.semilogy,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.semilogy,hatch,Set the hatching pattern
matplotlib.axes.Axes.semilogy,label,Set the label to s for auto legend .
matplotlib.axes.Axes.semilogy,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.axes.Axes.semilogy,linewidth,Set the line width in points
matplotlib.axes.Axes.semilogy,marker,Set the line marker
matplotlib.axes.Axes.semilogy,markeredgecolor,Set the marker edge color
matplotlib.axes.Axes.semilogy,markeredgewidth,Set the marker edge width in points
matplotlib.axes.Axes.semilogy,markerfacecolor,Set the marker face color .
matplotlib.axes.Axes.semilogy,markerfacecoloralt,Set the alternate marker face color .
matplotlib.axes.Axes.semilogy,markersize,Set the marker size in points
matplotlib.axes.Axes.semilogy,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.semilogy,nonposy,"Non-positive values in y can be masked as invalid , or clipped to a very small positive number"
matplotlib.axes.Axes.semilogy,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.semilogy,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.axes.Axes.semilogy,pickradius,Sets the pick radius used for containment tests
matplotlib.axes.Axes.semilogy,position,Set the axes position with
matplotlib.axes.Axes.semilogy,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.semilogy,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.semilogy,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.semilogy,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.semilogy,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.semilogy,snap,Sets the snap setting which may be
matplotlib.axes.Axes.semilogy,solid_capstyle,Set the cap style for solid linestyles
matplotlib.axes.Axes.semilogy,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.axes.Axes.semilogy,subsy,"The location of the minor yticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see set_yscale ( ) for details ."
matplotlib.axes.Axes.semilogy,title,Set a title for the axes .
matplotlib.axes.Axes.semilogy,transform,set the Transformation instance used by this artist
matplotlib.axes.Axes.semilogy,url,Sets the url for the artist
matplotlib.axes.Axes.semilogy,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.semilogy,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.semilogy,xdata,Set the data np.array for x
matplotlib.axes.Axes.semilogy,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.semilogy,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.semilogy,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.semilogy,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.semilogy,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.semilogy,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.semilogy,y,Make a plot with log scaling on the y axis .
matplotlib.axes.Axes.semilogy,ydata,Set the data np.array for y
matplotlib.axes.Axes.semilogy,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.semilogy,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.semilogy,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.semilogy,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.semilogy,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.semilogy,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.semilogy,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.set_anchor,anchor,anchor
matplotlib.axes.Axes.set_aspect,adjustable,adjustable
matplotlib.axes.Axes.set_aspect,anchor,anchor
matplotlib.axes.Axes.set_aspect,aspect,aspect
matplotlib.axes.Axes.set_color_cycle,clist,clist is a list of mpl color specifiers .
matplotlib.axes.Axes.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.axes.Axes.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.axes.Axes.set_cursor_props,color,"ACCEPTS : a ( float , color ) tuple"
matplotlib.axes.Axes.set_cursor_props,float,"ACCEPTS : a ( float , color ) tuple"
matplotlib.axes.Axes.set_label,s,Set the label to s for auto legend .
matplotlib.axes.Axes.set_picker,picker,picker can be one of the following :
matplotlib.axes.Axes.set_position,pos,"in relative 0,1 coords , or pos can be a Bbox"
matplotlib.axes.Axes.set_prop_cycle,arg,Set the given Cycler .|||Set the given Cycler . Can also be None to reset to the cycle defined by the current style .
matplotlib.axes.Axes.set_prop_cycle,itr,Finite-length iterable of the property values . These values are validated and will raise a ValueError if invalid .|||Finite-length iterable of the property values .
matplotlib.axes.Axes.set_prop_cycle,label,"The property key . Must be a valid Artist property . For example , ' color ' or ' linestyle ' . Aliases are allowed , such as ' c ' for ' color ' and ' lw ' for ' linewidth ' .|||The property key ."
matplotlib.axes.Axes.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.axes.Axes.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.axes.Axes.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.axes.Axes.set_title,fontdict,"A dictionary controlling the appearance of the title text , the default fontdict is :"
matplotlib.axes.Axes.set_title,fontproperties,Set the font properties that control the text .
matplotlib.axes.Axes.set_title,kwargs,"Other keyword arguments are text properties , see Text for a list of valid text properties ."
matplotlib.axes.Axes.set_title,label,Text to use for the title
matplotlib.axes.Axes.set_title,loc,"Which title to set , defaults to ' center '"
matplotlib.axes.Axes.set_title,position,"Set the ( x , y ) position of the text"
matplotlib.axes.Axes.set_title,rotation_mode,set text rotation mode .
matplotlib.axes.Axes.set_title,text,Set the text string s
matplotlib.axes.Axes.set_title,x,Set the x position of the text
matplotlib.axes.Axes.set_title,y,Set the y position of the text
matplotlib.axes.Axes.set_xlabel,fontproperties,Set the font properties that control the text .
matplotlib.axes.Axes.set_xlabel,labelpad,spacing in points between the label and the x-axis
matplotlib.axes.Axes.set_xlabel,position,"Set the ( x , y ) position of the text"
matplotlib.axes.Axes.set_xlabel,rotation_mode,set text rotation mode .
matplotlib.axes.Axes.set_xlabel,text,Set the text string s
matplotlib.axes.Axes.set_xlabel,x,Set the x position of the text
matplotlib.axes.Axes.set_xlabel,xlabel,x label
matplotlib.axes.Axes.set_xlabel,y,Set the y position of the text
matplotlib.axes.Axes.set_xlim,False,"Turn x autoscaling on ( True ) , off ( False ; default ) , or leave unchanged ( None )|||Notify observers of limit change"
matplotlib.axes.Axes.set_xlim,None,"Turn x autoscaling on ( True ) , off ( False ; default ) , or leave unchanged ( None )"
matplotlib.axes.Axes.set_xlim,True,"Turn x autoscaling on ( True ) , off ( False ; default ) , or leave unchanged ( None )|||Notify observers of limit change"
matplotlib.axes.Axes.set_xlim,auto,"Turn x autoscaling on ( True ) , off ( False ; default ) , or leave unchanged ( None )"
matplotlib.axes.Axes.set_xlim,emit,Notify observers of limit change
matplotlib.axes.Axes.set_xlim,left,"The left xlim ; xmin , the previous name , may still be used|||Note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) . For example , suppose x is years before present . Then one might use :|||Note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) ."
matplotlib.axes.Axes.set_xlim,right,"Note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) .|||Note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) . For example , suppose x is years before present . Then one might use :|||The right xlim ; xmax , the previous name , may still be used"
matplotlib.axes.Axes.set_xlim,x,"Note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) .|||Note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) . For example , suppose x is years before present . Then one might use :"
matplotlib.axes.Axes.set_xlim,xmax,"Note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) .|||Note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) . For example , suppose x is years before present . Then one might use :"
matplotlib.axes.Axes.set_xlim,xmin,"Note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) .|||Note , the left ( formerly xmin ) value may be greater than the right ( formerly xmax ) . For example , suppose x is years before present . Then one might use :"
matplotlib.axes.Axes.set_xmargin,m,m times the data interval will be added to each end of that interval before it is used in autoscaling .
matplotlib.axes.Axes.set_xscale,basex,The base of the logarithm
matplotlib.axes.Axes.set_xscale,basey,The base of the logarithm
matplotlib.axes.Axes.set_xscale,linscalex,"This allows the linear range ( - linthresh to linthresh ) to be stretched relative to the logarithmic range .|||This allows the linear range ( - linthresh to linthresh ) to be stretched relative to the logarithmic range . Its value is the number of decades to use for each half of the linear range . For example , when linscale = = 1.0 ( the default ) , the space used for the positive and negative halves of the linear range will be equal to one decade in the logarithmic range ."
matplotlib.axes.Axes.set_xscale,linscaley,"This allows the linear range ( - linthresh to linthresh ) to be stretched relative to the logarithmic range .|||This allows the linear range ( - linthresh to linthresh ) to be stretched relative to the logarithmic range . Its value is the number of decades to use for each half of the linear range . For example , when linscale = = 1.0 ( the default ) , the space used for the positive and negative halves of the linear range will be equal to one decade in the logarithmic range ."
matplotlib.axes.Axes.set_xscale,linthreshx,"The range ( - x , x ) within which the plot is linear ( to avoid having the plot go to infinity around zero ) ."
matplotlib.axes.Axes.set_xscale,linthreshy,"The range ( - x , x ) within which the plot is linear ( to avoid having the plot go to infinity around zero ) ."
matplotlib.axes.Axes.set_xscale,nonpos,"values beyond ] 0 , 1 [ can be masked as invalid , or clipped to a number very close to 0 or 1"
matplotlib.axes.Axes.set_xscale,nonposx,"non-positive values in x or y can be masked as invalid , or clipped to a very small positive number"
matplotlib.axes.Axes.set_xscale,nonposy,"non-positive values in x or y can be masked as invalid , or clipped to a very small positive number"
matplotlib.axes.Axes.set_xscale,subsx,"Where to place the subticks between each major tick .|||Where to place the subticks between each major tick . Should be a sequence of integers . For example , in a log10 scale :[ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] will place 8 logarithmically spaced minor ticks between each major tick ."
matplotlib.axes.Axes.set_xscale,subsy,"Where to place the subticks between each major tick .|||Where to place the subticks between each major tick . Should be a sequence of integers . For example , in a log10 scale :[ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] will place 8 logarithmically spaced minor ticks between each major tick ."
matplotlib.axes.Axes.set_xticklabels,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.set_xticklabels,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.set_xticklabels,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.set_xticklabels,anchor,anchor
matplotlib.axes.Axes.set_xticklabels,animated,Set the artist 's animation state .
matplotlib.axes.Axes.set_xticklabels,aspect,aspect
matplotlib.axes.Axes.set_xticklabels,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.set_xticklabels,backgroundcolor,Set the background color of the text by updating the bbox .
matplotlib.axes.Axes.set_xticklabels,bbox,Draw a bounding box around self .
matplotlib.axes.Axes.set_xticklabels,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.set_xticklabels,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.set_xticklabels,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.set_xticklabels,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.set_xticklabels,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.set_xticklabels,color,Set the foreground color of the text
matplotlib.axes.Axes.set_xticklabels,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.set_xticklabels,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.set_xticklabels,cursor_props,Set the cursor property as
matplotlib.axes.Axes.set_xticklabels,family,Set the font family .
matplotlib.axes.Axes.set_xticklabels,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.set_xticklabels,fontconfig_pattern,Set the properties by parsing a fontconfig pattern .
matplotlib.axes.Axes.set_xticklabels,fontproperties,Set the font properties that control the text .
matplotlib.axes.Axes.set_xticklabels,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.set_xticklabels,hatch,Set the hatching pattern
matplotlib.axes.Axes.set_xticklabels,horizontalalignment,Set the horizontal alignment to one of
matplotlib.axes.Axes.set_xticklabels,label,Set the label to s for auto legend .
matplotlib.axes.Axes.set_xticklabels,labels,Set the xtick labels with list of strings labels .|||Set the xtick labels with list of strings labels . Return a list of axis text instances .
matplotlib.axes.Axes.set_xticklabels,linespacing,Set the line spacing as a multiple of the font size .
matplotlib.axes.Axes.set_xticklabels,linestyle,Set the patch linestyle
matplotlib.axes.Axes.set_xticklabels,multialignment,Set the alignment for multiple lines layout .
matplotlib.axes.Axes.set_xticklabels,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.set_xticklabels,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.set_xticklabels,position,"Set the axes position with|||Set the ( x , y ) position of the text"
matplotlib.axes.Axes.set_xticklabels,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.set_xticklabels,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.set_xticklabels,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.set_xticklabels,rotation,Set the rotation of the text
matplotlib.axes.Axes.set_xticklabels,rotation_mode,set text rotation mode .
matplotlib.axes.Axes.set_xticklabels,size,Set the font size .
matplotlib.axes.Axes.set_xticklabels,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.set_xticklabels,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.set_xticklabels,snap,Sets the snap setting which may be
matplotlib.axes.Axes.set_xticklabels,stretch,Set the font stretch ( horizontal condensation or expansion ) .
matplotlib.axes.Axes.set_xticklabels,style,Set the font style .
matplotlib.axes.Axes.set_xticklabels,text,Set the text string s
matplotlib.axes.Axes.set_xticklabels,title,Set a title for the axes .
matplotlib.axes.Axes.set_xticklabels,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.set_xticklabels,url,Sets the url for the artist
matplotlib.axes.Axes.set_xticklabels,usetex,Set this Text object to render using TeX ( or not ) .
matplotlib.axes.Axes.set_xticklabels,variant,"Set the font variant , either ' normal ' or ' small-caps ' ."
matplotlib.axes.Axes.set_xticklabels,verticalalignment,Set the vertical alignment
matplotlib.axes.Axes.set_xticklabels,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.set_xticklabels,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.set_xticklabels,weight,Set the font weight .
matplotlib.axes.Axes.set_xticklabels,wrap,Sets the wrapping state for the text .
matplotlib.axes.Axes.set_xticklabels,x,Set the x position of the text
matplotlib.axes.Axes.set_xticklabels,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.set_xticklabels,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.set_xticklabels,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.set_xticklabels,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.set_xticklabels,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.set_xticklabels,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.set_xticklabels,y,Set the y position of the text
matplotlib.axes.Axes.set_xticklabels,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.set_xticklabels,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.set_xticklabels,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.set_xticklabels,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.set_xticklabels,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.set_xticklabels,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.set_xticklabels,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.set_xticks,ticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.set_ylabel,fontproperties,Set the font properties that control the text .
matplotlib.axes.Axes.set_ylabel,labelpad,spacing in points between the label and the x-axis
matplotlib.axes.Axes.set_ylabel,position,"Set the ( x , y ) position of the text"
matplotlib.axes.Axes.set_ylabel,rotation_mode,set text rotation mode .
matplotlib.axes.Axes.set_ylabel,text,Set the text string s
matplotlib.axes.Axes.set_ylabel,x,Set the x position of the text
matplotlib.axes.Axes.set_ylabel,y,Set the y position of the text
matplotlib.axes.Axes.set_ylabel,ylabel,y label
matplotlib.axes.Axes.set_ylim,False,"Turn y autoscaling on ( True ) , off ( False ; default ) , or leave unchanged ( None )|||Notify observers of limit change"
matplotlib.axes.Axes.set_ylim,None,"Turn y autoscaling on ( True ) , off ( False ; default ) , or leave unchanged ( None )"
matplotlib.axes.Axes.set_ylim,True,"Turn y autoscaling on ( True ) , off ( False ; default ) , or leave unchanged ( None )|||Notify observers of limit change"
matplotlib.axes.Axes.set_ylim,auto,"Turn y autoscaling on ( True ) , off ( False ; default ) , or leave unchanged ( None )"
matplotlib.axes.Axes.set_ylim,bottom,"Note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) .|||The bottom ylim ; the previous name , ymin , may still be used|||Note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) . For example , suppose y is depth in the ocean . Then one might use :"
matplotlib.axes.Axes.set_ylim,emit,Notify observers of limit change
matplotlib.axes.Axes.set_ylim,top,"The top ylim ; the previous name , ymax , may still be used|||Note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) . For example , suppose y is depth in the ocean . Then one might use :|||Note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) ."
matplotlib.axes.Axes.set_ylim,y,"Note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) . For example , suppose y is depth in the ocean . Then one might use :|||Note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) ."
matplotlib.axes.Axes.set_ylim,ymax,"Note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) . For example , suppose y is depth in the ocean . Then one might use :|||Note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) ."
matplotlib.axes.Axes.set_ylim,ymin,"Note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) . For example , suppose y is depth in the ocean . Then one might use :|||Note , the bottom ( formerly ymin ) value may be greater than the top ( formerly ymax ) ."
matplotlib.axes.Axes.set_ymargin,m,m times the data interval will be added to each end of that interval before it is used in autoscaling .
matplotlib.axes.Axes.set_yscale,basex,The base of the logarithm
matplotlib.axes.Axes.set_yscale,basey,The base of the logarithm
matplotlib.axes.Axes.set_yscale,linscalex,"This allows the linear range ( - linthresh to linthresh ) to be stretched relative to the logarithmic range .|||This allows the linear range ( - linthresh to linthresh ) to be stretched relative to the logarithmic range . Its value is the number of decades to use for each half of the linear range . For example , when linscale = = 1.0 ( the default ) , the space used for the positive and negative halves of the linear range will be equal to one decade in the logarithmic range ."
matplotlib.axes.Axes.set_yscale,linscaley,"This allows the linear range ( - linthresh to linthresh ) to be stretched relative to the logarithmic range .|||This allows the linear range ( - linthresh to linthresh ) to be stretched relative to the logarithmic range . Its value is the number of decades to use for each half of the linear range . For example , when linscale = = 1.0 ( the default ) , the space used for the positive and negative halves of the linear range will be equal to one decade in the logarithmic range ."
matplotlib.axes.Axes.set_yscale,linthreshx,"The range ( - x , x ) within which the plot is linear ( to avoid having the plot go to infinity around zero ) ."
matplotlib.axes.Axes.set_yscale,linthreshy,"The range ( - x , x ) within which the plot is linear ( to avoid having the plot go to infinity around zero ) ."
matplotlib.axes.Axes.set_yscale,nonpos,"values beyond ] 0 , 1 [ can be masked as invalid , or clipped to a number very close to 0 or 1"
matplotlib.axes.Axes.set_yscale,nonposx,"non-positive values in x or y can be masked as invalid , or clipped to a very small positive number"
matplotlib.axes.Axes.set_yscale,nonposy,"non-positive values in x or y can be masked as invalid , or clipped to a very small positive number"
matplotlib.axes.Axes.set_yscale,subsx,"Where to place the subticks between each major tick .|||Where to place the subticks between each major tick . Should be a sequence of integers . For example , in a log10 scale :[ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] will place 8 logarithmically spaced minor ticks between each major tick ."
matplotlib.axes.Axes.set_yscale,subsy,"Where to place the subticks between each major tick .|||Where to place the subticks between each major tick . Should be a sequence of integers . For example , in a log10 scale :[ 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] will place 8 logarithmically spaced minor ticks between each major tick ."
matplotlib.axes.Axes.set_yticklabels,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.set_yticklabels,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.set_yticklabels,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.set_yticklabels,anchor,anchor
matplotlib.axes.Axes.set_yticklabels,animated,Set the artist 's animation state .
matplotlib.axes.Axes.set_yticklabels,aspect,aspect
matplotlib.axes.Axes.set_yticklabels,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.set_yticklabels,backgroundcolor,Set the background color of the text by updating the bbox .
matplotlib.axes.Axes.set_yticklabels,bbox,Draw a bounding box around self .
matplotlib.axes.Axes.set_yticklabels,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.set_yticklabels,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.set_yticklabels,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.set_yticklabels,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.set_yticklabels,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.set_yticklabels,color,Set the foreground color of the text
matplotlib.axes.Axes.set_yticklabels,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.set_yticklabels,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.set_yticklabels,cursor_props,Set the cursor property as
matplotlib.axes.Axes.set_yticklabels,family,Set the font family .
matplotlib.axes.Axes.set_yticklabels,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.set_yticklabels,fontconfig_pattern,Set the properties by parsing a fontconfig pattern .
matplotlib.axes.Axes.set_yticklabels,fontproperties,Set the font properties that control the text .
matplotlib.axes.Axes.set_yticklabels,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.set_yticklabels,hatch,Set the hatching pattern
matplotlib.axes.Axes.set_yticklabels,horizontalalignment,Set the horizontal alignment to one of
matplotlib.axes.Axes.set_yticklabels,label,Set the label to s for auto legend .
matplotlib.axes.Axes.set_yticklabels,labels,Set the y tick labels with list of strings labels . Return a list of Text instances .|||Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.set_yticklabels,linespacing,Set the line spacing as a multiple of the font size .
matplotlib.axes.Axes.set_yticklabels,linestyle,Set the patch linestyle
matplotlib.axes.Axes.set_yticklabels,multialignment,Set the alignment for multiple lines layout .
matplotlib.axes.Axes.set_yticklabels,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.set_yticklabels,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.set_yticklabels,position,"Set the axes position with|||Set the ( x , y ) position of the text"
matplotlib.axes.Axes.set_yticklabels,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.set_yticklabels,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.set_yticklabels,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.set_yticklabels,rotation,Set the rotation of the text
matplotlib.axes.Axes.set_yticklabels,rotation_mode,set text rotation mode .
matplotlib.axes.Axes.set_yticklabels,size,Set the font size .
matplotlib.axes.Axes.set_yticklabels,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.set_yticklabels,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.set_yticklabels,snap,Sets the snap setting which may be
matplotlib.axes.Axes.set_yticklabels,stretch,Set the font stretch ( horizontal condensation or expansion ) .
matplotlib.axes.Axes.set_yticklabels,style,Set the font style .
matplotlib.axes.Axes.set_yticklabels,text,Set the text string s
matplotlib.axes.Axes.set_yticklabels,title,Set a title for the axes .
matplotlib.axes.Axes.set_yticklabels,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.set_yticklabels,url,Sets the url for the artist
matplotlib.axes.Axes.set_yticklabels,usetex,Set this Text object to render using TeX ( or not ) .
matplotlib.axes.Axes.set_yticklabels,variant,"Set the font variant , either ' normal ' or ' small-caps ' ."
matplotlib.axes.Axes.set_yticklabels,verticalalignment,Set the vertical alignment
matplotlib.axes.Axes.set_yticklabels,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.set_yticklabels,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.set_yticklabels,weight,Set the font weight .
matplotlib.axes.Axes.set_yticklabels,wrap,Sets the wrapping state for the text .
matplotlib.axes.Axes.set_yticklabels,x,Set the x position of the text
matplotlib.axes.Axes.set_yticklabels,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.set_yticklabels,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.set_yticklabels,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.set_yticklabels,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.set_yticklabels,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.set_yticklabels,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.set_yticklabels,y,Set the y position of the text
matplotlib.axes.Axes.set_yticklabels,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.set_yticklabels,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.set_yticklabels,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.set_yticklabels,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.set_yticklabels,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.set_yticklabels,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.set_yticklabels,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.set_yticks,False,Sets the minor ticks if True
matplotlib.axes.Axes.set_yticks,True,Sets the minor ticks if True
matplotlib.axes.Axes.set_yticks,minor,Sets the minor ticks if True
matplotlib.axes.Axes.set_yticks,ticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.specgram,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.axes.Axes.specgram,NFFT,"Compute and plot a spectrogram of data in x .|||Compute and plot a spectrogram of data in x . Data are split into NFFT length segments and the spectrum of each section is computed . The windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap . The spectrogram is plotted as a colormap ( using imshow ) ."
matplotlib.axes.Axes.specgram,freqs,"Returns the tuple ( spectrum , freqs , t , im ) :"
matplotlib.axes.Axes.specgram,im,"Returns the tuple ( spectrum , freqs , t , im ) :"
matplotlib.axes.Axes.specgram,noverlap,"Compute and plot a spectrogram of data in x .|||Compute and plot a spectrogram of data in x . Data are split into NFFT length segments and the spectrum of each section is computed . The windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap . The spectrogram is plotted as a colormap ( using imshow ) ."
matplotlib.axes.Axes.specgram,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.axes.Axes.specgram,spectrum,"Returns the tuple ( spectrum , freqs , t , im ) :"
matplotlib.axes.Axes.specgram,t,"Returns the tuple ( spectrum , freqs , t , im ) :"
matplotlib.axes.Axes.specgram,window,"A function or a vector of length NFFT .|||Compute and plot a spectrogram of data in x .|||Compute and plot a spectrogram of data in x . Data are split into NFFT length segments and the spectrum of each section is computed . The windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap . The spectrogram is plotted as a colormap ( using imshow ) .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.axes.Axes.specgram,x,"Compute and plot a spectrogram of data in x .|||Compute and plot a spectrogram of data in x . Data are split into NFFT length segments and the spectrum of each section is computed . The windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap . The spectrogram is plotted as a colormap ( using imshow ) ."
matplotlib.axes.Axes.spy,Z,The array to be plotted .|||spy(Z ) plots the sparsity pattern of the 2-D array Z .
matplotlib.axes.Axes.spy,aspect,"If ' equal ' , and extent is None , changes the axes aspect ratio to match that of the image . If extent is not None , the axes aspect ratio is changed to match that of the extent .|||If ' equal ' , and extent is None , changes the axes aspect ratio to match that of the image ."
matplotlib.axes.Axes.spy,origin,"Place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes ."
matplotlib.axes.Axes.spy,precision,"If precision is 0 , any non-zero value will be plotted ; else , values of will be plotted ."
matplotlib.axes.Axes.stackplot,labels,labels : A list or tuple of labels to assign to each data series .
matplotlib.axes.Axes.stackplot,r,"Returns r : A list of PolyCollection , one for each element in the stacked area plot ."
matplotlib.axes.Axes.stackplot,x,x : 1d array of dimension N
matplotlib.axes.Axes.start_pan,x,"x , y are the mouse coordinates in display coords .|||x , y are the mouse coordinates in display coords . button is the mouse button number :"
matplotlib.axes.Axes.start_pan,y,"x , y are the mouse coordinates in display coords .|||x , y are the mouse coordinates in display coords . button is the mouse button number :"
matplotlib.axes.Axes.stem,basefmt,"A stem plot plots vertical lines ( using linefmt ) at each x|||A stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . A horizontal line at 0 is is plotted using basefmt ."
matplotlib.axes.Axes.stem,baseline,"Return value is a tuple ( markerline , stemlines , baseline ) ."
matplotlib.axes.Axes.stem,linefmt,"A stem plot plots vertical lines ( using linefmt ) at each x|||A stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . A horizontal line at 0 is is plotted using basefmt ."
matplotlib.axes.Axes.stem,markerfmt,"A stem plot plots vertical lines ( using linefmt ) at each x|||A stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . A horizontal line at 0 is is plotted using basefmt ."
matplotlib.axes.Axes.stem,markerline,"Return value is a tuple ( markerline , stemlines , baseline ) ."
matplotlib.axes.Axes.stem,stemlines,"Return value is a tuple ( markerline , stemlines , baseline ) ."
matplotlib.axes.Axes.stem,x,"If no x values are provided , the default is ( 0 , 1 , ...|||A stem plot plots vertical lines ( using linefmt ) at each x|||A stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . A horizontal line at 0 is is plotted using basefmt .|||If no x values are provided , the default is ( 0 , 1 , ... , len(y ) - 1 )"
matplotlib.axes.Axes.stem,y,"A stem plot plots vertical lines ( using linefmt ) at each x|||A stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . A horizontal line at 0 is is plotted using basefmt ."
matplotlib.axes.Axes.step,args,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :"
matplotlib.axes.Axes.step,fmt,"If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :"
matplotlib.axes.Axes.step,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.step,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||Autoscale the view limits using the data limits ."
matplotlib.axes.Axes.step,x,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||x and y must be 1-D sequences , and it is assumed , but not checked , that x is uniformly increasing .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.step,y,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||x and y must be 1-D sequences , and it is assumed , but not checked , that x is uniformly increasing .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.table,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.axes.Axes.table,agg_filter,set agg_filter fuction .
matplotlib.axes.Axes.table,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.axes.Axes.table,anchor,anchor
matplotlib.axes.Axes.table,animated,Set the artist 's animation state .
matplotlib.axes.Axes.table,aspect,aspect
matplotlib.axes.Axes.table,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.axes.Axes.table,clip_box,Set the artist 's clip Bbox .
matplotlib.axes.Axes.table,clip_on,Set whether artist uses clipping .
matplotlib.axes.Axes.table,clip_path,"Set the artist 's clip path , which may be"
matplotlib.axes.Axes.table,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.axes.Axes.table,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.axes.Axes.table,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.table,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.table,cursor_props,Set the cursor property as
matplotlib.axes.Axes.table,figure,Set the Figure instance the artist belongs to .
matplotlib.axes.Axes.table,gid,Sets the ( group ) id for the artist
matplotlib.axes.Axes.table,hatch,Set the hatching pattern
matplotlib.axes.Axes.table,label,Set the label to s for auto legend .
matplotlib.axes.Axes.table,linestyle,Set the patch linestyle
matplotlib.axes.Axes.table,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.axes.Axes.table,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.table,position,Set the axes position with
matplotlib.axes.Axes.table,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.axes.Axes.table,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.axes.Axes.table,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.axes.Axes.table,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.axes.Axes.table,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.table,snap,Sets the snap setting which may be
matplotlib.axes.Axes.table,title,Set a title for the axes .
matplotlib.axes.Axes.table,transform,Set the Transform instance used by this artist .
matplotlib.axes.Axes.table,url,Sets the url for the artist
matplotlib.axes.Axes.table,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.axes.Axes.table,visible,Set the artist 's visiblity .
matplotlib.axes.Axes.table,xlabel,Set the label for the xaxis .
matplotlib.axes.Axes.table,xlim,Set the data limits for the xaxis
matplotlib.axes.Axes.table,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.axes.Axes.table,xscale,Set the scaling of the x-axis
matplotlib.axes.Axes.table,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.axes.Axes.table,xticks,Set the x ticks with list of ticks
matplotlib.axes.Axes.table,ylabel,Set the label for the yaxis
matplotlib.axes.Axes.table,ylim,Set the data limits for the yaxis
matplotlib.axes.Axes.table,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.axes.Axes.table,yscale,Set the scaling of the y-axis
matplotlib.axes.Axes.table,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.axes.Axes.table,yticks,Set the y ticks with list of ticks
matplotlib.axes.Axes.table,zorder,Set the zorder for the artist .
matplotlib.axes.Axes.text,fontdict,"A dictionary to override the default text properties .|||A dictionary to override the default text properties . If fontdict is None , the defaults are determined by your rc parameters ."
matplotlib.axes.Axes.text,fontproperties,Set the font properties that control the text .
matplotlib.axes.Axes.text,kwargs,Other miscellaneous text parameters .
matplotlib.axes.Axes.text,position,"Set the ( x , y ) position of the text"
matplotlib.axes.Axes.text,rotation_mode,set text rotation mode .
matplotlib.axes.Axes.text,s,text
matplotlib.axes.Axes.text,text,Set the text string s
matplotlib.axes.Axes.text,withdash,Creates a TextWithDash instance instead of a Text instance .
matplotlib.axes.Axes.text,x,Set the x position of the text
matplotlib.axes.Axes.text,"x, y",data coordinates
matplotlib.axes.Axes.text,y,Set the y position of the text
matplotlib.axes.Axes.tricontour,False,enable antialiasing
matplotlib.axes.Axes.tricontour,N,contour N automatically-chosen levels .
matplotlib.axes.Axes.tricontour,None,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified|||If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour .|||If linestyles is None , the ' solid ' is used .|||Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .|||If linestyles is None , the ' solid ' is used . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary . If contour is using a monochrome colormap and the contour level is less than 0 , then the linestyle specified in contour.negative_linestyle in matplotlibrc will be used .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||A cm Colormap instance or None .|||If None , the colormap specified by cmap will be used .|||A matplotlib.colors.Normalize instance for scaling data values to colors .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used .|||If locator is None , the default MaxNLocator is used ."
matplotlib.axes.Axes.tricontour,True,enable antialiasing
matplotlib.axes.Axes.tricontour,V,"draw contour lines at the values specified in sequence V , which must be in increasing order .|||fill the ( len(V ) - 1 ) regions between the values in V , which must be in increasing order ."
matplotlib.axes.Axes.tricontour,Z,"where Z is the array of values to contour , one per point in the triangulation . The level values are chosen automatically .|||where Z is the array of values to contour , one per point in the triangulation ."
matplotlib.axes.Axes.tricontour,alpha,The alpha blending value
matplotlib.axes.Axes.tricontour,antialiased,enable antialiasing
matplotlib.axes.Axes.tricontour,cmap,"A cm Colormap instance or None .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used ."
matplotlib.axes.Axes.tricontour,colors,"If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If None , the colormap specified by cmap will be used ."
matplotlib.axes.Axes.tricontour,extend,"Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included .|||Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included . These added ranges are then mapped to the special colormap values which default to the ends of the colormap range , but can be set via matplotlib.colors.Colormap.set_under ( ) and matplotlib.colors.Colormap.set_over ( ) methods ."
matplotlib.axes.Axes.tricontour,levels,"A list of floating point numbers indicating the level curves to draw , in increasing order ; e.g. , to draw just the zero contour pass levels=[0 ]"
matplotlib.axes.Axes.tricontour,linestyles,"If linestyles is None , the ' solid ' is used . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary . If contour is using a monochrome colormap and the contour level is less than 0 , then the linestyle specified in contour.negative_linestyle in matplotlibrc will be used .|||If linestyles is None , the ' solid ' is used ."
matplotlib.axes.Axes.tricontour,linewidths,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified"
matplotlib.axes.Axes.tricontour,locator,"If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||If locator is None , the default MaxNLocator is used ."
matplotlib.axes.Axes.tricontour,norm,"A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||A matplotlib.colors.Normalize instance for scaling data values to colors ."
matplotlib.axes.Axes.tricontour,origin,"If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour ."
matplotlib.axes.Axes.tricontour,xunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.axes.Axes.tricontour,yunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.axes.Axes.tricontour,z,"There is one exception : if the lowest boundary coincides with the minimum value of the z array , then that minimum value will be included in the lowest interval ."
matplotlib.axes.Axes.tricontour,z1,"Note : tricontourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.axes.Axes.tricontour,z2,"Note : tricontourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.axes.Axes.tricontourf,False,enable antialiasing
matplotlib.axes.Axes.tricontourf,N,contour N automatically-chosen levels .
matplotlib.axes.Axes.tricontourf,None,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified|||If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour .|||If linestyles is None , the ' solid ' is used .|||Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .|||If linestyles is None , the ' solid ' is used . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary . If contour is using a monochrome colormap and the contour level is less than 0 , then the linestyle specified in contour.negative_linestyle in matplotlibrc will be used .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||A cm Colormap instance or None .|||If None , the colormap specified by cmap will be used .|||A matplotlib.colors.Normalize instance for scaling data values to colors .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used .|||If locator is None , the default MaxNLocator is used ."
matplotlib.axes.Axes.tricontourf,True,enable antialiasing
matplotlib.axes.Axes.tricontourf,V,"draw contour lines at the values specified in sequence V , which must be in increasing order .|||fill the ( len(V ) - 1 ) regions between the values in V , which must be in increasing order ."
matplotlib.axes.Axes.tricontourf,Z,"where Z is the array of values to contour , one per point in the triangulation . The level values are chosen automatically .|||where Z is the array of values to contour , one per point in the triangulation ."
matplotlib.axes.Axes.tricontourf,alpha,The alpha blending value
matplotlib.axes.Axes.tricontourf,antialiased,enable antialiasing
matplotlib.axes.Axes.tricontourf,cmap,"A cm Colormap instance or None .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used ."
matplotlib.axes.Axes.tricontourf,colors,"If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If None , the colormap specified by cmap will be used ."
matplotlib.axes.Axes.tricontourf,extend,"Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included .|||Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included . These added ranges are then mapped to the special colormap values which default to the ends of the colormap range , but can be set via matplotlib.colors.Colormap.set_under ( ) and matplotlib.colors.Colormap.set_over ( ) methods ."
matplotlib.axes.Axes.tricontourf,levels,"A list of floating point numbers indicating the level curves to draw , in increasing order ; e.g. , to draw just the zero contour pass levels=[0 ]"
matplotlib.axes.Axes.tricontourf,linestyles,"If linestyles is None , the ' solid ' is used . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary . If contour is using a monochrome colormap and the contour level is less than 0 , then the linestyle specified in contour.negative_linestyle in matplotlibrc will be used .|||If linestyles is None , the ' solid ' is used ."
matplotlib.axes.Axes.tricontourf,linewidths,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified"
matplotlib.axes.Axes.tricontourf,locator,"If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||If locator is None , the default MaxNLocator is used ."
matplotlib.axes.Axes.tricontourf,norm,"A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||A matplotlib.colors.Normalize instance for scaling data values to colors ."
matplotlib.axes.Axes.tricontourf,origin,"If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour ."
matplotlib.axes.Axes.tricontourf,xunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.axes.Axes.tricontourf,yunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.axes.Axes.tricontourf,z,"There is one exception : if the lowest boundary coincides with the minimum value of the z array , then that minimum value will be included in the lowest interval ."
matplotlib.axes.Axes.tricontourf,z1,"Note : tricontourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.axes.Axes.tricontourf,z2,"Note : tricontourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.axes.Axes.tripcolor,C,"The next argument must be C , the array of color values , either one per point in the triangulation if color values are defined at points , or one per triangle in the triangulation if color values are defined at triangles . If there are the same number of points and triangles in the triangulation it is assumed that color values are defined at points ; to force the use of color values at triangles use the kwarg facecolors*=C instead of just * C .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X , Y and C may be masked arrays . If either C[i , j ] , or one of the vertices surrounding C[i,j ] ( X or Y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||C is the array of color values .|||MATLAB pcolor ( ) always discards the last row and column of C , but matplotlib displays the last row and column if X and Y are not specified , or if X and Y have one more row and column than C .|||X , Y and C may be masked arrays .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||The next argument must be C , the array of color values , either one per point in the triangulation if color values are defined at points , or one per triangle in the triangulation if color values are defined at triangles .|||Ideally the dimensions of X and Y should be one greater than those of C ; if the dimensions are the same , then the last row and column of C will be ignored ."
matplotlib.axes.Axes.tripcolor,C*(*y,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed ."
matplotlib.axes.Axes.tripcolor,None,"If None , the rc setting is used by default . If ' none ' , edges will not be visible . An mpl color or sequence of colors will set the edge color|||the alpha blending value|||vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||A matplotlib.colors.Colormap instance . If None , use rc settings .|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( ) .|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 .|||vmin and vmax are used in conjunction with norm to normalize luminance data .|||If None , the rc setting is used by default .|||A matplotlib.colors.Colormap instance ."
matplotlib.axes.Axes.tripcolor,X,"If either or both of X and Y are 1-D arrays or column vectors , they will be expanded as needed into the appropriate 2-D arrays , making a rectangular grid .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X , Y and C may be masked arrays . If either C[i , j ] , or one of the vertices surrounding C[i,j ] ( X or Y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :|||MATLAB pcolor ( ) always discards the last row and column of C , but matplotlib displays the last row and column if X and Y are not specified , or if X and Y have one more row and column than C .|||X , Y and C may be masked arrays .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||Ideally the dimensions of X and Y should be one greater than those of C ; if the dimensions are the same , then the last row and column of C will be ignored ."
matplotlib.axes.Axes.tripcolor,Y,"If either or both of X and Y are 1-D arrays or column vectors , they will be expanded as needed into the appropriate 2-D arrays , making a rectangular grid .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X , Y and C may be masked arrays . If either C[i , j ] , or one of the vertices surrounding C[i,j ] ( X or Y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :|||MATLAB pcolor ( ) always discards the last row and column of C , but matplotlib displays the last row and column if X and Y are not specified , or if X and Y have one more row and column than C .|||X , Y and C may be masked arrays .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||Ideally the dimensions of X and Y should be one greater than those of C ; if the dimensions are the same , then the last row and column of C will be ignored ."
matplotlib.axes.Axes.tripcolor,alpha,the alpha blending value|||Set the alpha tranparencies of the collection .
matplotlib.axes.Axes.tripcolor,cmap,"set the colormap for luminance data|||A matplotlib.colors.Colormap instance .|||A matplotlib.colors.Colormap instance . If None , use rc settings ."
matplotlib.axes.Axes.tripcolor,edgecolors,"If None , the rc setting is used by default . If ' none ' , edges will not be visible . An mpl color or sequence of colors will set the edge color|||If None , the rc setting is used by default ."
matplotlib.axes.Axes.tripcolor,facecolors*=C instead of just *C,"The next argument must be C , the array of color values , either one per point in the triangulation if color values are defined at points , or one per triangle in the triangulation if color values are defined at triangles . If there are the same number of points and triangles in the triangulation it is assumed that color values are defined at points ; to force the use of color values at triangles use the kwarg facecolors*=C instead of just * C .|||The next argument must be C , the array of color values , either one per point in the triangulation if color values are defined at points , or one per triangle in the triangulation if color values are defined at triangles ."
matplotlib.axes.Axes.tripcolor,ncolumns,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed ."
matplotlib.axes.Axes.tripcolor,norm,"set the normalization instance|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( ) .|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 ."
matplotlib.axes.Axes.tripcolor,nrows,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed ."
matplotlib.axes.Axes.tripcolor,shading,"shading may be ' flat ' ( the default ) or ' gouraud ' .|||If ' faceted ' , a black grid is drawn around each rectangle ; if ' flat ' , edges are not drawn . Default is ' flat ' , contrary to MATLAB . This kwarg is deprecated ; please use ' edgecolors ' instead : shading='flat ' - - edgecolors='none ' shading='faceted - - edgecolors='k '|||If ' faceted ' , a black grid is drawn around each rectangle ; if ' flat ' , edges are not drawn .|||shading may be ' flat ' ( the default ) or ' gouraud ' . If shading is ' flat ' and C values are defined at points , the color values used for each triangle are from the mean C of the triangle 's three points . If shading is ' gouraud ' then color values must be defined at points ."
matplotlib.axes.Axes.tripcolor,snap,Whether to snap the mesh to pixel boundaries .|||Sets the snap setting which may be
matplotlib.axes.Axes.tripcolor,vmax,"vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.axes.Axes.tripcolor,vmin,"vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.axes.Axes.tripcolor,x,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||Note that the column index corresponds to the x - coordinate , and the row index corresponds to y ; for details , see the Grid Orientation section below ."
matplotlib.axes.Axes.tripcolor,y,"X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :|||Note that the column index corresponds to the x - coordinate , and the row index corresponds to y ; for details , see the Grid Orientation section below ."
matplotlib.axes.Axes.triplot,args,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :"
matplotlib.axes.Axes.triplot,fmt,"If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :"
matplotlib.axes.Axes.triplot,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.triplot,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||Autoscale the view limits using the data limits .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.triplot,x,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.triplot,y,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.axes.Axes.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.axes.Axes.update_datalim_bounds,bounds,Update the datalim to include the given Bbox bounds
matplotlib.axes.Axes.update_from,other,Copy properties from other to self .
matplotlib.axes.Axes.violin,positions,Sets the positions of the violins . The ticks and limits are automatically set to match the positions .|||Sets the positions of the violins .
matplotlib.axes.Axes.violin,showextrema,"If true , will toggle rendering of the extrema ."
matplotlib.axes.Axes.violin,showmeans,"If true , will toggle rendering of the means ."
matplotlib.axes.Axes.violin,showmedians,"If true , will toggle rendering of the medians ."
matplotlib.axes.Axes.violin,vert,"If true , plots the violins veritcally .|||If true , plots the violins veritcally . Otherwise , plots the violins horizontally ."
matplotlib.axes.Axes.violin,vpstats,A list of dictionaries containing stats for each violin plot . Required keys are :|||A list of dictionaries containing stats for each violin plot .
matplotlib.axes.Axes.violin,widths,"Either a scalar or a vector that sets the maximal width of each violin .|||Either a scalar or a vector that sets the maximal width of each violin . The default is 0.5 , which uses about half of the available horizontal space ."
matplotlib.axes.Axes.violinplot,dataset,The input data .
matplotlib.axes.Axes.vlines,alpha,Set the alpha tranparencies of the collection .
matplotlib.axes.Axes.vlines,array,Set the image array from numpy array A
matplotlib.axes.Axes.vlines,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.axes.Axes.vlines,color,Set the color(s ) of the line collection .
matplotlib.axes.Axes.vlines,contains,Replace the contains test used by this artist .
matplotlib.axes.Axes.vlines,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.axes.Axes.vlines,facecolor,Set the facecolor(s ) of the collection .
matplotlib.axes.Axes.vlines,hatch,Set the hatching pattern
matplotlib.axes.Axes.vlines,label,Set the label to s for auto legend .
matplotlib.axes.Axes.vlines,linestyle,Set the linestyle(s ) for the collection .
matplotlib.axes.Axes.vlines,linewidth,Set the linewidth(s ) for the collection .
matplotlib.axes.Axes.vlines,offset_position,Set how offsets are applied .
matplotlib.axes.Axes.vlines,offsets,Set the offsets for the collection .
matplotlib.axes.Axes.vlines,picker,Set the epsilon for picking used by this artist
matplotlib.axes.Axes.vlines,sketch_params,Sets the sketch parameters .
matplotlib.axes.Axes.vlines,x,x-indexes where to plot the lines .
matplotlib.axes.Axes.vlines,"ymin, ymax","Respective beginning and end of each line . If scalars are provided , all lines will have same length .|||Respective beginning and end of each line ."
matplotlib.axes.Axes.xaxis_date,tz,tz is a timezone string or tzinfo instance .|||tz is a timezone string or tzinfo instance . Defaults to rc value .
matplotlib.axes.Axes.xcorr,detrend,x is detrended by the detrend callable . Default is no normalization .|||x is detrended by the detrend callable .
matplotlib.axes.Axes.xcorr,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Only used if usevlines is False ."
matplotlib.axes.Axes.xcorr,marker,Set the line marker
matplotlib.axes.Axes.xcorr,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.axes.Axes.xcorr,maxlags,"number of lags to show . If None , will return all 2 * len(x ) - 1 lags .|||number of lags to show ."
matplotlib.axes.Axes.xcorr,normed,"if True , normalize the data by the autocorrelation at the 0-th lag ."
matplotlib.axes.Axes.xcorr,usevlines,"if True , Axes.vlines is used to plot the vertical lines from the origin to the acorr . Otherwise , Axes.plot is used .|||if True , Axes.vlines is used to plot the vertical lines from the origin to the acorr ."
matplotlib.axes.Axes.xcorr,x,Plot the cross correlation between x and y .
matplotlib.axes.Axes.xcorr,y,Plot the cross correlation between x and y .
matplotlib.axes.Axes.yaxis_date,tz,tz is a timezone string or tzinfo instance .|||tz is a timezone string or tzinfo instance . Defaults to rc value .
matplotlib.axis.Axis.axis_date,tz,Sets up x-axis ticks and labels that treat the x data as dates .|||Sets up x-axis ticks and labels that treat the x data as dates . tz is a tzinfo instance or a timezone string . This timezone is used to create date labels .
matplotlib.axis.Axis.get_ticklabels,minor,"If True return the minor ticklabels , else return the major ticklabels"
matplotlib.axis.Axis.get_ticklabels,which,Overrides minor .
matplotlib.axis.Axis.grid,b,"If b is None and len(kwargs)==0 , toggle the grid state .|||If b is None and len(kwargs)==0 , toggle the grid state . If kwargs are supplied , it is assumed you want the grid on and b will be set to True ."
matplotlib.axis.Axis.grid,which,Set the axis grid on or off ; b is a boolean .|||Set the axis grid on or off ; b is a boolean . Use which = ' major ' | ' minor ' | ' both ' to set the grid for major or minor ticks .
matplotlib.axis.Axis.pan,numsteps,Pan numsteps ( can be positive or negative )
matplotlib.axis.Axis.set_ticklabels,kwarg,"Set the text values of the tick labels . Return a list of Text instances . Use kwarg minor=True to select minor ticks . All other kwargs are used to update the text object properties . As for get_ticklabels , label1 ( left or bottom ) is affected for a given tick only if its label1On attribute is True , and similarly for label2 . The list of returned label text objects consists of all such label1 objects followed by all such label2 objects .|||Set the text values of the tick labels ."
matplotlib.axis.Axis.set_ticklabels,minor=True,"Set the text values of the tick labels . Return a list of Text instances . Use kwarg minor=True to select minor ticks . All other kwargs are used to update the text object properties . As for get_ticklabels , label1 ( left or bottom ) is affected for a given tick only if its label1On attribute is True , and similarly for label2 . The list of returned label text objects consists of all such label1 objects followed by all such label2 objects .|||Set the text values of the tick labels ."
matplotlib.axis.Axis.set_ticklabels,ticklabels,"The input ticklabels is assumed to match the set of tick locations , regardless of the state of label1On and label2On ."
matplotlib.axis.Axis.update_units,data,introspect data for units converter and update the axis.converter instance if necessary . Return True if data is registered for unit conversion .|||introspect data for units converter and update the axis.converter instance if necessary .
matplotlib.axis.Axis.zoom,direction,"Zoom in/out on axis ; if direction is >0 zoom in , else zoom out"
matplotlib.axis.XAxis.set_view_interval,ignore,"If ignore is False , the order of vmin , vmax does not matter ; the original axis orientation will be preserved . In addition , the view limits can be expanded , but will not be reduced . This method is for mpl internal use ; for normal use , see set_xlim ( ) .|||If ignore is False , the order of vmin , vmax does not matter ; the original axis orientation will be preserved ."
matplotlib.axis.XTick.update_position,loc,Set the location of tick in data coords with scalar loc
matplotlib.axis.YAxis.set_view_interval,ignore,"If ignore is False , the order of vmin , vmax does not matter ; the original axis orientation will be preserved .|||If ignore is False , the order of vmin , vmax does not matter ; the original axis orientation will be preserved . In addition , the view limits can be expanded , but will not be reduced . This method is for mpl internal use ; for normal use , see set_ylim ( ) ."
matplotlib.backend_bases.FigureCanvasBase.mpl_connect,func,Connect event with string s to func .|||Connect event with string s to func . The signature of func is :
matplotlib.backend_bases.FigureCanvasBase.mpl_connect,s,Connect event with string s to func .|||Connect event with string s to func . The signature of func is :
matplotlib.backend_bases.FigureCanvasBase.start_event_loop_default,timeout,"This call blocks until a callback function triggers stop_event_loop ( ) or timeout is reached .|||This call blocks until a callback function triggers stop_event_loop ( ) or timeout is reached . If timeout is <=0 , never timeout ."
matplotlib.backend_bases.GraphicsContextBase.set_graylevel,frac,Set the foreground color to be a gray level with frac
matplotlib.backend_bases.GraphicsContextBase.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.backend_bases.GraphicsContextBase.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.backend_bases.GraphicsContextBase.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.backend_bases.RendererBase.close_group,s,Close a grouping element with label s|||Close a grouping element with label s Is only currently used by backend_svg
matplotlib.backend_bases.RendererBase.draw_gouraud_triangle,colors,colors is a 3x4 array of RGBA colors for each point of the triangle .
matplotlib.backend_bases.RendererBase.draw_gouraud_triangle,points,"points is a 3x2 array of ( x , y ) points for the triangle ."
matplotlib.backend_bases.RendererBase.draw_gouraud_triangle,transform,transform is an affine transform to apply to the points .
matplotlib.backend_bases.RendererBase.draw_gouraud_triangles,colors,colors is a Nx3x4 array of RGBA colors for each point of the triangles .
matplotlib.backend_bases.RendererBase.draw_gouraud_triangles,points,"points is a Nx3x2 array of ( x , y ) points for the trianglex ."
matplotlib.backend_bases.RendererBase.draw_gouraud_triangles,transform,transform is an affine transform to apply to the points .
matplotlib.backend_bases.RendererBase.draw_path_collection,antialiaseds,"Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . The offsets in offsets are first transformed by offsetTrans before being applied . offset_position may be either "" screen "" or "" data "" depending on the space that the offsets are in .|||Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds ."
matplotlib.backend_bases.RendererBase.draw_path_collection,edgecolors,"Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . The offsets in offsets are first transformed by offsetTrans before being applied . offset_position may be either "" screen "" or "" data "" depending on the space that the offsets are in .|||Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds ."
matplotlib.backend_bases.RendererBase.draw_path_collection,facecolors,"Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . The offsets in offsets are first transformed by offsetTrans before being applied . offset_position may be either "" screen "" or "" data "" depending on the space that the offsets are in .|||Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds ."
matplotlib.backend_bases.RendererBase.draw_path_collection,linestyles,"Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . The offsets in offsets are first transformed by offsetTrans before being applied . offset_position may be either "" screen "" or "" data "" depending on the space that the offsets are in .|||Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds ."
matplotlib.backend_bases.RendererBase.draw_path_collection,linewidths,"Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . The offsets in offsets are first transformed by offsetTrans before being applied . offset_position may be either "" screen "" or "" data "" depending on the space that the offsets are in .|||Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds ."
matplotlib.backend_bases.RendererBase.draw_path_collection,offsetTrans,"Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . The offsets in offsets are first transformed by offsetTrans before being applied . offset_position may be either "" screen "" or "" data "" depending on the space that the offsets are in .|||Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds ."
matplotlib.backend_bases.RendererBase.draw_path_collection,offset_position,"Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . The offsets in offsets are first transformed by offsetTrans before being applied . offset_position may be either "" screen "" or "" data "" depending on the space that the offsets are in .|||Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds ."
matplotlib.backend_bases.RendererBase.draw_path_collection,offsets,"Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds . offsets is a list of offsets to apply to each of the paths . The offsets in offsets are first transformed by offsetTrans before being applied . offset_position may be either "" screen "" or "" data "" depending on the space that the offsets are in .|||Draws a collection of paths selecting drawing properties from the lists facecolors , edgecolors , linewidths , linestyles and antialiaseds ."
matplotlib.backend_bases.RendererBase.open_group,gid,"Open a grouping element with label s .|||Open a grouping element with label s . If gid is given , use gid as the id of the group . Is only currently used by backend_svg ."
matplotlib.backend_bases.RendererBase.open_group,s,"Open a grouping element with label s .|||Open a grouping element with label s . If gid is given , use gid as the id of the group . Is only currently used by backend_svg ."
matplotlib.backend_bases.RendererBase.stop_filter,filter_func,Used in AggRenderer .|||Used in AggRenderer . Switch back to the original renderer . The contents of the temporary renderer is processed with the filter_func and is drawn on the original renderer as an image .
matplotlib.backend_bases.StatusbarBase.set_message,s,Message text
matplotlib.backend_bases.ToolContainerBase.add_tool,group,The name of the group to add this tool to .
matplotlib.backend_bases.ToolContainerBase.add_tool,position,The position within the group to place this tool .|||The position within the group to place this tool . Defaults to end .
matplotlib.backend_bases.ToolContainerBase.add_tool,tool,"The tool to add , see ToolManager.get_tool ."
matplotlib.backend_bases.ToolContainerBase.add_toolitem,description,"Description of the tool , used for the tooltips"
matplotlib.backend_bases.ToolContainerBase.add_toolitem,group,Name of the group that this tool belongs to
matplotlib.backend_bases.ToolContainerBase.add_toolitem,image_file,Filename of the image for the button or None
matplotlib.backend_bases.ToolContainerBase.add_toolitem,name,"Name of the tool to add , this gets used as the tool 's ID and as the default label of the buttons"
matplotlib.backend_bases.ToolContainerBase.add_toolitem,position,"Position of the tool within its group , if - 1 it goes at the End"
matplotlib.backend_bases.ToolContainerBase.add_toolitem,toggle,True : The button is a toggle ( change the pressed/unpressed state between consecutive clicks )
matplotlib.backend_bases.ToolContainerBase.remove_toolitem,name,Name of the tool to remove
matplotlib.backend_bases.ToolContainerBase.toggle_toolitem,name,Id of the tool to toggle
matplotlib.backend_bases.ToolContainerBase.toggle_toolitem,toggled,Whether to set this tool as toggled or not .
matplotlib.backend_bases.ToolContainerBase.trigger_tool,name,Name(id ) of the tool triggered from within the container
matplotlib.backend_managers.ToolManager.add_tool,name,"Name of the tool , treated as the ID , has to be unique"
matplotlib.backend_managers.ToolManager.add_tool,tool,Reference to find the class of the Tool to added .|||Add tool to ToolManager
matplotlib.backend_managers.ToolManager.get_tool,name,"Name of the tool , or the tool itself"
matplotlib.backend_managers.ToolManager.get_tool,warn,If this method should give warnings .
matplotlib.backend_managers.ToolManager.get_tool_keymap,name,Name of the Tool
matplotlib.backend_managers.ToolManager.remove_tool,name,Name of the Tool
matplotlib.backend_managers.ToolManager.toolmanager_connect,func,Connect event with string s to func .|||Function to be called with signature def func(event )
matplotlib.backend_managers.ToolManager.toolmanager_connect,s,Name of the event|||Connect event with string s to func .
matplotlib.backend_managers.ToolManager.toolmanager_disconnect,cid,Disconnect callback id cid
matplotlib.backend_managers.ToolManager.trigger_tool,canvasevent,Original Canvas event or None
matplotlib.backend_managers.ToolManager.trigger_tool,data,Extra data to pass to the tool when triggering
matplotlib.backend_managers.ToolManager.trigger_tool,name,Name of the tool
matplotlib.backend_managers.ToolManager.trigger_tool,sender: object,Object that wishes to trigger the tool
matplotlib.backend_managers.ToolManager.update_keymap,name,Name of the Tool
matplotlib.backend_tools.ToolBase.trigger,data: object,Extra data
matplotlib.backend_tools.ToolBase.trigger,event: `Event`,The Canvas event that caused this tool to be called
matplotlib.backend_tools.ToolBase.trigger,sender: object,Object that requested the tool to be triggered
matplotlib.backend_tools.add_tools_to_container,container: Container,backend_bases.ToolContainerBase object that will get the tools added
matplotlib.backend_tools.add_tools_to_container,tools,"List in the form [ [ group1 , [ tool1 , tool2 ... ] ] , [ group2 , [ ... ] ] ] Where the tools given by tool1 , and tool2 will display in group1 . See add_tool for details .|||List in the form [ [ group1 , [ tool1 , tool2 ..."
matplotlib.backend_tools.add_tools_to_manager,toolmanager: ToolManager,backend_managers.ToolManager object that will get the tools added
matplotlib.backend_tools.add_tools_to_manager,tools,"The tools to add in a { name : tool } dict , see add_tool for more info ."
matplotlib.backends.backend_pdf.PdfPages,filename: str,Plots using PdfPages.savefig ( ) will be written to a file at this location .|||Plots using PdfPages.savefig ( ) will be written to a file at this location . The file is opened at once and any older file with the same name is overwritten .
matplotlib.backends.backend_pdf.PdfPages,"keep_empty: bool, optional","If set to False , then empty pdf files will be deleted automatically when closed ."
matplotlib.backends.backend_pdf.PdfPages.savefig,None,The resolution in dots per inch .|||The resolution in dots per inch . If None it will default to the value savefig.dpi in the matplotlibrc file . If ' figure ' it will set the dpi to be the value of the figure .
matplotlib.backends.backend_pdf.PdfPages.savefig,bbox_extra_artists,A list of extra artists that will be considered when the tight bbox is calculated .
matplotlib.backends.backend_pdf.PdfPages.savefig,bbox_inches,"Bbox in inches .|||Bbox in inches . Only the given portion of the figure is saved . If ' tight ' , try to figure out the tight bbox of the figure ."
matplotlib.backends.backend_pdf.PdfPages.savefig,dpi,The resolution in dots per inch .|||The resolution in dots per inch . If None it will default to the value savefig.dpi in the matplotlibrc file . If ' figure ' it will set the dpi to be the value of the figure .
matplotlib.backends.backend_pdf.PdfPages.savefig,edgecolor,the colors of the figure rectangle
matplotlib.backends.backend_pdf.PdfPages.savefig,facecolor,the colors of the figure rectangle
matplotlib.backends.backend_pdf.PdfPages.savefig,"figure: :class:`~matplotlib.figure.Figure` or int, optional","Specifies what figure is saved to file . If not specified , the active figure is saved . If a Figure instance is provided , this figure is saved . If an int is specified , the figure instance to save is looked up by number .|||Specifies what figure is saved to file ."
matplotlib.backends.backend_pdf.PdfPages.savefig,format,"One of the file extensions supported by the active backend . Most backends support png , pdf , ps , eps and svg .|||One of the file extensions supported by the active backend ."
matplotlib.backends.backend_pdf.PdfPages.savefig,frameon,"If True , the figure patch will be colored , if False , the figure background will be transparent . If not provided , the rcParam ' savefig.frameon ' will be used .|||If True , the figure patch will be colored , if False , the figure background will be transparent ."
matplotlib.backends.backend_pdf.PdfPages.savefig,orientation,not supported on all backends ; currently only on postscript output
matplotlib.backends.backend_pdf.PdfPages.savefig,pad_inches,Amount of padding around the figure when bbox_inches is ' tight ' .
matplotlib.backends.backend_pdf.PdfPages.savefig,papertype,"One of ' letter ' , ' legal ' , ' executive ' , ' ledger ' , ' a0 ' through ' a10 ' , ' b0 ' through ' b10 ' . Only supported for postscript output .|||One of ' letter ' , ' legal ' , ' executive ' , ' ledger ' , ' a0 ' through ' a10 ' , ' b0 ' through ' b10 ' ."
matplotlib.backends.backend_pdf.PdfPages.savefig,transparent,"If True , the axes patches will all be transparent ; the figure patch will also be transparent unless facecolor and/or edgecolor are specified via kwargs . This is useful , for example , for displaying a plot on top of a colored background on a web page . The transparency of these patches will be restored to their original values upon exit of this function .|||If True , the axes patches will all be transparent ; the figure patch will also be transparent unless facecolor and/or edgecolor are specified via kwargs ."
matplotlib.cbook.CallbackRegistry.connect,func,register func to be called when a signal s is generated func will be called
matplotlib.cbook.CallbackRegistry.connect,s,register func to be called when a signal s is generated func will be called
matplotlib.cbook.CallbackRegistry.disconnect,cid,disconnect the callback registered with callback id cid
matplotlib.cbook.CallbackRegistry.process,*args,process signal s . All of the functions registered to receive callbacks on s will be called with * args and * * kwargs|||process signal s .
matplotlib.cbook.CallbackRegistry.process,s,process signal s . All of the functions registered to receive callbacks on s will be called with * args and * * kwargs|||process signal s .
matplotlib.cbook.Grouper.get_siblings,a,"Returns all of the items joined with a , including itself ."
matplotlib.cbook.Grouper.joined,a,Returns True if a and b are members of the same set .
matplotlib.cbook.Grouper.joined,b,Returns True if a and b are members of the same set .
matplotlib.cbook.Stack.bubble,o,raise o to the top of the stack and return o .|||raise o to the top of the stack and return o . o must be in the stack
matplotlib.cbook.Stack.remove,o,remove element o from the stack
matplotlib.cbook.Xlator.xlat,text,"Translate text , returns the modified text ."
matplotlib.cbook.allequal,seq,"Return True if all elements of seq compare equal .|||Return True if all elements of seq compare equal . If seq is 0 or 1 length , return True"
matplotlib.cbook.allpairs,x,return all possible pairs in sequence x
matplotlib.cbook.alltrue,seq,"Return True if all elements of seq evaluate to True .|||Return True if all elements of seq evaluate to True . If seq is empty , return False ."
matplotlib.cbook.boxplot_stats,X,Data that will be represented in the boxplots .|||Data that will be represented in the boxplots . Should have 2 or fewer dimensions .
matplotlib.cbook.boxplot_stats,bootstrap,Number of times the confidence intervals around the median should be bootstrapped ( percentile method ) .
matplotlib.cbook.boxplot_stats,labels,Labels for each dataset . Length must be compatible with dimensions of X|||Labels for each dataset .
matplotlib.cbook.boxplot_stats,whis,"As a float , determines the reach of the whiskers past the first and third quartiles ( e.g. , Q3 + whis*IQR , QR = interquartile range , Q3-Q1 ) . Beyond the whiskers , data are considered outliers and are plotted as individual points . Set this to an unreasonably high value to force the whiskers to show the min and max data . Alternatively , set this to an ascending sequence of percentile ( e.g. , [ 5 , 95 ] ) to set the whiskers at specific percentiles of the data . Finally , can whis be the string ' range ' to force the whiskers to the min and max of the data . In the edge case that the 25th and 75th percentiles are equivalent , whis will be automatically set to ' range '|||As a float , determines the reach of the whiskers past the first and third quartiles ( e.g. , Q3 + whis*IQR , QR = interquartile range , Q3-Q1 ) ."
matplotlib.cbook.dedent,s,Remove excess indentation from docstring s .
matplotlib.cbook.deprecated,alternative,An alternative function that the user may use in place of the deprecated function . The deprecation warning will tell the user about this alternative if provided .|||An alternative function that the user may use in place of the deprecated function .
matplotlib.cbook.deprecated,message,"Override the default deprecation message .|||Override the default deprecation message . The format specifier %(func)s may be used for the name of the function , and %(alternative)s may be used in the deprecation message to insert the name of an alternative to the deprecated function . %(obj_type ) may be used to insert a friendly name for the type of object being deprecated ."
matplotlib.cbook.deprecated,name,"The name of the deprecated function ; if not provided the name is automatically determined from the passed in function , though this is useful in the case of renamed functions , where the new function is just assigned to the name of the deprecated function .|||The name of the deprecated function ; if not provided the name is automatically determined from the passed in function , though this is useful in the case of renamed functions , where the new function is just assigned to the name of the deprecated function . For example :"
matplotlib.cbook.deprecated,pending,"If True , uses a PendingDeprecationWarning instead of a DeprecationWarning ."
matplotlib.cbook.deprecated,since,The release at which this API became deprecated . This is required .|||The release at which this API became deprecated .
matplotlib.cbook.dict_delall,d,delete all of the keys from the dict d
matplotlib.cbook.dict_delall,keys,delete all of the keys from the dict d
matplotlib.cbook.finddir,o,return all attributes of o which match string in match . if case is True require an exact case match .|||return all attributes of o which match string in match .
matplotlib.cbook.get_recursive_filelist,args,Recurse all the files and dirs in args ignoring symbolic links and return the files as a list of strings
matplotlib.cbook.get_sample_data,asfileobj,"Return a sample data file .|||Return a sample data file . fname is a path relative to the mpl-data/sample_data directory . If asfileobj is True return a file object , otherwise just a file path ."
matplotlib.cbook.get_sample_data,fname,"Return a sample data file .|||Return a sample data file . fname is a path relative to the mpl-data/sample_data directory . If asfileobj is True return a file object , otherwise just a file path ."
matplotlib.cbook.get_split_ind,seq,seq is a list of words .|||seq is a list of words . Return the index into seq such that :
matplotlib.cbook.index_of,y,The proposed y-value
matplotlib.cbook.is_numlike,obj,return true if obj looks like a number
matplotlib.cbook.is_scalar,obj,return true if obj is not string like and is not iterable
matplotlib.cbook.is_sequence_of_strings,obj,Returns true if obj is iterable and contains strings
matplotlib.cbook.is_string_like,obj,Return True if obj looks like a string
matplotlib.cbook.is_writable_file_like,obj,return true if obj looks like a file object with a write method
matplotlib.cbook.is_writable_file_like,write,return true if obj looks like a file object with a write method
matplotlib.cbook.iterable,obj,return true if obj is iterable
matplotlib.cbook.local_over_kwdict,local_var: any object,The local variable ( highest priority )
matplotlib.cbook.mkdirs,mode,"make directory newdir recursively , and set mode . Equivalent to|||make directory newdir recursively , and set mode ."
matplotlib.cbook.mkdirs,newdir,"make directory newdir recursively , and set mode . Equivalent to|||make directory newdir recursively , and set mode ."
matplotlib.cbook.onetrue,seq,"Return True if one element of seq is True .|||Return True if one element of seq is True . It seq is empty , return False ."
matplotlib.cbook.pieces,num,Break up the seq into num tuples
matplotlib.cbook.pieces,seq,Break up the seq into num tuples
matplotlib.cbook.pts_to_midstep,x,The x location of the steps
matplotlib.cbook.pts_to_midstep,"y1, y2, ...",Any number of y arrays to be turned into steps .|||Any number of y arrays to be turned into steps . All must be the same length as x
matplotlib.cbook.pts_to_poststep,x,The x location of the steps
matplotlib.cbook.pts_to_poststep,"y1, y2, ...",Any number of y arrays to be turned into steps .|||Any number of y arrays to be turned into steps . All must be the same length as x
matplotlib.cbook.pts_to_prestep,x,The x location of the steps
matplotlib.cbook.pts_to_prestep,"y1, y2, ...",Any number of y arrays to be turned into steps .|||Any number of y arrays to be turned into steps . All must be the same length as x
matplotlib.cbook.safezip,args,make sure args are equal len before zipping
matplotlib.cbook.to_filehandle,flag,"fname can be a filename or a file handle .|||fname can be a filename or a file handle . Support for gzipped files is automatic , if the filename ends in .gz . flag is a read/write flag for file ( )"
matplotlib.cbook.to_filehandle,fname,"fname can be a filename or a file handle .|||fname can be a filename or a file handle . Support for gzipped files is automatic , if the filename ends in .gz . flag is a read/write flag for file ( )"
matplotlib.cbook.unique,x,Return a list of unique elements of x
matplotlib.cbook.unmasked_index_ranges,N,"Returns Nx2 numpy.ndarray with each row the start and stop indices for slices of the compressed numpy.ndarray corresponding to each of N uninterrupted runs of unmasked values .|||Returns Nx2 numpy.ndarray with each row the start and stop indices for slices of the compressed numpy.ndarray corresponding to each of N uninterrupted runs of unmasked values . If optional argument compressed is False , it returns the start and stop indices into the original numpy.ndarray , not the compressed numpy.ndarray . Returns None if there are no unmasked values ."
matplotlib.cbook.unmasked_index_ranges,compressed,"Returns Nx2 numpy.ndarray with each row the start and stop indices for slices of the compressed numpy.ndarray corresponding to each of N uninterrupted runs of unmasked values .|||Returns Nx2 numpy.ndarray with each row the start and stop indices for slices of the compressed numpy.ndarray corresponding to each of N uninterrupted runs of unmasked values . If optional argument compressed is False , it returns the start and stop indices into the original numpy.ndarray , not the compressed numpy.ndarray . Returns None if there are no unmasked values ."
matplotlib.cbook.unmasked_index_ranges,mask,mask will be flattened if it is not already 1-D .|||Find index ranges where mask is False .
matplotlib.cbook.violin_stats,X,Sample data that will be used to produce the gaussian kernel density estimates . Must have 2 or fewer dimensions .|||Sample data that will be used to produce the gaussian kernel density estimates .
matplotlib.cbook.violin_stats,method,"The method used to calculate the kernel density estimate for each column of data . When called via method(v , coords ) , it should return a vector of the values of the KDE evaluated at the values specified in coords .|||The method used to calculate the kernel density estimate for each column of data ."
matplotlib.cbook.violin_stats,points,Defines the number of points to evaluate each of the gaussian kernel density estimates at .
matplotlib.cbook.warn_deprecated,alternative,An alternative function that the user may use in place of the deprecated function . The deprecation warning will tell the user about this alternative if provided .|||An alternative function that the user may use in place of the deprecated function .
matplotlib.cbook.warn_deprecated,message,"Override the default deprecation message .|||Override the default deprecation message . The format specifier %(func)s may be used for the name of the function , and %(alternative)s may be used in the deprecation message to insert the name of an alternative to the deprecated function . %(obj_type ) may be used to insert a friendly name for the type of object being deprecated ."
matplotlib.cbook.warn_deprecated,name,"The name of the deprecated function ; if not provided the name is automatically determined from the passed in function , though this is useful in the case of renamed functions , where the new function is just assigned to the name of the deprecated function .|||The name of the deprecated function ; if not provided the name is automatically determined from the passed in function , though this is useful in the case of renamed functions , where the new function is just assigned to the name of the deprecated function . For example :"
matplotlib.cbook.warn_deprecated,obj_type,The object type being deprecated .
matplotlib.cbook.warn_deprecated,pending,"If True , uses a PendingDeprecationWarning instead of a DeprecationWarning ."
matplotlib.cbook.warn_deprecated,since,The release at which this API became deprecated .
matplotlib.cbook.wrap,cols,wrap text with prefix at length cols
matplotlib.cbook.wrap,prefix,wrap text with prefix at length cols
matplotlib.cbook.wrap,text,wrap text with prefix at length cols
matplotlib.cm.ScalarMappable,cmap,The colormap used to map normalized data values to RGBA colors .
matplotlib.cm.ScalarMappable,norm,"The normalizing object which scales data , typically into the interval [ 0 , 1 ] .|||The normalizing object which scales data , typically into the interval [ 0 , 1 ] . If None , norm defaults to a colors.Normalize object which initializes its scaling based on the first data processed ."
matplotlib.cm.ScalarMappable.set_array,A,Set the image array from numpy array A
matplotlib.cm.ScalarMappable.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.cm.ScalarMappable.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.cm.ScalarMappable.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.cm.ScalarMappable.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.cm.get_cmap,lut,"If lut is not None it must be an integer giving the number of entries desired in the lookup table , and name must be a standard mpl colormap name ."
matplotlib.cm.get_cmap,name,"If name is a matplotlib.colors.Colormap instance , it will be returned .|||Get a colormap instance , defaulting to rc values if name is None .|||If lut is not None it must be an integer giving the number of entries desired in the lookup table , and name must be a standard mpl colormap name ."
matplotlib.cm.register_cmap,cmap,"In the first case , cmap must be a matplotlib.colors.Colormap instance . The name is optional ; if absent , the name will be the name attribute of the cmap .|||In the first case , cmap must be a matplotlib.colors.Colormap"
matplotlib.cm.register_cmap,name,"In the first case , cmap must be a matplotlib.colors.Colormap instance . The name is optional ; if absent , the name will be the name attribute of the cmap .|||In the first case , cmap must be a matplotlib.colors.Colormap"
matplotlib.cm.revcmap,data,Can only handle specification data in dictionary format .
matplotlib.collections.AsteriskPolygonCollection.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.AsteriskPolygonCollection.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.AsteriskPolygonCollection.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.AsteriskPolygonCollection.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.AsteriskPolygonCollection.findobj,match,match can be
matplotlib.collections.AsteriskPolygonCollection.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.AsteriskPolygonCollection.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.AsteriskPolygonCollection.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.AsteriskPolygonCollection.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.AsteriskPolygonCollection.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.AsteriskPolygonCollection.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.AsteriskPolygonCollection.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.AsteriskPolygonCollection.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.AsteriskPolygonCollection.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.AsteriskPolygonCollection.set_array,A,Set the image array from numpy array A
matplotlib.collections.AsteriskPolygonCollection.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.AsteriskPolygonCollection.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.AsteriskPolygonCollection.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.AsteriskPolygonCollection.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.AsteriskPolygonCollection.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.AsteriskPolygonCollection.set_hatch,hatch,hatch can be one of :
matplotlib.collections.AsteriskPolygonCollection.set_label,s,Set the label to s for auto legend .
matplotlib.collections.AsteriskPolygonCollection.set_linestyle,ls,The line style .
matplotlib.collections.AsteriskPolygonCollection.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.AsteriskPolygonCollection.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.AsteriskPolygonCollection.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.AsteriskPolygonCollection.set_picker,picker,picker can be one of the following :
matplotlib.collections.AsteriskPolygonCollection.set_sizes,dpi,The dpi of the canvas . Defaults to 72.0 .|||The dpi of the canvas .
matplotlib.collections.AsteriskPolygonCollection.set_sizes,sizes,The size to set for each element of the collection . The value is the ' area ' of the element .|||The size to set for each element of the collection .
matplotlib.collections.AsteriskPolygonCollection.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.AsteriskPolygonCollection.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.AsteriskPolygonCollection.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.AsteriskPolygonCollection.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.AsteriskPolygonCollection.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.AsteriskPolygonCollection.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.AsteriskPolygonCollection.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.collections.BrokenBarHCollection.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.BrokenBarHCollection.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.BrokenBarHCollection.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.BrokenBarHCollection.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.BrokenBarHCollection.findobj,match,match can be
matplotlib.collections.BrokenBarHCollection.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.BrokenBarHCollection.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.BrokenBarHCollection.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.BrokenBarHCollection.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.BrokenBarHCollection.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.BrokenBarHCollection.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.BrokenBarHCollection.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.BrokenBarHCollection.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.BrokenBarHCollection.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.BrokenBarHCollection.set_array,A,Set the image array from numpy array A
matplotlib.collections.BrokenBarHCollection.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.BrokenBarHCollection.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.BrokenBarHCollection.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.BrokenBarHCollection.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.BrokenBarHCollection.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.BrokenBarHCollection.set_hatch,hatch,hatch can be one of :
matplotlib.collections.BrokenBarHCollection.set_label,s,Set the label to s for auto legend .
matplotlib.collections.BrokenBarHCollection.set_linestyle,ls,The line style .
matplotlib.collections.BrokenBarHCollection.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.BrokenBarHCollection.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.BrokenBarHCollection.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.BrokenBarHCollection.set_picker,picker,picker can be one of the following :
matplotlib.collections.BrokenBarHCollection.set_sizes,dpi,The dpi of the canvas . Defaults to 72.0 .|||The dpi of the canvas .
matplotlib.collections.BrokenBarHCollection.set_sizes,sizes,The size to set for each element of the collection . The value is the ' area ' of the element .|||The size to set for each element of the collection .
matplotlib.collections.BrokenBarHCollection.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.BrokenBarHCollection.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.BrokenBarHCollection.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.BrokenBarHCollection.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.BrokenBarHCollection.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.BrokenBarHCollection.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.BrokenBarHCollection.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.collections.CircleCollection.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.CircleCollection.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.CircleCollection.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.CircleCollection.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.CircleCollection.findobj,match,match can be
matplotlib.collections.CircleCollection.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.CircleCollection.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.CircleCollection.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.CircleCollection.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.CircleCollection.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.CircleCollection.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.CircleCollection.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.CircleCollection.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.CircleCollection.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.CircleCollection.set_array,A,Set the image array from numpy array A
matplotlib.collections.CircleCollection.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.CircleCollection.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.CircleCollection.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.CircleCollection.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.CircleCollection.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.CircleCollection.set_hatch,hatch,hatch can be one of :
matplotlib.collections.CircleCollection.set_label,s,Set the label to s for auto legend .
matplotlib.collections.CircleCollection.set_linestyle,ls,The line style .
matplotlib.collections.CircleCollection.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.CircleCollection.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.CircleCollection.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.CircleCollection.set_picker,picker,picker can be one of the following :
matplotlib.collections.CircleCollection.set_sizes,dpi,The dpi of the canvas . Defaults to 72.0 .|||The dpi of the canvas .
matplotlib.collections.CircleCollection.set_sizes,sizes,The size to set for each element of the collection . The value is the ' area ' of the element .|||The size to set for each element of the collection .
matplotlib.collections.CircleCollection.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.CircleCollection.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.CircleCollection.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.CircleCollection.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.CircleCollection.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.CircleCollection.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.CircleCollection.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.collections.Collection.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.Collection.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.Collection.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.Collection.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.Collection.findobj,match,match can be
matplotlib.collections.Collection.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.Collection.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.Collection.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.Collection.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.Collection.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.Collection.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.Collection.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.Collection.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.Collection.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.Collection.set_array,A,Set the image array from numpy array A
matplotlib.collections.Collection.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.Collection.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.Collection.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.Collection.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.Collection.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.Collection.set_hatch,hatch,hatch can be one of :
matplotlib.collections.Collection.set_label,s,Set the label to s for auto legend .
matplotlib.collections.Collection.set_linestyle,ls,The line style .
matplotlib.collections.Collection.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.Collection.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.Collection.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.Collection.set_picker,picker,picker can be one of the following :
matplotlib.collections.Collection.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.Collection.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.Collection.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.Collection.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.Collection.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.Collection.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.Collection.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.collections.EllipseCollection.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.EllipseCollection.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.EllipseCollection.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.EllipseCollection.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.EllipseCollection.findobj,match,match can be
matplotlib.collections.EllipseCollection.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.EllipseCollection.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.EllipseCollection.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.EllipseCollection.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.EllipseCollection.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.EllipseCollection.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.EllipseCollection.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.EllipseCollection.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.EllipseCollection.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.EllipseCollection.set_array,A,Set the image array from numpy array A
matplotlib.collections.EllipseCollection.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.EllipseCollection.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.EllipseCollection.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.EllipseCollection.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.EllipseCollection.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.EllipseCollection.set_hatch,hatch,hatch can be one of :
matplotlib.collections.EllipseCollection.set_label,s,Set the label to s for auto legend .
matplotlib.collections.EllipseCollection.set_linestyle,ls,The line style .
matplotlib.collections.EllipseCollection.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.EllipseCollection.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.EllipseCollection.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.EllipseCollection.set_picker,picker,picker can be one of the following :
matplotlib.collections.EllipseCollection.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.EllipseCollection.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.EllipseCollection.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.EllipseCollection.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.EllipseCollection.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.EllipseCollection.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.EllipseCollection.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.collections.EventCollection.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.EventCollection.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.EventCollection.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.EventCollection.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.EventCollection.findobj,match,match can be
matplotlib.collections.EventCollection.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.EventCollection.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.EventCollection.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.EventCollection.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.EventCollection.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.EventCollection.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.EventCollection.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.EventCollection.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.EventCollection.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.EventCollection.set_array,A,Set the image array from numpy array A
matplotlib.collections.EventCollection.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.EventCollection.set_color,c,"Set the color(s ) of the line collection . c can be a matplotlib color arg ( all patches have same color ) , or a sequence or rgba tuples ; if it is a sequence the patches will cycle through the sequence .|||Set the color(s ) of the line collection ."
matplotlib.collections.EventCollection.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.EventCollection.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.EventCollection.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.EventCollection.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.EventCollection.set_hatch,hatch,hatch can be one of :
matplotlib.collections.EventCollection.set_label,s,Set the label to s for auto legend .
matplotlib.collections.EventCollection.set_linestyle,ls,The line style .
matplotlib.collections.EventCollection.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.EventCollection.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.EventCollection.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.EventCollection.set_picker,picker,picker can be one of the following :
matplotlib.collections.EventCollection.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.EventCollection.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.EventCollection.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.EventCollection.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.EventCollection.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.EventCollection.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.EventCollection.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.collections.LineCollection.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.LineCollection.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.LineCollection.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.LineCollection.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.LineCollection.findobj,match,match can be
matplotlib.collections.LineCollection.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.LineCollection.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.LineCollection.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.LineCollection.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.LineCollection.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.LineCollection.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.LineCollection.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.LineCollection.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.LineCollection.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.LineCollection.set_array,A,Set the image array from numpy array A
matplotlib.collections.LineCollection.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.LineCollection.set_color,c,"Set the color(s ) of the line collection . c can be a matplotlib color arg ( all patches have same color ) , or a sequence or rgba tuples ; if it is a sequence the patches will cycle through the sequence .|||Set the color(s ) of the line collection ."
matplotlib.collections.LineCollection.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.LineCollection.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.LineCollection.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.LineCollection.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.LineCollection.set_hatch,hatch,hatch can be one of :
matplotlib.collections.LineCollection.set_label,s,Set the label to s for auto legend .
matplotlib.collections.LineCollection.set_linestyle,ls,The line style .
matplotlib.collections.LineCollection.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.LineCollection.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.LineCollection.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.LineCollection.set_picker,picker,picker can be one of the following :
matplotlib.collections.LineCollection.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.LineCollection.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.LineCollection.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.LineCollection.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.LineCollection.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.LineCollection.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.LineCollection.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.collections.PatchCollection.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.PatchCollection.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.PatchCollection.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.PatchCollection.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.PatchCollection.findobj,match,match can be
matplotlib.collections.PatchCollection.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.PatchCollection.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.PatchCollection.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.PatchCollection.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.PatchCollection.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.PatchCollection.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.PatchCollection.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.PatchCollection.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.PatchCollection.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.PatchCollection.set_array,A,Set the image array from numpy array A
matplotlib.collections.PatchCollection.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.PatchCollection.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.PatchCollection.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.PatchCollection.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.PatchCollection.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.PatchCollection.set_hatch,hatch,hatch can be one of :
matplotlib.collections.PatchCollection.set_label,s,Set the label to s for auto legend .
matplotlib.collections.PatchCollection.set_linestyle,ls,The line style .
matplotlib.collections.PatchCollection.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.PatchCollection.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.PatchCollection.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.PatchCollection.set_picker,picker,picker can be one of the following :
matplotlib.collections.PatchCollection.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.PatchCollection.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.PatchCollection.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.PatchCollection.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.PatchCollection.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.PatchCollection.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.PatchCollection.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.collections.PathCollection.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.PathCollection.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.PathCollection.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.PathCollection.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.PathCollection.findobj,match,match can be
matplotlib.collections.PathCollection.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.PathCollection.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.PathCollection.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.PathCollection.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.PathCollection.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.PathCollection.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.PathCollection.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.PathCollection.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.PathCollection.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.PathCollection.set_array,A,Set the image array from numpy array A
matplotlib.collections.PathCollection.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.PathCollection.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.PathCollection.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.PathCollection.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.PathCollection.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.PathCollection.set_hatch,hatch,hatch can be one of :
matplotlib.collections.PathCollection.set_label,s,Set the label to s for auto legend .
matplotlib.collections.PathCollection.set_linestyle,ls,The line style .
matplotlib.collections.PathCollection.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.PathCollection.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.PathCollection.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.PathCollection.set_picker,picker,picker can be one of the following :
matplotlib.collections.PathCollection.set_sizes,dpi,The dpi of the canvas . Defaults to 72.0 .|||The dpi of the canvas .
matplotlib.collections.PathCollection.set_sizes,sizes,The size to set for each element of the collection . The value is the ' area ' of the element .|||The size to set for each element of the collection .
matplotlib.collections.PathCollection.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.PathCollection.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.PathCollection.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.PathCollection.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.PathCollection.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.PathCollection.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.PathCollection.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.collections.PolyCollection.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.PolyCollection.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.PolyCollection.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.PolyCollection.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.PolyCollection.findobj,match,match can be
matplotlib.collections.PolyCollection.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.PolyCollection.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.PolyCollection.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.PolyCollection.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.PolyCollection.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.PolyCollection.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.PolyCollection.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.PolyCollection.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.PolyCollection.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.PolyCollection.set_array,A,Set the image array from numpy array A
matplotlib.collections.PolyCollection.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.PolyCollection.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.PolyCollection.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.PolyCollection.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.PolyCollection.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.PolyCollection.set_hatch,hatch,hatch can be one of :
matplotlib.collections.PolyCollection.set_label,s,Set the label to s for auto legend .
matplotlib.collections.PolyCollection.set_linestyle,ls,The line style .
matplotlib.collections.PolyCollection.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.PolyCollection.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.PolyCollection.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.PolyCollection.set_picker,picker,picker can be one of the following :
matplotlib.collections.PolyCollection.set_sizes,dpi,The dpi of the canvas . Defaults to 72.0 .|||The dpi of the canvas .
matplotlib.collections.PolyCollection.set_sizes,sizes,The size to set for each element of the collection . The value is the ' area ' of the element .|||The size to set for each element of the collection .
matplotlib.collections.PolyCollection.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.PolyCollection.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.PolyCollection.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.PolyCollection.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.PolyCollection.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.PolyCollection.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.PolyCollection.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.collections.QuadMesh.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.QuadMesh.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.QuadMesh.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.QuadMesh.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.QuadMesh.findobj,match,match can be
matplotlib.collections.QuadMesh.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.QuadMesh.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.QuadMesh.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.QuadMesh.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.QuadMesh.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.QuadMesh.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.QuadMesh.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.QuadMesh.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.QuadMesh.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.QuadMesh.set_array,A,Set the image array from numpy array A
matplotlib.collections.QuadMesh.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.QuadMesh.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.QuadMesh.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.QuadMesh.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.QuadMesh.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.QuadMesh.set_hatch,hatch,hatch can be one of :
matplotlib.collections.QuadMesh.set_label,s,Set the label to s for auto legend .
matplotlib.collections.QuadMesh.set_linestyle,ls,The line style .
matplotlib.collections.QuadMesh.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.QuadMesh.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.QuadMesh.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.QuadMesh.set_picker,picker,picker can be one of the following :
matplotlib.collections.QuadMesh.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.QuadMesh.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.QuadMesh.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.QuadMesh.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.QuadMesh.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.QuadMesh.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.QuadMesh.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.collections.RegularPolyCollection.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.RegularPolyCollection.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.RegularPolyCollection.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.RegularPolyCollection.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.RegularPolyCollection.findobj,match,match can be
matplotlib.collections.RegularPolyCollection.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.RegularPolyCollection.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.RegularPolyCollection.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.RegularPolyCollection.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.RegularPolyCollection.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.RegularPolyCollection.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.RegularPolyCollection.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.RegularPolyCollection.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.RegularPolyCollection.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.RegularPolyCollection.set_array,A,Set the image array from numpy array A
matplotlib.collections.RegularPolyCollection.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.RegularPolyCollection.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.RegularPolyCollection.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.RegularPolyCollection.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.RegularPolyCollection.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.RegularPolyCollection.set_hatch,hatch,hatch can be one of :
matplotlib.collections.RegularPolyCollection.set_label,s,Set the label to s for auto legend .
matplotlib.collections.RegularPolyCollection.set_linestyle,ls,The line style .
matplotlib.collections.RegularPolyCollection.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.RegularPolyCollection.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.RegularPolyCollection.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.RegularPolyCollection.set_picker,picker,picker can be one of the following :
matplotlib.collections.RegularPolyCollection.set_sizes,dpi,The dpi of the canvas . Defaults to 72.0 .|||The dpi of the canvas .
matplotlib.collections.RegularPolyCollection.set_sizes,sizes,The size to set for each element of the collection . The value is the ' area ' of the element .|||The size to set for each element of the collection .
matplotlib.collections.RegularPolyCollection.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.RegularPolyCollection.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.RegularPolyCollection.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.RegularPolyCollection.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.RegularPolyCollection.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.RegularPolyCollection.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.RegularPolyCollection.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.collections.StarPolygonCollection.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.StarPolygonCollection.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.StarPolygonCollection.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.StarPolygonCollection.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.StarPolygonCollection.findobj,match,match can be
matplotlib.collections.StarPolygonCollection.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.StarPolygonCollection.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.StarPolygonCollection.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.StarPolygonCollection.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.StarPolygonCollection.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.StarPolygonCollection.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.StarPolygonCollection.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.StarPolygonCollection.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.StarPolygonCollection.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.StarPolygonCollection.set_array,A,Set the image array from numpy array A
matplotlib.collections.StarPolygonCollection.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.StarPolygonCollection.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.StarPolygonCollection.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.StarPolygonCollection.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.StarPolygonCollection.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.StarPolygonCollection.set_hatch,hatch,hatch can be one of :
matplotlib.collections.StarPolygonCollection.set_label,s,Set the label to s for auto legend .
matplotlib.collections.StarPolygonCollection.set_linestyle,ls,The line style .
matplotlib.collections.StarPolygonCollection.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.StarPolygonCollection.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.StarPolygonCollection.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.StarPolygonCollection.set_picker,picker,picker can be one of the following :
matplotlib.collections.StarPolygonCollection.set_sizes,dpi,The dpi of the canvas . Defaults to 72.0 .|||The dpi of the canvas .
matplotlib.collections.StarPolygonCollection.set_sizes,sizes,The size to set for each element of the collection . The value is the ' area ' of the element .|||The size to set for each element of the collection .
matplotlib.collections.StarPolygonCollection.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.StarPolygonCollection.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.StarPolygonCollection.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.StarPolygonCollection.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.StarPolygonCollection.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.StarPolygonCollection.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.StarPolygonCollection.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.collections.TriMesh.add_callback,id,Returns an id that is useful for removing the callback with remove_callback ( ) later .
matplotlib.collections.TriMesh.convert_xunits,x,"For artists in an axes , if the xaxis has units support , convert x using xaxis unit type"
matplotlib.collections.TriMesh.convert_yunits,y,"For artists in an axes , if the yaxis has units support , convert y using yaxis unit type"
matplotlib.collections.TriMesh.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.collections.TriMesh.findobj,match,match can be
matplotlib.collections.TriMesh.format_cursor_data,cursor data,Return cursor data string formatted .
matplotlib.collections.TriMesh.get_offset_position,offset_position,"Returns how offsets are applied for the collection .|||Returns how offsets are applied for the collection . If offset_position is ' screen ' , the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates ."
matplotlib.collections.TriMesh.have_units,x,Return True if units are set on the x or y axes
matplotlib.collections.TriMesh.have_units,y,Return True if units are set on the x or y axes
matplotlib.collections.TriMesh.hitlist,event,List the children of the artist which contain the mouse event event .
matplotlib.collections.TriMesh.pick,mouseevent,each child artist will fire a pick event if mouseevent is over the artist and the artist has picker set
matplotlib.collections.TriMesh.remove,autolim,Note : relim ( ) will not see collections even if the collection was added to axes with autolim = True .
matplotlib.collections.TriMesh.remove_callback,id,Remove a callback based on its id .
matplotlib.collections.TriMesh.set_alpha,alpha,Set the alpha tranparencies of the collection . alpha must be a float or None .|||Set the alpha tranparencies of the collection .
matplotlib.collections.TriMesh.set_array,A,Set the image array from numpy array A
matplotlib.collections.TriMesh.set_clim,vmin,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.collections.TriMesh.set_contains,hit,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.TriMesh.set_contains,props,"If the mouse event is over the artist , return hit = True and props is a dictionary of properties you want returned with the contains test .|||If the mouse event is over the artist , return hit = True"
matplotlib.collections.TriMesh.set_edgecolor,c,"Set the edgecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||Set the edgecolor(s ) of the collection .|||If c is ' face ' , the edge color will always be the same as the face color .|||If c is ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn ."
matplotlib.collections.TriMesh.set_facecolor,c,"Set the facecolor(s ) of the collection . c can be a matplotlib color spec ( all patches have same color ) , or a sequence of specs ; if it is a sequence the patches will cycle through the sequence .|||If c is ' none ' , the patch will not be filled .|||Set the facecolor(s ) of the collection ."
matplotlib.collections.TriMesh.set_hatch,hatch,hatch can be one of :
matplotlib.collections.TriMesh.set_label,s,Set the label to s for auto legend .
matplotlib.collections.TriMesh.set_linestyle,ls,The line style .
matplotlib.collections.TriMesh.set_linewidth,lw,Set the linewidth(s ) for the collection .|||Set the linewidth(s ) for the collection . lw can be a scalar or a sequence ; if it is a sequence the patches will cycle through the sequence
matplotlib.collections.TriMesh.set_offset_position,offset_position,"Set how offsets are applied . If offset_position is ' screen ' ( default ) the offset is applied after the master transform has been applied , that is , the offsets are in screen coordinates . If offset_position is ' data ' , the offset is applied before the master transform , i.e. , the offsets are in data coordinates .|||Set how offsets are applied ."
matplotlib.collections.TriMesh.set_offsets,offsets,Set the offsets for the collection . offsets can be a scalar or a sequence .|||Set the offsets for the collection .
matplotlib.collections.TriMesh.set_picker,picker,picker can be one of the following :
matplotlib.collections.TriMesh.set_sketch_params,length,"The length of the wiggle along the line , in pixels ( default 128.0 )"
matplotlib.collections.TriMesh.set_sketch_params,randomness,The scale factor by which the length is shrunken or expanded ( default 16.0 )
matplotlib.collections.TriMesh.set_sketch_params,scale,"The amplitude of the wiggle perpendicular to the source line , in pixels . If scale is None , or not provided , no sketch filter will be provided .|||The amplitude of the wiggle perpendicular to the source line , in pixels ."
matplotlib.collections.TriMesh.to_rgba,alpha,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file ."
matplotlib.collections.TriMesh.to_rgba,bytes,"In either case , if bytes is False ( default ) , the rgba array will be floats in the 0-1 range ; if it is True , the returned rgba array will be uint8 in the 0 to 255 range ."
matplotlib.collections.TriMesh.to_rgba,x,"There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file .|||Return a normalized rgba array corresponding to x .|||In the normal case , x is a 1-D or 2-D sequence of scalars , and the corresponding ndarray of rgba values will be returned , based on the norm and colormap set for this ScalarMappable .|||Note : this method assumes the input is well-behaved ; it does not check for anomalies such as x being a masked rgba array , or being an integer type other than uint8 , or being a floating point rgba array with values outside the 0-1 range .|||There is one special case , for handling images that are already rgb or rgba , such as might have been read from an image file . If x is an ndarray with 3 dimensions , and the last dimension is either 3 or 4 , then it will be treated as an rgb or rgba array , and no mapping will be done . If the last dimension is 3 , the alpha kwarg ( defaulting to 1 ) will be used to fill in the transparency . If the last dimension is 4 , the alpha kwarg is ignored ; it does not replace the pre-existing alpha . A ValueError will be raised if the third dimension is other than 3 or 4 ."
matplotlib.collections.TriMesh.update,prop,Update the properties of this Artist from the dictionary prop .
matplotlib.colorbar.Colorbar.add_lines,erase,Set erase to False if these lines should be added to any pre-existing lines .
matplotlib.colorbar.ColorbarBase.add_lines,colors,colors and linewidths must be scalars or sequences the same length as levels .
matplotlib.colorbar.ColorbarBase.add_lines,erase,Set erase to False to add lines without first removing any previously added lines .
matplotlib.colorbar.ColorbarBase.add_lines,levels,colors and linewidths must be scalars or sequences the same length as levels .
matplotlib.colorbar.ColorbarBase.add_lines,linewidths,colors and linewidths must be scalars or sequences the same length as levels .
matplotlib.colorbar.ColorbarBase.set_ticklabels,update_ticks,"set tick labels . Tick labels are updated immediately unless update_ticks is False . To manually update the ticks , call update_ticks method explicitly .|||set tick labels ."
matplotlib.colorbar.ColorbarBase.set_ticks,update_ticks,"set tick locations . Tick locations are updated immediately unless update_ticks is False . To manually update the ticks , call update_ticks method explicitly .|||set tick locations ."
matplotlib.colorbar.make_axes_gridspec,make_axes,"While this function is meant to be compatible with make_axes , there could be some minor differences .|||While this function is meant to be compatible with make_axes , there could be some minor differences . :"
matplotlib.colorbar.make_axes_gridspec,orientation,' vertical ' or ' horizontal '
matplotlib.colors.ColorConverter.to_rgb,A,"if arg is RGBA , the A will simply be discarded ."
matplotlib.colors.ColorConverter.to_rgb,RGB,Returns an RGB tuple of three floats from 0-1 .|||arg can be an RGB or RGBA sequence or a string in any of several forms :
matplotlib.colors.ColorConverter.to_rgb,RGBA,"if arg is RGBA , the A will simply be discarded .|||arg can be an RGB or RGBA sequence or a string in any of several forms :"
matplotlib.colors.ColorConverter.to_rgb,arg,"if arg is RGBA , the A will simply be discarded .|||arg can be an RGB or RGBA sequence or a string in any of several forms :"
matplotlib.colors.ColorConverter.to_rgba,A,"For acceptable values of arg , see to_rgb ( ) . In addition , if arg is "" none "" ( case-insensitive ) , then ( 0,0,0,0 ) will be returned . If arg is an RGBA sequence and alpha is not None , alpha will replace the original A .|||For acceptable values of arg , see to_rgb ( ) ."
matplotlib.colors.ColorConverter.to_rgba,RGBA,"For acceptable values of arg , see to_rgb ( ) . In addition , if arg is "" none "" ( case-insensitive ) , then ( 0,0,0,0 ) will be returned . If arg is an RGBA sequence and alpha is not None , alpha will replace the original A .|||For acceptable values of arg , see to_rgb ( ) .|||Returns an RGBA tuple of four floats from 0-1 ."
matplotlib.colors.ColorConverter.to_rgba,alpha,"For acceptable values of arg , see to_rgb ( ) . In addition , if arg is "" none "" ( case-insensitive ) , then ( 0,0,0,0 ) will be returned . If arg is an RGBA sequence and alpha is not None , alpha will replace the original A .|||For acceptable values of arg , see to_rgb ( ) ."
matplotlib.colors.ColorConverter.to_rgba,arg,"For acceptable values of arg , see to_rgb ( ) . In addition , if arg is "" none "" ( case-insensitive ) , then ( 0,0,0,0 ) will be returned . If arg is an RGBA sequence and alpha is not None , alpha will replace the original A .|||For acceptable values of arg , see to_rgb ( ) ."
matplotlib.colors.ColorConverter.to_rgba_array,RGBA,Returns a numpy array of RGBA tuples .
matplotlib.colors.ColorConverter.to_rgba_array,c,"Special case to handle "" no color "" : if c is "" none "" ( case-insensitive ) , then an empty array will be returned . Same for an empty list .|||Special case to handle "" no color "" : if c is "" none "" ( case-insensitive ) , then an empty array will be returned ."
matplotlib.colors.Colormap,N,The number of rgb quantization levels .
matplotlib.colors.Colormap,name,The name of the colormap .
matplotlib.colors.LightSource,altdeg,"The altitude ( 0-90 , degrees up from horizontal ) of the light source .|||The altitude ( 0-90 , degrees up from horizontal ) of the light source . Defaults to 45 degrees from horizontal ."
matplotlib.colors.LightSource,azdeg,"The azimuth ( 0-360 , degrees clockwise from North ) of the light source . Defaults to 315 degrees ( from the northwest ) .|||The azimuth ( 0-360 , degrees clockwise from North ) of the light source ."
matplotlib.colors.LightSource.blend_hsv,hsv_max_sat,The maximum saturation value that the intensity map can shift the output image to .|||The maximum saturation value that the intensity map can shift the output image to . Defaults to 1 .
matplotlib.colors.LightSource.blend_hsv,hsv_max_val,"The maximum value ( "" v "" in "" hsv "" ) that the intensity map can shift the output image to . Defaults to 1 .|||The maximum value ( "" v "" in "" hsv "" ) that the intensity map can shift the output image to ."
matplotlib.colors.LightSource.blend_hsv,hsv_min_sat,The minimum saturation value that the intensity map can shift the output image to . Defaults to 0 .|||The minimum saturation value that the intensity map can shift the output image to .
matplotlib.colors.LightSource.blend_hsv,"hsv_min_val: number, optional","The minimum value ( "" v "" in "" hsv "" ) that the intensity map can shift the output image to . Defaults to 0 .|||The minimum value ( "" v "" in "" hsv "" ) that the intensity map can shift the output image to ."
matplotlib.colors.LightSource.blend_hsv,intensity,An MxNx1 array of floats ranging from 0 to 1 ( grayscale image ) .
matplotlib.colors.LightSource.blend_hsv,rgb,An MxNx3 RGB array of floats ranging from 0 to 1 ( color image ) .
matplotlib.colors.LightSource.blend_overlay,intensity,An MxNx1 array of floats ranging from 0 to 1 ( grayscale image ) .
matplotlib.colors.LightSource.blend_overlay,rgb,An MxNx3 RGB array of floats ranging from 0 to 1 ( color image ) .
matplotlib.colors.LightSource.blend_soft_light,intensity,An MxNx1 array of floats ranging from 0 to 1 ( grayscale image ) .
matplotlib.colors.LightSource.blend_soft_light,rgb,An MxNx3 RGB array of floats ranging from 0 to 1 ( color image ) .
matplotlib.colors.LightSource.hillshade,dx,The x-spacing ( columns ) of the input elevation grid .
matplotlib.colors.LightSource.hillshade,dy,The y-spacing ( rows ) of the input elevation grid .
matplotlib.colors.LightSource.hillshade,elevation,A 2d array ( or equivalent ) of the height values used to generate an illumination map
matplotlib.colors.LightSource.hillshade,fraction,Increases or decreases the contrast of the hillshade .|||Increases or decreases the contrast of the hillshade . Values greater than one will cause intermediate values to move closer to full illumination or shadow ( and clipping any values that move beyond 0 or 1 ) . Note that this is not visually or mathematically the same as vertical exaggeration .
matplotlib.colors.LightSource.hillshade,intensity,"A 2d array of illumination values between 0-1 , where 0 is completely in shadow and 1 is completely illuminated ."
matplotlib.colors.LightSource.hillshade,vert_exag,The amount to exaggerate the elevation values by when calculating illumination . This can be used either to correct for differences in units between the x-y coordinate system and the elevation coordinate system ( e.g. decimal degrees vs meters ) or to exaggerate or de-emphasize topographic effects .|||The amount to exaggerate the elevation values by when calculating illumination .
matplotlib.colors.LightSource.shade,blend_mode,"The type of blending used to combine the colormapped data values with the illumination intensity .|||The type of blending used to combine the colormapped data values with the illumination intensity . For backwards compatibility , this defaults to "" hsv "" . Note that for most topographic surfaces , "" overlay "" or "" soft "" appear more visually realistic . If a user-defined function is supplied , it is expected to combine an MxNx3 RGB array of floats ( ranging 0 to 1 ) with an MxNx1 hillshade array ( also 0 to 1 ) . ( Call signature func(rgb , illum , * * kwargs ) ) Additional kwargs supplied to this function will be passed on to the blend_mode function ."
matplotlib.colors.LightSource.shade,cmap,"The colormap used to color the data array .|||The colormap used to color the data array . Note that this must be a Colormap instance . For example , rather than passing in cmap='gist_earth ' , use cmap=plt.get_cmap('gist_earth ' ) instead ."
matplotlib.colors.LightSource.shade,data,A 2d array ( or equivalent ) of the height values used to generate a shaded map .
matplotlib.colors.LightSource.shade,dx,The x-spacing ( columns ) of the input elevation grid .
matplotlib.colors.LightSource.shade,dy,The y-spacing ( rows ) of the input elevation grid .
matplotlib.colors.LightSource.shade,fraction,Increases or decreases the contrast of the hillshade .|||Increases or decreases the contrast of the hillshade . Values greater than one will cause intermediate values to move closer to full illumination or shadow ( and clipping any values that move beyond 0 or 1 ) . Note that this is not visually or mathematically the same as vertical exaggeration .
matplotlib.colors.LightSource.shade,norm,"The normalization used to scale values before colormapping .|||The normalization used to scale values before colormapping . If None , the input will be linearly scaled between its min and max ."
matplotlib.colors.LightSource.shade,vert_exag,The amount to exaggerate the elevation values by when calculating illumination . This can be used either to correct for differences in units between the x-y coordinate system and the elevation coordinate system ( e.g. decimal degrees vs meters ) or to exaggerate or de-emphasize topography .|||The amount to exaggerate the elevation values by when calculating illumination .
matplotlib.colors.LightSource.shade,vmax,"The maximum value used in colormapping data .|||The maximum value used in colormapping data . If None the maximum value in data is used . If norm is specified , then this argument will be ignored ."
matplotlib.colors.LightSource.shade,vmin,"The minimum value used in colormapping data .|||The minimum value used in colormapping data . If None the minimum value in data is used . If norm is specified , then this argument will be ignored ."
matplotlib.colors.LightSource.shade_rgb,blend_mode,"The type of blending used to combine the colormapped data values with the illumination intensity .|||The type of blending used to combine the colormapped data values with the illumination intensity . For backwards compatibility , this defaults to "" hsv "" . Note that for most topographic surfaces , "" overlay "" or "" soft "" appear more visually realistic . If a user-defined function is supplied , it is expected to combine an MxNx3 RGB array of floats ( ranging 0 to 1 ) with an MxNx1 hillshade array ( also 0 to 1 ) . ( Call signature func(rgb , illum , * * kwargs ) ) Additional kwargs supplied to this function will be passed on to the blend_mode function ."
matplotlib.colors.LightSource.shade_rgb,dx,The x-spacing ( columns ) of the input elevation grid .
matplotlib.colors.LightSource.shade_rgb,dy,The y-spacing ( rows ) of the input elevation grid .
matplotlib.colors.LightSource.shade_rgb,elevation,A 2d array ( or equivalent ) of the height values used to generate a shaded map .
matplotlib.colors.LightSource.shade_rgb,fraction,Increases or decreases the contrast of the hillshade .|||Increases or decreases the contrast of the hillshade . Values greater than one will cause intermediate values to move closer to full illumination or shadow ( and clipping any values that move beyond 0 or 1 ) . Note that this is not visually or mathematically the same as vertical exaggeration .
matplotlib.colors.LightSource.shade_rgb,rgb,"An MxNx3 RGB array , assumed to be in the range of 0 to 1 ."
matplotlib.colors.LightSource.shade_rgb,vert_exag,The amount to exaggerate the elevation values by when calculating illumination . This can be used either to correct for differences in units between the x-y coordinate system and the elevation coordinate system ( e.g. decimal degrees vs meters ) or to exaggerate or de-emphasize topography .|||The amount to exaggerate the elevation values by when calculating illumination .
matplotlib.colors.LogNorm.autoscale,A,"Set vmin , vmax to min , max of A ."
matplotlib.colors.LogNorm.autoscale,vmax,"Set vmin , vmax to min , max of A ."
matplotlib.colors.LogNorm.autoscale,vmin,"Set vmin , vmax to min , max of A ."
matplotlib.colors.Normalize.autoscale,A,"Set vmin , vmax to min , max of A ."
matplotlib.colors.Normalize.autoscale,vmax,"Set vmin , vmax to min , max of A ."
matplotlib.colors.Normalize.autoscale,vmin,"Set vmin , vmax to min , max of A ."
matplotlib.colors.PowerNorm.autoscale,A,"Set vmin , vmax to min , max of A ."
matplotlib.colors.PowerNorm.autoscale,vmax,"Set vmin , vmax to min , max of A ."
matplotlib.colors.PowerNorm.autoscale,vmin,"Set vmin , vmax to min , max of A ."
matplotlib.colors.SymLogNorm.autoscale,A,"Set vmin , vmax to min , max of A ."
matplotlib.colors.SymLogNorm.autoscale,vmax,"Set vmin , vmax to min , max of A ."
matplotlib.colors.SymLogNorm.autoscale,vmin,"Set vmin , vmax to min , max of A ."
matplotlib.colors.from_levels_and_colors,colors,"The fill color to use for each level . If extend is "" neither "" there must be n_level - 1 colors . For an extend of "" min "" or "" max "" add one extra color , and for an extend of "" both "" add two colors .|||The fill color to use for each level ."
matplotlib.colors.from_levels_and_colors,extend,The behaviour when a value falls out of range of the given levels .|||The behaviour when a value falls out of range of the given levels . See contourf ( ) for details .
matplotlib.colors.from_levels_and_colors,levels,The quantization levels used to construct the BoundaryNorm . Values v are quantizized to level i if lev[i ] < = v < lev[i+1 ] .|||The quantization levels used to construct the BoundaryNorm .
matplotlib.colors.hex2color,s,"Take a hex string s and return the corresponding rgb 3-tuple Example : # efefef - > ( 0.93725 , 0.93725 , 0.93725 )"
matplotlib.colors.hsv_to_rgb,hsv,"All values assumed to be in range [ 0 , 1 ]"
matplotlib.colors.is_color_like,RGB,Return True if c can be converted to RGB
matplotlib.colors.is_color_like,c,Return True if c can be converted to RGB
matplotlib.colors.makeMappingArray,N,Create an N - element 1-d lookup table
matplotlib.colors.makeMappingArray,data,"data represented by a list of x,y0,y1 mapping correspondences .|||data represented by a list of x,y0,y1 mapping correspondences . Each element in this list represents how a value between 0 and 1 ( inclusive ) represented by x is mapped to a corresponding value between 0 and 1 ( inclusive ) . The two values of y are to allow for discontinuous mapping functions ( say as might be found in a sawtooth ) where y0 represents the value of y for values of x < = to that given , and y1 is the value to be used for x > than that given ) . The list must start with x=0 , end with x=1 , and all values of x must be in increasing order . Values between the given mapping points are determined by simple linear interpolation ."
matplotlib.colors.rgb_to_hsv,arr,"All values must be in the range [ 0 , 1 ]"
matplotlib.dates.DateFormatter.strftime,fmt,fmt is a strftime ( ) format string .
matplotlib.dates.DateFormatter.strftime_pre_1900,fmt,fmt is a strftime ( ) format string .
matplotlib.dates.date2num,d,d is either a datetime instance or a sequence of datetimes .
matplotlib.dates.date2num,one,"Return value is a floating point number ( or sequence of floats ) which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 UTC , plus one . The addition of one here is a historical artifact . Also , note that the Gregorian calendar is assumed ; this is not universal practice . For details , see the module docstring .|||Return value is a floating point number ( or sequence of floats ) which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 UTC , plus one ."
matplotlib.dates.date2num,plus,"Return value is a floating point number ( or sequence of floats ) which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 UTC , plus one . The addition of one here is a historical artifact . Also , note that the Gregorian calendar is assumed ; this is not universal practice . For details , see the module docstring .|||Return value is a floating point number ( or sequence of floats ) which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 UTC , plus one ."
matplotlib.dates.drange,delta,Return a date range as float Gregorian ordinals .|||Return a date range as float Gregorian ordinals . dstart and dend are datetime instances . delta is a datetime.timedelta instance .
matplotlib.dates.drange,dend,Return a date range as float Gregorian ordinals .|||Return a date range as float Gregorian ordinals . dstart and dend are datetime instances . delta is a datetime.timedelta instance .
matplotlib.dates.drange,dstart,Return a date range as float Gregorian ordinals .|||Return a date range as float Gregorian ordinals . dstart and dend are datetime instances . delta is a datetime.timedelta instance .
matplotlib.dates.num2date,one,"x is a float value which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 UTC plus one . The addition of one here is a historical artifact . Also , note that the Gregorian calendar is assumed ; this is not universal practice . For details , see the module docstring .|||x is a float value which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 UTC plus one ."
matplotlib.dates.num2date,plus,"x is a float value which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 UTC plus one . The addition of one here is a historical artifact . Also , note that the Gregorian calendar is assumed ; this is not universal practice . For details , see the module docstring .|||x is a float value which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 UTC plus one ."
matplotlib.dates.num2date,tz,Return value is a datetime instance in timezone tz ( default to rcparams TZ value ) .
matplotlib.dates.num2date,x,"x is a float value which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 UTC plus one . The addition of one here is a historical artifact . Also , note that the Gregorian calendar is assumed ; this is not universal practice . For details , see the module docstring .|||x is a float value which gives the number of days ( fraction part represents hours , minutes , seconds ) since 0001-01-01 00:00:00 UTC plus one .|||If x is a sequence , a sequence of datetime objects will be returned ."
matplotlib.dates.num2epoch,d,Convert days since 0001 to epoch . d can be a number or sequence .|||Convert days since 0001 to epoch .
matplotlib.dviread.find_tex_file,format,"Call kpsewhich to find a file in the texmf tree .|||Call kpsewhich to find a file in the texmf tree . If format is not None , it is used as the value for the - - format option ."
matplotlib.figure.AxesStack.add,a,"Add Axes a , with key key , to the stack , and return the stack .|||If a is already on the stack , do n't add it again , but return None ."
matplotlib.figure.AxesStack.add,key,"Add Axes a , with key key , to the stack , and return the stack ."
matplotlib.figure.AxesStack.get,key,"Return the Axes instance that was added with key .|||Return the Axes instance that was added with key . If it is not present , return None ."
matplotlib.figure.Figure.add_axes,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.figure.Figure.add_axes,agg_filter,set agg_filter fuction .
matplotlib.figure.Figure.add_axes,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.figure.Figure.add_axes,anchor,anchor
matplotlib.figure.Figure.add_axes,animated,Set the artist 's animation state .
matplotlib.figure.Figure.add_axes,aspect,aspect
matplotlib.figure.Figure.add_axes,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.figure.Figure.add_axes,bottom,"Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .|||Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal Axes kwargs plus projection which sets the projection type of the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) . Typical usage :"
matplotlib.figure.Figure.add_axes,clip_box,Set the artist 's clip Bbox .
matplotlib.figure.Figure.add_axes,clip_on,Set whether artist uses clipping .
matplotlib.figure.Figure.add_axes,clip_path,"Set the artist 's clip path , which may be"
matplotlib.figure.Figure.add_axes,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.figure.Figure.add_axes,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.figure.Figure.add_axes,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.figure.Figure.add_axes,contains,Replace the contains test used by this artist .
matplotlib.figure.Figure.add_axes,cursor_props,Set the cursor property as
matplotlib.figure.Figure.add_axes,gid,Sets the ( group ) id for the artist
matplotlib.figure.Figure.add_axes,hatch,Set the hatching pattern
matplotlib.figure.Figure.add_axes,height,"Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .|||Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal Axes kwargs plus projection which sets the projection type of the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) . Typical usage :"
matplotlib.figure.Figure.add_axes,label,Set the label to s for auto legend .
matplotlib.figure.Figure.add_axes,left,"Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .|||Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal Axes kwargs plus projection which sets the projection type of the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) . Typical usage :"
matplotlib.figure.Figure.add_axes,linestyle,Set the patch linestyle
matplotlib.figure.Figure.add_axes,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.figure.Figure.add_axes,picker,Set the epsilon for picking used by this artist
matplotlib.figure.Figure.add_axes,position,Set the axes position with
matplotlib.figure.Figure.add_axes,projection,"Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .|||In addition to projection , the following kwargs are supported :|||Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal Axes kwargs plus projection which sets the projection type of the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) . Typical usage :"
matplotlib.figure.Figure.add_axes,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.figure.Figure.add_axes,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.figure.Figure.add_axes,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.figure.Figure.add_axes,rect,"Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .|||Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal Axes kwargs plus projection which sets the projection type of the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) . Typical usage :"
matplotlib.figure.Figure.add_axes,sketch_params,Sets the sketch parameters .
matplotlib.figure.Figure.add_axes,snap,Sets the snap setting which may be
matplotlib.figure.Figure.add_axes,title,Set a title for the axes .
matplotlib.figure.Figure.add_axes,transform,Set the Transform instance used by this artist .
matplotlib.figure.Figure.add_axes,url,Sets the url for the artist
matplotlib.figure.Figure.add_axes,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.figure.Figure.add_axes,visible,Set the artist 's visiblity .
matplotlib.figure.Figure.add_axes,width,"Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .|||Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal Axes kwargs plus projection which sets the projection type of the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) . Typical usage :"
matplotlib.figure.Figure.add_axes,xlabel,Set the label for the xaxis .
matplotlib.figure.Figure.add_axes,xlim,Set the data limits for the xaxis
matplotlib.figure.Figure.add_axes,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.figure.Figure.add_axes,xscale,Set the scaling of the x-axis
matplotlib.figure.Figure.add_axes,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.figure.Figure.add_axes,xticks,Set the x ticks with list of ticks
matplotlib.figure.Figure.add_axes,ylabel,Set the label for the yaxis
matplotlib.figure.Figure.add_axes,ylim,Set the data limits for the yaxis
matplotlib.figure.Figure.add_axes,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.figure.Figure.add_axes,yscale,Set the scaling of the y-axis
matplotlib.figure.Figure.add_axes,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.figure.Figure.add_axes,yticks,Set the y ticks with list of ticks
matplotlib.figure.Figure.add_axes,zorder,Set the zorder for the artist .
matplotlib.figure.Figure.add_subplot,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.figure.Figure.add_subplot,agg_filter,set agg_filter fuction .
matplotlib.figure.Figure.add_subplot,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.figure.Figure.add_subplot,anchor,anchor
matplotlib.figure.Figure.add_subplot,animated,Set the artist 's animation state .
matplotlib.figure.Figure.add_subplot,args,"If the figure already has a subplot with key ( args , kwargs ) then it will simply make that subplot current and return it ."
matplotlib.figure.Figure.add_subplot,aspect,aspect
matplotlib.figure.Figure.add_subplot,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.figure.Figure.add_subplot,bottom,"Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .|||Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal Axes kwargs plus projection which sets the projection type of the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) . Typical usage :"
matplotlib.figure.Figure.add_subplot,clip_box,Set the artist 's clip Bbox .
matplotlib.figure.Figure.add_subplot,clip_on,Set whether artist uses clipping .
matplotlib.figure.Figure.add_subplot,clip_path,"Set the artist 's clip path , which may be"
matplotlib.figure.Figure.add_subplot,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.figure.Figure.add_subplot,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.figure.Figure.add_subplot,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.figure.Figure.add_subplot,contains,Replace the contains test used by this artist .
matplotlib.figure.Figure.add_subplot,cursor_props,Set the cursor property as
matplotlib.figure.Figure.add_subplot,gid,Sets the ( group ) id for the artist
matplotlib.figure.Figure.add_subplot,hatch,Set the hatching pattern
matplotlib.figure.Figure.add_subplot,height,"Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .|||Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal Axes kwargs plus projection which sets the projection type of the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) . Typical usage :"
matplotlib.figure.Figure.add_subplot,label,Set the label to s for auto legend .
matplotlib.figure.Figure.add_subplot,left,"Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .|||Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal Axes kwargs plus projection which sets the projection type of the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) . Typical usage :"
matplotlib.figure.Figure.add_subplot,linestyle,Set the patch linestyle
matplotlib.figure.Figure.add_subplot,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.figure.Figure.add_subplot,picker,Set the epsilon for picking used by this artist
matplotlib.figure.Figure.add_subplot,polar=True,"kwargs are legal Axes kwargs plus projection , which chooses a projection type for the axes .|||kwargs are legal Axes kwargs plus projection , which chooses a projection type for the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) ."
matplotlib.figure.Figure.add_subplot,position,Set the axes position with
matplotlib.figure.Figure.add_subplot,projection,"Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal Axes kwargs plus projection which sets the projection type of the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) . Typical usage :|||In addition to projection , the following kwargs are supported :|||Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .|||kwargs are legal Axes kwargs plus projection , which chooses a projection type for the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) .|||kwargs are legal Axes kwargs plus projection , which chooses a projection type for the axes ."
matplotlib.figure.Figure.add_subplot,projection='polar',"kwargs are legal Axes kwargs plus projection , which chooses a projection type for the axes .|||kwargs are legal Axes kwargs plus projection , which chooses a projection type for the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) ."
matplotlib.figure.Figure.add_subplot,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.figure.Figure.add_subplot,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.figure.Figure.add_subplot,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.figure.Figure.add_subplot,rect,"Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .|||Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal Axes kwargs plus projection which sets the projection type of the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) . Typical usage :"
matplotlib.figure.Figure.add_subplot,sketch_params,Sets the sketch parameters .
matplotlib.figure.Figure.add_subplot,snap,Sets the snap setting which may be
matplotlib.figure.Figure.add_subplot,title,Set a title for the axes .
matplotlib.figure.Figure.add_subplot,transform,Set the Transform instance used by this artist .
matplotlib.figure.Figure.add_subplot,url,Sets the url for the artist
matplotlib.figure.Figure.add_subplot,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.figure.Figure.add_subplot,visible,Set the artist 's visiblity .
matplotlib.figure.Figure.add_subplot,width,"Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .|||Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal Axes kwargs plus projection which sets the projection type of the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) . Typical usage :"
matplotlib.figure.Figure.add_subplot,xlabel,Set the label for the xaxis .
matplotlib.figure.Figure.add_subplot,xlim,Set the data limits for the xaxis
matplotlib.figure.Figure.add_subplot,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.figure.Figure.add_subplot,xscale,Set the scaling of the x-axis
matplotlib.figure.Figure.add_subplot,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.figure.Figure.add_subplot,xticks,Set the x ticks with list of ticks
matplotlib.figure.Figure.add_subplot,ylabel,Set the label for the yaxis
matplotlib.figure.Figure.add_subplot,ylim,Set the data limits for the yaxis
matplotlib.figure.Figure.add_subplot,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.figure.Figure.add_subplot,yscale,Set the scaling of the y-axis
matplotlib.figure.Figure.add_subplot,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.figure.Figure.add_subplot,yticks,Set the y ticks with list of ticks
matplotlib.figure.Figure.add_subplot,zorder,Set the zorder for the artist .
matplotlib.figure.Figure.clf,keep_observers,"Set keep_observers to True if , for example , a gui widget is tracking the axes in the figure ."
matplotlib.figure.Figure.colorbar,ax,None | parent axes object(s ) from which space for a new colorbar axes will be stolen . If a list of axes is given they will all be resized to make room for the colorbar axes .|||None | parent axes object(s ) from which space for a new colorbar axes will be stolen .
matplotlib.figure.Figure.colorbar,cax,None | axes object into which the colorbar will be drawn
matplotlib.figure.Figure.colorbar,extend,"If mappable is a ContourSet , its extend kwarg is included automatically .|||If mappable is a ContourSet , its extend"
matplotlib.figure.Figure.colorbar,mappable,"If mappable is a ContourSet , its extend kwarg is included automatically .|||Create a colorbar for a ScalarMappable instance , mappable .|||If mappable is a ContourSet , its extend|||the Image , ContourSet , etc. to which the colorbar applies ; this argument is mandatory for the colorbar ( ) method but optional for the colorbar ( ) function , which sets the default to the current image ."
matplotlib.figure.Figure.colorbar,shrink,"Note that the shrink kwarg provides a simple way to keep a vertical colorbar , for example , from being taller than the axes of the mappable to which the colorbar is attached ; but it is a manual method requiring some trial and error . If the colorbar is too tall ( or a horizontal colorbar is too wide ) use a smaller value of shrink .|||Note that the shrink kwarg provides a simple way to keep a vertical colorbar , for example , from being taller than the axes of the mappable to which the colorbar is attached ; but it is a manual method requiring some trial and error ."
matplotlib.figure.Figure.colorbar,use_gridspec,"False | If cax is None , a new cax is created as an instance of Axes .|||False | If cax is None , a new cax is created as an instance of Axes . If ax is an instance of Subplot and use_gridspec is True , cax is created as an instance of Subplot using the grid_spec module ."
matplotlib.figure.Figure.draw,renderer,Render the figure using matplotlib.backend_bases.RendererBase instance renderer .|||Render the figure using matplotlib.backend_bases.RendererBase
matplotlib.figure.Figure.draw_artist,a,draw matplotlib.artist.Artist instance a only - - this is available only after the figure is drawn
matplotlib.figure.Figure.figimage,X,X must be a float array :|||adds a non-resampled array X to the figure .
matplotlib.figure.Figure.figimage,xo,"with pixel offsets xo , yo ,"
matplotlib.figure.Figure.figimage,yo,"with pixel offsets xo , yo ,"
matplotlib.figure.Figure.gca,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.figure.Figure.gca,agg_filter,set agg_filter fuction .
matplotlib.figure.Figure.gca,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.figure.Figure.gca,anchor,anchor
matplotlib.figure.Figure.gca,animated,Set the artist 's animation state .
matplotlib.figure.Figure.gca,aspect,aspect
matplotlib.figure.Figure.gca,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.figure.Figure.gca,clip_box,Set the artist 's clip Bbox .
matplotlib.figure.Figure.gca,clip_on,Set whether artist uses clipping .
matplotlib.figure.Figure.gca,clip_path,"Set the artist 's clip path , which may be"
matplotlib.figure.Figure.gca,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.figure.Figure.gca,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.figure.Figure.gca,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.figure.Figure.gca,contains,Replace the contains test used by this artist .
matplotlib.figure.Figure.gca,cursor_props,Set the cursor property as
matplotlib.figure.Figure.gca,gid,Sets the ( group ) id for the artist
matplotlib.figure.Figure.gca,hatch,Set the hatching pattern
matplotlib.figure.Figure.gca,label,Set the label to s for auto legend .
matplotlib.figure.Figure.gca,linestyle,Set the patch linestyle
matplotlib.figure.Figure.gca,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.figure.Figure.gca,picker,Set the epsilon for picking used by this artist
matplotlib.figure.Figure.gca,position,Set the axes position with
matplotlib.figure.Figure.gca,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.figure.Figure.gca,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.figure.Figure.gca,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.figure.Figure.gca,sketch_params,Sets the sketch parameters .
matplotlib.figure.Figure.gca,snap,Sets the snap setting which may be
matplotlib.figure.Figure.gca,title,Set a title for the axes .
matplotlib.figure.Figure.gca,transform,Set the Transform instance used by this artist .
matplotlib.figure.Figure.gca,url,Sets the url for the artist
matplotlib.figure.Figure.gca,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.figure.Figure.gca,visible,Set the artist 's visiblity .
matplotlib.figure.Figure.gca,xlabel,Set the label for the xaxis .
matplotlib.figure.Figure.gca,xlim,Set the data limits for the xaxis
matplotlib.figure.Figure.gca,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.figure.Figure.gca,xscale,Set the scaling of the x-axis
matplotlib.figure.Figure.gca,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.figure.Figure.gca,xticks,Set the x ticks with list of ticks
matplotlib.figure.Figure.gca,ylabel,Set the label for the yaxis
matplotlib.figure.Figure.gca,ylim,Set the data limits for the yaxis
matplotlib.figure.Figure.gca,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.figure.Figure.gca,yscale,Set the scaling of the y-axis
matplotlib.figure.Figure.gca,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.figure.Figure.gca,yticks,Set the y ticks with list of ticks
matplotlib.figure.Figure.gca,zorder,Set the zorder for the artist .
matplotlib.figure.Figure.ginput,mouse_add,"The buttons used for the various actions ( adding points , removing points , terminating the inputs ) can be overriden via the arguments mouse_add , mouse_pop and mouse_stop , that give the associated mouse button : 1 for left , 2 for middle , 3 for right ."
matplotlib.figure.Figure.ginput,mouse_pop,"The buttons used for the various actions ( adding points , removing points , terminating the inputs ) can be overriden via the arguments mouse_add , mouse_pop and mouse_stop , that give the associated mouse button : 1 for left , 2 for middle , 3 for right ."
matplotlib.figure.Figure.ginput,mouse_stop,"The buttons used for the various actions ( adding points , removing points , terminating the inputs ) can be overriden via the arguments mouse_add , mouse_pop and mouse_stop , that give the associated mouse button : 1 for left , 2 for middle , 3 for right ."
matplotlib.figure.Figure.ginput,n,"If n is zero or negative , accumulate clicks until a middle click ( or potentially both mouse buttons at once ) terminates the input .|||This will wait for n clicks from the user and return a list of the coordinates of each click ."
matplotlib.figure.Figure.ginput,timeout,"If timeout is zero or negative , does not timeout ."
matplotlib.figure.Figure.legend,False,"If True , draw a shadow behind legend .|||if True , draw a frame with a round fancybox .|||if True , legend marker is placed to the left of the legend label if False , legend marker is placed to the right of the legend label|||if True , draw a frame with a round fancybox . If None , use rc|||If True , draw a shadow behind legend . If None , use rc settings ."
matplotlib.figure.Figure.legend,None,"if True , draw a frame with a round fancybox . If None , use rc|||If True , draw a shadow behind legend . If None , use rc settings .|||The relative size of legend markers vs. original . If None , use rc settings .|||If True , draw a shadow behind legend .|||A matplotlib.font_manager.FontProperties instance . If prop is a dictionary , a new instance will be created with prop . If None , use rc settings .|||The relative size of legend markers vs. original .|||if True , draw a frame with a round fancybox .|||A matplotlib.font_manager.FontProperties"
matplotlib.figure.Figure.legend,True,"If True , draw a shadow behind legend .|||if True , draw a frame with a round fancybox .|||if True , legend marker is placed to the left of the legend label if False , legend marker is placed to the right of the legend label|||if True , draw a frame with a round fancybox . If None , use rc|||If True , draw a shadow behind legend . If None , use rc settings ."
matplotlib.figure.Figure.legend,fancybox,"if True , draw a frame with a round fancybox .|||if True , draw a frame with a round fancybox . If None , use rc"
matplotlib.figure.Figure.legend,loc,"The loc location codes are :|||loc can also be an ( x,y ) tuple in figure coords , which specifies the lower left of the legend box . figure coords are ( 0,0 ) is the left , bottom of the figure and 1,1 is the right , top .|||loc can also be an ( x,y ) tuple in figure coords , which specifies the lower left of the legend box ."
matplotlib.figure.Figure.legend,markerfirst,"if True , legend marker is placed to the left of the legend label if False , legend marker is placed to the right of the legend label"
matplotlib.figure.Figure.legend,markerscale,"The relative size of legend markers vs. original .|||The relative size of legend markers vs. original . If None , use rc settings ."
matplotlib.figure.Figure.legend,mode,"if mode is "" expand "" , the legend will be horizontally expanded to fill the axes area ( or bbox_to_anchor )"
matplotlib.figure.Figure.legend,ncol,number of columns . default is 1|||number of columns .
matplotlib.figure.Figure.legend,numpoints,"The number of points in the legend line , default is 4"
matplotlib.figure.Figure.legend,prop,"A matplotlib.font_manager.FontProperties|||A matplotlib.font_manager.FontProperties instance . If prop is a dictionary , a new instance will be created with prop . If None , use rc settings ."
matplotlib.figure.Figure.legend,scatterpoints,"The number of points in the legend line , default is 4"
matplotlib.figure.Figure.legend,scatteryoffsets,a list of yoffsets for scatter symbols in legend
matplotlib.figure.Figure.legend,shadow,"If True , draw a shadow behind legend .|||If True , draw a shadow behind legend . If None , use rc settings ."
matplotlib.figure.Figure.legend,title,the legend title
matplotlib.figure.Figure.savefig,None,The resolution in dots per inch .|||The resolution in dots per inch . If None it will default to the value savefig.dpi in the matplotlibrc file . If ' figure ' it will set the dpi to be the value of the figure .
matplotlib.figure.Figure.savefig,bbox_extra_artists,A list of extra artists that will be considered when the tight bbox is calculated .
matplotlib.figure.Figure.savefig,bbox_inches,"Bbox in inches .|||Bbox in inches . Only the given portion of the figure is saved . If ' tight ' , try to figure out the tight bbox of the figure ."
matplotlib.figure.Figure.savefig,dpi,The resolution in dots per inch .|||The resolution in dots per inch . If None it will default to the value savefig.dpi in the matplotlibrc file . If ' figure ' it will set the dpi to be the value of the figure .
matplotlib.figure.Figure.savefig,edgecolor,the colors of the figure rectangle
matplotlib.figure.Figure.savefig,facecolor,the colors of the figure rectangle
matplotlib.figure.Figure.savefig,format,"One of the file extensions supported by the active backend . Most backends support png , pdf , ps , eps and svg .|||One of the file extensions supported by the active backend ."
matplotlib.figure.Figure.savefig,frameon,"If True , the figure patch will be colored , if False , the figure background will be transparent . If not provided , the rcParam ' savefig.frameon ' will be used .|||If True , the figure patch will be colored , if False , the figure background will be transparent ."
matplotlib.figure.Figure.savefig,orientation,not supported on all backends ; currently only on postscript output
matplotlib.figure.Figure.savefig,pad_inches,Amount of padding around the figure when bbox_inches is ' tight ' .
matplotlib.figure.Figure.savefig,papertype,"One of ' letter ' , ' legal ' , ' executive ' , ' ledger ' , ' a0 ' through ' a10 ' , ' b0 ' through ' b10 ' . Only supported for postscript output .|||One of ' letter ' , ' legal ' , ' executive ' , ' ledger ' , ' a0 ' through ' a10 ' , ' b0 ' through ' b10 ' ."
matplotlib.figure.Figure.savefig,transparent,"If True , the axes patches will all be transparent ; the figure patch will also be transparent unless facecolor and/or edgecolor are specified via kwargs . This is useful , for example , for displaying a plot on top of a colored background on a web page . The transparency of these patches will be restored to their original values upon exit of this function .|||If True , the axes patches will all be transparent ; the figure patch will also be transparent unless facecolor and/or edgecolor are specified via kwargs ."
matplotlib.figure.Figure.set_size_inches,forward=True,"optional kwarg forward=True will cause the canvas size to be automatically updated ; e.g. , you can resize the figure window from the shell"
matplotlib.figure.Figure.show,warn,"For non-GUI backends , this does nothing , in which case a warning will be issued if warn is True ( default ) ."
matplotlib.figure.Figure.suptitle,fontproperties,Set the font properties that control the text .
matplotlib.figure.Figure.suptitle,horizontalalignment,The horizontal alignment of the text
matplotlib.figure.Figure.suptitle,position,"Set the ( x , y ) position of the text"
matplotlib.figure.Figure.suptitle,rotation_mode,set text rotation mode .
matplotlib.figure.Figure.suptitle,text,Set the text string s
matplotlib.figure.Figure.suptitle,verticalalignment,The vertical alignment of the text
matplotlib.figure.Figure.suptitle,x,The x location of the text in figure coords|||Set the x position of the text
matplotlib.figure.Figure.suptitle,y,The y location of the text in figure coords|||Set the y position of the text
matplotlib.figure.Figure.text,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.figure.Figure.text,agg_filter,set agg_filter fuction .
matplotlib.figure.Figure.text,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.figure.Figure.text,anchor,anchor
matplotlib.figure.Figure.text,animated,Set the artist 's animation state .
matplotlib.figure.Figure.text,aspect,aspect
matplotlib.figure.Figure.text,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.figure.Figure.text,backgroundcolor,Set the background color of the text by updating the bbox .
matplotlib.figure.Figure.text,bbox,Draw a bounding box around self .
matplotlib.figure.Figure.text,clip_box,Set the artist 's clip Bbox .
matplotlib.figure.Figure.text,clip_on,Set whether artist uses clipping .
matplotlib.figure.Figure.text,clip_path,"Set the artist 's clip path , which may be"
matplotlib.figure.Figure.text,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.figure.Figure.text,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.figure.Figure.text,color,Set the foreground color of the text
matplotlib.figure.Figure.text,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.figure.Figure.text,contains,Replace the contains test used by this artist .
matplotlib.figure.Figure.text,cursor_props,Set the cursor property as
matplotlib.figure.Figure.text,family,Set the font family .
matplotlib.figure.Figure.text,figure,Set the Figure instance the artist belongs to .
matplotlib.figure.Figure.text,fontconfig_pattern,Set the properties by parsing a fontconfig pattern .
matplotlib.figure.Figure.text,fontdict,"A dictionary to override the default text properties .|||A dictionary to override the default text properties . If fontdict is None , the defaults are determined by your rc parameters ."
matplotlib.figure.Figure.text,fontproperties,Set the font properties that control the text .
matplotlib.figure.Figure.text,gid,Sets the ( group ) id for the artist
matplotlib.figure.Figure.text,hatch,Set the hatching pattern
matplotlib.figure.Figure.text,horizontalalignment,Set the horizontal alignment to one of
matplotlib.figure.Figure.text,kwargs,Other miscellaneous text parameters .
matplotlib.figure.Figure.text,label,Set the label to s for auto legend .
matplotlib.figure.Figure.text,linespacing,Set the line spacing as a multiple of the font size .
matplotlib.figure.Figure.text,linestyle,Set the patch linestyle
matplotlib.figure.Figure.text,multialignment,Set the alignment for multiple lines layout .
matplotlib.figure.Figure.text,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.figure.Figure.text,picker,Set the epsilon for picking used by this artist
matplotlib.figure.Figure.text,position,"Set the axes position with|||Set the ( x , y ) position of the text"
matplotlib.figure.Figure.text,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.figure.Figure.text,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.figure.Figure.text,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.figure.Figure.text,rotation,Set the rotation of the text
matplotlib.figure.Figure.text,rotation_mode,set text rotation mode .
matplotlib.figure.Figure.text,s,text
matplotlib.figure.Figure.text,size,Set the font size .
matplotlib.figure.Figure.text,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.figure.Figure.text,sketch_params,Sets the sketch parameters .
matplotlib.figure.Figure.text,snap,Sets the snap setting which may be
matplotlib.figure.Figure.text,stretch,Set the font stretch ( horizontal condensation or expansion ) .
matplotlib.figure.Figure.text,style,Set the font style .
matplotlib.figure.Figure.text,text,Set the text string s
matplotlib.figure.Figure.text,title,Set a title for the axes .
matplotlib.figure.Figure.text,transform,Set the Transform instance used by this artist .
matplotlib.figure.Figure.text,url,Sets the url for the artist
matplotlib.figure.Figure.text,usetex,Set this Text object to render using TeX ( or not ) .
matplotlib.figure.Figure.text,variant,"Set the font variant , either ' normal ' or ' small-caps ' ."
matplotlib.figure.Figure.text,verticalalignment,Set the vertical alignment
matplotlib.figure.Figure.text,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.figure.Figure.text,visible,Set the artist 's visiblity .
matplotlib.figure.Figure.text,weight,Set the font weight .
matplotlib.figure.Figure.text,withdash,Creates a TextWithDash instance instead of a Text instance .
matplotlib.figure.Figure.text,wrap,Sets the wrapping state for the text .
matplotlib.figure.Figure.text,x,"Set the x position of the text|||Add text to figure at location x , y ( relative 0-1 coords ) . See text ( ) for the meaning of the other arguments .|||Add text to figure at location x , y ( relative 0-1 coords ) ."
matplotlib.figure.Figure.text,"x, y",data coordinates
matplotlib.figure.Figure.text,xlabel,Set the label for the xaxis .
matplotlib.figure.Figure.text,xlim,Set the data limits for the xaxis
matplotlib.figure.Figure.text,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.figure.Figure.text,xscale,Set the scaling of the x-axis
matplotlib.figure.Figure.text,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.figure.Figure.text,xticks,Set the x ticks with list of ticks
matplotlib.figure.Figure.text,y,"Set the y position of the text|||Add text to figure at location x , y ( relative 0-1 coords ) . See text ( ) for the meaning of the other arguments .|||Add text to figure at location x , y ( relative 0-1 coords ) ."
matplotlib.figure.Figure.text,ylabel,Set the label for the yaxis
matplotlib.figure.Figure.text,ylim,Set the data limits for the yaxis
matplotlib.figure.Figure.text,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.figure.Figure.text,yscale,Set the scaling of the y-axis
matplotlib.figure.Figure.text,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.figure.Figure.text,yticks,Set the y ticks with list of ticks
matplotlib.figure.Figure.text,zorder,Set the zorder for the artist .
matplotlib.figure.Figure.waitforbuttonpress,timeout,"This will return True is a key was pressed , False if a mouse button was pressed and None if timeout was reached without either being pressed .|||If timeout is negative , does not timeout ."
matplotlib.figure.figaspect,arg,"Create a figure with specified aspect ratio . If arg is a number , use that aspect ratio . If arg is an array , figaspect will determine the width and height for a figure that would fit array preserving aspect ratio . The figure width , height in inches are returned . Be sure to create an axes with equal with and height , e.g. ,|||Create a figure with specified aspect ratio ."
matplotlib.finance.candlestick2_ochl,alpha,bar transparency
matplotlib.finance.candlestick2_ochl,ax,an Axes instance to plot to
matplotlib.finance.candlestick2_ochl,closes,sequence of closing values
matplotlib.finance.candlestick2_ochl,colordown,the color of the lines where close < open
matplotlib.finance.candlestick2_ochl,colorup,the color of the lines where close > = open
matplotlib.finance.candlestick2_ochl,highs,sequence of high values
matplotlib.finance.candlestick2_ochl,lows,sequence of low values
matplotlib.finance.candlestick2_ochl,opens,sequence of opening values
matplotlib.finance.candlestick2_ochl,ticksize,size of open and close ticks in points
matplotlib.finance.candlestick2_ohlc,alpha,bar transparency
matplotlib.finance.candlestick2_ohlc,ax,an Axes instance to plot to
matplotlib.finance.candlestick2_ohlc,closes,sequence of closing values
matplotlib.finance.candlestick2_ohlc,colordown,the color of the lines where close < open
matplotlib.finance.candlestick2_ohlc,colorup,the color of the lines where close > = open
matplotlib.finance.candlestick2_ohlc,highs,sequence of high values
matplotlib.finance.candlestick2_ohlc,lows,sequence of low values
matplotlib.finance.candlestick2_ohlc,opens,sequence of opening values
matplotlib.finance.candlestick2_ohlc,ticksize,size of open and close ticks in points
matplotlib.finance.candlestick_ochl,alpha,the rectangle alpha level
matplotlib.finance.candlestick_ochl,ax,an Axes instance to plot to
matplotlib.finance.candlestick_ochl,colordown,the color of the rectangle where close < open
matplotlib.finance.candlestick_ochl,colorup,the color of the rectangle where close > = open
matplotlib.finance.candlestick_ochl,quotes,"As long as the first 5 elements are these values , the record can be as long as you want ( e.g. , it may store volume ) ."
matplotlib.finance.candlestick_ochl,width,fraction of a day for the rectangle width
matplotlib.finance.candlestick_ohlc,alpha,the rectangle alpha level
matplotlib.finance.candlestick_ohlc,ax,an Axes instance to plot to
matplotlib.finance.candlestick_ohlc,colordown,the color of the rectangle where close < open
matplotlib.finance.candlestick_ohlc,colorup,the color of the rectangle where close > = open
matplotlib.finance.candlestick_ohlc,quotes,"As long as the first 5 elements are these values , the record can be as long as you want ( e.g. , it may store volume ) ."
matplotlib.finance.candlestick_ohlc,width,fraction of a day for the rectangle width
matplotlib.finance.fetch_historical_yahoo,cachename,"cachename is the name of the local file cache . If None , will default to the md5 hash or the url ( which incorporates the ticker and date range )|||cachename is the name of the local file cache ."
matplotlib.finance.fetch_historical_yahoo,date1,start date
matplotlib.finance.fetch_historical_yahoo,date2,end date
matplotlib.finance.fetch_historical_yahoo,dividends,"set dividends=True to return dividends instead of price data .|||set dividends=True to return dividends instead of price data . With this option set , parse functions will not work"
matplotlib.finance.fetch_historical_yahoo,ticker,ticker
matplotlib.finance.index_bar,alpha,bar transparency
matplotlib.finance.index_bar,ax,an Axes instance to plot to
matplotlib.finance.index_bar,edgecolor,the color of the bar edges
matplotlib.finance.index_bar,facecolor,the color of the bar face
matplotlib.finance.index_bar,vals,a sequence of values
matplotlib.finance.index_bar,width,the bar width in points
matplotlib.finance.parse_yahoo_historical_ochl,adjusted,"If True ( default ) replace open , close , high , low prices with their adjusted values . The adjustment is by a scale factor , S = adjusted_close/close . Adjusted prices are actual prices multiplied by S.|||If True ( default ) replace open , close , high , low prices with their adjusted values ."
matplotlib.finance.parse_yahoo_historical_ochl,asobject,If False ( default for compatibility with earlier versions ) return a list of tuples containing
matplotlib.finance.parse_yahoo_historical_ohlc,adjusted,"If True ( default ) replace open , high , low , close prices with their adjusted values . The adjustment is by a scale factor , S = adjusted_close/close . Adjusted prices are actual prices multiplied by S.|||If True ( default ) replace open , high , low , close prices with their adjusted values ."
matplotlib.finance.parse_yahoo_historical_ohlc,asobject,If False ( default for compatibility with earlier versions ) return a list of tuples containing
matplotlib.finance.plot_day_summary2_ochl,ax,an Axes instance to plot to
matplotlib.finance.plot_day_summary2_ochl,closes,sequence of closing values
matplotlib.finance.plot_day_summary2_ochl,colordown,the color of the lines where close < open
matplotlib.finance.plot_day_summary2_ochl,colorup,the color of the lines where close > = open
matplotlib.finance.plot_day_summary2_ochl,highs,sequence of high values
matplotlib.finance.plot_day_summary2_ochl,lows,sequence of low values
matplotlib.finance.plot_day_summary2_ochl,opens,sequence of opening values
matplotlib.finance.plot_day_summary2_ochl,ticksize,size of open and close ticks in points
matplotlib.finance.plot_day_summary2_ohlc,-1,"Represent the time , open , high , low , close as a vertical line ranging from low to high .|||Represent the time , open , high , low , close as a vertical line ranging from low to high . The left tick is the open and the right tick is the close . opens , highs , lows and closes must have the same length . NOTE : this code assumes if any value open , high , low , close is missing ( - 1 ) they all are missing"
matplotlib.finance.plot_day_summary2_ohlc,ax,an Axes instance to plot to
matplotlib.finance.plot_day_summary2_ohlc,closes,"Represent the time , open , high , low , close as a vertical line ranging from low to high .|||Represent the time , open , high , low , close as a vertical line ranging from low to high . The left tick is the open and the right tick is the close . opens , highs , lows and closes must have the same length . NOTE : this code assumes if any value open , high , low , close is missing ( - 1 ) they all are missing|||sequence of closing values"
matplotlib.finance.plot_day_summary2_ohlc,colordown,the color of the lines where close < open
matplotlib.finance.plot_day_summary2_ohlc,colorup,the color of the lines where close > = open
matplotlib.finance.plot_day_summary2_ohlc,highs,"Represent the time , open , high , low , close as a vertical line ranging from low to high .|||Represent the time , open , high , low , close as a vertical line ranging from low to high . The left tick is the open and the right tick is the close . opens , highs , lows and closes must have the same length . NOTE : this code assumes if any value open , high , low , close is missing ( - 1 ) they all are missing|||sequence of high values"
matplotlib.finance.plot_day_summary2_ohlc,lows,"sequence of low values|||Represent the time , open , high , low , close as a vertical line ranging from low to high .|||Represent the time , open , high , low , close as a vertical line ranging from low to high . The left tick is the open and the right tick is the close . opens , highs , lows and closes must have the same length . NOTE : this code assumes if any value open , high , low , close is missing ( - 1 ) they all are missing"
matplotlib.finance.plot_day_summary2_ohlc,opens,"Represent the time , open , high , low , close as a vertical line ranging from low to high .|||Represent the time , open , high , low , close as a vertical line ranging from low to high . The left tick is the open and the right tick is the close . opens , highs , lows and closes must have the same length . NOTE : this code assumes if any value open , high , low , close is missing ( - 1 ) they all are missing|||sequence of opening values"
matplotlib.finance.plot_day_summary2_ohlc,ticksize,size of open and close ticks in points
matplotlib.finance.plot_day_summary_oclh,ax,an Axes instance to plot to
matplotlib.finance.plot_day_summary_oclh,colordown,the color of the lines where close < open
matplotlib.finance.plot_day_summary_oclh,colorup,the color of the lines where close > = open
matplotlib.finance.plot_day_summary_oclh,quotes,data to plot . time must be in float date format - see date2num|||data to plot .
matplotlib.finance.plot_day_summary_oclh,ticksize,open/close tick marker in points
matplotlib.finance.plot_day_summary_ohlc,ax,an Axes instance to plot to
matplotlib.finance.plot_day_summary_ohlc,colordown,the color of the lines where close < open
matplotlib.finance.plot_day_summary_ohlc,colorup,the color of the lines where close > = open
matplotlib.finance.plot_day_summary_ohlc,quotes,data to plot . time must be in float date format - see date2num|||data to plot .
matplotlib.finance.plot_day_summary_ohlc,ticksize,open/close tick marker in points
matplotlib.finance.quotes_historical_yahoo_ochl,adjusted,See parse_yahoo_historical ( ) for explanation of output formats and the asobject and adjusted kwargs .
matplotlib.finance.quotes_historical_yahoo_ochl,asobject,See parse_yahoo_historical ( ) for explanation of output formats and the asobject and adjusted kwargs .
matplotlib.finance.quotes_historical_yahoo_ochl,cachename,"is the name of the local file cache .|||is the name of the local file cache . If None , will default to the md5 hash or the url ( which incorporates the ticker and date range )"
matplotlib.finance.quotes_historical_yahoo_ochl,date1,start date
matplotlib.finance.quotes_historical_yahoo_ochl,date2,end date
matplotlib.finance.quotes_historical_yahoo_ochl,ticker,stock ticker
matplotlib.finance.quotes_historical_yahoo_ohlc,adjusted,See parse_yahoo_historical ( ) for explanation of output formats and the asobject and adjusted kwargs .
matplotlib.finance.quotes_historical_yahoo_ohlc,asobject,See parse_yahoo_historical ( ) for explanation of output formats and the asobject and adjusted kwargs .
matplotlib.finance.quotes_historical_yahoo_ohlc,cachename,"is the name of the local file cache .|||is the name of the local file cache . If None , will default to the md5 hash or the url ( which incorporates the ticker and date range )"
matplotlib.finance.quotes_historical_yahoo_ohlc,date1,start date
matplotlib.finance.quotes_historical_yahoo_ohlc,date2,end date
matplotlib.finance.quotes_historical_yahoo_ohlc,ticker,stock ticker
matplotlib.finance.volume_overlay,alpha,bar transparency
matplotlib.finance.volume_overlay,ax,an Axes instance to plot to
matplotlib.finance.volume_overlay,closes,a sequence of closes
matplotlib.finance.volume_overlay,colordown,the color of the lines where close < open
matplotlib.finance.volume_overlay,colorup,the color of the lines where close > = open
matplotlib.finance.volume_overlay,opens,a sequence of opens
matplotlib.finance.volume_overlay,volumes,a sequence of volumes
matplotlib.finance.volume_overlay,width,the bar width in points
matplotlib.finance.volume_overlay2,alpha,bar transparency
matplotlib.finance.volume_overlay2,ax,an Axes instance to plot to
matplotlib.finance.volume_overlay2,closes,a sequence of closes
matplotlib.finance.volume_overlay2,colordown,the color of the lines where close < open
matplotlib.finance.volume_overlay2,colorup,the color of the lines where close > = open
matplotlib.finance.volume_overlay2,volumes,a sequence of volumes
matplotlib.finance.volume_overlay2,width,the bar width in points
matplotlib.finance.volume_overlay3,alpha,bar transparency
matplotlib.finance.volume_overlay3,ax,an Axes instance to plot to
matplotlib.finance.volume_overlay3,colordown,the color of the lines where close1 < close0
matplotlib.finance.volume_overlay3,colorup,the color of the lines where close1 > = close0
matplotlib.finance.volume_overlay3,quotes,data to plot . time must be in float date format - see date2num|||data to plot .
matplotlib.finance.volume_overlay3,width,the bar width in points
matplotlib.font_manager.FontManager.findfont,prop,Search the font list for the font that most closely matches the FontProperties prop .
matplotlib.font_manager.FontManager.score_family,families,Returns a match score between the list of font families in families and the font family name family2 .
matplotlib.font_manager.FontManager.score_family,family2,Returns a match score between the list of font families in families and the font family name family2 .
matplotlib.font_manager.FontManager.score_size,size1,"Otherwise , the result is the absolute distance between size1 and size2 , normalized so that the usual range of font sizes ( 6pt - 72pt ) will lie between 0.0 and 1.0 .|||Returns a match score between size1 and size2 ."
matplotlib.font_manager.FontManager.score_size,size2,"Otherwise , the result is the absolute distance between size1 and size2 , normalized so that the usual range of font sizes ( 6pt - 72pt ) will lie between 0.0 and 1.0 .|||Returns a match score between size1 and size2 .|||If size2 ( the size specified in the font file ) is ' scalable ' , this function always returns 0.0 , since any font size can be generated ."
matplotlib.font_manager.FontManager.score_stretch,stretch1,"The result is the absolute value of the difference between the CSS numeric values of stretch1 and stretch2 , normalized between 0.0 and 1.0 .|||Returns a match score between stretch1 and stretch2 ."
matplotlib.font_manager.FontManager.score_stretch,stretch2,"The result is the absolute value of the difference between the CSS numeric values of stretch1 and stretch2 , normalized between 0.0 and 1.0 .|||Returns a match score between stretch1 and stretch2 ."
matplotlib.font_manager.FontManager.score_style,style1,Returns a match score between style1 and style2 .
matplotlib.font_manager.FontManager.score_style,style2,Returns a match score between style1 and style2 .
matplotlib.font_manager.FontManager.score_variant,variant1,Returns a match score between variant1 and variant2 .
matplotlib.font_manager.FontManager.score_variant,variant2,Returns a match score between variant1 and variant2 .
matplotlib.font_manager.FontManager.score_weight,weight1,"The result is the absolute value of the difference between the CSS numeric values of weight1 and weight2 , normalized between 0.0 and 1.0 .|||Returns a match score between weight1 and weight2 ."
matplotlib.font_manager.FontManager.score_weight,weight2,"The result is the absolute value of the difference between the CSS numeric values of weight1 and weight2 , normalized between 0.0 and 1.0 .|||Returns a match score between weight1 and weight2 ."
matplotlib.font_manager.FontProperties.set_fontconfig_pattern,pattern,Set the properties by parsing a fontconfig pattern .
matplotlib.font_manager.afmFontProperty,font,font is a class:AFM instance .
matplotlib.font_manager.get_fontext_synonyms,fileext,Return a list of file extensions extensions that are synonyms for the given file extension fileext .
matplotlib.font_manager.ttfFontProperty,font,font is a FT2Font instance .
matplotlib.font_manager.win32InstalledFonts,fontext,"Search for fonts in the specified font directory , or use the system directories if none given . A list of TrueType font filenames are returned by default , or AFM fonts if fontext = = ' afm ' .|||Search for fonts in the specified font directory , or use the system directories if none given ."
matplotlib.fontconfig_pattern.FontconfigPatternParser.parse,pattern,Parse the given fontconfig pattern and return a dictionary of key/value pairs useful for initializing a font_manager.FontProperties object .
matplotlib.image.NonUniformImage.set_data,A,"colormapped , or a ( M,N,3 ) RGB array , or a ( M,N,4 ) RGBA array ."
matplotlib.image.NonUniformImage.set_data,x,specifying pixel centers
matplotlib.image.NonUniformImage.set_data,y,specifying pixel centers
matplotlib.image.imread,fname,"fname may be a string path , a valid URL , or a Python file-like object . If using a file object , it must be opened in binary mode .|||fname may be a string path , a valid URL , or a Python file-like object ."
matplotlib.image.imread,format,"If format is provided , will try to read file of that type , otherwise the format is deduced from the filename . If nothing can be deduced , PNG is tried .|||If format is provided , will try to read file of that type , otherwise the format is deduced from the filename ."
matplotlib.image.thumbnail,infile,have Pillow installed|||make a thumbnail of image in infile with output filename thumbfile .
matplotlib.image.thumbnail,interpolation,the interpolation scheme used in the resampling
matplotlib.image.thumbnail,preview,"if True , the default backend ( presumably a user interface backend ) will be used which will cause a figure to be raised if show ( ) is called . If it is False , a pure image backend will be used depending on the extension , ' png'->FigureCanvasAgg , ' pdf'->FigureCanvasPdf , ' svg'->FigureCanvasSVG|||if True , the default backend ( presumably a user interface backend ) will be used which will cause a figure to be raised if show ( ) is called ."
matplotlib.image.thumbnail,scale,the scale factor for the thumbnail
matplotlib.image.thumbnail,thumbfile,the thumbnail filename|||make a thumbnail of image in infile with output filename thumbfile .
matplotlib.legend.Legend.draggable,bbox_to_anchor,"The update parameter control which parameter of the legend changes when dragged .|||The update parameter control which parameter of the legend changes when dragged . If update is "" loc "" , the loc paramter of the legend is changed . If "" bbox "" , the bbox_to_anchor parameter is changed ."
matplotlib.legend.Legend.draggable,loc,"The update parameter control which parameter of the legend changes when dragged .|||The update parameter control which parameter of the legend changes when dragged . If update is "" loc "" , the loc paramter of the legend is changed . If "" bbox "" , the bbox_to_anchor parameter is changed ."
matplotlib.legend.Legend.set_bbox_to_anchor,bbox,"bbox can be a BboxBase instance , a tuple of [ left , bottom , width , height ] in the given transform ( normalized axes coordinate if None ) , or a tuple of [ left , bottom ] where the width and height will be assumed to be zero ."
matplotlib.legend.Legend.set_title,prop,set the legend title .|||set the legend title . Fontproperties can be optionally set with prop parameter .
matplotlib.legend_handler.HandlerBase.legend_artist,fontsize,The fontsize in pixels .|||The fontsize in pixels . The artists being created should be scaled according to the given fontsize .
matplotlib.legend_handler.HandlerBase.legend_artist,handlebox,The box which has been created to hold this legend entry 's artists . Artists created in the legend_artist method must be added to this handlebox inside this method .|||The box which has been created to hold this legend entry 's artists .
matplotlib.legend_handler.HandlerBase.legend_artist,legend,The legend for which these legend artists are being created .
matplotlib.legend_handler.HandlerBase.legend_artist,orig_handle,The object for which these legend artists are being created .
matplotlib.lines.Line2D.contains,pointlist,"Returns True if any values are within the radius along with { ' ind ' : pointlist } , where pointlist is the set of points within the radius ."
matplotlib.lines.Line2D.get_data,orig,"If orig is True , return the original data ."
matplotlib.lines.Line2D.get_xdata,orig,"If orig is True , return the original data , else the processed data ."
matplotlib.lines.Line2D.get_xydata,xy,Return the xy data as a Nx2 numpy array .
matplotlib.lines.Line2D.get_ydata,orig,"If orig is True , return the original data , else the processed data ."
matplotlib.lines.Line2D.set_linestyle,ls,The line style .
matplotlib.lines.Line2D.set_marker,marker: marker style,See markers for full description of possible argument
matplotlib.lines.Line2D.set_markevery,float | length-2 tuple of float,Which markers to plot .
matplotlib.lines.VertexSelector.process_selected,ind,ind are the indices of the selected vertices . xs and ys are the coordinates of the selected vertices .|||ind are the indices of the selected vertices .
matplotlib.lines.VertexSelector.process_selected,xs,ind are the indices of the selected vertices . xs and ys are the coordinates of the selected vertices .|||ind are the indices of the selected vertices .
matplotlib.lines.VertexSelector.process_selected,ys,ind are the indices of the selected vertices . xs and ys are the coordinates of the selected vertices .|||ind are the indices of the selected vertices .
matplotlib.markers.MarkerStyle,fillstyle,"' full ' , ' left "" , ' right ' , ' bottom ' , ' top ' , ' none '"
matplotlib.markers.MarkerStyle,marker,See the descriptions of possible markers in the module docstring .
matplotlib.mathtext.Fonts.get_kern,dpi,dpi : the current dots-per-inch
matplotlib.mathtext.Fonts.get_kern,fontX,fontX : one of the TeX font names :
matplotlib.mathtext.Fonts.get_kern,fontclassX,fontclassX : TODO
matplotlib.mathtext.Fonts.get_kern,fontsizeX,fontsizeX : the fontsize in points
matplotlib.mathtext.Fonts.get_kern,sym1,Get the kerning distance for font between sym1 and sym2 .
matplotlib.mathtext.Fonts.get_kern,sym2,Get the kerning distance for font between sym1 and sym2 .
matplotlib.mathtext.Fonts.get_kern,symX,"symX : a symbol in raw TeX form . e.g. , ' 1 ' , ' x ' or ' sigma '|||symX : a symbol in raw TeX form ."
matplotlib.mathtext.Fonts.get_metrics,dpi,dpi : current dots-per-inch
matplotlib.mathtext.Fonts.get_metrics,font,font : one of the TeX font names :
matplotlib.mathtext.Fonts.get_metrics,font_class,font_class : TODO
matplotlib.mathtext.Fonts.get_metrics,fontsize,fontsize : font size in points
matplotlib.mathtext.Fonts.get_metrics,sym,"sym : a symbol in raw TeX form .|||sym : a symbol in raw TeX form . e.g. , ' 1 ' , ' x ' or ' sigma '"
matplotlib.mathtext.Fonts.get_sized_alternatives_for_symbol,sym,Override if your font provides multiple sizes of the same symbol .|||Override if your font provides multiple sizes of the same symbol . Should return a list of symbols matching sym in various sizes . The expression renderer will select the most appropriate size for a given situation from this list .
matplotlib.mathtext.Fonts.get_xheight,font,Get the xheight for the given font and fontsize .
matplotlib.mathtext.Fonts.get_xheight,fontsize,Get the xheight for the given font and fontsize .
matplotlib.mathtext.Fonts.render_rect_filled,x1,"Draw a filled rectangle from ( x1 , y1 ) to ( x2 , y2 ) ."
matplotlib.mathtext.Fonts.render_rect_filled,x2,"Draw a filled rectangle from ( x1 , y1 ) to ( x2 , y2 ) ."
matplotlib.mathtext.Fonts.render_rect_filled,y1,"Draw a filled rectangle from ( x1 , y1 ) to ( x2 , y2 ) ."
matplotlib.mathtext.Fonts.render_rect_filled,y2,"Draw a filled rectangle from ( x1 , y1 ) to ( x2 , y2 ) ."
matplotlib.mathtext.Hlist.hpack,w,"Thus , hpack(w , ' exactly ' ) produces a box whose width is exactly w , while hpack(w , ' additional ' ) yields a box whose width is the natural width plus w . The default values produce a box with the natural width .|||Thus , hpack(w , ' exactly ' ) produces a box whose width is exactly w , while hpack(w , ' additional ' ) yields a box whose width is the natural width plus w ."
matplotlib.mathtext.MathTextParser.parse,dpi,"Parse the given math expression s at the given dpi . If prop is provided , it is a FontProperties object specifying the "" default "" font to use in the math expression , used for all non-math text .|||Parse the given math expression s at the given dpi ."
matplotlib.mathtext.MathTextParser.parse,prop,"Parse the given math expression s at the given dpi . If prop is provided , it is a FontProperties object specifying the "" default "" font to use in the math expression , used for all non-math text .|||Parse the given math expression s at the given dpi ."
matplotlib.mathtext.MathTextParser.parse,s,"Parse the given math expression s at the given dpi . If prop is provided , it is a FontProperties object specifying the "" default "" font to use in the math expression , used for all non-math text .|||Parse the given math expression s at the given dpi ."
matplotlib.mathtext.MathTextParser.to_mask,array,"Returns a tuple ( array , depth )"
matplotlib.mathtext.MathTextParser.to_mask,depth,"Returns a tuple ( array , depth )"
matplotlib.mathtext.MathTextParser.to_rgba,array,"Returns a tuple ( array , depth )"
matplotlib.mathtext.MathTextParser.to_rgba,depth,"Returns a tuple ( array , depth )"
matplotlib.mathtext.MathtextBackend.render_glyph,info,"Draw a glyph described by info to the reference point ( ox , oy ) ."
matplotlib.mathtext.MathtextBackend.render_glyph,ox,"Draw a glyph described by info to the reference point ( ox , oy ) ."
matplotlib.mathtext.MathtextBackend.render_glyph,oy,"Draw a glyph described by info to the reference point ( ox , oy ) ."
matplotlib.mathtext.MathtextBackend.render_rect_filled,x1,"Draw a filled black rectangle from ( x1 , y1 ) to ( x2 , y2 ) ."
matplotlib.mathtext.MathtextBackend.render_rect_filled,x2,"Draw a filled black rectangle from ( x1 , y1 ) to ( x2 , y2 ) ."
matplotlib.mathtext.MathtextBackend.render_rect_filled,y1,"Draw a filled black rectangle from ( x1 , y1 ) to ( x2 , y2 ) ."
matplotlib.mathtext.MathtextBackend.render_rect_filled,y2,"Draw a filled black rectangle from ( x1 , y1 ) to ( x2 , y2 ) ."
matplotlib.mathtext.Parser.parse,dpi,"Parse expression s using the given fonts_object for output , at the given fontsize and dpi ."
matplotlib.mathtext.Parser.parse,fonts_object,"Parse expression s using the given fonts_object for output , at the given fontsize and dpi ."
matplotlib.mathtext.Parser.parse,fontsize,"Parse expression s using the given fonts_object for output , at the given fontsize and dpi ."
matplotlib.mathtext.Parser.parse,s,"Parse expression s using the given fonts_object for output , at the given fontsize and dpi ."
matplotlib.mathtext.Vlist.vpack,h,"Thus , vpack(h , ' exactly ' ) produces a box whose height is exactly h , while vpack(h , ' additional ' ) yields a box whose height is the natural height plus h . The default values produce a box with the natural width .|||Thus , vpack(h , ' exactly ' ) produces a box whose height is exactly h , while vpack(h , ' additional ' ) yields a box whose height is the natural height plus h ."
matplotlib.mathtext.get_unicode_index,symbol,"Return the integer index ( from the Unicode table ) of symbol .|||Return the integer index ( from the Unicode table ) of symbol . symbol can be a single unicode character , a TeX command ( i.e. r'pi ' ) , or a Type1 symbol name ( i.e. ' phi ' ) ."
matplotlib.mlab.GaussianKDE,bw_method,"The method used to calculate the estimator bandwidth . This can be ' scott ' , ' silverman ' , a scalar constant or a callable . If a scalar , this will be used directly as kde.factor . If a callable , it should take a GaussianKDE instance as only parameter and return a scalar . If None ( default ) , ' scott ' is used .|||The method used to calculate the estimator bandwidth ."
matplotlib.mlab.GaussianKDE,dataset,"Datapoints to estimate from . In case of univariate data this is a 1-D array , otherwise a 2-D array with shape ( # of dims , # of data ) .|||Datapoints to estimate from ."
matplotlib.mlab.GaussianKDE.evaluate,points,"Alternatively , a ( # of dimensions , ) vector can be passed in and treated as a single point ."
matplotlib.mlab.angle_spectrum,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.mlab.angle_spectrum,freqs,"Returns the tuple ( spectrum , freqs ) :"
matplotlib.mlab.angle_spectrum,pad_to,Compute the angle of the frequency spectrum ( wrapped phase spectrum ) of x .|||Compute the angle of the frequency spectrum ( wrapped phase spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .
matplotlib.mlab.angle_spectrum,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.mlab.angle_spectrum,spectrum,"Returns the tuple ( spectrum , freqs ) :"
matplotlib.mlab.angle_spectrum,window,"A function or a vector of length NFFT .|||Compute the angle of the frequency spectrum ( wrapped phase spectrum ) of x .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment .|||Compute the angle of the frequency spectrum ( wrapped phase spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal ."
matplotlib.mlab.angle_spectrum,x,Compute the angle of the frequency spectrum ( wrapped phase spectrum ) of x .|||Array or sequence containing the data|||Compute the angle of the frequency spectrum ( wrapped phase spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .
matplotlib.mlab.base_repr,base,Return the representation of a number in any given base .
matplotlib.mlab.base_repr,number,Return the representation of a number in any given base .
matplotlib.mlab.binary_repr,number,Return the binary representation of the input number as a string .
matplotlib.mlab.bivariate_normal,X,"Bivariate Gaussian distribution for equal shape X , Y ."
matplotlib.mlab.bivariate_normal,Y,"Bivariate Gaussian distribution for equal shape X , Y ."
matplotlib.mlab.center_matrix,M,Return the matrix M with each row having zero mean and unit std .
matplotlib.mlab.center_matrix,dim,If dim = 1 operate on columns instead of rows . ( dim is opposite to the numpy axis kwarg . )|||If dim = 1 operate on columns instead of rows .
matplotlib.mlab.cohere,Cxy,"The return value is the tuple ( Cxy , f ) , where f are the frequencies of the coherence vector .|||The return value is the tuple ( Cxy , f ) , where f are the frequencies of the coherence vector . For cohere , scaling the individual densities by the sampling frequency has no effect , since the factors cancel out ."
matplotlib.mlab.cohere,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.mlab.cohere,f,"The return value is the tuple ( Cxy , f ) , where f are the frequencies of the coherence vector .|||The return value is the tuple ( Cxy , f ) , where f are the frequencies of the coherence vector . For cohere , scaling the individual densities by the sampling frequency has no effect , since the factors cancel out ."
matplotlib.mlab.cohere,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.mlab.cohere,window,"A function or a vector of length NFFT .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.mlab.cohere,x,The coherence between x and y .|||The coherence between x and y . Coherence is the normalized cross spectral density :
matplotlib.mlab.cohere,y,The coherence between x and y .|||The coherence between x and y . Coherence is the normalized cross spectral density :
matplotlib.mlab.cohere_pairs,X,"X is a numSamples * numCols array|||Compute the coherence and phase for all pairs ij , in X .|||For a large number of pairs , cohere_pairs ( ) can be much more efficient than just calling cohere ( ) for each pair , because it caches most of the intensive computations .|||For a large number of pairs , cohere_pairs ( ) can be much more efficient than just calling cohere ( ) for each pair , because it caches most of the intensive computations . If is the number of pairs , this function is for most of the heavy lifting , whereas calling cohere for each pair is . However , because of the caching , it is also more memory intensive , making 2 additional complex arrays with approximately the same number of elements as X .|||ij is a list of tuples .|||ij is a list of tuples . Each tuple is a pair of indexes into the columns of X for which you want to compute coherence . For example , if X has 64 columns , and you want to compute all nonredundant pairs , define ij as :"
matplotlib.mlab.cohere_pairs,ij,"ij is a list of tuples .|||ij is a list of tuples . Each tuple is a pair of indexes into the columns of X for which you want to compute coherence . For example , if X has 64 columns , and you want to compute all nonredundant pairs , define ij as :|||Compute the coherence and phase for all pairs ij , in X ."
matplotlib.mlab.cohere_pairs,numCols,X is a numSamples * numCols array
matplotlib.mlab.cohere_pairs,numSamples,X is a numSamples * numCols array
matplotlib.mlab.cohere_pairs,preferSpeedOverMemory,"preferSpeedOverMemory is an optional bool . Defaults to true . If False , limits the caching by only making one , rather than two , complex cache arrays . This is useful if memory becomes critical . Even when preferSpeedOverMemory is False , cohere_pairs ( ) will still give significant performace gains over calling cohere ( ) for each pair , and will use subtantially less memory than if preferSpeedOverMemory is True . In my tests with a 43000,64 array over all nonredundant pairs , preferSpeedOverMemory = True delivered a 33% performance boost on a 1.7GHZ Athlon with 512MB RAM compared with preferSpeedOverMemory = False . But both solutions were more than 10x faster than naively crunching all possible pairs through cohere ( ) .|||preferSpeedOverMemory is an optional bool ."
matplotlib.mlab.complex_spectrum,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.mlab.complex_spectrum,freqs,"Returns the tuple ( spectrum , freqs ) :"
matplotlib.mlab.complex_spectrum,pad_to,Compute the complex-valued frequency spectrum of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the complex-valued frequency spectrum of x .
matplotlib.mlab.complex_spectrum,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.mlab.complex_spectrum,spectrum,"Returns the tuple ( spectrum , freqs ) :"
matplotlib.mlab.complex_spectrum,window,"A function or a vector of length NFFT .|||Compute the complex-valued frequency spectrum of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the complex-valued frequency spectrum of x .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.mlab.complex_spectrum,x,Compute the complex-valued frequency spectrum of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the complex-valued frequency spectrum of x .|||Array or sequence containing the data
matplotlib.mlab.cross_from_above,x,"return the indices into x where x crosses some threshold from below , e.g. , the i 's where :"
matplotlib.mlab.cross_from_below,x,"return the indices into x where x crosses some threshold from below , e.g. , the i 's where :"
matplotlib.mlab.csd,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.mlab.csd,NFFT,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||If len(x ) < NFFT or len(y ) < NFFT , they will be zero padded to NFFT ."
matplotlib.mlab.csd,Pxy,"Returns the tuple ( Pxy , freqs ) :"
matplotlib.mlab.csd,detrend,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing ."
matplotlib.mlab.csd,freqs,"Returns the tuple ( Pxy , freqs ) :"
matplotlib.mlab.csd,noverlap,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing ."
matplotlib.mlab.csd,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.mlab.csd,window,"A function or a vector of length NFFT .|||The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.mlab.csd,x,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||If len(x ) < NFFT or len(y ) < NFFT , they will be zero padded to NFFT ."
matplotlib.mlab.csd,y,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||If len(x ) < NFFT or len(y ) < NFFT , they will be zero padded to NFFT ."
matplotlib.mlab.csv2rec,fname,Load data from comma/space/tab delimited file in fname into a numpy record array and return the record array .
matplotlib.mlab.csv2rec,names,"If names is None , a header row is required to automatically assign the recarray names . The headers will be lower cased , spaces will be converted to underscores , and illegal attribute name characters removed . If names is not None , it is a sequence of names to use for the column names . In this case , it is assumed there is no header row .|||If names is None , a header row is required to automatically assign the recarray names ."
matplotlib.mlab.distances_along_curve,M,Where X is an M x N array or matrix . The distances between successive rows is computed . Distance is the standard Euclidean distance .|||Where X is an M x N array or matrix .
matplotlib.mlab.distances_along_curve,N,Computes the distance between a set of successive points in N dimensions .|||Where X is an M x N array or matrix . The distances between successive rows is computed . Distance is the standard Euclidean distance .|||Where X is an M x N array or matrix .
matplotlib.mlab.distances_along_curve,X,Where X is an M x N array or matrix . The distances between successive rows is computed . Distance is the standard Euclidean distance .|||Where X is an M x N array or matrix .
matplotlib.mlab.entropy,S,Compare S with analytic calculation for a Gaussian :
matplotlib.mlab.entropy,bins,where is the probability of observing y in the bin of bins . bins can be a number of bins or a range of bins ; see numpy.histogram ( ) .|||where is the probability of observing y in the bin of bins .
matplotlib.mlab.entropy,y,where is the probability of observing y in the bin of bins . bins can be a number of bins or a range of bins ; see numpy.histogram ( ) .|||where is the probability of observing y in the bin of bins .|||Return the entropy of the data in y in units of nat .
matplotlib.mlab.fftsurr,x,Compute an FFT phase randomized surrogate of x .
matplotlib.mlab.frange,closed,"frange(x0 , x1 ) returns [ x0 , x0+1 , x0+2 , ...|||frange(x0 , x1 ) returns [ x0 , x0+1 , x0+2 , ... , x1 ] ; start defaults to 0 , and the endpoint is included . This behavior is different from that of range ( ) and numpy.arange ( ) . This is deliberate , since frange ( ) will probably be more useful for generating lists of points for function evaluation , and endpoints are often desired in this use . The usual behavior of range ( ) can be obtained by setting the keyword closed = 0 , in this case , frange ( ) basically becomes : func:numpy.arange ` ."
matplotlib.mlab.frange,is included,"frange(x0 , x1 ) returns [ x0 , x0+1 , x0+2 , ...|||frange(x0 , x1 ) returns [ x0 , x0+1 , x0+2 , ... , x1 ] ; start defaults to 0 , and the endpoint is included . This behavior is different from that of range ( ) and numpy.arange ( ) . This is deliberate , since frange ( ) will probably be more useful for generating lists of points for function evaluation , and endpoints are often desired in this use . The usual behavior of range ( ) can be obtained by setting the keyword closed = 0 , in this case , frange ( ) basically becomes : func:numpy.arange ` ."
matplotlib.mlab.frange,npts,frange ( ) can also be called with the keyword npts . This sets the number of points the list should contain ( and overrides the value step might have been given ) . numpy.arange ( ) does n't offer this option .|||frange ( ) can also be called with the keyword npts .
matplotlib.mlab.frange,start,"frange(x0 , x1 ) returns [ x0 , x0+1 , x0+2 , ...|||frange(x0 , x1 ) returns [ x0 , x0+1 , x0+2 , ... , x1 ] ; start defaults to 0 , and the endpoint is included . This behavior is different from that of range ( ) and numpy.arange ( ) . This is deliberate , since frange ( ) will probably be more useful for generating lists of points for function evaluation , and endpoints are often desired in this use . The usual behavior of range ( ) can be obtained by setting the keyword closed = 0 , in this case , frange ( ) basically becomes : func:numpy.arange ` ."
matplotlib.mlab.frange,step,"frange ( ) can also be called with the keyword npts . This sets the number of points the list should contain ( and overrides the value step might have been given ) . numpy.arange ( ) does n't offer this option .|||When step is given , it specifies the increment ( or decrement ) .|||When step is given , it specifies the increment ( or decrement ) . All arguments can be floating point numbers .|||frange ( ) can also be called with the keyword npts ."
matplotlib.mlab.frange,x1,"frange(x0,x1,d ) returns [ x0,x0+d,x0+2d,...,xfin ] where xfin < = x1 ."
matplotlib.mlab.frange,xfin,"frange(x0,x1,d ) returns [ x0,x0+d,x0+2d,...,xfin ] where xfin < = x1 ."
matplotlib.mlab.get_sparse_matrix,M,Return a M x N sparse matrix with frac elements randomly filled .
matplotlib.mlab.get_sparse_matrix,N,Return a M x N sparse matrix with frac elements randomly filled .
matplotlib.mlab.get_sparse_matrix,frac,Return a M x N sparse matrix with frac elements randomly filled .
matplotlib.mlab.get_xyz_where,Cond,"Z and Cond are M x N matrices . Z are data and Cond is a boolean matrix where some condition is satisfied . Return value is ( x , y , z ) where x and y are the indices into Z and z are the values of Z at those indices . x , y , and z are 1D arrays .|||Z and Cond are M x N matrices ."
matplotlib.mlab.get_xyz_where,M,"Z and Cond are M x N matrices . Z are data and Cond is a boolean matrix where some condition is satisfied . Return value is ( x , y , z ) where x and y are the indices into Z and z are the values of Z at those indices . x , y , and z are 1D arrays .|||Z and Cond are M x N matrices ."
matplotlib.mlab.get_xyz_where,N,"Z and Cond are M x N matrices . Z are data and Cond is a boolean matrix where some condition is satisfied . Return value is ( x , y , z ) where x and y are the indices into Z and z are the values of Z at those indices . x , y , and z are 1D arrays .|||Z and Cond are M x N matrices ."
matplotlib.mlab.get_xyz_where,Z,"Z and Cond are M x N matrices . Z are data and Cond is a boolean matrix where some condition is satisfied . Return value is ( x , y , z ) where x and y are the indices into Z and z are the values of Z at those indices . x , y , and z are 1D arrays .|||Z and Cond are M x N matrices ."
matplotlib.mlab.get_xyz_where,x,"Z and Cond are M x N matrices . Z are data and Cond is a boolean matrix where some condition is satisfied . Return value is ( x , y , z ) where x and y are the indices into Z and z are the values of Z at those indices . x , y , and z are 1D arrays .|||Z and Cond are M x N matrices ."
matplotlib.mlab.get_xyz_where,y,"Z and Cond are M x N matrices . Z are data and Cond is a boolean matrix where some condition is satisfied . Return value is ( x , y , z ) where x and y are the indices into Z and z are the values of Z at those indices . x , y , and z are 1D arrays .|||Z and Cond are M x N matrices ."
matplotlib.mlab.get_xyz_where,z,"Z and Cond are M x N matrices . Z are data and Cond is a boolean matrix where some condition is satisfied . Return value is ( x , y , z ) where x and y are the indices into Z and z are the values of Z at those indices . x , y , and z are 1D arrays .|||Z and Cond are M x N matrices ."
matplotlib.mlab.griddata,interp,"Interpolation algorithm , either ' nn ' for natural neighbor , or ' linear ' for linear interpolation ."
matplotlib.mlab.griddata,"x, y, z",Coordinates of grid points to interpolate from .
matplotlib.mlab.griddata,"xi, yi",Coordinates of grid points to interpolate to .
matplotlib.mlab.identity,dtype,Optionally a dtype ( or typecode ) may be given ( it defaults to ' l ' ) .
matplotlib.mlab.identity,n,"Since rank defaults to 2 , this function behaves in the default case ( when only n is given ) like numpy.identity(n ) - - but surprisingly , it is much faster .|||Returns the identity matrix of shape ( n , n , ...|||Returns the identity matrix of shape ( n , n , ... , n ) ( rank r ) ."
matplotlib.mlab.identity,r,"Returns the identity matrix of shape ( n , n , ...|||Returns the identity matrix of shape ( n , n , ... , n ) ( rank r ) ."
matplotlib.mlab.inside_poly,points,"points is a sequence of x , y points . verts is a sequence of x , y vertices of a polygon .|||points is a sequence of x , y points ."
matplotlib.mlab.inside_poly,verts,"points is a sequence of x , y points . verts is a sequence of x , y vertices of a polygon .|||points is a sequence of x , y points ."
matplotlib.mlab.inside_poly,x,"points is a sequence of x , y points . verts is a sequence of x , y vertices of a polygon .|||points is a sequence of x , y points ."
matplotlib.mlab.inside_poly,y,"points is a sequence of x , y points . verts is a sequence of x , y vertices of a polygon .|||points is a sequence of x , y points ."
matplotlib.mlab.ispower2,n,"Returns the log base 2 of n if n is a power of 2 , zero otherwise .|||Note the potential ambiguity if n = = 1 : 2**0 = = 1 , interpret accordingly ."
matplotlib.mlab.isvector,X,"Like the MATLAB function with the same name , returns True if the supplied numpy array or matrix X looks like a vector , meaning it has a one non-singleton axis ( i.e. , it can have multiple axes , but all must have length 1 , except for one of them ) .|||Like the MATLAB function with the same name , returns True"
matplotlib.mlab.l1norm,a,"Return the l1 norm of a , flattened out ."
matplotlib.mlab.l1norm,l1,"Return the l1 norm of a , flattened out ."
matplotlib.mlab.l2norm,a,"Return the l2 norm of a , flattened out ."
matplotlib.mlab.l2norm,l2,"Return the l2 norm of a , flattened out ."
matplotlib.mlab.log2,x,Return the log(x ) in base 2 .
matplotlib.mlab.longest_contiguous_ones,x,"Return the indices of the longest stretch of contiguous ones in x , assuming x is a vector of zeros and ones . If there are two equally long stretches , pick the first .|||Return the indices of the longest stretch of contiguous ones in x , assuming x is a vector of zeros and ones ."
matplotlib.mlab.magnitude_spectrum,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.mlab.magnitude_spectrum,freqs,"Returns the tuple ( spectrum , freqs ) :"
matplotlib.mlab.magnitude_spectrum,pad_to,Compute the magnitude ( absolute value ) of the frequency spectrum of x .|||Compute the magnitude ( absolute value ) of the frequency spectrum of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .
matplotlib.mlab.magnitude_spectrum,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.mlab.magnitude_spectrum,spectrum,"Returns the tuple ( spectrum , freqs ) :"
matplotlib.mlab.magnitude_spectrum,window,"A function or a vector of length NFFT .|||Compute the magnitude ( absolute value ) of the frequency spectrum of x .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment .|||Compute the magnitude ( absolute value ) of the frequency spectrum of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal ."
matplotlib.mlab.magnitude_spectrum,x,Compute the magnitude ( absolute value ) of the frequency spectrum of x .|||Array or sequence containing the data|||Compute the magnitude ( absolute value ) of the frequency spectrum of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .
matplotlib.mlab.movavg,n,Compute the len(n ) moving average of x .
matplotlib.mlab.movavg,x,Compute the len(n ) moving average of x .
matplotlib.mlab.norm_flat,a,"Return the l-p norm of a , considered as a flat array . This is NOT a true matrix norm , since arrays of arbitrary rank are always flattened .|||Return the l-p norm of a , considered as a flat array ."
matplotlib.mlab.norm_flat,p,p can be a number or the string ' Infinity ' to get the L-infinity norm .
matplotlib.mlab.normpdf,mu,"Return the normal pdf evaluated at x ; args provides mu , sigma"
matplotlib.mlab.normpdf,sigma,"Return the normal pdf evaluated at x ; args provides mu , sigma"
matplotlib.mlab.normpdf,x,"Return the normal pdf evaluated at x ; args provides mu , sigma"
matplotlib.mlab.offset_line,y,"Offsets an array y by + / - an error and returns a tuple ( y - err , y + err ) ."
matplotlib.mlab.path_length,M,"Where X is an M x N array or matrix . Returns an array of length M consisting of the distance along the curve at each point ( i.e. , the rows of X ) .|||Where X is an M x N array or matrix ."
matplotlib.mlab.path_length,N,"Where X is an M x N array or matrix . Returns an array of length M consisting of the distance along the curve at each point ( i.e. , the rows of X ) .|||Computes the distance travelled along a polygonal curve in N dimensions .|||Where X is an M x N array or matrix ."
matplotlib.mlab.path_length,X,"Where X is an M x N array or matrix . Returns an array of length M consisting of the distance along the curve at each point ( i.e. , the rows of X ) .|||Where X is an M x N array or matrix ."
matplotlib.mlab.phase_spectrum,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.mlab.phase_spectrum,freqs,"Returns the tuple ( spectrum , freqs ) :"
matplotlib.mlab.phase_spectrum,pad_to,Compute the phase of the frequency spectrum ( unwrapped angle spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the phase of the frequency spectrum ( unwrapped angle spectrum ) of x .
matplotlib.mlab.phase_spectrum,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.mlab.phase_spectrum,spectrum,"Returns the tuple ( spectrum , freqs ) :"
matplotlib.mlab.phase_spectrum,window,"A function or a vector of length NFFT .|||Compute the phase of the frequency spectrum ( unwrapped angle spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the phase of the frequency spectrum ( unwrapped angle spectrum ) of x .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.mlab.phase_spectrum,x,Compute the phase of the frequency spectrum ( unwrapped angle spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Array or sequence containing the data|||Compute the phase of the frequency spectrum ( unwrapped angle spectrum ) of x .
matplotlib.mlab.poly_below,xmin,"Given a sequence of xs and ys , return the vertices of a polygon that has a horizontal base at xmin and an upper bound at the ys .|||Given a sequence of xs and ys , return the vertices of a polygon that has a horizontal base at xmin and an upper bound at the ys . xmin is a scalar ."
matplotlib.mlab.poly_below,xs,"Given a sequence of xs and ys , return the vertices of a polygon that has a horizontal base at xmin and an upper bound at the ys .|||Given a sequence of xs and ys , return the vertices of a polygon that has a horizontal base at xmin and an upper bound at the ys . xmin is a scalar ."
matplotlib.mlab.poly_below,ys,"Given a sequence of xs and ys , return the vertices of a polygon that has a horizontal base at xmin and an upper bound at the ys .|||Given a sequence of xs and ys , return the vertices of a polygon that has a horizontal base at xmin and an upper bound at the ys . xmin is a scalar ."
matplotlib.mlab.poly_between,x,"Return value is x , y arrays for use with matplotlib.axes.Axes.fill ( ) .|||Given a sequence of x , ylower and yupper , return the polygon that fills the regions between them . ylower or yupper can be scalar or iterable . If they are iterable , they must be equal in length to x .|||Given a sequence of x , ylower and yupper , return the polygon that fills the regions between them ."
matplotlib.mlab.poly_between,y,"Return value is x , y arrays for use with matplotlib.axes.Axes.fill ( ) ."
matplotlib.mlab.poly_between,ylower,"Given a sequence of x , ylower and yupper , return the polygon that fills the regions between them . ylower or yupper can be scalar or iterable . If they are iterable , they must be equal in length to x .|||Given a sequence of x , ylower and yupper , return the polygon that fills the regions between them ."
matplotlib.mlab.poly_between,yupper,"Given a sequence of x , ylower and yupper , return the polygon that fills the regions between them . ylower or yupper can be scalar or iterable . If they are iterable , they must be equal in length to x .|||Given a sequence of x , ylower and yupper , return the polygon that fills the regions between them ."
matplotlib.mlab.prctile,p,"Return the percentiles of x .|||Return the percentiles of x . p can either be a sequence of percentile values or a scalar . If p is a sequence , the ith element of the return sequence is the p*(i)-th percentile of * x . If p is a scalar , the largest value of x less than or equal to the p percentage point in the sequence is returned ."
matplotlib.mlab.prctile,p*(i)-th percentile of *x,"Return the percentiles of x .|||Return the percentiles of x . p can either be a sequence of percentile values or a scalar . If p is a sequence , the ith element of the return sequence is the p*(i)-th percentile of * x . If p is a scalar , the largest value of x less than or equal to the p percentage point in the sequence is returned ."
matplotlib.mlab.prctile,x,"Return the percentiles of x .|||Return the percentiles of x . p can either be a sequence of percentile values or a scalar . If p is a sequence , the ith element of the return sequence is the p*(i)-th percentile of * x . If p is a scalar , the largest value of x less than or equal to the p percentage point in the sequence is returned ."
matplotlib.mlab.prctile_rank,p,"Return the rank for each element in x , return the rank 0..len(p ) . e.g. , if p =( 25 , 50 , 75 ) , the return value will be a len(x ) array with values in [ 0,1,2,3 ] where 0 indicates the value is less than the 25th percentile , 1 indicates the value is > = the 25th and < 50th percentile , ... and 3 indicates the value is above the 75th percentile cutoff .|||p is either an array of percentiles in [ 0..100 ] or a scalar which indicates how many quantiles of data you want ranked .|||Return the rank for each element in x , return the rank 0..len(p ) ."
matplotlib.mlab.prctile_rank,x,"Return the rank for each element in x , return the rank 0..len(p ) . e.g. , if p =( 25 , 50 , 75 ) , the return value will be a len(x ) array with values in [ 0,1,2,3 ] where 0 indicates the value is less than the 25th percentile , 1 indicates the value is > = the 25th and < 50th percentile , ... and 3 indicates the value is above the 75th percentile cutoff .|||Return the rank for each element in x , return the rank 0..len(p ) ."
matplotlib.mlab.psd,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.mlab.psd,NFFT,"The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute .|||The power spectral density by Welch 's average periodogram method .|||If len(x ) < NFFT , it will be zero padded to NFFT ."
matplotlib.mlab.psd,Pxx,"Returns the tuple ( Pxx , freqs ) ."
matplotlib.mlab.psd,detrend,The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute .|||The power spectral density by Welch 's average periodogram method .
matplotlib.mlab.psd,freqs,"Returns the tuple ( Pxx , freqs ) ."
matplotlib.mlab.psd,noverlap,The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute .|||The power spectral density by Welch 's average periodogram method .
matplotlib.mlab.psd,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.mlab.psd,window,"A function or a vector of length NFFT .|||The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute .|||The power spectral density by Welch 's average periodogram method .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.mlab.psd,x,"The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute .|||The power spectral density by Welch 's average periodogram method .|||If len(x ) < NFFT , it will be zero padded to NFFT ."
matplotlib.mlab.quad2cubic,x,"The inputs are the x and y coordinates of the three control points of a quadratic curve , and the output is a tuple of x and y coordinates of the four control points of the cubic curve ."
matplotlib.mlab.quad2cubic,y,"The inputs are the x and y coordinates of the three control points of a quadratic curve , and the output is a tuple of x and y coordinates of the four control points of the cubic curve ."
matplotlib.mlab.rec2csv,r,Save the data from numpy recarray r into a comma-/space-/tab-delimited file .|||Save the data from numpy recarray r into a comma-/space-/tab-delimited file . The record array dtype names will be used for column headers .
matplotlib.mlab.rec2txt,fields,"fields : if not None , a list of field names to print . fields can be a list of strings like [ ' field1 ' , ' field2 ' ] or a single comma separated string like ' field1,field2 '|||fields : if not None , a list of field names to print ."
matplotlib.mlab.rec2txt,header,header : list of column headers
matplotlib.mlab.rec2txt,padding,padding : space between each column
matplotlib.mlab.rec2txt,r,r : numpy recarray
matplotlib.mlab.rec_append_fields,arrs,"Return a new record array with field names populated with data from arrays in arrs . If appending a single field , then names , arrs and dtypes do not have to be lists . They can just be the values themselves .|||Return a new record array with field names populated with data from arrays in arrs ."
matplotlib.mlab.rec_append_fields,dtypes,"Return a new record array with field names populated with data from arrays in arrs . If appending a single field , then names , arrs and dtypes do not have to be lists . They can just be the values themselves .|||Return a new record array with field names populated with data from arrays in arrs ."
matplotlib.mlab.rec_append_fields,names,"Return a new record array with field names populated with data from arrays in arrs . If appending a single field , then names , arrs and dtypes do not have to be lists . They can just be the values themselves .|||Return a new record array with field names populated with data from arrays in arrs ."
matplotlib.mlab.rec_drop_fields,names,Return a new numpy record array with fields in names dropped .
matplotlib.mlab.rec_groupby,attr,"stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname .|||stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname . For example :"
matplotlib.mlab.rec_groupby,dtype,"Return record array has dtype names for each attribute name in the groupby argument , with the associated group values , and for each outname name in the stats argument , with the associated stat summary output ."
matplotlib.mlab.rec_groupby,func,"stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname .|||stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname . For example :"
matplotlib.mlab.rec_groupby,groupby,"groupby is a sequence of record array attribute names that together form the grouping key .|||Return record array has dtype names for each attribute name in the groupby argument , with the associated group values , and for each outname name in the stats argument , with the associated stat summary output .|||groupby is a sequence of record array attribute names that together form the grouping key . e.g. , ( ' date ' , ' productcode ' )"
matplotlib.mlab.rec_groupby,outname,"stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname .|||stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname . For example :"
matplotlib.mlab.rec_groupby,r,r is a numpy record array
matplotlib.mlab.rec_groupby,stats,"stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname .|||Return record array has dtype names for each attribute name in the groupby argument , with the associated group values , and for each outname name in the stats argument , with the associated stat summary output .|||stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname . For example :"
matplotlib.mlab.rec_groupby,x,"stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname .|||stats is a sequence of ( attr , func , outname ) tuples which will call x = func(attr ) and assign x to the record array output with attribute outname . For example :"
matplotlib.mlab.rec_join,defaults,The defaults keyword is a dictionary filled with { column_name:default_value } pairs .
matplotlib.mlab.rec_join,jointype,"The jointype keyword can be ' inner ' , ' outer ' , ' leftouter ' . To do a rightouter join just reverse r1 and r2 .|||The jointype keyword can be ' inner ' , ' outer ' , ' leftouter ' ."
matplotlib.mlab.rec_join,key,"Join record arrays r1 and r2 on key ; key is a tuple of field names - - if key is a string it is assumed to be a single attribute name . If r1 and r2 have equal values on all the keys in the key tuple , then their fields will be merged into a new record array containing the intersection of the fields of r1 and r2 .|||Join record arrays r1 and r2 on key ; key is a tuple of field names - - if key is a string it is assumed to be a single attribute name ."
matplotlib.mlab.rec_join,r1,"Join record arrays r1 and r2 on key ; key is a tuple of field names - - if key is a string it is assumed to be a single attribute name . If r1 and r2 have equal values on all the keys in the key tuple , then their fields will be merged into a new record array containing the intersection of the fields of r1 and r2 .|||The keywords r1postfix and r2postfix are postfixed to column names ( other than keys ) that are both in r1 and r2 .|||The jointype keyword can be ' inner ' , ' outer ' , ' leftouter ' .|||r1 ( also r2 ) must not have any duplicate keys .|||The jointype keyword can be ' inner ' , ' outer ' , ' leftouter ' . To do a rightouter join just reverse r1 and r2 .|||Join record arrays r1 and r2 on key ; key is a tuple of field names - - if key is a string it is assumed to be a single attribute name ."
matplotlib.mlab.rec_join,r1postfix,The keywords r1postfix and r2postfix are postfixed to column names ( other than keys ) that are both in r1 and r2 .
matplotlib.mlab.rec_join,r2,"Join record arrays r1 and r2 on key ; key is a tuple of field names - - if key is a string it is assumed to be a single attribute name . If r1 and r2 have equal values on all the keys in the key tuple , then their fields will be merged into a new record array containing the intersection of the fields of r1 and r2 .|||The keywords r1postfix and r2postfix are postfixed to column names ( other than keys ) that are both in r1 and r2 .|||The jointype keyword can be ' inner ' , ' outer ' , ' leftouter ' .|||r1 ( also r2 ) must not have any duplicate keys .|||The jointype keyword can be ' inner ' , ' outer ' , ' leftouter ' . To do a rightouter join just reverse r1 and r2 .|||Join record arrays r1 and r2 on key ; key is a tuple of field names - - if key is a string it is assumed to be a single attribute name ."
matplotlib.mlab.rec_join,r2postfix,The keywords r1postfix and r2postfix are postfixed to column names ( other than keys ) that are both in r1 and r2 .
matplotlib.mlab.rec_summarize,attr,"summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname . The returned record array is identical to r , with extra arrays for each element in summaryfuncs .|||summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname ."
matplotlib.mlab.rec_summarize,func,"summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname . The returned record array is identical to r , with extra arrays for each element in summaryfuncs .|||summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname ."
matplotlib.mlab.rec_summarize,outname,"summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname . The returned record array is identical to r , with extra arrays for each element in summaryfuncs .|||summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname ."
matplotlib.mlab.rec_summarize,r,"r is a numpy record array|||summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname . The returned record array is identical to r , with extra arrays for each element in summaryfuncs .|||summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname ."
matplotlib.mlab.rec_summarize,"r*[attr] and assign the
output to a new attribute name *outname","summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname . The returned record array is identical to r , with extra arrays for each element in summaryfuncs .|||summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname ."
matplotlib.mlab.rec_summarize,summaryfuncs,"summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname . The returned record array is identical to r , with extra arrays for each element in summaryfuncs .|||summaryfuncs is a list of ( attr , func , outname ) tuples which will apply func to the array r*[attr ] and assign the output to a new attribute name * outname ."
matplotlib.mlab.rms_flat,a,"Return the root mean square of all the elements of a , flattened out ."
matplotlib.mlab.segments_intersect,s1,Return True if s1 and s2 intersect . s1 and s2 are defined as :|||Return True if s1 and s2 intersect .
matplotlib.mlab.segments_intersect,s2,Return True if s1 and s2 intersect . s1 and s2 are defined as :|||Return True if s1 and s2 intersect .
matplotlib.mlab.slopes,x,slopes ( ) calculates the slope y ' ( x )
matplotlib.mlab.slopes,y,slopes ( ) calculates the slope y ' ( x )
matplotlib.mlab.specgram,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.mlab.specgram,NFFT,"Compute and plot a spectrogram of data in x .|||Compute and plot a spectrogram of data in x . Data are split into NFFT length segments and the spectrum of each section is computed . The windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap ."
matplotlib.mlab.specgram,freqs,"Returns the tuple ( spectrum , freqs , t ) :"
matplotlib.mlab.specgram,noverlap,"Compute and plot a spectrogram of data in x .|||Compute and plot a spectrogram of data in x . Data are split into NFFT length segments and the spectrum of each section is computed . The windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap ."
matplotlib.mlab.specgram,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.mlab.specgram,spectrum,"Returns the tuple ( spectrum , freqs , t ) :"
matplotlib.mlab.specgram,t,"Returns the tuple ( spectrum , freqs , t ) :"
matplotlib.mlab.specgram,window,"A function or a vector of length NFFT .|||Compute and plot a spectrogram of data in x .|||Compute and plot a spectrogram of data in x . Data are split into NFFT length segments and the spectrum of each section is computed . The windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.mlab.specgram,x,"Compute and plot a spectrogram of data in x .|||Compute and plot a spectrogram of data in x . Data are split into NFFT length segments and the spectrum of each section is computed . The windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap ."
matplotlib.mlab.stineman_interp,x,"x is assumed to be sorted in increasing order .|||Given data vectors x and y , the slope vector yp and a new abscissa vector xi , the function stineman_interp ( ) uses Stineman interpolation to calculate a vector yi corresponding to xi ."
matplotlib.mlab.stineman_interp,xi,"Given data vectors x and y , the slope vector yp and a new abscissa vector xi , the function stineman_interp ( ) uses Stineman interpolation to calculate a vector yi corresponding to xi ."
matplotlib.mlab.stineman_interp,y,"Given data vectors x and y , the slope vector yp and a new abscissa vector xi , the function stineman_interp ( ) uses Stineman interpolation to calculate a vector yi corresponding to xi ."
matplotlib.mlab.stineman_interp,yi,"Given data vectors x and y , the slope vector yp and a new abscissa vector xi , the function stineman_interp ( ) uses Stineman interpolation to calculate a vector yi corresponding to xi ."
matplotlib.mlab.stineman_interp,yp,"For yp = None , the routine automatically determines the slopes using the slopes ( ) routine .|||Given data vectors x and y , the slope vector yp and a new abscissa vector xi , the function stineman_interp ( ) uses Stineman interpolation to calculate a vector yi corresponding to xi ."
matplotlib.mlab.vector_lengths,X,"Computes ( sum((x_i)^P))^(1/P ) for each { x_i } being the elements of X along the given axis . If axis is None , compute over all elements of X .|||Computes ( sum((x_i)^P))^(1/P ) for each { x_i } being the elements of X along the given axis ."
matplotlib.mlab.vector_lengths,axis,"Computes ( sum((x_i)^P))^(1/P ) for each { x_i } being the elements of X along the given axis . If axis is None , compute over all elements of X .|||Computes ( sum((x_i)^P))^(1/P ) for each { x_i } being the elements of X along the given axis ."
matplotlib.mlab.vector_lengths,n,"Finds the length of a set of vectors in n dimensions .|||Finds the length of a set of vectors in n dimensions . This is like the numpy.norm ( ) function for vectors , but has the ability to work over a particular axis of the supplied array or matrix ."
matplotlib.offsetbox.AnchoredOffsetbox.set_bbox_to_anchor,bbox,"bbox can be a Bbox instance , a list of [ left , bottom , width , height ] , or a list of [ left , bottom ] where the width and height will be assumed to be zero .|||bbox can be a Bbox instance , a list of [ left , bottom , width , height ] , or a list of [ left , bottom ] where the width and height will be assumed to be zero . The bbox will be transformed to display coordinate by the given transform ."
matplotlib.offsetbox.AnchoredText,borderpad,Pad between the frame and the axes ( or bbox_to_anchor ) .
matplotlib.offsetbox.AnchoredText,loc,Location code .
matplotlib.offsetbox.AnchoredText,pad,Pad between the text and the frame as fraction of the font size .
matplotlib.offsetbox.AnchoredText,prop,Font properties .
matplotlib.offsetbox.AnchoredText,s,Text .
matplotlib.offsetbox.AnnotationBbox.draw,renderer,Draw the Annotation object to the given renderer .
matplotlib.offsetbox.HPacker,align,Alignment of boxes .
matplotlib.offsetbox.HPacker,height,"Width and height of the container box , calculated if None ."
matplotlib.offsetbox.HPacker,mode,Packing mode .
matplotlib.offsetbox.HPacker,pad,Boundary pad .
matplotlib.offsetbox.HPacker,sep,Spacing between items .
matplotlib.offsetbox.OffsetBox.draw,renderer,Update the location of children if necessary and draw them to the given renderer .
matplotlib.offsetbox.PackerBase,align,"Alignment of boxes .|||Alignment of boxes . Can be one of top , bottom , left , right , center and baseline"
matplotlib.offsetbox.PackerBase,height,"Width and height of the container box , calculated if None ."
matplotlib.offsetbox.PackerBase,mode,Packing mode .
matplotlib.offsetbox.PackerBase,pad,Boundary pad .
matplotlib.offsetbox.PackerBase,sep,Spacing between items .
matplotlib.offsetbox.PaddedBox.draw,renderer,Update the location of children if necessary and draw them to the given renderer .
matplotlib.offsetbox.TextArea,minimumdescent,"If True , the box has a minimum descent of "" p "" ."
matplotlib.offsetbox.TextArea,multilinebaseline,"If True , baseline for multiline text is adjusted so that it is ( approximatedly ) center-aligned with singleline text ."
matplotlib.offsetbox.TextArea,s,a string to be displayed .
matplotlib.offsetbox.VPacker,align,Alignment of boxes .
matplotlib.offsetbox.VPacker,height,"width and height of the container box , calculated if None ."
matplotlib.offsetbox.VPacker,mode,Packing mode .
matplotlib.offsetbox.VPacker,pad,Boundary pad .
matplotlib.offsetbox.VPacker,sep,Spacing between items .
matplotlib.patches.BoxStyle.Circle,pad,The amount of padding around the original box .
matplotlib.patches.ConnectionPatch.get_annotation_clip,annotation_clip,Return annotation_clip attribute . See set_annotation_clip ( ) for the meaning of return values .|||Return annotation_clip attribute .
matplotlib.patches.ConnectionPatch.set_annotation_clip,annotation_clip,set annotation_clip attribute .
matplotlib.patches.FancyBboxPatch.set_boxstyle,boxstyle,"boxstyle can be a string with boxstyle name with optional comma-separated attributes . Alternatively , the attrs can be provided as keywords :|||boxstyle can be a string with boxstyle name with optional comma-separated attributes .|||Without argument ( or with boxstyle = None ) , it returns available box styles ."
matplotlib.patches.Patch.draw,renderer,Draw the Patch to the given renderer .
matplotlib.patches.Patch.set_hatch,hatch,hatch can be one of :
matplotlib.patches.Patch.set_linestyle,ls,The line style .
matplotlib.patches.Patch.update_from,hatch,Set the hatching pattern
matplotlib.patches.Patch.update_from,linestyle,Set the patch linestyle
matplotlib.patches.Patch.update_from,other,Updates this Patch from the properties of other .
matplotlib.patches.Polygon.set_closed,closed,True if the polygon is closed
matplotlib.patches.Polygon.set_xy,xy,The coordinates of the vertices as a Nx2 ndarray or iterable of pairs .
matplotlib.patches.YAArrow.getpoints,k,"For line segment defined by ( x1 , y1 ) and ( x2 , y2 ) return the points on the line that is perpendicular to the line and intersects ( x2 , y2 ) and the distance from ( x2 , y2 ) of the returned points is k ."
matplotlib.patches.YAArrow.getpoints,x1,"For line segment defined by ( x1 , y1 ) and ( x2 , y2 ) return the points on the line that is perpendicular to the line and intersects ( x2 , y2 ) and the distance from ( x2 , y2 ) of the returned points is k ."
matplotlib.patches.YAArrow.getpoints,x2,"For line segment defined by ( x1 , y1 ) and ( x2 , y2 ) return the points on the line that is perpendicular to the line and intersects ( x2 , y2 ) and the distance from ( x2 , y2 ) of the returned points is k ."
matplotlib.patches.YAArrow.getpoints,y1,"For line segment defined by ( x1 , y1 ) and ( x2 , y2 ) return the points on the line that is perpendicular to the line and intersects ( x2 , y2 ) and the distance from ( x2 , y2 ) of the returned points is k ."
matplotlib.patches.YAArrow.getpoints,y2,"For line segment defined by ( x1 , y1 ) and ( x2 , y2 ) return the points on the line that is perpendicular to the line and intersects ( x2 , y2 ) and the distance from ( x2 , y2 ) of the returned points is k ."
matplotlib.patches.bbox_artist,props,props is a dict of rectangle props with the additional property ' pad ' that sets the padding around the bbox in points .
matplotlib.path.Path,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.path.Path,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.path.Path,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.path.Path,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.path.Path,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.path.Path.circle,center,"The center of the circle . Default ( 0 , 0 ) .|||The center of the circle ."
matplotlib.path.Path.circle,radius,The radius of the circle . Default is 1 .|||The radius of the circle .
matplotlib.path.Path.circle,readonly,"Whether the created path should have the "" readonly "" argument set when creating the Path instance ."
matplotlib.path.Path.cleaned,clip,"If not None , must be a four-tuple ( x1 , y1 , x2 , y2 ) defining a rectangle in which to clip the path ."
matplotlib.path.Path.cleaned,code,"Iterates over all of the curve segments in the path . Each iteration returns a 2-tuple ( vertices , code ) , where vertices is a sequence of 1 - 3 coordinate pairs , and code is one of the Path codes .|||Iterates over all of the curve segments in the path ."
matplotlib.path.Path.cleaned,curves,"If True , curve segments will be returned as curve segments . If False , all curves will be converted to line segments .|||If True , curve segments will be returned as curve segments ."
matplotlib.path.Path.cleaned,remove_nans,"If True , will remove all NaNs from the path and insert MOVETO commands to skip over them ."
matplotlib.path.Path.cleaned,simplify,"vertices that do not affect the appearance of the path .|||vertices that do not affect the appearance of the path . If False , perform no simplification . If None , use the should_simplify member variable ."
matplotlib.path.Path.cleaned,sketch,"If not None , must be a 3-tuple of the form ( scale , length , randomness ) , representing the sketch parameters ."
matplotlib.path.Path.cleaned,snap,"If None , auto-snap to pixels , to reduce fuzziness of rectilinear lines . If True , force snapping , and if False , do n't snap .|||If None , auto-snap to pixels , to reduce fuzziness of rectilinear lines ."
matplotlib.path.Path.cleaned,stroke_width,as a hint for the snapping algorithm .
matplotlib.path.Path.cleaned,transform,"If not None , the given affine transformation will be applied to the path ."
matplotlib.path.Path.cleaned,vertices,"Iterates over all of the curve segments in the path . Each iteration returns a 2-tuple ( vertices , code ) , where vertices is a sequence of 1 - 3 coordinate pairs , and code is one of the Path codes .|||Iterates over all of the curve segments in the path ."
matplotlib.path.Path.clip_to_bbox,inside,"If inside is True , clip to the inside of the box , otherwise to the outside of the box ."
matplotlib.path.Path.contains_path,transform,"If transform is not None , the path will be transformed before performing the test ."
matplotlib.path.Path.contains_point,radius,radius allows the path to be made slightly larger or smaller .
matplotlib.path.Path.contains_point,transform,"If transform is not None , the path will be transformed before performing the test ."
matplotlib.path.Path.contains_points,radius,radius allows the path to be made slightly larger or smaller .
matplotlib.path.Path.contains_points,transform,"If transform is not None , the path will be transformed before performing the test ."
matplotlib.path.Path.get_extents,vertices,"Unlike computing the extents on the vertices alone , this algorithm will take into account the curves and deal with control points appropriately ."
matplotlib.path.Path.get_extents,xmax,"Returns the extents ( xmin , ymin , xmax , ymax ) of the path ."
matplotlib.path.Path.get_extents,xmin,"Returns the extents ( xmin , ymin , xmax , ymax ) of the path ."
matplotlib.path.Path.get_extents,ymax,"Returns the extents ( xmin , ymin , xmax , ymax ) of the path ."
matplotlib.path.Path.get_extents,ymin,"Returns the extents ( xmin , ymin , xmax , ymax ) of the path ."
matplotlib.path.Path.intersects_bbox,filled,"filled , when True , treats the path as if it was filled . That is , if one path completely encloses the other , intersects_path ( ) will return True .|||filled , when True , treats the path as if it was filled ."
matplotlib.path.Path.intersects_path,filled,"filled , when True , treats the paths as if they were filled .|||filled , when True , treats the paths as if they were filled . That is , if one path completely encloses the other , intersects_path ( ) will return True ."
matplotlib.path.Path.iter_segments,clip,"If not None , must be a four-tuple ( x1 , y1 , x2 , y2 ) defining a rectangle in which to clip the path ."
matplotlib.path.Path.iter_segments,code,"Iterates over all of the curve segments in the path . Each iteration returns a 2-tuple ( vertices , code ) , where vertices is a sequence of 1 - 3 coordinate pairs , and code is one of the Path codes .|||Iterates over all of the curve segments in the path ."
matplotlib.path.Path.iter_segments,curves,"If True , curve segments will be returned as curve segments . If False , all curves will be converted to line segments .|||If True , curve segments will be returned as curve segments ."
matplotlib.path.Path.iter_segments,remove_nans,"If True , will remove all NaNs from the path and insert MOVETO commands to skip over them ."
matplotlib.path.Path.iter_segments,simplify,"vertices that do not affect the appearance of the path .|||vertices that do not affect the appearance of the path . If False , perform no simplification . If None , use the should_simplify member variable ."
matplotlib.path.Path.iter_segments,sketch,"If not None , must be a 3-tuple of the form ( scale , length , randomness ) , representing the sketch parameters ."
matplotlib.path.Path.iter_segments,snap,"If None , auto-snap to pixels , to reduce fuzziness of rectilinear lines . If True , force snapping , and if False , do n't snap .|||If None , auto-snap to pixels , to reduce fuzziness of rectilinear lines ."
matplotlib.path.Path.iter_segments,stroke_width,as a hint for the snapping algorithm .
matplotlib.path.Path.iter_segments,transform,"If not None , the given affine transformation will be applied to the path ."
matplotlib.path.Path.iter_segments,vertices,"Iterates over all of the curve segments in the path . Each iteration returns a 2-tuple ( vertices , code ) , where vertices is a sequence of 1 - 3 coordinate pairs , and code is one of the Path codes .|||Iterates over all of the curve segments in the path ."
matplotlib.path.Path.to_polygons,height,"If width and height are both non-zero then the lines will be simplified so that vertices outside of ( 0 , 0 ) , ( width , height ) will be clipped ."
matplotlib.path.Path.to_polygons,width,"If width and height are both non-zero then the lines will be simplified so that vertices outside of ( 0 , 0 ) , ( width , height ) will be clipped ."
matplotlib.path.get_path_collection_extents,master_transform,master_transform is a global transformation to apply to all paths
matplotlib.path.get_path_collection_extents,offset_transform,offset_transform is a Affine2D to apply to the offsets before applying the offset to the path .|||offset_transform is a Affine2D
matplotlib.path.get_path_collection_extents,offsets,"offsets is a sequence of ( x , y ) offsets ( or an Nx2 array )|||The way that paths , transforms and offsets are combined follows the same method as for collections . Each is iterated over independently , so if you have 3 paths , 2 transforms and 1 offset , their combinations are as follows :|||The way that paths , transforms and offsets are combined follows the same method as for collections ."
matplotlib.path.get_path_collection_extents,paths,"The way that paths , transforms and offsets are combined follows the same method as for collections .|||paths is a sequence of Path instances .|||The way that paths , transforms and offsets are combined follows the same method as for collections . Each is iterated over independently , so if you have 3 paths , 2 transforms and 1 offset , their combinations are as follows :"
matplotlib.path.get_path_collection_extents,transforms,"The way that paths , transforms and offsets are combined follows the same method as for collections .|||The way that paths , transforms and offsets are combined follows the same method as for collections . Each is iterated over independently , so if you have 3 paths , 2 transforms and 1 offset , their combinations are as follows :|||transforms is a sequence of Affine2D instances ."
matplotlib.path.get_paths_extents,paths,paths is a sequence of Path instances .
matplotlib.path.get_paths_extents,transforms,transforms is an optional sequence of Affine2D instances to apply to each path .
matplotlib.patheffects.AbstractPathEffect,offset,"The offset to apply to the path , measured in points ."
matplotlib.patheffects.Normal,offset,"The offset to apply to the path , measured in points ."
matplotlib.patheffects.PathEffectRenderer,path_effects,The path effects which this renderer represents .
matplotlib.patheffects.PathPatchEffect,**kwargs :,"All keyword arguments are passed through to the PathPatch constructor . The properties which cannot be overridden are "" path "" , "" clip_box "" "" transform "" and "" clip_path "" .|||All keyword arguments are passed through to the PathPatch constructor ."
matplotlib.patheffects.PathPatchEffect,offset,"The offset to apply to the path , in points ."
matplotlib.patheffects.SimpleLineShadow,**kwargs,Extra keywords are stored and passed through to AbstractPathEffect._update_gc ( ) .
matplotlib.patheffects.SimpleLineShadow,alpha,The alpha transparency of the created shadow patch . Default is 0.3 .|||The alpha transparency of the created shadow patch .
matplotlib.patheffects.SimpleLineShadow,offset,"The offset to apply to the path , in points ."
matplotlib.patheffects.SimpleLineShadow,rho,A scale factor to apply to the rgbFace color if shadow_rgbFace is None .|||A scale factor to apply to the rgbFace color if shadow_rgbFace is None . Default is 0.3 .
matplotlib.patheffects.SimpleLineShadow,shadow_color,The shadow color . Default is black . A value of None takes the original artist 's color with a scale factor of rho .|||The shadow color .
matplotlib.patheffects.SimplePatchShadow,**kwargs,Extra keywords are stored and passed through to AbstractPathEffect._update_gc ( ) .
matplotlib.patheffects.SimplePatchShadow,alpha,The alpha transparency of the created shadow patch . Default is 0.3 . http://matplotlib.1069221.n5.nabble.com/path-effects-question-td27630.html|||The alpha transparency of the created shadow patch .
matplotlib.patheffects.SimplePatchShadow,offset,The offset of the shadow in points .
matplotlib.patheffects.SimplePatchShadow,rho,A scale factor to apply to the rgbFace color if shadow_rgbFace is not specified . Default is 0.3 .|||A scale factor to apply to the rgbFace color if shadow_rgbFace is not specified .
matplotlib.patheffects.SimplePatchShadow,shadow_rgbFace,The shadow color .
matplotlib.patheffects.withSimplePatchShadow,**kwargs,Extra keywords are stored and passed through to AbstractPathEffect._update_gc ( ) .
matplotlib.patheffects.withSimplePatchShadow,alpha,The alpha transparency of the created shadow patch . Default is 0.3 . http://matplotlib.1069221.n5.nabble.com/path-effects-question-td27630.html|||The alpha transparency of the created shadow patch .
matplotlib.patheffects.withSimplePatchShadow,offset,The offset of the shadow in points .
matplotlib.patheffects.withSimplePatchShadow,rho,A scale factor to apply to the rgbFace color if shadow_rgbFace is not specified . Default is 0.3 .|||A scale factor to apply to the rgbFace color if shadow_rgbFace is not specified .
matplotlib.patheffects.withSimplePatchShadow,shadow_rgbFace,The shadow color .
matplotlib.pyplot.acorr,detrend,x is detrended by the detrend callable . Default is no normalization .|||x is detrended by the detrend callable .
matplotlib.pyplot.acorr,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Only used if usevlines is False ."
matplotlib.pyplot.acorr,marker,Set the line marker
matplotlib.pyplot.acorr,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.acorr,maxlags,"number of lags to show . If None , will return all 2 * len(x ) - 1 lags .|||number of lags to show ."
matplotlib.pyplot.acorr,normed,"if True , normalize the data by the autocorrelation at the 0-th lag ."
matplotlib.pyplot.acorr,usevlines,"if True , Axes.vlines is used to plot the vertical lines from the origin to the acorr . Otherwise , Axes.plot is used .|||if True , Axes.vlines is used to plot the vertical lines from the origin to the acorr ."
matplotlib.pyplot.angle_spectrum,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.pyplot.angle_spectrum,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.angle_spectrum,agg_filter,set agg_filter fuction .
matplotlib.pyplot.angle_spectrum,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.angle_spectrum,anchor,anchor
matplotlib.pyplot.angle_spectrum,animated,Set the artist 's animation state .
matplotlib.pyplot.angle_spectrum,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.angle_spectrum,aspect,aspect
matplotlib.pyplot.angle_spectrum,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.angle_spectrum,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.angle_spectrum,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.angle_spectrum,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.angle_spectrum,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.angle_spectrum,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.angle_spectrum,color,Set the color of the line
matplotlib.pyplot.angle_spectrum,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.angle_spectrum,contains,Replace the contains test used by this artist .
matplotlib.pyplot.angle_spectrum,cursor_props,Set the cursor property as
matplotlib.pyplot.angle_spectrum,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.angle_spectrum,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.angle_spectrum,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.angle_spectrum,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.angle_spectrum,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.angle_spectrum,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.angle_spectrum,freqs,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.pyplot.angle_spectrum,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.angle_spectrum,hatch,Set the hatching pattern
matplotlib.pyplot.angle_spectrum,label,Set the label to s for auto legend .
matplotlib.pyplot.angle_spectrum,line,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.pyplot.angle_spectrum,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.angle_spectrum,linewidth,Set the line width in points
matplotlib.pyplot.angle_spectrum,marker,Set the line marker
matplotlib.pyplot.angle_spectrum,markeredgecolor,Set the marker edge color
matplotlib.pyplot.angle_spectrum,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.angle_spectrum,markerfacecolor,Set the marker face color .
matplotlib.pyplot.angle_spectrum,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.angle_spectrum,markersize,Set the marker size in points
matplotlib.pyplot.angle_spectrum,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.angle_spectrum,pad_to,Compute the angle spectrum ( wrapped phase spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the angle spectrum ( wrapped phase spectrum ) of x .
matplotlib.pyplot.angle_spectrum,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.angle_spectrum,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.angle_spectrum,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.angle_spectrum,position,Set the axes position with
matplotlib.pyplot.angle_spectrum,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.angle_spectrum,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.angle_spectrum,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.angle_spectrum,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.pyplot.angle_spectrum,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.angle_spectrum,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.angle_spectrum,snap,Sets the snap setting which may be
matplotlib.pyplot.angle_spectrum,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.angle_spectrum,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.angle_spectrum,spectrum,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.pyplot.angle_spectrum,title,Set a title for the axes .
matplotlib.pyplot.angle_spectrum,transform,set the Transformation instance used by this artist
matplotlib.pyplot.angle_spectrum,url,Sets the url for the artist
matplotlib.pyplot.angle_spectrum,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.angle_spectrum,visible,Set the artist 's visiblity .
matplotlib.pyplot.angle_spectrum,window,"Compute the angle spectrum ( wrapped phase spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||A function or a vector of length NFFT .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment .|||Compute the angle spectrum ( wrapped phase spectrum ) of x ."
matplotlib.pyplot.angle_spectrum,x,Compute the angle spectrum ( wrapped phase spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the angle spectrum ( wrapped phase spectrum ) of x .
matplotlib.pyplot.angle_spectrum,xdata,Set the data np.array for x
matplotlib.pyplot.angle_spectrum,xlabel,Set the label for the xaxis .
matplotlib.pyplot.angle_spectrum,xlim,Set the data limits for the xaxis
matplotlib.pyplot.angle_spectrum,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.angle_spectrum,xscale,Set the scaling of the x-axis
matplotlib.pyplot.angle_spectrum,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.angle_spectrum,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.angle_spectrum,ydata,Set the data np.array for y
matplotlib.pyplot.angle_spectrum,ylabel,Set the label for the yaxis
matplotlib.pyplot.angle_spectrum,ylim,Set the data limits for the yaxis
matplotlib.pyplot.angle_spectrum,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.angle_spectrum,yscale,Set the scaling of the y-axis
matplotlib.pyplot.angle_spectrum,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.angle_spectrum,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.angle_spectrum,zorder,Set the zorder for the artist .
matplotlib.pyplot.annotate,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.annotate,agg_filter,set agg_filter fuction .
matplotlib.pyplot.annotate,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.annotate,anchor,anchor
matplotlib.pyplot.annotate,animated,Set the artist 's animation state .
matplotlib.pyplot.annotate,annotation_clip,"The annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area .|||The annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area . If True , the annotation will only be drawn when the xy is inside the axes . If False , the annotation will always be drawn regardless of its position . The default is None , which behave as True only if xycoords is "" data "" ."
matplotlib.pyplot.annotate,arrowprops,"arrowprops , if not None , is a dictionary of line properties ( see matplotlib.lines.Line2D ) for the arrow that connects annotation to the point .|||Dictionary of line properties for the arrow that connects the annotation to the point . If the dictionnary has a key arrowstyle , a FancyArrowPatch instance is created and drawn . See matplotlib.text.Annotation for more details on valid options . Default is None .|||Dictionary of line properties for the arrow that connects the annotation to the point ."
matplotlib.pyplot.annotate,arrowstyle,"If the dictionary has a key arrowstyle , a FancyArrowPatch instance is created with the given dictionary and is drawn .|||If the dictionary has a key arrowstyle , a FancyArrowPatch instance is created with the given dictionary and is drawn . Otherwise , a YAArrow patch instance is created and drawn . Valid keys for YAArrow are :"
matplotlib.pyplot.annotate,aspect,aspect
matplotlib.pyplot.annotate,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.annotate,backgroundcolor,Set the background color of the text by updating the bbox .
matplotlib.pyplot.annotate,bbox,Draw a bounding box around self .
matplotlib.pyplot.annotate,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.annotate,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.annotate,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.annotate,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.annotate,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.annotate,color,Set the foreground color of the text
matplotlib.pyplot.annotate,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.annotate,contains,Replace the contains test used by this artist .
matplotlib.pyplot.annotate,cursor_props,Set the cursor property as
matplotlib.pyplot.annotate,family,Set the font family .
matplotlib.pyplot.annotate,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.annotate,fontconfig_pattern,Set the properties by parsing a fontconfig pattern .
matplotlib.pyplot.annotate,fontproperties,Set the font properties that control the text .
matplotlib.pyplot.annotate,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.annotate,hatch,Set the hatching pattern
matplotlib.pyplot.annotate,horizontalalignment,Set the horizontal alignment to one of
matplotlib.pyplot.annotate,label,Set the label to s for auto legend .
matplotlib.pyplot.annotate,linespacing,Set the line spacing as a multiple of the font size .
matplotlib.pyplot.annotate,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.annotate,marker,Set the line marker
matplotlib.pyplot.annotate,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.annotate,multialignment,Set the alignment for multiple lines layout .
matplotlib.pyplot.annotate,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.annotate,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.annotate,position,"Set the axes position with|||Set the ( x , y ) position of the text"
matplotlib.pyplot.annotate,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.annotate,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.annotate,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.annotate,rotation,Set the rotation of the text
matplotlib.pyplot.annotate,rotation_mode,set text rotation mode .
matplotlib.pyplot.annotate,s,label
matplotlib.pyplot.annotate,size,Set the font size .
matplotlib.pyplot.annotate,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.annotate,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.annotate,snap,Sets the snap setting which may be
matplotlib.pyplot.annotate,stretch,Set the font stretch ( horizontal condensation or expansion ) .
matplotlib.pyplot.annotate,style,Set the font style .
matplotlib.pyplot.annotate,text,Set the text string s
matplotlib.pyplot.annotate,textcoords,"xycoords and textcoords are strings that indicate the coordinates of xy and xytext , and may be one of the following values :|||string that indicates what type of coordinates text is . Examples : "" figure points "" , "" figure pixels "" , "" figure fraction "" , "" axes points "" , ... See matplotlib.text.Annotation for more details .|||string that indicates what type of coordinates text is ."
matplotlib.pyplot.annotate,title,Set a title for the axes .
matplotlib.pyplot.annotate,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.annotate,url,Sets the url for the artist
matplotlib.pyplot.annotate,usetex,Set this Text object to render using TeX ( or not ) .
matplotlib.pyplot.annotate,variant,"Set the font variant , either ' normal ' or ' small-caps ' ."
matplotlib.pyplot.annotate,verticalalignment,Set the vertical alignment
matplotlib.pyplot.annotate,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.annotate,visible,Set the artist 's visiblity .
matplotlib.pyplot.annotate,weight,Set the font weight .
matplotlib.pyplot.annotate,wrap,Sets the wrapping state for the text .
matplotlib.pyplot.annotate,x,Set the x position of the text
matplotlib.pyplot.annotate,xlabel,Set the label for the xaxis .
matplotlib.pyplot.annotate,xlim,Set the data limits for the xaxis
matplotlib.pyplot.annotate,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.annotate,xscale,Set the scaling of the x-axis
matplotlib.pyplot.annotate,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.annotate,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.annotate,xy,"The annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area .|||The annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area . If True , the annotation will only be drawn when the xy is inside the axes . If False , the annotation will always be drawn regardless of its position . The default is None , which behave as True only if xycoords is "" data "" .|||position of element to annotate . See xycoords to control what coordinate system this value is interpretated in .|||xycoords and textcoords are strings that indicate the coordinates of xy and xytext , and may be one of the following values :|||position of element to annotate ."
matplotlib.pyplot.annotate,xycoords,"The annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area .|||The annotation_clip attribute controls the visibility of the annotation when it goes outside the axes area . If True , the annotation will only be drawn when the xy is inside the axes . If False , the annotation will always be drawn regardless of its position . The default is None , which behave as True only if xycoords is "" data "" .|||xycoords and textcoords are strings that indicate the coordinates of xy and xytext , and may be one of the following values :|||string that indicates what type of coordinates xy is .|||string that indicates what type of coordinates xy is . Examples : "" figure points "" , "" figure pixels "" , "" figure fraction "" , "" axes points "" , ... See matplotlib.text.Annotation for more details ."
matplotlib.pyplot.annotate,xytext,"position of the label s. See textcoords to control what coordinate system this value is interpreted in .|||xycoords and textcoords are strings that indicate the coordinates of xy and xytext , and may be one of the following values :"
matplotlib.pyplot.annotate,y,Set the y position of the text
matplotlib.pyplot.annotate,ylabel,Set the label for the yaxis
matplotlib.pyplot.annotate,ylim,Set the data limits for the yaxis
matplotlib.pyplot.annotate,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.annotate,yscale,Set the scaling of the y-axis
matplotlib.pyplot.annotate,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.annotate,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.annotate,zorder,Set the zorder for the artist .
matplotlib.pyplot.arrow,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.arrow,agg_filter,set agg_filter fuction .
matplotlib.pyplot.arrow,alpha,Set the alpha tranparency of the patch .
matplotlib.pyplot.arrow,anchor,anchor
matplotlib.pyplot.arrow,animated,Set the artist 's animation state .
matplotlib.pyplot.arrow,antialiased,Set whether to use antialiased rendering
matplotlib.pyplot.arrow,aspect,aspect
matplotlib.pyplot.arrow,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.arrow,capstyle,Set the patch capstyle
matplotlib.pyplot.arrow,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.arrow,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.arrow,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.arrow,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.arrow,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.arrow,color,Set both the edgecolor and the facecolor .
matplotlib.pyplot.arrow,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.arrow,contains,Replace the contains test used by this artist .
matplotlib.pyplot.arrow,cursor_props,Set the cursor property as
matplotlib.pyplot.arrow,dx,"Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) .|||Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) . Uses FancyArrow patch to construct the arrow ."
matplotlib.pyplot.arrow,dy,"Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) .|||Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) . Uses FancyArrow patch to construct the arrow ."
matplotlib.pyplot.arrow,edgecolor,Set the patch edge color
matplotlib.pyplot.arrow,facecolor,Set the patch face color
matplotlib.pyplot.arrow,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.arrow,fill,Set whether to fill the patch
matplotlib.pyplot.arrow,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.arrow,hatch,Set the hatching pattern
matplotlib.pyplot.arrow,joinstyle,Set the patch joinstyle
matplotlib.pyplot.arrow,label,Set the label to s for auto legend .
matplotlib.pyplot.arrow,linestyle,Set the patch linestyle
matplotlib.pyplot.arrow,linewidth,Set the patch linewidth in points
matplotlib.pyplot.arrow,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.arrow,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.arrow,position,Set the axes position with
matplotlib.pyplot.arrow,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.arrow,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.arrow,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.arrow,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.arrow,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.arrow,snap,Sets the snap setting which may be
matplotlib.pyplot.arrow,title,Set a title for the axes .
matplotlib.pyplot.arrow,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.arrow,url,Sets the url for the artist
matplotlib.pyplot.arrow,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.arrow,visible,Set the artist 's visiblity .
matplotlib.pyplot.arrow,x,"Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) .|||Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) . Uses FancyArrow patch to construct the arrow ."
matplotlib.pyplot.arrow,xlabel,Set the label for the xaxis .
matplotlib.pyplot.arrow,xlim,Set the data limits for the xaxis
matplotlib.pyplot.arrow,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.arrow,xscale,Set the scaling of the x-axis
matplotlib.pyplot.arrow,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.arrow,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.arrow,y,"Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) .|||Draws arrow on specified axis from ( x , y ) to ( x + dx , y + dy ) . Uses FancyArrow patch to construct the arrow ."
matplotlib.pyplot.arrow,ylabel,Set the label for the yaxis
matplotlib.pyplot.arrow,ylim,Set the data limits for the yaxis
matplotlib.pyplot.arrow,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.arrow,yscale,Set the scaling of the y-axis
matplotlib.pyplot.arrow,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.arrow,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.arrow,zorder,Set the zorder for the artist .
matplotlib.pyplot.axes,rect,The axes is added at position rect specified by :
matplotlib.pyplot.axhline,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.axhline,agg_filter,set agg_filter fuction .
matplotlib.pyplot.axhline,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.axhline,anchor,anchor
matplotlib.pyplot.axhline,animated,Set the artist 's animation state .
matplotlib.pyplot.axhline,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.axhline,aspect,aspect
matplotlib.pyplot.axhline,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.axhline,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.axhline,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.axhline,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.axhline,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.axhline,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.axhline,color,Set the color of the line
matplotlib.pyplot.axhline,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.axhline,contains,Replace the contains test used by this artist .
matplotlib.pyplot.axhline,cursor_props,Set the cursor property as
matplotlib.pyplot.axhline,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.axhline,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.axhline,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.axhline,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.axhline,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.axhline,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.axhline,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.axhline,hatch,Set the hatching pattern
matplotlib.pyplot.axhline,label,Set the label to s for auto legend .
matplotlib.pyplot.axhline,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.axhline,linewidth,Set the line width in points
matplotlib.pyplot.axhline,marker,Set the line marker
matplotlib.pyplot.axhline,markeredgecolor,Set the marker edge color
matplotlib.pyplot.axhline,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.axhline,markerfacecolor,Set the marker face color .
matplotlib.pyplot.axhline,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.axhline,markersize,Set the marker size in points
matplotlib.pyplot.axhline,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.axhline,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.axhline,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.axhline,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.axhline,position,Set the axes position with
matplotlib.pyplot.axhline,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.axhline,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.axhline,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.axhline,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.axhline,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.axhline,snap,Sets the snap setting which may be
matplotlib.pyplot.axhline,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.axhline,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.axhline,title,Set a title for the axes .
matplotlib.pyplot.axhline,transform,set the Transformation instance used by this artist
matplotlib.pyplot.axhline,url,Sets the url for the artist
matplotlib.pyplot.axhline,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.axhline,visible,Set the artist 's visiblity .
matplotlib.pyplot.axhline,xdata,Set the data np.array for x
matplotlib.pyplot.axhline,xlabel,Set the label for the xaxis .
matplotlib.pyplot.axhline,xlim,Set the data limits for the xaxis
matplotlib.pyplot.axhline,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.axhline,xmax,"Should be between 0 and 1 , 0 being the far left of the plot , 1 the far right of the plot ."
matplotlib.pyplot.axhline,xmin,"Should be between 0 and 1 , 0 being the far left of the plot , 1 the far right of the plot ."
matplotlib.pyplot.axhline,xscale,Set the scaling of the x-axis
matplotlib.pyplot.axhline,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.axhline,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.axhline,y,y position in data coordinates of the horizontal line .
matplotlib.pyplot.axhline,ydata,Set the data np.array for y
matplotlib.pyplot.axhline,ylabel,Set the label for the yaxis
matplotlib.pyplot.axhline,ylim,Set the data limits for the yaxis
matplotlib.pyplot.axhline,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.axhline,yscale,Set the scaling of the y-axis
matplotlib.pyplot.axhline,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.axhline,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.axhline,zorder,Set the zorder for the artist .
matplotlib.pyplot.axhspan,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.axhspan,agg_filter,set agg_filter fuction .
matplotlib.pyplot.axhspan,alpha,Set the alpha tranparency of the patch .
matplotlib.pyplot.axhspan,anchor,anchor
matplotlib.pyplot.axhspan,animated,Set the artist 's animation state .
matplotlib.pyplot.axhspan,antialiased,Set whether to use antialiased rendering
matplotlib.pyplot.axhspan,aspect,aspect
matplotlib.pyplot.axhspan,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.axhspan,capstyle,Set the patch capstyle
matplotlib.pyplot.axhspan,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.axhspan,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.axhspan,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.axhspan,closed,"Set if the polygon is closed|||If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.axhspan,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.axhspan,color,Set both the edgecolor and the facecolor .
matplotlib.pyplot.axhspan,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.axhspan,contains,Replace the contains test used by this artist .
matplotlib.pyplot.axhspan,cursor_props,Set the cursor property as
matplotlib.pyplot.axhspan,edgecolor,Set the patch edge color
matplotlib.pyplot.axhspan,facecolor,Set the patch face color
matplotlib.pyplot.axhspan,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.axhspan,fill,Set whether to fill the patch
matplotlib.pyplot.axhspan,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.axhspan,hatch,Set the hatching pattern
matplotlib.pyplot.axhspan,joinstyle,Set the patch joinstyle
matplotlib.pyplot.axhspan,label,Set the label to s for auto legend .
matplotlib.pyplot.axhspan,linestyle,Set the patch linestyle
matplotlib.pyplot.axhspan,linewidth,Set the patch linewidth in points
matplotlib.pyplot.axhspan,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.axhspan,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.axhspan,position,Set the axes position with
matplotlib.pyplot.axhspan,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.axhspan,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.axhspan,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.axhspan,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.axhspan,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.axhspan,snap,Sets the snap setting which may be
matplotlib.pyplot.axhspan,title,Set a title for the axes .
matplotlib.pyplot.axhspan,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.axhspan,url,Sets the url for the artist
matplotlib.pyplot.axhspan,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.axhspan,visible,Set the artist 's visiblity .
matplotlib.pyplot.axhspan,x,y coords are in data units and x coords are in axes ( relative 0-1 ) units .
matplotlib.pyplot.axhspan,xlabel,Set the label for the xaxis .
matplotlib.pyplot.axhspan,xlim,Set the data limits for the xaxis
matplotlib.pyplot.axhspan,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.axhspan,xmax,"Draw a horizontal span ( rectangle ) from ymin to ymax . With the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . That is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .|||Draw a horizontal span ( rectangle ) from ymin to ymax ."
matplotlib.pyplot.axhspan,xmin,"Draw a horizontal span ( rectangle ) from ymin to ymax . With the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . That is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .|||Draw a horizontal span ( rectangle ) from ymin to ymax ."
matplotlib.pyplot.axhspan,xscale,Set the scaling of the x-axis
matplotlib.pyplot.axhspan,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.axhspan,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.axhspan,xy,Set the vertices of the polygon
matplotlib.pyplot.axhspan,y,"Draw a horizontal span ( rectangle ) from ymin to ymax . With the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . That is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .|||Draw a horizontal span ( rectangle ) from ymin to ymax .|||y coords are in data units and x coords are in axes ( relative 0-1 ) units ."
matplotlib.pyplot.axhspan,ylabel,Set the label for the yaxis
matplotlib.pyplot.axhspan,ylim,Set the data limits for the yaxis
matplotlib.pyplot.axhspan,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.axhspan,ymax,"Draw a horizontal span ( rectangle ) from ymin to ymax . With the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . That is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .|||Draw a horizontal span ( rectangle ) from ymin to ymax ."
matplotlib.pyplot.axhspan,ymin,"Draw a horizontal span ( rectangle ) from ymin to ymax . With the default values of xmin = 0 and xmax = 1 , this always spans the xrange , regardless of the xlim settings , even if you change them , e.g. , with the set_xlim ( ) command . That is , the horizontal extent is in axes coords : 0=left , 0.5=middle , 1.0=right but the y location is in data coordinates .|||Draw a horizontal span ( rectangle ) from ymin to ymax ."
matplotlib.pyplot.axhspan,yscale,Set the scaling of the y-axis
matplotlib.pyplot.axhspan,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.axhspan,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.axhspan,zorder,Set the zorder for the artist .
matplotlib.pyplot.axis,x,"changes limits of x or y axis so that equal increments of x and y have the same length ; a circle is circular . :|||changes the limit ranges ( xmax - xmin ) and ( ymax - ymin ) of the x and y axes to be the same , and have the same scaling , resulting in a square plot .|||changes limits of x or y axis so that equal increments of x|||changes x and y axis limits such that all data is shown . If all data is already shown , it will move it to the center of the figure without modifying ( xmax - xmin ) or ( ymax - ymin ) . Note this is slightly different than in MATLAB . :|||changes x and y axis limits such that all data is shown ."
matplotlib.pyplot.axis,xmax,"if len(*v)==0 , you can pass in xmin , xmax , ymin , ymax as kwargs selectively to alter just those limits without changing the others .|||changes the limit ranges ( xmax - xmin ) and ( ymax - ymin ) of the x and y axes to be the same , and have the same scaling , resulting in a square plot .|||changes x and y axis limits such that all data is shown .|||changes x and y axis limits such that all data is shown . If all data is already shown , it will move it to the center of the figure without modifying ( xmax - xmin ) or ( ymax - ymin ) . Note this is slightly different than in MATLAB . :|||if len(*v)==0 , you can pass in xmin , xmax , ymin , ymax"
matplotlib.pyplot.axis,xmin,"if len(*v)==0 , you can pass in xmin , xmax , ymin , ymax as kwargs selectively to alter just those limits without changing the others .|||changes the limit ranges ( xmax - xmin ) and ( ymax - ymin ) of the x and y axes to be the same , and have the same scaling , resulting in a square plot .|||changes x and y axis limits such that all data is shown .|||changes x and y axis limits such that all data is shown . If all data is already shown , it will move it to the center of the figure without modifying ( xmax - xmin ) or ( ymax - ymin ) . Note this is slightly different than in MATLAB . :|||if len(*v)==0 , you can pass in xmin , xmax , ymin , ymax"
matplotlib.pyplot.axis,y,"changes limits of x or y axis so that equal increments of x and y have the same length ; a circle is circular . :|||changes the limit ranges ( xmax - xmin ) and ( ymax - ymin ) of the x and y axes to be the same , and have the same scaling , resulting in a square plot .|||changes limits of x or y axis so that equal increments of x|||changes x and y axis limits such that all data is shown . If all data is already shown , it will move it to the center of the figure without modifying ( xmax - xmin ) or ( ymax - ymin ) . Note this is slightly different than in MATLAB . :|||changes x and y axis limits such that all data is shown ."
matplotlib.pyplot.axis,ymax,"if len(*v)==0 , you can pass in xmin , xmax , ymin , ymax as kwargs selectively to alter just those limits without changing the others .|||changes the limit ranges ( xmax - xmin ) and ( ymax - ymin ) of the x and y axes to be the same , and have the same scaling , resulting in a square plot .|||changes x and y axis limits such that all data is shown .|||changes x and y axis limits such that all data is shown . If all data is already shown , it will move it to the center of the figure without modifying ( xmax - xmin ) or ( ymax - ymin ) . Note this is slightly different than in MATLAB . :|||if len(*v)==0 , you can pass in xmin , xmax , ymin , ymax"
matplotlib.pyplot.axis,ymin,"if len(*v)==0 , you can pass in xmin , xmax , ymin , ymax as kwargs selectively to alter just those limits without changing the others .|||changes the limit ranges ( xmax - xmin ) and ( ymax - ymin ) of the x and y axes to be the same , and have the same scaling , resulting in a square plot .|||changes x and y axis limits such that all data is shown .|||changes x and y axis limits such that all data is shown . If all data is already shown , it will move it to the center of the figure without modifying ( xmax - xmin ) or ( ymax - ymin ) . Note this is slightly different than in MATLAB . :|||if len(*v)==0 , you can pass in xmin , xmax , ymin , ymax"
matplotlib.pyplot.axvline,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.axvline,agg_filter,set agg_filter fuction .
matplotlib.pyplot.axvline,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.axvline,anchor,anchor
matplotlib.pyplot.axvline,animated,Set the artist 's animation state .
matplotlib.pyplot.axvline,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.axvline,aspect,aspect
matplotlib.pyplot.axvline,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.axvline,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.axvline,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.axvline,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.axvline,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.axvline,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.axvline,color,Set the color of the line
matplotlib.pyplot.axvline,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.axvline,contains,Replace the contains test used by this artist .
matplotlib.pyplot.axvline,cursor_props,Set the cursor property as
matplotlib.pyplot.axvline,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.axvline,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.axvline,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.axvline,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.axvline,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.axvline,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.axvline,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.axvline,hatch,Set the hatching pattern
matplotlib.pyplot.axvline,label,Set the label to s for auto legend .
matplotlib.pyplot.axvline,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.axvline,linewidth,Set the line width in points
matplotlib.pyplot.axvline,marker,Set the line marker
matplotlib.pyplot.axvline,markeredgecolor,Set the marker edge color
matplotlib.pyplot.axvline,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.axvline,markerfacecolor,Set the marker face color .
matplotlib.pyplot.axvline,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.axvline,markersize,Set the marker size in points
matplotlib.pyplot.axvline,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.axvline,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.axvline,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.axvline,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.axvline,position,Set the axes position with
matplotlib.pyplot.axvline,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.axvline,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.axvline,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.axvline,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.axvline,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.axvline,snap,Sets the snap setting which may be
matplotlib.pyplot.axvline,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.axvline,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.axvline,title,Set a title for the axes .
matplotlib.pyplot.axvline,transform,set the Transformation instance used by this artist
matplotlib.pyplot.axvline,url,Sets the url for the artist
matplotlib.pyplot.axvline,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.axvline,visible,Set the artist 's visiblity .
matplotlib.pyplot.axvline,x,x position in data coordinates of the vertical line .
matplotlib.pyplot.axvline,xdata,Set the data np.array for x
matplotlib.pyplot.axvline,xlabel,Set the label for the xaxis .
matplotlib.pyplot.axvline,xlim,Set the data limits for the xaxis
matplotlib.pyplot.axvline,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.axvline,xscale,Set the scaling of the x-axis
matplotlib.pyplot.axvline,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.axvline,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.axvline,ydata,Set the data np.array for y
matplotlib.pyplot.axvline,ylabel,Set the label for the yaxis
matplotlib.pyplot.axvline,ylim,Set the data limits for the yaxis
matplotlib.pyplot.axvline,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.axvline,ymax,"Should be between 0 and 1 , 0 being the bottom of the plot , 1 the top of the plot ."
matplotlib.pyplot.axvline,ymin,"Should be between 0 and 1 , 0 being the bottom of the plot , 1 the top of the plot ."
matplotlib.pyplot.axvline,yscale,Set the scaling of the y-axis
matplotlib.pyplot.axvline,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.axvline,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.axvline,zorder,Set the zorder for the artist .
matplotlib.pyplot.axvspan,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.axvspan,agg_filter,set agg_filter fuction .
matplotlib.pyplot.axvspan,alpha,Set the alpha tranparency of the patch .
matplotlib.pyplot.axvspan,anchor,anchor
matplotlib.pyplot.axvspan,animated,Set the artist 's animation state .
matplotlib.pyplot.axvspan,antialiased,Set whether to use antialiased rendering
matplotlib.pyplot.axvspan,aspect,aspect
matplotlib.pyplot.axvspan,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.axvspan,capstyle,Set the patch capstyle
matplotlib.pyplot.axvspan,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.axvspan,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.axvspan,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.axvspan,closed,"Set if the polygon is closed|||If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.axvspan,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.axvspan,color,Set both the edgecolor and the facecolor .
matplotlib.pyplot.axvspan,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.axvspan,contains,Replace the contains test used by this artist .
matplotlib.pyplot.axvspan,cursor_props,Set the cursor property as
matplotlib.pyplot.axvspan,edgecolor,Set the patch edge color
matplotlib.pyplot.axvspan,facecolor,Set the patch face color
matplotlib.pyplot.axvspan,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.axvspan,fill,Set whether to fill the patch
matplotlib.pyplot.axvspan,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.axvspan,hatch,Set the hatching pattern
matplotlib.pyplot.axvspan,joinstyle,Set the patch joinstyle
matplotlib.pyplot.axvspan,label,Set the label to s for auto legend .
matplotlib.pyplot.axvspan,linestyle,Set the patch linestyle
matplotlib.pyplot.axvspan,linewidth,Set the patch linewidth in points
matplotlib.pyplot.axvspan,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.axvspan,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.axvspan,position,Set the axes position with
matplotlib.pyplot.axvspan,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.axvspan,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.axvspan,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.axvspan,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.axvspan,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.axvspan,snap,Sets the snap setting which may be
matplotlib.pyplot.axvspan,title,Set a title for the axes .
matplotlib.pyplot.axvspan,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.axvspan,url,Sets the url for the artist
matplotlib.pyplot.axvspan,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.axvspan,visible,Set the artist 's visiblity .
matplotlib.pyplot.axvspan,x,x coords are in data units and y coords are in axes ( relative 0-1 ) units .
matplotlib.pyplot.axvspan,xlabel,Set the label for the xaxis .
matplotlib.pyplot.axvspan,xlim,Set the data limits for the xaxis
matplotlib.pyplot.axvspan,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.axvspan,xmax,"Draw a vertical span ( rectangle ) from xmin to xmax .|||Draw a vertical span ( rectangle ) from xmin to xmax . With the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . That is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates ."
matplotlib.pyplot.axvspan,xmin,"Draw a vertical span ( rectangle ) from xmin to xmax .|||Draw a vertical span ( rectangle ) from xmin to xmax . With the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . That is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates ."
matplotlib.pyplot.axvspan,xscale,Set the scaling of the x-axis
matplotlib.pyplot.axvspan,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.axvspan,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.axvspan,xy,Set the vertices of the polygon
matplotlib.pyplot.axvspan,y,"x coords are in data units and y coords are in axes ( relative 0-1 ) units .|||Draw a vertical span ( rectangle ) from xmin to xmax .|||Draw a vertical span ( rectangle ) from xmin to xmax . With the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . That is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates ."
matplotlib.pyplot.axvspan,ylabel,Set the label for the yaxis
matplotlib.pyplot.axvspan,ylim,Set the data limits for the yaxis
matplotlib.pyplot.axvspan,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.axvspan,ymax,"Draw a vertical span ( rectangle ) from xmin to xmax .|||Draw a vertical span ( rectangle ) from xmin to xmax . With the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . That is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates ."
matplotlib.pyplot.axvspan,ymin,"Draw a vertical span ( rectangle ) from xmin to xmax .|||Draw a vertical span ( rectangle ) from xmin to xmax . With the default values of ymin = 0 and ymax = 1 , this always spans the yrange , regardless of the ylim settings , even if you change them , e.g. , with the set_ylim ( ) command . That is , the vertical extent is in axes coords : 0=bottom , 0.5=middle , 1.0=top but the y location is in data coordinates ."
matplotlib.pyplot.axvspan,yscale,Set the scaling of the y-axis
matplotlib.pyplot.axvspan,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.axvspan,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.axvspan,zorder,Set the zorder for the artist .
matplotlib.pyplot.bar,align,"If ' edge ' , aligns bars by their left edges ( for vertical bars ) and by their bottom edges ( for horizontal bars ) . If ' center ' , interpret the left argument as the coordinates of the centers of the bars . To align on the align bars on the right edge pass a negative width .|||If ' edge ' , aligns bars by their left edges ( for vertical bars ) and by their bottom edges ( for horizontal bars ) ."
matplotlib.pyplot.bar,bottom,the y coordinate(s ) of the bars default : None
matplotlib.pyplot.bar,capsize,"determines the length in points of the error bar caps default : None , which will take the value from the errorbar.capsize rcParam ."
matplotlib.pyplot.bar,color,the colors of the bar faces
matplotlib.pyplot.bar,ecolor,specifies the color of errorbar(s ) default : None
matplotlib.pyplot.bar,edgecolor,the colors of the bar edges
matplotlib.pyplot.bar,error_kw,dictionary of kwargs to be passed to errorbar method . ecolor and capsize may be specified here rather than as independent kwargs .|||dictionary of kwargs to be passed to errorbar method .
matplotlib.pyplot.bar,height,the heights of the bars
matplotlib.pyplot.bar,left,the x coordinates of the left sides of the bars
matplotlib.pyplot.bar,linewidth,"width of bar edge(s ) . If None , use default linewidth ; If 0 , do n't draw edges . default : None|||width of bar edge(s ) ."
matplotlib.pyplot.bar,log,"If true , sets the axis to be log scale . default : False|||If true , sets the axis to be log scale ."
matplotlib.pyplot.bar,orientation,The orientation of the bars .
matplotlib.pyplot.bar,tick_label,the tick labels of the bars default : None
matplotlib.pyplot.bar,width,the width(s ) of the bars default : 0.8
matplotlib.pyplot.bar,xerr,"if not None , will be used to generate errorbar(s ) on the bar chart default : None"
matplotlib.pyplot.bar,yerr,"if not None , will be used to generate errorbar(s ) on the bar chart default : None"
matplotlib.pyplot.barbs,C,"U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.pyplot.barbs,U,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.pyplot.barbs,V,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.pyplot.barbs,X,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.pyplot.barbs,Y,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.pyplot.barbs,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.barbs,agg_filter,set agg_filter fuction .
matplotlib.pyplot.barbs,alpha,Set the alpha tranparencies of the collection .
matplotlib.pyplot.barbs,anchor,anchor
matplotlib.pyplot.barbs,animated,Set the artist 's animation state .
matplotlib.pyplot.barbs,antialiased,Set the antialiasing state for rendering .
matplotlib.pyplot.barbs,array,Set the image array from numpy array A
matplotlib.pyplot.barbs,aspect,aspect
matplotlib.pyplot.barbs,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.barbs,barb_increments,A dictionary of increments specifying values to associate with different parts of the barb .|||A dictionary of increments specifying values to associate with different parts of the barb . Only those values one wishes to override need to be included . ' half ' - half barbs ( Default is 5 ) ' full ' - full barbs ( Default is 10 ) ' flag ' - flags ( default is 50 )
matplotlib.pyplot.barbs,barbcolor,"Specifies the color all parts of the barb except any flags . This parameter is analagous to the edgecolor parameter for polygons , which can be used instead . However this parameter will override facecolor .|||Specifies the color all parts of the barb except any flags ."
matplotlib.pyplot.barbs,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.pyplot.barbs,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.barbs,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.barbs,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.barbs,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.barbs,cmap,set the colormap for luminance data
matplotlib.pyplot.barbs,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.barbs,color,Set both the edgecolor and the facecolor .
matplotlib.pyplot.barbs,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.barbs,contains,Replace the contains test used by this artist .
matplotlib.pyplot.barbs,cursor_props,Set the cursor property as
matplotlib.pyplot.barbs,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.pyplot.barbs,facecolor,Set the facecolor(s ) of the collection .
matplotlib.pyplot.barbs,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.barbs,fill_empty,"A flag on whether the empty barbs ( circles ) that are drawn should be filled with the flag color . If they are not filled , they will be drawn such that no color is applied to the center . Default is False|||A flag on whether the empty barbs ( circles ) that are drawn should be filled with the flag color ."
matplotlib.pyplot.barbs,flagcolor,"Specifies the color of any flags on the barb .|||Specifies the color of any flags on the barb . This parameter is analagous to the facecolor parameter for polygons , which can be used instead . However this parameter will override facecolor . If this is not set ( and C has not either ) then flagcolor will be set to match barbcolor so that the barb has a uniform color . If C has been set , flagcolor has no effect ."
matplotlib.pyplot.barbs,flip_barb,Either a single boolean flag or an array of booleans .|||Either a single boolean flag or an array of booleans . Single boolean indicates whether the lines and flags should point opposite to normal for all barbs . An array ( which should be the same size as the other data arrays ) indicates whether to flip for each individual barb . Normal behavior is for the barbs and lines to point right ( comes from wind barbs having these features point towards low pressure in the Northern Hemisphere . ) Default is False
matplotlib.pyplot.barbs,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.barbs,hatch,Set the hatching pattern
matplotlib.pyplot.barbs,label,Set the label to s for auto legend .
matplotlib.pyplot.barbs,length,Length of the barb in points ; the other parts of the barb are scaled against this .|||Length of the barb in points ; the other parts of the barb are scaled against this . Default is 9
matplotlib.pyplot.barbs,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.pyplot.barbs,linewidth,Set the linewidth(s ) for the collection .
matplotlib.pyplot.barbs,norm,set the normalization instance
matplotlib.pyplot.barbs,offset_position,Set how offsets are applied .
matplotlib.pyplot.barbs,offsets,Set the offsets for the collection .
matplotlib.pyplot.barbs,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.barbs,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.barbs,pivot,"The part of the arrow that is at the grid point ; the arrow rotates about this point , hence the name pivot . Default is ' tip '|||The part of the arrow that is at the grid point ; the arrow rotates about this point , hence the name pivot ."
matplotlib.pyplot.barbs,position,Set the axes position with
matplotlib.pyplot.barbs,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.barbs,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.barbs,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.barbs,rounding,"A flag to indicate whether the vector magnitude should be rounded when allocating barb components .|||A flag to indicate whether the vector magnitude should be rounded when allocating barb components . If True , the magnitude is rounded to the nearest multiple of the half-barb increment . If False , the magnitude is simply truncated to the next lowest multiple . Default is True"
matplotlib.pyplot.barbs,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.barbs,sizes,"A dictionary of coefficients specifying the ratio of a given feature to the length of the barb .|||A dictionary of coefficients specifying the ratio of a given feature to the length of the barb . Only those values one wishes to override need to be included . These features include : ' spacing ' - space between features ( flags , full/half barbs ) ' height ' - height ( distance from shaft to top ) of a flag or full barb ' width ' - width of a flag , twice the width of a full barb ' emptybarb ' - radius of the circle used for low magnitudes|||Set the sizes of each member of the collection ."
matplotlib.pyplot.barbs,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.barbs,snap,Sets the snap setting which may be
matplotlib.pyplot.barbs,title,Set a title for the axes .
matplotlib.pyplot.barbs,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.barbs,url,Sets the url for the artist
matplotlib.pyplot.barbs,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.barbs,visible,Set the artist 's visiblity .
matplotlib.pyplot.barbs,xlabel,Set the label for the xaxis .
matplotlib.pyplot.barbs,xlim,Set the data limits for the xaxis
matplotlib.pyplot.barbs,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.barbs,xscale,Set the scaling of the x-axis
matplotlib.pyplot.barbs,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.barbs,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.barbs,ylabel,Set the label for the yaxis
matplotlib.pyplot.barbs,ylim,Set the data limits for the yaxis
matplotlib.pyplot.barbs,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.barbs,yscale,Set the scaling of the y-axis
matplotlib.pyplot.barbs,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.barbs,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.barbs,zorder,Set the zorder for the artist .
matplotlib.pyplot.barh,False,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||if True , will plot the errorbars above the plot symbols .|||These arguments can be used to indicate that a value gives only upper/lower limits .|||if True , will plot the errorbars above the plot symbols . Default is below ."
matplotlib.pyplot.barh,None,"A matplotlib color arg which gives the color the errorbar lines ; if None , use the color of the line connecting the markers ."
matplotlib.pyplot.barh,True,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||if True , will plot the errorbars above the plot symbols .|||These arguments can be used to indicate that a value gives only upper/lower limits .|||if True , will plot the errorbars above the plot symbols . Default is below ."
matplotlib.pyplot.barh,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.barh,agg_filter,set agg_filter fuction .
matplotlib.pyplot.barh,align,"If edge , aligns bars by their left edges ( for vertical bars ) and by their bottom edges ( for horizontal bars ) .|||If edge , aligns bars by their left edges ( for vertical bars ) and by their bottom edges ( for horizontal bars ) . If center , interpret the left argument as the coordinates of the centers of the bars ."
matplotlib.pyplot.barh,alpha,Set the alpha tranparency of the patch .
matplotlib.pyplot.barh,anchor,anchor
matplotlib.pyplot.barh,animated,Set the artist 's animation state .
matplotlib.pyplot.barh,antialiased,Set whether to use antialiased rendering
matplotlib.pyplot.barh,aspect,aspect
matplotlib.pyplot.barh,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.barh,barlinecols,"Returns ( plotline , caplines , barlinecols ) :"
matplotlib.pyplot.barh,barsabove,"if True , will plot the errorbars above the plot symbols . Default is below .|||if True , will plot the errorbars above the plot symbols ."
matplotlib.pyplot.barh,bottom,the y coordinate(s ) of the bars
matplotlib.pyplot.barh,caplines,"Returns ( plotline , caplines , barlinecols ) :"
matplotlib.pyplot.barh,capsize,"The length of the error bar caps in points ; if None , it will take the value from errorbar.capsize rcParam .|||determines the length in points of the error bar caps default : None , which will take the value from the errorbar.capsize rcParam ."
matplotlib.pyplot.barh,capstyle,Set the patch capstyle
matplotlib.pyplot.barh,capthick,"An alias kwarg to markeredgewidth ( a.k.a. - mew ) . This setting is a more sensible name for the property that controls the thickness of the error bar cap in points . For backwards compatibility , if mew or markeredgewidth are given , then they will over-ride capthick . This may change in future releases .|||An alias kwarg to markeredgewidth ( a.k.a. - mew ) ."
matplotlib.pyplot.barh,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.barh,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.barh,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.barh,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.barh,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.barh,color,the colors of the bars|||Set both the edgecolor and the facecolor .
matplotlib.pyplot.barh,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.barh,contains,Replace the contains test used by this artist .
matplotlib.pyplot.barh,cursor_props,Set the cursor property as
matplotlib.pyplot.barh,ecolor,"specifies the color of errorbar(s )|||A matplotlib color arg which gives the color the errorbar lines ; if None , use the color of the line connecting the markers ."
matplotlib.pyplot.barh,edgecolor,Set the patch edge color|||the colors of the bar edges
matplotlib.pyplot.barh,elinewidth,"The linewidth of the errorbar lines . If None , use the linewidth .|||The linewidth of the errorbar lines ."
matplotlib.pyplot.barh,error_kw :,dictionary of kwargs to be passed to errorbar method . ecolor and capsize may be specified here rather than as independent kwargs .|||dictionary of kwargs to be passed to errorbar method .
matplotlib.pyplot.barh,errorevery,"subsamples the errorbars .|||subsamples the errorbars . e.g. , if errorevery=5 , errorbars for every 5-th datapoint will be plotted . The data plot itself still shows all data points ."
matplotlib.pyplot.barh,facecolor,Set the patch face color
matplotlib.pyplot.barh,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.barh,fill,Set whether to fill the patch
matplotlib.pyplot.barh,fmt,"The plot format symbol . If fmt is ' none ' ( case-insensitive ) , only the errorbars are plotted . This is used for adding errorbars to a bar plot , for example . Default is ' ' , an empty plot format string ; properties are then identical to the defaults for plot ( ) .|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||The plot format symbol ."
matplotlib.pyplot.barh,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.barh,hatch,Set the hatching pattern
matplotlib.pyplot.barh,height,the heights of the bars
matplotlib.pyplot.barh,joinstyle,Set the patch joinstyle
matplotlib.pyplot.barh,label,Set the label to s for auto legend .
matplotlib.pyplot.barh,left,the x coordinates of the left sides of the bars
matplotlib.pyplot.barh,linestyle,Set the patch linestyle
matplotlib.pyplot.barh,linewidth,"width of bar edge(s ) .|||width of bar edge(s ) . If None , use default linewidth ; If 0 , do n't draw edges .|||Set the patch linewidth in points"
matplotlib.pyplot.barh,log,"If true , sets the axis to be log scale"
matplotlib.pyplot.barh,lolims,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.pyplot.barh,markeredgecolor,"Set the marker edge color|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.barh,markeredgewith,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.barh,markerfacecolor,"Set the marker face color .|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.barh,markersize,"Set the marker size in points|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.barh,mec,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.barh,mew,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.barh,mfc,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.barh,ms,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.barh,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.barh,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.barh,plotline,"Returns ( plotline , caplines , barlinecols ) :"
matplotlib.pyplot.barh,position,Set the axes position with
matplotlib.pyplot.barh,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.barh,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.barh,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.barh,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.barh,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.barh,snap,Sets the snap setting which may be
matplotlib.pyplot.barh,tick_label,the tick labels of the bars
matplotlib.pyplot.barh,title,Set a title for the axes .
matplotlib.pyplot.barh,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.barh,uplims,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.pyplot.barh,url,Sets the url for the artist
matplotlib.pyplot.barh,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.barh,visible,Set the artist 's visiblity .
matplotlib.pyplot.barh,width,the width(s ) of the bars
matplotlib.pyplot.barh,x,"x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||Plot x versus y with error deltas in yerr and xerr . Vertical errorbars are plotted if yerr is not None . Horizontal errorbars are plotted if xerr is not None .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||Plot x versus y with error deltas in yerr and xerr .|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted ."
matplotlib.pyplot.barh,xerr,"If a scalar number , len(N ) array-like object , or an Nx1 array-like object , errorbars are drawn at + /-value relative to the data . If a sequence of shape 2xN , errorbars are drawn at - row1 and + row2 relative to the data .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y .|||Plot x versus y with error deltas in yerr and xerr . Vertical errorbars are plotted if yerr is not None . Horizontal errorbars are plotted if xerr is not None .|||If a scalar number , len(N ) array-like object , or an Nx1 array-like object , errorbars are drawn at + /-value relative to the data .|||Plot x versus y with error deltas in yerr and xerr .|||if not None , will be used to generate errorbar(s ) on the bar chart"
matplotlib.pyplot.barh,xlabel,Set the label for the xaxis .
matplotlib.pyplot.barh,xlim,Set the data limits for the xaxis
matplotlib.pyplot.barh,xlolims,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.pyplot.barh,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.barh,xscale,Set the scaling of the x-axis
matplotlib.pyplot.barh,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.barh,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.barh,xuplims,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.pyplot.barh,y,"x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||Plot x versus y with error deltas in yerr and xerr . Vertical errorbars are plotted if yerr is not None . Horizontal errorbars are plotted if xerr is not None .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||Plot x versus y with error deltas in yerr and xerr .|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted ."
matplotlib.pyplot.barh,yerr,"If a scalar number , len(N ) array-like object , or an Nx1 array-like object , errorbars are drawn at + /-value relative to the data . If a sequence of shape 2xN , errorbars are drawn at - row1 and + row2 relative to the data .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y .|||Plot x versus y with error deltas in yerr and xerr . Vertical errorbars are plotted if yerr is not None . Horizontal errorbars are plotted if xerr is not None .|||If a scalar number , len(N ) array-like object , or an Nx1 array-like object , errorbars are drawn at + /-value relative to the data .|||Plot x versus y with error deltas in yerr and xerr .|||if not None , will be used to generate errorbar(s ) on the bar chart"
matplotlib.pyplot.barh,ylabel,Set the label for the yaxis
matplotlib.pyplot.barh,ylim,Set the data limits for the yaxis
matplotlib.pyplot.barh,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.barh,yscale,Set the scaling of the y-axis
matplotlib.pyplot.barh,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.barh,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.barh,zorder,Set the zorder for the artist .
matplotlib.pyplot.box,on,"If on is None , toggle state .|||Turn the axes box on or off .|||Turn the axes box on or off . on may be a boolean or a string , ' on ' or ' off ' ."
matplotlib.pyplot.boxplot,bootstrap,"Specifies whether to bootstrap the confidence intervals around the median for notched boxplots . If bootstrap==None , no bootstrapping is performed , and notches are calculated using a Gaussian-based asymptotic approximation ( see McGill , R. , Tukey , J.W. , and Larsen , W.A. , 1978 , and Kendall and Stuart , 1967 ) . Otherwise , bootstrap specifies the number of times to bootstrap the median to determine it 's 95% confidence intervals . Values between 1000 and 10000 are recommended .|||Specifies whether to bootstrap the confidence intervals around the median for notched boxplots ."
matplotlib.pyplot.boxplot,boxprops,"If provided , will set the plotting style of the boxes"
matplotlib.pyplot.boxplot,capprops,"If provided , will set the plotting style of the caps"
matplotlib.pyplot.boxplot,conf_intervals,"Array or sequence whose first dimension ( or length ) is compatible with x and whose second dimension is 2 .|||Array or sequence whose first dimension ( or length ) is compatible with x and whose second dimension is 2 . When the current element of conf_intervals is not None , the notch locations computed by matplotlib are overridden ( assuming notch is True ) . When an element of conf_intervals is None , boxplot compute notches the method specified by the other kwargs ( e.g. , bootstrap ) ."
matplotlib.pyplot.boxplot,flierprops,"If provided , will set the plotting style of the fliers"
matplotlib.pyplot.boxplot,labels,Labels for each dataset . Length must be compatible with dimensions of x|||Labels for each dataset .
matplotlib.pyplot.boxplot,manage_xticks,If the function should adjust the xlim and xtick locations .
matplotlib.pyplot.boxplot,meanline,"If True ( and showmeans is True ) , will try to render the mean as a line spanning the full width of the box according to meanprops . Not recommended if shownotches is also True . Otherwise , means will be shown as points .|||If True ( and showmeans is True ) , will try to render the mean as a line spanning the full width of the box according to meanprops ."
matplotlib.pyplot.boxplot,meanprops,"If provided , will set the plotting style of the means"
matplotlib.pyplot.boxplot,medianprops,"If provided , will set the plotting style of the medians"
matplotlib.pyplot.boxplot,notch,"If False , produces a rectangular box plot .|||If False , produces a rectangular box plot . If True , will produce a notched box plot"
matplotlib.pyplot.boxplot,patch_artist,If False produces boxes with the Line2D artist If True produces boxes with the Patch artist
matplotlib.pyplot.boxplot,positions,Sets the positions of the boxes .|||Sets the positions of the boxes . The ticks and limits are automatically set to match the positions .
matplotlib.pyplot.boxplot,showbox,"If True , will toggle one the rendering of box"
matplotlib.pyplot.boxplot,showcaps,"If True , will toggle one the rendering of the caps"
matplotlib.pyplot.boxplot,showfliers,"If True , will toggle one the rendering of the fliers"
matplotlib.pyplot.boxplot,showmeans,"If True , will toggle one the rendering of the means"
matplotlib.pyplot.boxplot,sym,"The default symbol for flier points .|||The default symbol for flier points . Enter an empty string ( ' ' ) if you do n't want to show fliers . If None , then the fliers default to ' b + ' If you want more control use the flierprops kwarg ."
matplotlib.pyplot.boxplot,usermedians,"An array or sequence whose first dimension ( or length ) is compatible with x .|||An array or sequence whose first dimension ( or length ) is compatible with x . This overrides the medians computed by matplotlib for each element of usermedians that is not None . When an element of usermedians = = None , the median will be computed by matplotlib as normal ."
matplotlib.pyplot.boxplot,vert,"If True ( default ) , makes the boxes vertical .|||If True ( default ) , makes the boxes vertical . If False , makes horizontal boxes ."
matplotlib.pyplot.boxplot,whis,"As a float , determines the reach of the whiskers past the first and third quartiles ( e.g. , Q3 + whis*IQR , IQR = interquartile range , Q3-Q1 ) . Beyond the whiskers , data are considered outliers and are plotted as individual points . Set this to an unreasonably high value to force the whiskers to show the min and max values . Alternatively , set this to an ascending sequence of percentile ( e.g. , [ 5 , 95 ] ) to set the whiskers at specific percentiles of the data . Finally , whis can be the string ' range ' to force the whiskers to the min and max of the data . In the edge case that the 25th and 75th percentiles are equivalent , whis will be automatically set to ' range ' .|||As a float , determines the reach of the whiskers past the first and third quartiles ( e.g. , Q3 + whis*IQR , IQR = interquartile range , Q3-Q1 ) ."
matplotlib.pyplot.boxplot,whiskerprops,"If provided , will set the plotting style of the whiskers"
matplotlib.pyplot.boxplot,widths,"Either a scalar or a vector and sets the width of each box . The default is 0.5 , or 0.15*(distance between extreme positions ) if that is smaller .|||Either a scalar or a vector and sets the width of each box ."
matplotlib.pyplot.boxplot,x,"The input data .|||Make a box and whisker plot for each column of x or each vector in sequence x .|||Make a box and whisker plot for each column of x or each vector in sequence x . The box extends from the lower to upper quartile values of the data , with a line at the median . The whiskers extend from the box to show the range of the data . Flier points are those past the end of the whiskers ."
matplotlib.pyplot.broken_barh,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.broken_barh,agg_filter,set agg_filter fuction .
matplotlib.pyplot.broken_barh,alpha,Set the alpha tranparencies of the collection .
matplotlib.pyplot.broken_barh,anchor,anchor
matplotlib.pyplot.broken_barh,animated,Set the artist 's animation state .
matplotlib.pyplot.broken_barh,antialiased,Set the antialiasing state for rendering .
matplotlib.pyplot.broken_barh,array,Set the image array from numpy array A
matplotlib.pyplot.broken_barh,aspect,aspect
matplotlib.pyplot.broken_barh,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.broken_barh,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.pyplot.broken_barh,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.broken_barh,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.broken_barh,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.broken_barh,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.broken_barh,cmap,set the colormap for luminance data
matplotlib.pyplot.broken_barh,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.broken_barh,color,Set both the edgecolor and the facecolor .
matplotlib.pyplot.broken_barh,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.broken_barh,contains,Replace the contains test used by this artist .
matplotlib.pyplot.broken_barh,cursor_props,Set the cursor property as
matplotlib.pyplot.broken_barh,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.pyplot.broken_barh,facecolor,Set the facecolor(s ) of the collection .
matplotlib.pyplot.broken_barh,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.broken_barh,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.broken_barh,hatch,Set the hatching pattern
matplotlib.pyplot.broken_barh,label,Set the label to s for auto legend .
matplotlib.pyplot.broken_barh,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.pyplot.broken_barh,linewidth,Set the linewidth(s ) for the collection .
matplotlib.pyplot.broken_barh,norm,set the normalization instance
matplotlib.pyplot.broken_barh,offset_position,Set how offsets are applied .
matplotlib.pyplot.broken_barh,offsets,Set the offsets for the collection .
matplotlib.pyplot.broken_barh,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.broken_barh,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.broken_barh,position,Set the axes position with
matplotlib.pyplot.broken_barh,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.broken_barh,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.broken_barh,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.broken_barh,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.broken_barh,sizes,Set the sizes of each member of the collection .
matplotlib.pyplot.broken_barh,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.broken_barh,snap,Sets the snap setting which may be
matplotlib.pyplot.broken_barh,title,Set a title for the axes .
matplotlib.pyplot.broken_barh,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.broken_barh,url,Sets the url for the artist
matplotlib.pyplot.broken_barh,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.broken_barh,visible,Set the artist 's visiblity .
matplotlib.pyplot.broken_barh,xlabel,Set the label for the xaxis .
matplotlib.pyplot.broken_barh,xlim,Set the data limits for the xaxis
matplotlib.pyplot.broken_barh,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.broken_barh,xranges,A collection of horizontal bars spanning yrange with a sequence of xranges .
matplotlib.pyplot.broken_barh,xscale,Set the scaling of the x-axis
matplotlib.pyplot.broken_barh,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.broken_barh,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.broken_barh,ylabel,Set the label for the yaxis
matplotlib.pyplot.broken_barh,ylim,Set the data limits for the yaxis
matplotlib.pyplot.broken_barh,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.broken_barh,yrange,A collection of horizontal bars spanning yrange with a sequence of xranges .
matplotlib.pyplot.broken_barh,yscale,Set the scaling of the y-axis
matplotlib.pyplot.broken_barh,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.broken_barh,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.broken_barh,zorder,Set the zorder for the artist .
matplotlib.pyplot.clabel,colors,"if None , the color of each label matches the color of the corresponding contour if one string color , e.g. , colors = ' r ' or colors = ' red ' , all labels will be plotted in this color if a tuple of matplotlib color args ( string , float , rgb , etc ) , different labels will be plotted in different colors in the order specified|||if None , the color of each label matches the color of the corresponding contour"
matplotlib.pyplot.clabel,cs,"Adds labels to line contours in cs , where cs is a ContourSet object returned by contour ."
matplotlib.pyplot.clabel,fmt,"a format string for the label . Default is ' %1.3f ' Alternatively , this can be a dictionary matching contour levels with arbitrary strings to use for each contour level ( i.e. , fmt[level]=string ) , or it can be any callable , such as a Formatter instance , that returns a string when called with a numeric contour level .|||a format string for the label ."
matplotlib.pyplot.clabel,fontsize,"size in points or relative size e.g. , ' smaller ' , ' x-large '"
matplotlib.pyplot.clabel,inline,controls whether the underlying contour is removed or not . Default is True .|||controls whether the underlying contour is removed or not .
matplotlib.pyplot.clabel,inline_spacing,"space in pixels to leave on each side of label when placing inline .|||space in pixels to leave on each side of label when placing inline . Defaults to 5 . This spacing will be exact for labels at locations where the contour is straight , less so for labels on curved contours ."
matplotlib.pyplot.clabel,manual,"if True , contour labels will be placed manually using mouse clicks . Click the first button near a contour to add a label , click the second button ( or potentially both mouse buttons at once ) to finish adding labels . The third button can be used to remove the last label added , but only if labels are not inline . Alternatively , the keyboard can be used to select label locations ( enter to end label placement , delete or backspace act like the third mouse button , and any other key will select a label location ) . manual can be an iterable object of x,y tuples . Contour labels will be created as if mouse is clicked at each x,y positions .|||if True , contour labels will be placed manually using mouse clicks ."
matplotlib.pyplot.clabel,rightside_up,"if True ( default ) , label rotations will always be plus or minus 90 degrees from level ."
matplotlib.pyplot.clabel,use_clabeltext,"if True ( default is False ) , ClabelText class ( instead of matplotlib.Text ) is used to create labels . ClabelText recalculates rotation angles of texts during the drawing time , therefore this can be used if aspect of the axes changes .|||if True ( default is False ) , ClabelText class ( instead of matplotlib.Text ) is used to create labels ."
matplotlib.pyplot.clabel,v,only labels contours listed in v .
matplotlib.pyplot.clim,vmax,"If either vmin or vmax is None , the image min/max respectively will be used for color scaling ."
matplotlib.pyplot.clim,vmin,"If either vmin or vmax is None , the image min/max respectively will be used for color scaling ."
matplotlib.pyplot.close,h,"close(h ) where h is a Figure instance , closes that figure"
matplotlib.pyplot.close,name,"close(name ) where name is a string , closes figure with that label"
matplotlib.pyplot.close,num,close(num ) closes figure number num
matplotlib.pyplot.cohere,Cxy,"The return value is a tuple ( Cxy , f ) , where f are the frequencies of the coherence vector ."
matplotlib.pyplot.cohere,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.pyplot.cohere,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.cohere,agg_filter,set agg_filter fuction .
matplotlib.pyplot.cohere,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.cohere,anchor,anchor
matplotlib.pyplot.cohere,animated,Set the artist 's animation state .
matplotlib.pyplot.cohere,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.cohere,aspect,aspect
matplotlib.pyplot.cohere,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.cohere,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.cohere,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.cohere,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.cohere,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.cohere,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.cohere,color,Set the color of the line
matplotlib.pyplot.cohere,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.cohere,contains,Replace the contains test used by this artist .
matplotlib.pyplot.cohere,cursor_props,Set the cursor property as
matplotlib.pyplot.cohere,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.cohere,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.cohere,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.cohere,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.cohere,f,"The return value is a tuple ( Cxy , f ) , where f are the frequencies of the coherence vector ."
matplotlib.pyplot.cohere,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.cohere,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.cohere,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.cohere,hatch,Set the hatching pattern
matplotlib.pyplot.cohere,label,Set the label to s for auto legend .
matplotlib.pyplot.cohere,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.cohere,linewidth,Set the line width in points
matplotlib.pyplot.cohere,marker,Set the line marker
matplotlib.pyplot.cohere,markeredgecolor,Set the marker edge color
matplotlib.pyplot.cohere,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.cohere,markerfacecolor,Set the marker face color .
matplotlib.pyplot.cohere,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.cohere,markersize,Set the marker size in points
matplotlib.pyplot.cohere,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.cohere,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.cohere,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.cohere,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.cohere,position,Set the axes position with
matplotlib.pyplot.cohere,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.cohere,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.cohere,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.cohere,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.pyplot.cohere,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.cohere,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.cohere,snap,Sets the snap setting which may be
matplotlib.pyplot.cohere,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.cohere,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.cohere,title,Set a title for the axes .
matplotlib.pyplot.cohere,transform,set the Transformation instance used by this artist
matplotlib.pyplot.cohere,url,Sets the url for the artist
matplotlib.pyplot.cohere,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.cohere,visible,Set the artist 's visiblity .
matplotlib.pyplot.cohere,window,"A function or a vector of length NFFT .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.pyplot.cohere,x,Plot the coherence between x and y .|||Plot the coherence between x and y . Coherence is the normalized cross spectral density :
matplotlib.pyplot.cohere,xdata,Set the data np.array for x
matplotlib.pyplot.cohere,xlabel,Set the label for the xaxis .
matplotlib.pyplot.cohere,xlim,Set the data limits for the xaxis
matplotlib.pyplot.cohere,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.cohere,xscale,Set the scaling of the x-axis
matplotlib.pyplot.cohere,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.cohere,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.cohere,y,Plot the coherence between x and y .|||Plot the coherence between x and y . Coherence is the normalized cross spectral density :
matplotlib.pyplot.cohere,ydata,Set the data np.array for y
matplotlib.pyplot.cohere,ylabel,Set the label for the yaxis
matplotlib.pyplot.cohere,ylim,Set the data limits for the yaxis
matplotlib.pyplot.cohere,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.cohere,yscale,Set the scaling of the y-axis
matplotlib.pyplot.cohere,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.cohere,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.cohere,zorder,Set the zorder for the artist .
matplotlib.pyplot.colorbar,ax,None | parent axes object(s ) from which space for a new colorbar axes will be stolen . If a list of axes is given they will all be resized to make room for the colorbar axes .|||None | parent axes object(s ) from which space for a new colorbar axes will be stolen .
matplotlib.pyplot.colorbar,cax,None | axes object into which the colorbar will be drawn
matplotlib.pyplot.colorbar,extend,"If mappable is a ContourSet , its extend kwarg is included automatically .|||If mappable is a ContourSet , its extend"
matplotlib.pyplot.colorbar,mappable,"If mappable is a ContourSet , its extend kwarg is included automatically .|||Create a colorbar for a ScalarMappable instance , mappable .|||If mappable is a ContourSet , its extend|||the Image , ContourSet , etc. to which the colorbar applies ; this argument is mandatory for the colorbar ( ) method but optional for the colorbar ( ) function , which sets the default to the current image ."
matplotlib.pyplot.colorbar,shrink,"Note that the shrink kwarg provides a simple way to keep a vertical colorbar , for example , from being taller than the axes of the mappable to which the colorbar is attached ; but it is a manual method requiring some trial and error . If the colorbar is too tall ( or a horizontal colorbar is too wide ) use a smaller value of shrink .|||Note that the shrink kwarg provides a simple way to keep a vertical colorbar , for example , from being taller than the axes of the mappable to which the colorbar is attached ; but it is a manual method requiring some trial and error ."
matplotlib.pyplot.colorbar,use_gridspec,"False | If cax is None , a new cax is created as an instance of Axes .|||False | If cax is None , a new cax is created as an instance of Axes . If ax is an instance of Subplot and use_gridspec is True , cax is created as an instance of Subplot using the grid_spec module ."
matplotlib.pyplot.connect,func,Connect event with string s to func .|||Connect event with string s to func . The signature of func is :
matplotlib.pyplot.connect,s,Connect event with string s to func .|||Connect event with string s to func . The signature of func is :
matplotlib.pyplot.contour,False,"enable antialiasing , overriding the defaults .|||Enable/disable corner masking , which only has an effect if Z is a masked array .|||Enable/disable corner masking , which only has an effect if Z is a masked array . If False , any quad touching a masked point is masked out . If True , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . If ' legacy ' , the old contouring algorithm is used , which is equivalent to False and is deprecated , only remaining whilst the new algorithm is tested fully . If not specified , the default is taken from rcParams['contour.corner_mask ' ] , which is True unless it has been modified .|||enable antialiasing , overriding the defaults . For filled contours , the default is True . For line contours , it is taken from rcParams['lines.antialiased ' ] ."
matplotlib.pyplot.contour,N,contour up to N automatically-chosen levels .
matplotlib.pyplot.contour,None,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used .|||If linestyles is None , the default is ' solid ' unless the lines are monochrome . In that case , negative contours will take their linestyle from the matplotlibrc contour.negative_linestyle setting . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary .|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize|||If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||A cm Colormap instance or None .|||If None , the colormap specified by cmap will be used .|||A matplotlib.colors.Normalize instance for scaling data values to colors .|||Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .|||If locator is None , the default MaxNLocator is used .|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize instance , overriding the default color scaling based on levels .|||If linestyles is None , the default is ' solid ' unless the lines are monochrome ."
matplotlib.pyplot.contour,True,"enable antialiasing , overriding the defaults .|||Enable/disable corner masking , which only has an effect if Z is a masked array .|||Enable/disable corner masking , which only has an effect if Z is a masked array . If False , any quad touching a masked point is masked out . If True , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . If ' legacy ' , the old contouring algorithm is used , which is equivalent to False and is deprecated , only remaining whilst the new algorithm is tested fully . If not specified , the default is taken from rcParams['contour.corner_mask ' ] , which is True unless it has been modified .|||enable antialiasing , overriding the defaults . For filled contours , the default is True . For line contours , it is taken from rcParams['lines.antialiased ' ] ."
matplotlib.pyplot.contour,V,"fill the len(V)-1 regions between the values in V , which must be in increasing order .|||draw contour lines at the values specified in sequence V , which must be in increasing order ."
matplotlib.pyplot.contour,X,"X , Y specify the ( x , y ) coordinates of the surface|||X and Y must both be 2-D with the same shape as Z , or they must both be 1-D such that len(X ) is the number of columns in Z and len(Y ) is the number of rows in Z ."
matplotlib.pyplot.contour,Y,"X , Y specify the ( x , y ) coordinates of the surface|||X and Y must both be 2-D with the same shape as Z , or they must both be 1-D such that len(X ) is the number of columns in Z and len(Y ) is the number of rows in Z ."
matplotlib.pyplot.contour,Z,"make a contour plot of an array Z . The level values are chosen automatically .|||make a contour plot of an array Z .|||X and Y must both be 2-D with the same shape as Z , or they must both be 1-D such that len(X ) is the number of columns in Z and len(Y ) is the number of rows in Z ."
matplotlib.pyplot.contour,alpha,The alpha blending value
matplotlib.pyplot.contour,antialiased,"enable antialiasing , overriding the defaults .|||enable antialiasing , overriding the defaults . For filled contours , the default is True . For line contours , it is taken from rcParams['lines.antialiased ' ] ."
matplotlib.pyplot.contour,cmap,"A cm Colormap instance or None .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used ."
matplotlib.pyplot.contour,colors,"If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If None , the colormap specified by cmap will be used ."
matplotlib.pyplot.contour,corner_mask,"Enable/disable corner masking , which only has an effect if Z is a masked array .|||Enable/disable corner masking , which only has an effect if Z is a masked array . If False , any quad touching a masked point is masked out . If True , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . If ' legacy ' , the old contouring algorithm is used , which is equivalent to False and is deprecated , only remaining whilst the new algorithm is tested fully . If not specified , the default is taken from rcParams['contour.corner_mask ' ] , which is True unless it has been modified ."
matplotlib.pyplot.contour,extend,"Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included .|||Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included . These added ranges are then mapped to the special colormap values which default to the ends of the colormap range , but can be set via matplotlib.colors.Colormap.set_under ( ) and matplotlib.colors.Colormap.set_over ( ) methods ."
matplotlib.pyplot.contour,hatches,"A list of cross hatch patterns to use on the filled areas .|||A list of cross hatch patterns to use on the filled areas . If None , no hatching will be added to the contour . Hatching is supported in the PostScript , PDF , SVG and Agg backends only ."
matplotlib.pyplot.contour,levels,"A list of floating point numbers indicating the level curves to draw , in increasing order ; e.g. , to draw just the zero contour pass levels=[0 ]"
matplotlib.pyplot.contour,linestyles,"If linestyles is None , the default is ' solid ' unless the lines are monochrome . In that case , negative contours will take their linestyle from the matplotlibrc contour.negative_linestyle setting . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary .|||If linestyles is None , the default is ' solid ' unless the lines are monochrome ."
matplotlib.pyplot.contour,linewidths,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used ."
matplotlib.pyplot.contour,locator,"If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||If locator is None , the default MaxNLocator is used ."
matplotlib.pyplot.contour,nchunk,"If 0 , no subdivision of the domain .|||If 0 , no subdivision of the domain . Specify a positive integer to divide the domain into subdomains of nchunk by nchunk quads . Chunking reduces the maximum length of polygons generated by the contouring algorithm which reduces the rendering workload passed on to the backend and also requires slightly less RAM . It can however introduce rendering artifacts at chunk boundaries depending on the backend , the antialiased flag and value of alpha ."
matplotlib.pyplot.contour,norm,"A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||A matplotlib.colors.Normalize instance for scaling data values to colors ."
matplotlib.pyplot.contour,origin,"If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour ."
matplotlib.pyplot.contour,vmax,"If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize instance , overriding the default color scaling based on levels ."
matplotlib.pyplot.contour,vmin,"If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize instance , overriding the default color scaling based on levels ."
matplotlib.pyplot.contour,xunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.pyplot.contour,yunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.pyplot.contour,z,"There is one exception : if the lowest boundary coincides with the minimum value of the z array , then that minimum value will be included in the lowest interval ."
matplotlib.pyplot.contour,z1,"Note : contourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.pyplot.contour,z2,"Note : contourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.pyplot.contourf,False,"enable antialiasing , overriding the defaults .|||Enable/disable corner masking , which only has an effect if Z is a masked array .|||Enable/disable corner masking , which only has an effect if Z is a masked array . If False , any quad touching a masked point is masked out . If True , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . If ' legacy ' , the old contouring algorithm is used , which is equivalent to False and is deprecated , only remaining whilst the new algorithm is tested fully . If not specified , the default is taken from rcParams['contour.corner_mask ' ] , which is True unless it has been modified .|||enable antialiasing , overriding the defaults . For filled contours , the default is True . For line contours , it is taken from rcParams['lines.antialiased ' ] ."
matplotlib.pyplot.contourf,N,contour up to N automatically-chosen levels .
matplotlib.pyplot.contourf,None,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used .|||If linestyles is None , the default is ' solid ' unless the lines are monochrome . In that case , negative contours will take their linestyle from the matplotlibrc contour.negative_linestyle setting . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary .|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize|||If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||A cm Colormap instance or None .|||If None , the colormap specified by cmap will be used .|||A matplotlib.colors.Normalize instance for scaling data values to colors .|||Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .|||If locator is None , the default MaxNLocator is used .|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize instance , overriding the default color scaling based on levels .|||If linestyles is None , the default is ' solid ' unless the lines are monochrome ."
matplotlib.pyplot.contourf,True,"enable antialiasing , overriding the defaults .|||Enable/disable corner masking , which only has an effect if Z is a masked array .|||Enable/disable corner masking , which only has an effect if Z is a masked array . If False , any quad touching a masked point is masked out . If True , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . If ' legacy ' , the old contouring algorithm is used , which is equivalent to False and is deprecated , only remaining whilst the new algorithm is tested fully . If not specified , the default is taken from rcParams['contour.corner_mask ' ] , which is True unless it has been modified .|||enable antialiasing , overriding the defaults . For filled contours , the default is True . For line contours , it is taken from rcParams['lines.antialiased ' ] ."
matplotlib.pyplot.contourf,V,"fill the len(V)-1 regions between the values in V , which must be in increasing order .|||draw contour lines at the values specified in sequence V , which must be in increasing order ."
matplotlib.pyplot.contourf,X,"X , Y specify the ( x , y ) coordinates of the surface|||X and Y must both be 2-D with the same shape as Z , or they must both be 1-D such that len(X ) is the number of columns in Z and len(Y ) is the number of rows in Z ."
matplotlib.pyplot.contourf,Y,"X , Y specify the ( x , y ) coordinates of the surface|||X and Y must both be 2-D with the same shape as Z , or they must both be 1-D such that len(X ) is the number of columns in Z and len(Y ) is the number of rows in Z ."
matplotlib.pyplot.contourf,Z,"make a contour plot of an array Z . The level values are chosen automatically .|||make a contour plot of an array Z .|||X and Y must both be 2-D with the same shape as Z , or they must both be 1-D such that len(X ) is the number of columns in Z and len(Y ) is the number of rows in Z ."
matplotlib.pyplot.contourf,alpha,The alpha blending value
matplotlib.pyplot.contourf,antialiased,"enable antialiasing , overriding the defaults .|||enable antialiasing , overriding the defaults . For filled contours , the default is True . For line contours , it is taken from rcParams['lines.antialiased ' ] ."
matplotlib.pyplot.contourf,cmap,"A cm Colormap instance or None .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used ."
matplotlib.pyplot.contourf,colors,"If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If None , the colormap specified by cmap will be used ."
matplotlib.pyplot.contourf,corner_mask,"Enable/disable corner masking , which only has an effect if Z is a masked array .|||Enable/disable corner masking , which only has an effect if Z is a masked array . If False , any quad touching a masked point is masked out . If True , only the triangular corners of quads nearest those points are always masked out , other triangular corners comprising three unmasked points are contoured as usual . If ' legacy ' , the old contouring algorithm is used , which is equivalent to False and is deprecated , only remaining whilst the new algorithm is tested fully . If not specified , the default is taken from rcParams['contour.corner_mask ' ] , which is True unless it has been modified ."
matplotlib.pyplot.contourf,extend,"Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included .|||Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included . These added ranges are then mapped to the special colormap values which default to the ends of the colormap range , but can be set via matplotlib.colors.Colormap.set_under ( ) and matplotlib.colors.Colormap.set_over ( ) methods ."
matplotlib.pyplot.contourf,hatches,"A list of cross hatch patterns to use on the filled areas .|||A list of cross hatch patterns to use on the filled areas . If None , no hatching will be added to the contour . Hatching is supported in the PostScript , PDF , SVG and Agg backends only ."
matplotlib.pyplot.contourf,levels,"A list of floating point numbers indicating the level curves to draw , in increasing order ; e.g. , to draw just the zero contour pass levels=[0 ]"
matplotlib.pyplot.contourf,linestyles,"If linestyles is None , the default is ' solid ' unless the lines are monochrome . In that case , negative contours will take their linestyle from the matplotlibrc contour.negative_linestyle setting . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary .|||If linestyles is None , the default is ' solid ' unless the lines are monochrome ."
matplotlib.pyplot.contourf,linewidths,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used ."
matplotlib.pyplot.contourf,locator,"If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||If locator is None , the default MaxNLocator is used ."
matplotlib.pyplot.contourf,nchunk,"If 0 , no subdivision of the domain .|||If 0 , no subdivision of the domain . Specify a positive integer to divide the domain into subdomains of nchunk by nchunk quads . Chunking reduces the maximum length of polygons generated by the contouring algorithm which reduces the rendering workload passed on to the backend and also requires slightly less RAM . It can however introduce rendering artifacts at chunk boundaries depending on the backend , the antialiased flag and value of alpha ."
matplotlib.pyplot.contourf,norm,"A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||A matplotlib.colors.Normalize instance for scaling data values to colors ."
matplotlib.pyplot.contourf,origin,"If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour ."
matplotlib.pyplot.contourf,vmax,"If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize instance , overriding the default color scaling based on levels ."
matplotlib.pyplot.contourf,vmin,"If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize|||If not None , either or both of these values will be supplied to the matplotlib.colors.Normalize instance , overriding the default color scaling based on levels ."
matplotlib.pyplot.contourf,xunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.pyplot.contourf,yunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.pyplot.contourf,z,"There is one exception : if the lowest boundary coincides with the minimum value of the z array , then that minimum value will be included in the lowest interval ."
matplotlib.pyplot.contourf,z1,"Note : contourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.pyplot.contourf,z2,"Note : contourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.pyplot.csd,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.pyplot.csd,NFFT,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||If len(x ) < NFFT or len(y ) < NFFT , they will be zero padded to NFFT ."
matplotlib.pyplot.csd,Pxy,"If return_line is False , returns the tuple ( Pxy , freqs ) . If return_line is True , returns the tuple ( Pxy , freqs . line ) :|||If return_line is False , returns the tuple ( Pxy , freqs ) ."
matplotlib.pyplot.csd,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.csd,agg_filter,set agg_filter fuction .
matplotlib.pyplot.csd,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.csd,anchor,anchor
matplotlib.pyplot.csd,animated,Set the artist 's animation state .
matplotlib.pyplot.csd,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.csd,aspect,aspect
matplotlib.pyplot.csd,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.csd,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.csd,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.csd,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.csd,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.csd,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.csd,color,Set the color of the line
matplotlib.pyplot.csd,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.csd,contains,Replace the contains test used by this artist .
matplotlib.pyplot.csd,cursor_props,Set the cursor property as
matplotlib.pyplot.csd,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.csd,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.csd,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.csd,detrend,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing ."
matplotlib.pyplot.csd,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.csd,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.csd,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.csd,freqs,"If return_line is False , returns the tuple ( Pxy , freqs ) . If return_line is True , returns the tuple ( Pxy , freqs . line ) :|||If return_line is False , returns the tuple ( Pxy , freqs ) ."
matplotlib.pyplot.csd,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.csd,hatch,Set the hatching pattern
matplotlib.pyplot.csd,label,Set the label to s for auto legend .
matplotlib.pyplot.csd,line,"If return_line is False , returns the tuple ( Pxy , freqs ) . If return_line is True , returns the tuple ( Pxy , freqs . line ) :|||If return_line is False , returns the tuple ( Pxy , freqs ) ."
matplotlib.pyplot.csd,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.csd,linewidth,Set the line width in points
matplotlib.pyplot.csd,marker,Set the line marker
matplotlib.pyplot.csd,markeredgecolor,Set the marker edge color
matplotlib.pyplot.csd,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.csd,markerfacecolor,Set the marker face color .
matplotlib.pyplot.csd,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.csd,markersize,Set the marker size in points
matplotlib.pyplot.csd,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.csd,noverlap,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing ."
matplotlib.pyplot.csd,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.csd,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.csd,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.csd,position,Set the axes position with
matplotlib.pyplot.csd,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.csd,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.csd,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.csd,return_line,"If return_line is False , returns the tuple ( Pxy , freqs ) . If return_line is True , returns the tuple ( Pxy , freqs . line ) :|||If return_line is False , returns the tuple ( Pxy , freqs ) ."
matplotlib.pyplot.csd,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.pyplot.csd,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.csd,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.csd,snap,Sets the snap setting which may be
matplotlib.pyplot.csd,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.csd,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.csd,title,Set a title for the axes .
matplotlib.pyplot.csd,transform,set the Transformation instance used by this artist
matplotlib.pyplot.csd,url,Sets the url for the artist
matplotlib.pyplot.csd,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.csd,visible,Set the artist 's visiblity .
matplotlib.pyplot.csd,window,"A function or a vector of length NFFT .|||The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.pyplot.csd,x,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||If len(x ) < NFFT or len(y ) < NFFT , they will be zero padded to NFFT ."
matplotlib.pyplot.csd,xdata,Set the data np.array for x
matplotlib.pyplot.csd,xlabel,Set the label for the xaxis .
matplotlib.pyplot.csd,xlim,Set the data limits for the xaxis
matplotlib.pyplot.csd,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.csd,xscale,Set the scaling of the x-axis
matplotlib.pyplot.csd,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.csd,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.csd,y,"The cross spectral density by Welch 's average periodogram method .|||The cross spectral density by Welch 's average periodogram method . The vectors x and y are divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The product of the direct FFTs of x and y are averaged over each segment to compute , with a scaling to correct for power loss due to windowing .|||If len(x ) < NFFT or len(y ) < NFFT , they will be zero padded to NFFT ."
matplotlib.pyplot.csd,ydata,Set the data np.array for y
matplotlib.pyplot.csd,ylabel,Set the label for the yaxis
matplotlib.pyplot.csd,ylim,Set the data limits for the yaxis
matplotlib.pyplot.csd,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.csd,yscale,Set the scaling of the y-axis
matplotlib.pyplot.csd,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.csd,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.csd,zorder,Set the zorder for the artist .
matplotlib.pyplot.delaxes,ax,"Remove an axes from the current figure .|||Remove an axes from the current figure . If ax does n't exist , an error will be raised ."
matplotlib.pyplot.errorbar,False,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||if True , will plot the errorbars above the plot symbols . Default is below .|||if True , will plot the errorbars above the plot symbols .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.pyplot.errorbar,None,"A matplotlib color arg which gives the color the errorbar lines ; if None , use the color of the line connecting the markers ."
matplotlib.pyplot.errorbar,True,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||if True , will plot the errorbars above the plot symbols . Default is below .|||if True , will plot the errorbars above the plot symbols .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.pyplot.errorbar,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.errorbar,agg_filter,set agg_filter fuction .
matplotlib.pyplot.errorbar,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.errorbar,anchor,anchor
matplotlib.pyplot.errorbar,animated,Set the artist 's animation state .
matplotlib.pyplot.errorbar,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.errorbar,args,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :"
matplotlib.pyplot.errorbar,aspect,aspect
matplotlib.pyplot.errorbar,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.errorbar,barlinecols,"Returns ( plotline , caplines , barlinecols ) :"
matplotlib.pyplot.errorbar,barsabove,"if True , will plot the errorbars above the plot symbols . Default is below .|||if True , will plot the errorbars above the plot symbols ."
matplotlib.pyplot.errorbar,caplines,"Returns ( plotline , caplines , barlinecols ) :"
matplotlib.pyplot.errorbar,capsize,"The length of the error bar caps in points ; if None , it will take the value from errorbar.capsize rcParam ."
matplotlib.pyplot.errorbar,capthick,"An alias kwarg to markeredgewidth ( a.k.a. - mew ) . This setting is a more sensible name for the property that controls the thickness of the error bar cap in points . For backwards compatibility , if mew or markeredgewidth are given , then they will over-ride capthick . This may change in future releases .|||An alias kwarg to markeredgewidth ( a.k.a. - mew ) ."
matplotlib.pyplot.errorbar,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.errorbar,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.errorbar,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.errorbar,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.errorbar,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.errorbar,color,Set the color of the line
matplotlib.pyplot.errorbar,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.errorbar,contains,Replace the contains test used by this artist .
matplotlib.pyplot.errorbar,cursor_props,Set the cursor property as
matplotlib.pyplot.errorbar,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.errorbar,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.errorbar,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.errorbar,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.errorbar,ecolor,"A matplotlib color arg which gives the color the errorbar lines ; if None , use the color of the line connecting the markers ."
matplotlib.pyplot.errorbar,elinewidth,"The linewidth of the errorbar lines . If None , use the linewidth .|||The linewidth of the errorbar lines ."
matplotlib.pyplot.errorbar,errorevery,"subsamples the errorbars .|||subsamples the errorbars . e.g. , if errorevery=5 , errorbars for every 5-th datapoint will be plotted . The data plot itself still shows all data points ."
matplotlib.pyplot.errorbar,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.errorbar,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.errorbar,fmt,"The plot format symbol .|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||The plot format symbol . If fmt is ' none ' ( case-insensitive ) , only the errorbars are plotted . This is used for adding errorbars to a bar plot , for example . Default is ' ' , an empty plot format string ; properties are then identical to the defaults for plot ( ) ."
matplotlib.pyplot.errorbar,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.errorbar,hatch,Set the hatching pattern
matplotlib.pyplot.errorbar,label,Set the label to s for auto legend .
matplotlib.pyplot.errorbar,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.errorbar,linewidth,Set the line width in points
matplotlib.pyplot.errorbar,lolims,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.pyplot.errorbar,marker,Set the line marker
matplotlib.pyplot.errorbar,markeredgecolor,"Set the marker edge color|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.errorbar,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.errorbar,markeredgewith,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.errorbar,markerfacecolor,"Set the marker face color .|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.errorbar,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.errorbar,markersize,"Set the marker size in points|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.errorbar,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.errorbar,mec,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.errorbar,mew,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.errorbar,mfc,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.errorbar,ms,"where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize|||where mfc , mec , ms and mew are aliases for the longer property names , markerfacecolor , markeredgecolor , markersize and markeredgewith ."
matplotlib.pyplot.errorbar,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.errorbar,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.errorbar,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.errorbar,plotline,"Returns ( plotline , caplines , barlinecols ) :"
matplotlib.pyplot.errorbar,position,Set the axes position with
matplotlib.pyplot.errorbar,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.errorbar,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.errorbar,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.errorbar,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.errorbar,scaley,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.errorbar,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.errorbar,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.errorbar,snap,Sets the snap setting which may be
matplotlib.pyplot.errorbar,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.errorbar,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.errorbar,title,Set a title for the axes .
matplotlib.pyplot.errorbar,transform,set the Transformation instance used by this artist
matplotlib.pyplot.errorbar,uplims,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.pyplot.errorbar,url,Sets the url for the artist
matplotlib.pyplot.errorbar,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.errorbar,visible,Set the artist 's visiblity .
matplotlib.pyplot.errorbar,x,"x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||Plot x versus y with error deltas in yerr and xerr . Vertical errorbars are plotted if yerr is not None . Horizontal errorbars are plotted if xerr is not None .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||Plot x versus y with error deltas in yerr and xerr .|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted ."
matplotlib.pyplot.errorbar,xdata,Set the data np.array for x
matplotlib.pyplot.errorbar,xerr,"If a scalar number , len(N ) array-like object , or an Nx1 array-like object , errorbars are drawn at + /-value relative to the data . If a sequence of shape 2xN , errorbars are drawn at - row1 and + row2 relative to the data .|||If a scalar number , len(N ) array-like object , or an Nx1 array-like object , errorbars are drawn at + /-value relative to the data .|||Plot x versus y with error deltas in yerr and xerr .|||Plot x versus y with error deltas in yerr and xerr . Vertical errorbars are plotted if yerr is not None . Horizontal errorbars are plotted if xerr is not None .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y ."
matplotlib.pyplot.errorbar,xlabel,Set the label for the xaxis .
matplotlib.pyplot.errorbar,xlim,Set the data limits for the xaxis
matplotlib.pyplot.errorbar,xlolims,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.pyplot.errorbar,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.errorbar,xscale,Set the scaling of the x-axis
matplotlib.pyplot.errorbar,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.errorbar,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.errorbar,xuplims,"These arguments can be used to indicate that a value gives only upper/lower limits . In that case a caret symbol is used to indicate this . lims-arguments may be of the same type as xerr and yerr . To use limits with inverted axes , set_xlim ( ) or set_ylim ( ) must be called before errorbar ( ) .|||These arguments can be used to indicate that a value gives only upper/lower limits ."
matplotlib.pyplot.errorbar,y,"x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||Plot x versus y with error deltas in yerr and xerr . Vertical errorbars are plotted if yerr is not None . Horizontal errorbars are plotted if xerr is not None .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||Plot x versus y with error deltas in yerr and xerr .|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted ."
matplotlib.pyplot.errorbar,ydata,Set the data np.array for y
matplotlib.pyplot.errorbar,yerr,"If a scalar number , len(N ) array-like object , or an Nx1 array-like object , errorbars are drawn at + /-value relative to the data . If a sequence of shape 2xN , errorbars are drawn at - row1 and + row2 relative to the data .|||If a scalar number , len(N ) array-like object , or an Nx1 array-like object , errorbars are drawn at + /-value relative to the data .|||Plot x versus y with error deltas in yerr and xerr .|||Plot x versus y with error deltas in yerr and xerr . Vertical errorbars are plotted if yerr is not None . Horizontal errorbars are plotted if xerr is not None .|||x , y , xerr , and yerr can all be scalars , which plots a single error bar at x , y ."
matplotlib.pyplot.errorbar,ylabel,Set the label for the yaxis
matplotlib.pyplot.errorbar,ylim,Set the data limits for the yaxis
matplotlib.pyplot.errorbar,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.errorbar,yscale,Set the scaling of the y-axis
matplotlib.pyplot.errorbar,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.errorbar,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.errorbar,zorder,Set the zorder for the artist .
matplotlib.pyplot.eventplot,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.eventplot,agg_filter,set agg_filter fuction .
matplotlib.pyplot.eventplot,alpha,Set the alpha tranparencies of the collection .
matplotlib.pyplot.eventplot,anchor,anchor
matplotlib.pyplot.eventplot,animated,Set the artist 's animation state .
matplotlib.pyplot.eventplot,antialiased,Set the antialiasing state for rendering .
matplotlib.pyplot.eventplot,array,Set the image array from numpy array A
matplotlib.pyplot.eventplot,aspect,aspect
matplotlib.pyplot.eventplot,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.eventplot,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.pyplot.eventplot,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.eventplot,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.eventplot,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.eventplot,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.eventplot,cmap,set the colormap for luminance data
matplotlib.pyplot.eventplot,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.eventplot,color,Set the color(s ) of the line collection .
matplotlib.pyplot.eventplot,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.eventplot,contains,Replace the contains test used by this artist .
matplotlib.pyplot.eventplot,cursor_props,Set the cursor property as
matplotlib.pyplot.eventplot,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.pyplot.eventplot,facecolor,Set the facecolor(s ) of the collection .
matplotlib.pyplot.eventplot,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.eventplot,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.eventplot,hatch,Set the hatching pattern
matplotlib.pyplot.eventplot,label,Set the label to s for auto legend .
matplotlib.pyplot.eventplot,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.pyplot.eventplot,linewidth,Set the linewidth(s ) for the collection .
matplotlib.pyplot.eventplot,norm,set the normalization instance
matplotlib.pyplot.eventplot,offset_position,Set how offsets are applied .
matplotlib.pyplot.eventplot,offsets,Set the offsets for the collection .
matplotlib.pyplot.eventplot,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.eventplot,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.eventplot,position,Set the axes position with
matplotlib.pyplot.eventplot,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.eventplot,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.eventplot,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.eventplot,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.eventplot,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.eventplot,snap,Sets the snap setting which may be
matplotlib.pyplot.eventplot,title,Set a title for the axes .
matplotlib.pyplot.eventplot,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.eventplot,url,Sets the url for the artist
matplotlib.pyplot.eventplot,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.eventplot,visible,Set the artist 's visiblity .
matplotlib.pyplot.eventplot,xlabel,Set the label for the xaxis .
matplotlib.pyplot.eventplot,xlim,Set the data limits for the xaxis
matplotlib.pyplot.eventplot,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.eventplot,xscale,Set the scaling of the x-axis
matplotlib.pyplot.eventplot,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.eventplot,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.eventplot,ylabel,Set the label for the yaxis
matplotlib.pyplot.eventplot,ylim,Set the data limits for the yaxis
matplotlib.pyplot.eventplot,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.eventplot,yscale,Set the scaling of the y-axis
matplotlib.pyplot.eventplot,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.eventplot,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.eventplot,zorder,Set the zorder for the artist .
matplotlib.pyplot.figimage,X,X must be a float array :|||adds a non-resampled array X to the figure .
matplotlib.pyplot.figimage,xo,"with pixel offsets xo , yo ,"
matplotlib.pyplot.figimage,yo,"with pixel offsets xo , yo ,"
matplotlib.pyplot.figtext,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.figtext,agg_filter,set agg_filter fuction .
matplotlib.pyplot.figtext,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.figtext,anchor,anchor
matplotlib.pyplot.figtext,animated,Set the artist 's animation state .
matplotlib.pyplot.figtext,aspect,aspect
matplotlib.pyplot.figtext,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.figtext,backgroundcolor,Set the background color of the text by updating the bbox .
matplotlib.pyplot.figtext,bbox,Draw a bounding box around self .
matplotlib.pyplot.figtext,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.figtext,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.figtext,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.figtext,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.figtext,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.figtext,color,Set the foreground color of the text
matplotlib.pyplot.figtext,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.figtext,contains,Replace the contains test used by this artist .
matplotlib.pyplot.figtext,cursor_props,Set the cursor property as
matplotlib.pyplot.figtext,family,Set the font family .
matplotlib.pyplot.figtext,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.figtext,fontconfig_pattern,Set the properties by parsing a fontconfig pattern .
matplotlib.pyplot.figtext,fontdict,"A dictionary to override the default text properties .|||A dictionary to override the default text properties . If fontdict is None , the defaults are determined by your rc parameters ."
matplotlib.pyplot.figtext,fontproperties,Set the font properties that control the text .
matplotlib.pyplot.figtext,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.figtext,hatch,Set the hatching pattern
matplotlib.pyplot.figtext,horizontalalignment,Set the horizontal alignment to one of
matplotlib.pyplot.figtext,kwargs,Other miscellaneous text parameters .
matplotlib.pyplot.figtext,label,Set the label to s for auto legend .
matplotlib.pyplot.figtext,linespacing,Set the line spacing as a multiple of the font size .
matplotlib.pyplot.figtext,linestyle,Set the patch linestyle
matplotlib.pyplot.figtext,multialignment,Set the alignment for multiple lines layout .
matplotlib.pyplot.figtext,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.figtext,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.figtext,position,"Set the axes position with|||Set the ( x , y ) position of the text"
matplotlib.pyplot.figtext,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.figtext,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.figtext,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.figtext,rotation,Set the rotation of the text
matplotlib.pyplot.figtext,rotation_mode,set text rotation mode .
matplotlib.pyplot.figtext,s,text
matplotlib.pyplot.figtext,size,Set the font size .
matplotlib.pyplot.figtext,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.figtext,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.figtext,snap,Sets the snap setting which may be
matplotlib.pyplot.figtext,stretch,Set the font stretch ( horizontal condensation or expansion ) .
matplotlib.pyplot.figtext,style,Set the font style .
matplotlib.pyplot.figtext,text,Set the text string s
matplotlib.pyplot.figtext,title,Set a title for the axes .
matplotlib.pyplot.figtext,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.figtext,url,Sets the url for the artist
matplotlib.pyplot.figtext,usetex,Set this Text object to render using TeX ( or not ) .
matplotlib.pyplot.figtext,variant,"Set the font variant , either ' normal ' or ' small-caps ' ."
matplotlib.pyplot.figtext,verticalalignment,Set the vertical alignment
matplotlib.pyplot.figtext,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.figtext,visible,Set the artist 's visiblity .
matplotlib.pyplot.figtext,weight,Set the font weight .
matplotlib.pyplot.figtext,withdash,Creates a TextWithDash instance instead of a Text instance .
matplotlib.pyplot.figtext,wrap,Sets the wrapping state for the text .
matplotlib.pyplot.figtext,x,"Set the x position of the text|||Add text to figure at location x , y ( relative 0-1 coords ) . See text ( ) for the meaning of the other arguments .|||Add text to figure at location x , y ( relative 0-1 coords ) ."
matplotlib.pyplot.figtext,"x, y",data coordinates
matplotlib.pyplot.figtext,xlabel,Set the label for the xaxis .
matplotlib.pyplot.figtext,xlim,Set the data limits for the xaxis
matplotlib.pyplot.figtext,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.figtext,xscale,Set the scaling of the x-axis
matplotlib.pyplot.figtext,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.figtext,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.figtext,y,"Set the y position of the text|||Add text to figure at location x , y ( relative 0-1 coords ) . See text ( ) for the meaning of the other arguments .|||Add text to figure at location x , y ( relative 0-1 coords ) ."
matplotlib.pyplot.figtext,ylabel,Set the label for the yaxis
matplotlib.pyplot.figtext,ylim,Set the data limits for the yaxis
matplotlib.pyplot.figtext,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.figtext,yscale,Set the scaling of the y-axis
matplotlib.pyplot.figtext,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.figtext,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.figtext,zorder,Set the zorder for the artist .
matplotlib.pyplot.figure,dpi,"resolution of the figure .|||resolution of the figure . If not provided , defaults to rc figure.dpi ."
matplotlib.pyplot.figure,edgecolor :,"the border color .|||the border color . If not provided , defaults to rc figure.edgecolor"
matplotlib.pyplot.figure,facecolor :,"the background color .|||the background color . If not provided , defaults to rc figure.facecolor"
matplotlib.pyplot.figure,figsize,"width , height in inches . If not provided , defaults to rc figure.figsize .|||width , height in inches ."
matplotlib.pyplot.figure,num,"If not provided , a new figure will be created , and the figure number will be incremented . The figure objects holds this number in a number attribute . If num is provided , and a figure with this id already exists , make it active , and returns a reference to it . If this figure does not exists , create it and returns it . If num is a string , the window title will be set to this figure 's num .|||If not provided , a new figure will be created , and the figure number will be incremented ."
matplotlib.pyplot.fill,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.fill,agg_filter,set agg_filter fuction .
matplotlib.pyplot.fill,alpha,Set the alpha tranparency of the patch .
matplotlib.pyplot.fill,anchor,anchor
matplotlib.pyplot.fill,animated,Set the artist 's animation state .
matplotlib.pyplot.fill,antialiased,Set whether to use antialiased rendering
matplotlib.pyplot.fill,args,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||Plot lines and/or markers to the Axes .|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing .|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing . For example , to plot a polygon with vertices at x , y in blue . :"
matplotlib.pyplot.fill,aspect,aspect
matplotlib.pyplot.fill,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.fill,capstyle,Set the patch capstyle
matplotlib.pyplot.fill,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.fill,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.fill,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.fill,closed,"Set if the polygon is closed|||If codes is None and closed is True , vertices will be treated as line segments of a closed polygon .|||The closed kwarg will close the polygon when True ( default ) ."
matplotlib.pyplot.fill,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.fill,color,"An arbitrary number of x , y , color groups can be specified :|||Set both the edgecolor and the facecolor ."
matplotlib.pyplot.fill,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.fill,contains,Replace the contains test used by this artist .
matplotlib.pyplot.fill,cursor_props,Set the cursor property as
matplotlib.pyplot.fill,edgecolor,Set the patch edge color
matplotlib.pyplot.fill,facecolor,Set the patch face color
matplotlib.pyplot.fill,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.fill,fill,Set whether to fill the patch
matplotlib.pyplot.fill,fmt,"If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :"
matplotlib.pyplot.fill,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.fill,hatch,Set the hatching pattern
matplotlib.pyplot.fill,joinstyle,Set the patch joinstyle
matplotlib.pyplot.fill,label,Set the label to s for auto legend .
matplotlib.pyplot.fill,linestyle,Set the patch linestyle
matplotlib.pyplot.fill,linewidth,Set the patch linewidth in points
matplotlib.pyplot.fill,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.fill,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.fill,position,Set the axes position with
matplotlib.pyplot.fill,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.fill,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.fill,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.fill,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.fill,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||Autoscale the view limits using the data limits ."
matplotlib.pyplot.fill,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.fill,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.fill,snap,Sets the snap setting which may be
matplotlib.pyplot.fill,title,Set a title for the axes .
matplotlib.pyplot.fill,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.fill,url,Sets the url for the artist
matplotlib.pyplot.fill,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.fill,visible,Set the artist 's visiblity .
matplotlib.pyplot.fill,x,"An arbitrary number of x , y , color groups can be specified :|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing . For example , to plot a polygon with vertices at x , y in blue . :|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||If you would like to fill below a curve , e.g. , shade a region between 0 and y along x , use fill_between ( )|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing ."
matplotlib.pyplot.fill,xlabel,Set the label for the xaxis .
matplotlib.pyplot.fill,xlim,Set the data limits for the xaxis
matplotlib.pyplot.fill,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.fill,xscale,Set the scaling of the x-axis
matplotlib.pyplot.fill,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.fill,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.fill,xy,Set the vertices of the polygon
matplotlib.pyplot.fill,y,"An arbitrary number of x , y , color groups can be specified :|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing . For example , to plot a polygon with vertices at x , y in blue . :|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||If you would like to fill below a curve , e.g. , shade a region between 0 and y along x , use fill_between ( )|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||args is a variable length argument , allowing for multiple x , y pairs with an optional color format string ; see plot ( ) for details on the argument parsing ."
matplotlib.pyplot.fill,ylabel,Set the label for the yaxis
matplotlib.pyplot.fill,ylim,Set the data limits for the yaxis
matplotlib.pyplot.fill,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.fill,yscale,Set the scaling of the y-axis
matplotlib.pyplot.fill,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.fill,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.fill,zorder,Set the zorder for the artist .
matplotlib.pyplot.fill_between,interpolate,"If True , interpolate between the two lines to find the precise point of intersection .|||If True , interpolate between the two lines to find the precise point of intersection . Otherwise , the start and end points of the filled region will only occur on explicit values in the x array ."
matplotlib.pyplot.fill_between,step,"If not None , fill with step logic ."
matplotlib.pyplot.fill_between,where,"If None , default to fill between everywhere .|||If None , default to fill between everywhere . If not None , it is an N-length numpy boolean array and the fill will only happen over the regions where where==True ."
matplotlib.pyplot.fill_between,x,An N-length array of the x data
matplotlib.pyplot.fill_between,y1,Create a PolyCollection|||Create a PolyCollection filling the regions between y1 and y2 where where==True|||An N-length array ( or scalar ) of the y data
matplotlib.pyplot.fill_between,y2,Create a PolyCollection|||Create a PolyCollection filling the regions between y1 and y2 where where==True|||An N-length array ( or scalar ) of the y data
matplotlib.pyplot.fill_betweenx,step,"If not None , fill with step logic ."
matplotlib.pyplot.fill_betweenx,where,"If None , default to fill between everywhere .|||If None , default to fill between everywhere . If not None , it is a N length numpy boolean array and the fill will only happen over the regions where where==True"
matplotlib.pyplot.fill_betweenx,x1,An N-length array ( or scalar ) of the x data|||Create a PolyCollection|||Create a PolyCollection filling the regions between x1 and x2 where where==True
matplotlib.pyplot.fill_betweenx,x2,An N-length array ( or scalar ) of the x data|||Create a PolyCollection|||Create a PolyCollection filling the regions between x1 and x2 where where==True
matplotlib.pyplot.fill_betweenx,y,An N-length array of the y data
matplotlib.pyplot.findobj,include_self,"If include_self is True ( default ) , include self in the list to be checked for a match ."
matplotlib.pyplot.findobj,match,match can be
matplotlib.pyplot.gca,anchor,anchor
matplotlib.pyplot.gca,aspect,aspect
matplotlib.pyplot.gca,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.gca,contains,Replace the contains test used by this artist .
matplotlib.pyplot.gca,cursor_props,Set the cursor property as
matplotlib.pyplot.gca,label,Set the label to s for auto legend .
matplotlib.pyplot.gca,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.gca,position,Set the axes position with
matplotlib.pyplot.gca,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.gca,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.gca,title,Set a title for the axes .
matplotlib.pyplot.gca,xlabel,Set the label for the xaxis .
matplotlib.pyplot.gca,xlim,Set the data limits for the xaxis
matplotlib.pyplot.gca,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.gca,xscale,Set the scaling of the x-axis
matplotlib.pyplot.gca,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.gca,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.gca,ylabel,Set the label for the yaxis
matplotlib.pyplot.gca,ylim,Set the data limits for the yaxis
matplotlib.pyplot.gca,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.gca,yscale,Set the scaling of the y-axis
matplotlib.pyplot.gca,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.gca,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.ginput,mouse_add,"The buttons used for the various actions ( adding points , removing points , terminating the inputs ) can be overriden via the arguments mouse_add , mouse_pop and mouse_stop , that give the associated mouse button : 1 for left , 2 for middle , 3 for right ."
matplotlib.pyplot.ginput,mouse_pop,"The buttons used for the various actions ( adding points , removing points , terminating the inputs ) can be overriden via the arguments mouse_add , mouse_pop and mouse_stop , that give the associated mouse button : 1 for left , 2 for middle , 3 for right ."
matplotlib.pyplot.ginput,mouse_stop,"The buttons used for the various actions ( adding points , removing points , terminating the inputs ) can be overriden via the arguments mouse_add , mouse_pop and mouse_stop , that give the associated mouse button : 1 for left , 2 for middle , 3 for right ."
matplotlib.pyplot.ginput,n,"If n is zero or negative , accumulate clicks until a middle click ( or potentially both mouse buttons at once ) terminates the input .|||This will wait for n clicks from the user and return a list of the coordinates of each click ."
matplotlib.pyplot.ginput,timeout,"If timeout is zero or negative , does not timeout ."
matplotlib.pyplot.grid,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.grid,agg_filter,set agg_filter fuction .
matplotlib.pyplot.grid,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.grid,anchor,anchor
matplotlib.pyplot.grid,animated,Set the artist 's animation state .
matplotlib.pyplot.grid,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.grid,aspect,aspect
matplotlib.pyplot.grid,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.grid,axis,"axis can be ' both ' ( default ) , ' x ' , or ' y ' to control which set of gridlines are drawn ."
matplotlib.pyplot.grid,b,"Set the axes grids on or off ; b is a boolean .|||If b is None and len(kwargs)==0 , toggle the grid state .|||If b is None and len(kwargs)==0 , toggle the grid state . If kwargs are supplied , it is assumed that you want a grid and b is thus set to True .|||Set the axes grids on or off ; b is a boolean . ( For MATLAB compatibility , b may also be a string , ' on ' or ' off ' . )"
matplotlib.pyplot.grid,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.grid,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.grid,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.grid,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.grid,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.grid,color,Set the color of the line
matplotlib.pyplot.grid,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.grid,contains,Replace the contains test used by this artist .
matplotlib.pyplot.grid,cursor_props,Set the cursor property as
matplotlib.pyplot.grid,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.grid,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.grid,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.grid,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.grid,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.grid,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.grid,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.grid,hatch,Set the hatching pattern
matplotlib.pyplot.grid,label,Set the label to s for auto legend .
matplotlib.pyplot.grid,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.grid,linewidth,Set the line width in points
matplotlib.pyplot.grid,marker,Set the line marker
matplotlib.pyplot.grid,markeredgecolor,Set the marker edge color
matplotlib.pyplot.grid,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.grid,markerfacecolor,Set the marker face color .
matplotlib.pyplot.grid,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.grid,markersize,Set the marker size in points
matplotlib.pyplot.grid,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.grid,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.grid,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.grid,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.grid,position,Set the axes position with
matplotlib.pyplot.grid,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.grid,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.grid,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.grid,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.grid,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.grid,snap,Sets the snap setting which may be
matplotlib.pyplot.grid,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.grid,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.grid,title,Set a title for the axes .
matplotlib.pyplot.grid,transform,set the Transformation instance used by this artist
matplotlib.pyplot.grid,url,Sets the url for the artist
matplotlib.pyplot.grid,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.grid,visible,Set the artist 's visiblity .
matplotlib.pyplot.grid,which,"which can be ' major ' ( default ) , ' minor ' , or ' both ' to control whether major tick grids , minor tick grids , or both are affected ."
matplotlib.pyplot.grid,xdata,Set the data np.array for x
matplotlib.pyplot.grid,xlabel,Set the label for the xaxis .
matplotlib.pyplot.grid,xlim,Set the data limits for the xaxis
matplotlib.pyplot.grid,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.grid,xscale,Set the scaling of the x-axis
matplotlib.pyplot.grid,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.grid,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.grid,ydata,Set the data np.array for y
matplotlib.pyplot.grid,ylabel,Set the label for the yaxis
matplotlib.pyplot.grid,ylim,Set the data limits for the yaxis
matplotlib.pyplot.grid,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.grid,yscale,Set the scaling of the y-axis
matplotlib.pyplot.grid,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.grid,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.grid,zorder,Set the zorder for the artist .
matplotlib.pyplot.hexbin,C,"If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) .|||If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) . These values are accumulated for each hexagonal bin and then reduced according to reduce_C_function , which defaults to numpy 's mean function ( np.mean ) . ( If C is specified , it must also be a 1-D sequence of the same length as x and y . )|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N .|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N . If C is None ( the default ) , this is a histogram of the number of occurences of the observations at ( x[i],y[i ] ) .|||x , y and/or C may be masked arrays , in which case only unmasked points will be plotted ."
matplotlib.pyplot.hexbin,N,"Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N . If C is None ( the default ) , this is a histogram of the number of occurences of the observations at ( x[i],y[i ] ) .|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N ."
matplotlib.pyplot.hexbin,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.hexbin,agg_filter,set agg_filter fuction .
matplotlib.pyplot.hexbin,alpha,Set the alpha tranparencies of the collection .
matplotlib.pyplot.hexbin,anchor,anchor
matplotlib.pyplot.hexbin,animated,Set the artist 's animation state .
matplotlib.pyplot.hexbin,antialiased,Set the antialiasing state for rendering .
matplotlib.pyplot.hexbin,array,Set the image array from numpy array A
matplotlib.pyplot.hexbin,aspect,aspect
matplotlib.pyplot.hexbin,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.hexbin,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.pyplot.hexbin,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.hexbin,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.hexbin,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.hexbin,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.hexbin,cmap,set the colormap for luminance data
matplotlib.pyplot.hexbin,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.hexbin,color,Set both the edgecolor and the facecolor .
matplotlib.pyplot.hexbin,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.hexbin,contains,Replace the contains test used by this artist .
matplotlib.pyplot.hexbin,cursor_props,Set the cursor property as
matplotlib.pyplot.hexbin,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.pyplot.hexbin,facecolor,Set the facecolor(s ) of the collection .
matplotlib.pyplot.hexbin,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.hexbin,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.hexbin,hatch,Set the hatching pattern
matplotlib.pyplot.hexbin,hbar,"The return value is a PolyCollection instance ; use get_array ( ) on this PolyCollection to get the counts in each hexagon . If marginals is True , horizontal bar and vertical bar ( both PolyCollections ) will be attached to the return collection as attributes hbar and vbar .|||The return value is a PolyCollection instance ; use get_array ( ) on this PolyCollection to get the counts in each hexagon ."
matplotlib.pyplot.hexbin,label,Set the label to s for auto legend .
matplotlib.pyplot.hexbin,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.pyplot.hexbin,linewidth,Set the linewidth(s ) for the collection .
matplotlib.pyplot.hexbin,marginals,"The return value is a PolyCollection instance ; use get_array ( ) on this PolyCollection to get the counts in each hexagon . If marginals is True , horizontal bar and vertical bar ( both PolyCollections ) will be attached to the return collection as attributes hbar and vbar .|||The return value is a PolyCollection instance ; use get_array ( ) on this PolyCollection to get the counts in each hexagon ."
matplotlib.pyplot.hexbin,norm,set the normalization instance
matplotlib.pyplot.hexbin,offset_position,Set how offsets are applied .
matplotlib.pyplot.hexbin,offsets,Set the offsets for the collection .
matplotlib.pyplot.hexbin,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.hexbin,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.hexbin,position,Set the axes position with
matplotlib.pyplot.hexbin,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.hexbin,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.hexbin,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.hexbin,reduce_C_function,"If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) .|||If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) . These values are accumulated for each hexagonal bin and then reduced according to reduce_C_function , which defaults to numpy 's mean function ( np.mean ) . ( If C is specified , it must also be a 1-D sequence of the same length as x and y . )"
matplotlib.pyplot.hexbin,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.hexbin,sizes,Set the sizes of each member of the collection .
matplotlib.pyplot.hexbin,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.hexbin,snap,Sets the snap setting which may be
matplotlib.pyplot.hexbin,title,Set a title for the axes .
matplotlib.pyplot.hexbin,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.hexbin,url,Sets the url for the artist
matplotlib.pyplot.hexbin,vbar,"The return value is a PolyCollection instance ; use get_array ( ) on this PolyCollection to get the counts in each hexagon . If marginals is True , horizontal bar and vertical bar ( both PolyCollections ) will be attached to the return collection as attributes hbar and vbar .|||The return value is a PolyCollection instance ; use get_array ( ) on this PolyCollection to get the counts in each hexagon ."
matplotlib.pyplot.hexbin,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.hexbin,visible,Set the artist 's visiblity .
matplotlib.pyplot.hexbin,x,"If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) .|||If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) . These values are accumulated for each hexagonal bin and then reduced according to reduce_C_function , which defaults to numpy 's mean function ( np.mean ) . ( If C is specified , it must also be a 1-D sequence of the same length as x and y . )|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N .|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N . If C is None ( the default ) , this is a histogram of the number of occurences of the observations at ( x[i],y[i ] ) .|||x , y and/or C may be masked arrays , in which case only unmasked points will be plotted ."
matplotlib.pyplot.hexbin,xlabel,Set the label for the xaxis .
matplotlib.pyplot.hexbin,xlim,Set the data limits for the xaxis
matplotlib.pyplot.hexbin,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.hexbin,xscale,Set the scaling of the x-axis
matplotlib.pyplot.hexbin,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.hexbin,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.hexbin,y,"If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) .|||If C is specified , it specifies values at the coordinate ( x[i],y[i ] ) . These values are accumulated for each hexagonal bin and then reduced according to reduce_C_function , which defaults to numpy 's mean function ( np.mean ) . ( If C is specified , it must also be a 1-D sequence of the same length as x and y . )|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N .|||Make a hexagonal binning plot of x versus y , where x , y are 1-D sequences of the same length , N . If C is None ( the default ) , this is a histogram of the number of occurences of the observations at ( x[i],y[i ] ) .|||x , y and/or C may be masked arrays , in which case only unmasked points will be plotted ."
matplotlib.pyplot.hexbin,ylabel,Set the label for the yaxis
matplotlib.pyplot.hexbin,ylim,Set the data limits for the yaxis
matplotlib.pyplot.hexbin,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.hexbin,yscale,Set the scaling of the y-axis
matplotlib.pyplot.hexbin,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.hexbin,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.hexbin,zorder,Set the zorder for the artist .
matplotlib.pyplot.hist,align,Controls how the histogram is plotted .
matplotlib.pyplot.hist,bins,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||If an integer is given , bins + 1 bin edges are returned , consistently with numpy.histogram ( ) for numpy version > = 1.3 .|||Compute and draw the histogram of x ."
matplotlib.pyplot.hist,bottom,"Location of the bottom baseline of each bin . If a scalar , the base line for each bin is shifted by the same amount . If an array , each bin is shifted independently and the length of bottom must match the number of bins . If None , defaults to 0 .|||Location of the bottom baseline of each bin ."
matplotlib.pyplot.hist,color,"Color spec or sequence of color specs , one per dataset .|||Color spec or sequence of color specs , one per dataset . Default ( None ) uses the standard line color sequence ."
matplotlib.pyplot.hist,cumulative,"If True , then a histogram is computed where each bin gives the counts in that bin plus all bins for smaller values . The last bin gives the total number of datapoints . If normed is also True then the histogram is normalized such that the last bin equals 1 . If cumulative evaluates to less than 0 ( e.g. , - 1 ) , the direction of accumulation is reversed . In this case , if normed is also True , then the histogram is normalized such that the first bin equals 1 .|||If True , then a histogram is computed where each bin gives the counts in that bin plus all bins for smaller values ."
matplotlib.pyplot.hist,hatch,Set the hatching pattern
matplotlib.pyplot.hist,histtype,The type of histogram to draw .
matplotlib.pyplot.hist,label,"String , or sequence of strings to match multiple datasets . Bar charts yield multiple patches per dataset , but only the first gets the label , so that the legend command will work as expected .|||String , or sequence of strings to match multiple datasets ."
matplotlib.pyplot.hist,linestyle,Set the patch linestyle
matplotlib.pyplot.hist,log,"If True , the histogram axis will be set to a log scale . If log is True and x is a 1D array , empty bins will be filtered out and only the non-empty ( n , bins , patches ) will be returned .|||If True , the histogram axis will be set to a log scale ."
matplotlib.pyplot.hist,n,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Compute and draw the histogram of x ."
matplotlib.pyplot.hist,n0,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Compute and draw the histogram of x ."
matplotlib.pyplot.hist,n1,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Compute and draw the histogram of x ."
matplotlib.pyplot.hist,normed,"If True , the first element of the return tuple will be the counts normalized to form a probability density , i.e. , n/(len(x)`dbin ) , i.e. , the integral of the histogram will sum to 1 . If stacked is also True , the sum of the histograms is normalized to 1 .|||If True , the first element of the return tuple will be the counts normalized to form a probability density , i.e. , n/(len(x)`dbin ) , i.e. , the integral of the histogram will sum to 1 ."
matplotlib.pyplot.hist,orientation,"If ' horizontal ' , barh will be used for bar-type histograms and the bottom kwarg will be the left edges ."
matplotlib.pyplot.hist,patches,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Compute and draw the histogram of x ."
matplotlib.pyplot.hist,patches0,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Compute and draw the histogram of x ."
matplotlib.pyplot.hist,patches1,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Compute and draw the histogram of x ."
matplotlib.pyplot.hist,range,"The lower and upper range of the bins .|||The lower and upper range of the bins . Lower and upper outliers are ignored . If not provided , range is ( x.min ( ) , x.max ( ) ) . Range has no effect if bins is a sequence ."
matplotlib.pyplot.hist,rwidth,"The relative width of the bars as a fraction of the bin width . If None , automatically compute the width .|||The relative width of the bars as a fraction of the bin width ."
matplotlib.pyplot.hist,stacked,"If True , multiple data are stacked on top of each other If False multiple data are aranged side by side if histtype is ' bar ' or on top of each other if histtype is ' step '"
matplotlib.pyplot.hist,weights,"An array of weights , of the same shape as x. Each value in x only contributes its associated weight towards the bin count ( instead of 1 ) .|||An array of weights , of the same shape as x. Each value in x only contributes its associated weight towards the bin count ( instead of 1 ) . If normed is True , the weights are normalized , so that the integral of the density over the range remains 1 ."
matplotlib.pyplot.hist,x,"Compute and draw the histogram of x . The return value is a tuple ( n , bins , patches ) or ( [ n0 , n1 , ... ] , bins , [ patches0 , patches1 , ... ] ) if the input contains multiple data .|||Multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ... ] ) , or as a 2-D ndarray in which each column is a dataset . Note that the ndarray form is transposed relative to the list form .|||Compute and draw the histogram of x .|||Multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ...|||Input values , this takes either a single array or a sequency of arrays which are not required to be of the same length"
matplotlib.pyplot.hist,x0,"Multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ...|||Multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ... ] ) , or as a 2-D ndarray in which each column is a dataset . Note that the ndarray form is transposed relative to the list form ."
matplotlib.pyplot.hist,x1,"Multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ...|||Multiple data can be provided via x as a list of datasets of potentially different length ( [ x0 , x1 , ... ] ) , or as a 2-D ndarray in which each column is a dataset . Note that the ndarray form is transposed relative to the list form ."
matplotlib.pyplot.hist2d,"bins: [None | int | [int, int] | array_like | [array, array]]",The bin specification :
matplotlib.pyplot.hist2d,cmax,All bins that has count more than cmax will not be displayed ( set to none before passing to imshow ) and these count values in the return value count histogram will also be set to nan upon return
matplotlib.pyplot.hist2d,cmin,All bins that has count less than cmin will not be displayed and these count values in the return value count histogram will also be set to nan upon return
matplotlib.pyplot.hist2d,normed,Normalize histogram .
matplotlib.pyplot.hist2d,range,"The leftmost and rightmost edges of the bins along each dimension ( if not specified explicitly in the bins parameters ) :[ [ xmin , xmax ] , [ ymin , ymax ] ] . All values outside of this range will be considered outliers and not tallied in the histogram .|||The leftmost and rightmost edges of the bins along each dimension ( if not specified explicitly in the bins parameters ) :[ [ xmin , xmax ] , [ ymin , ymax ] ] ."
matplotlib.pyplot.hist2d,weights,"An array of values w_i weighing each sample ( x_i , y_i ) ."
matplotlib.pyplot.hist2d,"x, y: array_like, shape (n, )",Input values
matplotlib.pyplot.hlines,alpha,Set the alpha tranparencies of the collection .
matplotlib.pyplot.hlines,array,Set the image array from numpy array A
matplotlib.pyplot.hlines,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.pyplot.hlines,color,Set the color(s ) of the line collection .
matplotlib.pyplot.hlines,contains,Replace the contains test used by this artist .
matplotlib.pyplot.hlines,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.pyplot.hlines,facecolor,Set the facecolor(s ) of the collection .
matplotlib.pyplot.hlines,hatch,Set the hatching pattern
matplotlib.pyplot.hlines,label,Set the label to s for auto legend .
matplotlib.pyplot.hlines,linestyle,Set the linestyle(s ) for the collection .
matplotlib.pyplot.hlines,linewidth,Set the linewidth(s ) for the collection .
matplotlib.pyplot.hlines,offset_position,Set how offsets are applied .
matplotlib.pyplot.hlines,offsets,Set the offsets for the collection .
matplotlib.pyplot.hlines,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.hlines,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.hlines,"xmin, xmax","Respective beginning and end of each line . If scalars are provided , all lines will have same length .|||Respective beginning and end of each line ."
matplotlib.pyplot.hlines,y,y-indexes where to plot the lines .
matplotlib.pyplot.hold,b,"Set the hold state .|||Set the hold state . If b is None ( default ) , toggle the hold state , else set the hold state to boolean value b :"
matplotlib.pyplot.hold,hold,"When hold is True , subsequent plot commands will be added to the current axes . When hold is False , the current axes and figure will be cleared on the next plot command .|||When hold is True , subsequent plot commands will be added to the current axes ."
matplotlib.pyplot.imread,fname,"fname may be a string path , a valid URL , or a Python file-like object . If using a file object , it must be opened in binary mode .|||fname may be a string path , a valid URL , or a Python file-like object ."
matplotlib.pyplot.imread,format,"If format is provided , will try to read file of that type , otherwise the format is deduced from the filename . If nothing can be deduced , PNG is tried .|||If format is provided , will try to read file of that type , otherwise the format is deduced from the filename ."
matplotlib.pyplot.imshow,X,"Display the image in X to current axes . X may be a float array , a uint8 array or a PIL image . If X is an array , it can have the following shapes :|||Display the image in X to current axes ."
matplotlib.pyplot.imshow,alpha,"The alpha blending value , between 0 ( transparent ) and 1 ( opaque )"
matplotlib.pyplot.imshow,aspect,"If ' auto ' , changes the image aspect ratio to match that of the axes ."
matplotlib.pyplot.imshow,cmap,"If None , default to rc image.cmap value .|||If None , default to rc image.cmap value . cmap is ignored when X has RGB(A ) information"
matplotlib.pyplot.imshow,contains,Replace the contains test used by this artist .
matplotlib.pyplot.imshow,extent,"The location , in data-coordinates , of the lower-left and upper-right corners . If None , the image is positioned such that the pixel centers fall on zero-based ( row , column ) indices .|||The location , in data-coordinates , of the lower-left and upper-right corners ."
matplotlib.pyplot.imshow,filternorm,"A parameter for the antigrain image resize filter . From the antigrain documentation , if filternorm = 1 , the filter normalizes integer values and corrects the rounding errors . It does n't do anything with the source floating point values , it corrects only integers according to the rule of 1.0 which means that any sum of pixel weights must be equal to 1.0 . So , the filter function must produce a graph of the proper shape .|||A parameter for the antigrain image resize filter ."
matplotlib.pyplot.imshow,filterrad,"The filter radius for filters that have a radius parameter , i.e. when interpolation is one of : ' sinc ' , ' lanczos ' or ' blackman '"
matplotlib.pyplot.imshow,interpolation,"Acceptable values are ' none ' , ' nearest ' , ' bilinear ' , ' bicubic ' , ' spline16 ' , ' spline36 ' , ' hanning ' , ' hamming ' , ' hermite ' , ' kaiser ' , ' quadric ' , ' catrom ' , ' gaussian ' , ' bessel ' , ' mitchell ' , ' sinc ' , ' lanczos '"
matplotlib.pyplot.imshow,label,Set the label to s for auto legend .
matplotlib.pyplot.imshow,norm,"A Normalize instance is used to scale luminance data to 0 , 1 . If None , use the default func:normalize . norm is only used if X is an array of floats .|||A Normalize instance is used to scale luminance data to 0 , 1 ."
matplotlib.pyplot.imshow,origin,"Place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes .|||Place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes . If None , default to rc image.origin ."
matplotlib.pyplot.imshow,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.imshow,shape,For raw buffer images
matplotlib.pyplot.imshow,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.imshow,"vmin, vmax","vmin and vmax are used in conjunction with norm to normalize luminance data .|||vmin and vmax are used in conjunction with norm to normalize luminance data . Note if you pass a norm instance , your settings for vmin and vmax will be ignored ."
matplotlib.pyplot.legend,*markerfirst*: [ *True* | *False* ],"if True , legend marker is placed to the left of the legend label if False , legend marker is placed to the right of the legend label"
matplotlib.pyplot.legend,bbox_to_anchor,Specify any arbitrary location for the legend in bbox_transform coordinates ( default Axes coordinates ) .
matplotlib.pyplot.legend,bbox_transform,The transform for the bounding box ( bbox_to_anchor ) .|||The transform for the bounding box ( bbox_to_anchor ) . For a value of None ( default ) the Axes ' transAxes transform will be used .
matplotlib.pyplot.legend,borderaxespad,The pad between the axes and legend border . Measured in font-size units . Default is None which will take the value from the legend.borderaxespad rcParam .|||The pad between the axes and legend border .
matplotlib.pyplot.legend,borderpad,The fractional whitespace inside the legend border . Measured in font-size units . Default is None which will take the value from the legend.borderpad rcParam .|||The fractional whitespace inside the legend border .
matplotlib.pyplot.legend,columnspacing,The spacing between columns .|||The spacing between columns . Measured in font-size units . Default is None which will take the value from the legend.columnspacing rcParam .
matplotlib.pyplot.legend,fancybox,Control whether round edges should be enabled around the FancyBboxPatch which makes up the legend 's background .|||Control whether round edges should be enabled around the FancyBboxPatch which makes up the legend 's background . Default is None which will take the value from the legend.fancybox rcParam .
matplotlib.pyplot.legend,fontsize,Controls the font size of the legend . If the value is numeric the size will be the absolute font size in points . String values are relative to the current default font size . This argument is only used if prop is not specified .|||Controls the font size of the legend .
matplotlib.pyplot.legend,framealpha,Control the alpha transparency of the legend 's frame . Default is None which will take the value from the legend.framealpha rcParam .|||Control the alpha transparency of the legend 's frame .
matplotlib.pyplot.legend,frameon,Control whether a frame should be drawn around the legend . Default is None which will take the value from the legend.frameon rcParam .|||Control whether a frame should be drawn around the legend .
matplotlib.pyplot.legend,handlelength,The length of the legend handles . Measured in font-size units . Default is None which will take the value from the legend.handlelength rcParam .|||The length of the legend handles .
matplotlib.pyplot.legend,handler_map,The custom dictionary mapping instances or types to a legend handler . This handler_map updates the default handler map found at matplotlib.legend.Legend.get_legend_handler_map ( ) .|||The custom dictionary mapping instances or types to a legend handler .
matplotlib.pyplot.legend,handletextpad,The pad between the legend handle and text . Measured in font-size units . Default is None which will take the value from the legend.handletextpad rcParam .|||The pad between the legend handle and text .
matplotlib.pyplot.legend,labelspacing,The vertical space between the legend entries . Measured in font-size units . Default is None which will take the value from the legend.labelspacing rcParam .|||The vertical space between the legend entries .
matplotlib.pyplot.legend,loc,The location of the legend . Possible codes are :|||The location of the legend .
matplotlib.pyplot.legend,markerscale,The relative size of legend markers compared with the originally drawn ones .|||The relative size of legend markers compared with the originally drawn ones . Default is None which will take the value from the legend.markerscale rcParam .
matplotlib.pyplot.legend,mode,"If mode is set to "" expand "" the legend will be horizontally expanded to fill the axes area ( or bbox_to_anchor if defines the legend 's size ) ."
matplotlib.pyplot.legend,ncol,The number of columns that the legend has .|||The number of columns that the legend has . Default is 1 .
matplotlib.pyplot.legend,numpoints,The number of marker points in the legend when creating a legend entry for a line/matplotlib.lines.Line2D .|||The number of marker points in the legend when creating a legend entry for a line/matplotlib.lines.Line2D . Default is None which will take the value from the legend.numpoints rcParam .
matplotlib.pyplot.legend,prop,"The font properties of the legend . If None ( default ) , the current matplotlib.rcParams will be used .|||The font properties of the legend ."
matplotlib.pyplot.legend,scatterpoints,The number of marker points in the legend when creating a legend entry for a scatter plot/ matplotlib.collections.PathCollection .|||The number of marker points in the legend when creating a legend entry for a scatter plot/ matplotlib.collections.PathCollection . Default is None which will take the value from the legend.scatterpoints rcParam .
matplotlib.pyplot.legend,scatteryoffsets,"The vertical offset ( relative to the font size ) for the markers created for a scatter plot legend entry .|||The vertical offset ( relative to the font size ) for the markers created for a scatter plot legend entry . 0.0 is at the base the legend text , and 1.0 is at the top . To draw all markers at the same height , set to [ 0.5 ] . Default [ 0.375 , 0.5 , 0.3125 ] ."
matplotlib.pyplot.legend,shadow,Control whether to draw a shadow behind the legend .|||Control whether to draw a shadow behind the legend . Default is None which will take the value from the legend.shadow rcParam .
matplotlib.pyplot.legend,title,The legend 's title . Default is no title ( None ) .|||The legend 's title .
matplotlib.pyplot.locator_params,params,Set parameters within this locator .
matplotlib.pyplot.loglog,None,"The location of the minor x /y ticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see matplotlib.axes.Axes.set_xscale ( ) / matplotlib.axes.Axes.set_yscale ( ) for details"
matplotlib.pyplot.loglog,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.loglog,agg_filter,set agg_filter fuction .
matplotlib.pyplot.loglog,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.loglog,anchor,anchor
matplotlib.pyplot.loglog,animated,Set the artist 's animation state .
matplotlib.pyplot.loglog,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.loglog,args,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :"
matplotlib.pyplot.loglog,aspect,aspect
matplotlib.pyplot.loglog,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.loglog,basex,Base of the x /y logarithm
matplotlib.pyplot.loglog,basey,Base of the x /y logarithm
matplotlib.pyplot.loglog,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.loglog,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.loglog,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.loglog,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.loglog,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.loglog,color,Set the color of the line
matplotlib.pyplot.loglog,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.loglog,contains,Replace the contains test used by this artist .
matplotlib.pyplot.loglog,cursor_props,Set the cursor property as
matplotlib.pyplot.loglog,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.loglog,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.loglog,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.loglog,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.loglog,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.loglog,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.loglog,fmt,"If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :"
matplotlib.pyplot.loglog,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.loglog,hatch,Set the hatching pattern
matplotlib.pyplot.loglog,label,Set the label to s for auto legend .
matplotlib.pyplot.loglog,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.loglog,linewidth,Set the line width in points
matplotlib.pyplot.loglog,marker,Set the line marker
matplotlib.pyplot.loglog,markeredgecolor,Set the marker edge color
matplotlib.pyplot.loglog,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.loglog,markerfacecolor,Set the marker face color .
matplotlib.pyplot.loglog,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.loglog,markersize,Set the marker size in points
matplotlib.pyplot.loglog,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.loglog,nonposx,"Non-positive values in x or y can be masked as invalid , or clipped to a very small positive number"
matplotlib.pyplot.loglog,nonposy,"Non-positive values in x or y can be masked as invalid , or clipped to a very small positive number"
matplotlib.pyplot.loglog,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.loglog,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.loglog,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.loglog,position,Set the axes position with
matplotlib.pyplot.loglog,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.loglog,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.loglog,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.loglog,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.loglog,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||Autoscale the view limits using the data limits ."
matplotlib.pyplot.loglog,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.loglog,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.loglog,snap,Sets the snap setting which may be
matplotlib.pyplot.loglog,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.loglog,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.loglog,subsx,"The location of the minor x /y ticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see matplotlib.axes.Axes.set_xscale ( ) / matplotlib.axes.Axes.set_yscale ( ) for details"
matplotlib.pyplot.loglog,subsy,"The location of the minor x /y ticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see matplotlib.axes.Axes.set_xscale ( ) / matplotlib.axes.Axes.set_yscale ( ) for details"
matplotlib.pyplot.loglog,title,Set a title for the axes .
matplotlib.pyplot.loglog,transform,set the Transformation instance used by this artist
matplotlib.pyplot.loglog,url,Sets the url for the artist
matplotlib.pyplot.loglog,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.loglog,visible,Set the artist 's visiblity .
matplotlib.pyplot.loglog,x,"Make a plot with log scaling on both the x and y axis .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.loglog,xdata,Set the data np.array for x
matplotlib.pyplot.loglog,xlabel,Set the label for the xaxis .
matplotlib.pyplot.loglog,xlim,Set the data limits for the xaxis
matplotlib.pyplot.loglog,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.loglog,xscale,Set the scaling of the x-axis
matplotlib.pyplot.loglog,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.loglog,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.loglog,y,"Make a plot with log scaling on both the x and y axis .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.loglog,ydata,Set the data np.array for y
matplotlib.pyplot.loglog,ylabel,Set the label for the yaxis
matplotlib.pyplot.loglog,ylim,Set the data limits for the yaxis
matplotlib.pyplot.loglog,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.loglog,yscale,Set the scaling of the y-axis
matplotlib.pyplot.loglog,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.loglog,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.loglog,zorder,Set the zorder for the artist .
matplotlib.pyplot.magnitude_spectrum,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.pyplot.magnitude_spectrum,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.magnitude_spectrum,agg_filter,set agg_filter fuction .
matplotlib.pyplot.magnitude_spectrum,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.magnitude_spectrum,anchor,anchor
matplotlib.pyplot.magnitude_spectrum,animated,Set the artist 's animation state .
matplotlib.pyplot.magnitude_spectrum,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.magnitude_spectrum,aspect,aspect
matplotlib.pyplot.magnitude_spectrum,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.magnitude_spectrum,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.magnitude_spectrum,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.magnitude_spectrum,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.magnitude_spectrum,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.magnitude_spectrum,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.magnitude_spectrum,color,Set the color of the line
matplotlib.pyplot.magnitude_spectrum,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.magnitude_spectrum,contains,Replace the contains test used by this artist .
matplotlib.pyplot.magnitude_spectrum,cursor_props,Set the cursor property as
matplotlib.pyplot.magnitude_spectrum,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.magnitude_spectrum,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.magnitude_spectrum,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.magnitude_spectrum,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.magnitude_spectrum,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.magnitude_spectrum,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.magnitude_spectrum,freqs,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.pyplot.magnitude_spectrum,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.magnitude_spectrum,hatch,Set the hatching pattern
matplotlib.pyplot.magnitude_spectrum,label,Set the label to s for auto legend .
matplotlib.pyplot.magnitude_spectrum,line,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.pyplot.magnitude_spectrum,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.magnitude_spectrum,linewidth,Set the line width in points
matplotlib.pyplot.magnitude_spectrum,marker,Set the line marker
matplotlib.pyplot.magnitude_spectrum,markeredgecolor,Set the marker edge color
matplotlib.pyplot.magnitude_spectrum,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.magnitude_spectrum,markerfacecolor,Set the marker face color .
matplotlib.pyplot.magnitude_spectrum,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.magnitude_spectrum,markersize,Set the marker size in points
matplotlib.pyplot.magnitude_spectrum,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.magnitude_spectrum,pad_to,Compute the magnitude spectrum of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the magnitude spectrum of x .
matplotlib.pyplot.magnitude_spectrum,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.magnitude_spectrum,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.magnitude_spectrum,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.magnitude_spectrum,position,Set the axes position with
matplotlib.pyplot.magnitude_spectrum,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.magnitude_spectrum,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.magnitude_spectrum,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.magnitude_spectrum,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.pyplot.magnitude_spectrum,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.magnitude_spectrum,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.magnitude_spectrum,snap,Sets the snap setting which may be
matplotlib.pyplot.magnitude_spectrum,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.magnitude_spectrum,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.magnitude_spectrum,spectrum,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.pyplot.magnitude_spectrum,title,Set a title for the axes .
matplotlib.pyplot.magnitude_spectrum,transform,set the Transformation instance used by this artist
matplotlib.pyplot.magnitude_spectrum,url,Sets the url for the artist
matplotlib.pyplot.magnitude_spectrum,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.magnitude_spectrum,visible,Set the artist 's visiblity .
matplotlib.pyplot.magnitude_spectrum,window,"A function or a vector of length NFFT .|||Compute the magnitude spectrum of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment .|||Compute the magnitude spectrum of x ."
matplotlib.pyplot.magnitude_spectrum,x,Compute the magnitude spectrum of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the magnitude spectrum of x .
matplotlib.pyplot.magnitude_spectrum,xdata,Set the data np.array for x
matplotlib.pyplot.magnitude_spectrum,xlabel,Set the label for the xaxis .
matplotlib.pyplot.magnitude_spectrum,xlim,Set the data limits for the xaxis
matplotlib.pyplot.magnitude_spectrum,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.magnitude_spectrum,xscale,Set the scaling of the x-axis
matplotlib.pyplot.magnitude_spectrum,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.magnitude_spectrum,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.magnitude_spectrum,ydata,Set the data np.array for y
matplotlib.pyplot.magnitude_spectrum,ylabel,Set the label for the yaxis
matplotlib.pyplot.magnitude_spectrum,ylim,Set the data limits for the yaxis
matplotlib.pyplot.magnitude_spectrum,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.magnitude_spectrum,yscale,Set the scaling of the y-axis
matplotlib.pyplot.magnitude_spectrum,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.magnitude_spectrum,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.magnitude_spectrum,zorder,Set the zorder for the artist .
matplotlib.pyplot.margins,tight,"All three forms above set the xmargin and ymargin parameters .|||All three forms above set the xmargin and ymargin parameters . All keyword parameters are optional . A single argument specifies both xmargin and ymargin . The tight parameter is passed to autoscale_view ( ) , which is executed after a margin is changed ; the default here is True , on the assumption that when margins are specified , no additional padding to match tick marks is usually desired . Setting tight to None will preserve the previous setting ."
matplotlib.pyplot.margins,xmargin,"Specifying any margin changes only the autoscaling ; for example , if xmargin is not None , then xmargin times the X data interval will be added to each end of that interval before it is used in autoscaling ."
matplotlib.pyplot.matshow,X,"Display the image in X to current axes . X may be a float array , a uint8 array or a PIL image . If X is an array , it can have the following shapes :|||Display the image in X to current axes ."
matplotlib.pyplot.matshow,alpha,"The alpha blending value , between 0 ( transparent ) and 1 ( opaque )"
matplotlib.pyplot.matshow,aspect,"If ' auto ' , changes the image aspect ratio to match that of the axes ."
matplotlib.pyplot.matshow,cmap,"If None , default to rc image.cmap value .|||If None , default to rc image.cmap value . cmap is ignored when X has RGB(A ) information"
matplotlib.pyplot.matshow,extent,"The location , in data-coordinates , of the lower-left and upper-right corners . If None , the image is positioned such that the pixel centers fall on zero-based ( row , column ) indices .|||The location , in data-coordinates , of the lower-left and upper-right corners ."
matplotlib.pyplot.matshow,fignum,"With the exception of fignum , keyword arguments are passed to imshow ( ) . You may set the origin kwarg to "" lower "" if you want the first row in the array to be at the bottom instead of the top .|||With the exception of fignum , keyword arguments are passed to imshow ( ) ."
matplotlib.pyplot.matshow,filternorm,"A parameter for the antigrain image resize filter . From the antigrain documentation , if filternorm = 1 , the filter normalizes integer values and corrects the rounding errors . It does n't do anything with the source floating point values , it corrects only integers according to the rule of 1.0 which means that any sum of pixel weights must be equal to 1.0 . So , the filter function must produce a graph of the proper shape .|||A parameter for the antigrain image resize filter ."
matplotlib.pyplot.matshow,filterrad,"The filter radius for filters that have a radius parameter , i.e. when interpolation is one of : ' sinc ' , ' lanczos ' or ' blackman '"
matplotlib.pyplot.matshow,interpolation,"Acceptable values are ' none ' , ' nearest ' , ' bilinear ' , ' bicubic ' , ' spline16 ' , ' spline36 ' , ' hanning ' , ' hamming ' , ' hermite ' , ' kaiser ' , ' quadric ' , ' catrom ' , ' gaussian ' , ' bessel ' , ' mitchell ' , ' sinc ' , ' lanczos '"
matplotlib.pyplot.matshow,norm,"A Normalize instance is used to scale luminance data to 0 , 1 . If None , use the default func:normalize . norm is only used if X is an array of floats .|||A Normalize instance is used to scale luminance data to 0 , 1 ."
matplotlib.pyplot.matshow,origin,"Place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes .|||With the exception of fignum , keyword arguments are passed to imshow ( ) . You may set the origin kwarg to "" lower "" if you want the first row in the array to be at the bottom instead of the top .|||With the exception of fignum , keyword arguments are passed to imshow ( ) .|||Place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes . If None , default to rc image.origin ."
matplotlib.pyplot.matshow,shape,For raw buffer images
matplotlib.pyplot.matshow,"vmin, vmax","vmin and vmax are used in conjunction with norm to normalize luminance data .|||vmin and vmax are used in conjunction with norm to normalize luminance data . Note if you pass a norm instance , your settings for vmin and vmax will be ignored ."
matplotlib.pyplot.pause,interval,Pause for interval seconds .
matplotlib.pyplot.pcolor,C,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X , Y and C may be masked arrays . If either C[i , j ] , or one of the vertices surrounding C[i,j ] ( X or Y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||C is the array of color values .|||MATLAB pcolor ( ) always discards the last row and column of C , but matplotlib displays the last row and column if X and Y are not specified , or if X and Y have one more row and column than C .|||X , Y and C may be masked arrays .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||Ideally the dimensions of X and Y should be one greater than those of C ; if the dimensions are the same , then the last row and column of C will be ignored ."
matplotlib.pyplot.pcolor,C*(*y,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed ."
matplotlib.pyplot.pcolor,None,"If None , the rc setting is used by default . If ' none ' , edges will not be visible . An mpl color or sequence of colors will set the edge color|||the alpha blending value|||vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||A matplotlib.colors.Colormap instance . If None , use rc settings .|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( ) .|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 .|||vmin and vmax are used in conjunction with norm to normalize luminance data .|||If None , the rc setting is used by default .|||A matplotlib.colors.Colormap instance ."
matplotlib.pyplot.pcolor,X,"If either or both of X and Y are 1-D arrays or column vectors , they will be expanded as needed into the appropriate 2-D arrays , making a rectangular grid .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X , Y and C may be masked arrays . If either C[i , j ] , or one of the vertices surrounding C[i,j ] ( X or Y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :|||MATLAB pcolor ( ) always discards the last row and column of C , but matplotlib displays the last row and column if X and Y are not specified , or if X and Y have one more row and column than C .|||X , Y and C may be masked arrays .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||Ideally the dimensions of X and Y should be one greater than those of C ; if the dimensions are the same , then the last row and column of C will be ignored ."
matplotlib.pyplot.pcolor,Y,"If either or both of X and Y are 1-D arrays or column vectors , they will be expanded as needed into the appropriate 2-D arrays , making a rectangular grid .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X , Y and C may be masked arrays . If either C[i , j ] , or one of the vertices surrounding C[i,j ] ( X or Y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :|||MATLAB pcolor ( ) always discards the last row and column of C , but matplotlib displays the last row and column if X and Y are not specified , or if X and Y have one more row and column than C .|||X , Y and C may be masked arrays .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||Ideally the dimensions of X and Y should be one greater than those of C ; if the dimensions are the same , then the last row and column of C will be ignored ."
matplotlib.pyplot.pcolor,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.pcolor,agg_filter,set agg_filter fuction .
matplotlib.pyplot.pcolor,alpha,the alpha blending value|||Set the alpha tranparencies of the collection .
matplotlib.pyplot.pcolor,anchor,anchor
matplotlib.pyplot.pcolor,animated,Set the artist 's animation state .
matplotlib.pyplot.pcolor,antialiased,Set the antialiasing state for rendering .
matplotlib.pyplot.pcolor,array,Set the image array from numpy array A
matplotlib.pyplot.pcolor,aspect,aspect
matplotlib.pyplot.pcolor,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.pcolor,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.pyplot.pcolor,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.pcolor,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.pcolor,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.pcolor,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.pcolor,cmap,"set the colormap for luminance data|||A matplotlib.colors.Colormap instance .|||A matplotlib.colors.Colormap instance . If None , use rc settings ."
matplotlib.pyplot.pcolor,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.pcolor,color,Set both the edgecolor and the facecolor .
matplotlib.pyplot.pcolor,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.pcolor,contains,Replace the contains test used by this artist .
matplotlib.pyplot.pcolor,cursor_props,Set the cursor property as
matplotlib.pyplot.pcolor,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.pyplot.pcolor,edgecolors,"If None , the rc setting is used by default . If ' none ' , edges will not be visible . An mpl color or sequence of colors will set the edge color|||If None , the rc setting is used by default ."
matplotlib.pyplot.pcolor,facecolor,Set the facecolor(s ) of the collection .
matplotlib.pyplot.pcolor,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.pcolor,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.pcolor,hatch,Set the hatching pattern
matplotlib.pyplot.pcolor,label,Set the label to s for auto legend .
matplotlib.pyplot.pcolor,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.pyplot.pcolor,linewidth,Set the linewidth(s ) for the collection .
matplotlib.pyplot.pcolor,ncolumns,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed ."
matplotlib.pyplot.pcolor,norm,"set the normalization instance|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( ) .|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 ."
matplotlib.pyplot.pcolor,nrows,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed ."
matplotlib.pyplot.pcolor,offset_position,Set how offsets are applied .
matplotlib.pyplot.pcolor,offsets,Set the offsets for the collection .
matplotlib.pyplot.pcolor,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.pcolor,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.pcolor,position,Set the axes position with
matplotlib.pyplot.pcolor,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.pcolor,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.pcolor,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.pcolor,shading,"If ' faceted ' , a black grid is drawn around each rectangle ; if ' flat ' , edges are not drawn . Default is ' flat ' , contrary to MATLAB . This kwarg is deprecated ; please use ' edgecolors ' instead : shading='flat ' - - edgecolors='none ' shading='faceted - - edgecolors='k '|||If ' faceted ' , a black grid is drawn around each rectangle ; if ' flat ' , edges are not drawn ."
matplotlib.pyplot.pcolor,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.pcolor,sizes,Set the sizes of each member of the collection .
matplotlib.pyplot.pcolor,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.pcolor,snap,Whether to snap the mesh to pixel boundaries .|||Sets the snap setting which may be
matplotlib.pyplot.pcolor,title,Set a title for the axes .
matplotlib.pyplot.pcolor,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.pcolor,url,Sets the url for the artist
matplotlib.pyplot.pcolor,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.pcolor,visible,Set the artist 's visiblity .
matplotlib.pyplot.pcolor,vmax,"vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.pyplot.pcolor,vmin,"vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.pyplot.pcolor,x,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||Note that the column index corresponds to the x - coordinate , and the row index corresponds to y ; for details , see the Grid Orientation section below .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :"
matplotlib.pyplot.pcolor,xlabel,Set the label for the xaxis .
matplotlib.pyplot.pcolor,xlim,Set the data limits for the xaxis
matplotlib.pyplot.pcolor,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.pcolor,xscale,Set the scaling of the x-axis
matplotlib.pyplot.pcolor,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.pcolor,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.pcolor,y,"Note that the column index corresponds to the x - coordinate , and the row index corresponds to y ; for details , see the Grid Orientation section below .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :"
matplotlib.pyplot.pcolor,ylabel,Set the label for the yaxis
matplotlib.pyplot.pcolor,ylim,Set the data limits for the yaxis
matplotlib.pyplot.pcolor,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.pcolor,yscale,Set the scaling of the y-axis
matplotlib.pyplot.pcolor,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.pcolor,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.pcolor,zorder,Set the zorder for the artist .
matplotlib.pyplot.pcolormesh,C,"C may be a masked array , but X and Y may not . Masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .|||C may be a masked array , but X and Y may not ."
matplotlib.pyplot.pcolormesh,None,"the alpha blending value|||A matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 .|||vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||color sequence ] If None , the rc setting is used by default . If ' None ' , edges will not be visible . If ' face ' , edges will have the same color as the faces . An mpl color or sequence of colors will set the edge color|||A matplotlib.colors.Colormap instance . If None , use rc settings .|||vmin and vmax are used in conjunction with norm to normalize luminance data .|||A matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( ) .|||color sequence ]|||A matplotlib.colors.Colormap instance ."
matplotlib.pyplot.pcolormesh,X,"C may be a masked array , but X and Y may not . Masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .|||C may be a masked array , but X and Y may not ."
matplotlib.pyplot.pcolormesh,Y,"C may be a masked array , but X and Y may not . Masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .|||C may be a masked array , but X and Y may not ."
matplotlib.pyplot.pcolormesh,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.pcolormesh,agg_filter,set agg_filter fuction .
matplotlib.pyplot.pcolormesh,alpha,the alpha blending value|||Set the alpha tranparencies of the collection .
matplotlib.pyplot.pcolormesh,anchor,anchor
matplotlib.pyplot.pcolormesh,animated,Set the artist 's animation state .
matplotlib.pyplot.pcolormesh,antialiased,Set the antialiasing state for rendering .
matplotlib.pyplot.pcolormesh,array,Set the image array from numpy array A
matplotlib.pyplot.pcolormesh,aspect,aspect
matplotlib.pyplot.pcolormesh,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.pcolormesh,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.pyplot.pcolormesh,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.pcolormesh,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.pcolormesh,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.pcolormesh,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.pcolormesh,cmap,"C may be a masked array , but X and Y may not . Masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .|||set the colormap for luminance data|||A matplotlib.colors.Colormap instance . If None , use rc settings .|||A matplotlib.colors.Colormap instance .|||C may be a masked array , but X and Y may not ."
matplotlib.pyplot.pcolormesh,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.pcolormesh,color,Set both the edgecolor and the facecolor .
matplotlib.pyplot.pcolormesh,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.pcolormesh,contains,Replace the contains test used by this artist .
matplotlib.pyplot.pcolormesh,cursor_props,Set the cursor property as
matplotlib.pyplot.pcolormesh,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.pyplot.pcolormesh,edgecolors,"color sequence ] If None , the rc setting is used by default . If ' None ' , edges will not be visible . If ' face ' , edges will have the same color as the faces . An mpl color or sequence of colors will set the edge color|||color sequence ]"
matplotlib.pyplot.pcolormesh,facecolor,Set the facecolor(s ) of the collection .
matplotlib.pyplot.pcolormesh,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.pcolormesh,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.pcolormesh,hatch,Set the hatching pattern
matplotlib.pyplot.pcolormesh,label,Set the label to s for auto legend .
matplotlib.pyplot.pcolormesh,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.pyplot.pcolormesh,linewidth,Set the linewidth(s ) for the collection .
matplotlib.pyplot.pcolormesh,norm,"C may be a masked array , but X and Y may not . Masked array support is implemented via cmap and norm ; in contrast , pcolor ( ) simply does not draw quadrilaterals with masked colors or vertices .|||set the normalization instance|||A matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( ) .|||A matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 .|||C may be a masked array , but X and Y may not ."
matplotlib.pyplot.pcolormesh,offset_position,Set how offsets are applied .
matplotlib.pyplot.pcolormesh,offsets,Set the offsets for the collection .
matplotlib.pyplot.pcolormesh,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.pcolormesh,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.pcolormesh,position,Set the axes position with
matplotlib.pyplot.pcolormesh,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.pcolormesh,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.pcolormesh,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.pcolormesh,shading,"' flat ' indicates a solid color for each quad . When ' gouraud ' , each quad will be Gouraud shaded . When gouraud shading , edgecolors is ignored .|||' flat ' indicates a solid color for each quad ."
matplotlib.pyplot.pcolormesh,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.pcolormesh,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.pcolormesh,snap,Sets the snap setting which may be
matplotlib.pyplot.pcolormesh,title,Set a title for the axes .
matplotlib.pyplot.pcolormesh,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.pcolormesh,url,Sets the url for the artist
matplotlib.pyplot.pcolormesh,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.pcolormesh,visible,Set the artist 's visiblity .
matplotlib.pyplot.pcolormesh,vmax,"vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.pyplot.pcolormesh,vmin,"vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.pyplot.pcolormesh,xlabel,Set the label for the xaxis .
matplotlib.pyplot.pcolormesh,xlim,Set the data limits for the xaxis
matplotlib.pyplot.pcolormesh,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.pcolormesh,xscale,Set the scaling of the x-axis
matplotlib.pyplot.pcolormesh,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.pcolormesh,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.pcolormesh,ylabel,Set the label for the yaxis
matplotlib.pyplot.pcolormesh,ylim,Set the data limits for the yaxis
matplotlib.pyplot.pcolormesh,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.pcolormesh,yscale,Set the scaling of the y-axis
matplotlib.pyplot.pcolormesh,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.pcolormesh,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.pcolormesh,zorder,Set the zorder for the artist .
matplotlib.pyplot.phase_spectrum,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.pyplot.phase_spectrum,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.phase_spectrum,agg_filter,set agg_filter fuction .
matplotlib.pyplot.phase_spectrum,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.phase_spectrum,anchor,anchor
matplotlib.pyplot.phase_spectrum,animated,Set the artist 's animation state .
matplotlib.pyplot.phase_spectrum,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.phase_spectrum,aspect,aspect
matplotlib.pyplot.phase_spectrum,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.phase_spectrum,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.phase_spectrum,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.phase_spectrum,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.phase_spectrum,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.phase_spectrum,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.phase_spectrum,color,Set the color of the line
matplotlib.pyplot.phase_spectrum,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.phase_spectrum,contains,Replace the contains test used by this artist .
matplotlib.pyplot.phase_spectrum,cursor_props,Set the cursor property as
matplotlib.pyplot.phase_spectrum,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.phase_spectrum,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.phase_spectrum,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.phase_spectrum,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.phase_spectrum,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.phase_spectrum,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.phase_spectrum,freqs,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.pyplot.phase_spectrum,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.phase_spectrum,hatch,Set the hatching pattern
matplotlib.pyplot.phase_spectrum,label,Set the label to s for auto legend .
matplotlib.pyplot.phase_spectrum,line,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.pyplot.phase_spectrum,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.phase_spectrum,linewidth,Set the line width in points
matplotlib.pyplot.phase_spectrum,marker,Set the line marker
matplotlib.pyplot.phase_spectrum,markeredgecolor,Set the marker edge color
matplotlib.pyplot.phase_spectrum,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.phase_spectrum,markerfacecolor,Set the marker face color .
matplotlib.pyplot.phase_spectrum,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.phase_spectrum,markersize,Set the marker size in points
matplotlib.pyplot.phase_spectrum,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.phase_spectrum,pad_to,Compute the phase spectrum ( unwrapped angle spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the phase spectrum ( unwrapped angle spectrum ) of x .
matplotlib.pyplot.phase_spectrum,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.phase_spectrum,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.phase_spectrum,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.phase_spectrum,position,Set the axes position with
matplotlib.pyplot.phase_spectrum,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.phase_spectrum,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.phase_spectrum,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.phase_spectrum,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.pyplot.phase_spectrum,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.phase_spectrum,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.phase_spectrum,snap,Sets the snap setting which may be
matplotlib.pyplot.phase_spectrum,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.phase_spectrum,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.phase_spectrum,spectrum,"Returns the tuple ( spectrum , freqs , line ) :"
matplotlib.pyplot.phase_spectrum,title,Set a title for the axes .
matplotlib.pyplot.phase_spectrum,transform,set the Transformation instance used by this artist
matplotlib.pyplot.phase_spectrum,url,Sets the url for the artist
matplotlib.pyplot.phase_spectrum,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.phase_spectrum,visible,Set the artist 's visiblity .
matplotlib.pyplot.phase_spectrum,window,"A function or a vector of length NFFT .|||Compute the phase spectrum ( unwrapped angle spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the phase spectrum ( unwrapped angle spectrum ) of x .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.pyplot.phase_spectrum,x,Compute the phase spectrum ( unwrapped angle spectrum ) of x . Data is padded to a length of pad_to and the windowing function window is applied to the signal .|||Compute the phase spectrum ( unwrapped angle spectrum ) of x .
matplotlib.pyplot.phase_spectrum,xdata,Set the data np.array for x
matplotlib.pyplot.phase_spectrum,xlabel,Set the label for the xaxis .
matplotlib.pyplot.phase_spectrum,xlim,Set the data limits for the xaxis
matplotlib.pyplot.phase_spectrum,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.phase_spectrum,xscale,Set the scaling of the x-axis
matplotlib.pyplot.phase_spectrum,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.phase_spectrum,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.phase_spectrum,ydata,Set the data np.array for y
matplotlib.pyplot.phase_spectrum,ylabel,Set the label for the yaxis
matplotlib.pyplot.phase_spectrum,ylim,Set the data limits for the yaxis
matplotlib.pyplot.phase_spectrum,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.phase_spectrum,yscale,Set the scaling of the y-axis
matplotlib.pyplot.phase_spectrum,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.phase_spectrum,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.phase_spectrum,zorder,Set the zorder for the artist .
matplotlib.pyplot.pie,False,"Specify fractions direction , clockwise or counterclockwise .|||Draw a shadow beneath the pie .|||Plot axes frame with the chart ."
matplotlib.pyplot.pie,None,"If not None , is a string or function used to label the wedges with their numeric value .|||If not None , is a string or function used to label the wedges with their numeric value . The label will be placed inside the wedge . If it is a format string , the label will be fmt%pct . If it is a function , it will be called .|||If not None , rotates the start of the pie chart by angle degrees counterclockwise from the x-axis .|||Dict of arguments passed to the wedge objects making the pie .|||If not None , is a len(x ) array which specifies the fraction of the radius with which to offset each wedge .|||Dict of arguments passed to the wedge objects making the pie . For example , you can pass in wedgeprops = { ' linewidth ' :3 } to set the width of the wedge border lines equal to 3 . For more details , look at the doc/arguments of the wedge object . By default clip_on=False .|||A sequence of strings providing the labels for each wedge|||A sequence of matplotlib color args through which the pie chart will cycle .|||If not None , rotates the start of the pie chart by angle|||Dict of arguments to pass to the text objects ."
matplotlib.pyplot.pie,True,"Specify fractions direction , clockwise or counterclockwise .|||Draw a shadow beneath the pie .|||Plot axes frame with the chart ."
matplotlib.pyplot.pie,autopct,"If not None , is a string or function used to label the wedges with their numeric value .|||If not None , is a string or function used to label the wedges with their numeric value . The label will be placed inside the wedge . If it is a format string , the label will be fmt%pct . If it is a function , it will be called ."
matplotlib.pyplot.pie,colors,A sequence of matplotlib color args through which the pie chart will cycle .
matplotlib.pyplot.pie,counterclock,"Specify fractions direction , clockwise or counterclockwise ."
matplotlib.pyplot.pie,explode,"If not None , is a len(x ) array which specifies the fraction of the radius with which to offset each wedge ."
matplotlib.pyplot.pie,frame,Plot axes frame with the chart .
matplotlib.pyplot.pie,labeldistance,The radial distance at which the pie labels are drawn
matplotlib.pyplot.pie,labels,A sequence of strings providing the labels for each wedge
matplotlib.pyplot.pie,pctdistance,The ratio between the center of each pie slice and the start of the text generated by autopct .|||The ratio between the center of each pie slice and the start of the text generated by autopct . Ignored if autopct is None ; default is 0.6 .
matplotlib.pyplot.pie,shadow,Draw a shadow beneath the pie .
matplotlib.pyplot.pie,startangle,"If not None , rotates the start of the pie chart by angle degrees counterclockwise from the x-axis .|||If not None , rotates the start of the pie chart by angle"
matplotlib.pyplot.pie,textprops,Dict of arguments to pass to the text objects .
matplotlib.pyplot.pie,wedgeprops,"Dict of arguments passed to the wedge objects making the pie . For example , you can pass in wedgeprops = { ' linewidth ' :3 } to set the width of the wedge border lines equal to 3 . For more details , look at the doc/arguments of the wedge object . By default clip_on=False .|||Dict of arguments passed to the wedge objects making the pie ."
matplotlib.pyplot.pie,x,"Make a pie chart of array x . The fractional area of each wedge is given by x/sum(x ) . If sum(x ) < = 1 , then the values of x give the fractional area directly and the array will not be normalized . The wedges are plotted counterclockwise , by default starting from the x-axis .|||Make a pie chart of array x ."
matplotlib.pyplot.plot,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.plot,agg_filter,set agg_filter fuction .
matplotlib.pyplot.plot,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.plot,anchor,anchor
matplotlib.pyplot.plot,animated,Set the artist 's animation state .
matplotlib.pyplot.plot,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.plot,args,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :"
matplotlib.pyplot.plot,aspect,aspect
matplotlib.pyplot.plot,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.plot,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.plot,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.plot,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.plot,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.plot,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.plot,color,Set the color of the line
matplotlib.pyplot.plot,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.plot,contains,Replace the contains test used by this artist .
matplotlib.pyplot.plot,cursor_props,Set the cursor property as
matplotlib.pyplot.plot,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.plot,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.plot,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.plot,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.plot,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.plot,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.plot,fmt,"If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :"
matplotlib.pyplot.plot,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.plot,hatch,Set the hatching pattern
matplotlib.pyplot.plot,label,Set the label to s for auto legend .
matplotlib.pyplot.plot,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.plot,linewidth,Set the line width in points
matplotlib.pyplot.plot,marker,Set the line marker
matplotlib.pyplot.plot,markeredgecolor,Set the marker edge color
matplotlib.pyplot.plot,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.plot,markerfacecolor,Set the marker face color .
matplotlib.pyplot.plot,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.plot,markersize,Set the marker size in points
matplotlib.pyplot.plot,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.plot,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.plot,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.plot,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.plot,position,Set the axes position with
matplotlib.pyplot.plot,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.plot,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.plot,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.plot,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.plot,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||Autoscale the view limits using the data limits ."
matplotlib.pyplot.plot,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.plot,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.plot,snap,Sets the snap setting which may be
matplotlib.pyplot.plot,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.plot,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.plot,title,Set a title for the axes .
matplotlib.pyplot.plot,transform,set the Transformation instance used by this artist
matplotlib.pyplot.plot,url,Sets the url for the artist
matplotlib.pyplot.plot,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.plot,visible,Set the artist 's visiblity .
matplotlib.pyplot.plot,x,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted ."
matplotlib.pyplot.plot,xdata,Set the data np.array for x
matplotlib.pyplot.plot,xlabel,Set the label for the xaxis .
matplotlib.pyplot.plot,xlim,Set the data limits for the xaxis
matplotlib.pyplot.plot,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.plot,xscale,Set the scaling of the x-axis
matplotlib.pyplot.plot,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.plot,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.plot,y,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True .|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted ."
matplotlib.pyplot.plot,ydata,Set the data np.array for y
matplotlib.pyplot.plot,ylabel,Set the label for the yaxis
matplotlib.pyplot.plot,ylim,Set the data limits for the yaxis
matplotlib.pyplot.plot,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.plot,yscale,Set the scaling of the y-axis
matplotlib.pyplot.plot,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.plot,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.plot,zorder,Set the zorder for the artist .
matplotlib.pyplot.plot_date,False,"If True , the x - axis will be labeled with dates .|||If True , the y - axis will be labeled with dates ."
matplotlib.pyplot.plot_date,None,"The time zone to use in labeling dates . If None , defaults to rc value .|||The time zone to use in labeling dates ."
matplotlib.pyplot.plot_date,True,"If True , the x - axis will be labeled with dates .|||If True , the y - axis will be labeled with dates ."
matplotlib.pyplot.plot_date,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.plot_date,agg_filter,set agg_filter fuction .
matplotlib.pyplot.plot_date,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.plot_date,anchor,anchor
matplotlib.pyplot.plot_date,animated,Set the artist 's animation state .
matplotlib.pyplot.plot_date,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.plot_date,aspect,aspect
matplotlib.pyplot.plot_date,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.plot_date,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.plot_date,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.plot_date,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.plot_date,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.plot_date,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.plot_date,color,Set the color of the line
matplotlib.pyplot.plot_date,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.plot_date,contains,Replace the contains test used by this artist .
matplotlib.pyplot.plot_date,cursor_props,Set the cursor property as
matplotlib.pyplot.plot_date,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.plot_date,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.plot_date,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.plot_date,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.plot_date,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.plot_date,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.plot_date,fmt,The plot format string .
matplotlib.pyplot.plot_date,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.plot_date,hatch,Set the hatching pattern
matplotlib.pyplot.plot_date,label,Set the label to s for auto legend .
matplotlib.pyplot.plot_date,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.plot_date,linewidth,Set the line width in points
matplotlib.pyplot.plot_date,marker,Set the line marker
matplotlib.pyplot.plot_date,markeredgecolor,Set the marker edge color
matplotlib.pyplot.plot_date,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.plot_date,markerfacecolor,Set the marker face color .
matplotlib.pyplot.plot_date,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.plot_date,markersize,Set the marker size in points
matplotlib.pyplot.plot_date,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.plot_date,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.plot_date,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.plot_date,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.plot_date,position,Set the axes position with
matplotlib.pyplot.plot_date,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.plot_date,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.plot_date,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.plot_date,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.plot_date,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.plot_date,snap,Sets the snap setting which may be
matplotlib.pyplot.plot_date,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.plot_date,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.plot_date,title,Set a title for the axes .
matplotlib.pyplot.plot_date,transform,set the Transformation instance used by this artist
matplotlib.pyplot.plot_date,tz,"The time zone to use in labeling dates . If None , defaults to rc value .|||The time zone to use in labeling dates ."
matplotlib.pyplot.plot_date,url,Sets the url for the artist
matplotlib.pyplot.plot_date,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.plot_date,visible,Set the artist 's visiblity .
matplotlib.pyplot.plot_date,x,"Similar to the plot ( ) command , except the x or y ( or both ) data is considered to be dates , and the axis is labeled accordingly .|||x and/or y can be a sequence of dates represented as float days since 0001-01-01 UTC ."
matplotlib.pyplot.plot_date,xdata,Set the data np.array for x
matplotlib.pyplot.plot_date,xdate,"If True , the x - axis will be labeled with dates ."
matplotlib.pyplot.plot_date,xlabel,Set the label for the xaxis .
matplotlib.pyplot.plot_date,xlim,Set the data limits for the xaxis
matplotlib.pyplot.plot_date,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.plot_date,xscale,Set the scaling of the x-axis
matplotlib.pyplot.plot_date,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.plot_date,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.plot_date,y,"Similar to the plot ( ) command , except the x or y ( or both ) data is considered to be dates , and the axis is labeled accordingly .|||x and/or y can be a sequence of dates represented as float days since 0001-01-01 UTC ."
matplotlib.pyplot.plot_date,ydata,Set the data np.array for y
matplotlib.pyplot.plot_date,ydate,"If True , the y - axis will be labeled with dates ."
matplotlib.pyplot.plot_date,ylabel,Set the label for the yaxis
matplotlib.pyplot.plot_date,ylim,Set the data limits for the yaxis
matplotlib.pyplot.plot_date,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.plot_date,yscale,Set the scaling of the y-axis
matplotlib.pyplot.plot_date,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.plot_date,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.plot_date,zorder,Set the zorder for the artist .
matplotlib.pyplot.plotfile,checkrows,"comments , skiprows , checkrows , delimiter , and names are all passed on to matplotlib.pylab.csv2rec ( ) to load the data into a record array .|||comments , skiprows , checkrows , delimiter , and names"
matplotlib.pyplot.plotfile,cols,"plotfuncs , if not None , is a dictionary mapping identifier to an Axes plotting function as a string .|||plotfuncs , if not None , is a dictionary mapping identifier to an Axes plotting function as a string . Default is ' plot ' , other choices are ' semilogy ' , ' fill ' , ' bar ' , etc. You must use the same type of identifier in the cols vector as you use in the plotfuncs dictionary , e.g. , integer column numbers in both or column names in both . If subplots is False , then including any function such as ' semilogy ' that changes the axis scaling will set the scaling for all columns .|||cols is a sequence of column identifiers to plot .|||cols is a sequence of column identifiers to plot . An identifier is either an int or a string . If it is an int , it indicates the column number . If it is a string , it indicates the column header . matplotlib will make column headers lower case , replace spaces with underscores , and remove all illegal characters ; so ' Adj Close * ' will have name ' adj_close ' ."
matplotlib.pyplot.plotfile,comments,"comments , skiprows , checkrows , delimiter , and names are all passed on to matplotlib.pylab.csv2rec ( ) to load the data into a record array .|||comments , skiprows , checkrows , delimiter , and names"
matplotlib.pyplot.plotfile,delimiter,"comments , skiprows , checkrows , delimiter , and names are all passed on to matplotlib.pylab.csv2rec ( ) to load the data into a record array .|||comments , skiprows , checkrows , delimiter , and names"
matplotlib.pyplot.plotfile,names,"comments , skiprows , checkrows , delimiter , and names are all passed on to matplotlib.pylab.csv2rec ( ) to load the data into a record array .|||comments , skiprows , checkrows , delimiter , and names"
matplotlib.pyplot.plotfile,newfig,"If newfig is True , the plot always will be made in a new figure ; if False , it will be made in the current figure if one exists , else in a new figure ."
matplotlib.pyplot.plotfile,plotfuncs,"plotfuncs , if not None , is a dictionary mapping identifier to an Axes plotting function as a string .|||plotfuncs , if not None , is a dictionary mapping identifier to an Axes plotting function as a string . Default is ' plot ' , other choices are ' semilogy ' , ' fill ' , ' bar ' , etc. You must use the same type of identifier in the cols vector as you use in the plotfuncs dictionary , e.g. , integer column numbers in both or column names in both . If subplots is False , then including any function such as ' semilogy ' that changes the axis scaling will set the scaling for all columns ."
matplotlib.pyplot.plotfile,skiprows,"comments , skiprows , checkrows , delimiter , and names are all passed on to matplotlib.pylab.csv2rec ( ) to load the data into a record array .|||comments , skiprows , checkrows , delimiter , and names"
matplotlib.pyplot.plotfile,subplots,"plotfuncs , if not None , is a dictionary mapping identifier to an Axes plotting function as a string .|||plotfuncs , if not None , is a dictionary mapping identifier to an Axes plotting function as a string . Default is ' plot ' , other choices are ' semilogy ' , ' fill ' , ' bar ' , etc. You must use the same type of identifier in the cols vector as you use in the plotfuncs dictionary , e.g. , integer column numbers in both or column names in both . If subplots is False , then including any function such as ' semilogy ' that changes the axis scaling will set the scaling for all columns ."
matplotlib.pyplot.plotting,anchor,anchor
matplotlib.pyplot.plotting,aspect,aspect
matplotlib.pyplot.plotting,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.plotting,contains,Replace the contains test used by this artist .
matplotlib.pyplot.plotting,cursor_props,Set the cursor property as
matplotlib.pyplot.plotting,label,Set the label to s for auto legend .
matplotlib.pyplot.plotting,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.plotting,position,Set the axes position with
matplotlib.pyplot.plotting,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.plotting,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.plotting,title,Set a title for the axes .
matplotlib.pyplot.plotting,xlabel,Set the label for the xaxis .
matplotlib.pyplot.plotting,xlim,Set the data limits for the xaxis
matplotlib.pyplot.plotting,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.plotting,xscale,Set the scaling of the x-axis
matplotlib.pyplot.plotting,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.plotting,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.plotting,ylabel,Set the label for the yaxis
matplotlib.pyplot.plotting,ylim,Set the data limits for the yaxis
matplotlib.pyplot.plotting,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.plotting,yscale,Set the scaling of the y-axis
matplotlib.pyplot.plotting,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.plotting,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.polar,args,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :"
matplotlib.pyplot.polar,fmt,"If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :"
matplotlib.pyplot.polar,r,"Multiple theta , r arguments are supported , with format strings , as in plot ( ) ."
matplotlib.pyplot.polar,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.polar,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||Autoscale the view limits using the data limits .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.polar,theta,"Multiple theta , r arguments are supported , with format strings , as in plot ( ) ."
matplotlib.pyplot.polar,x,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.polar,y,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.psd,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.pyplot.psd,NFFT,"The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute , with a scaling to correct for power loss due to windowing .|||The power spectral density by Welch 's average periodogram method .|||If len(x ) < NFFT , it will be zero padded to NFFT ."
matplotlib.pyplot.psd,Pxx,"If return_line is False , returns the tuple ( Pxx , freqs ) . If return_line is True , returns the tuple ( Pxx , freqs . line ) :|||For plotting , the power is plotted as for decibels , though Pxx itself is returned .|||If return_line is False , returns the tuple ( Pxx , freqs ) ."
matplotlib.pyplot.psd,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.psd,agg_filter,set agg_filter fuction .
matplotlib.pyplot.psd,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.psd,anchor,anchor
matplotlib.pyplot.psd,animated,Set the artist 's animation state .
matplotlib.pyplot.psd,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.psd,aspect,aspect
matplotlib.pyplot.psd,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.psd,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.psd,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.psd,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.psd,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.psd,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.psd,color,Set the color of the line
matplotlib.pyplot.psd,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.psd,contains,Replace the contains test used by this artist .
matplotlib.pyplot.psd,cursor_props,Set the cursor property as
matplotlib.pyplot.psd,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.psd,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.psd,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.psd,detrend,"The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute , with a scaling to correct for power loss due to windowing .|||The power spectral density by Welch 's average periodogram method ."
matplotlib.pyplot.psd,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.psd,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.psd,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.psd,freqs,"If return_line is False , returns the tuple ( Pxx , freqs ) . If return_line is True , returns the tuple ( Pxx , freqs . line ) :|||If return_line is False , returns the tuple ( Pxx , freqs ) ."
matplotlib.pyplot.psd,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.psd,hatch,Set the hatching pattern
matplotlib.pyplot.psd,label,Set the label to s for auto legend .
matplotlib.pyplot.psd,line,"If return_line is False , returns the tuple ( Pxx , freqs ) . If return_line is True , returns the tuple ( Pxx , freqs . line ) :|||If return_line is False , returns the tuple ( Pxx , freqs ) ."
matplotlib.pyplot.psd,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.psd,linewidth,Set the line width in points
matplotlib.pyplot.psd,marker,Set the line marker
matplotlib.pyplot.psd,markeredgecolor,Set the marker edge color
matplotlib.pyplot.psd,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.psd,markerfacecolor,Set the marker face color .
matplotlib.pyplot.psd,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.psd,markersize,Set the marker size in points
matplotlib.pyplot.psd,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.psd,noverlap,"The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute , with a scaling to correct for power loss due to windowing .|||The power spectral density by Welch 's average periodogram method ."
matplotlib.pyplot.psd,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.psd,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.psd,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.psd,position,Set the axes position with
matplotlib.pyplot.psd,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.psd,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.psd,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.psd,return_line,"If return_line is False , returns the tuple ( Pxx , freqs ) . If return_line is True , returns the tuple ( Pxx , freqs . line ) :|||If return_line is False , returns the tuple ( Pxx , freqs ) ."
matplotlib.pyplot.psd,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.pyplot.psd,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.psd,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.psd,snap,Sets the snap setting which may be
matplotlib.pyplot.psd,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.psd,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.psd,title,Set a title for the axes .
matplotlib.pyplot.psd,transform,set the Transformation instance used by this artist
matplotlib.pyplot.psd,url,Sets the url for the artist
matplotlib.pyplot.psd,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.psd,visible,Set the artist 's visiblity .
matplotlib.pyplot.psd,window,"A function or a vector of length NFFT .|||The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute , with a scaling to correct for power loss due to windowing .|||The power spectral density by Welch 's average periodogram method .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.pyplot.psd,x,"The power spectral density by Welch 's average periodogram method . The vector x is divided into NFFT length segments . Each segment is detrended by function detrend and windowed by function window . noverlap gives the length of the overlap between segments . The of each segment are averaged to compute , with a scaling to correct for power loss due to windowing .|||The power spectral density by Welch 's average periodogram method .|||If len(x ) < NFFT , it will be zero padded to NFFT ."
matplotlib.pyplot.psd,xdata,Set the data np.array for x
matplotlib.pyplot.psd,xlabel,Set the label for the xaxis .
matplotlib.pyplot.psd,xlim,Set the data limits for the xaxis
matplotlib.pyplot.psd,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.psd,xscale,Set the scaling of the x-axis
matplotlib.pyplot.psd,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.psd,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.psd,ydata,Set the data np.array for y
matplotlib.pyplot.psd,ylabel,Set the label for the yaxis
matplotlib.pyplot.psd,ylim,Set the data limits for the yaxis
matplotlib.pyplot.psd,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.psd,yscale,Set the scaling of the y-axis
matplotlib.pyplot.psd,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.psd,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.psd,zorder,Set the zorder for the artist .
matplotlib.pyplot.quiver,C,"U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.pyplot.quiver,None,"For example , if scale_units is ' inches ' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long . If scale_units is ' width ' , then the vector will be half the width of the axes . If scale_units is ' x ' then the vector will be 0.5 x-axis units . To plot vectors in the x-y plane , with u and v having the same units as x and y , use "" angles='xy ' , scale_units='xy ' , scale=1 "" .|||Data units per arrow length unit , e.g. , m/s per plot width ; a smaller scale parameter makes the arrow longer .|||Data units per arrow length unit , e.g. , m/s per plot width ; a smaller scale parameter makes the arrow longer . If None , a simple autoscaling algorithm is used , based on the average vector length and the number of vectors . The arrow length unit is given by the scale_units parameter|||For example , if scale_units is ' inches ' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long ."
matplotlib.pyplot.quiver,U,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.pyplot.quiver,V,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.pyplot.quiver,X,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.pyplot.quiver,Y,"All arguments may be 1-D or 2-D arrays or sequences . If X and Y are absent , they will be generated as a uniform grid . If U and V are 2-D arrays but X and Y are 1-D , and if len(X ) and len(Y ) match the column and row dimensions of U , then X and Y will be expanded with numpy.meshgrid ( ) .|||All arguments may be 1-D or 2-D arrays or sequences .|||U , V , C may be masked arrays , but masked X , Y are not supported at present ."
matplotlib.pyplot.quiver,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.quiver,agg_filter,set agg_filter fuction .
matplotlib.pyplot.quiver,alpha,Set the alpha tranparencies of the collection .
matplotlib.pyplot.quiver,anchor,anchor
matplotlib.pyplot.quiver,angles,"With the default ' uv ' , the arrow axis aspect ratio is 1 , so that if U*==*V the orientation of the arrow on the plot is 45 degrees CCW from the horizontal axis ( positive to the right ) .|||With the default ' uv ' , the arrow axis aspect ratio is 1 , so that if U*==*V the orientation of the arrow on the plot is 45 degrees CCW from the horizontal axis ( positive to the right ) . With ' xy ' , the arrow points from ( x,y ) to ( x+u , y+v ) . Use this for plotting a gradient field , for example . Alternatively , arbitrary angles may be specified as an array of values in degrees , CCW from the horizontal axis . Note : inverting a data axis will correspondingly invert the arrows only with angles='xy ' ."
matplotlib.pyplot.quiver,animated,Set the artist 's animation state .
matplotlib.pyplot.quiver,antialiased,Set the antialiasing state for rendering .
matplotlib.pyplot.quiver,array,Set the image array from numpy array A
matplotlib.pyplot.quiver,aspect,aspect
matplotlib.pyplot.quiver,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.quiver,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.pyplot.quiver,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.quiver,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.quiver,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.quiver,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.quiver,cmap,set the colormap for luminance data
matplotlib.pyplot.quiver,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.quiver,color,"This is a synonym for the PolyCollection facecolor kwarg .|||This is a synonym for the PolyCollection facecolor kwarg . If C has been set , color has no effect .|||Set both the edgecolor and the facecolor ."
matplotlib.pyplot.quiver,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.quiver,contains,Replace the contains test used by this artist .
matplotlib.pyplot.quiver,cursor_props,Set the cursor property as
matplotlib.pyplot.quiver,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.pyplot.quiver,facecolor,Set the facecolor(s ) of the collection .
matplotlib.pyplot.quiver,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.quiver,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.quiver,hatch,Set the hatching pattern
matplotlib.pyplot.quiver,headaxislength,"The defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength . To make the arrow more pointed , reduce headwidth or increase headlength and headaxislength . To make the head smaller relative to the shaft , scale down all the head parameters . You will probably do best to leave minshaft alone .|||Head length at shaft intersection , default is 4.5|||The defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength ."
matplotlib.pyplot.quiver,headlength,"The defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength . To make the arrow more pointed , reduce headwidth or increase headlength and headaxislength . To make the head smaller relative to the shaft , scale down all the head parameters . You will probably do best to leave minshaft alone .|||The defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength .|||Head length as multiple of shaft width , default is 5"
matplotlib.pyplot.quiver,headwidth,"Head width as multiple of shaft width , default is 3|||The defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength . To make the arrow more pointed , reduce headwidth or increase headlength and headaxislength . To make the head smaller relative to the shaft , scale down all the head parameters . You will probably do best to leave minshaft alone .|||The defaults give a slightly swept-back arrow ; to make the head a triangle , make headaxislength the same as headlength ."
matplotlib.pyplot.quiver,label,Set the label to s for auto legend .
matplotlib.pyplot.quiver,linestyle,Set the patch linestyle|||Set the linestyle(s ) for the collection .
matplotlib.pyplot.quiver,linewidth,Set the linewidth(s ) for the collection .
matplotlib.pyplot.quiver,minlength,"Minimum length as a multiple of shaft width ; if an arrow length is less than this , plot a dot ( hexagon ) of this diameter instead .|||Minimum length as a multiple of shaft width ; if an arrow length is less than this , plot a dot ( hexagon ) of this diameter instead . Default is 1 ."
matplotlib.pyplot.quiver,minshaft,"Length below which arrow scales , in units of head length . Do not set this to less than 1 , or small arrows will look terrible ! Default is 1|||Length below which arrow scales , in units of head length ."
matplotlib.pyplot.quiver,norm,set the normalization instance
matplotlib.pyplot.quiver,offset_position,Set how offsets are applied .
matplotlib.pyplot.quiver,offsets,Set the offsets for the collection .
matplotlib.pyplot.quiver,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.quiver,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.quiver,pivot,"The part of the arrow that is at the grid point ; the arrow rotates about this point , hence the name pivot ."
matplotlib.pyplot.quiver,position,Set the axes position with
matplotlib.pyplot.quiver,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.quiver,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.quiver,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.quiver,scale,"Data units per arrow length unit , e.g. , m/s per plot width ; a smaller scale parameter makes the arrow longer .|||Data units per arrow length unit , e.g. , m/s per plot width ; a smaller scale parameter makes the arrow longer . If None , a simple autoscaling algorithm is used , based on the average vector length and the number of vectors . The arrow length unit is given by the scale_units parameter"
matplotlib.pyplot.quiver,scale_units,"For example , if scale_units is ' inches ' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long . If scale_units is ' width ' , then the vector will be half the width of the axes . If scale_units is ' x ' then the vector will be 0.5 x-axis units . To plot vectors in the x-y plane , with u and v having the same units as x and y , use "" angles='xy ' , scale_units='xy ' , scale=1 "" .|||For example , if scale_units is ' inches ' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long ."
matplotlib.pyplot.quiver,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.quiver,sizes,Set the sizes of each member of the collection .
matplotlib.pyplot.quiver,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.quiver,snap,Sets the snap setting which may be
matplotlib.pyplot.quiver,title,Set a title for the axes .
matplotlib.pyplot.quiver,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.quiver,units,"Arrow units ; the arrow dimensions except for length are in multiples of this unit . ' width ' or ' height ' : the width or height of the axes ' dots ' or ' inches ' : pixels or inches , based on the figure dpi ' x ' , ' y ' , or ' xy ' : X , Y , or sqrt(X^2+Y^2 ) data units The arrows scale differently depending on the units . For ' x ' or ' y ' , the arrows get larger as one zooms in ; for other units , the arrow size is independent of the zoom state . For ' width or ' height ' , the arrow size increases with the width and height of the axes , respectively , when the window is resized ; for ' dots ' or ' inches ' , resizing does not change the arrows .|||For example , if scale_units is ' inches ' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long . If scale_units is ' width ' , then the vector will be half the width of the axes . If scale_units is ' x ' then the vector will be 0.5 x-axis units . To plot vectors in the x-y plane , with u and v having the same units as x and y , use "" angles='xy ' , scale_units='xy ' , scale=1 "" .|||For example , if scale_units is ' inches ' , scale is 2.0 , and ( u,v ) =( 1,0 ) , then the vector will be 0.5 inches long .|||Arrow units ; the arrow dimensions except for length are in multiples of this unit ."
matplotlib.pyplot.quiver,url,Sets the url for the artist
matplotlib.pyplot.quiver,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.quiver,visible,Set the artist 's visiblity .
matplotlib.pyplot.quiver,width,"Shaft width in arrow units ; default depends on choice of units , above , and number of vectors ; a typical starting value is about 0.005 times the width of the plot ."
matplotlib.pyplot.quiver,xlabel,Set the label for the xaxis .
matplotlib.pyplot.quiver,xlim,Set the data limits for the xaxis
matplotlib.pyplot.quiver,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.quiver,xscale,Set the scaling of the x-axis
matplotlib.pyplot.quiver,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.quiver,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.quiver,ylabel,Set the label for the yaxis
matplotlib.pyplot.quiver,ylim,Set the data limits for the yaxis
matplotlib.pyplot.quiver,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.quiver,yscale,Set the scaling of the y-axis
matplotlib.pyplot.quiver,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.quiver,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.quiver,zorder,Set the zorder for the artist .
matplotlib.pyplot.quiverkey,Q,Any additional keyword arguments are used to override vector properties taken from Q .
matplotlib.pyplot.quiverkey,X,"The positioning of the key depends on X , Y , coordinates , and labelpos .|||The positioning of the key depends on X , Y , coordinates , and labelpos . If labelpos is ' N ' or ' S ' , X , Y give the position of the middle of the key arrow . If labelpos is ' E ' , X , Y positions the head , and if labelpos is ' W ' , X , Y positions the tail ; in either of these two cases , X , Y is somewhere in the middle of the arrow+label key object ."
matplotlib.pyplot.quiverkey,Y,"The positioning of the key depends on X , Y , coordinates , and labelpos .|||The positioning of the key depends on X , Y , coordinates , and labelpos . If labelpos is ' N ' or ' S ' , X , Y give the position of the middle of the key arrow . If labelpos is ' E ' , X , Y positions the head , and if labelpos is ' W ' , X , Y positions the tail ; in either of these two cases , X , Y is somewhere in the middle of the arrow+label key object ."
matplotlib.pyplot.quiverkey,color,overrides face and edge colors from Q .
matplotlib.pyplot.quiverkey,coordinates,"The positioning of the key depends on X , Y , coordinates , and labelpos .|||Coordinate system and units for X , Y : ' axes ' and ' figure ' are normalized coordinate systems with 0,0 in the lower left and 1,1 in the upper right ; ' data ' are the axes data coordinates ( used for the locations of the vectors in the quiver plot itself ) ; ' inches ' is position in the figure in inches , with 0,0 at the lower left corner .|||The positioning of the key depends on X , Y , coordinates , and labelpos . If labelpos is ' N ' or ' S ' , X , Y give the position of the middle of the key arrow . If labelpos is ' E ' , X , Y positions the head , and if labelpos is ' W ' , X , Y positions the tail ; in either of these two cases , X , Y is somewhere in the middle of the arrow+label key object ."
matplotlib.pyplot.quiverkey,fontconfig_pattern,Set the properties by parsing a fontconfig pattern .
matplotlib.pyplot.quiverkey,fontproperties,"A dictionary with keyword arguments accepted by the FontProperties initializer : family , style , variant , size , weight"
matplotlib.pyplot.quiverkey,labelcolor,defaults to default Text color .
matplotlib.pyplot.quiverkey,labelpos,"The positioning of the key depends on X , Y , coordinates , and labelpos .|||Position the label above , below , to the right , to the left of the arrow , respectively .|||The positioning of the key depends on X , Y , coordinates , and labelpos . If labelpos is ' N ' or ' S ' , X , Y give the position of the middle of the key arrow . If labelpos is ' E ' , X , Y positions the head , and if labelpos is ' W ' , X , Y positions the tail ; in either of these two cases , X , Y is somewhere in the middle of the arrow+label key object ."
matplotlib.pyplot.quiverkey,labelsep,Distance in inches between the arrow and the label .|||Distance in inches between the arrow and the label . Default is 0.1
matplotlib.pyplot.rc,xtick,"Set the current rc params . Group is the grouping for the rc , e.g. , for lines.linewidth the group is lines , for axes.facecolor , the group is axes , and so on . Group may also be a list or tuple of group names , e.g. , ( xtick , ytick ) . kwargs is a dictionary attribute name/value pairs , e.g. , :|||Set the current rc params ."
matplotlib.pyplot.rc,ytick,"Set the current rc params . Group is the grouping for the rc , e.g. , for lines.linewidth the group is lines , for axes.facecolor , the group is axes , and so on . Group may also be a list or tuple of group names , e.g. , ( xtick , ytick ) . kwargs is a dictionary attribute name/value pairs , e.g. , :|||Set the current rc params ."
matplotlib.pyplot.rgrids,fontproperties,Set the font properties that control the text .
matplotlib.pyplot.rgrids,labels,"If labels is None , the rformatter will be used|||When called with no arguments , rgrid ( ) simply returns the tuple ( lines , labels ) , where lines is an array of radial gridlines ( Line2D instances ) and labels is an array of tick labels ( Text instances ) . When called with arguments , the labels will appear at the specified radial distances and angles .|||When called with no arguments , rgrid ( ) simply returns the tuple ( lines , labels ) , where lines is an array of radial gridlines ( Line2D instances ) and labels is an array of tick labels ( Text instances ) .|||labels , if not None , is a len(radii ) list of strings of the labels to use at each angle ."
matplotlib.pyplot.rgrids,lines,"When called with no arguments , rgrid ( ) simply returns the tuple ( lines , labels ) , where lines is an array of radial gridlines ( Line2D instances ) and labels is an array of tick labels ( Text instances ) .|||When called with no arguments , rgrid ( ) simply returns the tuple ( lines , labels ) , where lines is an array of radial gridlines ( Line2D instances ) and labels is an array of tick labels ( Text instances ) . When called with arguments , the labels will appear at the specified radial distances and angles ."
matplotlib.pyplot.rgrids,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )"
matplotlib.pyplot.rgrids,marker,Set the line marker
matplotlib.pyplot.rgrids,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.rgrids,position,"Set the ( x , y ) position of the text"
matplotlib.pyplot.rgrids,radii,"labels , if not None , is a len(radii ) list of strings of the labels to use at each angle ."
matplotlib.pyplot.rgrids,rotation_mode,set text rotation mode .
matplotlib.pyplot.rgrids,text,Set the text string s
matplotlib.pyplot.rgrids,x,Set the x position of the text
matplotlib.pyplot.rgrids,y,Set the y position of the text
matplotlib.pyplot.savefig,None,The resolution in dots per inch .|||The resolution in dots per inch . If None it will default to the value savefig.dpi in the matplotlibrc file . If ' figure ' it will set the dpi to be the value of the figure .
matplotlib.pyplot.savefig,bbox_extra_artists,A list of extra artists that will be considered when the tight bbox is calculated .
matplotlib.pyplot.savefig,bbox_inches,"Bbox in inches .|||Bbox in inches . Only the given portion of the figure is saved . If ' tight ' , try to figure out the tight bbox of the figure ."
matplotlib.pyplot.savefig,dpi,The resolution in dots per inch .|||The resolution in dots per inch . If None it will default to the value savefig.dpi in the matplotlibrc file . If ' figure ' it will set the dpi to be the value of the figure .
matplotlib.pyplot.savefig,edgecolor,the colors of the figure rectangle
matplotlib.pyplot.savefig,facecolor,the colors of the figure rectangle
matplotlib.pyplot.savefig,format,"One of the file extensions supported by the active backend . Most backends support png , pdf , ps , eps and svg .|||One of the file extensions supported by the active backend ."
matplotlib.pyplot.savefig,frameon,"If True , the figure patch will be colored , if False , the figure background will be transparent . If not provided , the rcParam ' savefig.frameon ' will be used .|||If True , the figure patch will be colored , if False , the figure background will be transparent ."
matplotlib.pyplot.savefig,orientation,not supported on all backends ; currently only on postscript output
matplotlib.pyplot.savefig,pad_inches,Amount of padding around the figure when bbox_inches is ' tight ' .
matplotlib.pyplot.savefig,papertype,"One of ' letter ' , ' legal ' , ' executive ' , ' ledger ' , ' a0 ' through ' a10 ' , ' b0 ' through ' b10 ' . Only supported for postscript output .|||One of ' letter ' , ' legal ' , ' executive ' , ' ledger ' , ' a0 ' through ' a10 ' , ' b0 ' through ' b10 ' ."
matplotlib.pyplot.savefig,transparent,"If True , the axes patches will all be transparent ; the figure patch will also be transparent unless facecolor and/or edgecolor are specified via kwargs . This is useful , for example , for displaying a plot on top of a colored background on a web page . The transparency of these patches will be restored to their original values upon exit of this function .|||If True , the axes patches will all be transparent ; the figure patch will also be transparent unless facecolor and/or edgecolor are specified via kwargs ."
matplotlib.pyplot.sca,ax,The current Figure is updated to the parent of ax .|||Set the current Axes instance to ax .
matplotlib.pyplot.scatter,alpha,"The alpha blending value , between 0 ( transparent ) and 1 ( opaque )|||Set the alpha tranparencies of the collection ."
matplotlib.pyplot.scatter,array,Set the image array from numpy array A
matplotlib.pyplot.scatter,c,"c can be a single color format string , or a sequence of color specifications of length N , or a sequence of N numbers to be mapped to colors using the cmap and norm specified via kwargs ( see below ) . Note that c should not be a single numeric RGB or RGBA sequence because that is indistinguishable from an array of values to be colormapped . c can be a 2-D array in which the rows are RGB or RGBA , however , including the case of a single row to specify the same color for all points .|||c can be a single color format string , or a sequence of color specifications of length N , or a sequence of N numbers to be mapped to colors using the cmap and norm specified via kwargs ( see below ) ."
matplotlib.pyplot.scatter,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.pyplot.scatter,cmap,"A Colormap instance or registered name . cmap is only used if c is an array of floats . If None , defaults to rc image.cmap .|||A Colormap instance or registered name ."
matplotlib.pyplot.scatter,contains,Replace the contains test used by this artist .
matplotlib.pyplot.scatter,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.pyplot.scatter,edgecolors,"If None , defaults to ( patch.edgecolor ) .|||If None , defaults to ( patch.edgecolor ) . If ' face ' , the edge color will always be the same as the face color . If it is ' none ' , the patch boundary will not be drawn . For non-filled markers , the edgecolors kwarg is ignored ; color is determined by c."
matplotlib.pyplot.scatter,facecolor,Set the facecolor(s ) of the collection .
matplotlib.pyplot.scatter,hatch,Set the hatching pattern
matplotlib.pyplot.scatter,label,Set the label to s for auto legend .
matplotlib.pyplot.scatter,linestyle,Set the linestyle(s ) for the collection .
matplotlib.pyplot.scatter,linewidth,Set the linewidth(s ) for the collection .
matplotlib.pyplot.scatter,linewidths,"If None , defaults to ( lines.linewidth , ) ."
matplotlib.pyplot.scatter,marker,See markers for more information on the different styles of markers scatter supports . marker can be either an instance of the class or the text shorthand for a particular marker .|||See markers for more information on the different styles of markers scatter supports .
matplotlib.pyplot.scatter,norm,"A Normalize instance is used to scale luminance data to 0 , 1 . norm is only used if c is an array of floats . If None , use the default normalize ( ) .|||A Normalize instance is used to scale luminance data to 0 , 1 ."
matplotlib.pyplot.scatter,offset_position,Set how offsets are applied .
matplotlib.pyplot.scatter,offsets,Set the offsets for the collection .
matplotlib.pyplot.scatter,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.scatter,s,size in points^2 .
matplotlib.pyplot.scatter,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.scatter,"vmin, vmax","vmin and vmax are used in conjunction with norm to normalize luminance data . If either are None , the min and max of the color array is used . Note if you pass a norm instance , your settings for vmin and vmax will be ignored .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.pyplot.scatter,"x, y",Input data
matplotlib.pyplot.semilogx,None,"The location of the minor xticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see set_xscale ( ) for details ."
matplotlib.pyplot.semilogx,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.semilogx,agg_filter,set agg_filter fuction .
matplotlib.pyplot.semilogx,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.semilogx,anchor,anchor
matplotlib.pyplot.semilogx,animated,Set the artist 's animation state .
matplotlib.pyplot.semilogx,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.semilogx,args,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :"
matplotlib.pyplot.semilogx,aspect,aspect
matplotlib.pyplot.semilogx,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.semilogx,basex,Base of the x logarithm
matplotlib.pyplot.semilogx,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.semilogx,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.semilogx,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.semilogx,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.semilogx,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.semilogx,color,Set the color of the line
matplotlib.pyplot.semilogx,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.semilogx,contains,Replace the contains test used by this artist .
matplotlib.pyplot.semilogx,cursor_props,Set the cursor property as
matplotlib.pyplot.semilogx,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.semilogx,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.semilogx,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.semilogx,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.semilogx,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.semilogx,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.semilogx,fmt,"If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :"
matplotlib.pyplot.semilogx,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.semilogx,hatch,Set the hatching pattern
matplotlib.pyplot.semilogx,label,Set the label to s for auto legend .
matplotlib.pyplot.semilogx,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.semilogx,linewidth,Set the line width in points
matplotlib.pyplot.semilogx,marker,Set the line marker
matplotlib.pyplot.semilogx,markeredgecolor,Set the marker edge color
matplotlib.pyplot.semilogx,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.semilogx,markerfacecolor,Set the marker face color .
matplotlib.pyplot.semilogx,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.semilogx,markersize,Set the marker size in points
matplotlib.pyplot.semilogx,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.semilogx,nonposx,"Non-positive values in x can be masked as invalid , or clipped to a very small positive number"
matplotlib.pyplot.semilogx,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.semilogx,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.semilogx,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.semilogx,position,Set the axes position with
matplotlib.pyplot.semilogx,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.semilogx,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.semilogx,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.semilogx,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.semilogx,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||Autoscale the view limits using the data limits .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.semilogx,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.semilogx,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.semilogx,snap,Sets the snap setting which may be
matplotlib.pyplot.semilogx,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.semilogx,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.semilogx,subsx,"The location of the minor xticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see set_xscale ( ) for details ."
matplotlib.pyplot.semilogx,title,Set a title for the axes .
matplotlib.pyplot.semilogx,transform,set the Transformation instance used by this artist
matplotlib.pyplot.semilogx,url,Sets the url for the artist
matplotlib.pyplot.semilogx,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.semilogx,visible,Set the artist 's visiblity .
matplotlib.pyplot.semilogx,x,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||Make a plot with log scaling on the x axis .|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.semilogx,xdata,Set the data np.array for x
matplotlib.pyplot.semilogx,xlabel,Set the label for the xaxis .
matplotlib.pyplot.semilogx,xlim,Set the data limits for the xaxis
matplotlib.pyplot.semilogx,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.semilogx,xscale,Set the scaling of the x-axis
matplotlib.pyplot.semilogx,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.semilogx,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.semilogx,y,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.semilogx,ydata,Set the data np.array for y
matplotlib.pyplot.semilogx,ylabel,Set the label for the yaxis
matplotlib.pyplot.semilogx,ylim,Set the data limits for the yaxis
matplotlib.pyplot.semilogx,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.semilogx,yscale,Set the scaling of the y-axis
matplotlib.pyplot.semilogx,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.semilogx,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.semilogx,zorder,Set the zorder for the artist .
matplotlib.pyplot.semilogy,None,"The location of the minor yticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see set_yscale ( ) for details ."
matplotlib.pyplot.semilogy,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.semilogy,agg_filter,set agg_filter fuction .
matplotlib.pyplot.semilogy,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.semilogy,anchor,anchor
matplotlib.pyplot.semilogy,animated,Set the artist 's animation state .
matplotlib.pyplot.semilogy,antialiased,True if line should be drawin with antialiased rendering
matplotlib.pyplot.semilogy,aspect,aspect
matplotlib.pyplot.semilogy,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.semilogy,basey,Base of the y logarithm
matplotlib.pyplot.semilogy,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.semilogy,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.semilogy,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.semilogy,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.semilogy,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.semilogy,color,Set the color of the line
matplotlib.pyplot.semilogy,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.semilogy,contains,Replace the contains test used by this artist .
matplotlib.pyplot.semilogy,cursor_props,Set the cursor property as
matplotlib.pyplot.semilogy,dash_capstyle,Set the cap style for dashed linestyles
matplotlib.pyplot.semilogy,dash_joinstyle,Set the join style for dashed linestyles ACCEPTS
matplotlib.pyplot.semilogy,dashes,"Set the dash sequence , sequence of dashes with on off ink in points ."
matplotlib.pyplot.semilogy,drawstyle,Set the drawstyle of the plot
matplotlib.pyplot.semilogy,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.semilogy,fillstyle,Set the marker fill style ; ' full ' means fill the whole marker .
matplotlib.pyplot.semilogy,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.semilogy,hatch,Set the hatching pattern
matplotlib.pyplot.semilogy,label,Set the label to s for auto legend .
matplotlib.pyplot.semilogy,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Set the patch linestyle"
matplotlib.pyplot.semilogy,linewidth,Set the line width in points
matplotlib.pyplot.semilogy,marker,Set the line marker
matplotlib.pyplot.semilogy,markeredgecolor,Set the marker edge color
matplotlib.pyplot.semilogy,markeredgewidth,Set the marker edge width in points
matplotlib.pyplot.semilogy,markerfacecolor,Set the marker face color .
matplotlib.pyplot.semilogy,markerfacecoloralt,Set the alternate marker face color .
matplotlib.pyplot.semilogy,markersize,Set the marker size in points
matplotlib.pyplot.semilogy,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.semilogy,nonposy,"Non-positive values in y can be masked as invalid , or clipped to a very small positive number"
matplotlib.pyplot.semilogy,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.semilogy,picker,Sets the event picker details for the line .|||Set the epsilon for picking used by this artist
matplotlib.pyplot.semilogy,pickradius,Sets the pick radius used for containment tests
matplotlib.pyplot.semilogy,position,Set the axes position with
matplotlib.pyplot.semilogy,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.semilogy,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.semilogy,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.semilogy,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.semilogy,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.semilogy,snap,Sets the snap setting which may be
matplotlib.pyplot.semilogy,solid_capstyle,Set the cap style for solid linestyles
matplotlib.pyplot.semilogy,solid_joinstyle,Set the join style for solid linestyles ACCEPTS
matplotlib.pyplot.semilogy,subsy,"The location of the minor yticks ; None defaults to autosubs , which depend on the number of decades in the plot ; see set_yscale ( ) for details ."
matplotlib.pyplot.semilogy,title,Set a title for the axes .
matplotlib.pyplot.semilogy,transform,set the Transformation instance used by this artist
matplotlib.pyplot.semilogy,url,Sets the url for the artist
matplotlib.pyplot.semilogy,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.semilogy,visible,Set the artist 's visiblity .
matplotlib.pyplot.semilogy,xdata,Set the data np.array for x
matplotlib.pyplot.semilogy,xlabel,Set the label for the xaxis .
matplotlib.pyplot.semilogy,xlim,Set the data limits for the xaxis
matplotlib.pyplot.semilogy,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.semilogy,xscale,Set the scaling of the x-axis
matplotlib.pyplot.semilogy,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.semilogy,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.semilogy,y,Make a plot with log scaling on the y axis .
matplotlib.pyplot.semilogy,ydata,Set the data np.array for y
matplotlib.pyplot.semilogy,ylabel,Set the label for the yaxis
matplotlib.pyplot.semilogy,ylim,Set the data limits for the yaxis
matplotlib.pyplot.semilogy,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.semilogy,yscale,Set the scaling of the y-axis
matplotlib.pyplot.semilogy,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.semilogy,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.semilogy,zorder,Set the zorder for the artist .
matplotlib.pyplot.set_cmap,cmap,"cmap must be a Colormap instance , or the name of a registered colormap ."
matplotlib.pyplot.show,block,"A single experimental keyword argument , block , may be set to True or False to override the blocking behavior described above ."
matplotlib.pyplot.specgram,Fs,"The sampling frequency ( samples per time unit ) .|||The sampling frequency ( samples per time unit ) . It is used to calculate the Fourier frequencies , freqs , in cycles per time unit . The default value is 2 ."
matplotlib.pyplot.specgram,NFFT,"Compute and plot a spectrogram of data in x .|||Compute and plot a spectrogram of data in x . Data are split into NFFT length segments and the spectrum of each section is computed . The windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap . The spectrogram is plotted as a colormap ( using imshow ) ."
matplotlib.pyplot.specgram,freqs,"Returns the tuple ( spectrum , freqs , t , im ) :"
matplotlib.pyplot.specgram,im,"Returns the tuple ( spectrum , freqs , t , im ) :"
matplotlib.pyplot.specgram,noverlap,"Compute and plot a spectrogram of data in x .|||Compute and plot a spectrogram of data in x . Data are split into NFFT length segments and the spectrum of each section is computed . The windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap . The spectrogram is plotted as a colormap ( using imshow ) ."
matplotlib.pyplot.specgram,sides,"Specifies which sides of the spectrum to return . Default gives the default behavior , which returns one-sided for real data and both for complex data . ' onesided ' forces the return of a one-sided spectrum , while ' twosided ' forces two-sided .|||Specifies which sides of the spectrum to return ."
matplotlib.pyplot.specgram,spectrum,"Returns the tuple ( spectrum , freqs , t , im ) :"
matplotlib.pyplot.specgram,t,"Returns the tuple ( spectrum , freqs , t , im ) :"
matplotlib.pyplot.specgram,window,"A function or a vector of length NFFT .|||Compute and plot a spectrogram of data in x .|||Compute and plot a spectrogram of data in x . Data are split into NFFT length segments and the spectrum of each section is computed . The windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap . The spectrogram is plotted as a colormap ( using imshow ) .|||A function or a vector of length NFFT . To create window vectors see window_hanning ( ) , window_none ( ) , numpy.blackman ( ) , numpy.hamming ( ) , numpy.bartlett ( ) , scipy.signal ( ) , scipy.signal.get_window ( ) , etc. The default is window_hanning ( ) . If a function is passed as the argument , it must take a data segment as an argument and return the windowed version of the segment ."
matplotlib.pyplot.specgram,x,"Compute and plot a spectrogram of data in x .|||Compute and plot a spectrogram of data in x . Data are split into NFFT length segments and the spectrum of each section is computed . The windowing function window is applied to each segment , and the amount of overlap of each segment is specified with noverlap . The spectrogram is plotted as a colormap ( using imshow ) ."
matplotlib.pyplot.spy,Z,The array to be plotted .|||spy(Z ) plots the sparsity pattern of the 2-D array Z .
matplotlib.pyplot.spy,aspect,"If ' equal ' , and extent is None , changes the axes aspect ratio to match that of the image . If extent is not None , the axes aspect ratio is changed to match that of the extent .|||If ' equal ' , and extent is None , changes the axes aspect ratio to match that of the image ."
matplotlib.pyplot.spy,origin,"Place the [ 0,0 ] index of the array in the upper left or lower left corner of the axes ."
matplotlib.pyplot.spy,precision,"If precision is 0 , any non-zero value will be plotted ; else , values of will be plotted ."
matplotlib.pyplot.stackplot,baseline,Method used to calculate the baseline . ' zero ' is just a simple stacked plot . ' sym ' is symmetric around zero and is sometimes called ThemeRiver . ' wiggle ' minimizes the sum of the squared slopes . ' weighted_wiggle ' does the same but weights to account for size of each layer . It is also called Streamgraph-layout . More details can be found at http://www.leebyron.com/else/streamgraph/ .|||Method used to calculate the baseline .
matplotlib.pyplot.stackplot,colors,used to colour the stacked areas . All other keyword arguments are passed to fill_between ( )|||used to colour the stacked areas .
matplotlib.pyplot.stackplot,y,"1xN .|||1xN . The data is assumed to be unstacked . Each of the following calls is legal : stackplot(x , y ) # where y is MxN stackplot(x , y1 , y2 , y3 , y4 ) # where y1 , y2 , y3 , y4 , are all 1xNm"
matplotlib.pyplot.stem,basefmt,"A stem plot plots vertical lines ( using linefmt ) at each x|||A stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . A horizontal line at 0 is is plotted using basefmt ."
matplotlib.pyplot.stem,baseline,"Return value is a tuple ( markerline , stemlines , baseline ) ."
matplotlib.pyplot.stem,linefmt,"A stem plot plots vertical lines ( using linefmt ) at each x|||A stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . A horizontal line at 0 is is plotted using basefmt ."
matplotlib.pyplot.stem,markerfmt,"A stem plot plots vertical lines ( using linefmt ) at each x|||A stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . A horizontal line at 0 is is plotted using basefmt ."
matplotlib.pyplot.stem,markerline,"Return value is a tuple ( markerline , stemlines , baseline ) ."
matplotlib.pyplot.stem,stemlines,"Return value is a tuple ( markerline , stemlines , baseline ) ."
matplotlib.pyplot.stem,x,"If no x values are provided , the default is ( 0 , 1 , ...|||A stem plot plots vertical lines ( using linefmt ) at each x|||A stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . A horizontal line at 0 is is plotted using basefmt .|||If no x values are provided , the default is ( 0 , 1 , ... , len(y ) - 1 )"
matplotlib.pyplot.stem,y,"A stem plot plots vertical lines ( using linefmt ) at each x|||A stem plot plots vertical lines ( using linefmt ) at each x location from the baseline to y , and places a marker there using markerfmt . A horizontal line at 0 is is plotted using basefmt ."
matplotlib.pyplot.step,args,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :"
matplotlib.pyplot.step,fmt,"If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :"
matplotlib.pyplot.step,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.step,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||Autoscale the view limits using the data limits .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.step,x,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||x and y must be 1-D sequences , and it is assumed , but not checked , that x is uniformly increasing .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.step,y,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||x and y must be 1-D sequences , and it is assumed , but not checked , that x is uniformly increasing .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.streamplot,arrowsize,Factor scale arrow size .
matplotlib.pyplot.streamplot,arrowstyle,Arrow style specification .|||Arrow style specification . See FancyArrowPatch .
matplotlib.pyplot.streamplot,cmap,Colormap used to plot streamlines and arrows .|||Colormap used to plot streamlines and arrows . Only necessary when using an array input for color .
matplotlib.pyplot.streamplot,color,"Streamline color . When given an array with the same shape as velocities , color values are converted to colors using cmap .|||Streamline color ."
matplotlib.pyplot.streamplot,density,"Controls the closeness of streamlines . When density = 1 , the domain is divided into a 30x30 grid---density linearly scales this grid . Each cell in the grid can have , at most , one traversing streamline . For different densities in each direction , use [ density_x , density_y ] .|||Controls the closeness of streamlines ."
matplotlib.pyplot.streamplot,linewidth,vary linewidth when given a 2d array with the same shape as velocities .
matplotlib.pyplot.streamplot,minlength,Minimum length of streamline in axes coordinates .
matplotlib.pyplot.streamplot,norm,"Normalize object used to scale luminance data to 0 , 1 .|||Normalize object used to scale luminance data to 0 , 1 . If None , stretch ( min , max ) to ( 0 , 1 ) . Only necessary when color is an array ."
matplotlib.pyplot.streamplot,start_points,"Coordinates of starting points for the streamlines . In data coordinates , the same as the x and y arrays .|||Coordinates of starting points for the streamlines ."
matplotlib.pyplot.streamplot,u,"x and y-velocities .|||x and y-velocities . Number of rows should match length of y , and the number of columns should match x."
matplotlib.pyplot.streamplot,v,"x and y-velocities .|||x and y-velocities . Number of rows should match length of y , and the number of columns should match x."
matplotlib.pyplot.streamplot,x,an evenly spaced grid .
matplotlib.pyplot.streamplot,y,an evenly spaced grid .
matplotlib.pyplot.streamplot,zorder,any number
matplotlib.pyplot.subplot,axisbg,"The background color of the subplot , which can be any valid color specifier .|||The background color of the subplot , which can be any valid color specifier . See matplotlib.colors for more information ."
matplotlib.pyplot.subplot,ncols,"Where nrows and ncols are used to notionally split the figure into nrows * ncols sub-axes , and plot_number is used to identify the particular subplot that this function is to create within the notional grid .|||Where nrows and ncols are used to notionally split the figure into nrows * ncols sub-axes , and plot_number is used to identify the particular subplot that this function is to create within the notional grid . plot_number starts at 1 , increments across rows first and has a maximum of nrows * ncols .|||In the case when nrows , ncols and plot_number are all less than 10 , a convenience exists , such that the a 3 digit number can be given instead , where the hundreds represent nrows , the tens represent ncols and the units represent plot_number .|||In the case when nrows , ncols and plot_number are all less than 10 , a convenience exists , such that the a 3 digit number can be given instead , where the hundreds represent nrows , the tens represent ncols and the units represent plot_number . For instance :"
matplotlib.pyplot.subplot,nrows,"Where nrows and ncols are used to notionally split the figure into nrows * ncols sub-axes , and plot_number is used to identify the particular subplot that this function is to create within the notional grid .|||Where nrows and ncols are used to notionally split the figure into nrows * ncols sub-axes , and plot_number is used to identify the particular subplot that this function is to create within the notional grid . plot_number starts at 1 , increments across rows first and has a maximum of nrows * ncols .|||In the case when nrows , ncols and plot_number are all less than 10 , a convenience exists , such that the a 3 digit number can be given instead , where the hundreds represent nrows , the tens represent ncols and the units represent plot_number .|||In the case when nrows , ncols and plot_number are all less than 10 , a convenience exists , such that the a 3 digit number can be given instead , where the hundreds represent nrows , the tens represent ncols and the units represent plot_number . For instance :"
matplotlib.pyplot.subplot,plot_number,"Where nrows and ncols are used to notionally split the figure into nrows * ncols sub-axes , and plot_number is used to identify the particular subplot that this function is to create within the notional grid .|||Where nrows and ncols are used to notionally split the figure into nrows * ncols sub-axes , and plot_number is used to identify the particular subplot that this function is to create within the notional grid . plot_number starts at 1 , increments across rows first and has a maximum of nrows * ncols .|||In the case when nrows , ncols and plot_number are all less than 10 , a convenience exists , such that the a 3 digit number can be given instead , where the hundreds represent nrows , the tens represent ncols and the units represent plot_number .|||In the case when nrows , ncols and plot_number are all less than 10 , a convenience exists , such that the a 3 digit number can be given instead , where the hundreds represent nrows , the tens represent ncols and the units represent plot_number . For instance :"
matplotlib.pyplot.subplot,polar,A boolean flag indicating whether the subplot plot should be a polar projection .|||A boolean flag indicating whether the subplot plot should be a polar projection . Defaults to False .
matplotlib.pyplot.subplot,projection,A string giving the name of a custom projection to be used for the subplot . This projection must have been previously registered . See matplotlib.projections .|||A string giving the name of a custom projection to be used for the subplot .
matplotlib.pyplot.subplot,rect,The axes is added at position rect specified by :
matplotlib.pyplot.subplot2grid,colspan,"Create a subplot in a grid . The grid is specified by shape , at location of loc , spanning rowspan , colspan cells in each direction . The index for loc is 0-based .|||Create a subplot in a grid ."
matplotlib.pyplot.subplot2grid,loc,"Create a subplot in a grid . The grid is specified by shape , at location of loc , spanning rowspan , colspan cells in each direction . The index for loc is 0-based .|||Create a subplot in a grid ."
matplotlib.pyplot.subplot2grid,rowspan,"Create a subplot in a grid . The grid is specified by shape , at location of loc , spanning rowspan , colspan cells in each direction . The index for loc is 0-based .|||Create a subplot in a grid ."
matplotlib.pyplot.subplot2grid,shape,"Create a subplot in a grid . The grid is specified by shape , at location of loc , spanning rowspan , colspan cells in each direction . The index for loc is 0-based .|||Create a subplot in a grid ."
matplotlib.pyplot.subplots,args,"If the figure already has a subplot with key ( args , kwargs ) then it will simply make that subplot current and return it ."
matplotlib.pyplot.subplots,dpi,"resolution of the figure .|||resolution of the figure . If not provided , defaults to rc figure.dpi ."
matplotlib.pyplot.subplots,edgecolor :,"the border color .|||the border color . If not provided , defaults to rc figure.edgecolor"
matplotlib.pyplot.subplots,facecolor :,"the background color .|||the background color . If not provided , defaults to rc figure.facecolor"
matplotlib.pyplot.subplots,fig_kw,Dict with keywords passed to the figure ( ) call .|||Dict with keywords passed to the figure ( ) call . Note that all keywords not recognized above will be automatically included here .
matplotlib.pyplot.subplots,figsize,"width , height in inches . If not provided , defaults to rc figure.figsize .|||width , height in inches ."
matplotlib.pyplot.subplots,gridspec_kw,Dict with keywords passed to the GridSpec constructor used to create the grid the subplots are placed on .
matplotlib.pyplot.subplots,ncols,Number of columns of the subplot grid .|||Number of columns of the subplot grid . Defaults to 1 .
matplotlib.pyplot.subplots,nrows,Number of rows of the subplot grid . Defaults to 1 .|||Number of rows of the subplot grid .
matplotlib.pyplot.subplots,num,"If not provided , a new figure will be created , and the figure number will be incremented . The figure objects holds this number in a number attribute . If num is provided , and a figure with this id already exists , make it active , and returns a reference to it . If this figure does not exists , create it and returns it . If num is a string , the window title will be set to this figure 's num .|||If not provided , a new figure will be created , and the figure number will be incremented ."
matplotlib.pyplot.subplots,polar=True,"kwargs are legal Axes kwargs plus projection , which chooses a projection type for the axes .|||kwargs are legal Axes kwargs plus projection , which chooses a projection type for the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) ."
matplotlib.pyplot.subplots,projection,"Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height . kwargs are legal Axes kwargs plus projection which sets the projection type of the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) . Typical usage :|||In addition to projection , the following kwargs are supported :|||Add an axes at position rect [ left , bottom , width , height ] where all quantities are in fractions of figure width and height .|||kwargs are legal Axes kwargs plus projection , which chooses a projection type for the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) .|||kwargs are legal Axes kwargs plus projection , which chooses a projection type for the axes ."
matplotlib.pyplot.subplots,projection='polar',"kwargs are legal Axes kwargs plus projection , which chooses a projection type for the axes .|||kwargs are legal Axes kwargs plus projection , which chooses a projection type for the axes . ( For backward compatibility , polar=True may also be provided , which is equivalent to projection='polar ' ) . Valid values for projection are :[ u'aitoff ' , u'hammer ' , u'lambert ' , u ' mollweide ' , u'polar ' , u ' rectilinear ' ] . Some of these projections support additional kwargs , which may be provided to add_axes ( ) ."
matplotlib.pyplot.subplots,sharex,"If True , the X axis will be shared amongst all subplots . If True and you have multiple rows , the x tick labels on all but the last row of plots will have visible set to False If a string must be one of "" row "" , "" col "" , "" all "" , or "" none "" . "" all "" has the same effect as True , "" none "" has the same effect as False . If "" row "" , each subplot row will share a X axis . If "" col "" , each subplot column will share a X axis and the x tick labels on all but the last row will have visible set to False .|||If True , the X axis will be shared amongst all subplots ."
matplotlib.pyplot.subplots,sharey,"If True , the Y axis will be shared amongst all subplots .|||If True , the Y axis will be shared amongst all subplots . If True and you have multiple columns , the y tick labels on all but the first column of plots will have visible set to False If a string must be one of "" row "" , "" col "" , "" all "" , or "" none "" . "" all "" has the same effect as True , "" none "" has the same effect as False . If "" row "" , each subplot row will share a Y axis and the y tick labels on all but the first column will have visible set to False . If "" col "" , each subplot column will share a Y axis ."
matplotlib.pyplot.subplots,squeeze,"If True , extra dimensions are squeezed out from the returned axis object :|||If True , extra dimensions are squeezed out from the returned axis object : if only one subplot is constructed ( nrows=ncols=1 ) , the resulting single Axis object is returned as a scalar . for Nx1 or 1xN subplots , the returned object is a 1-d numpy object array of Axis objects are returned as numpy 1-d arrays . for NxM subplots with N>1 and M>1 are returned as a 2d array . If False , no squeezing at all is done : the returned axis object is always a 2-d array containing Axis instances , even if it ends up being 1x1 ."
matplotlib.pyplot.subplots,subplot_kw,Dict with keywords passed to the add_subplot ( ) call used to create each subplots .
matplotlib.pyplot.suptitle,fontproperties,Set the font properties that control the text .
matplotlib.pyplot.suptitle,horizontalalignment,The horizontal alignment of the text
matplotlib.pyplot.suptitle,position,"Set the ( x , y ) position of the text"
matplotlib.pyplot.suptitle,rotation_mode,set text rotation mode .
matplotlib.pyplot.suptitle,text,Set the text string s
matplotlib.pyplot.suptitle,verticalalignment,The vertical alignment of the text
matplotlib.pyplot.suptitle,x,The x location of the text in figure coords|||Set the x position of the text
matplotlib.pyplot.suptitle,y,The y location of the text in figure coords|||Set the y position of the text
matplotlib.pyplot.table,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.pyplot.table,agg_filter,set agg_filter fuction .
matplotlib.pyplot.table,alpha,Set the alpha value used for blending - not supported on all backends .
matplotlib.pyplot.table,anchor,anchor
matplotlib.pyplot.table,animated,Set the artist 's animation state .
matplotlib.pyplot.table,aspect,aspect
matplotlib.pyplot.table,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.pyplot.table,clip_box,Set the artist 's clip Bbox .
matplotlib.pyplot.table,clip_on,Set whether artist uses clipping .
matplotlib.pyplot.table,clip_path,"Set the artist 's clip path , which may be"
matplotlib.pyplot.table,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.pyplot.table,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.pyplot.table,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.pyplot.table,contains,Replace the contains test used by this artist .
matplotlib.pyplot.table,cursor_props,Set the cursor property as
matplotlib.pyplot.table,figure,Set the Figure instance the artist belongs to .
matplotlib.pyplot.table,gid,Sets the ( group ) id for the artist
matplotlib.pyplot.table,hatch,Set the hatching pattern
matplotlib.pyplot.table,label,Set the label to s for auto legend .
matplotlib.pyplot.table,linestyle,Set the patch linestyle
matplotlib.pyplot.table,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.pyplot.table,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.table,position,Set the axes position with
matplotlib.pyplot.table,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.pyplot.table,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.pyplot.table,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.pyplot.table,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.pyplot.table,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.table,snap,Sets the snap setting which may be
matplotlib.pyplot.table,title,Set a title for the axes .
matplotlib.pyplot.table,transform,Set the Transform instance used by this artist .
matplotlib.pyplot.table,url,Sets the url for the artist
matplotlib.pyplot.table,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.pyplot.table,visible,Set the artist 's visiblity .
matplotlib.pyplot.table,xlabel,Set the label for the xaxis .
matplotlib.pyplot.table,xlim,Set the data limits for the xaxis
matplotlib.pyplot.table,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.pyplot.table,xscale,Set the scaling of the x-axis
matplotlib.pyplot.table,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.pyplot.table,xticks,Set the x ticks with list of ticks
matplotlib.pyplot.table,ylabel,Set the label for the yaxis
matplotlib.pyplot.table,ylim,Set the data limits for the yaxis
matplotlib.pyplot.table,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.pyplot.table,yscale,Set the scaling of the y-axis
matplotlib.pyplot.table,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.pyplot.table,yticks,Set the y ticks with list of ticks
matplotlib.pyplot.table,zorder,Set the zorder for the artist .
matplotlib.pyplot.text,fontdict,"A dictionary to override the default text properties .|||A dictionary to override the default text properties . If fontdict is None , the defaults are determined by your rc parameters ."
matplotlib.pyplot.text,fontproperties,Set the font properties that control the text .
matplotlib.pyplot.text,kwargs,Other miscellaneous text parameters .
matplotlib.pyplot.text,position,"Set the ( x , y ) position of the text"
matplotlib.pyplot.text,rotation_mode,set text rotation mode .
matplotlib.pyplot.text,s,text
matplotlib.pyplot.text,text,Set the text string s
matplotlib.pyplot.text,withdash,Creates a TextWithDash instance instead of a Text instance .
matplotlib.pyplot.text,x,Set the x position of the text
matplotlib.pyplot.text,"x, y",data coordinates
matplotlib.pyplot.text,y,Set the y position of the text
matplotlib.pyplot.thetagrids,angles,angles is in degrees .
matplotlib.pyplot.thetagrids,fontproperties,Set the font properties that control the text .
matplotlib.pyplot.thetagrids,frac,"frac is the fraction of the polar axes radius at which to place the label ( 1 is the edge ) . e.g. , 1.05 is outside the axes and 0.95 is inside the axes .|||frac is the fraction of the polar axes radius at which to place the label ( 1 is the edge ) ."
matplotlib.pyplot.thetagrids,labels,"Note that on input , the labels argument is a list of strings , and on output it is a list of Text|||If no arguments are passed , return a tuple ( lines , labels ) where lines is an array of radial gridlines ( Line2D instances ) and labels is an array of tick labels ( Text instances ) :|||Return value is a list of tuples ( lines , labels ) :|||If labels is None , the labels will be fmt%angle .|||labels , if not None , is a len(angles ) list of strings of the labels to use at each angle .|||Note that on input , the labels argument is a list of strings , and on output it is a list of Text instances ."
matplotlib.pyplot.thetagrids,lines,"If no arguments are passed , return a tuple ( lines , labels ) where lines is an array of radial gridlines ( Line2D instances ) and labels is an array of tick labels ( Text instances ) :|||Return value is a list of tuples ( lines , labels ) :"
matplotlib.pyplot.thetagrids,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )"
matplotlib.pyplot.thetagrids,marker,Set the line marker
matplotlib.pyplot.thetagrids,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.thetagrids,position,"Set the ( x , y ) position of the text"
matplotlib.pyplot.thetagrids,rotation_mode,set text rotation mode .
matplotlib.pyplot.thetagrids,text,Set the text string s
matplotlib.pyplot.thetagrids,x,Set the x position of the text
matplotlib.pyplot.thetagrids,y,Set the y position of the text
matplotlib.pyplot.title,fontdict,"A dictionary controlling the appearance of the title text , the default fontdict is :"
matplotlib.pyplot.title,fontproperties,Set the font properties that control the text .
matplotlib.pyplot.title,kwargs,"Other keyword arguments are text properties , see Text for a list of valid text properties ."
matplotlib.pyplot.title,label,Text to use for the title
matplotlib.pyplot.title,loc,"Which title to set , defaults to ' center '"
matplotlib.pyplot.title,position,"Set the ( x , y ) position of the text"
matplotlib.pyplot.title,rotation_mode,set text rotation mode .
matplotlib.pyplot.title,text,Set the text string s
matplotlib.pyplot.title,x,Set the x position of the text
matplotlib.pyplot.title,y,Set the y position of the text
matplotlib.pyplot.tricontour,False,enable antialiasing
matplotlib.pyplot.tricontour,N,contour N automatically-chosen levels .
matplotlib.pyplot.tricontour,None,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified|||If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour .|||If linestyles is None , the ' solid ' is used .|||Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .|||If linestyles is None , the ' solid ' is used . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary . If contour is using a monochrome colormap and the contour level is less than 0 , then the linestyle specified in contour.negative_linestyle in matplotlibrc will be used .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||A cm Colormap instance or None .|||If None , the colormap specified by cmap will be used .|||A matplotlib.colors.Normalize instance for scaling data values to colors .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used .|||If locator is None , the default MaxNLocator is used ."
matplotlib.pyplot.tricontour,True,enable antialiasing
matplotlib.pyplot.tricontour,V,"draw contour lines at the values specified in sequence V , which must be in increasing order .|||fill the ( len(V ) - 1 ) regions between the values in V , which must be in increasing order ."
matplotlib.pyplot.tricontour,Z,"where Z is the array of values to contour , one per point in the triangulation . The level values are chosen automatically .|||where Z is the array of values to contour , one per point in the triangulation ."
matplotlib.pyplot.tricontour,alpha,The alpha blending value
matplotlib.pyplot.tricontour,antialiased,enable antialiasing
matplotlib.pyplot.tricontour,cmap,"A cm Colormap instance or None .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used ."
matplotlib.pyplot.tricontour,colors,"If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If None , the colormap specified by cmap will be used ."
matplotlib.pyplot.tricontour,extend,"Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included .|||Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included . These added ranges are then mapped to the special colormap values which default to the ends of the colormap range , but can be set via matplotlib.colors.Colormap.set_under ( ) and matplotlib.colors.Colormap.set_over ( ) methods ."
matplotlib.pyplot.tricontour,levels,"A list of floating point numbers indicating the level curves to draw , in increasing order ; e.g. , to draw just the zero contour pass levels=[0 ]"
matplotlib.pyplot.tricontour,linestyles,"If linestyles is None , the ' solid ' is used . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary . If contour is using a monochrome colormap and the contour level is less than 0 , then the linestyle specified in contour.negative_linestyle in matplotlibrc will be used .|||If linestyles is None , the ' solid ' is used ."
matplotlib.pyplot.tricontour,linewidths,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified"
matplotlib.pyplot.tricontour,locator,"If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||If locator is None , the default MaxNLocator is used ."
matplotlib.pyplot.tricontour,norm,"A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||A matplotlib.colors.Normalize instance for scaling data values to colors ."
matplotlib.pyplot.tricontour,origin,"If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour ."
matplotlib.pyplot.tricontour,xunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.pyplot.tricontour,yunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.pyplot.tricontour,z,"There is one exception : if the lowest boundary coincides with the minimum value of the z array , then that minimum value will be included in the lowest interval ."
matplotlib.pyplot.tricontour,z1,"Note : tricontourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.pyplot.tricontour,z2,"Note : tricontourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.pyplot.tricontourf,False,enable antialiasing
matplotlib.pyplot.tricontourf,N,contour N automatically-chosen levels .
matplotlib.pyplot.tricontourf,None,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified|||If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour .|||If linestyles is None , the ' solid ' is used .|||Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .|||If linestyles is None , the ' solid ' is used . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary . If contour is using a monochrome colormap and the contour level is less than 0 , then the linestyle specified in contour.negative_linestyle in matplotlibrc will be used .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||A cm Colormap instance or None .|||If None , the colormap specified by cmap will be used .|||A matplotlib.colors.Normalize instance for scaling data values to colors .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used .|||If locator is None , the default MaxNLocator is used ."
matplotlib.pyplot.tricontourf,True,enable antialiasing
matplotlib.pyplot.tricontourf,V,"draw contour lines at the values specified in sequence V , which must be in increasing order .|||fill the ( len(V ) - 1 ) regions between the values in V , which must be in increasing order ."
matplotlib.pyplot.tricontourf,Z,"where Z is the array of values to contour , one per point in the triangulation . The level values are chosen automatically .|||where Z is the array of values to contour , one per point in the triangulation ."
matplotlib.pyplot.tricontourf,alpha,The alpha blending value
matplotlib.pyplot.tricontourf,antialiased,enable antialiasing
matplotlib.pyplot.tricontourf,cmap,"A cm Colormap instance or None .|||A cm Colormap instance or None . If cmap is None and colors is None , a default Colormap is used ."
matplotlib.pyplot.tricontourf,colors,"If None , the colormap specified by cmap will be used . If a string , like ' r ' or ' red ' , all levels will be plotted in this color . If a tuple of matplotlib color args ( string , float , rgb , etc ) , different levels will be plotted in different colors in the order specified .|||If None , the colormap specified by cmap will be used ."
matplotlib.pyplot.tricontourf,extend,"Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included .|||Unless this is ' neither ' , contour levels are automatically added to one or both ends of the range so that all data are included . These added ranges are then mapped to the special colormap values which default to the ends of the colormap range , but can be set via matplotlib.colors.Colormap.set_under ( ) and matplotlib.colors.Colormap.set_over ( ) methods ."
matplotlib.pyplot.tricontourf,levels,"A list of floating point numbers indicating the level curves to draw , in increasing order ; e.g. , to draw just the zero contour pass levels=[0 ]"
matplotlib.pyplot.tricontourf,linestyles,"If linestyles is None , the ' solid ' is used . linestyles can also be an iterable of the above strings specifying a set of linestyles to be used . If this iterable is shorter than the number of contour levels it will be repeated as necessary . If contour is using a monochrome colormap and the contour level is less than 0 , then the linestyle specified in contour.negative_linestyle in matplotlibrc will be used .|||If linestyles is None , the ' solid ' is used ."
matplotlib.pyplot.tricontourf,linewidths,"If linewidths is None , the default width in lines.linewidth in matplotlibrc is used .|||If linewidths is None , the default width in lines.linewidth in matplotlibrc is used . If a number , all levels will be plotted with this linewidth . If a tuple , different levels will be plotted with different linewidths in the order specified"
matplotlib.pyplot.tricontourf,locator,"If locator is None , the default MaxNLocator is used . The locator is used to determine the contour levels if they are not given explicitly via the V argument .|||If locator is None , the default MaxNLocator is used ."
matplotlib.pyplot.tricontourf,norm,"A matplotlib.colors.Normalize instance for scaling data values to colors . If norm is None and colors is None , the default linear scaling is used .|||A matplotlib.colors.Normalize instance for scaling data values to colors ."
matplotlib.pyplot.tricontourf,origin,"If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) .|||If None , the first value of Z will correspond to the lower left corner , location ( 0,0 ) . If ' image ' , the rc value for image.origin will be used . This keyword is not active if X and Y are specified in the call to contour ."
matplotlib.pyplot.tricontourf,xunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.pyplot.tricontourf,yunits,Override axis units by specifying an instance of a matplotlib.units.ConversionInterface .
matplotlib.pyplot.tricontourf,z,"There is one exception : if the lowest boundary coincides with the minimum value of the z array , then that minimum value will be included in the lowest interval ."
matplotlib.pyplot.tricontourf,z1,"Note : tricontourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.pyplot.tricontourf,z2,"Note : tricontourf fills intervals that are closed at the top ; that is , for boundaries z1 and z2 , the filled region is :"
matplotlib.pyplot.tripcolor,C,"The next argument must be C , the array of color values , either one per point in the triangulation if color values are defined at points , or one per triangle in the triangulation if color values are defined at triangles . If there are the same number of points and triangles in the triangulation it is assumed that color values are defined at points ; to force the use of color values at triangles use the kwarg facecolors*=C instead of just * C .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X , Y and C may be masked arrays . If either C[i , j ] , or one of the vertices surrounding C[i,j ] ( X or Y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||C is the array of color values .|||MATLAB pcolor ( ) always discards the last row and column of C , but matplotlib displays the last row and column if X and Y are not specified , or if X and Y have one more row and column than C .|||X , Y and C may be masked arrays .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||The next argument must be C , the array of color values , either one per point in the triangulation if color values are defined at points , or one per triangle in the triangulation if color values are defined at triangles .|||Ideally the dimensions of X and Y should be one greater than those of C ; if the dimensions are the same , then the last row and column of C will be ignored ."
matplotlib.pyplot.tripcolor,C*(*y,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed ."
matplotlib.pyplot.tripcolor,None,"If None , the rc setting is used by default . If ' none ' , edges will not be visible . An mpl color or sequence of colors will set the edge color|||the alpha blending value|||vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||A matplotlib.colors.Colormap instance . If None , use rc settings .|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( ) .|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 .|||vmin and vmax are used in conjunction with norm to normalize luminance data .|||If None , the rc setting is used by default .|||A matplotlib.colors.Colormap instance ."
matplotlib.pyplot.tripcolor,X,"If either or both of X and Y are 1-D arrays or column vectors , they will be expanded as needed into the appropriate 2-D arrays , making a rectangular grid .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X , Y and C may be masked arrays . If either C[i , j ] , or one of the vertices surrounding C[i,j ] ( X or Y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :|||MATLAB pcolor ( ) always discards the last row and column of C , but matplotlib displays the last row and column if X and Y are not specified , or if X and Y have one more row and column than C .|||X , Y and C may be masked arrays .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||Ideally the dimensions of X and Y should be one greater than those of C ; if the dimensions are the same , then the last row and column of C will be ignored ."
matplotlib.pyplot.tripcolor,Y,"If either or both of X and Y are 1-D arrays or column vectors , they will be expanded as needed into the appropriate 2-D arrays , making a rectangular grid .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X , Y and C may be masked arrays . If either C[i , j ] , or one of the vertices surrounding C[i,j ] ( X or Y at [ i , j ] , [ i+1 , j ] , [ i , j+1],[i+1 , j+1 ] ) is masked , nothing is plotted .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :|||MATLAB pcolor ( ) always discards the last row and column of C , but matplotlib displays the last row and column if X and Y are not specified , or if X and Y have one more row and column than C .|||X , Y and C may be masked arrays .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||Ideally the dimensions of X and Y should be one greater than those of C ; if the dimensions are the same , then the last row and column of C will be ignored ."
matplotlib.pyplot.tripcolor,alpha,the alpha blending value|||Set the alpha tranparencies of the collection .
matplotlib.pyplot.tripcolor,cmap,"set the colormap for luminance data|||A matplotlib.colors.Colormap instance .|||A matplotlib.colors.Colormap instance . If None , use rc settings ."
matplotlib.pyplot.tripcolor,edgecolors,"If None , the rc setting is used by default . If ' none ' , edges will not be visible . An mpl color or sequence of colors will set the edge color|||If None , the rc setting is used by default ."
matplotlib.pyplot.tripcolor,facecolors*=C instead of just *C,"The next argument must be C , the array of color values , either one per point in the triangulation if color values are defined at points , or one per triangle in the triangulation if color values are defined at triangles . If there are the same number of points and triangles in the triangulation it is assumed that color values are defined at points ; to force the use of color values at triangles use the kwarg facecolors*=C instead of just * C .|||The next argument must be C , the array of color values , either one per point in the triangulation if color values are defined at points , or one per triangle in the triangulation if color values are defined at triangles ."
matplotlib.pyplot.tripcolor,ncolumns,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed ."
matplotlib.pyplot.tripcolor,norm,"set the normalization instance|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 . If None , defaults to normalize ( ) .|||An matplotlib.colors.Normalize instance is used to scale luminance data to 0,1 ."
matplotlib.pyplot.tripcolor,nrows,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed ."
matplotlib.pyplot.tripcolor,shading,"shading may be ' flat ' ( the default ) or ' gouraud ' .|||If ' faceted ' , a black grid is drawn around each rectangle ; if ' flat ' , edges are not drawn . Default is ' flat ' , contrary to MATLAB . This kwarg is deprecated ; please use ' edgecolors ' instead : shading='flat ' - - edgecolors='none ' shading='faceted - - edgecolors='k '|||If ' faceted ' , a black grid is drawn around each rectangle ; if ' flat ' , edges are not drawn .|||shading may be ' flat ' ( the default ) or ' gouraud ' . If shading is ' flat ' and C values are defined at points , the color values used for each triangle are from the mean C of the triangle 's three points . If shading is ' gouraud ' then color values must be defined at points ."
matplotlib.pyplot.tripcolor,snap,Whether to snap the mesh to pixel boundaries .|||Sets the snap setting which may be
matplotlib.pyplot.tripcolor,vmax,"vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.pyplot.tripcolor,vmin,"vmin and vmax are used in conjunction with norm to normalize luminance data . If either is None , it is autoscaled to the respective min or max of the color array C . If not None , vmin or vmax passed in here override any pre-existing values supplied in the norm instance .|||vmin and vmax are used in conjunction with norm to normalize luminance data ."
matplotlib.pyplot.tripcolor,x,"The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed . That is , C is taken as C*(*y , x ) .|||X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :|||The grid orientation follows the MATLAB convention : an array C with shape ( nrows , ncolumns ) is plotted with the column number as X and the row number as Y , increasing up ; hence it is plotted the way the array would be printed , except that the Y axis is reversed .|||Note that the column index corresponds to the x - coordinate , and the row index corresponds to y ; for details , see the Grid Orientation section below ."
matplotlib.pyplot.tripcolor,y,"X and Y , if given , specify the ( x , y ) coordinates of the colored quadrilaterals ; the quadrilateral for C[i,j ] has corners at :|||Note that the column index corresponds to the x - coordinate , and the row index corresponds to y ; for details , see the Grid Orientation section below ."
matplotlib.pyplot.triplot,args,"Plot lines and/or markers to the Axes .|||Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :"
matplotlib.pyplot.triplot,fmt,"If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :"
matplotlib.pyplot.triplot,scalex,"kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.triplot,scaley,"Autoscale the view limits using the data limits . You can selectively autoscale only a single axis , e.g. , the xaxis by setting scaley to False . The autoscaling preserves any axis direction reversal that has already been done .|||Autoscale the view limits using the data limits .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.triplot,x,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.triplot,y,"Plot lines and/or markers to the Axes . args is a variable length argument , allowing for multiple x , y pairs with an optional format string . For example , each of the following is legal :|||If not used with labeled data ( i.e. , without a data argument ) , an arbitrary number of x , y , fmt groups can be specified , as in :|||If x and/or y is 2-dimensional , then the corresponding columns will be plotted .|||Plot lines and/or markers to the Axes .|||kwargs scalex and scaley , if defined , are passed on to autoscale_view ( ) to determine whether the x and y axes are autoscaled ; the default is True ."
matplotlib.pyplot.twinx,ax,"Make a second axes that shares the x - axis .|||Make a second axes that shares the x - axis . The new axes will overlay ax ( or the current axes if ax is None ) . The ticks for ax2 will be placed on the right , and the ax2 instance is returned ."
matplotlib.pyplot.twinx,ax2,"Make a second axes that shares the x - axis .|||Make a second axes that shares the x - axis . The new axes will overlay ax ( or the current axes if ax is None ) . The ticks for ax2 will be placed on the right , and the ax2 instance is returned ."
matplotlib.pyplot.twinx,x,"Make a second axes that shares the x - axis .|||Make a second axes that shares the x - axis . The new axes will overlay ax ( or the current axes if ax is None ) . The ticks for ax2 will be placed on the right , and the ax2 instance is returned ."
matplotlib.pyplot.twiny,ax,"Make a second axes that shares the y - axis . The new axis will overlay ax ( or the current axes if ax is None ) . The ticks for ax2 will be placed on the top , and the ax2 instance is returned .|||Make a second axes that shares the y - axis ."
matplotlib.pyplot.twiny,ax2,"Make a second axes that shares the y - axis . The new axis will overlay ax ( or the current axes if ax is None ) . The ticks for ax2 will be placed on the top , and the ax2 instance is returned .|||Make a second axes that shares the y - axis ."
matplotlib.pyplot.twiny,y,"Make a second axes that shares the y - axis . The new axis will overlay ax ( or the current axes if ax is None ) . The ticks for ax2 will be placed on the top , and the ax2 instance is returned .|||Make a second axes that shares the y - axis ."
matplotlib.pyplot.violinplot,dataset,The input data .
matplotlib.pyplot.vlines,alpha,Set the alpha tranparencies of the collection .
matplotlib.pyplot.vlines,array,Set the image array from numpy array A
matplotlib.pyplot.vlines,clim,"set the norm limits for image scaling ; if vmin is a length2 sequence , interpret it as ( vmin , vmax ) which is used to support setp"
matplotlib.pyplot.vlines,color,Set the color(s ) of the line collection .
matplotlib.pyplot.vlines,contains,Replace the contains test used by this artist .
matplotlib.pyplot.vlines,edgecolor,Set the edgecolor(s ) of the collection .
matplotlib.pyplot.vlines,facecolor,Set the facecolor(s ) of the collection .
matplotlib.pyplot.vlines,hatch,Set the hatching pattern
matplotlib.pyplot.vlines,label,Set the label to s for auto legend .
matplotlib.pyplot.vlines,linestyle,Set the linestyle(s ) for the collection .
matplotlib.pyplot.vlines,linewidth,Set the linewidth(s ) for the collection .
matplotlib.pyplot.vlines,offset_position,Set how offsets are applied .
matplotlib.pyplot.vlines,offsets,Set the offsets for the collection .
matplotlib.pyplot.vlines,picker,Set the epsilon for picking used by this artist
matplotlib.pyplot.vlines,sketch_params,Sets the sketch parameters .
matplotlib.pyplot.vlines,x,x-indexes where to plot the lines .
matplotlib.pyplot.vlines,"ymin, ymax","Respective beginning and end of each line . If scalars are provided , all lines will have same length .|||Respective beginning and end of each line ."
matplotlib.pyplot.waitforbuttonpress,timeout,"This will return True is a key was pressed , False if a mouse button was pressed and None if timeout was reached without either being pressed .|||If timeout is negative , does not timeout ."
matplotlib.pyplot.xcorr,detrend,x is detrended by the detrend callable . Default is no normalization .|||x is detrended by the detrend callable .
matplotlib.pyplot.xcorr,linestyle,"Set the linestyle of the line ( also accepts drawstyles , e.g. , ' steps - - ' )|||Only used if usevlines is False ."
matplotlib.pyplot.xcorr,marker,Set the line marker
matplotlib.pyplot.xcorr,markevery,Set the markevery property to subsample the plot when using markers .
matplotlib.pyplot.xcorr,maxlags,"number of lags to show . If None , will return all 2 * len(x ) - 1 lags .|||number of lags to show ."
matplotlib.pyplot.xcorr,normed,"if True , normalize the data by the autocorrelation at the 0-th lag ."
matplotlib.pyplot.xcorr,usevlines,"if True , Axes.vlines is used to plot the vertical lines from the origin to the acorr . Otherwise , Axes.plot is used .|||if True , Axes.vlines is used to plot the vertical lines from the origin to the acorr ."
matplotlib.pyplot.xcorr,x,Plot the cross correlation between x and y .
matplotlib.pyplot.xcorr,y,Plot the cross correlation between x and y .
matplotlib.pyplot.xkcd,length,The length of the wiggle along the line .
matplotlib.pyplot.xkcd,randomness,The scale factor by which the length is shrunken or expanded .
matplotlib.pyplot.xkcd,scale,The amplitude of the wiggle perpendicular to the source line .
matplotlib.pyplot.xlabel,x,Set the x axis label of the current axis .
matplotlib.pyplot.xlim,x,Get or set the x limits of the current axes .
matplotlib.pyplot.xscale,x,Set the scaling of the x - axis .
matplotlib.pyplot.xticks,fontproperties,Set the font properties that control the text .
matplotlib.pyplot.xticks,position,"Set the ( x , y ) position of the text"
matplotlib.pyplot.xticks,rotation_mode,set text rotation mode .
matplotlib.pyplot.xticks,text,Set the text string s
matplotlib.pyplot.xticks,x,Set the x position of the text|||Get or set the x - limits of the current tick locations and labels .
matplotlib.pyplot.xticks,y,Set the y position of the text
matplotlib.pyplot.ylabel,y,Set the y axis label of the current axis .
matplotlib.pyplot.ylim,y,Get or set the y - limits of the current axes .
matplotlib.pyplot.ylim,ymax,"If you do not specify args , you can pass the ymin and ymax as kwargs , e.g. :"
matplotlib.pyplot.ylim,ymin,"If you do not specify args , you can pass the ymin and ymax as kwargs , e.g. :"
matplotlib.pyplot.yscale,y,Set the scaling of the y - axis .
matplotlib.pyplot.yticks,fontproperties,Set the font properties that control the text .
matplotlib.pyplot.yticks,position,"Set the ( x , y ) position of the text"
matplotlib.pyplot.yticks,rotation_mode,set text rotation mode .
matplotlib.pyplot.yticks,text,Set the text string s
matplotlib.pyplot.yticks,x,Set the x position of the text
matplotlib.pyplot.yticks,y,Set the y position of the text|||Get or set the y - limits of the current tick locations and labels .
matplotlib.rc,xtick,"Set the current rc params . Group is the grouping for the rc , e.g. , for lines.linewidth the group is lines , for axes.facecolor , the group is axes , and so on . Group may also be a list or tuple of group names , e.g. , ( xtick , ytick ) . kwargs is a dictionary attribute name/value pairs , e.g. , :|||Set the current rc params ."
matplotlib.rc,ytick,"Set the current rc params . Group is the grouping for the rc , e.g. , for lines.linewidth the group is lines , for axes.facecolor , the group is axes , and so on . Group may also be a list or tuple of group names , e.g. , ( xtick , ytick ) . kwargs is a dictionary attribute name/value pairs , e.g. , :|||Set the current rc params ."
matplotlib.rc_params_from_file,fail_on_error,"If True , raise an error when the parser fails to convert a parameter ."
matplotlib.rc_params_from_file,fname,Name of file parsed for matplotlib settings .
matplotlib.rc_params_from_file,use_default_template,"If True , initialize with default parameters before updating with those in the given file . If False , the configuration class only contains the parameters specified in the file . ( Useful for updating dicts . )|||If True , initialize with default parameters before updating with those in the given file ."
matplotlib.sankey.Sankey.add,_interpolation_steps,"Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing . This attribute is primarily an implementation detail and is not intended for public use .|||Used as a hint to certain projections , such as Polar , that this path should be linearly interpolated immediately before drawing ."
matplotlib.sankey.Sankey.add,agg_filter,set agg_filter fuction .
matplotlib.sankey.Sankey.add,alpha,Set the alpha tranparency of the patch .
matplotlib.sankey.Sankey.add,anchor,anchor
matplotlib.sankey.Sankey.add,animated,Set the artist 's animation state .
matplotlib.sankey.Sankey.add,antialiased,Set whether to use antialiased rendering
matplotlib.sankey.Sankey.add,aspect,aspect
matplotlib.sankey.Sankey.add,axes,"Set the Axes instance in which the artist resides , if any ."
matplotlib.sankey.Sankey.add,capstyle,Set the patch capstyle
matplotlib.sankey.Sankey.add,clip_box,Set the artist 's clip Bbox .
matplotlib.sankey.Sankey.add,clip_on,Set whether artist uses clipping .
matplotlib.sankey.Sankey.add,clip_path,"Set the artist 's clip path , which may be"
matplotlib.sankey.Sankey.add,closed,"If codes is None and closed is True , vertices will be treated as line segments of a closed polygon ."
matplotlib.sankey.Sankey.add,codes,"n-length array integers representing the codes of the path .|||n-length array integers representing the codes of the path . If not None , codes must be the same length as vertices . If None , vertices will be treated as a series of line segments ."
matplotlib.sankey.Sankey.add,color,Set both the edgecolor and the facecolor .
matplotlib.sankey.Sankey.add,color_cycle,Set the color cycle for any future plot commands on this Axes .
matplotlib.sankey.Sankey.add,connect,The indexing parameters ( prior and connect ) are zero-based .
matplotlib.sankey.Sankey.add,contains,Replace the contains test used by this artist .
matplotlib.sankey.Sankey.add,cursor_props,Set the cursor property as
matplotlib.sankey.Sankey.add,edgecolor,Set the patch edge color
matplotlib.sankey.Sankey.add,facecolor,Set the patch face color
matplotlib.sankey.Sankey.add,figure,Set the Figure instance the artist belongs to .
matplotlib.sankey.Sankey.add,fill,Set whether to fill the patch
matplotlib.sankey.Sankey.add,flows,The flows are placed along the top of the diagram from the inside out in order of their index within the flows list or array .|||The flows are placed along the top of the diagram from the inside out in order of their index within the flows list or array . They are placed along the sides of the diagram from the top down and along the bottom from the outside in .
matplotlib.sankey.Sankey.add,gid,Sets the ( group ) id for the artist
matplotlib.sankey.Sankey.add,hatch,Set the hatching pattern
matplotlib.sankey.Sankey.add,joinstyle,Set the patch joinstyle
matplotlib.sankey.Sankey.add,label,Set the label to s for auto legend .
matplotlib.sankey.Sankey.add,linestyle,Set the patch linestyle
matplotlib.sankey.Sankey.add,linewidth,Set the patch linewidth in points
matplotlib.sankey.Sankey.add,path_effects,"set path_effects , which should be a list of instances of matplotlib.patheffect._Base class or its derivatives ."
matplotlib.sankey.Sankey.add,picker,Set the epsilon for picking used by this artist
matplotlib.sankey.Sankey.add,position,Set the axes position with
matplotlib.sankey.Sankey.add,prior,The indexing parameters ( prior and connect ) are zero-based .
matplotlib.sankey.Sankey.add,prop_cycle,Set the property cycle for any future plot commands on this Axes .
matplotlib.sankey.Sankey.add,rasterized,Force rasterized ( bitmap ) drawing in vector backend output .
matplotlib.sankey.Sankey.add,readonly,Makes the path behave in an immutable way and sets the vertices and codes as read-only arrays .
matplotlib.sankey.Sankey.add,size_inches,Set the figure size in inches ( 1in = = 2.54cm )
matplotlib.sankey.Sankey.add,sketch_params,Sets the sketch parameters .
matplotlib.sankey.Sankey.add,snap,Sets the snap setting which may be
matplotlib.sankey.Sankey.add,title,Set a title for the axes .
matplotlib.sankey.Sankey.add,transform,Set the Transform instance used by this artist .
matplotlib.sankey.Sankey.add,url,Sets the url for the artist
matplotlib.sankey.Sankey.add,vertices,"The ( n , 2 ) float array , masked array or sequence of pairs representing the vertices of the path ."
matplotlib.sankey.Sankey.add,visible,Set the artist 's visiblity .
matplotlib.sankey.Sankey.add,xlabel,Set the label for the xaxis .
matplotlib.sankey.Sankey.add,xlim,Set the data limits for the xaxis
matplotlib.sankey.Sankey.add,xmargin,Set padding of X data limits prior to autoscaling .
matplotlib.sankey.Sankey.add,xscale,Set the scaling of the x-axis
matplotlib.sankey.Sankey.add,xticklabels,Set the xtick labels with list of strings labels .
matplotlib.sankey.Sankey.add,xticks,Set the x ticks with list of ticks
matplotlib.sankey.Sankey.add,ylabel,Set the label for the yaxis
matplotlib.sankey.Sankey.add,ylim,Set the data limits for the yaxis
matplotlib.sankey.Sankey.add,ymargin,Set padding of Y data limits prior to autoscaling .
matplotlib.sankey.Sankey.add,yscale,Set the scaling of the y-axis
matplotlib.sankey.Sankey.add,yticklabels,Set the y tick labels with list of strings labels .
matplotlib.sankey.Sankey.add,yticks,Set the y ticks with list of ticks
matplotlib.sankey.Sankey.add,zorder,Set the zorder for the artist .
matplotlib.style.context,after_reset,"If True , apply style after resetting settings to their defaults ; otherwise , apply style on top of the current settings ."
matplotlib.style.context,style,A style specification .|||A style specification . Valid options are :
matplotlib.style.use,style,A style specification .|||A style specification . Valid options are :
matplotlib.text.Annotation.draw,renderer,Draw the Annotation object to the given renderer .
matplotlib.text.Annotation.get_window_extent,dpi,"renderer defaults to the _ renderer attribute of the text object .|||renderer defaults to the _ renderer attribute of the text object . This is not assigned until the first execution of draw ( ) , so you must use this kwarg if you want to call get_window_extent ( ) prior to the first draw ( ) . For getting web page regions , it is simpler to call the method after saving the figure . The dpi used defaults to self.figure.dpi ; the renderer dpi is irrelevant ."
matplotlib.text.Annotation.get_window_extent,renderer,"renderer defaults to the _ renderer attribute of the text object .|||renderer defaults to the _ renderer attribute of the text object . This is not assigned until the first execution of draw ( ) , so you must use this kwarg if you want to call get_window_extent ( ) prior to the first draw ( ) . For getting web page regions , it is simpler to call the method after saving the figure . The dpi used defaults to self.figure.dpi ; the renderer dpi is irrelevant ."
matplotlib.text.Text.draw,renderer,Draws the Text object to the given renderer .
matplotlib.text.Text.get_position,x,"Return the position of the text as a tuple ( x , y )"
matplotlib.text.Text.get_position,y,"Return the position of the text as a tuple ( x , y )"
matplotlib.text.Text.get_unitless_position,x,"Return the unitless position of the text as a tuple ( x , y )"
matplotlib.text.Text.get_unitless_position,y,"Return the unitless position of the text as a tuple ( x , y )"
matplotlib.text.Text.get_window_extent,dpi,"dpi defaults to self.figure.dpi ; the renderer dpi is irrelevant . For the web application , if figure.dpi is not the value used when saving the figure , then the value that was used must be specified as the dpi argument .|||dpi defaults to self.figure.dpi ; the renderer dpi is irrelevant ."
matplotlib.text.Text.get_window_extent,renderer,"renderer defaults to the _ renderer attribute of the text object .|||renderer defaults to the _ renderer attribute of the text object . This is not assigned until the first execution of draw ( ) , so you must use this kwarg if you want to call get_window_extent ( ) prior to the first draw ( ) . For getting web page regions , it is simpler to call the method after saving the figure ."
matplotlib.text.Text.set_fontproperties,fontconfig_pattern,Set the properties by parsing a fontconfig pattern .
matplotlib.text.Text.set_fontproperties,fp,Set the font properties that control the text . fp must be a matplotlib.font_manager.FontProperties object .|||Set the font properties that control the text .
matplotlib.text.Text.set_position,x,"Set the ( x , y ) position of the text"
matplotlib.text.Text.set_position,y,"Set the ( x , y ) position of the text"
matplotlib.text.Text.set_rotation_mode,ha,"set text rotation mode .|||set text rotation mode . If "" anchor "" , the un-rotated text will first aligned according to their ha and va , and then will be rotated with the alignement reference point as a origin . If None ( default ) , the text will be rotated first then will be aligned ."
matplotlib.text.Text.set_rotation_mode,va,"set text rotation mode .|||set text rotation mode . If "" anchor "" , the un-rotated text will first aligned according to their ha and va , and then will be rotated with the alignement reference point as a origin . If None ( default ) , the text will be rotated first then will be aligned ."
matplotlib.text.Text.set_text,s,Set the text string s
matplotlib.text.Text.set_x,x,Set the x position of the text
matplotlib.text.Text.set_y,y,Set the y position of the text
matplotlib.text.TextWithDash.draw,renderer,Draw the TextWithDash object to the given renderer .
matplotlib.text.TextWithDash.get_position,x,"Return the position of the text as a tuple ( x , y )"
matplotlib.text.TextWithDash.get_position,y,"Return the position of the text as a tuple ( x , y )"
matplotlib.text.TextWithDash.get_unitless_position,x,"Return the unitless position of the text as a tuple ( x , y )"
matplotlib.text.TextWithDash.get_unitless_position,y,"Return the unitless position of the text as a tuple ( x , y )"
matplotlib.text.TextWithDash.get_window_extent,renderer,"renderer defaults to the _ renderer attribute of the text object .|||renderer defaults to the _ renderer attribute of the text object . This is not assigned until the first execution of draw ( ) , so you must use this kwarg if you want to call get_window_extent ( ) prior to the first draw ( ) . For getting web page regions , it is simpler to call the method after saving the figure ."
matplotlib.text.TextWithDash.set_position,x,"Set the ( x , y ) position of the TextWithDash ."
matplotlib.text.TextWithDash.set_position,y,"Set the ( x , y ) position of the TextWithDash ."
matplotlib.text.TextWithDash.set_x,x,Set the x position of the TextWithDash .
matplotlib.text.TextWithDash.set_y,y,Set the y position of the TextWithDash .
matplotlib.text.TextWithDash.update_coords,dashlength,"Computes the actual x , y coordinates for text based on the input x , y and the dashlength . Since the rotation is with respect to the actual canvas 's coordinates we need to map back and forth .|||Computes the actual x , y coordinates for text based on the input x , y and the dashlength ."
matplotlib.text.TextWithDash.update_coords,x,"Computes the actual x , y coordinates for text based on the input x , y and the dashlength . Since the rotation is with respect to the actual canvas 's coordinates we need to map back and forth .|||Computes the actual x , y coordinates for text based on the input x , y and the dashlength ."
matplotlib.text.TextWithDash.update_coords,y,"Computes the actual x , y coordinates for text based on the input x , y and the dashlength . Since the rotation is with respect to the actual canvas 's coordinates we need to map back and forth .|||Computes the actual x , y coordinates for text based on the input x , y and the dashlength ."
matplotlib.text.get_rotation,rotation,"rotation may be ' horizontal ' , ' vertical ' , or a numeric value in degrees ."
matplotlib.ticker.LogFormatter.base,base,change the base for labeling - warning : should always match the base used for LogLocator
matplotlib.tight_layout.auto_adjust_subplotpars,nrows_ncols,"Return a dictionary of subplot parameters so that spacing between subplots are adjusted .|||Return a dictionary of subplot parameters so that spacing between subplots are adjusted . Note that this function ignore geometry information of subplot itself , but uses what is given by nrows_ncols and num1num2_list parameteres . Also , the results could be incorrect if some subplots have adjustable=datalim ."
matplotlib.tight_layout.auto_adjust_subplotpars,num1num2_list,"Return a dictionary of subplot parameters so that spacing between subplots are adjusted .|||Return a dictionary of subplot parameters so that spacing between subplots are adjusted . Note that this function ignore geometry information of subplot itself , but uses what is given by nrows_ncols and num1num2_list parameteres . Also , the results could be incorrect if some subplots have adjustable=datalim ."
matplotlib.tri.CubicTriInterpolator,dz,"Used only if kind = ' user ' .|||Used only if kind = ' user ' . In this case dz must be provided as ( dzdx , dzdy ) where dzdx , dzdy are arrays of the same shape as z and are the interpolant first derivatives at the triangulation points ."
matplotlib.tri.CubicTriInterpolator,kind,"Choice of the smoothing algorithm , in order to compute the interpolant derivatives ( defaults to ' min_E ' ) :"
matplotlib.tri.CubicTriInterpolator,triangulation,The triangulation to interpolate over .
matplotlib.tri.CubicTriInterpolator,trifinder,"If not specified , the Triangulation 's default TriFinder will be used by calling matplotlib.tri.Triangulation.get_trifinder ( ) ."
matplotlib.tri.CubicTriInterpolator,z,"Array of values , defined at grid points , to interpolate between ."
matplotlib.tri.CubicTriInterpolator.__call__,"x, y",x and y coordinates of the same shape and any number of dimensions .
matplotlib.tri.CubicTriInterpolator.gradient,"x, y",x and y coordinates of the same shape and any number of dimensions .
matplotlib.tri.LinearTriInterpolator,triangulation,The triangulation to interpolate over .
matplotlib.tri.LinearTriInterpolator,trifinder,"If this is not specified , the Triangulation 's default TriFinder will be used by calling matplotlib.tri.Triangulation.get_trifinder ( ) ."
matplotlib.tri.LinearTriInterpolator,z,"Array of values , defined at grid points , to interpolate between ."
matplotlib.tri.LinearTriInterpolator.__call__,"x, y",x and y coordinates of the same shape and any number of dimensions .
matplotlib.tri.LinearTriInterpolator.gradient,"x, y",x and y coordinates of the same shape and any number of dimensions .
matplotlib.tri.TrapezoidMapTriFinder.__call__,x,"Returns integer array with the same shape and x and y .|||x , y are array_like x and y coordinates of the same shape and any number of dimensions ."
matplotlib.tri.TrapezoidMapTriFinder.__call__,y,"Returns integer array with the same shape and x and y .|||x , y are array_like x and y coordinates of the same shape and any number of dimensions ."
matplotlib.tri.TriAnalyzer,triangulation,The encapsulated triangulation to analyze .
matplotlib.tri.TriAnalyzer.circle_ratios,rescale,"If True , a rescaling will be internally performed ( based on scale_factors , so that the ( unmasked ) triangles fit exactly inside a unit square mesh .|||To avoid unduly low values due to a difference of scale between the 2 axis , the triangular mesh can first be rescaled to fit inside a unit square with scale_factors ( Only if rescale is True , which is its default value ) .|||If True , a rescaling will be internally performed ( based on scale_factors , so that the ( unmasked ) triangles fit exactly inside a unit square mesh . Default is True ."
matplotlib.tri.TriAnalyzer.get_flat_tri_mask,min_circle_ratio,"The rationale behind this function is that a Delaunay triangulation - of an unstructured set of points - sometimes contains almost flat triangles at its border , leading to artifacts in plots ( especially for high-resolution contouring ) .|||Border triangles with incircle/circumcircle radii ratio r/R will be removed if r/R < min_circle_ratio . Default value : 0.01|||The rationale behind this function is that a Delaunay triangulation - of an unstructured set of points - sometimes contains almost flat triangles at its border , leading to artifacts in plots ( especially for high-resolution contouring ) . Masked with computed new_mask , the encapsulated triangulation would contain no more unmasked border triangles with a circle ratio below min_circle_ratio , thus improving the mesh quality for subsequent plots or interpolation .|||Border triangles with incircle/circumcircle radii ratio r/R will be removed if r/R < min_circle_ratio ."
matplotlib.tri.TriAnalyzer.get_flat_tri_mask,new_mask,"Returns a mask new_mask which allows to clean the encapsulated triangulation from its border-located flat triangles ( according to their circle_ratios ( ) ) .|||The rationale behind this function is that a Delaunay triangulation - of an unstructured set of points - sometimes contains almost flat triangles at its border , leading to artifacts in plots ( especially for high-resolution contouring ) .|||Returns a mask new_mask which allows to clean the encapsulated triangulation from its border-located flat triangles ( according to their circle_ratios ( ) ) . This mask is meant to be subsequently applied to the triangulation using matplotlib.tri.Triangulation.set_mask ( ) . new_mask is an extension of the initial triangulation mask in the sense that an initially masked triangle will remain masked .|||The new_mask array is computed recursively ; at each step flat triangles are removed only if they share a side with the current mesh border .|||The rationale behind this function is that a Delaunay triangulation - of an unstructured set of points - sometimes contains almost flat triangles at its border , leading to artifacts in plots ( especially for high-resolution contouring ) . Masked with computed new_mask , the encapsulated triangulation would contain no more unmasked border triangles with a circle ratio below min_circle_ratio , thus improving the mesh quality for subsequent plots or interpolation .|||The new_mask array is computed recursively ; at each step flat triangles are removed only if they share a side with the current mesh border . Thus no new holes in the triangulated domain will be created ."
matplotlib.tri.TriAnalyzer.get_flat_tri_mask,rescale,"If True , a rescaling will first be internally performed ( based on scale_factors ) , so that the ( unmasked ) triangles fit exactly inside a unit square mesh . This rescaling accounts for the difference of scale which might exist between the 2 axis . Default ( and recommended ) value is True .|||If True , a rescaling will first be internally performed ( based on scale_factors ) , so that the ( unmasked ) triangles fit exactly inside a unit square mesh ."
matplotlib.tri.Triangulation,mask,Which triangles are masked out .
matplotlib.tri.Triangulation,triangles,"For each triangle , the indices of the three points that make up the triangle , ordered in an anticlockwise manner . If not specified , the Delaunay triangulation is calculated .|||For each triangle , the indices of the three points that make up the triangle , ordered in an anticlockwise manner ."
matplotlib.tri.Triangulation,"x, y",Coordinates of grid points .
matplotlib.tri.UniformTriRefiner,triangulation,The encapsulated triangulation ( to be refined )
matplotlib.tri.UniformTriRefiner.refine_field,refi_tri,"Returns refi_tri ( refined triangulation ) , refi_z ( interpolated values of the field at the node of the refined triangulation ) ."
matplotlib.tri.UniformTriRefiner.refine_field,refi_z,"Returns refi_tri ( refined triangulation ) , refi_z ( interpolated values of the field at the node of the refined triangulation ) ."
matplotlib.tri.UniformTriRefiner.refine_field,subdiv,Recursion level for the subdivision . Defaults to 3 . Each triangle will be divided into 4**subdiv child triangles .|||Recursion level for the subdivision .
matplotlib.tri.UniformTriRefiner.refine_field,triinterpolator,"Interpolator used for field interpolation .|||Interpolator used for field interpolation . If not specified , a CubicTriInterpolator will be used ."
matplotlib.tri.UniformTriRefiner.refine_field,z,"Values of the field to refine , defined at the nodes of the encapsulated triangulation . ( n_points is the number of points in the initial triangulation )|||Values of the field to refine , defined at the nodes of the encapsulated triangulation ."
matplotlib.tri.UniformTriRefiner.refine_triangulation,refi_triangulation,Computes an uniformly refined triangulation refi_triangulation of the encapsulated triangulation .
matplotlib.tri.UniformTriRefiner.refine_triangulation,return_tri_index,Boolean indicating whether an index table indicating the father triangle index of each point will be returned .|||Boolean indicating whether an index table indicating the father triangle index of each point will be returned . Default value False .
matplotlib.tri.UniformTriRefiner.refine_triangulation,subdiv,"This function refines the encapsulated triangulation by splitting each father triangle into 4 child sub-triangles built on the edges midside nodes , recursively ( level of recursion subdiv ) .|||Recursion level for the subdivision .|||This function refines the encapsulated triangulation by splitting each father triangle into 4 child sub-triangles built on the edges midside nodes , recursively ( level of recursion subdiv ) . In the end , each triangle is hence divided into 4**subdiv child triangles . The default value for subdiv is 3 resulting in 64 refined subtriangles for each triangle of the initial triangulation .|||Recursion level for the subdivision . Defaults value 3 . Each triangle will be divided into 4**subdiv child triangles ."
matplotlib.type1font.Type1Font.transform,effects,Transform the font by slanting or extending . effects should be a dict where effects [ ' slant ' ] is the tangent of the angle that the font is to be slanted to the right ( so negative values slant to the left ) and effects['extend ' ] is the multiplier by which the font is to be extended ( so values less than 1.0 condense ) . Returns a new Type1Font object .|||Transform the font by slanting or extending .
matplotlib.use,force,The argument is case-insensitive .|||The argument is case-insensitive . warn specifies whether a warning should be issued if a backend has already been set up . force is an experimental flag that tells matplotlib to attempt to initialize a new backend by reloading the backend module .
matplotlib.use,warn,The argument is case-insensitive .|||The argument is case-insensitive . warn specifies whether a warning should be issued if a backend has already been set up . force is an experimental flag that tells matplotlib to attempt to initialize a new backend by reloading the backend module .
matplotlib.widgets.Button,ax,The matplotlib.axes.Axes instance the button will be placed into .
matplotlib.widgets.Button,color,The color of the button when not activated
matplotlib.widgets.Button,hovercolor,The color of the button when the mouse is over it
matplotlib.widgets.Button,image,"The image to place in the button , if not None . Can be any legal arg to imshow ( numpy array , matplotlib Image instance , or Pillow Image ) .|||The image to place in the button , if not None ."
matplotlib.widgets.Button,label,The button text . Accepts string .|||The button text .
matplotlib.widgets.Button.disconnect,cid,remove the observer with connection id cid
matplotlib.widgets.Button.on_clicked,func,"When the button is clicked , call this func with event ."
matplotlib.widgets.CheckButtons.disconnect,cid,remove the observer with connection id cid
matplotlib.widgets.CheckButtons.on_clicked,func,"When the button is clicked , call func with button label"
matplotlib.widgets.LockDraw.available,o,drawing is available to o
matplotlib.widgets.LockDraw.isowner,o,Return True if o owns this lock
matplotlib.widgets.RadioButtons.disconnect,cid,remove the observer with connection id cid
matplotlib.widgets.RadioButtons.on_clicked,func,"When the button is clicked , call func with button label"
matplotlib.widgets.Slider,ax,The Axes to put the slider in
matplotlib.widgets.Slider,closedmax,Indicate whether the slider interval is closed on the top
matplotlib.widgets.Slider,closedmin,Indicate whether the slider interval is closed on the bottom
matplotlib.widgets.Slider,dragging,if the slider can be dragged by the mouse
matplotlib.widgets.Slider,label,Slider label|||The slider label
matplotlib.widgets.Slider,slidermax,Do not allow the current slider to have a value greater than slidermax
matplotlib.widgets.Slider,slidermin,Do not allow the current slider to have a value less than slidermin
matplotlib.widgets.Slider,valfmt,"Used to format the slider value , fprint format string"
matplotlib.widgets.Slider,valinit,The slider initial position
matplotlib.widgets.Slider,valmax,The maximum value of the slider
matplotlib.widgets.Slider,valmin,The minimum value of the slider
matplotlib.widgets.Slider.disconnect,cid,remove the observer with connection id cid
matplotlib.widgets.Slider.on_changed,func,"When the slider value is changed , call func with the new slider position"
matplotlib.widgets.SpanSelector.ignore,event,return True if event should be ignored
matplotlib.widgets.ToolHandles,ax,Matplotlib axes where tool handles are displayed .
matplotlib.widgets.ToolHandles,marker,Shape of marker used to display handle . See matplotlib.pyplot.plot .|||Shape of marker used to display handle .
matplotlib.widgets.ToolHandles,marker_props,Additional marker properties .|||Additional marker properties . See matplotlib.lines.Line2D .
matplotlib.widgets.ToolHandles,"x, y",Coordinates of control handles .
